

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 12 20:32:21 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   156                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   157                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   158                           	dabs	1,0xD00,48,_BDT
   159                           	dabs	1,0xD38,8,_CtrlTrfData
   160                           	dabs	1,0xD30,8,_SetupPkt
   161  0000                     
   162                           	psect	idataBANK1
   163  01745A                     __pidataBANK1:
   164                           	opt stack 0
   165                           
   166                           ;initializer for I2C_LCD_SetCursor@F8672
   167  01745A  00                 	db	0
   168  01745B  40                 	db	64
   169                           
   170                           ;initializer for epoch_to_caltime@month_cache
   171  01745C  01                 	db	1
   172                           
   173                           	psect	mediumconst
   174  00F95E                     __pmediumconst:
   175                           	opt stack 0
   176  00F95E  00                 	db	0
   177  00F95F                     _dpowers:
   178                           	opt stack 0
   179  00F95F  0001               	dw	1
   180  00F961  0000               	dw	0
   181  00F963  000A               	dw	10
   182  00F965  0000               	dw	0
   183  00F967  0064               	dw	100
   184  00F969  0000               	dw	0
   185  00F96B  03E8               	dw	1000
   186  00F96D  0000               	dw	0
   187  00F96F  2710               	dw	10000
   188  00F971  0000               	dw	0
   189  00F973  86A0               	dw	34464
   190  00F975  0001               	dw	1
   191  00F977  4240               	dw	16960
   192  00F979  000F               	dw	15
   193  00F97B  9680               	dw	38528
   194  00F97D  0098               	dw	152
   195  00F97F  E100               	dw	57600
   196  00F981  05F5               	dw	1525
   197  00F983  CA00               	dw	51712
   198  00F985  3B9A               	dw	15258
   199  00F987                     __end_of_dpowers:
   200                           	opt stack 0
   201  00F987                     _USB_SD_Ptr:
   202                           	opt stack 0
   203  00F987  F0                 	db	low _sd000
   204  00F988  FA                 	db	high _sd000
   205  00F989  4A                 	db	low _sd001
   206  00F98A  FA                 	db	high _sd001
   207  00F98B  7E                 	db	low _sd002
   208  00F98C  FA                 	db	high _sd002
   209  00F98D                     __end_of_USB_SD_Ptr:
   210                           	opt stack 0
   211  00F98D                     _USB_CD_Ptr:
   212                           	opt stack 0
   213  00F98D  07                 	db	low _configDescriptor1
   214  00F98E  FA                 	db	high _configDescriptor1
   215  00F98F                     __end_of_USB_CD_Ptr:
   216                           	opt stack 0
   217  00F98F                     display_port@port_char:
   218                           	opt stack 0
   219  00F98F  4C                 	db	76
   220  00F990  45                 	db	69
   221  00F991  46                 	db	70
   222  00F992  54                 	db	84
   223  00F993  20                 	db	32
   224  00F994  50                 	db	80
   225  00F995  4F                 	db	79
   226  00F996  52                 	db	82
   227  00F997  54                 	db	84
   228  00F998  00                 	db	0
   229  00F999  00                 	db	0
   230  00F99A  00                 	db	0
   231  00F99B  00                 	db	0
   232  00F99C  00                 	db	0
   233  00F99D  00                 	db	0
   234  00F99E  00                 	db	0
   235  00F99F  00                 	db	0
   236  00F9A0  00                 	db	0
   237  00F9A1  00                 	db	0
   238  00F9A2  00                 	db	0
   239  00F9A3  43                 	db	67
   240  00F9A4  45                 	db	69
   241  00F9A5  4E                 	db	78
   242  00F9A6  54                 	db	84
   243  00F9A7  45                 	db	69
   244  00F9A8  52                 	db	82
   245  00F9A9  20                 	db	32
   246  00F9AA  50                 	db	80
   247  00F9AB  4F                 	db	79
   248  00F9AC  52                 	db	82
   249  00F9AD  54                 	db	84
   250  00F9AE  00                 	db	0
   251  00F9AF  00                 	db	0
   252  00F9B0  00                 	db	0
   253  00F9B1  00                 	db	0
   254  00F9B2  00                 	db	0
   255  00F9B3  00                 	db	0
   256  00F9B4  00                 	db	0
   257  00F9B5  00                 	db	0
   258  00F9B6  00                 	db	0
   259  00F9B7  52                 	db	82
   260  00F9B8  49                 	db	73
   261  00F9B9  47                 	db	71
   262  00F9BA  48                 	db	72
   263  00F9BB  54                 	db	84
   264  00F9BC  20                 	db	32
   265  00F9BD  50                 	db	80
   266  00F9BE  4F                 	db	79
   267  00F9BF  52                 	db	82
   268  00F9C0  54                 	db	84
   269  00F9C1  00                 	db	0
   270  00F9C2  00                 	db	0
   271  00F9C3  00                 	db	0
   272  00F9C4  00                 	db	0
   273  00F9C5  00                 	db	0
   274  00F9C6  00                 	db	0
   275  00F9C7  00                 	db	0
   276  00F9C8  00                 	db	0
   277  00F9C9  00                 	db	0
   278  00F9CA  00                 	db	0
   279  00F9CB  4C                 	db	76
   280  00F9CC  65                 	db	101
   281  00F9CD  66                 	db	102
   282  00F9CE  74                 	db	116
   283  00F9CF  20                 	db	32
   284  00F9D0  50                 	db	80
   285  00F9D1  6F                 	db	111
   286  00F9D2  72                 	db	114
   287  00F9D3  74                 	db	116
   288  00F9D4  00                 	db	0
   289  00F9D5  00                 	db	0
   290  00F9D6  00                 	db	0
   291  00F9D7  00                 	db	0
   292  00F9D8  00                 	db	0
   293  00F9D9  00                 	db	0
   294  00F9DA  00                 	db	0
   295  00F9DB  00                 	db	0
   296  00F9DC  00                 	db	0
   297  00F9DD  00                 	db	0
   298  00F9DE  00                 	db	0
   299  00F9DF  43                 	db	67
   300  00F9E0  65                 	db	101
   301  00F9E1  6E                 	db	110
   302  00F9E2  74                 	db	116
   303  00F9E3  65                 	db	101
   304  00F9E4  72                 	db	114
   305  00F9E5  20                 	db	32
   306  00F9E6  50                 	db	80
   307  00F9E7  6F                 	db	111
   308  00F9E8  72                 	db	114
   309  00F9E9  74                 	db	116
   310  00F9EA  00                 	db	0
   311  00F9EB  00                 	db	0
   312  00F9EC  00                 	db	0
   313  00F9ED  00                 	db	0
   314  00F9EE  00                 	db	0
   315  00F9EF  00                 	db	0
   316  00F9F0  00                 	db	0
   317  00F9F1  00                 	db	0
   318  00F9F2  00                 	db	0
   319  00F9F3  52                 	db	82
   320  00F9F4  69                 	db	105
   321  00F9F5  67                 	db	103
   322  00F9F6  68                 	db	104
   323  00F9F7  74                 	db	116
   324  00F9F8  20                 	db	32
   325  00F9F9  50                 	db	80
   326  00F9FA  6F                 	db	111
   327  00F9FB  72                 	db	114
   328  00F9FC  74                 	db	116
   329  00F9FD  00                 	db	0
   330  00F9FE  00                 	db	0
   331  00F9FF  00                 	db	0
   332  00FA00  00                 	db	0
   333  00FA01  00                 	db	0
   334  00FA02  00                 	db	0
   335  00FA03  00                 	db	0
   336  00FA04  00                 	db	0
   337  00FA05  00                 	db	0
   338  00FA06  00                 	db	0
   339  00FA07                     __end_ofdisplay_port@port_char:
   340                           	opt stack 0
   341  00FA07                     _configDescriptor1:
   342                           	opt stack 0
   343  00FA07  09                 	db	9
   344  00FA08  02                 	db	2
   345  00FA09  43                 	db	67
   346  00FA0A  00                 	db	0
   347  00FA0B  02                 	db	2
   348  00FA0C  01                 	db	1
   349  00FA0D  00                 	db	0
   350  00FA0E  C0                 	db	192
   351  00FA0F  32                 	db	50
   352  00FA10  09                 	db	9
   353  00FA11  04                 	db	4
   354  00FA12  00                 	db	0
   355  00FA13  00                 	db	0
   356  00FA14  01                 	db	1
   357  00FA15  02                 	db	2
   358  00FA16  02                 	db	2
   359  00FA17  01                 	db	1
   360  00FA18  00                 	db	0
   361  00FA19  05                 	db	5
   362  00FA1A  24                 	db	36
   363  00FA1B  00                 	db	0
   364  00FA1C  10                 	db	16
   365  00FA1D  01                 	db	1
   366  00FA1E  04                 	db	4
   367  00FA1F  24                 	db	36
   368  00FA20  02                 	db	2
   369  00FA21  02                 	db	2
   370  00FA22  05                 	db	5
   371  00FA23  24                 	db	36
   372  00FA24  06                 	db	6
   373  00FA25  00                 	db	0
   374  00FA26  01                 	db	1
   375  00FA27  05                 	db	5
   376  00FA28  24                 	db	36
   377  00FA29  01                 	db	1
   378  00FA2A  00                 	db	0
   379  00FA2B  01                 	db	1
   380  00FA2C  07                 	db	7
   381  00FA2D  05                 	db	5
   382  00FA2E  81                 	db	129
   383  00FA2F  03                 	db	3
   384  00FA30  08                 	db	8
   385  00FA31  00                 	db	0
   386  00FA32  02                 	db	2
   387  00FA33  09                 	db	9
   388  00FA34  04                 	db	4
   389  00FA35  01                 	db	1
   390  00FA36  00                 	db	0
   391  00FA37  02                 	db	2
   392  00FA38  0A                 	db	10
   393  00FA39  00                 	db	0
   394  00FA3A  00                 	db	0
   395  00FA3B  00                 	db	0
   396  00FA3C  07                 	db	7
   397  00FA3D  05                 	db	5
   398  00FA3E  02                 	db	2
   399  00FA3F  02                 	db	2
   400  00FA40  40                 	db	64
   401  00FA41  00                 	db	0
   402  00FA42  00                 	db	0
   403  00FA43  07                 	db	7
   404  00FA44  05                 	db	5
   405  00FA45  82                 	db	130
   406  00FA46  02                 	db	2
   407  00FA47  40                 	db	64
   408  00FA48  00                 	db	0
   409  00FA49  00                 	db	0
   410  00FA4A                     __end_of_configDescriptor1:
   411                           	opt stack 0
   412  00FA4A                     _sd001:
   413                           	opt stack 0
   414  00FA4A  34                 	db	52
   415  00FA4B  03                 	db	3
   416  00FA4C  004D               	dw	77
   417  00FA4E  0069               	dw	105
   418  00FA50  0063               	dw	99
   419  00FA52  0072               	dw	114
   420  00FA54  006F               	dw	111
   421  00FA56  0063               	dw	99
   422  00FA58  0068               	dw	104
   423  00FA5A  0069               	dw	105
   424  00FA5C  0070               	dw	112
   425  00FA5E  0020               	dw	32
   426  00FA60  0054               	dw	84
   427  00FA62  0065               	dw	101
   428  00FA64  0063               	dw	99
   429  00FA66  0068               	dw	104
   430  00FA68  006E               	dw	110
   431  00FA6A  006F               	dw	111
   432  00FA6C  006C               	dw	108
   433  00FA6E  006F               	dw	111
   434  00FA70  0067               	dw	103
   435  00FA72  0079               	dw	121
   436  00FA74  0020               	dw	32
   437  00FA76  0049               	dw	73
   438  00FA78  006E               	dw	110
   439  00FA7A  0063               	dw	99
   440  00FA7C  002E               	dw	46
   441  00FA7E                     __end_of_sd001:
   442                           	opt stack 0
   443  00FA7E                     _sd002:
   444                           	opt stack 0
   445  00FA7E  34                 	db	52
   446  00FA7F  03                 	db	3
   447  00FA80  0043               	dw	67
   448  00FA82  0044               	dw	68
   449  00FA84  0043               	dw	67
   450  00FA86  0020               	dw	32
   451  00FA88  0052               	dw	82
   452  00FA8A  0053               	dw	83
   453  00FA8C  002D               	dw	45
   454  00FA8E  0032               	dw	50
   455  00FA90  0033               	dw	51
   456  00FA92  0032               	dw	50
   457  00FA94  0020               	dw	32
   458  00FA96  0045               	dw	69
   459  00FA98  006D               	dw	109
   460  00FA9A  0075               	dw	117
   461  00FA9C  006C               	dw	108
   462  00FA9E  0061               	dw	97
   463  00FAA0  0074               	dw	116
   464  00FAA2  0069               	dw	105
   465  00FAA4  006F               	dw	111
   466  00FAA6  006E               	dw	110
   467  00FAA8  0020               	dw	32
   468  00FAAA  0044               	dw	68
   469  00FAAC  0065               	dw	101
   470  00FAAE  006D               	dw	109
   471  00FAB0  006F               	dw	111
   472  00FAB2                     __end_of_sd002:
   473                           	opt stack 0
   474  00FAB2                     _weekday_3char:
   475                           	opt stack 0
   476  00FAB2  53                 	db	83
   477  00FAB3  55                 	db	85
   478  00FAB4  4E                 	db	78
   479  00FAB5  00                 	db	0
   480  00FAB6  4D                 	db	77
   481  00FAB7  4F                 	db	79
   482  00FAB8  4E                 	db	78
   483  00FAB9  00                 	db	0
   484  00FABA  54                 	db	84
   485  00FABB  55                 	db	85
   486  00FABC  45                 	db	69
   487  00FABD  00                 	db	0
   488  00FABE  57                 	db	87
   489  00FABF  45                 	db	69
   490  00FAC0  44                 	db	68
   491  00FAC1  00                 	db	0
   492  00FAC2  54                 	db	84
   493  00FAC3  48                 	db	72
   494  00FAC4  55                 	db	85
   495  00FAC5  00                 	db	0
   496  00FAC6  46                 	db	70
   497  00FAC7  52                 	db	82
   498  00FAC8  49                 	db	73
   499  00FAC9  00                 	db	0
   500  00FACA  53                 	db	83
   501  00FACB  41                 	db	65
   502  00FACC  54                 	db	84
   503  00FACD  00                 	db	0
   504  00FACE                     __end_of_weekday_3char:
   505                           	opt stack 0
   506  00FACE                     _device_dsc:
   507                           	opt stack 0
   508  00FACE  12                 	db	18
   509  00FACF  01                 	db	1
   510  00FAD0  0200               	dw	512
   511  00FAD2  02                 	db	2
   512  00FAD3  00                 	db	0
   513  00FAD4  00                 	db	0
   514  00FAD5  08                 	db	8
   515  00FAD6  04D8               	dw	1240
   516  00FAD8  000A               	dw	10
   517  00FADA  0100               	dw	256
   518  00FADC  01                 	db	1
   519  00FADD  02                 	db	2
   520  00FADE  00                 	db	0
   521  00FADF  01                 	db	1
   522  00FAE0                     __end_of_device_dsc:
   523                           	opt stack 0
   524  00FAE0                     display_port@onoff:
   525                           	opt stack 0
   526  00FAE0  4F                 	db	79
   527  00FAE1  46                 	db	70
   528  00FAE2  46                 	db	70
   529  00FAE3  00                 	db	0
   530  00FAE4  00                 	db	0
   531  00FAE5  4F                 	db	79
   532  00FAE6  4E                 	db	78
   533  00FAE7  00                 	db	0
   534  00FAE8  00                 	db	0
   535  00FAE9  00                 	db	0
   536  00FAEA                     __end_ofdisplay_port@onoff:
   537                           	opt stack 0
   538  00FAEA                     normal_loop@p:
   539                           	opt stack 0
   540  00FAEA  4C                 	db	76
   541  00FAEB  00                 	db	0
   542  00FAEC  43                 	db	67
   543  00FAED  00                 	db	0
   544  00FAEE  52                 	db	82
   545  00FAEF  00                 	db	0
   546  00FAF0                     __end_ofnormal_loop@p:
   547                           	opt stack 0
   548  00FAF0                     _sd000:
   549                           	opt stack 0
   550  00FAF0  04                 	db	4
   551  00FAF1  03                 	db	3
   552  00FAF2  0409               	dw	1033
   553  00FAF4                     __end_of_sd000:
   554                           	opt stack 0
   555  0000                     _ANCON0	set	3912
   556  0000                     _ANCON1	set	3913
   557  0000                     _PADCFG1bits	set	3900
   558  0000                     _RTCCAL	set	3902
   559  0000                     _RTCCFGbits	set	3903
   560  0000                     _RTCVALH	set	3899
   561  0000                     _RTCVALL	set	3898
   562  0000                     _T5CONbits	set	3874
   563  0000                     _UADDR	set	3896
   564  0000                     _UCFG	set	3897
   565  0000                     _UEIE	set	3895
   566  0000                     _UEP0bits	set	3878
   567  0000                     _UIE	set	3894
   568  0000                     _UIEbits	set	3894
   569  0000                     _UEP0	set	3878
   570  0000                     _UEP1	set	3879
   571  0000                     _ADRES	set	4035
   572  0000                     _ADCON0bits	set	4034
   573  0000                     _ADCON1bits	set	4033
   574  0000                     _BAUDCON1bits	set	3966
   575  0000                     _CTMUCONH	set	4019
   576  0000                     _CTMUCONHbits	set	4019
   577  0000                     _CTMUCONL	set	4018
   578  0000                     _CTMUCONLbits	set	4018
   579  0000                     _CTMUICON	set	4017
   580  0000                     _EECON2	set	4007
   581  0000                     _INTCON2bits	set	4081
   582  0000                     _INTCONbits	set	4082
   583  0000                     _IPR1bits	set	3999
   584  0000                     _IPR2bits	set	4002
   585  0000                     _IPR5bits	set	3993
   586  0000                     _OSCCONbits	set	4051
   587  0000                     _OSCTUNEbits	set	3995
   588  0000                     _PIE1bits	set	3997
   589  0000                     _PIE2bits	set	4000
   590  0000                     _PIE5bits	set	3985
   591  0000                     _PIR1bits	set	3998
   592  0000                     _PIR2bits	set	4001
   593  0000                     _PIR5bits	set	3992
   594  0000                     _RCONbits	set	4048
   595  0000                     _RCREG1	set	4015
   596  0000                     _RCSTA1bits	set	4012
   597  0000                     _SPBRG1	set	4016
   598  0000                     _SPBRGH1	set	3967
   599  0000                     _SSP1ADD	set	4040
   600  0000                     _SSP1BUF	set	4041
   601  0000                     _SSP1CON1	set	4038
   602  0000                     _SSP1CON2	set	4037
   603  0000                     _SSP1CON2bits	set	4037
   604  0000                     _SSP1STAT	set	4039
   605  0000                     _T0CONbits	set	4053
   606  0000                     _T1CONbits	set	4045
   607  0000                     _T3CONbits	set	3961
   608  0000                     _TMR1H	set	4047
   609  0000                     _TRISA	set	3986
   610  0000                     _TRISB	set	3987
   611  0000                     _TRISC	set	3988
   612  0000                     _TXREG1	set	4014
   613  0000                     _TXSTA1bits	set	4013
   614  0000                     _UCON	set	3941
   615  0000                     _UCONbits	set	3941
   616  0000                     _UEIR	set	3939
   617  0000                     _UIR	set	3938
   618  0000                     _UIRbits	set	3938
   619  0000                     _USTAT	set	3940
   620  0000                     _BCL1IF	set	32011
   621  0000                     _LATA5	set	31821
   622  0000                     _LATA6	set	31822
   623  0000                     _LATA7	set	31823
   624  0000                     _LATB2	set	31826
   625  0000                     _LATB6	set	31830
   626  0000                     _LATB7	set	31831
   627  0000                     _LATC2	set	31834
   628  0000                     _SSP1IF	set	31987
   629  00FAF4                     STR_41:
   630  00FAF4  09                 	db	9
   631  00FAF5  2A                 	db	42
   632  00FAF6  2A                 	db	42
   633  00FAF7  2A                 	db	42
   634  00FAF8  2A                 	db	42
   635  00FAF9  2A                 	db	42
   636  00FAFA  2A                 	db	42
   637  00FAFB  2A                 	db	42
   638  00FAFC  2A                 	db	42
   639  00FAFD  2A                 	db	42
   640  00FAFE  2A                 	db	42
   641  00FAFF  2A                 	db	42
   642  00FB00  2A                 	db	42
   643  00FB01  2A                 	db	42
   644  00FB02  2A                 	db	42
   645  00FB03  2A                 	db	42
   646  00FB04  2A                 	db	42
   647  00FB05  2A                 	db	42
   648  00FB06  2A                 	db	42
   649  00FB07  2A                 	db	42
   650  00FB08  2A                 	db	42
   651  00FB09  2A                 	db	42
   652  00FB0A  2A                 	db	42
   653  00FB0B  2A                 	db	42
   654  00FB0C  2A                 	db	42
   655  00FB0D  2A                 	db	42
   656  00FB0E  2A                 	db	42
   657  00FB0F  2A                 	db	42
   658  00FB10  2A                 	db	42
   659  00FB11  0A                 	db	10
   660  00FB12  09                 	db	9
   661  00FB13  2A                 	db	42
   662  00FB14  2A                 	db	42
   663  00FB15  2A                 	db	42
   664  00FB16  2A                 	db	42
   665  00FB17  20                 	db	32
   666  00FB18  43                 	db	67	;'C'
   667  00FB19  68                 	db	104	;'h'
   668  00FB1A  61                 	db	97	;'a'
   669  00FB1B  72                 	db	114	;'r'
   670  00FB1C  67                 	db	103	;'g'
   671  00FB1D  65                 	db	101	;'e'
   672  00FB1E  20                 	db	32
   673  00FB1F  53                 	db	83	;'S'
   674  00FB20  74                 	db	116	;'t'
   675  00FB21  61                 	db	97	;'a'
   676  00FB22  74                 	db	116	;'t'
   677  00FB23  69                 	db	105	;'i'
   678  00FB24  6F                 	db	111	;'o'
   679  00FB25  6E                 	db	110	;'n'
   680  00FB26  20                 	db	32
   681  00FB27  36                 	db	54	;'6'
   682  00FB28  2E                 	db	46
   683  00FB29  37                 	db	55	;'7'
   684  00FB2A  20                 	db	32
   685  00FB2B  2A                 	db	42
   686  00FB2C  2A                 	db	42
   687  00FB2D  2A                 	db	42
   688  00FB2E  2A                 	db	42
   689  00FB2F  0A                 	db	10
   690  00FB30  09                 	db	9
   691  00FB31  2A                 	db	42
   692  00FB32  2A                 	db	42
   693  00FB33  2A                 	db	42
   694  00FB34  2A                 	db	42
   695  00FB35  20                 	db	32
   696  00FB36  4D                 	db	77	;'M'
   697  00FB37  61                 	db	97	;'a'
   698  00FB38  64                 	db	100	;'d'
   699  00FB39  65                 	db	101	;'e'
   700  00FB3A  20                 	db	32
   701  00FB3B  62                 	db	98	;'b'
   702  00FB3C  79                 	db	121	;'y'
   703  00FB3D  20                 	db	32
   704  00FB3E  40                 	db	64	;'@'
   705  00FB3F  52                 	db	82	;'R'
   706  00FB40  79                 	db	121	;'y'
   707  00FB41  6F                 	db	111	;'o'
   708  00FB42  6B                 	db	107	;'k'
   709  00FB43  65                 	db	101	;'e'
   710  00FB44  72                 	db	114	;'r'
   711  00FB45  69                 	db	105	;'i'
   712  00FB46  20                 	db	32
   713  00FB47  20                 	db	32
   714  00FB48  20                 	db	32
   715  00FB49  2A                 	db	42
   716  00FB4A  2A                 	db	42
   717  00FB4B  2A                 	db	42
   718  00FB4C  2A                 	db	42
   719  00FB4D  0A                 	db	10
   720  00FB4E  09                 	db	9
   721  00FB4F  2A                 	db	42
   722  00FB50  2A                 	db	42
   723  00FB51  2A                 	db	42
   724  00FB52  2A                 	db	42
   725  00FB53  2A                 	db	42
   726  00FB54  2A                 	db	42
   727  00FB55  2A                 	db	42
   728  00FB56  2A                 	db	42
   729  00FB57  2A                 	db	42
   730  00FB58  2A                 	db	42
   731  00FB59  2A                 	db	42
   732  00FB5A  2A                 	db	42
   733  00FB5B  2A                 	db	42
   734  00FB5C  2A                 	db	42
   735  00FB5D  2A                 	db	42
   736  00FB5E  2A                 	db	42
   737  00FB5F  2A                 	db	42
   738  00FB60  2A                 	db	42
   739  00FB61  2A                 	db	42
   740  00FB62  2A                 	db	42
   741  00FB63  2A                 	db	42
   742  00FB64  2A                 	db	42
   743  00FB65  2A                 	db	42
   744  00FB66  2A                 	db	42
   745  00FB67  2A                 	db	42
   746  00FB68  2A                 	db	42
   747  00FB69  2A                 	db	42
   748  00FB6A  2A                 	db	42
   749  00FB6B  0A                 	db	10
   750  00FB6C  0A                 	db	10
   751  00FB6D  09                 	db	9
   752  00FB6E  63                 	db	99	;'c'
   753  00FB6F  6F                 	db	111	;'o'
   754  00FB70  6D                 	db	109	;'m'
   755  00FB71  6D                 	db	109	;'m'
   756  00FB72  61                 	db	97	;'a'
   757  00FB73  6E                 	db	110	;'n'
   758  00FB74  64                 	db	100	;'d'
   759  00FB75  20                 	db	32
   760  00FB76  09                 	db	9
   761  00FB77  6F                 	db	111	;'o'
   762  00FB78  70                 	db	112	;'p'
   763  00FB79  65                 	db	101	;'e'
   764  00FB7A  6C                 	db	108	;'l'
   765  00FB7B  61                 	db	97	;'a'
   766  00FB7C  6E                 	db	110	;'n'
   767  00FB7D  64                 	db	100	;'d'
   768  00FB7E  31                 	db	49	;'1'
   769  00FB7F  09                 	db	9
   770  00FB80  6F                 	db	111	;'o'
   771  00FB81  70                 	db	112	;'p'
   772  00FB82  65                 	db	101	;'e'
   773  00FB83  6C                 	db	108	;'l'
   774  00FB84  61                 	db	97	;'a'
   775  00FB85  6E                 	db	110	;'n'
   776  00FB86  64                 	db	100	;'d'
   777  00FB87  32                 	db	50	;'2'
   778  00FB88  0A                 	db	10
   779  00FB89  0A                 	db	10
   780  00FB8A  09                 	db	9
   781  00FB8B  70                 	db	112	;'p'
   782  00FB8C  72                 	db	114	;'r'
   783  00FB8D  69                 	db	105	;'i'
   784  00FB8E  6E                 	db	110	;'n'
   785  00FB8F  74                 	db	116	;'t'
   786  00FB90  5F                 	db	95	;'_'
   787  00FB91  74                 	db	116	;'t'
   788  00FB92  69                 	db	105	;'i'
   789  00FB93  6D                 	db	109	;'m'
   790  00FB94  65                 	db	101	;'e'
   791  00FB95  28                 	db	40
   792  00FB96  74                 	db	116	;'t'
   793  00FB97  29                 	db	41
   794  00FB98  0A                 	db	10
   795  00FB99  09                 	db	9
   796  00FB9A  61                 	db	97	;'a'
   797  00FB9B  64                 	db	100	;'d'
   798  00FB9C  6A                 	db	106	;'j'
   799  00FB9D  75                 	db	117	;'u'
   800  00FB9E  73                 	db	115	;'s'
   801  00FB9F  74                 	db	116	;'t'
   802  00FBA0  5F                 	db	95	;'_'
   803  00FBA1  74                 	db	116	;'t'
   804  00FBA2  69                 	db	105	;'i'
   805  00FBA3  6D                 	db	109	;'m'
   806  00FBA4  65                 	db	101	;'e'
   807  00FBA5  28                 	db	40
   808  00FBA6  61                 	db	97	;'a'
   809  00FBA7  74                 	db	116	;'t'
   810  00FBA8  29                 	db	41
   811  00FBA9  20                 	db	32
   812  00FBAA  5B                 	db	91	;'['
   813  00FBAB  68                 	db	104	;'h'
   814  00FBAC  61                 	db	97	;'a'
   815  00FBAD  6E                 	db	110	;'n'
   816  00FBAE  64                 	db	100	;'d'
   817  00FBAF  3A                 	db	58	;':'
   818  00FBB0  79                 	db	121	;'y'
   819  00FBB1  2C                 	db	44
   820  00FBB2  4D                 	db	77	;'M'
   821  00FBB3  2C                 	db	44
   822  00FBB4  64                 	db	100	;'d'
   823  00FBB5  2C                 	db	44
   824  00FBB6  68                 	db	104	;'h'
   825  00FBB7  2C                 	db	44
   826  00FBB8  6D                 	db	109	;'m'
   827  00FBB9  2C                 	db	44
   828  00FBBA  73                 	db	115	;'s'
   829  00FBBB  5D                 	db	93	;']'
   830  00FBBC  20                 	db	32
   831  00FBBD  5B                 	db	91	;'['
   832  00FBBE  76                 	db	118	;'v'
   833  00FBBF  61                 	db	97	;'a'
   834  00FBC0  6C                 	db	108	;'l'
   835  00FBC1  75                 	db	117	;'u'
   836  00FBC2  65                 	db	101	;'e'
   837  00FBC3  28                 	db	40
   838  00FBC4  64                 	db	100	;'d'
   839  00FBC5  65                 	db	101	;'e'
   840  00FBC6  63                 	db	99	;'c'
   841  00FBC7  69                 	db	105	;'i'
   842  00FBC8  6D                 	db	109	;'m'
   843  00FBC9  61                 	db	97	;'a'
   844  00FBCA  6C                 	db	108	;'l'
   845  00FBCB  29                 	db	41
   846  00FBCC  5D                 	db	93	;']'
   847  00FBCD  0A                 	db	10
   848  00FBCE  09                 	db	9
   849  00FBCF  73                 	db	115	;'s'
   850  00FBD0  65                 	db	101	;'e'
   851  00FBD1  74                 	db	116	;'t'
   852  00FBD2  74                 	db	116	;'t'
   853  00FBD3  69                 	db	105	;'i'
   854  00FBD4  6E                 	db	110	;'n'
   855  00FBD5  67                 	db	103	;'g'
   856  00FBD6  73                 	db	115	;'s'
   857  00FBD7  28                 	db	40
   858  00FBD8  73                 	db	115	;'s'
   859  00FBD9  65                 	db	101	;'e'
   860  00FBDA  74                 	db	116	;'t'
   861  00FBDB  29                 	db	41
   862  00FBDC  20                 	db	32
   863  00FBDD  5B                 	db	91	;'['
   864  00FBDE  70                 	db	112	;'p'
   865  00FBDF  6F                 	db	111	;'o'
   866  00FBE0  72                 	db	114	;'r'
   867  00FBE1  74                 	db	116	;'t'
   868  00FBE2  3A                 	db	58	;':'
   869  00FBE3  6C                 	db	108	;'l'
   870  00FBE4  65                 	db	101	;'e'
   871  00FBE5  66                 	db	102	;'f'
   872  00FBE6  74                 	db	116	;'t'
   873  00FBE7  28                 	db	40
   874  00FBE8  6C                 	db	108	;'l'
   875  00FBE9  29                 	db	41
   876  00FBEA  2C                 	db	44
   877  00FBEB  63                 	db	99	;'c'
   878  00FBEC  65                 	db	101	;'e'
   879  00FBED  6E                 	db	110	;'n'
   880  00FBEE  74                 	db	116	;'t'
   881  00FBEF  65                 	db	101	;'e'
   882  00FBF0  72                 	db	114	;'r'
   883  00FBF1  28                 	db	40
   884  00FBF2  63                 	db	99	;'c'
   885  00FBF3  29                 	db	41
   886  00FBF4  2C                 	db	44
   887  00FBF5  72                 	db	114	;'r'
   888  00FBF6  69                 	db	105	;'i'
   889  00FBF7  67                 	db	103	;'g'
   890  00FBF8  68                 	db	104	;'h'
   891  00FBF9  74                 	db	116	;'t'
   892  00FBFA  28                 	db	40
   893  00FBFB  72                 	db	114	;'r'
   894  00FBFC  29                 	db	41
   895  00FBFD  5D                 	db	93	;']'
   896  00FBFE  0A                 	db	10
   897  00FBFF  09                 	db	9
   898  00FC00  09                 	db	9
   899  00FC01  5B                 	db	91	;'['
   900  00FC02  61                 	db	97	;'a'
   901  00FC03  75                 	db	117	;'u'
   902  00FC04  74                 	db	116	;'t'
   903  00FC05  6F                 	db	111	;'o'
   904  00FC06  5F                 	db	95	;'_'
   905  00FC07  73                 	db	115	;'s'
   906  00FC08  74                 	db	116	;'t'
   907  00FC09  6F                 	db	111	;'o'
   908  00FC0A  70                 	db	112	;'p'
   909  00FC0B  28                 	db	40
   910  00FC0C  61                 	db	97	;'a'
   911  00FC0D  73                 	db	115	;'s'
   912  00FC0E  29                 	db	41
   913  00FC0F  2C                 	db	44
   914  00FC10  61                 	db	97	;'a'
   915  00FC11  6C                 	db	108	;'l'
   916  00FC12  77                 	db	119	;'w'
   917  00FC13  61                 	db	97	;'a'
   918  00FC14  79                 	db	121	;'y'
   919  00FC15  73                 	db	115	;'s'
   920  00FC16  5F                 	db	95	;'_'
   921  00FC17  6F                 	db	111	;'o'
   922  00FC18  6E                 	db	110	;'n'
   923  00FC19  28                 	db	40
   924  00FC1A  61                 	db	97	;'a'
   925  00FC1B  6F                 	db	111	;'o'
   926  00FC1C  29                 	db	41
   927  00FC1D  2C                 	db	44
   928  00FC1E  69                 	db	105	;'i'
   929  00FC1F  6E                 	db	110	;'n'
   930  00FC20  74                 	db	116	;'t'
   931  00FC21  65                 	db	101	;'e'
   932  00FC22  67                 	db	103	;'g'
   933  00FC23  72                 	db	114	;'r'
   934  00FC24  61                 	db	97	;'a'
   935  00FC25  74                 	db	116	;'t'
   936  00FC26  69                 	db	105	;'i'
   937  00FC27  6E                 	db	110	;'n'
   938  00FC28  67                 	db	103	;'g'
   939  00FC29  5F                 	db	95	;'_'
   940  00FC2A  72                 	db	114	;'r'
   941  00FC2B  65                 	db	101	;'e'
   942  00FC2C  73                 	db	115	;'s'
   943  00FC2D  65                 	db	101	;'e'
   944  00FC2E  74                 	db	116	;'t'
   945  00FC2F  28                 	db	40
   946  00FC30  69                 	db	105	;'i'
   947  00FC31  72                 	db	114	;'r'
   948  00FC32  29                 	db	41
   949  00FC33  5D                 	db	93	;']'
   950  00FC34  0A                 	db	10
   951  00FC35  09                 	db	9
   952  00FC36  64                 	db	100	;'d'
   953  00FC37  69                 	db	105	;'i'
   954  00FC38  73                 	db	115	;'s'
   955  00FC39  70                 	db	112	;'p'
   956  00FC3A  6C                 	db	108	;'l'
   957  00FC3B  61                 	db	97	;'a'
   958  00FC3C  79                 	db	121	;'y'
   959  00FC3D  28                 	db	40
   960  00FC3E  64                 	db	100	;'d'
   961  00FC3F  29                 	db	41
   962  00FC40  20                 	db	32
   963  00FC41  5B                 	db	91	;'['
   964  00FC42  70                 	db	112	;'p'
   965  00FC43  6F                 	db	111	;'o'
   966  00FC44  72                 	db	114	;'r'
   967  00FC45  74                 	db	116	;'t'
   968  00FC46  3A                 	db	58	;':'
   969  00FC47  6C                 	db	108	;'l'
   970  00FC48  65                 	db	101	;'e'
   971  00FC49  66                 	db	102	;'f'
   972  00FC4A  74                 	db	116	;'t'
   973  00FC4B  28                 	db	40
   974  00FC4C  6C                 	db	108	;'l'
   975  00FC4D  29                 	db	41
   976  00FC4E  2C                 	db	44
   977  00FC4F  63                 	db	99	;'c'
   978  00FC50  65                 	db	101	;'e'
   979  00FC51  6E                 	db	110	;'n'
   980  00FC52  74                 	db	116	;'t'
   981  00FC53  65                 	db	101	;'e'
   982  00FC54  72                 	db	114	;'r'
   983  00FC55  28                 	db	40
   984  00FC56  63                 	db	99	;'c'
   985  00FC57  29                 	db	41
   986  00FC58  2C                 	db	44
   987  00FC59  72                 	db	114	;'r'
   988  00FC5A  69                 	db	105	;'i'
   989  00FC5B  67                 	db	103	;'g'
   990  00FC5C  68                 	db	104	;'h'
   991  00FC5D  74                 	db	116	;'t'
   992  00FC5E  28                 	db	40
   993  00FC5F  72                 	db	114	;'r'
   994  00FC60  29                 	db	41
   995  00FC61  5D                 	db	93	;']'
   996  00FC62  0A                 	db	10
   997  00FC63  09                 	db	9
   998  00FC64  09                 	db	9
   999  00FC65  5B                 	db	91	;'['
  1000  00FC66  69                 	db	105	;'i'
  1001  00FC67  74                 	db	116	;'t'
  1002  00FC68  65                 	db	101	;'e'
  1003  00FC69  6D                 	db	109	;'m'
  1004  00FC6A  3A                 	db	58	;':'
  1005  00FC6B  63                 	db	99	;'c'
  1006  00FC6C  75                 	db	117	;'u'
  1007  00FC6D  72                 	db	114	;'r'
  1008  00FC6E  72                 	db	114	;'r'
  1009  00FC6F  65                 	db	101	;'e'
  1010  00FC70  6E                 	db	110	;'n'
  1011  00FC71  74                 	db	116	;'t'
  1012  00FC72  28                 	db	40
  1013  00FC73  63                 	db	99	;'c'
  1014  00FC74  29                 	db	41
  1015  00FC75  2C                 	db	44
  1016  00FC76  69                 	db	105	;'i'
  1017  00FC77  6E                 	db	110	;'n'
  1018  00FC78  74                 	db	116	;'t'
  1019  00FC79  65                 	db	101	;'e'
  1020  00FC7A  67                 	db	103	;'g'
  1021  00FC7B  72                 	db	114	;'r'
  1022  00FC7C  61                 	db	97	;'a'
  1023  00FC7D  74                 	db	116	;'t'
  1024  00FC7E  65                 	db	101	;'e'
  1025  00FC7F  64                 	db	100	;'d'
  1026  00FC80  5F                 	db	95	;'_'
  1027  00FC81  63                 	db	99	;'c'
  1028  00FC82  75                 	db	117	;'u'
  1029  00FC83  72                 	db	114	;'r'
  1030  00FC84  72                 	db	114	;'r'
  1031  00FC85  65                 	db	101	;'e'
  1032  00FC86  6E                 	db	110	;'n'
  1033  00FC87  74                 	db	116	;'t'
  1034  00FC88  28                 	db	40
  1035  00FC89  69                 	db	105	;'i'
  1036  00FC8A  63                 	db	99	;'c'
  1037  00FC8B  29                 	db	41
  1038  00FC8C  2C                 	db	44
  1039  00FC8D  69                 	db	105	;'i'
  1040  00FC8E  6E                 	db	110	;'n'
  1041  00FC8F  74                 	db	116	;'t'
  1042  00FC90  65                 	db	101	;'e'
  1043  00FC91  67                 	db	103	;'g'
  1044  00FC92  72                 	db	114	;'r'
  1045  00FC93  61                 	db	97	;'a'
  1046  00FC94  74                 	db	116	;'t'
  1047  00FC95  65                 	db	101	;'e'
  1048  00FC96  64                 	db	100	;'d'
  1049  00FC97  5F                 	db	95	;'_'
  1050  00FC98  74                 	db	116	;'t'
  1051  00FC99  69                 	db	105	;'i'
  1052  00FC9A  6D                 	db	109	;'m'
  1053  00FC9B  65                 	db	101	;'e'
  1054  00FC9C  28                 	db	40
  1055  00FC9D  69                 	db	105	;'i'
  1056  00FC9E  74                 	db	116	;'t'
  1057  00FC9F  29                 	db	41
  1058  00FCA0  5D                 	db	93	;']'
  1059  00FCA1  0A                 	db	10
  1060  00FCA2  09                 	db	9
  1061  00FCA3  6F                 	db	111	;'o'
  1062  00FCA4  75                 	db	117	;'u'
  1063  00FCA5  74                 	db	116	;'t'
  1064  00FCA6  70                 	db	112	;'p'
  1065  00FCA7  75                 	db	117	;'u'
  1066  00FCA8  74                 	db	116	;'t'
  1067  00FCA9  5F                 	db	95	;'_'
  1068  00FCAA  64                 	db	100	;'d'
  1069  00FCAB  61                 	db	97	;'a'
  1070  00FCAC  74                 	db	116	;'t'
  1071  00FCAD  61                 	db	97	;'a'
  1072  00FCAE  28                 	db	40
  1073  00FCAF  6F                 	db	111	;'o'
  1074  00FCB0  64                 	db	100	;'d'
  1075  00FCB1  29                 	db	41
  1076  00FCB2  20                 	db	32
  1077  00FCB3  3C                 	db	60	;'<'
  1078  00FCB4  2D                 	db	45
  1079  00FCB5  20                 	db	32
  1080  00FCB6  73                 	db	115	;'s'
  1081  00FCB7  74                 	db	116	;'t'
  1082  00FCB8  6F                 	db	111	;'o'
  1083  00FCB9  70                 	db	112	;'p'
  1084  00FCBA  70                 	db	112	;'p'
  1085  00FCBB  65                 	db	101	;'e'
  1086  00FCBC  64                 	db	100	;'d'
  1087  00FCBD  20                 	db	32
  1088  00FCBE  62                 	db	98	;'b'
  1089  00FCBF  79                 	db	121	;'y'
  1090  00FCC0  20                 	db	32
  1091  00FCC1  70                 	db	112	;'p'
  1092  00FCC2  72                 	db	114	;'r'
  1093  00FCC3  65                 	db	101	;'e'
  1094  00FCC4  73                 	db	115	;'s'
  1095  00FCC5  73                 	db	115	;'s'
  1096  00FCC6  69                 	db	105	;'i'
  1097  00FCC7  6E                 	db	110	;'n'
  1098  00FCC8  67                 	db	103	;'g'
  1099  00FCC9  20                 	db	32
  1100  00FCCA  74                 	db	116	;'t'
  1101  00FCCB  68                 	db	104	;'h'
  1102  00FCCC  65                 	db	101	;'e'
  1103  00FCCD  20                 	db	32
  1104  00FCCE  45                 	db	69	;'E'
  1105  00FCCF  6E                 	db	110	;'n'
  1106  00FCD0  74                 	db	116	;'t'
  1107  00FCD1  65                 	db	101	;'e'
  1108  00FCD2  72                 	db	114	;'r'
  1109  00FCD3  20                 	db	32
  1110  00FCD4  6B                 	db	107	;'k'
  1111  00FCD5  65                 	db	101	;'e'
  1112  00FCD6  79                 	db	121	;'y'
  1113  00FCD7  0A                 	db	10
  1114  00FCD8  09                 	db	9
  1115  00FCD9  74                 	db	116	;'t'
  1116  00FCDA  6F                 	db	111	;'o'
  1117  00FCDB  75                 	db	117	;'u'
  1118  00FCDC  63                 	db	99	;'c'
  1119  00FCDD  68                 	db	104	;'h'
  1120  00FCDE  20                 	db	32
  1121  00FCDF  5B                 	db	91	;'['
  1122  00FCE0  72                 	db	114	;'r'
  1123  00FCE1  65                 	db	101	;'e'
  1124  00FCE2  73                 	db	115	;'s'
  1125  00FCE3  65                 	db	101	;'e'
  1126  00FCE4  74                 	db	116	;'t'
  1127  00FCE5  28                 	db	40
  1128  00FCE6  72                 	db	114	;'r'
  1129  00FCE7  29                 	db	41
  1130  00FCE8  2C                 	db	44
  1131  00FCE9  69                 	db	105	;'i'
  1132  00FCEA  6E                 	db	110	;'n'
  1133  00FCEB  69                 	db	105	;'i'
  1134  00FCEC  74                 	db	116	;'t'
  1135  00FCED  69                 	db	105	;'i'
  1136  00FCEE  61                 	db	97	;'a'
  1137  00FCEF  6C                 	db	108	;'l'
  1138  00FCF0  69                 	db	105	;'i'
  1139  00FCF1  7A                 	db	122	;'z'
  1140  00FCF2  65                 	db	101	;'e'
  1141  00FCF3  28                 	db	40
  1142  00FCF4  69                 	db	105	;'i'
  1143  00FCF5  6E                 	db	110	;'n'
  1144  00FCF6  69                 	db	105	;'i'
  1145  00FCF7  74                 	db	116	;'t'
  1146  00FCF8  29                 	db	41
  1147  00FCF9  5D                 	db	93	;']'
  1148  00FCFA  20                 	db	32
  1149  00FCFB  5B                 	db	91	;'['
  1150  00FCFC  76                 	db	118	;'v'
  1151  00FCFD  61                 	db	97	;'a'
  1152  00FCFE  6C                 	db	108	;'l'
  1153  00FCFF  75                 	db	117	;'u'
  1154  00FD00  65                 	db	101	;'e'
  1155  00FD01  28                 	db	40
  1156  00FD02  25                 	db	37
  1157  00FD03  29                 	db	41
  1158  00FD04  5D                 	db	93	;']'
  1159  00FD05  0A                 	db	10
  1160  00FD06  0A                 	db	10
  1161  00FD07  09                 	db	9
  1162  00FD08  66                 	db	102	;'f'
  1163  00FD09  6F                 	db	111	;'o'
  1164  00FD0A  72                 	db	114	;'r'
  1165  00FD0B  20                 	db	32
  1166  00FD0C  44                 	db	68	;'D'
  1167  00FD0D  65                 	db	101	;'e'
  1168  00FD0E  76                 	db	118	;'v'
  1169  00FD0F  65                 	db	101	;'e'
  1170  00FD10  6C                 	db	108	;'l'
  1171  00FD11  6F                 	db	111	;'o'
  1172  00FD12  70                 	db	112	;'p'
  1173  00FD13  70                 	db	112	;'p'
  1174  00FD14  65                 	db	101	;'e'
  1175  00FD15  72                 	db	114	;'r'
  1176  00FD16  0A                 	db	10
  1177  00FD17  09                 	db	9
  1178  00FD18  52                 	db	82	;'R'
  1179  00FD19  45                 	db	69	;'E'
  1180  00FD1A  53                 	db	83	;'S'
  1181  00FD1B  45                 	db	69	;'E'
  1182  00FD1C  54                 	db	84	;'T'
  1183  00FD1D  28                 	db	40
  1184  00FD1E  29                 	db	41
  1185  00FD1F  3B                 	db	59	;';'
  1186  00FD20  0A                 	db	10
  1187  00FD21  09                 	db	9
  1188  00FD22  62                 	db	98	;'b'
  1189  00FD23  6F                 	db	111	;'o'
  1190  00FD24  6F                 	db	111	;'o'
  1191  00FD25  74                 	db	116	;'t'
  1192  00FD26  6C                 	db	108	;'l'
  1193  00FD27  6F                 	db	111	;'o'
  1194  00FD28  61                 	db	97	;'a'
  1195  00FD29  64                 	db	100	;'d'
  1196  00FD2A  0A                 	db	10
  1197  00FD2B  00                 	db	0
  1198  00FD2C                     STR_64:
  1199  00FD2C  09                 	db	9
  1200  00FD2D  63                 	db	99	;'c'
  1201  00FD2E  75                 	db	117	;'u'
  1202  00FD2F  72                 	db	114	;'r'
  1203  00FD30  72                 	db	114	;'r'
  1204  00FD31  65                 	db	101	;'e'
  1205  00FD32  6E                 	db	110	;'n'
  1206  00FD33  74                 	db	116	;'t'
  1207  00FD34  28                 	db	40
  1208  00FD35  63                 	db	99	;'c'
  1209  00FD36  29                 	db	41
  1210  00FD37  20                 	db	32
  1211  00FD38  6F                 	db	111	;'o'
  1212  00FD39  72                 	db	114	;'r'
  1213  00FD3A  20                 	db	32
  1214  00FD3B  69                 	db	105	;'i'
  1215  00FD3C  6E                 	db	110	;'n'
  1216  00FD3D  74                 	db	116	;'t'
  1217  00FD3E  65                 	db	101	;'e'
  1218  00FD3F  67                 	db	103	;'g'
  1219  00FD40  72                 	db	114	;'r'
  1220  00FD41  61                 	db	97	;'a'
  1221  00FD42  74                 	db	116	;'t'
  1222  00FD43  65                 	db	101	;'e'
  1223  00FD44  64                 	db	100	;'d'
  1224  00FD45  5F                 	db	95	;'_'
  1225  00FD46  63                 	db	99	;'c'
  1226  00FD47  75                 	db	117	;'u'
  1227  00FD48  72                 	db	114	;'r'
  1228  00FD49  72                 	db	114	;'r'
  1229  00FD4A  65                 	db	101	;'e'
  1230  00FD4B  6E                 	db	110	;'n'
  1231  00FD4C  74                 	db	116	;'t'
  1232  00FD4D  28                 	db	40
  1233  00FD4E  69                 	db	105	;'i'
  1234  00FD4F  63                 	db	99	;'c'
  1235  00FD50  29                 	db	41
  1236  00FD51  20                 	db	32
  1237  00FD52  6F                 	db	111	;'o'
  1238  00FD53  72                 	db	114	;'r'
  1239  00FD54  20                 	db	32
  1240  00FD55  69                 	db	105	;'i'
  1241  00FD56  6E                 	db	110	;'n'
  1242  00FD57  74                 	db	116	;'t'
  1243  00FD58  65                 	db	101	;'e'
  1244  00FD59  67                 	db	103	;'g'
  1245  00FD5A  72                 	db	114	;'r'
  1246  00FD5B  61                 	db	97	;'a'
  1247  00FD5C  74                 	db	116	;'t'
  1248  00FD5D  65                 	db	101	;'e'
  1249  00FD5E  64                 	db	100	;'d'
  1250  00FD5F  5F                 	db	95	;'_'
  1251  00FD60  74                 	db	116	;'t'
  1252  00FD61  69                 	db	105	;'i'
  1253  00FD62  6D                 	db	109	;'m'
  1254  00FD63  65                 	db	101	;'e'
  1255  00FD64  28                 	db	40
  1256  00FD65  69                 	db	105	;'i'
  1257  00FD66  74                 	db	116	;'t'
  1258  00FD67  29                 	db	41
  1259  00FD68  0A                 	db	10
  1260  00FD69  00                 	db	0
  1261  00FD6A                     STR_5:
  1262  00FD6A  09                 	db	9
  1263  00FD6B  32                 	db	50	;'2'
  1264  00FD6C  30                 	db	48	;'0'
  1265  00FD6D  25                 	db	37
  1266  00FD6E  30                 	db	48	;'0'
  1267  00FD6F  32                 	db	50	;'2'
  1268  00FD70  64                 	db	100	;'d'
  1269  00FD71  2F                 	db	47
  1270  00FD72  25                 	db	37
  1271  00FD73  30                 	db	48	;'0'
  1272  00FD74  32                 	db	50	;'2'
  1273  00FD75  64                 	db	100	;'d'
  1274  00FD76  2F                 	db	47
  1275  00FD77  25                 	db	37
  1276  00FD78  30                 	db	48	;'0'
  1277  00FD79  32                 	db	50	;'2'
  1278  00FD7A  64                 	db	100	;'d'
  1279  00FD7B  28                 	db	40
  1280  00FD7C  25                 	db	37
  1281  00FD7D  73                 	db	115	;'s'
  1282  00FD7E  29                 	db	41
  1283  00FD7F  25                 	db	37
  1284  00FD80  30                 	db	48	;'0'
  1285  00FD81  32                 	db	50	;'2'
  1286  00FD82  64                 	db	100	;'d'
  1287  00FD83  3A                 	db	58	;':'
  1288  00FD84  25                 	db	37
  1289  00FD85  30                 	db	48	;'0'
  1290  00FD86  32                 	db	50	;'2'
  1291  00FD87  64                 	db	100	;'d'
  1292  00FD88  2D                 	db	45
  1293  00FD89  25                 	db	37
  1294  00FD8A  30                 	db	48	;'0'
  1295  00FD8B  32                 	db	50	;'2'
  1296  00FD8C  64                 	db	100	;'d'
  1297  00FD8D  0A                 	db	10
  1298  00FD8E  00                 	db	0
  1299  00FD8F                     STR_51:
  1300  00FD8F  09                 	db	9
  1301  00FD90  69                 	db	105	;'i'
  1302  00FD91  6E                 	db	110	;'n'
  1303  00FD92  76                 	db	118	;'v'
  1304  00FD93  61                 	db	97	;'a'
  1305  00FD94  6C                 	db	108	;'l'
  1306  00FD95  69                 	db	105	;'i'
  1307  00FD96  64                 	db	100	;'d'
  1308  00FD97  20                 	db	32
  1309  00FD98  64                 	db	100	;'d'
  1310  00FD99  61                 	db	97	;'a'
  1311  00FD9A  74                 	db	116	;'t'
  1312  00FD9B  61                 	db	97	;'a'
  1313  00FD9C  0A                 	db	10
  1314  00FD9D  09                 	db	9
  1315  00FD9E  69                 	db	105	;'i'
  1316  00FD9F  6E                 	db	110	;'n'
  1317  00FDA0  69                 	db	105	;'i'
  1318  00FDA1  74                 	db	116	;'t'
  1319  00FDA2  69                 	db	105	;'i'
  1320  00FDA3  61                 	db	97	;'a'
  1321  00FDA4  6C                 	db	108	;'l'
  1322  00FDA5  69                 	db	105	;'i'
  1323  00FDA6  7A                 	db	122	;'z'
  1324  00FDA7  69                 	db	105	;'i'
  1325  00FDA8  6E                 	db	110	;'n'
  1326  00FDA9  67                 	db	103	;'g'
  1327  00FDAA  20                 	db	32
  1328  00FDAB  66                 	db	102	;'f'
  1329  00FDAC  61                 	db	97	;'a'
  1330  00FDAD  69                 	db	105	;'i'
  1331  00FDAE  6C                 	db	108	;'l'
  1332  00FDAF  65                 	db	101	;'e'
  1333  00FDB0  64                 	db	100	;'d'
  1334  00FDB1  0A                 	db	10
  1335  00FDB2  00                 	db	0
  1336  00FDB3                     STR_59:
  1337  00FDB3  09                 	db	9
  1338  00FDB4  6C                 	db	108	;'l'
  1339  00FDB5  65                 	db	101	;'e'
  1340  00FDB6  66                 	db	102	;'f'
  1341  00FDB7  74                 	db	116	;'t'
  1342  00FDB8  28                 	db	40
  1343  00FDB9  6C                 	db	108	;'l'
  1344  00FDBA  29                 	db	41
  1345  00FDBB  20                 	db	32
  1346  00FDBC  6F                 	db	111	;'o'
  1347  00FDBD  72                 	db	114	;'r'
  1348  00FDBE  20                 	db	32
  1349  00FDBF  63                 	db	99	;'c'
  1350  00FDC0  65                 	db	101	;'e'
  1351  00FDC1  6E                 	db	110	;'n'
  1352  00FDC2  74                 	db	116	;'t'
  1353  00FDC3  65                 	db	101	;'e'
  1354  00FDC4  72                 	db	114	;'r'
  1355  00FDC5  28                 	db	40
  1356  00FDC6  63                 	db	99	;'c'
  1357  00FDC7  29                 	db	41
  1358  00FDC8  20                 	db	32
  1359  00FDC9  6F                 	db	111	;'o'
  1360  00FDCA  72                 	db	114	;'r'
  1361  00FDCB  20                 	db	32
  1362  00FDCC  72                 	db	114	;'r'
  1363  00FDCD  69                 	db	105	;'i'
  1364  00FDCE  67                 	db	103	;'g'
  1365  00FDCF  68                 	db	104	;'h'
  1366  00FDD0  74                 	db	116	;'t'
  1367  00FDD1  28                 	db	40
  1368  00FDD2  72                 	db	114	;'r'
  1369  00FDD3  29                 	db	41
  1370  00FDD4  0A                 	db	10
  1371  00FDD5  00                 	db	0
  1372  00FDD6                     STR_133:
  1373  00FDD6  32                 	db	50	;'2'
  1374  00FDD7  30                 	db	48	;'0'
  1375  00FDD8  25                 	db	37
  1376  00FDD9  30                 	db	48	;'0'
  1377  00FDDA  32                 	db	50	;'2'
  1378  00FDDB  64                 	db	100	;'d'
  1379  00FDDC  2F                 	db	47
  1380  00FDDD  25                 	db	37
  1381  00FDDE  30                 	db	48	;'0'
  1382  00FDDF  32                 	db	50	;'2'
  1383  00FDE0  64                 	db	100	;'d'
  1384  00FDE1  2F                 	db	47
  1385  00FDE2  25                 	db	37
  1386  00FDE3  30                 	db	48	;'0'
  1387  00FDE4  32                 	db	50	;'2'
  1388  00FDE5  64                 	db	100	;'d'
  1389  00FDE6  2D                 	db	45
  1390  00FDE7  25                 	db	37
  1391  00FDE8  30                 	db	48	;'0'
  1392  00FDE9  32                 	db	50	;'2'
  1393  00FDEA  64                 	db	100	;'d'
  1394  00FDEB  3A                 	db	58	;':'
  1395  00FDEC  25                 	db	37
  1396  00FDED  30                 	db	48	;'0'
  1397  00FDEE  32                 	db	50	;'2'
  1398  00FDEF  64                 	db	100	;'d'
  1399  00FDF0  2D                 	db	45
  1400  00FDF1  25                 	db	37
  1401  00FDF2  30                 	db	48	;'0'
  1402  00FDF3  32                 	db	50	;'2'
  1403  00FDF4  64                 	db	100	;'d'
  1404  00FDF5  00                 	db	0
  1405  00FDF6                     STR_134:
  1406  00FDF6  20                 	db	32
  1407  00FDF7  20                 	db	32
  1408  00FDF8  25                 	db	37
  1409  00FDF9  73                 	db	115	;'s'
  1410  00FDFA  3A                 	db	58	;':'
  1411  00FDFB  20                 	db	32
  1412  00FDFC  25                 	db	37
  1413  00FDFD  30                 	db	48	;'0'
  1414  00FDFE  31                 	db	49	;'1'
  1415  00FDFF  64                 	db	100	;'d'
  1416  00FE00  2E                 	db	46
  1417  00FE01  25                 	db	37
  1418  00FE02  30                 	db	48	;'0'
  1419  00FE03  33                 	db	51	;'3'
  1420  00FE04  64                 	db	100	;'d'
  1421  00FE05  41                 	db	65	;'A'
  1422  00FE06  20                 	db	32
  1423  00FE07  25                 	db	37
  1424  00FE08  30                 	db	48	;'0'
  1425  00FE09  37                 	db	55	;'7'
  1426  00FE0A  6C                 	db	108	;'l'
  1427  00FE0B  64                 	db	100	;'d'
  1428  00FE0C  6D                 	db	109	;'m'
  1429  00FE0D  41                 	db	65	;'A'
  1430  00FE0E  68                 	db	104	;'h'
  1431  00FE0F  00                 	db	0
  1432  00FE10                     STR_50:
  1433  00FE10  09                 	db	9
  1434  00FE11  69                 	db	105	;'i'
  1435  00FE12  6E                 	db	110	;'n'
  1436  00FE13  69                 	db	105	;'i'
  1437  00FE14  74                 	db	116	;'t'
  1438  00FE15  69                 	db	105	;'i'
  1439  00FE16  61                 	db	97	;'a'
  1440  00FE17  6C                 	db	108	;'l'
  1441  00FE18  69                 	db	105	;'i'
  1442  00FE19  7A                 	db	122	;'z'
  1443  00FE1A  69                 	db	105	;'i'
  1444  00FE1B  6E                 	db	110	;'n'
  1445  00FE1C  67                 	db	103	;'g'
  1446  00FE1D  20                 	db	32
  1447  00FE1E  63                 	db	99	;'c'
  1448  00FE1F  6F                 	db	111	;'o'
  1449  00FE20  6D                 	db	109	;'m'
  1450  00FE21  70                 	db	112	;'p'
  1451  00FE22  6C                 	db	108	;'l'
  1452  00FE23  65                 	db	101	;'e'
  1453  00FE24  74                 	db	116	;'t'
  1454  00FE25  65                 	db	101	;'e'
  1455  00FE26  0A                 	db	10
  1456  00FE27  00                 	db	0
  1457  00FE28                     STR_67:
  1458  00FE28  69                 	db	105	;'i'
  1459  00FE29  6E                 	db	110	;'n'
  1460  00FE2A  74                 	db	116	;'t'
  1461  00FE2B  65                 	db	101	;'e'
  1462  00FE2C  67                 	db	103	;'g'
  1463  00FE2D  72                 	db	114	;'r'
  1464  00FE2E  61                 	db	97	;'a'
  1465  00FE2F  74                 	db	116	;'t'
  1466  00FE30  65                 	db	101	;'e'
  1467  00FE31  64                 	db	100	;'d'
  1468  00FE32  5F                 	db	95	;'_'
  1469  00FE33  63                 	db	99	;'c'
  1470  00FE34  75                 	db	117	;'u'
  1471  00FE35  72                 	db	114	;'r'
  1472  00FE36  72                 	db	114	;'r'
  1473  00FE37  65                 	db	101	;'e'
  1474  00FE38  6E                 	db	110	;'n'
  1475  00FE39  74                 	db	116	;'t'
  1476  00FE3A  00                 	db	0
  1477  00FE3B                     STR_54:
  1478  00FE3B  09                 	db	9
  1479  00FE3C  73                 	db	115	;'s'
  1480  00FE3D  65                 	db	101	;'e'
  1481  00FE3E  74                 	db	116	;'t'
  1482  00FE3F  69                 	db	105	;'i'
  1483  00FE40  6E                 	db	110	;'n'
  1484  00FE41  67                 	db	103	;'g'
  1485  00FE42  20                 	db	32
  1486  00FE43  63                 	db	99	;'c'
  1487  00FE44  6F                 	db	111	;'o'
  1488  00FE45  6D                 	db	109	;'m'
  1489  00FE46  70                 	db	112	;'p'
  1490  00FE47  6C                 	db	108	;'l'
  1491  00FE48  65                 	db	101	;'e'
  1492  00FE49  74                 	db	116	;'t'
  1493  00FE4A  65                 	db	101	;'e'
  1494  00FE4B  0A                 	db	10
  1495  00FE4C  00                 	db	0
  1496  00FE4D                     STR_136:
  1497  00FE4D  43                 	db	67	;'C'
  1498  00FE4E  68                 	db	104	;'h'
  1499  00FE4F  61                 	db	97	;'a'
  1500  00FE50  72                 	db	114	;'r'
  1501  00FE51  67                 	db	103	;'g'
  1502  00FE52  65                 	db	101	;'e'
  1503  00FE53  20                 	db	32
  1504  00FE54  53                 	db	83	;'S'
  1505  00FE55  74                 	db	116	;'t'
  1506  00FE56  61                 	db	97	;'a'
  1507  00FE57  74                 	db	116	;'t'
  1508  00FE58  69                 	db	105	;'i'
  1509  00FE59  6F                 	db	111	;'o'
  1510  00FE5A  6E                 	db	110	;'n'
  1511  00FE5B  20                 	db	32
  1512  00FE5C  36                 	db	54	;'6'
  1513  00FE5D  00                 	db	0
  1514  00FE5E                     STR_94:
  1515  00FE5E  3C                 	db	60	;'<'
  1516  00FE5F  2D                 	db	45
  1517  00FE60  20                 	db	32
  1518  00FE61  20                 	db	32
  1519  00FE62  20                 	db	32
  1520  00FE63  53                 	db	83	;'S'
  1521  00FE64  65                 	db	101	;'e'
  1522  00FE65  6C                 	db	108	;'l'
  1523  00FE66  65                 	db	101	;'e'
  1524  00FE67  63                 	db	99	;'c'
  1525  00FE68  74                 	db	116	;'t'
  1526  00FE69  20                 	db	32
  1527  00FE6A  20                 	db	32
  1528  00FE6B  20                 	db	32
  1529  00FE6C  2D                 	db	45
  1530  00FE6D  3E                 	db	62	;'>'
  1531  00FE6E  00                 	db	0
  1532  00FE6F                     STR_100:
  1533  00FE6F  54                 	db	84	;'T'
  1534  00FE70  6F                 	db	111	;'o'
  1535  00FE71  67                 	db	103	;'g'
  1536  00FE72  67                 	db	103	;'g'
  1537  00FE73  6C                 	db	108	;'l'
  1538  00FE74  65                 	db	101	;'e'
  1539  00FE75  20                 	db	32
  1540  00FE76  41                 	db	65	;'A'
  1541  00FE77  75                 	db	117	;'u'
  1542  00FE78  74                 	db	116	;'t'
  1543  00FE79  6F                 	db	111	;'o'
  1544  00FE7A  20                 	db	32
  1545  00FE7B  53                 	db	83	;'S'
  1546  00FE7C  74                 	db	116	;'t'
  1547  00FE7D  6F                 	db	111	;'o'
  1548  00FE7E  70                 	db	112	;'p'
  1549  00FE7F  00                 	db	0
  1550  00FE80                     STR_117:
  1551  00FE80  4C                 	db	76	;'L'
  1552  00FE81  65                 	db	101	;'e'
  1553  00FE82  66                 	db	102	;'f'
  1554  00FE83  74                 	db	116	;'t'
  1555  00FE84  20                 	db	32
  1556  00FE85  43                 	db	67	;'C'
  1557  00FE86  65                 	db	101	;'e'
  1558  00FE87  6E                 	db	110	;'n'
  1559  00FE88  74                 	db	116	;'t'
  1560  00FE89  72                 	db	114	;'r'
  1561  00FE8A  20                 	db	32
  1562  00FE8B  52                 	db	82	;'R'
  1563  00FE8C  69                 	db	105	;'i'
  1564  00FE8D  67                 	db	103	;'g'
  1565  00FE8E  68                 	db	104	;'h'
  1566  00FE8F  74                 	db	116	;'t'
  1567  00FE90  00                 	db	0
  1568  00FE91                     STR_38:
  1569  00FE91  42                 	db	66	;'B'
  1570  00FE92  6F                 	db	111	;'o'
  1571  00FE93  6F                 	db	111	;'o'
  1572  00FE94  74                 	db	116	;'t'
  1573  00FE95  6C                 	db	108	;'l'
  1574  00FE96  6F                 	db	111	;'o'
  1575  00FE97  61                 	db	97	;'a'
  1576  00FE98  64                 	db	100	;'d'
  1577  00FE99  65                 	db	101	;'e'
  1578  00FE9A  72                 	db	114	;'r'
  1579  00FE9B  20                 	db	32
  1580  00FE9C  6D                 	db	109	;'m'
  1581  00FE9D  6F                 	db	111	;'o'
  1582  00FE9E  64                 	db	100	;'d'
  1583  00FE9F  65                 	db	101	;'e'
  1584  00FEA0  00                 	db	0
  1585  00FEA1                     STR_98:
  1586  00FEA1  41                 	db	65	;'A'
  1587  00FEA2  64                 	db	100	;'d'
  1588  00FEA3  6A                 	db	106	;'j'
  1589  00FEA4  75                 	db	117	;'u'
  1590  00FEA5  73                 	db	115	;'s'
  1591  00FEA6  74                 	db	116	;'t'
  1592  00FEA7  20                 	db	32
  1593  00FEA8  74                 	db	116	;'t'
  1594  00FEA9  68                 	db	104	;'h'
  1595  00FEAA  65                 	db	101	;'e'
  1596  00FEAB  20                 	db	32
  1597  00FEAC  54                 	db	84	;'T'
  1598  00FEAD  69                 	db	105	;'i'
  1599  00FEAE  6D                 	db	109	;'m'
  1600  00FEAF  65                 	db	101	;'e'
  1601  00FEB0  00                 	db	0
  1602  00FEB1                     STR_69:
  1603  00FEB1  69                 	db	105	;'i'
  1604  00FEB2  6E                 	db	110	;'n'
  1605  00FEB3  74                 	db	116	;'t'
  1606  00FEB4  65                 	db	101	;'e'
  1607  00FEB5  67                 	db	103	;'g'
  1608  00FEB6  72                 	db	114	;'r'
  1609  00FEB7  61                 	db	97	;'a'
  1610  00FEB8  74                 	db	116	;'t'
  1611  00FEB9  65                 	db	101	;'e'
  1612  00FEBA  64                 	db	100	;'d'
  1613  00FEBB  5F                 	db	95	;'_'
  1614  00FEBC  74                 	db	116	;'t'
  1615  00FEBD  69                 	db	105	;'i'
  1616  00FEBE  6D                 	db	109	;'m'
  1617  00FEBF  65                 	db	101	;'e'
  1618  00FEC0  00                 	db	0
  1619  00FEC1                     STR_102:
  1620  00FEC1  54                 	db	84	;'T'
  1621  00FEC2  6F                 	db	111	;'o'
  1622  00FEC3  67                 	db	103	;'g'
  1623  00FEC4  67                 	db	103	;'g'
  1624  00FEC5  6C                 	db	108	;'l'
  1625  00FEC6  65                 	db	101	;'e'
  1626  00FEC7  20                 	db	32
  1627  00FEC8  4C                 	db	76	;'L'
  1628  00FEC9  45                 	db	69	;'E'
  1629  00FECA  44                 	db	68	;'D'
  1630  00FECB  20                 	db	32
  1631  00FECC  4C                 	db	76	;'L'
  1632  00FECD  61                 	db	97	;'a'
  1633  00FECE  6D                 	db	109	;'m'
  1634  00FECF  70                 	db	112	;'p'
  1635  00FED0  00                 	db	0
  1636  00FED1                     STR_138:
  1637  00FED1  43                 	db	67	;'C'
  1638  00FED2  68                 	db	104	;'h'
  1639  00FED3  61                 	db	97	;'a'
  1640  00FED4  72                 	db	114	;'r'
  1641  00FED5  67                 	db	103	;'g'
  1642  00FED6  65                 	db	101	;'e'
  1643  00FED7  20                 	db	32
  1644  00FED8  53                 	db	83	;'S'
  1645  00FED9  74                 	db	116	;'t'
  1646  00FEDA  61                 	db	97	;'a'
  1647  00FEDB  74                 	db	116	;'t'
  1648  00FEDC  69                 	db	105	;'i'
  1649  00FEDD  6F                 	db	111	;'o'
  1650  00FEDE  6E                 	db	110	;'n'
  1651  00FEDF  00                 	db	0
  1652  00FEE0                     STR_104:
  1653  00FEE0  49                 	db	73	;'I'
  1654  00FEE1  6E                 	db	110	;'n'
  1655  00FEE2  74                 	db	116	;'t'
  1656  00FEE3  65                 	db	101	;'e'
  1657  00FEE4  67                 	db	103	;'g'
  1658  00FEE5  72                 	db	114	;'r'
  1659  00FEE6  61                 	db	97	;'a'
  1660  00FEE7  74                 	db	116	;'t'
  1661  00FEE8  20                 	db	32
  1662  00FEE9  52                 	db	82	;'R'
  1663  00FEEA  65                 	db	101	;'e'
  1664  00FEEB  73                 	db	115	;'s'
  1665  00FEEC  65                 	db	101	;'e'
  1666  00FEED  74                 	db	116	;'t'
  1667  00FEEE  00                 	db	0
  1668  00FEEF                     STR_139:
  1669  00FEEF  4D                 	db	77	;'M'
  1670  00FEF0  61                 	db	97	;'a'
  1671  00FEF1  64                 	db	100	;'d'
  1672  00FEF2  65                 	db	101	;'e'
  1673  00FEF3  20                 	db	32
  1674  00FEF4  62                 	db	98	;'b'
  1675  00FEF5  79                 	db	121	;'y'
  1676  00FEF6  20                 	db	32
  1677  00FEF7  4B                 	db	75	;'K'
  1678  00FEF8  45                 	db	69	;'E'
  1679  00FEF9  52                 	db	82	;'R'
  1680  00FEFA  49                 	db	73	;'I'
  1681  00FEFB  00                 	db	0
  1682  00FEFC                     STR_137:
  1683  00FEFC  53                 	db	83	;'S'
  1684  00FEFD  4C                 	db	76	;'L'
  1685  00FEFE  45                 	db	69	;'E'
  1686  00FEFF  45                 	db	69	;'E'
  1687  00FF00  50                 	db	80	;'P'
  1688  00FF01  49                 	db	73	;'I'
  1689  00FF02  4E                 	db	78	;'N'
  1690  00FF03  47                 	db	71	;'G'
  1691  00FF04  20                 	db	32
  1692  00FF05  4E                 	db	78	;'N'
  1693  00FF06  4F                 	db	79	;'O'
  1694  00FF07  57                 	db	87	;'W'
  1695  00FF08  00                 	db	0
  1696  00FF09                     STR_37:
  1697  00FF09  50                 	db	80	;'P'
  1698  00FF0A  49                 	db	73	;'I'
  1699  00FF0B  43                 	db	67	;'C'
  1700  00FF0C  31                 	db	49	;'1'
  1701  00FF0D  38                 	db	56	;'8'
  1702  00FF0E  46                 	db	70	;'F'
  1703  00FF0F  32                 	db	50	;'2'
  1704  00FF10  37                 	db	55	;'7'
  1705  00FF11  4A                 	db	74	;'J'
  1706  00FF12  35                 	db	53	;'5'
  1707  00FF13  33                 	db	51	;'3'
  1708  00FF14  00                 	db	0
  1709  00FF15                     STR_45:
  1710  00FF15  6F                 	db	111	;'o'
  1711  00FF16  75                 	db	117	;'u'
  1712  00FF17  74                 	db	116	;'t'
  1713  00FF18  70                 	db	112	;'p'
  1714  00FF19  75                 	db	117	;'u'
  1715  00FF1A  74                 	db	116	;'t'
  1716  00FF1B  5F                 	db	95	;'_'
  1717  00FF1C  64                 	db	100	;'d'
  1718  00FF1D  61                 	db	97	;'a'
  1719  00FF1E  74                 	db	116	;'t'
  1720  00FF1F  61                 	db	97	;'a'
  1721  00FF20  00                 	db	0
  1722  00FF21                     STR_10:
  1723  00FF21  61                 	db	97	;'a'
  1724  00FF22  64                 	db	100	;'d'
  1725  00FF23  6A                 	db	106	;'j'
  1726  00FF24  75                 	db	117	;'u'
  1727  00FF25  73                 	db	115	;'s'
  1728  00FF26  74                 	db	116	;'t'
  1729  00FF27  5F                 	db	95	;'_'
  1730  00FF28  74                 	db	116	;'t'
  1731  00FF29  69                 	db	105	;'i'
  1732  00FF2A  6D                 	db	109	;'m'
  1733  00FF2B  65                 	db	101	;'e'
  1734  00FF2C  00                 	db	0
  1735  00FF2D                     STR_7:
  1736  00FF2D  70                 	db	112	;'p'
  1737  00FF2E  72                 	db	114	;'r'
  1738  00FF2F  69                 	db	105	;'i'
  1739  00FF30  6E                 	db	110	;'n'
  1740  00FF31  74                 	db	116	;'t'
  1741  00FF32  5F                 	db	95	;'_'
  1742  00FF33  74                 	db	116	;'t'
  1743  00FF34  69                 	db	105	;'i'
  1744  00FF35  6D                 	db	109	;'m'
  1745  00FF36  65                 	db	101	;'e'
  1746  00FF37  00                 	db	0
  1747  00FF38                     STR_48:
  1748  00FF38  69                 	db	105	;'i'
  1749  00FF39  6E                 	db	110	;'n'
  1750  00FF3A  69                 	db	105	;'i'
  1751  00FF3B  74                 	db	116	;'t'
  1752  00FF3C  69                 	db	105	;'i'
  1753  00FF3D  61                 	db	97	;'a'
  1754  00FF3E  6C                 	db	108	;'l'
  1755  00FF3F  69                 	db	105	;'i'
  1756  00FF40  7A                 	db	122	;'z'
  1757  00FF41  65                 	db	101	;'e'
  1758  00FF42  00                 	db	0
  1759  00FF43                     STR_42:
  1760  00FF43  52                 	db	82	;'R'
  1761  00FF44  45                 	db	69	;'E'
  1762  00FF45  53                 	db	83	;'S'
  1763  00FF46  45                 	db	69	;'E'
  1764  00FF47  54                 	db	84	;'T'
  1765  00FF48  28                 	db	40
  1766  00FF49  29                 	db	41
  1767  00FF4A  3B                 	db	59	;';'
  1768  00FF4B  00                 	db	0
  1769  00FF4C                     STR_43:
  1770  00FF4C  62                 	db	98	;'b'
  1771  00FF4D  6F                 	db	111	;'o'
  1772  00FF4E  6F                 	db	111	;'o'
  1773  00FF4F  74                 	db	116	;'t'
  1774  00FF50  6C                 	db	108	;'l'
  1775  00FF51  6F                 	db	111	;'o'
  1776  00FF52  61                 	db	97	;'a'
  1777  00FF53  64                 	db	100	;'d'
  1778  00FF54  00                 	db	0
  1779  00FF55                     STR_93:
  1780  00FF55  53                 	db	83	;'S'
  1781  00FF56  65                 	db	101	;'e'
  1782  00FF57  74                 	db	116	;'t'
  1783  00FF58  74                 	db	116	;'t'
  1784  00FF59  69                 	db	105	;'i'
  1785  00FF5A  6E                 	db	110	;'n'
  1786  00FF5B  67                 	db	103	;'g'
  1787  00FF5C  73                 	db	115	;'s'
  1788  00FF5D  00                 	db	0
  1789  00FF5E                     STR_6:
  1790  00FF5E  09                 	db	9
  1791  00FF5F  65                 	db	101	;'e'
  1792  00FF60  72                 	db	114	;'r'
  1793  00FF61  72                 	db	114	;'r'
  1794  00FF62  6F                 	db	111	;'o'
  1795  00FF63  72                 	db	114	;'r'
  1796  00FF64  0A                 	db	10
  1797  00FF65  00                 	db	0
  1798  00FF66                     STR_55:
  1799  00FF66  64                 	db	100	;'d'
  1800  00FF67  69                 	db	105	;'i'
  1801  00FF68  73                 	db	115	;'s'
  1802  00FF69  70                 	db	112	;'p'
  1803  00FF6A  6C                 	db	108	;'l'
  1804  00FF6B  61                 	db	97	;'a'
  1805  00FF6C  79                 	db	121	;'y'
  1806  00FF6D  00                 	db	0
  1807  00FF6E                     STR_140:
  1808  00FF6E  28                 	db	40
  1809  00FF6F  6E                 	db	110	;'n'
  1810  00FF70  75                 	db	117	;'u'
  1811  00FF71  6C                 	db	108	;'l'
  1812  00FF72  6C                 	db	108	;'l'
  1813  00FF73  29                 	db	41
  1814  00FF74  00                 	db	0
  1815  00FF75                     STR_22:
  1816  00FF75  73                 	db	115	;'s'
  1817  00FF76  65                 	db	101	;'e'
  1818  00FF77  63                 	db	99	;'c'
  1819  00FF78  6F                 	db	111	;'o'
  1820  00FF79  6E                 	db	110	;'n'
  1821  00FF7A  64                 	db	100	;'d'
  1822  00FF7B  00                 	db	0
  1823  00FF7C                     STR_20:
  1824  00FF7C  6D                 	db	109	;'m'
  1825  00FF7D  69                 	db	105	;'i'
  1826  00FF7E  6E                 	db	110	;'n'
  1827  00FF7F  75                 	db	117	;'u'
  1828  00FF80  74                 	db	116	;'t'
  1829  00FF81  65                 	db	101	;'e'
  1830  00FF82  00                 	db	0
  1831  00FF83                     STR_71:
  1832  00FF83  63                 	db	99	;'c'
  1833  00FF84  65                 	db	101	;'e'
  1834  00FF85  6E                 	db	110	;'n'
  1835  00FF86  74                 	db	116	;'t'
  1836  00FF87  65                 	db	101	;'e'
  1837  00FF88  72                 	db	114	;'r'
  1838  00FF89  00                 	db	0
  1839  00FF8A                     STR_122:
  1840  00FF8A  20                 	db	32
  1841  00FF8B  20                 	db	32
  1842  00FF8C  30                 	db	48	;'0'
  1843  00FF8D  20                 	db	32
  1844  00FF8E  20                 	db	32
  1845  00FF8F  00                 	db	0
  1846  00FF90                     STR_115:
  1847  00FF90  20                 	db	32
  1848  00FF91  4F                 	db	79	;'O'
  1849  00FF92  4E                 	db	78	;'N'
  1850  00FF93  20                 	db	32
  1851  00FF94  20                 	db	32
  1852  00FF95  00                 	db	0
  1853  00FF96                     STR_116:
  1854  00FF96  20                 	db	32
  1855  00FF97  4F                 	db	79	;'O'
  1856  00FF98  46                 	db	70	;'F'
  1857  00FF99  46                 	db	70	;'F'
  1858  00FF9A  20                 	db	32
  1859  00FF9B  00                 	db	0
  1860  00FF9C                     STR_121:
  1861  00FF9C  20                 	db	32
  1862  00FF9D  79                 	db	121	;'y'
  1863  00FF9E  65                 	db	101	;'e'
  1864  00FF9F  74                 	db	116	;'t'
  1865  00FFA0  20                 	db	32
  1866  00FFA1  00                 	db	0
  1867  00FFA2                     STR_47:
  1868  00FFA2  74                 	db	116	;'t'
  1869  00FFA3  6F                 	db	111	;'o'
  1870  00FFA4  75                 	db	117	;'u'
  1871  00FFA5  63                 	db	99	;'c'
  1872  00FFA6  68                 	db	104	;'h'
  1873  00FFA7  00                 	db	0
  1874  00FFA8                     STR_14:
  1875  00FFA8  6D                 	db	109	;'m'
  1876  00FFA9  6F                 	db	111	;'o'
  1877  00FFAA  6E                 	db	110	;'n'
  1878  00FFAB  74                 	db	116	;'t'
  1879  00FFAC  68                 	db	104	;'h'
  1880  00FFAD  00                 	db	0
  1881  00FFAE                     STR_52:
  1882  00FFAE  72                 	db	114	;'r'
  1883  00FFAF  65                 	db	101	;'e'
  1884  00FFB0  73                 	db	115	;'s'
  1885  00FFB1  65                 	db	101	;'e'
  1886  00FFB2  74                 	db	116	;'t'
  1887  00FFB3  00                 	db	0
  1888  00FFB4                     STR_82:
  1889  00FFB4  72                 	db	114	;'r'
  1890  00FFB5  69                 	db	105	;'i'
  1891  00FFB6  67                 	db	103	;'g'
  1892  00FFB7  68                 	db	104	;'h'
  1893  00FFB8  74                 	db	116	;'t'
  1894  00FFB9  00                 	db	0
  1895  00FFBA                     STR_31:
  1896  00FFBA  6D                 	db	109	;'m'
  1897  00FFBB  41                 	db	65	;'A'
  1898  00FFBC  68                 	db	104	;'h'
  1899  00FFBD  0A                 	db	10
  1900  00FFBE  00                 	db	0
  1901  00FFBF                     STR_39:
  1902  00FFBF  68                 	db	104	;'h'
  1903  00FFC0  65                 	db	101	;'e'
  1904  00FFC1  6C                 	db	108	;'l'
  1905  00FFC2  70                 	db	112	;'p'
  1906  00FFC3  00                 	db	0
  1907  00FFC4                     STR_12:
  1908  00FFC4  79                 	db	121	;'y'
  1909  00FFC5  65                 	db	101	;'e'
  1910  00FFC6  61                 	db	97	;'a'
  1911  00FFC7  72                 	db	114	;'r'
  1912  00FFC8  00                 	db	0
  1913  00FFC9                     STR_18:
  1914  00FFC9  68                 	db	104	;'h'
  1915  00FFCA  6F                 	db	111	;'o'
  1916  00FFCB  75                 	db	117	;'u'
  1917  00FFCC  72                 	db	114	;'r'
  1918  00FFCD  00                 	db	0
  1919  00FFCE                     STR_60:
  1920  00FFCE  6C                 	db	108	;'l'
  1921  00FFCF  65                 	db	101	;'e'
  1922  00FFD0  66                 	db	102	;'f'
  1923  00FFD1  74                 	db	116	;'t'
  1924  00FFD2  00                 	db	0
  1925  00FFD3                     STR_49:
  1926  00FFD3  69                 	db	105	;'i'
  1927  00FFD4  6E                 	db	110	;'n'
  1928  00FFD5  69                 	db	105	;'i'
  1929  00FFD6  74                 	db	116	;'t'
  1930  00FFD7  00                 	db	0
  1931  00FFD8                     STR_2:
  1932  00FFD8  08                 	db	8
  1933  00FFD9  20                 	db	32
  1934  00FFDA  08                 	db	8
  1935  00FFDB  00                 	db	0
  1936  00FFDC                     STR_16:
  1937  00FFDC  64                 	db	100	;'d'
  1938  00FFDD  61                 	db	97	;'a'
  1939  00FFDE  79                 	db	121	;'y'
  1940  00FFDF  00                 	db	0
  1941  00FFE0                     STR_29:
  1942  00FFE0  41                 	db	65	;'A'
  1943  00FFE1  0A                 	db	10
  1944  00FFE2  00                 	db	0
  1945  00FFE3                     STR_24:
  1946  00FFE3  64                 	db	100	;'d'
  1947  00FFE4  20                 	db	32
  1948  00FFE5  00                 	db	0
  1949  00FFE6                     STR_25:
  1950  00FFE6  68                 	db	104	;'h'
  1951  00FFE7  20                 	db	32
  1952  00FFE8  00                 	db	0
  1953  00FFE9                     STR_26:
  1954  00FFE9  6D                 	db	109	;'m'
  1955  00FFEA  20                 	db	32
  1956  00FFEB  00                 	db	0
  1957  00FFEC                     STR_68:
  1958  00FFEC  69                 	db	105	;'i'
  1959  00FFED  63                 	db	99	;'c'
  1960  00FFEE  00                 	db	0
  1961  00FFEF                     STR_44:
  1962  00FFEF  6F                 	db	111	;'o'
  1963  00FFF0  64                 	db	100	;'d'
  1964  00FFF1  00                 	db	0
  1965  00FFF2                     STR_9:
  1966  00FFF2  61                 	db	97	;'a'
  1967  00FFF3  74                 	db	116	;'t'
  1968  00FFF4  00                 	db	0
  1969  00FFF5                     STR_28:
  1970  00FFF5  09                 	db	9
  1971  00FFF6  00                 	db	0
  1972  00FFF7                     STR_40:
  1973  00FFF7  3F                 	db	63	;'?'
  1974  00FFF8  00                 	db	0
  1975  00FFF9                     STR_13:
  1976  00FFF9  4D                 	db	77	;'M'
  1977  00FFFA  00                 	db	0
  1978  00FFFB                     STR_61:
  1979  00FFFB  6C                 	db	108	;'l'
  1980  00FFFC  00                 	db	0
  1981  00FFFD                     STR_19:
  1982  00FFFD  6D                 	db	109	;'m'
  1983  00FFFE  00                 	db	0
  1984  0000                     
  1985                           ; #config settings
  1986  00FFFF  00                 	db	0	; dummy byte at the end
  1987  0000                     
  1988                           	psect	cinit
  1989  016562                     __pcinit:
  1990                           	opt stack 0
  1991  016562                     start_initialization:
  1992                           	opt stack 0
  1993  016562                     __initialization:
  1994                           	opt stack 0
  1995                           
  1996                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1997  016562  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1998  016566  EE17 F0D0          	lfsr	1,2000
  1999  01656A                     clear_0:
  2000  01656A  6AEE               	clrf	postinc0,c
  2001  01656C  50E5               	movf	postdec1,w,c
  2002  01656E  50E1               	movf	fsr1l,w,c
  2003  016570  E1FC               	bnz	clear_0
  2004  016572  50E2               	movf	fsr1h,w,c
  2005  016574  E1FA               	bnz	clear_0
  2006                           
  2007                           ; Clear objects allocated to BANK3 (164 bytes)
  2008  016576  EE03  F000         	lfsr	0,__pbssBANK3
  2009  01657A  0EA4               	movlw	164
  2010  01657C                     clear_1:
  2011  01657C  6AEE               	clrf	postinc0,c
  2012  01657E  06E8               	decf	wreg,f,c
  2013  016580  E1FD               	bnz	clear_1
  2014                           
  2015                           ; Clear objects allocated to BANK2 (234 bytes)
  2016  016582  EE02  F000         	lfsr	0,__pbssBANK2
  2017  016586  0EEA               	movlw	234
  2018  016588                     clear_2:
  2019  016588  6AEE               	clrf	postinc0,c
  2020  01658A  06E8               	decf	wreg,f,c
  2021  01658C  E1FD               	bnz	clear_2
  2022                           
  2023                           ; Clear objects allocated to BANK1 (146 bytes)
  2024  01658E  EE01  F000         	lfsr	0,__pbssBANK1
  2025  016592  0E92               	movlw	146
  2026  016594                     clear_3:
  2027  016594  6AEE               	clrf	postinc0,c
  2028  016596  06E8               	decf	wreg,f,c
  2029  016598  E1FD               	bnz	clear_3
  2030                           
  2031                           ; Clear objects allocated to BANK0 (28 bytes)
  2032  01659A  EE00  F0E4         	lfsr	0,__pbssBANK0
  2033  01659E  0E1C               	movlw	28
  2034  0165A0                     clear_4:
  2035  0165A0  6AEE               	clrf	postinc0,c
  2036  0165A2  06E8               	decf	wreg,f,c
  2037  0165A4  E1FD               	bnz	clear_4
  2038                           
  2039                           ; Clear objects allocated to COMRAM (44 bytes)
  2040  0165A6  EE00  F001         	lfsr	0,__pbssCOMRAM
  2041  0165AA  0E2C               	movlw	44
  2042  0165AC                     clear_5:
  2043  0165AC  6AEE               	clrf	postinc0,c
  2044  0165AE  06E8               	decf	wreg,f,c
  2045  0165B0  E1FD               	bnz	clear_5
  2046                           
  2047                           ; Initialize objects allocated to BANK1 (3 bytes)
  2048                           ; load TBLPTR registers with __pidataBANK1
  2049  0165B2  0E5A               	movlw	low __pidataBANK1
  2050  0165B4  6EF6               	movwf	tblptrl,c
  2051  0165B6  0E74               	movlw	high __pidataBANK1
  2052  0165B8  6EF7               	movwf	tblptrh,c
  2053  0165BA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2054  0165BC  6EF8               	movwf	tblptru,c
  2055  0165BE  0009               	tblrd		*+	;fetch initializer
  2056  0165C0  CFF5 F198          	movff	tablat,__pdataBANK1
  2057  0165C4  0009               	tblrd		*+	;fetch initializer
  2058  0165C6  CFF5 F199          	movff	tablat,__pdataBANK1+1
  2059  0165CA  0009               	tblrd		*+	;fetch initializer
  2060  0165CC  CFF5 F19A          	movff	tablat,__pdataBANK1+2
  2061  0165D0                     end_of_initialization:
  2062                           	opt stack 0
  2063  0165D0                     __end_of__initialization:
  2064                           	opt stack 0
  2065  0165D0  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2066  0165D2  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2067  0165D4  0100               	movlb	0
  2068  0165D6  EFD6  F0B3         	goto	_main	;jump to C main() function
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           postdec1	equ	0xFE5
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           
  2079                           	psect	bssCOMRAM
  2080  000001                     __pbssCOMRAM:
  2081                           	opt stack 0
  2082  000001                     _outPipes:
  2083                           	opt stack 0
  2084  000001                     	ds	9
  2085  00000A                     _ep_data_in:
  2086                           	opt stack 0
  2087  00000A                     	ds	3
  2088  00000D                     _ep_data_out:
  2089                           	opt stack 0
  2090  00000D                     	ds	3
  2091  000010                     _pBDTEntryEP0OutCurrent:
  2092                           	opt stack 0
  2093  000010                     	ds	2
  2094  000012                     _pBDTEntryEP0OutNext:
  2095                           	opt stack 0
  2096  000012                     	ds	2
  2097  000014                     RTCC_loop@prev_halfsec:
  2098                           	opt stack 0
  2099  000014                     	ds	1
  2100  000015                     _BothEP0OutUOWNsSet:
  2101                           	opt stack 0
  2102  000015                     	ds	1
  2103  000016                     _RemoteWakeup:
  2104                           	opt stack 0
  2105  000016                     	ds	1
  2106  000017                     _USBDeferINDataStagePackets:
  2107                           	opt stack 0
  2108  000017                     	ds	1
  2109  000018                     _USBDeferOUTDataStagePackets:
  2110                           	opt stack 0
  2111  000018                     	ds	1
  2112  000019                     _USBDeferStatusStagePacket:
  2113                           	opt stack 0
  2114  000019                     	ds	1
  2115  00001A                     _USBDeviceState:
  2116                           	opt stack 0
  2117  00001A                     	ds	1
  2118  00001B                     _USBStatusStageEnabledFlag1:
  2119                           	opt stack 0
  2120  00001B                     	ds	1
  2121  00001C                     _USBStatusStageEnabledFlag2:
  2122                           	opt stack 0
  2123  00001C                     	ds	1
  2124  00001D                     _USBStatusStageTimeoutCounter:
  2125                           	opt stack 0
  2126  00001D                     	ds	1
  2127  00001E                     _cdc_mem_type:
  2128                           	opt stack 0
  2129  00001E                     	ds	1
  2130  00001F                     _cdc_trf_state:
  2131                           	opt stack 0
  2132  00001F                     	ds	1
  2133  000020                     _controlTransferState:
  2134                           	opt stack 0
  2135  000020                     	ds	1
  2136  000021                     _ctmu_sampling_flag:
  2137                           	opt stack 0
  2138  000021                     	ds	1
  2139  000022                     _cut_time_flag:
  2140                           	opt stack 0
  2141  000022                     	ds	1
  2142  000023                     _display_flag:
  2143                           	opt stack 0
  2144  000023                     	ds	1
  2145  000024                     _endpoint_number:
  2146                           	opt stack 0
  2147  000024                     	ds	1
  2148  000025                     _settings_flag:
  2149                           	opt stack 0
  2150  000025                     	ds	1
  2151  000026                     _settings_state:
  2152                           	opt stack 0
  2153  000026                     	ds	1
  2154  000027                     _shortPacketStatus:
  2155                           	opt stack 0
  2156  000027                     	ds	1
  2157  000028                     _terminal_data_out:
  2158                           	opt stack 0
  2159  000028                     	ds	1
  2160  000029                     _terminal_data_out_flag:
  2161                           	opt stack 0
  2162  000029                     	ds	1
  2163  00002A                     _time_change_flag:
  2164                           	opt stack 0
  2165  00002A                     	ds	1
  2166  00002B                     _USBActiveConfiguration:
  2167                           	opt stack 0
  2168  00002B                     	ds	1
  2169  00002C                     _USTATcopy:
  2170                           	opt stack 0
  2171  00002C                     	ds	1
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	bssBANK0
  2183  0000E4                     __pbssBANK0:
  2184                           	opt stack 0
  2185  0000E4                     _inPipes:
  2186                           	opt stack 0
  2187  0000E4                     	ds	6
  2188  0000EA                     _pBDTEntryIn:
  2189                           	opt stack 0
  2190  0000EA                     	ds	6
  2191  0000F0                     _CDCDataOutHandle:
  2192                           	opt stack 0
  2193  0000F0                     	ds	2
  2194  0000F2                     _cdc_rx_len:
  2195                           	opt stack 0
  2196  0000F2                     	ds	1
  2197  0000F3                     _cdc_tx_len:
  2198                           	opt stack 0
  2199  0000F3                     	ds	1
  2200  0000F4                     _colon:
  2201                           	opt stack 0
  2202  0000F4                     	ds	1
  2203  0000F5                     _ctmu_ratio:
  2204                           	opt stack 0
  2205  0000F5                     	ds	1
  2206  0000F6                     _edit_flag:
  2207                           	opt stack 0
  2208  0000F6                     	ds	1
  2209  0000F7                     _halfsec:
  2210                           	opt stack 0
  2211  0000F7                     	ds	1
  2212  0000F8                     _pres_print_item:
  2213                           	opt stack 0
  2214  0000F8                     	ds	1
  2215  0000F9                     _print_data:
  2216                           	opt stack 0
  2217  0000F9                     	ds	1
  2218  0000FA                     _print_port:
  2219                           	opt stack 0
  2220  0000FA                     	ds	1
  2221  0000FB                     _settings_select:
  2222                           	opt stack 0
  2223  0000FB                     	ds	1
  2224  0000FC                     _epoch_now:
  2225                           	opt stack 0
  2226  0000FC                     	ds	4
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           
  2237                           	psect	bssBANK1
  2238  000100                     __pbssBANK1:
  2239                           	opt stack 0
  2240  000100                     _pBDTEntryOut:
  2241                           	opt stack 0
  2242  000100                     	ds	6
  2243  000106                     LED_indicator@cnt:
  2244                           	opt stack 0
  2245  000106                     	ds	3
  2246  000109                     LED_indicator@cntf:
  2247                           	opt stack 0
  2248  000109                     	ds	3
  2249  00010C                     _d1:
  2250                           	opt stack 0
  2251  00010C                     	ds	3
  2252  00010F                     _pCDCDst:
  2253                           	opt stack 0
  2254  00010F                     	ds	3
  2255  000112                     _pCDCSrc:
  2256                           	opt stack 0
  2257  000112                     	ds	3
  2258  000115                     USBCBSendResume@delay_count:
  2259                           	opt stack 0
  2260  000115                     	ds	2
  2261  000117                     _CDCDataInHandle:
  2262                           	opt stack 0
  2263  000117                     	ds	2
  2264  000119                     _ctmu_value_m:
  2265                           	opt stack 0
  2266  000119                     	ds	2
  2267  00011B                     _pDst:
  2268                           	opt stack 0
  2269  00011B                     	ds	2
  2270  00011D                     epoch_to_caltime@day_cache:
  2271                           	opt stack 0
  2272  00011D                     	ds	2
  2273  00011F                     millis_timer@cnt:
  2274                           	opt stack 0
  2275  00011F                     	ds	2
  2276  000121                     ISR@cnt:
  2277                           	opt stack 0
  2278  000121                     	ds	1
  2279  000122                     ISR@cnt_t1:
  2280                           	opt stack 0
  2281  000122                     	ds	1
  2282  000123                     _USBBusIsSuspended:
  2283                           	opt stack 0
  2284  000123                     	ds	1
  2285  000124                     _control_signal_bitmap:
  2286                           	opt stack 0
  2287  000124                     	ds	1
  2288  000125                     _next_print_item:
  2289                           	opt stack 0
  2290  000125                     	ds	1
  2291  000126                     epoch_to_caltime@year_cache:
  2292                           	opt stack 0
  2293  000126                     	ds	1
  2294  000127                     my_terminal_loop@command_init:
  2295                           	opt stack 0
  2296  000127                     	ds	1
  2297  000128                     sleep_loop@sleep_flag:
  2298                           	opt stack 0
  2299  000128                     	ds	1
  2300  000129                     _port:
  2301                           	opt stack 0
  2302  000129                     	ds	69
  2303  00016E                     _usb_tx:
  2304                           	opt stack 0
  2305  00016E                     	ds	8
  2306  000176                     my_terminal_loop@command:
  2307                           	opt stack 0
  2308  000176                     	ds	8
  2309  00017E                     _caltime_now:
  2310                           	opt stack 0
  2311  00017E                     	ds	7
  2312  000185                     _line_coding:
  2313                           	opt stack 0
  2314  000185                     	ds	7
  2315  00018C                     _ctmu_m:
  2316                           	opt stack 0
  2317  00018C                     	ds	4
  2318  000190                     _USBAlternateInterface:
  2319                           	opt stack 0
  2320  000190                     	ds	2
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           
  2331                           	psect	dataBANK1
  2332  000198                     __pdataBANK1:
  2333                           	opt stack 0
  2334  000198                     I2C_LCD_SetCursor@F8672:
  2335                           	opt stack 0
  2336  000198                     	ds	2
  2337  00019A                     epoch_to_caltime@month_cache:
  2338                           	opt stack 0
  2339  00019A                     	ds	1
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1h	equ	0xFE2
  2348                           fsr1l	equ	0xFE1
  2349                           
  2350                           	psect	bssBANK2
  2351  000200                     __pbssBANK2:
  2352                           	opt stack 0
  2353  000200                     _cdc_notice:
  2354                           	opt stack 0
  2355  000200                     	ds	10
  2356  00020A                     _BaudRateGen:
  2357                           	opt stack 0
  2358  00020A                     	ds	4
  2359  00020E                     _ms:
  2360                           	opt stack 0
  2361  00020E                     	ds	4
  2362  000212                     _cdc_data_rx:
  2363                           	opt stack 0
  2364  000212                     	ds	64
  2365  000252                     _display_char:
  2366                           	opt stack 0
  2367  000252                     	ds	40
  2368  00027A                     my_terminal_loop@op0:
  2369                           	opt stack 0
  2370  00027A                     	ds	20
  2371  00028E                     my_terminal_loop@op1:
  2372                           	opt stack 0
  2373  00028E                     	ds	20
  2374  0002A2                     my_terminal_loop@op2:
  2375                           	opt stack 0
  2376  0002A2                     	ds	20
  2377  0002B6                     my_terminal_loop@op3:
  2378                           	opt stack 0
  2379  0002B6                     	ds	20
  2380  0002CA                     _dummy_encapsulated_cmd_response:
  2381                           	opt stack 0
  2382  0002CA                     	ds	8
  2383  0002D2                     _rx_buf:
  2384                           	opt stack 0
  2385  0002D2                     	ds	8
  2386  0002DA                     _tx_buf:
  2387                           	opt stack 0
  2388  0002DA                     	ds	8
  2389  0002E2                     _usb_rx:
  2390                           	opt stack 0
  2391  0002E2                     	ds	8
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           
  2402                           	psect	bssBANK3
  2403  000300                     __pbssBANK3:
  2404                           	opt stack 0
  2405  000300                     hardware_init@usbrx:
  2406                           	opt stack 0
  2407  000300                     	ds	100
  2408  000364                     _cdc_data_tx:
  2409                           	opt stack 0
  2410  000364                     	ds	64
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           
  2421                           	psect	bssBIGRAMl
  2422  000469                     __pbssBIGRAMl:
  2423                           	opt stack 0
  2424  000469                     hardware_init@usbtx:
  2425                           	opt stack 0
  2426  000469                     	ds	2000
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           
  2437                           	psect	cstackBANK4
  2438  000400                     __pcstackBANK4:
  2439                           	opt stack 0
  2440  000400                     my_terminal_loop@buf:
  2441                           	opt stack 0
  2442                           
  2443                           ; 100 bytes @ 0x0
  2444  000400                     	ds	100
  2445  000464                     _my_terminal_loop$5382:
  2446                           	opt stack 0
  2447                           
  2448                           ; 2 bytes @ 0x64
  2449  000464                     	ds	2
  2450  000466                     my_terminal_loop@i_4124:
  2451                           	opt stack 0
  2452                           
  2453                           ; 1 bytes @ 0x66
  2454  000466                     	ds	1
  2455  000467                     my_terminal_loop@ascii:
  2456                           	opt stack 0
  2457                           
  2458                           ; 1 bytes @ 0x67
  2459  000467                     	ds	1
  2460  000468                     my_terminal_loop@i:
  2461                           	opt stack 0
  2462                           
  2463                           ; 1 bytes @ 0x68
  2464  000468                     	ds	1
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           
  2475                           	psect	cstackBANK1
  2476  000192                     __pcstackBANK1:
  2477                           	opt stack 0
  2478  000192                     my_terminal_loop@tx:
  2479                           	opt stack 0
  2480                           
  2481                           ; 2 bytes @ 0x0
  2482  000192                     	ds	2
  2483  000194                     my_terminal_loop@rx:
  2484                           	opt stack 0
  2485                           
  2486                           ; 2 bytes @ 0x2
  2487  000194                     	ds	2
  2488  000196                     ??_my_terminal_loop:
  2489                           
  2490                           ; 0 bytes @ 0x4
  2491  000196                     	ds	2
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           
  2502                           	psect	cstackBANK0
  2503  000060                     __pcstackBANK0:
  2504                           	opt stack 0
  2505  000060                     ??_isdigit:
  2506  000060                     ??_timer0_init:
  2507  000060                     ??_timer3_init:
  2508  000060                     ??_I2C_IdleCheck:
  2509  000060                     ??_x_to_d:
  2510  000060                     ?_USBTransferOnePacket:
  2511                           	opt stack 0
  2512  000060                     ?_ADC:
  2513                           	opt stack 0
  2514  000060                     ?_ringbuf_num:
  2515                           	opt stack 0
  2516  000060                     ?___awdiv:
  2517                           	opt stack 0
  2518  000060                     ?___awmod:
  2519                           	opt stack 0
  2520  000060                     ?___lwmod:
  2521                           	opt stack 0
  2522  000060                     ?___lldiv:
  2523                           	opt stack 0
  2524  000060                     USBTransferOnePacket@dir:
  2525                           	opt stack 0
  2526  000060                     _is_usb_available$2010:
  2527                           	opt stack 0
  2528  000060                     timer1_init@clock_select:
  2529                           	opt stack 0
  2530  000060                     ADC_init@p_ref:
  2531                           	opt stack 0
  2532  000060                     OUT@value:
  2533                           	opt stack 0
  2534  000060                     ANALOG_IN@b:
  2535                           	opt stack 0
  2536  000060                     LED_OUT@value:
  2537                           	opt stack 0
  2538  000060                     display_now@pres_item:
  2539                           	opt stack 0
  2540  000060                     putUSBUSART@data:
  2541                           	opt stack 0
  2542  000060                     ringbuf_init@rb:
  2543                           	opt stack 0
  2544  000060                     ringbuf_num@rb:
  2545                           	opt stack 0
  2546  000060                     ringbuf_delete@rb:
  2547                           	opt stack 0
  2548  000060                     Delay_ms@ms:
  2549                           	opt stack 0
  2550  000060                     my_strcmp@str1:
  2551                           	opt stack 0
  2552  000060                     display_char_puts@str0:
  2553                           	opt stack 0
  2554  000060                     display_reserve@time:
  2555                           	opt stack 0
  2556  000060                     ___awdiv@dividend:
  2557                           	opt stack 0
  2558  000060                     ___awmod@dividend:
  2559                           	opt stack 0
  2560  000060                     ___lwmod@dividend:
  2561                           	opt stack 0
  2562  000060                     memset@p1:
  2563                           	opt stack 0
  2564  000060                     strcpy@to:
  2565                           	opt stack 0
  2566  000060                     ___lldiv@dividend:
  2567                           	opt stack 0
  2568                           
  2569                           ; 4 bytes @ 0x0
  2570  000060                     	ds	1
  2571  000061                     ??_timer1_init:
  2572  000061                     timer0_init@prescaler:
  2573                           	opt stack 0
  2574  000061                     timer3_init@prescaler:
  2575                           	opt stack 0
  2576  000061                     I2C_IdleCheck@mask:
  2577                           	opt stack 0
  2578  000061                     x_to_d@hex:
  2579                           	opt stack 0
  2580  000061                     OUT@b:
  2581                           	opt stack 0
  2582  000061                     LED_OUT@b:
  2583                           	opt stack 0
  2584  000061                     _isdigit$4789:
  2585                           	opt stack 0
  2586  000061                     USBTransferOnePacket@data:
  2587                           	opt stack 0
  2588                           
  2589                           ; 2 bytes @ 0x1
  2590  000061                     	ds	1
  2591  000062                     ??_ADC:
  2592  000062                     ??_ringbuf_num:
  2593  000062                     ??_Delay_ms:
  2594  000062                     putUSBUSART@length:
  2595                           	opt stack 0
  2596  000062                     timer1_init@prescaler:
  2597                           	opt stack 0
  2598  000062                     I2C_Start@rw:
  2599                           	opt stack 0
  2600  000062                     I2C_Send@data:
  2601                           	opt stack 0
  2602  000062                     display_reserve@next_item:
  2603                           	opt stack 0
  2604  000062                     port_button_loop@i:
  2605                           	opt stack 0
  2606  000062                     isdigit@c:
  2607                           	opt stack 0
  2608  000062                     ringbuf_init@internal_buf:
  2609                           	opt stack 0
  2610  000062                     RTCC_to_caltime@ct:
  2611                           	opt stack 0
  2612  000062                     my_strcmp@str2:
  2613                           	opt stack 0
  2614  000062                     display_char_puts@str1:
  2615                           	opt stack 0
  2616  000062                     ___awdiv@divisor:
  2617                           	opt stack 0
  2618  000062                     ___awmod@divisor:
  2619                           	opt stack 0
  2620  000062                     ___lwmod@divisor:
  2621                           	opt stack 0
  2622  000062                     memset@c:
  2623                           	opt stack 0
  2624  000062                     strcpy@from:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0x2
  2628  000062                     	ds	1
  2629  000063                     USBTransferOnePacket@len:
  2630                           	opt stack 0
  2631  000063                     ADC@ch:
  2632                           	opt stack 0
  2633  000063                     I2C_Start@adrs:
  2634                           	opt stack 0
  2635                           
  2636                           ; 1 bytes @ 0x3
  2637  000063                     	ds	1
  2638  000064                     ??_my_strcmp:
  2639  000064                     USBTransferOnePacket@ep:
  2640                           	opt stack 0
  2641  000064                     I2C_LCD_Command@c:
  2642                           	opt stack 0
  2643  000064                     I2C_LCD_Putc@c:
  2644                           	opt stack 0
  2645  000064                     RTCC_to_caltime@dumy:
  2646                           	opt stack 0
  2647  000064                     display_char_puts@i:
  2648                           	opt stack 0
  2649  000064                     ___awdiv@counter:
  2650                           	opt stack 0
  2651  000064                     ___awmod@counter:
  2652                           	opt stack 0
  2653  000064                     ___lwmod@counter:
  2654                           	opt stack 0
  2655  000064                     ringbuf_init@bufsize:
  2656                           	opt stack 0
  2657  000064                     I2C_LCD_Puts@s:
  2658                           	opt stack 0
  2659  000064                     memset@n:
  2660                           	opt stack 0
  2661  000064                     strcpy@cp:
  2662                           	opt stack 0
  2663  000064                     ___lldiv@divisor:
  2664                           	opt stack 0
  2665                           
  2666                           ; 4 bytes @ 0x4
  2667  000064                     	ds	1
  2668  000065                     I2C_LCD_Command@ans:
  2669                           	opt stack 0
  2670  000065                     I2C_LCD_Putc@ans:
  2671                           	opt stack 0
  2672  000065                     ___awdiv@sign:
  2673                           	opt stack 0
  2674  000065                     ___awmod@sign:
  2675                           	opt stack 0
  2676  000065                     USBTransferOnePacket@handle:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x5
  2680  000065                     	ds	1
  2681  000066                     ??_I2C_LCD_Clear:
  2682  000066                     ??_I2C_LCD_Puts:
  2683  000066                     I2C_LCD_SetCursor@row:
  2684                           	opt stack 0
  2685  000066                     month_length@month:
  2686                           	opt stack 0
  2687  000066                     ___awdiv@quotient:
  2688                           	opt stack 0
  2689  000066                     memset@p:
  2690                           	opt stack 0
  2691                           
  2692                           ; 2 bytes @ 0x6
  2693  000066                     	ds	1
  2694  000067                     ??_CDCTxService:
  2695  000067                     ??_month_length:
  2696  000067                     getsUSBUSART@buffer:
  2697                           	opt stack 0
  2698  000067                     I2C_LCD_SetCursor@row_offsets:
  2699                           	opt stack 0
  2700  000067                     I2C_LCD_Puts@ans:
  2701                           	opt stack 0
  2702                           
  2703                           ; 2 bytes @ 0x7
  2704  000067                     	ds	1
  2705  000068                     USBDeviceInit@i:
  2706                           	opt stack 0
  2707  000068                     d_to_x@dec:
  2708                           	opt stack 0
  2709  000068                     _CDCTxService$1934:
  2710                           	opt stack 0
  2711  000068                     ringbuf_pop@rb:
  2712                           	opt stack 0
  2713  000068                     ringbuf_backspace@rb:
  2714                           	opt stack 0
  2715  000068                     ___lldiv@quotient:
  2716                           	opt stack 0
  2717                           
  2718                           ; 4 bytes @ 0x8
  2719  000068                     	ds	1
  2720  000069                     getsUSBUSART@len:
  2721                           	opt stack 0
  2722  000069                     I2C_LCD_SetCursor@col:
  2723                           	opt stack 0
  2724  000069                     caltime_to_RTCC@ct:
  2725                           	opt stack 0
  2726                           
  2727                           ; 2 bytes @ 0x9
  2728  000069                     	ds	1
  2729  00006A                     ??_getsUSBUSART:
  2730  00006A                     ??_ringbuf_pop:
  2731  00006A                     ??_ringbuf_backspace:
  2732  00006A                     ??_display_port:
  2733  00006A                     CDCTxService@i:
  2734                           	opt stack 0
  2735  00006A                     sleep_loop@i:
  2736                           	opt stack 0
  2737                           
  2738                           ; 1 bytes @ 0xA
  2739  00006A                     	ds	1
  2740  00006B                     CDCTxService@byte_to_send:
  2741                           	opt stack 0
  2742  00006B                     month_length@year:
  2743                           	opt stack 0
  2744  00006B                     _getsUSBUSART$1886:
  2745                           	opt stack 0
  2746                           
  2747                           ; 2 bytes @ 0xB
  2748  00006B                     	ds	1
  2749  00006C                     ?_put_string_usb:
  2750                           	opt stack 0
  2751  00006C                     ___lldiv@counter:
  2752                           	opt stack 0
  2753  00006C                     put_string_usb@s:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0xC
  2757  00006C                     	ds	1
  2758  00006D                     ?_get_string_usb:
  2759                           	opt stack 0
  2760  00006D                     ?_CTMU_read:
  2761                           	opt stack 0
  2762  00006D                     ?___lmul:
  2763                           	opt stack 0
  2764  00006D                     ?___llmod:
  2765                           	opt stack 0
  2766  00006D                     get_string_usb@s:
  2767                           	opt stack 0
  2768  00006D                     ___lmul@multiplier:
  2769                           	opt stack 0
  2770  00006D                     ___llmod@dividend:
  2771                           	opt stack 0
  2772                           
  2773                           ; 4 bytes @ 0xD
  2774  00006D                     	ds	1
  2775  00006E                     ringbuf_pop@ret:
  2776                           	opt stack 0
  2777  00006E                     put_string_usb@len:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0xE
  2781  00006E                     	ds	1
  2782  00006F                     ??_CTMU_read:
  2783  00006F                     get_string_usb@len:
  2784                           	opt stack 0
  2785                           
  2786                           ; 2 bytes @ 0xF
  2787  00006F                     	ds	1
  2788  000070                     CTMU_read@ch:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0x10
  2792  000070                     	ds	1
  2793  000071                     ??_get_string_usb:
  2794  000071                     CTMU_read@sum:
  2795                           	opt stack 0
  2796  000071                     ___lmul@multiplicand:
  2797                           	opt stack 0
  2798  000071                     ___llmod@divisor:
  2799                           	opt stack 0
  2800                           
  2801                           ; 4 bytes @ 0x11
  2802  000071                     	ds	1
  2803  000072                     get_string_usb@rx_len:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x12
  2807  000072                     	ds	3
  2808  000075                     CTMU_read@i:
  2809                           	opt stack 0
  2810  000075                     ___llmod@counter:
  2811                           	opt stack 0
  2812  000075                     ___lmul@product:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x15
  2816  000075                     	ds	1
  2817  000076                     ?___wmul:
  2818                           	opt stack 0
  2819  000076                     my_utoa32@str:
  2820                           	opt stack 0
  2821  000076                     ___wmul@multiplier:
  2822                           	opt stack 0
  2823                           
  2824                           ; 2 bytes @ 0x16
  2825  000076                     	ds	2
  2826  000078                     ___wmul@multiplicand:
  2827                           	opt stack 0
  2828  000078                     my_utoa32@value:
  2829                           	opt stack 0
  2830                           
  2831                           ; 4 bytes @ 0x18
  2832  000078                     	ds	1
  2833  000079                     ?_get_quot_rem:
  2834                           	opt stack 0
  2835  000079                     get_quot_rem@quot:
  2836                           	opt stack 0
  2837  000079                     caltime_to_epoch@ct:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x19
  2841  000079                     	ds	1
  2842  00007A                     ___wmul@product:
  2843                           	opt stack 0
  2844                           
  2845                           ; 2 bytes @ 0x1A
  2846  00007A                     	ds	1
  2847  00007B                     get_quot_rem@div:
  2848                           	opt stack 0
  2849  00007B                     caltime_to_epoch@ep:
  2850                           	opt stack 0
  2851                           
  2852                           ; 2 bytes @ 0x1B
  2853  00007B                     	ds	1
  2854  00007C                     ??_Auto_cut:
  2855  00007C                     ?_my_atoi:
  2856                           	opt stack 0
  2857  00007C                     ?___lwdiv:
  2858                           	opt stack 0
  2859  00007C                     my_utoa32@digits:
  2860                           	opt stack 0
  2861  00007C                     my_atoi@str:
  2862                           	opt stack 0
  2863  00007C                     ___lwdiv@dividend:
  2864                           	opt stack 0
  2865                           
  2866                           ; 2 bytes @ 0x1C
  2867  00007C                     	ds	1
  2868  00007D                     ??_caltime_to_epoch:
  2869  00007D                     my_utoa32@d:
  2870                           	opt stack 0
  2871  00007D                     get_quot_rem@num:
  2872                           	opt stack 0
  2873                           
  2874                           ; 4 bytes @ 0x1D
  2875  00007D                     	ds	1
  2876  00007E                     ??_my_atoi:
  2877  00007E                     Auto_cut@i:
  2878                           	opt stack 0
  2879  00007E                     ___lwdiv@divisor:
  2880                           	opt stack 0
  2881  00007E                     my_utoa32@v:
  2882                           	opt stack 0
  2883                           
  2884                           ; 4 bytes @ 0x1E
  2885  00007E                     	ds	2
  2886  000080                     ___lwdiv@counter:
  2887                           	opt stack 0
  2888                           
  2889                           ; 1 bytes @ 0x20
  2890  000080                     	ds	1
  2891  000081                     caltime_to_epoch@year:
  2892                           	opt stack 0
  2893  000081                     epoch_to_caltime@ct:
  2894                           	opt stack 0
  2895  000081                     ___lwdiv@quotient:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x21
  2899  000081                     	ds	1
  2900  000082                     caltime_to_epoch@month_3889:
  2901                           	opt stack 0
  2902  000082                     my_atoi@ret:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0x22
  2906  000082                     	ds	1
  2907  000083                     ?_sprintf:
  2908                           	opt stack 0
  2909  000083                     ctmu_set_ratio@percentage:
  2910                           	opt stack 0
  2911  000083                     ringbuf_put@rb:
  2912                           	opt stack 0
  2913  000083                     button_timer_interrupt@bt:
  2914                           	opt stack 0
  2915  000083                     epoch_to_caltime@ep:
  2916                           	opt stack 0
  2917  000083                     my_utoa@str:
  2918                           	opt stack 0
  2919  000083                     sprintf@sp:
  2920                           	opt stack 0
  2921  000083                     caltime_to_epoch@epoch:
  2922                           	opt stack 0
  2923                           
  2924                           ; 4 bytes @ 0x23
  2925  000083                     	ds	2
  2926  000085                     ??_epoch_to_caltime:
  2927  000085                     ringbuf_put@asciicode:
  2928                           	opt stack 0
  2929  000085                     button_timer_interrupt@sw_value:
  2930                           	opt stack 0
  2931  000085                     my_utoa@value:
  2932                           	opt stack 0
  2933  000085                     sprintf@f:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x25
  2937  000085                     	ds	1
  2938  000086                     ??_ringbuf_put:
  2939  000086                     
  2940                           ; 0 bytes @ 0x26
  2941  000086                     	ds	1
  2942  000087                     caltime_to_epoch@month:
  2943                           	opt stack 0
  2944  000087                     my_utoa@digits:
  2945                           	opt stack 0
  2946  000087                     epoch_to_caltime@day_since_epoch:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x27
  2950  000087                     	ds	1
  2951  000088                     my_utoa@d:
  2952                           	opt stack 0
  2953  000088                     RTCC_from_RTCC@ct:
  2954                           	opt stack 0
  2955                           
  2956                           ; 2 bytes @ 0x28
  2957  000088                     	ds	1
  2958  000089                     epoch_to_caltime@day:
  2959                           	opt stack 0
  2960  000089                     my_utoa@v:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x29
  2964  000089                     	ds	1
  2965  00008A                     ringbuf_put_num@rb:
  2966                           	opt stack 0
  2967  00008A                     ringbuf_put_str@rb:
  2968                           	opt stack 0
  2969  00008A                     RTCC_from_RTCC@ep:
  2970                           	opt stack 0
  2971  00008A                     USB_loop@rx_len:
  2972                           	opt stack 0
  2973                           
  2974                           ; 2 bytes @ 0x2A
  2975  00008A                     	ds	1
  2976  00008B                     epoch_to_caltime@year:
  2977                           	opt stack 0
  2978  00008B                     display_dec@edit:
  2979                           	opt stack 0
  2980                           
  2981                           ; 1 bytes @ 0x2B
  2982  00008B                     	ds	1
  2983  00008C                     epoch_to_caltime@month:
  2984                           	opt stack 0
  2985  00008C                     USB_loop@data:
  2986                           	opt stack 0
  2987  00008C                     ringbuf_put_num@value:
  2988                           	opt stack 0
  2989  00008C                     ringbuf_put_str@str:
  2990                           	opt stack 0
  2991  00008C                     display_dec@str:
  2992                           	opt stack 0
  2993                           
  2994                           ; 10 bytes @ 0x2C
  2995  00008C                     	ds	1
  2996  00008D                     epoch_to_caltime@num:
  2997                           	opt stack 0
  2998                           
  2999                           ; 4 bytes @ 0x2D
  3000  00008D                     	ds	1
  3001  00008E                     ringbuf_put_num@digits:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x2E
  3005  00008E                     	ds	1
  3006  00008F                     ringbuf_put_num@i:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x2F
  3010  00008F                     	ds	1
  3011  000090                     ringbuf_put_num@temp:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x30
  3015  000090                     	ds	1
  3016  000091                     RTCC_from_caltime@ct:
  3017                           	opt stack 0
  3018  000091                     RTCC_from_epoch@ct:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x31
  3022  000091                     	ds	1
  3023  000092                     command_get_data@tx:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x32
  3027  000092                     	ds	1
  3028  000093                     RTCC_from_caltime@ep:
  3029                           	opt stack 0
  3030  000093                     RTCC_from_epoch@ep:
  3031                           	opt stack 0
  3032                           
  3033                           ; 2 bytes @ 0x33
  3034  000093                     	ds	1
  3035  000094                     command_get_data@item:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x34
  3039  000094                     	ds	1
  3040  000095                     ??_sprintf:
  3041  000095                     command_get_data@i:
  3042                           	opt stack 0
  3043  000095                     software_init@i:
  3044                           	opt stack 0
  3045  000095                     RTCC_adjust_time_inc@ct:
  3046                           	opt stack 0
  3047  000095                     RTCC_adjust_time_dec@ct:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x35
  3051  000095                     	ds	1
  3052  000096                     display_dec@dec:
  3053                           	opt stack 0
  3054  000096                     command_get_data@str:
  3055                           	opt stack 0
  3056                           
  3057                           ; 10 bytes @ 0x36
  3058  000096                     	ds	1
  3059  000097                     display_time_1602@ct:
  3060                           	opt stack 0
  3061  000097                     RTCC_adjust_time_inc@ep:
  3062                           	opt stack 0
  3063  000097                     RTCC_adjust_time_dec@ep:
  3064                           	opt stack 0
  3065                           
  3066                           ; 2 bytes @ 0x37
  3067  000097                     	ds	2
  3068  000099                     ??_RTCC_adjust_time_inc:
  3069  000099                     ??_RTCC_adjust_time_dec:
  3070  000099                     display_time_1602@ep:
  3071                           	opt stack 0
  3072  000099                     sprintf@prec:
  3073                           	opt stack 0
  3074                           
  3075                           ; 2 bytes @ 0x39
  3076  000099                     	ds	2
  3077  00009B                     ??_display_time_1602:
  3078  00009B                     sprintf@cp:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x3B
  3082  00009B                     	ds	1
  3083  00009C                     display_LCD@str:
  3084                           	opt stack 0
  3085                           
  3086                           ; 10 bytes @ 0x3C
  3087  00009C                     	ds	1
  3088  00009D                     RTCC_adjust_time_inc@i_3971:
  3089                           	opt stack 0
  3090  00009D                     RTCC_adjust_time_dec@i_3984:
  3091                           	opt stack 0
  3092  00009D                     sprintf@ap:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x3D
  3096  00009D                     	ds	1
  3097  00009E                     RTCC_adjust_time_inc@i:
  3098                           	opt stack 0
  3099  00009E                     RTCC_adjust_time_dec@i:
  3100                           	opt stack 0
  3101                           
  3102                           ; 1 bytes @ 0x3E
  3103  00009E                     	ds	1
  3104  00009F                     ??_settings_loop:
  3105  00009F                     sprintf@len:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x3F
  3109  00009F                     	ds	1
  3110  0000A0                     _command_get_data$5385:
  3111                           	opt stack 0
  3112                           
  3113                           ; 4 bytes @ 0x40
  3114  0000A0                     	ds	1
  3115  0000A1                     sprintf@val:
  3116                           	opt stack 0
  3117                           
  3118                           ; 4 bytes @ 0x41
  3119  0000A1                     	ds	2
  3120  0000A3                     settings_loop@str:
  3121                           	opt stack 0
  3122                           
  3123                           ; 20 bytes @ 0x43
  3124  0000A3                     	ds	2
  3125  0000A5                     sprintf@flag:
  3126                           	opt stack 0
  3127                           
  3128                           ; 1 bytes @ 0x45
  3129  0000A5                     	ds	1
  3130  0000A6                     sprintf@c:
  3131                           	opt stack 0
  3132  0000A6                     _display_LCD$5384:
  3133                           	opt stack 0
  3134                           
  3135                           ; 4 bytes @ 0x46
  3136  0000A6                     	ds	1
  3137  0000A7                     sprintf@width:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x47
  3141  0000A7                     	ds	2
  3142  0000A9                     print_time@tx:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x49
  3146  0000A9                     	ds	2
  3147  0000AB                     print_time@str:
  3148                           	opt stack 0
  3149                           
  3150                           ; 30 bytes @ 0x4B
  3151  0000AB                     	ds	12
  3152  0000B7                     settings_loop@i:
  3153                           	opt stack 0
  3154                           
  3155                           ; 1 bytes @ 0x57
  3156  0000B7                     	ds	1
  3157  0000B8                     settings_loop@i_4441:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0x58
  3161  0000B8                     	ds	1
  3162  0000B9                     settings_loop@i_4445:
  3163                           	opt stack 0
  3164                           
  3165                           ; 1 bytes @ 0x59
  3166  0000B9                     	ds	1
  3167  0000BA                     settings_loop@i_4450:
  3168                           	opt stack 0
  3169                           
  3170                           ; 1 bytes @ 0x5A
  3171  0000BA                     	ds	1
  3172  0000BB                     settings_loop@i_4455:
  3173                           	opt stack 0
  3174                           
  3175                           ; 1 bytes @ 0x5B
  3176  0000BB                     	ds	1
  3177  0000BC                     settings_loop@i_4460:
  3178                           	opt stack 0
  3179                           
  3180                           ; 1 bytes @ 0x5C
  3181  0000BC                     	ds	1
  3182  0000BD                     settings_loop@j:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x5D
  3186  0000BD                     	ds	1
  3187  0000BE                     settings_loop@j_4454:
  3188                           	opt stack 0
  3189                           
  3190                           ; 1 bytes @ 0x5E
  3191  0000BE                     	ds	1
  3192  0000BF                     settings_loop@j_4459:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x5F
  3196  0000BF                     	ds	1
  3197  0000C0                     settings_loop@strp:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x60
  3201  0000C0                     	ds	2
  3202  0000C2                     normal_loop@str:
  3203                           	opt stack 0
  3204                           
  3205                           ; 30 bytes @ 0x62
  3206  0000C2                     	ds	7
  3207  0000C9                     command_at_hand@tx:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x69
  3211  0000C9                     	ds	2
  3212  0000CB                     command_at_hand@hand:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x6B
  3216  0000CB                     	ds	2
  3217  0000CD                     command_at_hand@min:
  3218                           	opt stack 0
  3219                           
  3220                           ; 1 bytes @ 0x6D
  3221  0000CD                     	ds	1
  3222  0000CE                     command_at_hand@max:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x6E
  3226  0000CE                     	ds	1
  3227  0000CF                     command_at_hand@value:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x6F
  3231  0000CF                     	ds	1
  3232  0000D0                     command_time@tx:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x70
  3236  0000D0                     	ds	2
  3237  0000D2                     command_time@op0:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x72
  3241  0000D2                     	ds	2
  3242  0000D4                     command_time@op1:
  3243                           	opt stack 0
  3244                           
  3245                           ; 2 bytes @ 0x74
  3246  0000D4                     	ds	2
  3247  0000D6                     command_time@op2:
  3248                           	opt stack 0
  3249                           
  3250                           ; 2 bytes @ 0x76
  3251  0000D6                     	ds	2
  3252  0000D8                     _command_time$5383:
  3253                           	opt stack 0
  3254                           
  3255                           ; 1 bytes @ 0x78
  3256  0000D8                     	ds	1
  3257  0000D9                     command_operation@tx:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x79
  3261  0000D9                     	ds	2
  3262  0000DB                     command_operation@op0:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x7B
  3266  0000DB                     	ds	2
  3267  0000DD                     command_operation@op1:
  3268                           	opt stack 0
  3269                           
  3270                           ; 2 bytes @ 0x7D
  3271  0000DD                     	ds	2
  3272  0000DF                     command_operation@op2:
  3273                           	opt stack 0
  3274                           
  3275                           ; 2 bytes @ 0x7F
  3276  0000DF                     	ds	1
  3277  0000E0                     normal_loop@i:
  3278                           	opt stack 0
  3279                           
  3280                           ; 1 bytes @ 0x80
  3281  0000E0                     	ds	1
  3282  0000E1                     command_operation@op3:
  3283                           	opt stack 0
  3284                           
  3285                           ; 2 bytes @ 0x81
  3286  0000E1                     	ds	2
  3287  0000E3                     command_operation@percentage:
  3288                           	opt stack 0
  3289                           
  3290                           ; 1 bytes @ 0x83
  3291  0000E3                     	ds	1
  3292  0000E4                     tblptru	equ	0xFF8
  3293                           tblptrh	equ	0xFF7
  3294                           tblptrl	equ	0xFF6
  3295                           tablat	equ	0xFF5
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           postdec1	equ	0xFE5
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           
  3302                           ; 0 bytes @ 0x84
  3303                           
  3304                           	psect	cstackCOMRAM
  3305  00002D                     __pcstackCOMRAM:
  3306                           	opt stack 0
  3307  00002D                     ??_USBStdGetDscHandler:
  3308  00002D                     ??_USBStdGetStatusHandler:
  3309  00002D                     ?i2_USBTransferOnePacket:
  3310                           	opt stack 0
  3311  00002D                     ?i2___awdiv:
  3312                           	opt stack 0
  3313  00002D                     ?i2___lwdiv:
  3314                           	opt stack 0
  3315  00002D                     ?i2___lldiv:
  3316                           	opt stack 0
  3317  00002D                     USBConfigureEndpoint@direction:
  3318                           	opt stack 0
  3319  00002D                     USBCtrlTrfTxService@byteToSend:
  3320                           	opt stack 0
  3321  00002D                     USBCtrlTrfRxService@i:
  3322                           	opt stack 0
  3323  00002D                     i2USBTransferOnePacket@dir:
  3324                           	opt stack 0
  3325  00002D                     i2LED_OUT@value:
  3326                           	opt stack 0
  3327  00002D                     i2___awdiv@dividend:
  3328                           	opt stack 0
  3329  00002D                     i2___lwdiv@dividend:
  3330                           	opt stack 0
  3331  00002D                     i2memset@p1:
  3332                           	opt stack 0
  3333  00002D                     i2___lldiv@dividend:
  3334                           	opt stack 0
  3335                           
  3336                           ; 4 bytes @ 0x0
  3337  00002D                     	ds	1
  3338  00002E                     ??_USBConfigureEndpoint:
  3339  00002E                     USBCtrlTrfRxService@byteToRead:
  3340                           	opt stack 0
  3341  00002E                     USBCtrlTrfInHandler@lastDTS:
  3342                           	opt stack 0
  3343  00002E                     i2LED_OUT@b:
  3344                           	opt stack 0
  3345  00002E                     USBStdGetStatusHandler@p:
  3346                           	opt stack 0
  3347  00002E                     i2USBTransferOnePacket@data:
  3348                           	opt stack 0
  3349                           
  3350                           ; 2 bytes @ 0x1
  3351  00002E                     	ds	1
  3352  00002F                     charge_time_count@i:
  3353                           	opt stack 0
  3354  00002F                     i2___awdiv@divisor:
  3355                           	opt stack 0
  3356  00002F                     i2___lwdiv@divisor:
  3357                           	opt stack 0
  3358  00002F                     i2memset@c:
  3359                           	opt stack 0
  3360                           
  3361                           ; 2 bytes @ 0x2
  3362  00002F                     	ds	1
  3363  000030                     i2USBTransferOnePacket@len:
  3364                           	opt stack 0
  3365                           
  3366                           ; 1 bytes @ 0x3
  3367  000030                     	ds	1
  3368  000031                     i2USBTransferOnePacket@ep:
  3369                           	opt stack 0
  3370  000031                     i2___awdiv@counter:
  3371                           	opt stack 0
  3372  000031                     i2___lwdiv@quotient:
  3373                           	opt stack 0
  3374  000031                     i2memset@n:
  3375                           	opt stack 0
  3376  000031                     i2___lldiv@divisor:
  3377                           	opt stack 0
  3378                           
  3379                           ; 4 bytes @ 0x4
  3380  000031                     	ds	1
  3381  000032                     USBConfigureEndpoint@EPNum:
  3382                           	opt stack 0
  3383  000032                     i2___awdiv@sign:
  3384                           	opt stack 0
  3385  000032                     i2USBTransferOnePacket@handle:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x5
  3389  000032                     	ds	1
  3390  000033                     i2___lwdiv@counter:
  3391                           	opt stack 0
  3392  000033                     USBConfigureEndpoint@handle:
  3393                           	opt stack 0
  3394  000033                     i2___awdiv@quotient:
  3395                           	opt stack 0
  3396  000033                     i2memset@p:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x6
  3400  000033                     	ds	2
  3401  000035                     ??_LED_indicator:
  3402  000035                     USBEnableEndpoint@options:
  3403                           	opt stack 0
  3404  000035                     i2USBDeviceInit@i:
  3405                           	opt stack 0
  3406  000035                     i2___lldiv@quotient:
  3407                           	opt stack 0
  3408                           
  3409                           ; 4 bytes @ 0x8
  3410  000035                     	ds	1
  3411  000036                     USBEnableEndpoint@p:
  3412                           	opt stack 0
  3413                           
  3414                           ; 2 bytes @ 0x9
  3415  000036                     	ds	2
  3416  000038                     USBEnableEndpoint@ep:
  3417                           	opt stack 0
  3418  000038                     LED_indicator@i:
  3419                           	opt stack 0
  3420                           
  3421                           ; 1 bytes @ 0xB
  3422  000038                     	ds	1
  3423  000039                     i2___lldiv@counter:
  3424                           	opt stack 0
  3425  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3426                           	opt stack 0
  3427                           
  3428                           ; 2 bytes @ 0xC
  3429  000039                     	ds	1
  3430  00003A                     ??_integrating:
  3431                           
  3432                           ; 0 bytes @ 0xD
  3433  00003A                     	ds	1
  3434  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3435                           	opt stack 0
  3436                           
  3437                           ; 2 bytes @ 0xE
  3438  00003B                     	ds	1
  3439  00003C                     integrating@i:
  3440                           	opt stack 0
  3441                           
  3442                           ; 1 bytes @ 0xF
  3443  00003C                     	ds	1
  3444  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3445                           	opt stack 0
  3446                           
  3447                           ; 2 bytes @ 0x10
  3448  00003D                     	ds	2
  3449  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3450                           
  3451                           ; 0 bytes @ 0x12
  3452  00003F                     	ds	2
  3453  000041                     ??_USBStdFeatureReqHandler:
  3454  000041                     USBStdSetCfgHandler@i:
  3455                           	opt stack 0
  3456                           
  3457                           ; 1 bytes @ 0x14
  3458  000041                     	ds	1
  3459  000042                     USBStdFeatureReqHandler@pUEP:
  3460                           	opt stack 0
  3461                           
  3462                           ; 2 bytes @ 0x15
  3463  000042                     	ds	2
  3464  000044                     USBStdFeatureReqHandler@current_ep_data:
  3465                           	opt stack 0
  3466                           
  3467                           ; 1 bytes @ 0x17
  3468  000044                     	ds	1
  3469  000045                     USBStdFeatureReqHandler@p:
  3470                           	opt stack 0
  3471                           
  3472                           ; 2 bytes @ 0x18
  3473  000045                     	ds	2
  3474  000047                     ??_USBCtrlEPService:
  3475  000047                     
  3476                           ; 0 bytes @ 0x1A
  3477  000047                     	ds	2
  3478  000049                     USBCtrlEPService@setup_cnt:
  3479                           	opt stack 0
  3480                           
  3481                           ; 1 bytes @ 0x1C
  3482  000049                     	ds	1
  3483  00004A                     USBDeviceTasks@i:
  3484                           	opt stack 0
  3485                           
  3486                           ; 1 bytes @ 0x1D
  3487  00004A                     	ds	1
  3488  00004B                     ??_ISR:
  3489                           
  3490                           ; 0 bytes @ 0x1E
  3491  00004B                     	ds	14
  3492                           tblptru	equ	0xFF8
  3493                           tblptrh	equ	0xFF7
  3494                           tblptrl	equ	0xFF6
  3495                           tablat	equ	0xFF5
  3496                           postinc0	equ	0xFEE
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           fsr1h	equ	0xFE2
  3500                           fsr1l	equ	0xFE1
  3501                           
  3502 ;;
  3503 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3504 ;;
  3505 ;; *************** function _main *****************
  3506 ;; Defined at:
  3507 ;;		line 138 in file "main.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2  1624[None  ] int 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels required when called:   20
  3527 ;; This function calls:
  3528 ;;		_RTCC_loop
  3529 ;;		_USB_loop
  3530 ;;		_bootload
  3531 ;;		_ctmu_loop
  3532 ;;		_hardware_init
  3533 ;;		_my_terminal_loop
  3534 ;;		_normal_loop
  3535 ;;		_sleep_loop
  3536 ;;		_software_init
  3537 ;; This function is called by:
  3538 ;;		Startup code after reset
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text0
  3543  0167AC                     __ptext0:
  3544                           	opt stack 0
  3545  0167AC                     _main:
  3546                           	opt stack 11
  3547                           
  3548                           ;main.c: 140: hardware_init();
  3549                           
  3550                           ;incstack = 0
  3551  0167AC  EC11  F0AE         	call	_hardware_init	;wreg free
  3552                           
  3553                           ;main.c: 142: software_init();
  3554  0167B0  EC01  F0A1         	call	_software_init	;wreg free
  3555  0167B4  D030               	goto	l12572
  3556  0167B6                     l12530:
  3557                           
  3558                           ;main.c: 147: INTCONbits.GIE = 0;
  3559  0167B6  9EF2               	bcf	intcon,7,c	;volatile
  3560                           
  3561                           ;main.c: 148: RTCC_loop();
  3562  0167B8  ECB3  F0B6         	call	_RTCC_loop	;wreg free
  3563                           
  3564                           ;main.c: 149: INTCONbits.GIE = 1;
  3565  0167BC  8EF2               	bsf	intcon,7,c	;volatile
  3566                           
  3567                           ;main.c: 150: INTCONbits.GIE = 0;
  3568  0167BE  9EF2               	bcf	intcon,7,c	;volatile
  3569                           
  3570                           ;main.c: 151: USB_loop();
  3571  0167C0  ECF3  F0AF         	call	_USB_loop	;wreg free
  3572                           
  3573                           ;main.c: 152: INTCONbits.GIE = 1;
  3574  0167C4  8EF2               	bsf	intcon,7,c	;volatile
  3575                           
  3576                           ;main.c: 153: INTCONbits.GIE = 0;
  3577  0167C6  9EF2               	bcf	intcon,7,c	;volatile
  3578                           
  3579                           ;main.c: 154: my_terminal_loop(&usb_tx, &usb_rx);
  3580  0167C8  0E6E               	movlw	low _usb_tx
  3581  0167CA  0101               	movlb	1	; () banked
  3582  0167CC  6F92               	movwf	my_terminal_loop@tx& (0+255),b
  3583  0167CE  0E01               	movlw	high _usb_tx
  3584  0167D0  0101               	movlb	1	; () banked
  3585  0167D2  6F93               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  3586  0167D4  0EE2               	movlw	low _usb_rx
  3587  0167D6  0101               	movlb	1	; () banked
  3588  0167D8  6F94               	movwf	my_terminal_loop@rx& (0+255),b
  3589  0167DA  0E02               	movlw	high _usb_rx
  3590  0167DC  0101               	movlb	1	; () banked
  3591  0167DE  6F95               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  3592  0167E0  EC7C  F08F         	call	_my_terminal_loop	;wreg free
  3593                           
  3594                           ;main.c: 155: INTCONbits.GIE = 1;
  3595  0167E4  8EF2               	bsf	intcon,7,c	;volatile
  3596                           
  3597                           ;main.c: 156: INTCONbits.GIE = 0;
  3598  0167E6  9EF2               	bcf	intcon,7,c	;volatile
  3599                           
  3600                           ;main.c: 157: normal_loop();
  3601  0167E8  EC23  F099         	call	_normal_loop	;wreg free
  3602                           
  3603                           ;main.c: 158: INTCONbits.GIE = 1;
  3604  0167EC  8EF2               	bsf	intcon,7,c	;volatile
  3605                           
  3606                           ;main.c: 159: INTCONbits.GIE = 0;
  3607  0167EE  9EF2               	bcf	intcon,7,c	;volatile
  3608                           
  3609                           ;main.c: 160: ctmu_loop();
  3610  0167F0  EC13  F0BA         	call	_ctmu_loop	;wreg free
  3611                           
  3612                           ;main.c: 161: if (ctmu_m.flag.pressing && port[0].ctmu.flag.pressing && port[1].ctmu.fla
      +                          g.pressing && port[2].ctmu.flag.pressing) {
  3613  0167F4  0101               	movlb	1	; () banked
  3614  0167F6  A18F               	btfss	(_ctmu_m+3)& (0+255),0,b
  3615  0167F8  D00A               	goto	l12568
  3616                           
  3617                           ; BSR set to: 1
  3618  0167FA  0101               	movlb	1	; () banked
  3619  0167FC  A12C               	btfss	(_port+3)& (0+255),0,b
  3620  0167FE  D007               	goto	l12568
  3621                           
  3622                           ; BSR set to: 1
  3623  016800  0101               	movlb	1	; () banked
  3624  016802  A143               	btfss	(_port+26)& (0+255),0,b
  3625  016804  D004               	goto	l12568
  3626                           
  3627                           ; BSR set to: 1
  3628  016806  0101               	movlb	1	; () banked
  3629  016808  B15A               	btfsc	(_port+49)& (0+255),0,b
  3630                           
  3631                           ; BSR set to: 1
  3632                           ;main.c: 162: bootload();
  3633  01680A  ECD5  F0B6         	call	_bootload	;wreg free
  3634  01680E                     l12568:
  3635                           
  3636                           ;main.c: 163: }
  3637                           ;main.c: 164: INTCONbits.GIE = 1;
  3638  01680E  8EF2               	bsf	intcon,7,c	;volatile
  3639                           
  3640                           ;main.c: 165: INTCONbits.GIE = 0;
  3641  016810  9EF2               	bcf	intcon,7,c	;volatile
  3642                           
  3643                           ;main.c: 166: sleep_loop();
  3644  016812  ECC0  F0A8         	call	_sleep_loop	;wreg free
  3645  016816                     l12572:
  3646                           
  3647                           ;main.c: 167: INTCONbits.GIE = 1;
  3648  016816  8EF2               	bsf	intcon,7,c	;volatile
  3649  016818  D7CE               	goto	l12530
  3650  01681A                     __end_of_main:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           intcon	equ	0xFF2
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           postdec1	equ	0xFE5
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           
  3663 ;; *************** function _software_init *****************
  3664 ;; Defined at:
  3665 ;;		line 111 in file "main.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  i               1   53[BANK0 ] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;Total ram usage:        1 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:   15
  3686 ;; This function calls:
  3687 ;;		_LED_OUT
  3688 ;;		_OUT
  3689 ;;		_RTCC_from_RTCC
  3690 ;;		_RTCC_from_epoch
  3691 ;;		_ctmu_set_ratio
  3692 ;;		_display_char_puts
  3693 ;;		_display_now
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text1
  3700  014202                     __ptext1:
  3701                           	opt stack 0
  3702  014202                     _software_init:
  3703                           	opt stack 15
  3704                           
  3705                           ;main.c: 113: ctmu_ratio = 90;
  3706                           
  3707                           ;incstack = 0
  3708  014202  0E5A               	movlw	90
  3709  014204  0100               	movlb	0	; () banked
  3710  014206  6FF5               	movwf	_ctmu_ratio& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;main.c: 114: ctmu_set_ratio(ctmu_ratio);
  3714  014208  0100               	movlb	0	; () banked
  3715  01420A  51F5               	movf	_ctmu_ratio& (0+255),w,b
  3716  01420C  ECE9  F0A4         	call	_ctmu_set_ratio
  3717                           
  3718                           ;main.c: 117: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3719  014210  0E7E               	movlw	low _caltime_now
  3720  014212  0100               	movlb	0	; () banked
  3721  014214  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3722  014216  0E01               	movlw	high _caltime_now
  3723  014218  0100               	movlb	0	; () banked
  3724  01421A  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3725  01421C  0EFC               	movlw	low _epoch_now
  3726  01421E  0100               	movlb	0	; () banked
  3727  014220  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3728  014222  0E00               	movlw	high _epoch_now
  3729  014224  0100               	movlb	0	; () banked
  3730  014226  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3731  014228  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
  3732                           
  3733                           ;main.c: 118: if (caltime_now.DD == 0) {
  3734  01422C  0101               	movlb	1	; () banked
  3735  01422E  5182               	movf	(_caltime_now+4)& (0+255),w,b
  3736  014230  A4D8               	btfss	status,2,c
  3737  014232  D017               	goto	l12326
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;main.c: 119: epoch_now = 0;
  3741  014234  0E00               	movlw	0
  3742  014236  0100               	movlb	0	; () banked
  3743  014238  6FFC               	movwf	_epoch_now& (0+255),b
  3744  01423A  0E00               	movlw	0
  3745  01423C  6FFD               	movwf	(_epoch_now+1)& (0+255),b
  3746  01423E  0E00               	movlw	0
  3747  014240  6FFE               	movwf	(_epoch_now+2)& (0+255),b
  3748  014242  0E00               	movlw	0
  3749  014244  6FFF               	movwf	(_epoch_now+3)& (0+255),b
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;main.c: 120: RTCC_from_epoch(&caltime_now, &epoch_now);
  3753  014246  0E7E               	movlw	low _caltime_now
  3754  014248  0100               	movlb	0	; () banked
  3755  01424A  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  3756  01424C  0E01               	movlw	high _caltime_now
  3757  01424E  0100               	movlb	0	; () banked
  3758  014250  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  3759  014252  0EFC               	movlw	low _epoch_now
  3760  014254  0100               	movlb	0	; () banked
  3761  014256  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  3762  014258  0E00               	movlw	high _epoch_now
  3763  01425A  0100               	movlb	0	; () banked
  3764  01425C  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  3765  01425E  EC6E  F0B9         	call	_RTCC_from_epoch	;wreg free
  3766  014262                     l12326:
  3767                           
  3768                           ;main.c: 121: }
  3769                           ;main.c: 123: display_char_puts("Charge Station", "Made by KERI");
  3770  014262  0ED1               	movlw	low STR_138
  3771  014264  0100               	movlb	0	; () banked
  3772  014266  6F60               	movwf	display_char_puts@str0& (0+255),b
  3773  014268  0EFE               	movlw	high STR_138
  3774  01426A  0100               	movlb	0	; () banked
  3775  01426C  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  3776  01426E  0EEF               	movlw	low STR_139
  3777  014270  0100               	movlb	0	; () banked
  3778  014272  6F62               	movwf	display_char_puts@str1& (0+255),b
  3779  014274  0EFE               	movlw	high STR_139
  3780  014276  0100               	movlb	0	; () banked
  3781  014278  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  3782  01427A  EC86  F0A3         	call	_display_char_puts	;wreg free
  3783                           
  3784                           ;main.c: 124: display_now(LOGO);
  3785  01427E  0E00               	movlw	0
  3786  014280  EC01  F0BA         	call	_display_now
  3787                           
  3788                           ;main.c: 127: for (uint8_t i = 0; i < 3; i++) {
  3789  014284  0E00               	movlw	0
  3790  014286  0100               	movlb	0	; () banked
  3791  014288  6F95               	movwf	software_init@i& (0+255),b
  3792  01428A                     l12332:
  3793                           
  3794                           ; BSR set to: 0
  3795  01428A  0E02               	movlw	2
  3796  01428C  0100               	movlb	0	; () banked
  3797  01428E  6595               	cpfsgt	software_init@i& (0+255),b
  3798  014290  D001               	goto	l12336
  3799  014292  D040               	goto	l12348
  3800  014294                     l12336:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;main.c: 128: OUT(i, 0);
  3804  014294  0E00               	movlw	0
  3805  014296  0100               	movlb	0	; () banked
  3806  014298  6F60               	movwf	OUT@value& (0+255),b
  3807  01429A  0100               	movlb	0	; () banked
  3808  01429C  5195               	movf	software_init@i& (0+255),w,b
  3809  01429E  EC9D  F0B3         	call	_OUT
  3810                           
  3811                           ;main.c: 129: LED_OUT(i, 0);
  3812  0142A2  0E00               	movlw	0
  3813  0142A4  0100               	movlb	0	; () banked
  3814  0142A6  6F60               	movwf	LED_OUT@value& (0+255),b
  3815  0142A8  0100               	movlb	0	; () banked
  3816  0142AA  5195               	movf	software_init@i& (0+255),w,b
  3817  0142AC  EC64  F0B3         	call	_LED_OUT
  3818                           
  3819                           ;main.c: 130: port[i].cut_cnt = 0;
  3820  0142B0  0100               	movlb	0	; () banked
  3821  0142B2  5195               	movf	software_init@i& (0+255),w,b
  3822  0142B4  0D17               	mullw	23
  3823  0142B6  0E14               	movlw	20
  3824  0142B8  26F3               	addwf	prodl,f,c
  3825  0142BA  0E00               	movlw	0
  3826  0142BC  22F4               	addwfc	prodh,f,c
  3827  0142BE  0E29               	movlw	low _port
  3828  0142C0  24F3               	addwf	prodl,w,c
  3829  0142C2  6ED9               	movwf	fsr2l,c
  3830  0142C4  0E01               	movlw	high _port
  3831  0142C6  20F4               	addwfc	prodh,w,c
  3832  0142C8  6EDA               	movwf	fsr2h,c
  3833  0142CA  0E00               	movlw	0
  3834  0142CC  6EDE               	movwf	postinc2,c
  3835  0142CE  0E00               	movlw	0
  3836  0142D0  6EDD               	movwf	postdec2,c
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;main.c: 131: port[i].flag.auto_cut_ON = 1;
  3840  0142D2  0100               	movlb	0	; () banked
  3841  0142D4  5195               	movf	software_init@i& (0+255),w,b
  3842  0142D6  0D17               	mullw	23
  3843  0142D8  0E16               	movlw	22
  3844  0142DA  26F3               	addwf	prodl,f,c
  3845  0142DC  0E00               	movlw	0
  3846  0142DE  22F4               	addwfc	prodh,f,c
  3847  0142E0  0E29               	movlw	low _port
  3848  0142E2  24F3               	addwf	prodl,w,c
  3849  0142E4  6ED9               	movwf	fsr2l,c
  3850  0142E6  0E01               	movlw	high _port
  3851  0142E8  20F4               	addwfc	prodh,w,c
  3852  0142EA  6EDA               	movwf	fsr2h,c
  3853  0142EC  0101               	movlb	1	; () banked
  3854  0142EE  80DF               	bsf	indf2,0,c
  3855                           
  3856                           ; BSR set to: 1
  3857                           ;main.c: 132: port[i].flag.led_indicator_ON = 1;
  3858  0142F0  0100               	movlb	0	; () banked
  3859  0142F2  5195               	movf	software_init@i& (0+255),w,b
  3860  0142F4  0D17               	mullw	23
  3861  0142F6  0E16               	movlw	22
  3862  0142F8  26F3               	addwf	prodl,f,c
  3863  0142FA  0E00               	movlw	0
  3864  0142FC  22F4               	addwfc	prodh,f,c
  3865  0142FE  0E29               	movlw	low _port
  3866  014300  24F3               	addwf	prodl,w,c
  3867  014302  6ED9               	movwf	fsr2l,c
  3868  014304  0E01               	movlw	high _port
  3869  014306  20F4               	addwfc	prodh,w,c
  3870  014308  6EDA               	movwf	fsr2h,c
  3871  01430A  0101               	movlb	1	; () banked
  3872  01430C  82DF               	bsf	indf2,1,c
  3873                           
  3874                           ; BSR set to: 1
  3875  01430E  0100               	movlb	0	; () banked
  3876  014310  2B95               	incf	software_init@i& (0+255),f,b
  3877  014312  D7BB               	goto	l12332
  3878  014314                     l12348:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 133: }
  3882                           ;main.c: 135: settings_flag = 0;
  3883  014314  0E00               	movlw	0
  3884  014316  6E25               	movwf	_settings_flag,c
  3885                           
  3886                           ; BSR set to: 0
  3887  014318  0012               	return		;funcret
  3888  01431A                     __end_of_software_init:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1h	equ	0xFE2
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           postinc2	equ	0xFDE
  3904                           postdec2	equ	0xFDD
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _sleep_loop *****************
  3910 ;; Defined at:
  3911 ;;		line 757 in file "tasks.h"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  i               1   10[BANK0 ] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;		None               void
  3918 ;; Registers used:
  3919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:   15
  3932 ;; This function calls:
  3933 ;;		_ADC
  3934 ;;		_I2C_LCD_Clear
  3935 ;;		_I2C_LCD_Puts
  3936 ;;		_I2C_LCD_SetCursor
  3937 ;;		_LED_OUT
  3938 ;;		_OUT
  3939 ;;		_display_now
  3940 ;;		_display_reserve
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text2
  3947  015180                     __ptext2:
  3948                           	opt stack 0
  3949  015180                     _sleep_loop:
  3950                           	opt stack 15
  3951                           
  3952                           ;tasks.h: 758: static uint8_t sleep_flag = 0;
  3953                           ;tasks.h: 759: if (ADC(12) < 2048) {
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;incstack = 0
  3957  015180  0E0C               	movlw	12
  3958  015182  EC42  F0B8         	call	_ADC
  3959  015186  0E08               	movlw	8
  3960  015188  0100               	movlb	0	; () banked
  3961  01518A  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  3962  01518C  B0D8               	btfsc	status,0,c
  3963  01518E  D059               	goto	l12284
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;tasks.h: 760: sleep_flag = 1;
  3967  015190  0E01               	movlw	1
  3968  015192  0101               	movlb	1	; () banked
  3969  015194  6F28               	movwf	sleep_loop@sleep_flag& (0+255),b
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;tasks.h: 761: INTCONbits.GIE = 0;
  3973  015196  9EF2               	bcf	intcon,7,c	;volatile
  3974                           
  3975                           ;tasks.h: 762: for (uint8_t i = 0; i < 3; i++) {
  3976  015198  0E00               	movlw	0
  3977  01519A  0100               	movlb	0	; () banked
  3978  01519C  6F6A               	movwf	sleep_loop@i& (0+255),b
  3979  01519E                     l12254:
  3980                           
  3981                           ; BSR set to: 0
  3982  01519E  0E02               	movlw	2
  3983  0151A0  0100               	movlb	0	; () banked
  3984  0151A2  656A               	cpfsgt	sleep_loop@i& (0+255),b
  3985  0151A4  D001               	goto	l12258
  3986  0151A6  D011               	goto	l1589
  3987  0151A8                     l12258:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;tasks.h: 763: OUT(i, 0);
  3991  0151A8  0E00               	movlw	0
  3992  0151AA  0100               	movlb	0	; () banked
  3993  0151AC  6F60               	movwf	OUT@value& (0+255),b
  3994  0151AE  0100               	movlb	0	; () banked
  3995  0151B0  516A               	movf	sleep_loop@i& (0+255),w,b
  3996  0151B2  EC9D  F0B3         	call	_OUT
  3997                           
  3998                           ;tasks.h: 764: LED_OUT(i, 0);
  3999  0151B6  0E00               	movlw	0
  4000  0151B8  0100               	movlb	0	; () banked
  4001  0151BA  6F60               	movwf	LED_OUT@value& (0+255),b
  4002  0151BC  0100               	movlb	0	; () banked
  4003  0151BE  516A               	movf	sleep_loop@i& (0+255),w,b
  4004  0151C0  EC64  F0B3         	call	_LED_OUT
  4005  0151C4  0100               	movlb	0	; () banked
  4006  0151C6  2B6A               	incf	sleep_loop@i& (0+255),f,b
  4007  0151C8  D7EA               	goto	l12254
  4008  0151CA                     l1589:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;tasks.h: 765: }
  4012                           ;tasks.h: 766: UCONbits.USBEN = 0;
  4013  0151CA  9665               	bcf	3941,3,c	;volatile
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;tasks.h: 767: I2C_LCD_Clear();
  4017  0151CC  ECDD  F0B9         	call	_I2C_LCD_Clear	;wreg free
  4018                           
  4019                           ;tasks.h: 768: I2C_LCD_SetCursor(0, 0);
  4020  0151D0  0E00               	movlw	0
  4021  0151D2  0100               	movlb	0	; () banked
  4022  0151D4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4023  0151D6  0E00               	movlw	0
  4024  0151D8  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  4025                           
  4026                           ;tasks.h: 769: I2C_LCD_Puts("Charge Station 6");
  4027  0151DC  0E4D               	movlw	low STR_136
  4028  0151DE  0100               	movlb	0	; () banked
  4029  0151E0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4030  0151E2  0EFE               	movlw	high STR_136
  4031  0151E4  0100               	movlb	0	; () banked
  4032  0151E6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4033  0151E8  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  4034                           
  4035                           ;tasks.h: 770: I2C_LCD_SetCursor(0, 1);
  4036  0151EC  0E01               	movlw	1
  4037  0151EE  0100               	movlb	0	; () banked
  4038  0151F0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4039  0151F2  0E00               	movlw	0
  4040  0151F4  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  4041                           
  4042                           ;tasks.h: 771: I2C_LCD_Puts("SLEEPING NOW");
  4043  0151F8  0EFC               	movlw	low STR_137
  4044  0151FA  0100               	movlb	0	; () banked
  4045  0151FC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4046  0151FE  0EFE               	movlw	high STR_137
  4047  015200  0100               	movlb	0	; () banked
  4048  015202  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4049  015204  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  4050                           
  4051                           ;tasks.h: 772: }
  4052                           ;tasks.h: 773: while (sleep_flag) {
  4053  015208  D01C               	goto	l12284
  4054  01520A                     l12274:
  4055                           
  4056                           ;tasks.h: 774: if (ADC(12) > 2048) {
  4057  01520A  0E0C               	movlw	12
  4058  01520C  EC42  F0B8         	call	_ADC
  4059  015210  0100               	movlb	0	; () banked
  4060  015212  0560               	decf	?_ADC& (0+255),w,b
  4061  015214  0E08               	movlw	8
  4062  015216  0100               	movlb	0	; () banked
  4063  015218  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  4064  01521A  A0D8               	btfss	status,0,c
  4065  01521C  D010               	goto	l1592
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;tasks.h: 775: sleep_flag = 0;
  4069  01521E  0E00               	movlw	0
  4070  015220  0101               	movlb	1	; () banked
  4071  015222  6F28               	movwf	sleep_loop@sleep_flag& (0+255),b
  4072                           
  4073                           ; BSR set to: 1
  4074                           ;tasks.h: 776: UCONbits.USBEN = 1;
  4075  015224  8665               	bsf	3941,3,c	;volatile
  4076                           
  4077                           ; BSR set to: 1
  4078                           ;tasks.h: 777: display_now(LOGO);
  4079  015226  0E00               	movlw	0
  4080  015228  EC01  F0BA         	call	_display_now
  4081                           
  4082                           ;tasks.h: 778: display_reserve(PRINT_TIME, 120);
  4083  01522C  0E00               	movlw	0
  4084  01522E  0100               	movlb	0	; () banked
  4085  015230  6F61               	movwf	(display_reserve@time+1)& (0+255),b
  4086  015232  0E78               	movlw	120
  4087  015234  6F60               	movwf	display_reserve@time& (0+255),b
  4088  015236  0E01               	movlw	1
  4089  015238  EC1B  F0BA         	call	_display_reserve
  4090                           
  4091                           ;tasks.h: 779: break;
  4092  01523C  0012               	return	
  4093  01523E                     l1592:
  4094                           
  4095                           ; BSR set to: 0
  4096  01523E  0003               	sleep		;# 
  4097                           
  4098                           ;tasks.h: 782: __nop();
  4099  015240  F000               	nop	
  4100  015242                     l12284:
  4101  015242  0101               	movlb	1	; () banked
  4102  015244  5128               	movf	sleep_loop@sleep_flag& (0+255),w,b
  4103  015246  0101               	movlb	1	; () banked
  4104  015248  B4D8               	btfsc	status,2,c
  4105  01524A  0012               	return	
  4106  01524C  D7DE               	goto	l12274
  4107  01524E                     __end_of_sleep_loop:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _display_reserve *****************
  4129 ;; Defined at:
  4130 ;;		line 303 in file "tasks.h"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  next_item       1    wreg     enum E9644
  4133 ;;  time            2    0[BANK0 ] unsigned int 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  next_item       1    2[BANK0 ] enum E9644
  4136 ;; Return value:  Size  Location     Type
  4137 ;;		None               void
  4138 ;; Registers used:
  4139 ;;		wreg
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4148 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;Total ram usage:        3 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:   11
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_sleep_loop
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text3
  4160  017436                     __ptext3:
  4161                           	opt stack 0
  4162  017436                     _display_reserve:
  4163                           	opt stack 18
  4164                           
  4165                           ;incstack = 0
  4166                           ;display_reserve@next_item stored from wreg
  4167  017436  0100               	movlb	0	; () banked
  4168  017438  6F62               	movwf	display_reserve@next_item& (0+255),b
  4169                           
  4170                           ;tasks.h: 304: next_print_item = next_item;
  4171  01743A  C062  F125         	movff	display_reserve@next_item,_next_print_item
  4172  01743E  0012               	return		;funcret
  4173  017440                     __end_of_display_reserve:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postdec1	equ	0xFE5
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           postdec2	equ	0xFDD
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _normal_loop *****************
  4195 ;; Defined at:
  4196 ;;		line 683 in file "tasks.h"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  i               1  128[BANK0 ] unsigned char 
  4201 ;;  str            30   98[BANK0 ] unsigned char [30]
  4202 ;; Return value:  Size  Location     Type
  4203 ;;		None               void
  4204 ;; Registers used:
  4205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;Total ram usage:       31 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:   17
  4218 ;; This function calls:
  4219 ;;		_Auto_cut
  4220 ;;		_RTCC_from_RTCC
  4221 ;;		___lwdiv
  4222 ;;		___lwmod
  4223 ;;		_display_LCD
  4224 ;;		_display_now
  4225 ;;		_port_button_loop
  4226 ;;		_ringbuf_put_str
  4227 ;;		_settings_loop
  4228 ;;		_sprintf
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text4
  4235  013246                     __ptext4:
  4236                           	opt stack 0
  4237  013246                     _normal_loop:
  4238                           	opt stack 13
  4239                           
  4240                           ;tasks.h: 684: if (settings_flag) {
  4241                           
  4242                           ;incstack = 0
  4243  013246  5025               	movf	_settings_flag,w,c
  4244  013248  B4D8               	btfsc	status,2,c
  4245  01324A  D013               	goto	l12184
  4246                           
  4247                           ;tasks.h: 685: settings_loop();
  4248  01324C  EC00  F080         	call	_settings_loop	;wreg free
  4249                           
  4250                           ;tasks.h: 686: if (ctmu_m.flag.press) {
  4251  013250  0101               	movlb	1	; () banked
  4252  013252  A18E               	btfss	(_ctmu_m+2)& (0+255),0,b
  4253  013254  D01F               	goto	l12192
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;tasks.h: 687: ctmu_m.flags = 0;
  4257  013256  0E00               	movlw	0
  4258  013258  0101               	movlb	1	; () banked
  4259  01325A  6F8F               	movwf	(_ctmu_m+3)& (0+255),b
  4260  01325C  0E00               	movlw	0
  4261  01325E  6F8E               	movwf	(_ctmu_m+2)& (0+255),b
  4262                           
  4263                           ;tasks.h: 688: settings_flag = 0;
  4264  013260  0E00               	movlw	0
  4265  013262  6E25               	movwf	_settings_flag,c
  4266                           
  4267                           ; BSR set to: 1
  4268                           ;tasks.h: 689: display_now(PRINT_TIME);
  4269  013264  0E01               	movlw	1
  4270  013266  EC01  F0BA         	call	_display_now
  4271                           
  4272                           ;tasks.h: 690: edit_flag.flags = 0;
  4273  01326A  0E00               	movlw	0
  4274  01326C  0100               	movlb	0	; () banked
  4275  01326E  6FF6               	movwf	_edit_flag& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;tasks.h: 691: }
  4279                           ;tasks.h: 692: } else {
  4280  013270  D011               	goto	l12192
  4281  013272                     l12184:
  4282                           
  4283                           ;tasks.h: 693: port_button_loop();
  4284  013272  EC9C  F09C         	call	_port_button_loop	;wreg free
  4285                           
  4286                           ;tasks.h: 694: if (ctmu_m.flag.press) {
  4287  013276  0101               	movlb	1	; () banked
  4288  013278  A18E               	btfss	(_ctmu_m+2)& (0+255),0,b
  4289  01327A  D00C               	goto	l12192
  4290                           
  4291                           ; BSR set to: 1
  4292                           ;tasks.h: 695: ctmu_m.flags = 0;
  4293  01327C  0E00               	movlw	0
  4294  01327E  0101               	movlb	1	; () banked
  4295  013280  6F8F               	movwf	(_ctmu_m+3)& (0+255),b
  4296  013282  0E00               	movlw	0
  4297  013284  6F8E               	movwf	(_ctmu_m+2)& (0+255),b
  4298                           
  4299                           ;tasks.h: 696: settings_flag = 1;
  4300  013286  0E01               	movlw	1
  4301  013288  6E25               	movwf	_settings_flag,c
  4302                           
  4303                           ;tasks.h: 697: settings_state = 0;
  4304  01328A  0E00               	movlw	0
  4305  01328C  6E26               	movwf	_settings_state,c
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;tasks.h: 698: display_now(SETTINGS);
  4309  01328E  0E03               	movlw	3
  4310  013290  EC01  F0BA         	call	_display_now
  4311  013294                     l12192:
  4312                           
  4313                           ;tasks.h: 699: }
  4314                           ;tasks.h: 700: }
  4315                           ;tasks.h: 702: if (cut_time_flag) {
  4316  013294  5022               	movf	_cut_time_flag,w,c
  4317  013296  B4D8               	btfsc	status,2,c
  4318  013298  D004               	goto	l12198
  4319                           
  4320                           ;tasks.h: 703: cut_time_flag = 0;
  4321  01329A  0E00               	movlw	0
  4322  01329C  6E22               	movwf	_cut_time_flag,c
  4323                           
  4324                           ;tasks.h: 704: Auto_cut();
  4325  01329E  ECD4  F09F         	call	_Auto_cut	;wreg free
  4326  0132A2                     l12198:
  4327                           
  4328                           ;tasks.h: 705: }
  4329                           ;tasks.h: 707: if (time_change_flag) {
  4330  0132A2  502A               	movf	_time_change_flag,w,c
  4331  0132A4  B4D8               	btfsc	status,2,c
  4332  0132A6  D008               	goto	l1566
  4333                           
  4334                           ;tasks.h: 708: time_change_flag = 0;
  4335  0132A8  0E00               	movlw	0
  4336  0132AA  6E2A               	movwf	_time_change_flag,c
  4337                           
  4338                           ;tasks.h: 709: if (pres_print_item == PRINT_TIME)display_flag = 1;
  4339  0132AC  0100               	movlb	0	; () banked
  4340  0132AE  05F8               	decf	_pres_print_item& (0+255),w,b
  4341  0132B0  A4D8               	btfss	status,2,c
  4342  0132B2  D002               	goto	l1566
  4343                           
  4344                           ; BSR set to: 0
  4345  0132B4  0E01               	movlw	1
  4346  0132B6  6E23               	movwf	_display_flag,c
  4347  0132B8                     l1566:
  4348                           
  4349                           ;tasks.h: 710: }
  4350                           ;tasks.h: 712: if (display_flag) {
  4351  0132B8  5023               	movf	_display_flag,w,c
  4352  0132BA  B4D8               	btfsc	status,2,c
  4353  0132BC  D004               	goto	l12210
  4354                           
  4355                           ;tasks.h: 713: display_flag = 0;
  4356  0132BE  0E00               	movlw	0
  4357  0132C0  6E23               	movwf	_display_flag,c
  4358                           
  4359                           ;tasks.h: 714: display_LCD();
  4360  0132C2  EC79  F08A         	call	_display_LCD	;wreg free
  4361  0132C6                     l12210:
  4362                           
  4363                           ;tasks.h: 715: }
  4364                           ;tasks.h: 717: if (terminal_data_out && terminal_data_out_flag) {
  4365  0132C6  5028               	movf	_terminal_data_out,w,c
  4366  0132C8  B4D8               	btfsc	status,2,c
  4367  0132CA  0012               	return	
  4368  0132CC  5029               	movf	_terminal_data_out_flag,w,c
  4369  0132CE  B4D8               	btfsc	status,2,c
  4370  0132D0  0012               	return	
  4371                           
  4372                           ;tasks.h: 718: terminal_data_out_flag = 0;
  4373  0132D2  0E00               	movlw	0
  4374  0132D4  6E29               	movwf	_terminal_data_out_flag,c
  4375                           
  4376                           ;tasks.h: 719: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4377  0132D6  0E7E               	movlw	low _caltime_now
  4378  0132D8  0100               	movlb	0	; () banked
  4379  0132DA  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4380  0132DC  0E01               	movlw	high _caltime_now
  4381  0132DE  0100               	movlb	0	; () banked
  4382  0132E0  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4383  0132E2  0EFC               	movlw	low _epoch_now
  4384  0132E4  0100               	movlb	0	; () banked
  4385  0132E6  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4386  0132E8  0E00               	movlw	high _epoch_now
  4387  0132EA  0100               	movlb	0	; () banked
  4388  0132EC  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4389  0132EE  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
  4390                           
  4391                           ;tasks.h: 720: char str[30];
  4392                           ;tasks.h: 721: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
  4393                           ;tasks.h: 722: caltime_now.YY,
  4394                           ;tasks.h: 723: caltime_now.MM,
  4395                           ;tasks.h: 724: caltime_now.DD,
  4396                           ;tasks.h: 725: caltime_now.hh,
  4397                           ;tasks.h: 726: caltime_now.mm,
  4398                           ;tasks.h: 727: caltime_now.ss
  4399                           ;tasks.h: 728: );
  4400  0132F2  0EC2               	movlw	low normal_loop@str
  4401  0132F4  0100               	movlb	0	; () banked
  4402  0132F6  6F83               	movwf	sprintf@sp& (0+255),b
  4403  0132F8  0E00               	movlw	high normal_loop@str
  4404  0132FA  0100               	movlb	0	; () banked
  4405  0132FC  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  4406  0132FE  0ED6               	movlw	low STR_133
  4407  013300  0100               	movlb	0	; () banked
  4408  013302  6F85               	movwf	sprintf@f& (0+255),b
  4409  013304  0EFD               	movlw	high STR_133
  4410  013306  0100               	movlb	0	; () banked
  4411  013308  6F86               	movwf	(sprintf@f+1)& (0+255),b
  4412  01330A  C184  F087         	movff	_caltime_now+6,?_sprintf+4
  4413  01330E  0100               	movlb	0	; () banked
  4414  013310  6B88               	clrf	(?_sprintf+5)& (0+255),b
  4415  013312  C183  F089         	movff	_caltime_now+5,?_sprintf+6
  4416  013316  0100               	movlb	0	; () banked
  4417  013318  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  4418  01331A  C182  F08B         	movff	_caltime_now+4,?_sprintf+8
  4419  01331E  0100               	movlb	0	; () banked
  4420  013320  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  4421  013322  C180  F08D         	movff	_caltime_now+2,?_sprintf+10
  4422  013326  0100               	movlb	0	; () banked
  4423  013328  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  4424  01332A  C17F  F08F         	movff	_caltime_now+1,?_sprintf+12
  4425  01332E  0100               	movlb	0	; () banked
  4426  013330  6B90               	clrf	(?_sprintf+13)& (0+255),b
  4427  013332  C17E  F091         	movff	_caltime_now,?_sprintf+14
  4428  013336  0100               	movlb	0	; () banked
  4429  013338  6B92               	clrf	(?_sprintf+15)& (0+255),b
  4430  01333A  ECEB  F087         	call	_sprintf	;wreg free
  4431                           
  4432                           ;tasks.h: 729: ringbuf_put_str(&usb_tx, str);
  4433  01333E  0E6E               	movlw	low _usb_tx
  4434  013340  0100               	movlb	0	; () banked
  4435  013342  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  4436  013344  0E01               	movlw	high _usb_tx
  4437  013346  0100               	movlb	0	; () banked
  4438  013348  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
  4439  01334A  0EC2               	movlw	low normal_loop@str
  4440  01334C  0100               	movlb	0	; () banked
  4441  01334E  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  4442  013350  0E00               	movlw	high normal_loop@str
  4443  013352  0100               	movlb	0	; () banked
  4444  013354  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4445  013356  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
  4446                           
  4447                           ;tasks.h: 730: for (uint8_t i = 0; i < 3; i++) {
  4448  01335A  0E00               	movlw	0
  4449  01335C  0100               	movlb	0	; () banked
  4450  01335E  6FE0               	movwf	normal_loop@i& (0+255),b
  4451  013360                     l12224:
  4452                           
  4453                           ; BSR set to: 0
  4454  013360  0E02               	movlw	2
  4455  013362  0100               	movlb	0	; () banked
  4456  013364  65E0               	cpfsgt	normal_loop@i& (0+255),b
  4457  013366  D001               	goto	l12228
  4458  013368  D077               	goto	l12236
  4459  01336A                     l12228:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;tasks.h: 731: static const char p[3][2] = {"L", "C", "R"};
  4463                           ;tasks.h: 732: sprintf(str, "  %s: %01d.%03dA %07ldmAh",
  4464                           ;tasks.h: 733: p[i],
  4465                           ;tasks.h: 734: port[i].current / 1000,
  4466                           ;tasks.h: 735: port[i].current % 1000,
  4467                           ;tasks.h: 736: port[i].integrated_current
  4468                           ;tasks.h: 737: );
  4469  01336A  0EC2               	movlw	low normal_loop@str
  4470  01336C  0100               	movlb	0	; () banked
  4471  01336E  6F83               	movwf	sprintf@sp& (0+255),b
  4472  013370  0E00               	movlw	high normal_loop@str
  4473  013372  0100               	movlb	0	; () banked
  4474  013374  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  4475  013376  0EF6               	movlw	low STR_134
  4476  013378  0100               	movlb	0	; () banked
  4477  01337A  6F85               	movwf	sprintf@f& (0+255),b
  4478  01337C  0EFD               	movlw	high STR_134
  4479  01337E  0100               	movlb	0	; () banked
  4480  013380  6F86               	movwf	(sprintf@f+1)& (0+255),b
  4481  013382  0100               	movlb	0	; () banked
  4482  013384  51E0               	movf	normal_loop@i& (0+255),w,b
  4483  013386  0D02               	mullw	2
  4484  013388  0EEA               	movlw	low normal_loop@p
  4485  01338A  24F3               	addwf	prodl,w,c
  4486  01338C  0100               	movlb	0	; () banked
  4487  01338E  6F87               	movwf	(?_sprintf+4)& (0+255),b
  4488  013390  0EFA               	movlw	high normal_loop@p
  4489  013392  20F4               	addwfc	prodh,w,c
  4490  013394  0100               	movlb	0	; () banked
  4491  013396  6F88               	movwf	(?_sprintf+5)& (0+255),b
  4492  013398  0100               	movlb	0	; () banked
  4493  01339A  51E0               	movf	normal_loop@i& (0+255),w,b
  4494  01339C  0D17               	mullw	23
  4495  01339E  0E06               	movlw	6
  4496  0133A0  26F3               	addwf	prodl,f,c
  4497  0133A2  0E00               	movlw	0
  4498  0133A4  22F4               	addwfc	prodh,f,c
  4499  0133A6  0E29               	movlw	low _port
  4500  0133A8  24F3               	addwf	prodl,w,c
  4501  0133AA  6ED9               	movwf	fsr2l,c
  4502  0133AC  0E01               	movlw	high _port
  4503  0133AE  20F4               	addwfc	prodh,w,c
  4504  0133B0  6EDA               	movwf	fsr2h,c
  4505  0133B2  CFDE F07C          	movff	postinc2,___lwdiv@dividend
  4506  0133B6  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
  4507  0133BA  0E03               	movlw	3
  4508  0133BC  0100               	movlb	0	; () banked
  4509  0133BE  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4510  0133C0  0EE8               	movlw	232
  4511  0133C2  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  4512  0133C4  ECED  F0B2         	call	___lwdiv	;wreg free
  4513  0133C8  C07C  F089         	movff	?___lwdiv,?_sprintf+6
  4514  0133CC  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
  4515  0133D0  0100               	movlb	0	; () banked
  4516  0133D2  51E0               	movf	normal_loop@i& (0+255),w,b
  4517  0133D4  0D17               	mullw	23
  4518  0133D6  0E06               	movlw	6
  4519  0133D8  26F3               	addwf	prodl,f,c
  4520  0133DA  0E00               	movlw	0
  4521  0133DC  22F4               	addwfc	prodh,f,c
  4522  0133DE  0E29               	movlw	low _port
  4523  0133E0  24F3               	addwf	prodl,w,c
  4524  0133E2  6ED9               	movwf	fsr2l,c
  4525  0133E4  0E01               	movlw	high _port
  4526  0133E6  20F4               	addwfc	prodh,w,c
  4527  0133E8  6EDA               	movwf	fsr2h,c
  4528  0133EA  CFDE F060          	movff	postinc2,___lwmod@dividend
  4529  0133EE  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  4530  0133F2  0E03               	movlw	3
  4531  0133F4  0100               	movlb	0	; () banked
  4532  0133F6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4533  0133F8  0EE8               	movlw	232
  4534  0133FA  6F62               	movwf	___lwmod@divisor& (0+255),b
  4535  0133FC  ECDE  F0B4         	call	___lwmod	;wreg free
  4536  013400  C060  F08B         	movff	?___lwmod,?_sprintf+8
  4537  013404  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
  4538  013408  0100               	movlb	0	; () banked
  4539  01340A  51E0               	movf	normal_loop@i& (0+255),w,b
  4540  01340C  0D17               	mullw	23
  4541  01340E  0E0C               	movlw	12
  4542  013410  26F3               	addwf	prodl,f,c
  4543  013412  0E00               	movlw	0
  4544  013414  22F4               	addwfc	prodh,f,c
  4545  013416  0E29               	movlw	low _port
  4546  013418  24F3               	addwf	prodl,w,c
  4547  01341A  6ED9               	movwf	fsr2l,c
  4548  01341C  0E01               	movlw	high _port
  4549  01341E  20F4               	addwfc	prodh,w,c
  4550  013420  6EDA               	movwf	fsr2h,c
  4551  013422  CFDE F08D          	movff	postinc2,?_sprintf+10
  4552  013426  CFDE F08E          	movff	postinc2,?_sprintf+11
  4553  01342A  CFDE F08F          	movff	postinc2,?_sprintf+12
  4554  01342E  CFDE F090          	movff	postinc2,?_sprintf+13
  4555  013432  ECEB  F087         	call	_sprintf	;wreg free
  4556                           
  4557                           ;tasks.h: 738: ringbuf_put_str(&usb_tx, str);
  4558  013436  0E6E               	movlw	low _usb_tx
  4559  013438  0100               	movlb	0	; () banked
  4560  01343A  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  4561  01343C  0E01               	movlw	high _usb_tx
  4562  01343E  0100               	movlb	0	; () banked
  4563  013440  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
  4564  013442  0EC2               	movlw	low normal_loop@str
  4565  013444  0100               	movlb	0	; () banked
  4566  013446  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  4567  013448  0E00               	movlw	high normal_loop@str
  4568  01344A  0100               	movlb	0	; () banked
  4569  01344C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4570  01344E  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
  4571  013452  0100               	movlb	0	; () banked
  4572  013454  2BE0               	incf	normal_loop@i& (0+255),f,b
  4573  013456  D784               	goto	l12224
  4574  013458                     l12236:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;tasks.h: 739: }
  4578                           ;tasks.h: 740: ringbuf_put_str(&usb_tx, "\n");
  4579  013458  0E6E               	movlw	low _usb_tx
  4580  01345A  0100               	movlb	0	; () banked
  4581  01345C  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  4582  01345E  0E01               	movlw	high _usb_tx
  4583  013460  0100               	movlb	0	; () banked
  4584  013462  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
  4585  013464  0ED4               	movlw	low (STR_59+33)
  4586  013466  0100               	movlb	0	; () banked
  4587  013468  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  4588  01346A  0EFD               	movlw	high (STR_59+33)
  4589  01346C  0100               	movlb	0	; () banked
  4590  01346E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4591  013470  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
  4592  013474  0012               	return	
  4593  013476                     __end_of_normal_loop:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           intcon	equ	0xFF2
  4602                           postinc0	equ	0xFEE
  4603                           wreg	equ	0xFE8
  4604                           postdec1	equ	0xFE5
  4605                           fsr1h	equ	0xFE2
  4606                           fsr1l	equ	0xFE1
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _settings_loop *****************
  4615 ;; Defined at:
  4616 ;;		line 516 in file "tasks.h"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  i               1   92[BANK0 ] unsigned char 
  4621 ;;  i               1   91[BANK0 ] unsigned char 
  4622 ;;  i               1   90[BANK0 ] unsigned char 
  4623 ;;  j               1   95[BANK0 ] unsigned char 
  4624 ;;  j               1   94[BANK0 ] unsigned char 
  4625 ;;  j               1   93[BANK0 ] unsigned char 
  4626 ;;  i               1   89[BANK0 ] unsigned char 
  4627 ;;  i               1   88[BANK0 ] unsigned char 
  4628 ;;  i               1   87[BANK0 ] unsigned char 
  4629 ;;  str            20   67[BANK0 ] unsigned char [20]
  4630 ;;  strp            2   96[BANK0 ] PTR unsigned char 
  4631 ;;		 -> settings_loop@str(20), 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;		None               void
  4634 ;; Registers used:
  4635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4642 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4644 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4645 ;;Total ram usage:       35 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:   16
  4648 ;; This function calls:
  4649 ;;		_RTCC_adjust_time_cursor
  4650 ;;		_RTCC_adjust_time_dec
  4651 ;;		_RTCC_adjust_time_inc
  4652 ;;		_RTCC_adjust_time_toggle
  4653 ;;		_display_char_puts
  4654 ;;		_display_now
  4655 ;;		_strcpy
  4656 ;; This function is called by:
  4657 ;;		_normal_loop
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text5
  4662  010000                     __ptext5:
  4663                           	opt stack 0
  4664  010000                     _settings_loop:
  4665                           	opt stack 13
  4666                           
  4667                           ;tasks.h: 517: char str[20];
  4668                           ;tasks.h: 518: char *strp;
  4669                           ;tasks.h: 519: strp = str;
  4670                           
  4671                           ;incstack = 0
  4672  010000  0EA3               	movlw	low settings_loop@str
  4673  010002  0100               	movlb	0	; () banked
  4674  010004  6FC0               	movwf	settings_loop@strp& (0+255),b
  4675  010006  0E00               	movlw	high settings_loop@str
  4676  010008  0100               	movlb	0	; () banked
  4677  01000A  6FC1               	movwf	(settings_loop@strp+1)& (0+255),b
  4678                           
  4679                           ;tasks.h: 520: switch (settings_state) {
  4680  01000C  EF2C  F084         	goto	l12076
  4681  010010                     l11828:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;tasks.h: 522: settings_select = SELECT;
  4685  010010  0E00               	movlw	0
  4686  010012  0100               	movlb	0	; () banked
  4687  010014  6FFB               	movwf	_settings_select& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;tasks.h: 523: display_char_puts("Settings", "<-   Select   ->");
  4691  010016  0E55               	movlw	low STR_93
  4692  010018  0100               	movlb	0	; () banked
  4693  01001A  6F60               	movwf	display_char_puts@str0& (0+255),b
  4694  01001C  0EFF               	movlw	high STR_93
  4695  01001E  0100               	movlb	0	; () banked
  4696  010020  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4697  010022  0E5E               	movlw	low STR_94
  4698  010024  0100               	movlb	0	; () banked
  4699  010026  6F62               	movwf	display_char_puts@str1& (0+255),b
  4700  010028  0EFE               	movlw	high STR_94
  4701  01002A  0100               	movlb	0	; () banked
  4702  01002C  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4703  01002E  EC86  F0A3         	call	_display_char_puts	;wreg free
  4704                           
  4705                           ;tasks.h: 524: settings_state = 1;
  4706  010032  0E01               	movlw	1
  4707  010034  6E26               	movwf	_settings_state,c
  4708                           
  4709                           ;tasks.h: 525: break;
  4710  010036  0012               	return	
  4711  010038                     l1483:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;tasks.h: 527: if (port[2].ctmu.flag.press) {
  4715  010038  0101               	movlb	1	; () banked
  4716  01003A  A159               	btfss	(_port+48)& (0+255),0,b
  4717  01003C  D06D               	goto	l1484
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;tasks.h: 528: port[2].ctmu.flags = 0;
  4721  01003E  0E00               	movlw	0
  4722  010040  0101               	movlb	1	; () banked
  4723  010042  6F5A               	movwf	(_port+49)& (0+255),b
  4724  010044  0E00               	movlw	0
  4725  010046  6F59               	movwf	(_port+48)& (0+255),b
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;tasks.h: 529: if (settings_select == INTEGRATING_RESET)settings_select = SELECT;
  4729  010048  0E04               	movlw	4
  4730  01004A  0100               	movlb	0	; () banked
  4731  01004C  19FB               	xorwf	_settings_select& (0+255),w,b
  4732  01004E  A4D8               	btfss	status,2,c
  4733  010050  D004               	goto	l11840
  4734                           
  4735                           ; BSR set to: 0
  4736  010052  0E00               	movlw	0
  4737  010054  0100               	movlb	0	; () banked
  4738  010056  6FFB               	movwf	_settings_select& (0+255),b
  4739  010058  D04E               	goto	l11854
  4740  01005A                     l11840:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;tasks.h: 530: else settings_select++;
  4744  01005A  0100               	movlb	0	; () banked
  4745  01005C  2BFB               	incf	_settings_select& (0+255),f,b
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;tasks.h: 531: switch (settings_select) {
  4749  01005E  D04B               	goto	l11854
  4750  010060                     l11842:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;tasks.h: 533: display_char_puts("Settings", "<-   Select   ->");
  4754  010060  0E55               	movlw	low STR_93
  4755  010062  0100               	movlb	0	; () banked
  4756  010064  6F60               	movwf	display_char_puts@str0& (0+255),b
  4757  010066  0EFF               	movlw	high STR_93
  4758  010068  0100               	movlb	0	; () banked
  4759  01006A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4760  01006C  0E5E               	movlw	low STR_94
  4761  01006E  0100               	movlb	0	; () banked
  4762  010070  6F62               	movwf	display_char_puts@str1& (0+255),b
  4763  010072  0EFE               	movlw	high STR_94
  4764  010074  0100               	movlb	0	; () banked
  4765  010076  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4766  010078  EC86  F0A3         	call	_display_char_puts	;wreg free
  4767                           
  4768                           ;tasks.h: 534: break;
  4769  01007C  D04D               	goto	l1484
  4770  01007E                     l11844:
  4771                           
  4772                           ;tasks.h: 536: display_char_puts("Settings", "Adjust the Time");
  4773  01007E  0E55               	movlw	low STR_93
  4774  010080  0100               	movlb	0	; () banked
  4775  010082  6F60               	movwf	display_char_puts@str0& (0+255),b
  4776  010084  0EFF               	movlw	high STR_93
  4777  010086  0100               	movlb	0	; () banked
  4778  010088  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4779  01008A  0EA1               	movlw	low STR_98
  4780  01008C  0100               	movlb	0	; () banked
  4781  01008E  6F62               	movwf	display_char_puts@str1& (0+255),b
  4782  010090  0EFE               	movlw	high STR_98
  4783  010092  0100               	movlb	0	; () banked
  4784  010094  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4785  010096  EC86  F0A3         	call	_display_char_puts	;wreg free
  4786                           
  4787                           ;tasks.h: 537: break;
  4788  01009A  D03E               	goto	l1484
  4789  01009C                     l11846:
  4790                           
  4791                           ;tasks.h: 539: display_char_puts("Settings", "Toggle Auto Stop");
  4792  01009C  0E55               	movlw	low STR_93
  4793  01009E  0100               	movlb	0	; () banked
  4794  0100A0  6F60               	movwf	display_char_puts@str0& (0+255),b
  4795  0100A2  0EFF               	movlw	high STR_93
  4796  0100A4  0100               	movlb	0	; () banked
  4797  0100A6  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4798  0100A8  0E6F               	movlw	low STR_100
  4799  0100AA  0100               	movlb	0	; () banked
  4800  0100AC  6F62               	movwf	display_char_puts@str1& (0+255),b
  4801  0100AE  0EFE               	movlw	high STR_100
  4802  0100B0  0100               	movlb	0	; () banked
  4803  0100B2  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4804  0100B4  EC86  F0A3         	call	_display_char_puts	;wreg free
  4805                           
  4806                           ;tasks.h: 540: break;
  4807  0100B8  D02F               	goto	l1484
  4808  0100BA                     l11848:
  4809                           
  4810                           ;tasks.h: 542: display_char_puts("Settings", "Toggle LED Lamp");
  4811  0100BA  0E55               	movlw	low STR_93
  4812  0100BC  0100               	movlb	0	; () banked
  4813  0100BE  6F60               	movwf	display_char_puts@str0& (0+255),b
  4814  0100C0  0EFF               	movlw	high STR_93
  4815  0100C2  0100               	movlb	0	; () banked
  4816  0100C4  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4817  0100C6  0EC1               	movlw	low STR_102
  4818  0100C8  0100               	movlb	0	; () banked
  4819  0100CA  6F62               	movwf	display_char_puts@str1& (0+255),b
  4820  0100CC  0EFE               	movlw	high STR_102
  4821  0100CE  0100               	movlb	0	; () banked
  4822  0100D0  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4823  0100D2  EC86  F0A3         	call	_display_char_puts	;wreg free
  4824                           
  4825                           ;tasks.h: 543: break;
  4826  0100D6  D020               	goto	l1484
  4827  0100D8                     l11850:
  4828                           
  4829                           ;tasks.h: 545: display_char_puts("Settings", "Integrat Reset");
  4830  0100D8  0E55               	movlw	low STR_93
  4831  0100DA  0100               	movlb	0	; () banked
  4832  0100DC  6F60               	movwf	display_char_puts@str0& (0+255),b
  4833  0100DE  0EFF               	movlw	high STR_93
  4834  0100E0  0100               	movlb	0	; () banked
  4835  0100E2  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4836  0100E4  0EE0               	movlw	low STR_104
  4837  0100E6  0100               	movlb	0	; () banked
  4838  0100E8  6F62               	movwf	display_char_puts@str1& (0+255),b
  4839  0100EA  0EFE               	movlw	high STR_104
  4840  0100EC  0100               	movlb	0	; () banked
  4841  0100EE  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4842  0100F0  EC86  F0A3         	call	_display_char_puts	;wreg free
  4843                           
  4844                           ;tasks.h: 547: }
  4845                           
  4846                           ;tasks.h: 546: break;
  4847  0100F4  D011               	goto	l1484
  4848  0100F6                     l11854:
  4849  0100F6  0100               	movlb	0	; () banked
  4850  0100F8  51FB               	movf	_settings_select& (0+255),w,b
  4851                           
  4852                           ; Switch size 1, requested type "space"
  4853                           ; Number of cases is 5, Range of values is 0 to 4
  4854                           ; switch strategies available:
  4855                           ; Name         Instructions Cycles
  4856                           ; simple_byte           16     9 (average)
  4857                           ;	Chosen strategy is simple_byte
  4858  0100FA  0A00               	xorlw	0	; case 0
  4859  0100FC  B4D8               	btfsc	status,2,c
  4860  0100FE  D7B0               	goto	l11842
  4861  010100  0A01               	xorlw	1	; case 1
  4862  010102  B4D8               	btfsc	status,2,c
  4863  010104  D7BC               	goto	l11844
  4864  010106  0A03               	xorlw	3	; case 2
  4865  010108  B4D8               	btfsc	status,2,c
  4866  01010A  D7C8               	goto	l11846
  4867  01010C  0A01               	xorlw	1	; case 3
  4868  01010E  B4D8               	btfsc	status,2,c
  4869  010110  D7D4               	goto	l11848
  4870  010112  0A07               	xorlw	7	; case 4
  4871  010114  B4D8               	btfsc	status,2,c
  4872  010116  D7E0               	goto	l11850
  4873  010118                     l1484:
  4874                           
  4875                           ;tasks.h: 548: }
  4876                           ;tasks.h: 549: if (port[0].ctmu.flag.press) {
  4877  010118  0101               	movlb	1	; () banked
  4878  01011A  A12B               	btfss	(_port+2)& (0+255),0,b
  4879  01011C  D06D               	goto	l1494
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;tasks.h: 550: port[0].ctmu.flags = 0;
  4883  01011E  0E00               	movlw	0
  4884  010120  0101               	movlb	1	; () banked
  4885  010122  6F2C               	movwf	(_port+3)& (0+255),b
  4886  010124  0E00               	movlw	0
  4887  010126  6F2B               	movwf	(_port+2)& (0+255),b
  4888                           
  4889                           ;tasks.h: 551: if (settings_select == SELECT)settings_select = INTEGRATING_RESET;
  4890  010128  0100               	movlb	0	; () banked
  4891  01012A  51FB               	movf	_settings_select& (0+255),w,b
  4892  01012C  0100               	movlb	0	; () banked
  4893  01012E  A4D8               	btfss	status,2,c
  4894  010130  D004               	goto	l11860
  4895                           
  4896                           ; BSR set to: 0
  4897  010132  0E04               	movlw	4
  4898  010134  0100               	movlb	0	; () banked
  4899  010136  6FFB               	movwf	_settings_select& (0+255),b
  4900  010138  D04E               	goto	l11874
  4901  01013A                     l11860:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;tasks.h: 552: else settings_select--;
  4905  01013A  0100               	movlb	0	; () banked
  4906  01013C  07FB               	decf	_settings_select& (0+255),f,b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;tasks.h: 553: switch (settings_select) {
  4910  01013E  D04B               	goto	l11874
  4911  010140                     l11862:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;tasks.h: 555: display_char_puts("Settings", "<-   Select   ->");
  4915  010140  0E55               	movlw	low STR_93
  4916  010142  0100               	movlb	0	; () banked
  4917  010144  6F60               	movwf	display_char_puts@str0& (0+255),b
  4918  010146  0EFF               	movlw	high STR_93
  4919  010148  0100               	movlb	0	; () banked
  4920  01014A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4921  01014C  0E5E               	movlw	low STR_94
  4922  01014E  0100               	movlb	0	; () banked
  4923  010150  6F62               	movwf	display_char_puts@str1& (0+255),b
  4924  010152  0EFE               	movlw	high STR_94
  4925  010154  0100               	movlb	0	; () banked
  4926  010156  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4927  010158  EC86  F0A3         	call	_display_char_puts	;wreg free
  4928                           
  4929                           ;tasks.h: 556: break;
  4930  01015C  D04D               	goto	l1494
  4931  01015E                     l11864:
  4932                           
  4933                           ;tasks.h: 558: display_char_puts("Settings", "Adjust the Time");
  4934  01015E  0E55               	movlw	low STR_93
  4935  010160  0100               	movlb	0	; () banked
  4936  010162  6F60               	movwf	display_char_puts@str0& (0+255),b
  4937  010164  0EFF               	movlw	high STR_93
  4938  010166  0100               	movlb	0	; () banked
  4939  010168  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4940  01016A  0EA1               	movlw	low STR_98
  4941  01016C  0100               	movlb	0	; () banked
  4942  01016E  6F62               	movwf	display_char_puts@str1& (0+255),b
  4943  010170  0EFE               	movlw	high STR_98
  4944  010172  0100               	movlb	0	; () banked
  4945  010174  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4946  010176  EC86  F0A3         	call	_display_char_puts	;wreg free
  4947                           
  4948                           ;tasks.h: 559: break;
  4949  01017A  D03E               	goto	l1494
  4950  01017C                     l11866:
  4951                           
  4952                           ;tasks.h: 561: display_char_puts("Settings", "Toggle Auto Stop");
  4953  01017C  0E55               	movlw	low STR_93
  4954  01017E  0100               	movlb	0	; () banked
  4955  010180  6F60               	movwf	display_char_puts@str0& (0+255),b
  4956  010182  0EFF               	movlw	high STR_93
  4957  010184  0100               	movlb	0	; () banked
  4958  010186  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4959  010188  0E6F               	movlw	low STR_100
  4960  01018A  0100               	movlb	0	; () banked
  4961  01018C  6F62               	movwf	display_char_puts@str1& (0+255),b
  4962  01018E  0EFE               	movlw	high STR_100
  4963  010190  0100               	movlb	0	; () banked
  4964  010192  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4965  010194  EC86  F0A3         	call	_display_char_puts	;wreg free
  4966                           
  4967                           ;tasks.h: 562: break;
  4968  010198  D02F               	goto	l1494
  4969  01019A                     l11868:
  4970                           
  4971                           ;tasks.h: 564: display_char_puts("Settings", "Toggle LED Lamp");
  4972  01019A  0E55               	movlw	low STR_93
  4973  01019C  0100               	movlb	0	; () banked
  4974  01019E  6F60               	movwf	display_char_puts@str0& (0+255),b
  4975  0101A0  0EFF               	movlw	high STR_93
  4976  0101A2  0100               	movlb	0	; () banked
  4977  0101A4  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4978  0101A6  0EC1               	movlw	low STR_102
  4979  0101A8  0100               	movlb	0	; () banked
  4980  0101AA  6F62               	movwf	display_char_puts@str1& (0+255),b
  4981  0101AC  0EFE               	movlw	high STR_102
  4982  0101AE  0100               	movlb	0	; () banked
  4983  0101B0  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4984  0101B2  EC86  F0A3         	call	_display_char_puts	;wreg free
  4985                           
  4986                           ;tasks.h: 565: break;
  4987  0101B6  D020               	goto	l1494
  4988  0101B8                     l11870:
  4989                           
  4990                           ;tasks.h: 567: display_char_puts("Settings", "Integrat Reset");
  4991  0101B8  0E55               	movlw	low STR_93
  4992  0101BA  0100               	movlb	0	; () banked
  4993  0101BC  6F60               	movwf	display_char_puts@str0& (0+255),b
  4994  0101BE  0EFF               	movlw	high STR_93
  4995  0101C0  0100               	movlb	0	; () banked
  4996  0101C2  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4997  0101C4  0EE0               	movlw	low STR_104
  4998  0101C6  0100               	movlb	0	; () banked
  4999  0101C8  6F62               	movwf	display_char_puts@str1& (0+255),b
  5000  0101CA  0EFE               	movlw	high STR_104
  5001  0101CC  0100               	movlb	0	; () banked
  5002  0101CE  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5003  0101D0  EC86  F0A3         	call	_display_char_puts	;wreg free
  5004                           
  5005                           ;tasks.h: 569: }
  5006                           
  5007                           ;tasks.h: 568: break;
  5008  0101D4  D011               	goto	l1494
  5009  0101D6                     l11874:
  5010  0101D6  0100               	movlb	0	; () banked
  5011  0101D8  51FB               	movf	_settings_select& (0+255),w,b
  5012                           
  5013                           ; Switch size 1, requested type "space"
  5014                           ; Number of cases is 5, Range of values is 0 to 4
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte           16     9 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019  0101DA  0A00               	xorlw	0	; case 0
  5020  0101DC  B4D8               	btfsc	status,2,c
  5021  0101DE  D7B0               	goto	l11862
  5022  0101E0  0A01               	xorlw	1	; case 1
  5023  0101E2  B4D8               	btfsc	status,2,c
  5024  0101E4  D7BC               	goto	l11864
  5025  0101E6  0A03               	xorlw	3	; case 2
  5026  0101E8  B4D8               	btfsc	status,2,c
  5027  0101EA  D7C8               	goto	l11866
  5028  0101EC  0A01               	xorlw	1	; case 3
  5029  0101EE  B4D8               	btfsc	status,2,c
  5030  0101F0  D7D4               	goto	l11868
  5031  0101F2  0A07               	xorlw	7	; case 4
  5032  0101F4  B4D8               	btfsc	status,2,c
  5033  0101F6  D7E0               	goto	l11870
  5034  0101F8                     l1494:
  5035                           
  5036                           ;tasks.h: 570: }
  5037                           ;tasks.h: 571: if (port[1].ctmu.flag.press) {
  5038  0101F8  0101               	movlb	1	; () banked
  5039  0101FA  A142               	btfss	(_port+25)& (0+255),0,b
  5040  0101FC  0012               	return	
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;tasks.h: 572: port[1].ctmu.flags = 0;
  5044  0101FE  0E00               	movlw	0
  5045  010200  0101               	movlb	1	; () banked
  5046  010202  6F43               	movwf	(_port+26)& (0+255),b
  5047  010204  0E00               	movlw	0
  5048  010206  6F42               	movwf	(_port+25)& (0+255),b
  5049                           
  5050                           ;tasks.h: 573: settings_state = 2;
  5051  010208  0E02               	movlw	2
  5052  01020A  6E26               	movwf	_settings_state,c
  5053                           
  5054                           ; BSR set to: 1
  5055                           ;tasks.h: 574: }
  5056                           ;tasks.h: 575: break;
  5057  01020C  0012               	return	
  5058  01020E                     l11878:
  5059                           
  5060                           ;tasks.h: 581: display_now(PRINT_TIME);
  5061  01020E  0E01               	movlw	1
  5062  010210  EC01  F0BA         	call	_display_now
  5063                           
  5064                           ;tasks.h: 582: RTCC_adjust_time_toggle();
  5065  010214  ECF6  F0B9         	call	_RTCC_adjust_time_toggle	;wreg free
  5066                           
  5067                           ;tasks.h: 583: settings_state = 3;
  5068  010218  0E03               	movlw	3
  5069  01021A  6E26               	movwf	_settings_state,c
  5070                           
  5071                           ;tasks.h: 584: break;
  5072  01021C  0012               	return	
  5073  01021E                     l11882:
  5074                           
  5075                           ;tasks.h: 586: for (uint8_t i = 0; i < 3; i++) {
  5076  01021E  0E00               	movlw	0
  5077  010220  0100               	movlb	0	; () banked
  5078  010222  6FB7               	movwf	settings_loop@i& (0+255),b
  5079  010224                     l11884:
  5080                           
  5081                           ; BSR set to: 0
  5082  010224  0E02               	movlw	2
  5083  010226  0100               	movlb	0	; () banked
  5084  010228  65B7               	cpfsgt	settings_loop@i& (0+255),b
  5085  01022A  D001               	goto	l11888
  5086  01022C  D031               	goto	l11900
  5087  01022E                     l11888:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;tasks.h: 587: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  5091  01022E  0100               	movlb	0	; () banked
  5092  010230  51B7               	movf	settings_loop@i& (0+255),w,b
  5093  010232  0D17               	mullw	23
  5094  010234  0E16               	movlw	22
  5095  010236  26F3               	addwf	prodl,f,c
  5096  010238  0E00               	movlw	0
  5097  01023A  22F4               	addwfc	prodh,f,c
  5098  01023C  0E29               	movlw	low _port
  5099  01023E  24F3               	addwf	prodl,w,c
  5100  010240  6ED9               	movwf	fsr2l,c
  5101  010242  0E01               	movlw	high _port
  5102  010244  20F4               	addwfc	prodh,w,c
  5103  010246  6EDA               	movwf	fsr2h,c
  5104  010248  0101               	movlb	1	; () banked
  5105  01024A  A0DF               	btfss	indf2,0,c
  5106  01024C  D00D               	goto	l11892
  5107                           
  5108                           ; BSR set to: 1
  5109  01024E  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5110  010252  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5111  010256  0E90               	movlw	low STR_115
  5112  010258  0100               	movlb	0	; () banked
  5113  01025A  6F62               	movwf	strcpy@from& (0+255),b
  5114  01025C  0EFF               	movlw	high STR_115
  5115  01025E  0100               	movlb	0	; () banked
  5116  010260  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5117  010262  EC51  F0B7         	call	_strcpy	;wreg free
  5118  010266  D00C               	goto	l11894
  5119  010268                     l11892:
  5120                           
  5121                           ;tasks.h: 588: else strcpy(strp, " OFF ");
  5122  010268  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5123  01026C  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5124  010270  0E96               	movlw	low STR_116
  5125  010272  0100               	movlb	0	; () banked
  5126  010274  6F62               	movwf	strcpy@from& (0+255),b
  5127  010276  0EFF               	movlw	high STR_116
  5128  010278  0100               	movlb	0	; () banked
  5129  01027A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5130  01027C  EC51  F0B7         	call	_strcpy	;wreg free
  5131  010280                     l11894:
  5132                           
  5133                           ;tasks.h: 589: strp += 5;
  5134  010280  0E05               	movlw	5
  5135  010282  0100               	movlb	0	; () banked
  5136  010284  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5137  010286  0E00               	movlw	0
  5138  010288  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5139                           
  5140                           ; BSR set to: 0
  5141  01028A  0100               	movlb	0	; () banked
  5142  01028C  2BB7               	incf	settings_loop@i& (0+255),f,b
  5143  01028E  D7CA               	goto	l11884
  5144  010290                     l11900:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;tasks.h: 590: }
  5148                           ;tasks.h: 591: display_char_puts("Left Centr Right", str);
  5149  010290  0E80               	movlw	low STR_117
  5150  010292  0100               	movlb	0	; () banked
  5151  010294  6F60               	movwf	display_char_puts@str0& (0+255),b
  5152  010296  0EFE               	movlw	high STR_117
  5153  010298  0100               	movlb	0	; () banked
  5154  01029A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5155  01029C  0EA3               	movlw	low settings_loop@str
  5156  01029E  0100               	movlb	0	; () banked
  5157  0102A0  6F62               	movwf	display_char_puts@str1& (0+255),b
  5158  0102A2  0E00               	movlw	high settings_loop@str
  5159  0102A4  0100               	movlb	0	; () banked
  5160  0102A6  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5161  0102A8  EC86  F0A3         	call	_display_char_puts	;wreg free
  5162                           
  5163                           ;tasks.h: 592: settings_state = 3;
  5164  0102AC  0E03               	movlw	3
  5165  0102AE  6E26               	movwf	_settings_state,c
  5166                           
  5167                           ;tasks.h: 593: break;
  5168  0102B0  0012               	return	
  5169  0102B2                     l11904:
  5170                           
  5171                           ;tasks.h: 595: for (uint8_t i = 0; i < 3; i++) {
  5172  0102B2  0E00               	movlw	0
  5173  0102B4  0100               	movlb	0	; () banked
  5174  0102B6  6FB8               	movwf	settings_loop@i_4441& (0+255),b
  5175  0102B8                     l11906:
  5176                           
  5177                           ; BSR set to: 0
  5178  0102B8  0E02               	movlw	2
  5179  0102BA  0100               	movlb	0	; () banked
  5180  0102BC  65B8               	cpfsgt	settings_loop@i_4441& (0+255),b
  5181  0102BE  D001               	goto	l11910
  5182  0102C0  D031               	goto	l11922
  5183  0102C2                     l11910:
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;tasks.h: 596: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  5187  0102C2  0100               	movlb	0	; () banked
  5188  0102C4  51B8               	movf	settings_loop@i_4441& (0+255),w,b
  5189  0102C6  0D17               	mullw	23
  5190  0102C8  0E16               	movlw	22
  5191  0102CA  26F3               	addwf	prodl,f,c
  5192  0102CC  0E00               	movlw	0
  5193  0102CE  22F4               	addwfc	prodh,f,c
  5194  0102D0  0E29               	movlw	low _port
  5195  0102D2  24F3               	addwf	prodl,w,c
  5196  0102D4  6ED9               	movwf	fsr2l,c
  5197  0102D6  0E01               	movlw	high _port
  5198  0102D8  20F4               	addwfc	prodh,w,c
  5199  0102DA  6EDA               	movwf	fsr2h,c
  5200  0102DC  0101               	movlb	1	; () banked
  5201  0102DE  A2DF               	btfss	indf2,1,c
  5202  0102E0  D00D               	goto	l11914
  5203                           
  5204                           ; BSR set to: 1
  5205  0102E2  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5206  0102E6  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5207  0102EA  0E90               	movlw	low STR_115
  5208  0102EC  0100               	movlb	0	; () banked
  5209  0102EE  6F62               	movwf	strcpy@from& (0+255),b
  5210  0102F0  0EFF               	movlw	high STR_115
  5211  0102F2  0100               	movlb	0	; () banked
  5212  0102F4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5213  0102F6  EC51  F0B7         	call	_strcpy	;wreg free
  5214  0102FA  D00C               	goto	l11916
  5215  0102FC                     l11914:
  5216                           
  5217                           ;tasks.h: 597: else strcpy(strp, " OFF ");
  5218  0102FC  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5219  010300  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5220  010304  0E96               	movlw	low STR_116
  5221  010306  0100               	movlb	0	; () banked
  5222  010308  6F62               	movwf	strcpy@from& (0+255),b
  5223  01030A  0EFF               	movlw	high STR_116
  5224  01030C  0100               	movlb	0	; () banked
  5225  01030E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5226  010310  EC51  F0B7         	call	_strcpy	;wreg free
  5227  010314                     l11916:
  5228                           
  5229                           ;tasks.h: 598: strp += 5;
  5230  010314  0E05               	movlw	5
  5231  010316  0100               	movlb	0	; () banked
  5232  010318  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5233  01031A  0E00               	movlw	0
  5234  01031C  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5235                           
  5236                           ; BSR set to: 0
  5237  01031E  0100               	movlb	0	; () banked
  5238  010320  2BB8               	incf	settings_loop@i_4441& (0+255),f,b
  5239  010322  D7CA               	goto	l11906
  5240  010324                     l11922:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;tasks.h: 599: }
  5244                           ;tasks.h: 600: display_char_puts("Left Centr Right", str);
  5245  010324  0E80               	movlw	low STR_117
  5246  010326  0100               	movlb	0	; () banked
  5247  010328  6F60               	movwf	display_char_puts@str0& (0+255),b
  5248  01032A  0EFE               	movlw	high STR_117
  5249  01032C  0100               	movlb	0	; () banked
  5250  01032E  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5251  010330  0EA3               	movlw	low settings_loop@str
  5252  010332  0100               	movlb	0	; () banked
  5253  010334  6F62               	movwf	display_char_puts@str1& (0+255),b
  5254  010336  0E00               	movlw	high settings_loop@str
  5255  010338  0100               	movlb	0	; () banked
  5256  01033A  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5257  01033C  EC86  F0A3         	call	_display_char_puts	;wreg free
  5258                           
  5259                           ;tasks.h: 601: settings_state = 3;
  5260  010340  0E03               	movlw	3
  5261  010342  6E26               	movwf	_settings_state,c
  5262                           
  5263                           ;tasks.h: 602: break;
  5264  010344  0012               	return	
  5265  010346                     l11926:
  5266                           
  5267                           ;tasks.h: 604: for (uint8_t i = 0; i < 3; i++) {
  5268  010346  0E00               	movlw	0
  5269  010348  0100               	movlb	0	; () banked
  5270  01034A  6FB9               	movwf	settings_loop@i_4445& (0+255),b
  5271  01034C                     l11928:
  5272                           
  5273                           ; BSR set to: 0
  5274  01034C  0E02               	movlw	2
  5275  01034E  0100               	movlb	0	; () banked
  5276  010350  65B9               	cpfsgt	settings_loop@i_4445& (0+255),b
  5277  010352  D001               	goto	l11932
  5278  010354  D034               	goto	l11944
  5279  010356                     l11932:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;tasks.h: 605: if (port[i].integrated_current)strcpy(strp, " yet ");
  5283  010356  0100               	movlb	0	; () banked
  5284  010358  51B9               	movf	settings_loop@i_4445& (0+255),w,b
  5285  01035A  0D17               	mullw	23
  5286  01035C  0E0C               	movlw	12
  5287  01035E  26F3               	addwf	prodl,f,c
  5288  010360  0E00               	movlw	0
  5289  010362  22F4               	addwfc	prodh,f,c
  5290  010364  0E29               	movlw	low _port
  5291  010366  24F3               	addwf	prodl,w,c
  5292  010368  6ED9               	movwf	fsr2l,c
  5293  01036A  0E01               	movlw	high _port
  5294  01036C  20F4               	addwfc	prodh,w,c
  5295  01036E  6EDA               	movwf	fsr2h,c
  5296  010370  50DE               	movf	postinc2,w,c
  5297  010372  10DE               	iorwf	postinc2,w,c
  5298  010374  10DE               	iorwf	postinc2,w,c
  5299  010376  10DE               	iorwf	postinc2,w,c
  5300  010378  B4D8               	btfsc	status,2,c
  5301  01037A  D00D               	goto	l11936
  5302                           
  5303                           ; BSR set to: 0
  5304  01037C  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5305  010380  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5306  010384  0E9C               	movlw	low STR_121
  5307  010386  0100               	movlb	0	; () banked
  5308  010388  6F62               	movwf	strcpy@from& (0+255),b
  5309  01038A  0EFF               	movlw	high STR_121
  5310  01038C  0100               	movlb	0	; () banked
  5311  01038E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5312  010390  EC51  F0B7         	call	_strcpy	;wreg free
  5313  010394  D00C               	goto	l11938
  5314  010396                     l11936:
  5315                           
  5316                           ;tasks.h: 606: else strcpy(strp, "  0  ");
  5317  010396  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5318  01039A  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5319  01039E  0E8A               	movlw	low STR_122
  5320  0103A0  0100               	movlb	0	; () banked
  5321  0103A2  6F62               	movwf	strcpy@from& (0+255),b
  5322  0103A4  0EFF               	movlw	high STR_122
  5323  0103A6  0100               	movlb	0	; () banked
  5324  0103A8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5325  0103AA  EC51  F0B7         	call	_strcpy	;wreg free
  5326  0103AE                     l11938:
  5327                           
  5328                           ;tasks.h: 607: strp += 5;
  5329  0103AE  0E05               	movlw	5
  5330  0103B0  0100               	movlb	0	; () banked
  5331  0103B2  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5332  0103B4  0E00               	movlw	0
  5333  0103B6  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5334                           
  5335                           ; BSR set to: 0
  5336  0103B8  0100               	movlb	0	; () banked
  5337  0103BA  2BB9               	incf	settings_loop@i_4445& (0+255),f,b
  5338  0103BC  D7C7               	goto	l11928
  5339  0103BE                     l11944:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;tasks.h: 608: }
  5343                           ;tasks.h: 609: display_char_puts("Left Centr Right", str);
  5344  0103BE  0E80               	movlw	low STR_117
  5345  0103C0  0100               	movlb	0	; () banked
  5346  0103C2  6F60               	movwf	display_char_puts@str0& (0+255),b
  5347  0103C4  0EFE               	movlw	high STR_117
  5348  0103C6  0100               	movlb	0	; () banked
  5349  0103C8  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5350  0103CA  0EA3               	movlw	low settings_loop@str
  5351  0103CC  0100               	movlb	0	; () banked
  5352  0103CE  6F62               	movwf	display_char_puts@str1& (0+255),b
  5353  0103D0  0E00               	movlw	high settings_loop@str
  5354  0103D2  0100               	movlb	0	; () banked
  5355  0103D4  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5356  0103D6  EC86  F0A3         	call	_display_char_puts	;wreg free
  5357                           
  5358                           ;tasks.h: 610: settings_state = 3;
  5359  0103DA  0E03               	movlw	3
  5360  0103DC  6E26               	movwf	_settings_state,c
  5361                           
  5362                           ;tasks.h: 611: break;
  5363  0103DE  0012               	return	
  5364  0103E0                     l11948:
  5365                           
  5366                           ;tasks.h: 613: settings_flag = 0;
  5367  0103E0  0E00               	movlw	0
  5368  0103E2  6E25               	movwf	_settings_flag,c
  5369                           
  5370                           ;tasks.h: 614: }
  5371  0103E4  0012               	return	
  5372  0103E6                     l11950:
  5373  0103E6  0100               	movlb	0	; () banked
  5374  0103E8  51FB               	movf	_settings_select& (0+255),w,b
  5375                           
  5376                           ; Switch size 1, requested type "space"
  5377                           ; Number of cases is 5, Range of values is 0 to 4
  5378                           ; switch strategies available:
  5379                           ; Name         Instructions Cycles
  5380                           ; simple_byte           16     9 (average)
  5381                           ;	Chosen strategy is simple_byte
  5382  0103EA  0A00               	xorlw	0	; case 0
  5383  0103EC  B4D8               	btfsc	status,2,c
  5384  0103EE  0012               	return	
  5385  0103F0  0A01               	xorlw	1	; case 1
  5386  0103F2  B4D8               	btfsc	status,2,c
  5387  0103F4  D70C               	goto	l11878
  5388  0103F6  0A03               	xorlw	3	; case 2
  5389  0103F8  B4D8               	btfsc	status,2,c
  5390  0103FA  D711               	goto	l11882
  5391  0103FC  0A01               	xorlw	1	; case 3
  5392  0103FE  B4D8               	btfsc	status,2,c
  5393  010400  D758               	goto	l11904
  5394  010402  0A07               	xorlw	7	; case 4
  5395  010404  B4D8               	btfsc	status,2,c
  5396  010406  D79F               	goto	l11926
  5397  010408  D7EB               	goto	l11948
  5398  01040A                     l1530:
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;tasks.h: 621: if (port[1].ctmu.flag.press) {
  5402  01040A  0101               	movlb	1	; () banked
  5403  01040C  A142               	btfss	(_port+25)& (0+255),0,b
  5404  01040E  D004               	goto	l11956
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;tasks.h: 622: port[1].ctmu.flag.press = 0;
  5408  010410  0101               	movlb	1	; () banked
  5409  010412  9142               	bcf	(_port+25)& (0+255),0,b
  5410                           
  5411                           ; BSR set to: 1
  5412                           ;tasks.h: 623: RTCC_adjust_time_cursor();
  5413  010414  EC0F  F0B5         	call	_RTCC_adjust_time_cursor	;wreg free
  5414  010418                     l11956:
  5415                           
  5416                           ;tasks.h: 624: }
  5417                           ;tasks.h: 625: if (port[2].ctmu.flag.press) {
  5418  010418  0101               	movlb	1	; () banked
  5419  01041A  A159               	btfss	(_port+48)& (0+255),0,b
  5420  01041C  D010               	goto	l11962
  5421                           
  5422                           ; BSR set to: 1
  5423                           ;tasks.h: 626: port[2].ctmu.flag.press = 0;
  5424  01041E  0101               	movlb	1	; () banked
  5425  010420  9159               	bcf	(_port+48)& (0+255),0,b
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;tasks.h: 627: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
  5429  010422  0E7E               	movlw	low _caltime_now
  5430  010424  0100               	movlb	0	; () banked
  5431  010426  6F95               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
  5432  010428  0E01               	movlw	high _caltime_now
  5433  01042A  0100               	movlb	0	; () banked
  5434  01042C  6F96               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
  5435  01042E  0EFC               	movlw	low _epoch_now
  5436  010430  0100               	movlb	0	; () banked
  5437  010432  6F97               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
  5438  010434  0E00               	movlw	high _epoch_now
  5439  010436  0100               	movlb	0	; () banked
  5440  010438  6F98               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
  5441  01043A  ECBF  F096         	call	_RTCC_adjust_time_inc	;wreg free
  5442  01043E                     l11962:
  5443                           
  5444                           ;tasks.h: 628: }
  5445                           ;tasks.h: 629: if (port[0].ctmu.flag.press) {
  5446  01043E  0101               	movlb	1	; () banked
  5447  010440  A12B               	btfss	(_port+2)& (0+255),0,b
  5448  010442  0012               	return	
  5449                           
  5450                           ; BSR set to: 1
  5451                           ;tasks.h: 630: port[0].ctmu.flag.press = 0;
  5452  010444  0101               	movlb	1	; () banked
  5453  010446  912B               	bcf	(_port+2)& (0+255),0,b
  5454                           
  5455                           ; BSR set to: 1
  5456                           ;tasks.h: 631: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
  5457  010448  0E7E               	movlw	low _caltime_now
  5458  01044A  0100               	movlb	0	; () banked
  5459  01044C  6F95               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
  5460  01044E  0E01               	movlw	high _caltime_now
  5461  010450  0100               	movlb	0	; () banked
  5462  010452  6F96               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
  5463  010454  0EFC               	movlw	low _epoch_now
  5464  010456  0100               	movlb	0	; () banked
  5465  010458  6F97               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
  5466  01045A  0E00               	movlw	high _epoch_now
  5467  01045C  0100               	movlb	0	; () banked
  5468  01045E  6F98               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
  5469  010460  ECF1  F097         	call	_RTCC_adjust_time_dec	;wreg free
  5470                           
  5471                           ;tasks.h: 632: }
  5472                           ;tasks.h: 633: break;
  5473  010464  0012               	return	
  5474  010466                     l11968:
  5475                           
  5476                           ;tasks.h: 635: for (uint8_t j = 0; j < 3; j++) {
  5477  010466  0E00               	movlw	0
  5478  010468  0100               	movlb	0	; () banked
  5479  01046A  6FBD               	movwf	settings_loop@j& (0+255),b
  5480  01046C                     l11970:
  5481                           
  5482                           ; BSR set to: 0
  5483  01046C  0E02               	movlw	2
  5484  01046E  0100               	movlb	0	; () banked
  5485  010470  65BD               	cpfsgt	settings_loop@j& (0+255),b
  5486  010472  D001               	goto	l11974
  5487  010474  0012               	return	
  5488  010476                     l11974:
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;tasks.h: 636: if (port[j].ctmu.flag.press) {
  5492  010476  0100               	movlb	0	; () banked
  5493  010478  51BD               	movf	settings_loop@j& (0+255),w,b
  5494  01047A  0D17               	mullw	23
  5495  01047C  0E02               	movlw	2
  5496  01047E  26F3               	addwf	prodl,f,c
  5497  010480  0E00               	movlw	0
  5498  010482  22F4               	addwfc	prodh,f,c
  5499  010484  0E29               	movlw	low _port
  5500  010486  24F3               	addwf	prodl,w,c
  5501  010488  6ED9               	movwf	fsr2l,c
  5502  01048A  0E01               	movlw	high _port
  5503  01048C  20F4               	addwfc	prodh,w,c
  5504  01048E  6EDA               	movwf	fsr2h,c
  5505  010490  0101               	movlb	1	; () banked
  5506  010492  A0DF               	btfss	indf2,0,c
  5507  010494  D083               	goto	l11998
  5508                           
  5509                           ; BSR set to: 1
  5510                           ;tasks.h: 637: port[j].ctmu.flags = 0;
  5511  010496  0100               	movlb	0	; () banked
  5512  010498  51BD               	movf	settings_loop@j& (0+255),w,b
  5513  01049A  0D17               	mullw	23
  5514  01049C  0E02               	movlw	2
  5515  01049E  26F3               	addwf	prodl,f,c
  5516  0104A0  0E00               	movlw	0
  5517  0104A2  22F4               	addwfc	prodh,f,c
  5518  0104A4  0E29               	movlw	low _port
  5519  0104A6  24F3               	addwf	prodl,w,c
  5520  0104A8  6ED9               	movwf	fsr2l,c
  5521  0104AA  0E01               	movlw	high _port
  5522  0104AC  20F4               	addwfc	prodh,w,c
  5523  0104AE  6EDA               	movwf	fsr2h,c
  5524  0104B0  0E00               	movlw	0
  5525  0104B2  6EDE               	movwf	postinc2,c
  5526  0104B4  0E00               	movlw	0
  5527  0104B6  6EDD               	movwf	postdec2,c
  5528                           
  5529                           ;tasks.h: 638: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  5530  0104B8  0100               	movlb	0	; () banked
  5531  0104BA  51BD               	movf	settings_loop@j& (0+255),w,b
  5532  0104BC  0D17               	mullw	23
  5533  0104BE  0E16               	movlw	22
  5534  0104C0  26F3               	addwf	prodl,f,c
  5535  0104C2  0E00               	movlw	0
  5536  0104C4  22F4               	addwfc	prodh,f,c
  5537  0104C6  0E29               	movlw	low _port
  5538  0104C8  24F3               	addwf	prodl,w,c
  5539  0104CA  6ED9               	movwf	fsr2l,c
  5540  0104CC  0E01               	movlw	high _port
  5541  0104CE  20F4               	addwfc	prodh,w,c
  5542  0104D0  6EDA               	movwf	fsr2h,c
  5543  0104D2  0101               	movlb	1	; () banked
  5544  0104D4  B0DF               	btfsc	indf2,0,c
  5545  0104D6  D004               	goto	u14520
  5546  0104D8  0100               	movlb	0	; () banked
  5547  0104DA  6B9F               	clrf	??_settings_loop& (0+255),b
  5548  0104DC  2B9F               	incf	??_settings_loop& (0+255),f,b
  5549  0104DE  D002               	goto	u14538
  5550  0104E0                     u14520:
  5551  0104E0  0100               	movlb	0	; () banked
  5552  0104E2  6B9F               	clrf	??_settings_loop& (0+255),b
  5553  0104E4                     u14538:
  5554  0104E4  0100               	movlb	0	; () banked
  5555  0104E6  51BD               	movf	settings_loop@j& (0+255),w,b
  5556  0104E8  0D17               	mullw	23
  5557  0104EA  0E16               	movlw	22
  5558  0104EC  26F3               	addwf	prodl,f,c
  5559  0104EE  0E00               	movlw	0
  5560  0104F0  22F4               	addwfc	prodh,f,c
  5561  0104F2  0E29               	movlw	low _port
  5562  0104F4  24F3               	addwf	prodl,w,c
  5563  0104F6  6ED9               	movwf	fsr2l,c
  5564  0104F8  0E01               	movlw	high _port
  5565  0104FA  20F4               	addwfc	prodh,w,c
  5566  0104FC  6EDA               	movwf	fsr2h,c
  5567  0104FE  0101               	movlb	1	; () banked
  5568  010500  50DF               	movf	223,w,c
  5569  010502  0100               	movlb	0	; () banked
  5570  010504  199F               	xorwf	??_settings_loop& (0+255),w,b
  5571  010506  0BFE               	andlw	-2
  5572  010508  199F               	xorwf	??_settings_loop& (0+255),w,b
  5573  01050A  0101               	movlb	1	; () banked
  5574  01050C  6EDF               	movwf	223,c
  5575                           
  5576                           ; BSR set to: 1
  5577                           ;tasks.h: 639: for (uint8_t i = 0; i < 3; i++) {
  5578  01050E  0E00               	movlw	0
  5579  010510  0100               	movlb	0	; () banked
  5580  010512  6FBA               	movwf	settings_loop@i_4450& (0+255),b
  5581  010514                     l11980:
  5582                           
  5583                           ; BSR set to: 0
  5584  010514  0E02               	movlw	2
  5585  010516  0100               	movlb	0	; () banked
  5586  010518  65BA               	cpfsgt	settings_loop@i_4450& (0+255),b
  5587  01051A  D001               	goto	l11984
  5588  01051C  D031               	goto	l11996
  5589  01051E                     l11984:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;tasks.h: 640: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  5593  01051E  0100               	movlb	0	; () banked
  5594  010520  51BA               	movf	settings_loop@i_4450& (0+255),w,b
  5595  010522  0D17               	mullw	23
  5596  010524  0E16               	movlw	22
  5597  010526  26F3               	addwf	prodl,f,c
  5598  010528  0E00               	movlw	0
  5599  01052A  22F4               	addwfc	prodh,f,c
  5600  01052C  0E29               	movlw	low _port
  5601  01052E  24F3               	addwf	prodl,w,c
  5602  010530  6ED9               	movwf	fsr2l,c
  5603  010532  0E01               	movlw	high _port
  5604  010534  20F4               	addwfc	prodh,w,c
  5605  010536  6EDA               	movwf	fsr2h,c
  5606  010538  0101               	movlb	1	; () banked
  5607  01053A  A0DF               	btfss	indf2,0,c
  5608  01053C  D00D               	goto	l11988
  5609                           
  5610                           ; BSR set to: 1
  5611  01053E  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5612  010542  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5613  010546  0E90               	movlw	low STR_115
  5614  010548  0100               	movlb	0	; () banked
  5615  01054A  6F62               	movwf	strcpy@from& (0+255),b
  5616  01054C  0EFF               	movlw	high STR_115
  5617  01054E  0100               	movlb	0	; () banked
  5618  010550  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5619  010552  EC51  F0B7         	call	_strcpy	;wreg free
  5620  010556  D00C               	goto	l11990
  5621  010558                     l11988:
  5622                           
  5623                           ;tasks.h: 641: else strcpy(strp, " OFF ");
  5624  010558  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5625  01055C  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5626  010560  0E96               	movlw	low STR_116
  5627  010562  0100               	movlb	0	; () banked
  5628  010564  6F62               	movwf	strcpy@from& (0+255),b
  5629  010566  0EFF               	movlw	high STR_116
  5630  010568  0100               	movlb	0	; () banked
  5631  01056A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5632  01056C  EC51  F0B7         	call	_strcpy	;wreg free
  5633  010570                     l11990:
  5634                           
  5635                           ;tasks.h: 642: strp += 5;
  5636  010570  0E05               	movlw	5
  5637  010572  0100               	movlb	0	; () banked
  5638  010574  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5639  010576  0E00               	movlw	0
  5640  010578  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5641                           
  5642                           ; BSR set to: 0
  5643  01057A  0100               	movlb	0	; () banked
  5644  01057C  2BBA               	incf	settings_loop@i_4450& (0+255),f,b
  5645  01057E  D7CA               	goto	l11980
  5646  010580                     l11996:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;tasks.h: 643: }
  5650                           ;tasks.h: 644: display_char_puts("Left Centr Right", str);
  5651  010580  0E80               	movlw	low STR_117
  5652  010582  0100               	movlb	0	; () banked
  5653  010584  6F60               	movwf	display_char_puts@str0& (0+255),b
  5654  010586  0EFE               	movlw	high STR_117
  5655  010588  0100               	movlb	0	; () banked
  5656  01058A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5657  01058C  0EA3               	movlw	low settings_loop@str
  5658  01058E  0100               	movlb	0	; () banked
  5659  010590  6F62               	movwf	display_char_puts@str1& (0+255),b
  5660  010592  0E00               	movlw	high settings_loop@str
  5661  010594  0100               	movlb	0	; () banked
  5662  010596  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5663  010598  EC86  F0A3         	call	_display_char_puts	;wreg free
  5664  01059C                     l11998:
  5665  01059C  0100               	movlb	0	; () banked
  5666  01059E  2BBD               	incf	settings_loop@j& (0+255),f,b
  5667  0105A0  D765               	goto	l11970
  5668  0105A2                     l12002:
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;tasks.h: 649: for (uint8_t j = 0; j < 3; j++) {
  5672  0105A2  0E00               	movlw	0
  5673  0105A4  0100               	movlb	0	; () banked
  5674  0105A6  6FBE               	movwf	settings_loop@j_4454& (0+255),b
  5675  0105A8                     l12004:
  5676                           
  5677                           ; BSR set to: 0
  5678  0105A8  0E02               	movlw	2
  5679  0105AA  0100               	movlb	0	; () banked
  5680  0105AC  65BE               	cpfsgt	settings_loop@j_4454& (0+255),b
  5681  0105AE  D001               	goto	l12008
  5682  0105B0  0012               	return	
  5683  0105B2                     l12008:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;tasks.h: 650: if (port[j].ctmu.flag.press) {
  5687  0105B2  0100               	movlb	0	; () banked
  5688  0105B4  51BE               	movf	settings_loop@j_4454& (0+255),w,b
  5689  0105B6  0D17               	mullw	23
  5690  0105B8  0E02               	movlw	2
  5691  0105BA  26F3               	addwf	prodl,f,c
  5692  0105BC  0E00               	movlw	0
  5693  0105BE  22F4               	addwfc	prodh,f,c
  5694  0105C0  0E29               	movlw	low _port
  5695  0105C2  24F3               	addwf	prodl,w,c
  5696  0105C4  6ED9               	movwf	fsr2l,c
  5697  0105C6  0E01               	movlw	high _port
  5698  0105C8  20F4               	addwfc	prodh,w,c
  5699  0105CA  6EDA               	movwf	fsr2h,c
  5700  0105CC  0101               	movlb	1	; () banked
  5701  0105CE  A0DF               	btfss	indf2,0,c
  5702  0105D0  D085               	goto	l12032
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;tasks.h: 651: port[j].ctmu.flags = 0;
  5706  0105D2  0100               	movlb	0	; () banked
  5707  0105D4  51BE               	movf	settings_loop@j_4454& (0+255),w,b
  5708  0105D6  0D17               	mullw	23
  5709  0105D8  0E02               	movlw	2
  5710  0105DA  26F3               	addwf	prodl,f,c
  5711  0105DC  0E00               	movlw	0
  5712  0105DE  22F4               	addwfc	prodh,f,c
  5713  0105E0  0E29               	movlw	low _port
  5714  0105E2  24F3               	addwf	prodl,w,c
  5715  0105E4  6ED9               	movwf	fsr2l,c
  5716  0105E6  0E01               	movlw	high _port
  5717  0105E8  20F4               	addwfc	prodh,w,c
  5718  0105EA  6EDA               	movwf	fsr2h,c
  5719  0105EC  0E00               	movlw	0
  5720  0105EE  6EDE               	movwf	postinc2,c
  5721  0105F0  0E00               	movlw	0
  5722  0105F2  6EDD               	movwf	postdec2,c
  5723                           
  5724                           ;tasks.h: 652: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  5725  0105F4  0100               	movlb	0	; () banked
  5726  0105F6  51BE               	movf	settings_loop@j_4454& (0+255),w,b
  5727  0105F8  0D17               	mullw	23
  5728  0105FA  0E16               	movlw	22
  5729  0105FC  26F3               	addwf	prodl,f,c
  5730  0105FE  0E00               	movlw	0
  5731  010600  22F4               	addwfc	prodh,f,c
  5732  010602  0E29               	movlw	low _port
  5733  010604  24F3               	addwf	prodl,w,c
  5734  010606  6ED9               	movwf	fsr2l,c
  5735  010608  0E01               	movlw	high _port
  5736  01060A  20F4               	addwfc	prodh,w,c
  5737  01060C  6EDA               	movwf	fsr2h,c
  5738  01060E  0101               	movlb	1	; () banked
  5739  010610  B2DF               	btfsc	indf2,1,c
  5740  010612  D004               	goto	u14600
  5741  010614  0100               	movlb	0	; () banked
  5742  010616  6B9F               	clrf	??_settings_loop& (0+255),b
  5743  010618  2B9F               	incf	??_settings_loop& (0+255),f,b
  5744  01061A  D002               	goto	u14618
  5745  01061C                     u14600:
  5746  01061C  0100               	movlb	0	; () banked
  5747  01061E  6B9F               	clrf	??_settings_loop& (0+255),b
  5748  010620                     u14618:
  5749  010620  0100               	movlb	0	; () banked
  5750  010622  51BE               	movf	settings_loop@j_4454& (0+255),w,b
  5751  010624  0D17               	mullw	23
  5752  010626  0E16               	movlw	22
  5753  010628  26F3               	addwf	prodl,f,c
  5754  01062A  0E00               	movlw	0
  5755  01062C  22F4               	addwfc	prodh,f,c
  5756  01062E  0E29               	movlw	low _port
  5757  010630  24F3               	addwf	prodl,w,c
  5758  010632  6ED9               	movwf	fsr2l,c
  5759  010634  0E01               	movlw	high _port
  5760  010636  20F4               	addwfc	prodh,w,c
  5761  010638  6EDA               	movwf	fsr2h,c
  5762  01063A  0100               	movlb	0	; () banked
  5763  01063C  479F               	rlncf	??_settings_loop& (0+255),f,b
  5764  01063E  0101               	movlb	1	; () banked
  5765  010640  50DF               	movf	223,w,c
  5766  010642  0100               	movlb	0	; () banked
  5767  010644  199F               	xorwf	??_settings_loop& (0+255),w,b
  5768  010646  0BFD               	andlw	-3
  5769  010648  199F               	xorwf	??_settings_loop& (0+255),w,b
  5770  01064A  0101               	movlb	1	; () banked
  5771  01064C  6EDF               	movwf	223,c
  5772                           
  5773                           ; BSR set to: 1
  5774                           ;tasks.h: 653: for (uint8_t i = 0; i < 3; i++) {
  5775  01064E  0E00               	movlw	0
  5776  010650  0100               	movlb	0	; () banked
  5777  010652  6FBB               	movwf	settings_loop@i_4455& (0+255),b
  5778  010654                     l12014:
  5779                           
  5780                           ; BSR set to: 0
  5781  010654  0E02               	movlw	2
  5782  010656  0100               	movlb	0	; () banked
  5783  010658  65BB               	cpfsgt	settings_loop@i_4455& (0+255),b
  5784  01065A  D001               	goto	l12018
  5785  01065C  D031               	goto	l12030
  5786  01065E                     l12018:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;tasks.h: 654: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  5790  01065E  0100               	movlb	0	; () banked
  5791  010660  51BB               	movf	settings_loop@i_4455& (0+255),w,b
  5792  010662  0D17               	mullw	23
  5793  010664  0E16               	movlw	22
  5794  010666  26F3               	addwf	prodl,f,c
  5795  010668  0E00               	movlw	0
  5796  01066A  22F4               	addwfc	prodh,f,c
  5797  01066C  0E29               	movlw	low _port
  5798  01066E  24F3               	addwf	prodl,w,c
  5799  010670  6ED9               	movwf	fsr2l,c
  5800  010672  0E01               	movlw	high _port
  5801  010674  20F4               	addwfc	prodh,w,c
  5802  010676  6EDA               	movwf	fsr2h,c
  5803  010678  0101               	movlb	1	; () banked
  5804  01067A  A2DF               	btfss	indf2,1,c
  5805  01067C  D00D               	goto	l12022
  5806                           
  5807                           ; BSR set to: 1
  5808  01067E  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5809  010682  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5810  010686  0E90               	movlw	low STR_115
  5811  010688  0100               	movlb	0	; () banked
  5812  01068A  6F62               	movwf	strcpy@from& (0+255),b
  5813  01068C  0EFF               	movlw	high STR_115
  5814  01068E  0100               	movlb	0	; () banked
  5815  010690  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5816  010692  EC51  F0B7         	call	_strcpy	;wreg free
  5817  010696  D00C               	goto	l12024
  5818  010698                     l12022:
  5819                           
  5820                           ;tasks.h: 655: else strcpy(strp, " OFF ");
  5821  010698  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5822  01069C  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5823  0106A0  0E96               	movlw	low STR_116
  5824  0106A2  0100               	movlb	0	; () banked
  5825  0106A4  6F62               	movwf	strcpy@from& (0+255),b
  5826  0106A6  0EFF               	movlw	high STR_116
  5827  0106A8  0100               	movlb	0	; () banked
  5828  0106AA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5829  0106AC  EC51  F0B7         	call	_strcpy	;wreg free
  5830  0106B0                     l12024:
  5831                           
  5832                           ;tasks.h: 656: strp += 5;
  5833  0106B0  0E05               	movlw	5
  5834  0106B2  0100               	movlb	0	; () banked
  5835  0106B4  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5836  0106B6  0E00               	movlw	0
  5837  0106B8  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5838                           
  5839                           ; BSR set to: 0
  5840  0106BA  0100               	movlb	0	; () banked
  5841  0106BC  2BBB               	incf	settings_loop@i_4455& (0+255),f,b
  5842  0106BE  D7CA               	goto	l12014
  5843  0106C0                     l12030:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;tasks.h: 657: }
  5847                           ;tasks.h: 658: display_char_puts("Left Centr Right", str);
  5848  0106C0  0E80               	movlw	low STR_117
  5849  0106C2  0100               	movlb	0	; () banked
  5850  0106C4  6F60               	movwf	display_char_puts@str0& (0+255),b
  5851  0106C6  0EFE               	movlw	high STR_117
  5852  0106C8  0100               	movlb	0	; () banked
  5853  0106CA  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5854  0106CC  0EA3               	movlw	low settings_loop@str
  5855  0106CE  0100               	movlb	0	; () banked
  5856  0106D0  6F62               	movwf	display_char_puts@str1& (0+255),b
  5857  0106D2  0E00               	movlw	high settings_loop@str
  5858  0106D4  0100               	movlb	0	; () banked
  5859  0106D6  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5860  0106D8  EC86  F0A3         	call	_display_char_puts	;wreg free
  5861  0106DC                     l12032:
  5862  0106DC  0100               	movlb	0	; () banked
  5863  0106DE  2BBE               	incf	settings_loop@j_4454& (0+255),f,b
  5864  0106E0  D763               	goto	l12004
  5865  0106E2                     l12036:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;tasks.h: 663: for (uint8_t j = 0; j < 3; j++) {
  5869  0106E2  0E00               	movlw	0
  5870  0106E4  0100               	movlb	0	; () banked
  5871  0106E6  6FBF               	movwf	settings_loop@j_4459& (0+255),b
  5872  0106E8                     l12038:
  5873                           
  5874                           ; BSR set to: 0
  5875  0106E8  0E02               	movlw	2
  5876  0106EA  0100               	movlb	0	; () banked
  5877  0106EC  65BF               	cpfsgt	settings_loop@j_4459& (0+255),b
  5878  0106EE  D001               	goto	l12042
  5879  0106F0  0012               	return	
  5880  0106F2                     l12042:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;tasks.h: 664: if (port[j].ctmu.flag.press) {
  5884  0106F2  0100               	movlb	0	; () banked
  5885  0106F4  51BF               	movf	settings_loop@j_4459& (0+255),w,b
  5886  0106F6  0D17               	mullw	23
  5887  0106F8  0E02               	movlw	2
  5888  0106FA  26F3               	addwf	prodl,f,c
  5889  0106FC  0E00               	movlw	0
  5890  0106FE  22F4               	addwfc	prodh,f,c
  5891  010700  0E29               	movlw	low _port
  5892  010702  24F3               	addwf	prodl,w,c
  5893  010704  6ED9               	movwf	fsr2l,c
  5894  010706  0E01               	movlw	high _port
  5895  010708  20F4               	addwfc	prodh,w,c
  5896  01070A  6EDA               	movwf	fsr2h,c
  5897  01070C  0101               	movlb	1	; () banked
  5898  01070E  A0DF               	btfss	indf2,0,c
  5899  010710  D08E               	goto	l12066
  5900                           
  5901                           ; BSR set to: 1
  5902                           ;tasks.h: 665: port[j].ctmu.flags = 0;
  5903  010712  0100               	movlb	0	; () banked
  5904  010714  51BF               	movf	settings_loop@j_4459& (0+255),w,b
  5905  010716  0D17               	mullw	23
  5906  010718  0E02               	movlw	2
  5907  01071A  26F3               	addwf	prodl,f,c
  5908  01071C  0E00               	movlw	0
  5909  01071E  22F4               	addwfc	prodh,f,c
  5910  010720  0E29               	movlw	low _port
  5911  010722  24F3               	addwf	prodl,w,c
  5912  010724  6ED9               	movwf	fsr2l,c
  5913  010726  0E01               	movlw	high _port
  5914  010728  20F4               	addwfc	prodh,w,c
  5915  01072A  6EDA               	movwf	fsr2h,c
  5916  01072C  0E00               	movlw	0
  5917  01072E  6EDE               	movwf	postinc2,c
  5918  010730  0E00               	movlw	0
  5919  010732  6EDD               	movwf	postdec2,c
  5920                           
  5921                           ;tasks.h: 666: port[j].integrated_current_sec = 0;
  5922  010734  0100               	movlb	0	; () banked
  5923  010736  51BF               	movf	settings_loop@j_4459& (0+255),w,b
  5924  010738  0D17               	mullw	23
  5925  01073A  0E08               	movlw	8
  5926  01073C  26F3               	addwf	prodl,f,c
  5927  01073E  0E00               	movlw	0
  5928  010740  22F4               	addwfc	prodh,f,c
  5929  010742  0E29               	movlw	low _port
  5930  010744  24F3               	addwf	prodl,w,c
  5931  010746  6ED9               	movwf	fsr2l,c
  5932  010748  0E01               	movlw	high _port
  5933  01074A  20F4               	addwfc	prodh,w,c
  5934  01074C  6EDA               	movwf	fsr2h,c
  5935  01074E  6ADE               	clrf	postinc2,c
  5936  010750  6ADE               	clrf	postinc2,c
  5937  010752  6ADE               	clrf	postinc2,c
  5938  010754  6ADD               	clrf	postdec2,c
  5939                           
  5940                           ;tasks.h: 667: port[j].integrated_current = 0;
  5941  010756  0100               	movlb	0	; () banked
  5942  010758  51BF               	movf	settings_loop@j_4459& (0+255),w,b
  5943  01075A  0D17               	mullw	23
  5944  01075C  0E0C               	movlw	12
  5945  01075E  26F3               	addwf	prodl,f,c
  5946  010760  0E00               	movlw	0
  5947  010762  22F4               	addwfc	prodh,f,c
  5948  010764  0E29               	movlw	low _port
  5949  010766  24F3               	addwf	prodl,w,c
  5950  010768  6ED9               	movwf	fsr2l,c
  5951  01076A  0E01               	movlw	high _port
  5952  01076C  20F4               	addwfc	prodh,w,c
  5953  01076E  6EDA               	movwf	fsr2h,c
  5954  010770  6ADE               	clrf	postinc2,c
  5955  010772  6ADE               	clrf	postinc2,c
  5956  010774  6ADE               	clrf	postinc2,c
  5957  010776  6ADD               	clrf	postdec2,c
  5958                           
  5959                           ;tasks.h: 668: port[j].integrated_time = 0;
  5960  010778  0100               	movlb	0	; () banked
  5961  01077A  51BF               	movf	settings_loop@j_4459& (0+255),w,b
  5962  01077C  0D17               	mullw	23
  5963  01077E  0E10               	movlw	16
  5964  010780  26F3               	addwf	prodl,f,c
  5965  010782  0E00               	movlw	0
  5966  010784  22F4               	addwfc	prodh,f,c
  5967  010786  0E29               	movlw	low _port
  5968  010788  24F3               	addwf	prodl,w,c
  5969  01078A  6ED9               	movwf	fsr2l,c
  5970  01078C  0E01               	movlw	high _port
  5971  01078E  20F4               	addwfc	prodh,w,c
  5972  010790  6EDA               	movwf	fsr2h,c
  5973  010792  6ADE               	clrf	postinc2,c
  5974  010794  6ADE               	clrf	postinc2,c
  5975  010796  6ADE               	clrf	postinc2,c
  5976  010798  6ADD               	clrf	postdec2,c
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;tasks.h: 669: for (uint8_t i = 0; i < 3; i++) {
  5980  01079A  0E00               	movlw	0
  5981  01079C  0100               	movlb	0	; () banked
  5982  01079E  6FBC               	movwf	settings_loop@i_4460& (0+255),b
  5983  0107A0                     l12048:
  5984                           
  5985                           ; BSR set to: 0
  5986  0107A0  0E02               	movlw	2
  5987  0107A2  0100               	movlb	0	; () banked
  5988  0107A4  65BC               	cpfsgt	settings_loop@i_4460& (0+255),b
  5989  0107A6  D001               	goto	l12052
  5990  0107A8  D034               	goto	l12064
  5991  0107AA                     l12052:
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;tasks.h: 670: if (port[i].integrated_current)strcpy(strp, " yet ");
  5995  0107AA  0100               	movlb	0	; () banked
  5996  0107AC  51BC               	movf	settings_loop@i_4460& (0+255),w,b
  5997  0107AE  0D17               	mullw	23
  5998  0107B0  0E0C               	movlw	12
  5999  0107B2  26F3               	addwf	prodl,f,c
  6000  0107B4  0E00               	movlw	0
  6001  0107B6  22F4               	addwfc	prodh,f,c
  6002  0107B8  0E29               	movlw	low _port
  6003  0107BA  24F3               	addwf	prodl,w,c
  6004  0107BC  6ED9               	movwf	fsr2l,c
  6005  0107BE  0E01               	movlw	high _port
  6006  0107C0  20F4               	addwfc	prodh,w,c
  6007  0107C2  6EDA               	movwf	fsr2h,c
  6008  0107C4  50DE               	movf	postinc2,w,c
  6009  0107C6  10DE               	iorwf	postinc2,w,c
  6010  0107C8  10DE               	iorwf	postinc2,w,c
  6011  0107CA  10DE               	iorwf	postinc2,w,c
  6012  0107CC  B4D8               	btfsc	status,2,c
  6013  0107CE  D00D               	goto	l12056
  6014                           
  6015                           ; BSR set to: 0
  6016  0107D0  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  6017  0107D4  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  6018  0107D8  0E9C               	movlw	low STR_121
  6019  0107DA  0100               	movlb	0	; () banked
  6020  0107DC  6F62               	movwf	strcpy@from& (0+255),b
  6021  0107DE  0EFF               	movlw	high STR_121
  6022  0107E0  0100               	movlb	0	; () banked
  6023  0107E2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6024  0107E4  EC51  F0B7         	call	_strcpy	;wreg free
  6025  0107E8  D00C               	goto	l12058
  6026  0107EA                     l12056:
  6027                           
  6028                           ;tasks.h: 671: else strcpy(strp, "  0  ");
  6029  0107EA  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  6030  0107EE  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  6031  0107F2  0E8A               	movlw	low STR_122
  6032  0107F4  0100               	movlb	0	; () banked
  6033  0107F6  6F62               	movwf	strcpy@from& (0+255),b
  6034  0107F8  0EFF               	movlw	high STR_122
  6035  0107FA  0100               	movlb	0	; () banked
  6036  0107FC  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6037  0107FE  EC51  F0B7         	call	_strcpy	;wreg free
  6038  010802                     l12058:
  6039                           
  6040                           ;tasks.h: 672: strp += 5;
  6041  010802  0E05               	movlw	5
  6042  010804  0100               	movlb	0	; () banked
  6043  010806  27C0               	addwf	settings_loop@strp& (0+255),f,b
  6044  010808  0E00               	movlw	0
  6045  01080A  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  6046                           
  6047                           ; BSR set to: 0
  6048  01080C  0100               	movlb	0	; () banked
  6049  01080E  2BBC               	incf	settings_loop@i_4460& (0+255),f,b
  6050  010810  D7C7               	goto	l12048
  6051  010812                     l12064:
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;tasks.h: 673: }
  6055                           ;tasks.h: 674: display_char_puts("Left Centr Right", str);
  6056  010812  0E80               	movlw	low STR_117
  6057  010814  0100               	movlb	0	; () banked
  6058  010816  6F60               	movwf	display_char_puts@str0& (0+255),b
  6059  010818  0EFE               	movlw	high STR_117
  6060  01081A  0100               	movlb	0	; () banked
  6061  01081C  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  6062  01081E  0EA3               	movlw	low settings_loop@str
  6063  010820  0100               	movlb	0	; () banked
  6064  010822  6F62               	movwf	display_char_puts@str1& (0+255),b
  6065  010824  0E00               	movlw	high settings_loop@str
  6066  010826  0100               	movlb	0	; () banked
  6067  010828  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  6068  01082A  EC86  F0A3         	call	_display_char_puts	;wreg free
  6069  01082E                     l12066:
  6070  01082E  0100               	movlb	0	; () banked
  6071  010830  2BBF               	incf	settings_loop@j_4459& (0+255),f,b
  6072  010832  D75A               	goto	l12038
  6073  010834                     l12072:
  6074                           
  6075                           ; BSR set to: 0
  6076  010834  0100               	movlb	0	; () banked
  6077  010836  51FB               	movf	_settings_select& (0+255),w,b
  6078                           
  6079                           ; Switch size 1, requested type "space"
  6080                           ; Number of cases is 5, Range of values is 0 to 4
  6081                           ; switch strategies available:
  6082                           ; Name         Instructions Cycles
  6083                           ; simple_byte           16     9 (average)
  6084                           ;	Chosen strategy is simple_byte
  6085  010838  0A00               	xorlw	0	; case 0
  6086  01083A  B4D8               	btfsc	status,2,c
  6087  01083C  0012               	return	
  6088  01083E  0A01               	xorlw	1	; case 1
  6089  010840  B4D8               	btfsc	status,2,c
  6090  010842  D5E3               	goto	l1530
  6091  010844  0A03               	xorlw	3	; case 2
  6092  010846  B4D8               	btfsc	status,2,c
  6093  010848  D60E               	goto	l11968
  6094  01084A  0A01               	xorlw	1	; case 3
  6095  01084C  B4D8               	btfsc	status,2,c
  6096  01084E  D6A9               	goto	l12002
  6097  010850  0A07               	xorlw	7	; case 4
  6098  010852  A4D8               	btfss	status,2,c
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;tasks.h: 680: }
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;tasks.h: 679: break;
  6105  010854  0012               	return	
  6106  010856  D745               	goto	l12036
  6107  010858                     l12076:
  6108                           
  6109                           ; BSR set to: 0
  6110  010858  5026               	movf	_settings_state,w,c
  6111                           
  6112                           ; Switch size 1, requested type "space"
  6113                           ; Number of cases is 4, Range of values is 0 to 3
  6114                           ; switch strategies available:
  6115                           ; Name         Instructions Cycles
  6116                           ; simple_byte           13     7 (average)
  6117                           ;	Chosen strategy is simple_byte
  6118  01085A  0A00               	xorlw	0	; case 0
  6119  01085C  B4D8               	btfsc	status,2,c
  6120  01085E  EF08  F080         	goto	l11828
  6121  010862  0A01               	xorlw	1	; case 1
  6122  010864  B4D8               	btfsc	status,2,c
  6123  010866  EF1C  F080         	goto	l1483
  6124  01086A  0A03               	xorlw	3	; case 2
  6125  01086C  B4D8               	btfsc	status,2,c
  6126  01086E  D5BB               	goto	l11950
  6127  010870  0A01               	xorlw	1	; case 3
  6128  010872  A4D8               	btfss	status,2,c
  6129  010874  0012               	return	
  6130  010876  D7DE               	goto	l12072
  6131  010878                     __end_of_settings_loop:
  6132                           	opt stack 0
  6133                           tblptru	equ	0xFF8
  6134                           tblptrh	equ	0xFF7
  6135                           tblptrl	equ	0xFF6
  6136                           tablat	equ	0xFF5
  6137                           prodh	equ	0xFF4
  6138                           prodl	equ	0xFF3
  6139                           intcon	equ	0xFF2
  6140                           postinc0	equ	0xFEE
  6141                           wreg	equ	0xFE8
  6142                           postdec1	equ	0xFE5
  6143                           fsr1h	equ	0xFE2
  6144                           fsr1l	equ	0xFE1
  6145                           indf2	equ	0xFDF
  6146                           postinc2	equ	0xFDE
  6147                           postdec2	equ	0xFDD
  6148                           fsr2h	equ	0xFDA
  6149                           fsr2l	equ	0xFD9
  6150                           status	equ	0xFD8
  6151                           
  6152 ;; *************** function _strcpy *****************
  6153 ;; Defined at:
  6154 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6157 ;;		 -> settings_loop@str(20), 
  6158 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6159 ;;		 -> STR_131(6), STR_130(6), STR_128(6), STR_127(6), 
  6160 ;;		 -> STR_125(6), STR_124(6), STR_122(6), STR_121(6), 
  6161 ;;		 -> STR_119(6), STR_118(6), STR_116(6), STR_115(6), 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6164 ;;		 -> settings_loop@str(20), 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  2    0[BANK0 ] PTR unsigned char 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;Total ram usage:        6 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:   11
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_settings_loop
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text6
  6189  016EA2                     __ptext6:
  6190                           	opt stack 0
  6191  016EA2                     _strcpy:
  6192                           	opt stack 17
  6193                           
  6194                           ;incstack = 0
  6195  016EA2  C060  F064         	movff	strcpy@to,strcpy@cp
  6196  016EA6  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  6197  016EAA  D006               	goto	l11352
  6198  016EAC                     l11350:
  6199  016EAC  0100               	movlb	0	; () banked
  6200  016EAE  4B64               	infsnz	strcpy@cp& (0+255),f,b
  6201  016EB0  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  6202  016EB2  0100               	movlb	0	; () banked
  6203  016EB4  4B62               	infsnz	strcpy@from& (0+255),f,b
  6204  016EB6  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  6205  016EB8                     l11352:
  6206  016EB8  C062  FFF6         	movff	strcpy@from,tblptrl
  6207  016EBC  C063  FFF7         	movff	strcpy@from+1,tblptrh
  6208  016EC0                     	if	0	;tblptru may be non-zero
  6209  016EC0                     	endif
  6210  016EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6211  016EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  6212  016EC2  6EF8               	movwf	tblptru,c
  6213  016EC4                     	endif
  6214  016EC4  C064  FFD9         	movff	strcpy@cp,fsr2l
  6215  016EC8  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  6216  016ECC  0008               	tblrd		*
  6217  016ECE  CFF5 FFDF          	movff	tablat,indf2
  6218  016ED2  50DF               	movf	indf2,w,c
  6219  016ED4  B4D8               	btfsc	status,2,c
  6220  016ED6  0012               	return	
  6221  016ED8  D7E9               	goto	l11350
  6222  016EDA                     __end_of_strcpy:
  6223                           	opt stack 0
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           intcon	equ	0xFF2
  6231                           postinc0	equ	0xFEE
  6232                           wreg	equ	0xFE8
  6233                           postdec1	equ	0xFE5
  6234                           fsr1h	equ	0xFE2
  6235                           fsr1l	equ	0xFE1
  6236                           indf2	equ	0xFDF
  6237                           postinc2	equ	0xFDE
  6238                           postdec2	equ	0xFDD
  6239                           fsr2h	equ	0xFDA
  6240                           fsr2l	equ	0xFD9
  6241                           status	equ	0xFD8
  6242                           
  6243 ;; *************** function _display_char_puts *****************
  6244 ;; Defined at:
  6245 ;;		line 230 in file "tasks.h"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
  6248 ;;		 -> STR_138(15), STR_132(17), STR_129(17), STR_126(17), 
  6249 ;;		 -> STR_123(17), STR_120(17), STR_117(17), STR_113(9), 
  6250 ;;		 -> STR_111(9), STR_109(9), STR_107(9), STR_105(9), 
  6251 ;;		 -> STR_103(9), STR_101(9), STR_99(9), STR_97(9), 
  6252 ;;		 -> STR_95(9), STR_93(9), 
  6253 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
  6254 ;;		 -> STR_139(13), STR_114(15), STR_112(16), STR_110(17), 
  6255 ;;		 -> STR_108(16), STR_106(17), STR_104(15), STR_102(16), 
  6256 ;;		 -> STR_100(17), STR_98(16), STR_96(17), STR_94(17), 
  6257 ;;		 -> settings_loop@str(20), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  i               1    4[BANK0 ] unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;		None               void
  6262 ;; Registers used:
  6263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;Total ram usage:        5 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:   11
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_settings_loop
  6280 ;;		_software_init
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text7
  6285  01470C                     __ptext7:
  6286                           	opt stack 0
  6287  01470C                     _display_char_puts:
  6288                           	opt stack 18
  6289                           
  6290                           ;tasks.h: 231: uint8_t i;
  6291                           ;tasks.h: 232: for (i = 0; *str0; i++) {
  6292                           
  6293                           ;incstack = 0
  6294  01470C  0E00               	movlw	0
  6295  01470E  0100               	movlb	0	; () banked
  6296  014710  6F64               	movwf	display_char_puts@i& (0+255),b
  6297  014712  D017               	goto	l11260
  6298  014714                     l11254:
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;tasks.h: 233: display_char[0][i] = *str0++;
  6302  014714  C060  FFF6         	movff	display_char_puts@str0,tblptrl
  6303  014718  C061  FFF7         	movff	display_char_puts@str0+1,tblptrh
  6304  01471C                     	if	0	;tblptru may be non-zero
  6305  01471C                     	endif
  6306  01471C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6307  01471C  0E00               	movlw	low (__mediumconst shr (0+16))
  6308  01471E  6EF8               	movwf	tblptru,c
  6309  014720                     	endif
  6310  014720  0100               	movlb	0	; () banked
  6311  014722  5164               	movf	display_char_puts@i& (0+255),w,b
  6312  014724  0D01               	mullw	1
  6313  014726  0E52               	movlw	low _display_char
  6314  014728  24F3               	addwf	prodl,w,c
  6315  01472A  6ED9               	movwf	fsr2l,c
  6316  01472C  0E02               	movlw	high _display_char
  6317  01472E  20F4               	addwfc	prodh,w,c
  6318  014730  6EDA               	movwf	fsr2h,c
  6319  014732  0008               	tblrd		*
  6320  014734  CFF5 FFDF          	movff	tablat,indf2
  6321                           
  6322                           ; BSR set to: 0
  6323  014738  0100               	movlb	0	; () banked
  6324  01473A  4B60               	infsnz	display_char_puts@str0& (0+255),f,b
  6325  01473C  2B61               	incf	(display_char_puts@str0+1)& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 0
  6328  01473E  0100               	movlb	0	; () banked
  6329  014740  2B64               	incf	display_char_puts@i& (0+255),f,b
  6330  014742                     l11260:
  6331                           
  6332                           ; BSR set to: 0
  6333  014742  C060  FFF6         	movff	display_char_puts@str0,tblptrl
  6334  014746  C061  FFF7         	movff	display_char_puts@str0+1,tblptrh
  6335  01474A                     	if	0	;tblptru may be non-zero
  6336  01474A                     	endif
  6337  01474A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6338  01474A  0E00               	movlw	low (__mediumconst shr (0+16))
  6339  01474C  6EF8               	movwf	tblptru,c
  6340  01474E                     	endif
  6341  01474E  0008               	tblrd		*
  6342  014750  50F5               	movf	tablat,w,c
  6343  014752  0900               	iorlw	0
  6344  014754  A4D8               	btfss	status,2,c
  6345  014756  D7DE               	goto	l11254
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;tasks.h: 234: }
  6349                           ;tasks.h: 235: display_char[0][i] = '\0';
  6350                           
  6351                           ; BSR set to: 0
  6352  014758  0100               	movlb	0	; () banked
  6353  01475A  5164               	movf	display_char_puts@i& (0+255),w,b
  6354  01475C  0D01               	mullw	1
  6355  01475E  0E52               	movlw	low _display_char
  6356  014760  24F3               	addwf	prodl,w,c
  6357  014762  6ED9               	movwf	fsr2l,c
  6358  014764  0E02               	movlw	high _display_char
  6359  014766  20F4               	addwfc	prodh,w,c
  6360  014768  6EDA               	movwf	fsr2h,c
  6361  01476A  0E00               	movlw	0
  6362  01476C  6EDF               	movwf	indf2,c
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;tasks.h: 236: for (i = 0; *str1; i++) {
  6366  01476E  0E00               	movlw	0
  6367  014770  0100               	movlb	0	; () banked
  6368  014772  6F64               	movwf	display_char_puts@i& (0+255),b
  6369  014774  D020               	goto	l11272
  6370  014776                     l11266:
  6371                           
  6372                           ;tasks.h: 237: display_char[1][i] = *str1++;
  6373  014776  C062  FFF6         	movff	display_char_puts@str1,tblptrl
  6374  01477A  C063  FFF7         	movff	display_char_puts@str1+1,tblptrh
  6375  01477E  0E00               	movlw	low (__mediumconst shr (0+16))
  6376  014780  6EF8               	movwf	tblptru,c
  6377  014782  0100               	movlb	0	; () banked
  6378  014784  5164               	movf	display_char_puts@i& (0+255),w,b
  6379  014786  0D01               	mullw	1
  6380  014788  0E66               	movlw	low (_display_char+20)
  6381  01478A  24F3               	addwf	prodl,w,c
  6382  01478C  6ED9               	movwf	fsr2l,c
  6383  01478E  0E02               	movlw	high (_display_char+20)
  6384  014790  20F4               	addwfc	prodh,w,c
  6385  014792  6EDA               	movwf	fsr2h,c
  6386  014794  0E0E               	movlw	(high __ramtop+-1)
  6387  014796  64F7               	cpfsgt	tblptrh,c
  6388  014798  D003               	bra	u13497
  6389  01479A  0008               	tblrd		*
  6390  01479C  50F5               	movf	tablat,w,c
  6391  01479E  D005               	bra	u13490
  6392  0147A0                     u13497:
  6393  0147A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6394  0147A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6395  0147A8  50E7               	movf	indf1,w,c
  6396  0147AA                     u13490:
  6397  0147AA  6EDF               	movwf	indf2,c
  6398  0147AC  0100               	movlb	0	; () banked
  6399  0147AE  4B62               	infsnz	display_char_puts@str1& (0+255),f,b
  6400  0147B0  2B63               	incf	(display_char_puts@str1+1)& (0+255),f,b
  6401                           
  6402                           ; BSR set to: 0
  6403  0147B2  0100               	movlb	0	; () banked
  6404  0147B4  2B64               	incf	display_char_puts@i& (0+255),f,b
  6405  0147B6                     l11272:
  6406                           
  6407                           ; BSR set to: 0
  6408  0147B6  C062  FFF6         	movff	display_char_puts@str1,tblptrl
  6409  0147BA  C063  FFF7         	movff	display_char_puts@str1+1,tblptrh
  6410  0147BE  0E00               	movlw	low (__mediumconst shr (0+16))
  6411  0147C0  6EF8               	movwf	tblptru,c
  6412  0147C2  0E0E               	movlw	(high __ramtop+-1)
  6413  0147C4  64F7               	cpfsgt	tblptrh,c
  6414  0147C6  D003               	bra	u13507
  6415  0147C8  0008               	tblrd		*
  6416  0147CA  50F5               	movf	tablat,w,c
  6417  0147CC  D005               	bra	u13500
  6418  0147CE                     u13507:
  6419  0147CE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6420  0147D2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6421  0147D6  50E7               	movf	indf1,w,c
  6422  0147D8                     u13500:
  6423  0147D8  0900               	iorlw	0
  6424  0147DA  A4D8               	btfss	status,2,c
  6425  0147DC  D7CC               	goto	l11266
  6426                           
  6427                           ;tasks.h: 238: }
  6428                           ;tasks.h: 239: display_char[1][i] = '\0';
  6429  0147DE  0100               	movlb	0	; () banked
  6430  0147E0  5164               	movf	display_char_puts@i& (0+255),w,b
  6431  0147E2  0D01               	mullw	1
  6432  0147E4  0E66               	movlw	low (_display_char+20)
  6433  0147E6  24F3               	addwf	prodl,w,c
  6434  0147E8  6ED9               	movwf	fsr2l,c
  6435  0147EA  0E02               	movlw	high (_display_char+20)
  6436  0147EC  20F4               	addwfc	prodh,w,c
  6437  0147EE  6EDA               	movwf	fsr2h,c
  6438  0147F0  0E00               	movlw	0
  6439  0147F2  6EDF               	movwf	indf2,c
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;tasks.h: 240: display_flag = 1;
  6443  0147F4  0E01               	movlw	1
  6444  0147F6  6E23               	movwf	_display_flag,c
  6445                           
  6446                           ; BSR set to: 0
  6447  0147F8  0012               	return		;funcret
  6448  0147FA                     __end_of_display_char_puts:
  6449                           	opt stack 0
  6450                           tblptru	equ	0xFF8
  6451                           tblptrh	equ	0xFF7
  6452                           tblptrl	equ	0xFF6
  6453                           tablat	equ	0xFF5
  6454                           prodh	equ	0xFF4
  6455                           prodl	equ	0xFF3
  6456                           intcon	equ	0xFF2
  6457                           postinc0	equ	0xFEE
  6458                           wreg	equ	0xFE8
  6459                           indf1	equ	0xFE7
  6460                           postdec1	equ	0xFE5
  6461                           fsr1h	equ	0xFE2
  6462                           fsr1l	equ	0xFE1
  6463                           indf2	equ	0xFDF
  6464                           postinc2	equ	0xFDE
  6465                           postdec2	equ	0xFDD
  6466                           fsr2h	equ	0xFDA
  6467                           fsr2l	equ	0xFD9
  6468                           status	equ	0xFD8
  6469                           
  6470 ;; *************** function _RTCC_adjust_time_toggle *****************
  6471 ;; Defined at:
  6472 ;;		line 303 in file "../My_header\My_RTCC.h"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;		None               void
  6479 ;; Registers used:
  6480 ;;		wreg, status,2
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;Total ram usage:        0 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:   11
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_settings_loop
  6497 ;;		_RTCC_adjust_time_button
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text8
  6502  0173EC                     __ptext8:
  6503                           	opt stack 0
  6504  0173EC                     _RTCC_adjust_time_toggle:
  6505                           	opt stack 17
  6506                           
  6507                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;incstack = 0
  6511  0173EC  0100               	movlb	0	; () banked
  6512  0173EE  51F6               	movf	_edit_flag& (0+255),w,b
  6513  0173F0  B4D8               	btfsc	status,2,c
  6514  0173F2  D004               	goto	l1089
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
  6518  0173F4  0E00               	movlw	0
  6519  0173F6  0100               	movlb	0	; () banked
  6520  0173F8  6FF6               	movwf	_edit_flag& (0+255),b
  6521                           
  6522                           ;My_header\My_RTCC.h: 306: } else {
  6523  0173FA  0012               	return	
  6524  0173FC                     l1089:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
  6528  0173FC  0100               	movlb	0	; () banked
  6529  0173FE  81F6               	bsf	_edit_flag& (0+255),0,b
  6530  017400  0012               	return	
  6531  017402                     __end_of_RTCC_adjust_time_toggle:
  6532                           	opt stack 0
  6533                           tblptru	equ	0xFF8
  6534                           tblptrh	equ	0xFF7
  6535                           tblptrl	equ	0xFF6
  6536                           tablat	equ	0xFF5
  6537                           prodh	equ	0xFF4
  6538                           prodl	equ	0xFF3
  6539                           intcon	equ	0xFF2
  6540                           postinc0	equ	0xFEE
  6541                           wreg	equ	0xFE8
  6542                           indf1	equ	0xFE7
  6543                           postdec1	equ	0xFE5
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           indf2	equ	0xFDF
  6547                           postinc2	equ	0xFDE
  6548                           postdec2	equ	0xFDD
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function _RTCC_adjust_time_inc *****************
  6554 ;; Defined at:
  6555 ;;		line 321 in file "../My_header\My_RTCC.h"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  ct              2   53[BANK0 ] PTR struct .
  6558 ;;		 -> caltime_now(7), 
  6559 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  6560 ;;		 -> epoch_now(4), 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  i               1   61[BANK0 ] unsigned char 
  6563 ;;  i               1   62[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;		None               void
  6566 ;; Registers used:
  6567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;Total ram usage:       10 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:   15
  6580 ;; This function calls:
  6581 ;;		_RTCC_from_RTCC
  6582 ;;		_RTCC_from_epoch
  6583 ;;		___lmul
  6584 ;;		_month_length
  6585 ;; This function is called by:
  6586 ;;		_settings_loop
  6587 ;;		_RTCC_adjust_time_button
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text9
  6592  012D7E                     __ptext9:
  6593                           	opt stack 0
  6594  012D7E                     _RTCC_adjust_time_inc:
  6595                           	opt stack 13
  6596                           
  6597                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;incstack = 0
  6601  012D7E  C095  F088         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
  6602  012D82  C096  F089         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
  6603  012D86  C097  F08A         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
  6604  012D8A  C098  F08B         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
  6605  012D8E  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
  6606                           
  6607                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
  6608  012D92  0100               	movlb	0	; () banked
  6609  012D94  A1F6               	btfss	_edit_flag& (0+255),0,b
  6610  012D96  D009               	goto	l11066
  6611                           
  6612                           ; BSR set to: 0
  6613  012D98  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6614  012D9C  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6615  012DA0  2ADE               	incf	postinc2,f,c
  6616  012DA2  0E00               	movlw	0
  6617  012DA4  22DE               	addwfc	postinc2,f,c
  6618  012DA6  22DE               	addwfc	postinc2,f,c
  6619  012DA8  22DE               	addwfc	postinc2,f,c
  6620  012DAA                     l11066:
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6624  012DAA  0100               	movlb	0	; () banked
  6625  012DAC  A3F6               	btfss	_edit_flag& (0+255),1,b
  6626  012DAE  D00A               	goto	l11070
  6627                           
  6628                           ; BSR set to: 0
  6629  012DB0  0E3C               	movlw	60
  6630  012DB2  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6631  012DB6  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6632  012DBA  26DE               	addwf	postinc2,f,c
  6633  012DBC  0E00               	movlw	0
  6634  012DBE  22DE               	addwfc	postinc2,f,c
  6635  012DC0  22DE               	addwfc	postinc2,f,c
  6636  012DC2  22DE               	addwfc	postinc2,f,c
  6637  012DC4                     l11070:
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6641  012DC4  0100               	movlb	0	; () banked
  6642  012DC6  A5F6               	btfss	_edit_flag& (0+255),2,b
  6643  012DC8  D00C               	goto	l11074
  6644                           
  6645                           ; BSR set to: 0
  6646  012DCA  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6647  012DCE  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6648  012DD2  0E10               	movlw	16
  6649  012DD4  26DE               	addwf	postinc2,f,c
  6650  012DD6  0E0E               	movlw	14
  6651  012DD8  22DE               	addwfc	postinc2,f,c
  6652  012DDA  0E00               	movlw	0
  6653  012DDC  22DE               	addwfc	postinc2,f,c
  6654  012DDE  0E00               	movlw	0
  6655  012DE0  22DE               	addwfc	postinc2,f,c
  6656  012DE2                     l11074:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6660  012DE2  0100               	movlb	0	; () banked
  6661  012DE4  A7F6               	btfss	_edit_flag& (0+255),3,b
  6662  012DE6  D00C               	goto	l11078
  6663                           
  6664                           ; BSR set to: 0
  6665  012DE8  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6666  012DEC  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6667  012DF0  0E80               	movlw	128
  6668  012DF2  26DE               	addwf	postinc2,f,c
  6669  012DF4  0E51               	movlw	81
  6670  012DF6  22DE               	addwfc	postinc2,f,c
  6671  012DF8  0E01               	movlw	1
  6672  012DFA  22DE               	addwfc	postinc2,f,c
  6673  012DFC  0E00               	movlw	0
  6674  012DFE  22DE               	addwfc	postinc2,f,c
  6675  012E00                     l11078:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6679  012E00  0100               	movlb	0	; () banked
  6680  012E02  A9F6               	btfss	_edit_flag& (0+255),4,b
  6681  012E04  D038               	goto	l11082
  6682                           
  6683                           ; BSR set to: 0
  6684  012E06  0100               	movlb	0	; () banked
  6685  012E08  EE20 F005          	lfsr	2,5
  6686  012E0C  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6687  012E0E  26D9               	addwf	fsr2l,f,c
  6688  012E10  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6689  012E12  22DA               	addwfc	fsr2h,f,c
  6690  012E14  50DF               	movf	indf2,w,c
  6691  012E16  0100               	movlb	0	; () banked
  6692  012E18  6F66               	movwf	month_length@month& (0+255),b
  6693  012E1A  0100               	movlb	0	; () banked
  6694  012E1C  EE20 F006          	lfsr	2,6
  6695  012E20  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6696  012E22  26D9               	addwf	fsr2l,f,c
  6697  012E24  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6698  012E26  22DA               	addwfc	fsr2h,f,c
  6699  012E28  50DF               	movf	indf2,w,c
  6700  012E2A  EC3D  F0A6         	call	_month_length
  6701  012E2E  0100               	movlb	0	; () banked
  6702  012E30  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6703  012E32  0100               	movlb	0	; () banked
  6704  012E34  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6705  012E36  0100               	movlb	0	; () banked
  6706  012E38  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6707  012E3A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6708  012E3C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6709  012E3E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6710  012E40  0E80               	movlw	128
  6711  012E42  0100               	movlb	0	; () banked
  6712  012E44  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6713  012E46  0E51               	movlw	81
  6714  012E48  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6715  012E4A  0E01               	movlw	1
  6716  012E4C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6717  012E4E  0E00               	movlw	0
  6718  012E50  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6719  012E52  EC29  F0B3         	call	___lmul	;wreg free
  6720  012E56  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6721  012E5A  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6722  012E5E  0100               	movlb	0	; () banked
  6723  012E60  516D               	movf	?___lmul& (0+255),w,b
  6724  012E62  26DE               	addwf	postinc2,f,c
  6725  012E64  0100               	movlb	0	; () banked
  6726  012E66  516E               	movf	(?___lmul+1)& (0+255),w,b
  6727  012E68  22DE               	addwfc	postinc2,f,c
  6728  012E6A  0100               	movlb	0	; () banked
  6729  012E6C  516F               	movf	(?___lmul+2)& (0+255),w,b
  6730  012E6E  22DE               	addwfc	postinc2,f,c
  6731  012E70  0100               	movlb	0	; () banked
  6732  012E72  5170               	movf	(?___lmul+3)& (0+255),w,b
  6733  012E74  22DE               	addwfc	postinc2,f,c
  6734  012E76                     l11082:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
  6738  012E76  0100               	movlb	0	; () banked
  6739  012E78  ABF6               	btfss	_edit_flag& (0+255),5,b
  6740  012E7A  D088               	goto	l11104
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
  6744  012E7C  0100               	movlb	0	; () banked
  6745  012E7E  EE20 F005          	lfsr	2,5
  6746  012E82  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6747  012E84  26D9               	addwf	fsr2l,f,c
  6748  012E86  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6749  012E88  22DA               	addwfc	fsr2h,f,c
  6750  012E8A  50DF               	movf	indf2,w,c
  6751  012E8C  0100               	movlb	0	; () banked
  6752  012E8E  6F9E               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  6753  012E90                     l11086:
  6754                           
  6755                           ; BSR set to: 0
  6756  012E90  0E0C               	movlw	12
  6757  012E92  0100               	movlb	0	; () banked
  6758  012E94  659E               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  6759  012E96  D001               	goto	l11090
  6760  012E98  D033               	goto	l11096
  6761  012E9A                     l11090:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6765  012E9A  C09E  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  6766  012E9E  0100               	movlb	0	; () banked
  6767  012EA0  EE20 F006          	lfsr	2,6
  6768  012EA4  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6769  012EA6  26D9               	addwf	fsr2l,f,c
  6770  012EA8  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6771  012EAA  22DA               	addwfc	fsr2h,f,c
  6772  012EAC  50DF               	movf	indf2,w,c
  6773  012EAE  EC3D  F0A6         	call	_month_length
  6774  012EB2  0100               	movlb	0	; () banked
  6775  012EB4  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6776  012EB6  0100               	movlb	0	; () banked
  6777  012EB8  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6778  012EBA  0100               	movlb	0	; () banked
  6779  012EBC  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6780  012EBE  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6781  012EC0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6782  012EC2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6783  012EC4  0E80               	movlw	128
  6784  012EC6  0100               	movlb	0	; () banked
  6785  012EC8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6786  012ECA  0E51               	movlw	81
  6787  012ECC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6788  012ECE  0E01               	movlw	1
  6789  012ED0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6790  012ED2  0E00               	movlw	0
  6791  012ED4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6792  012ED6  EC29  F0B3         	call	___lmul	;wreg free
  6793  012EDA  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6794  012EDE  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6795  012EE2  0100               	movlb	0	; () banked
  6796  012EE4  516D               	movf	?___lmul& (0+255),w,b
  6797  012EE6  26DE               	addwf	postinc2,f,c
  6798  012EE8  0100               	movlb	0	; () banked
  6799  012EEA  516E               	movf	(?___lmul+1)& (0+255),w,b
  6800  012EEC  22DE               	addwfc	postinc2,f,c
  6801  012EEE  0100               	movlb	0	; () banked
  6802  012EF0  516F               	movf	(?___lmul+2)& (0+255),w,b
  6803  012EF2  22DE               	addwfc	postinc2,f,c
  6804  012EF4  0100               	movlb	0	; () banked
  6805  012EF6  5170               	movf	(?___lmul+3)& (0+255),w,b
  6806  012EF8  22DE               	addwfc	postinc2,f,c
  6807                           
  6808                           ; BSR set to: 0
  6809  012EFA  0100               	movlb	0	; () banked
  6810  012EFC  2B9E               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  6811  012EFE  D7C8               	goto	l11086
  6812  012F00                     l11096:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;My_header\My_RTCC.h: 331: }
  6816                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
  6817  012F00  0E01               	movlw	1
  6818  012F02  0100               	movlb	0	; () banked
  6819  012F04  6F9D               	movwf	RTCC_adjust_time_inc@i_3971& (0+255),b
  6820  012F06  D036               	goto	l11102
  6821  012F08                     l11098:
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6825  012F08  C09D  F066         	movff	RTCC_adjust_time_inc@i_3971,month_length@month
  6826  012F0C  0100               	movlb	0	; () banked
  6827  012F0E  EE20 F006          	lfsr	2,6
  6828  012F12  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6829  012F14  26D9               	addwf	fsr2l,f,c
  6830  012F16  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6831  012F18  22DA               	addwfc	fsr2h,f,c
  6832  012F1A  50DF               	movf	indf2,w,c
  6833  012F1C  0100               	movlb	0	; () banked
  6834  012F1E  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6835  012F20  0100               	movlb	0	; () banked
  6836  012F22  2999               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  6837  012F24  EC3D  F0A6         	call	_month_length
  6838  012F28  0100               	movlb	0	; () banked
  6839  012F2A  6F9A               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  6840  012F2C  0100               	movlb	0	; () banked
  6841  012F2E  519A               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  6842  012F30  0100               	movlb	0	; () banked
  6843  012F32  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6844  012F34  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6845  012F36  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6846  012F38  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6847  012F3A  0E80               	movlw	128
  6848  012F3C  0100               	movlb	0	; () banked
  6849  012F3E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6850  012F40  0E51               	movlw	81
  6851  012F42  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6852  012F44  0E01               	movlw	1
  6853  012F46  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6854  012F48  0E00               	movlw	0
  6855  012F4A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6856  012F4C  EC29  F0B3         	call	___lmul	;wreg free
  6857  012F50  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6858  012F54  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6859  012F58  0100               	movlb	0	; () banked
  6860  012F5A  516D               	movf	?___lmul& (0+255),w,b
  6861  012F5C  26DE               	addwf	postinc2,f,c
  6862  012F5E  0100               	movlb	0	; () banked
  6863  012F60  516E               	movf	(?___lmul+1)& (0+255),w,b
  6864  012F62  22DE               	addwfc	postinc2,f,c
  6865  012F64  0100               	movlb	0	; () banked
  6866  012F66  516F               	movf	(?___lmul+2)& (0+255),w,b
  6867  012F68  22DE               	addwfc	postinc2,f,c
  6868  012F6A  0100               	movlb	0	; () banked
  6869  012F6C  5170               	movf	(?___lmul+3)& (0+255),w,b
  6870  012F6E  22DE               	addwfc	postinc2,f,c
  6871                           
  6872                           ; BSR set to: 0
  6873  012F70  0100               	movlb	0	; () banked
  6874  012F72  2B9D               	incf	RTCC_adjust_time_inc@i_3971& (0+255),f,b
  6875  012F74                     l11102:
  6876                           
  6877                           ; BSR set to: 0
  6878  012F74  0100               	movlb	0	; () banked
  6879  012F76  EE20 F005          	lfsr	2,5
  6880  012F7A  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6881  012F7C  26D9               	addwf	fsr2l,f,c
  6882  012F7E  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6883  012F80  22DA               	addwfc	fsr2h,f,c
  6884  012F82  50DE               	movf	postinc2,w,c
  6885  012F84  0100               	movlb	0	; () banked
  6886  012F86  5D9D               	subwf	RTCC_adjust_time_inc@i_3971& (0+255),w,b
  6887  012F88  A0D8               	btfss	status,0,c
  6888  012F8A  D7BE               	goto	l11098
  6889  012F8C                     l11104:
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;My_header\My_RTCC.h: 334: }
  6893                           ;My_header\My_RTCC.h: 335: }
  6894                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
  6895  012F8C  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6896  012F90  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6897  012F94  0E80               	movlw	128
  6898  012F96  5CDE               	subwf	postinc2,w,c
  6899  012F98  0E13               	movlw	19
  6900  012F9A  58DE               	subwfb	postinc2,w,c
  6901  012F9C  0E19               	movlw	25
  6902  012F9E  58DE               	subwfb	postinc2,w,c
  6903  012FA0  0EBC               	movlw	188
  6904  012FA2  58DE               	subwfb	postinc2,w,c
  6905  012FA4  A0D8               	btfss	status,0,c
  6906  012FA6  D00C               	goto	l11108
  6907                           
  6908                           ; BSR set to: 0
  6909  012FA8  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6910  012FAC  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6911  012FB0  0E80               	movlw	128
  6912  012FB2  5EDE               	subwf	postinc2,f,c
  6913  012FB4  0E13               	movlw	19
  6914  012FB6  5ADE               	subwfb	postinc2,f,c
  6915  012FB8  0E19               	movlw	25
  6916  012FBA  5ADE               	subwfb	postinc2,f,c
  6917  012FBC  0EBC               	movlw	188
  6918  012FBE  5ADE               	subwfb	postinc2,f,c
  6919  012FC0                     l11108:
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
  6923  012FC0  0E7E               	movlw	low _caltime_now
  6924  012FC2  0100               	movlb	0	; () banked
  6925  012FC4  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  6926  012FC6  0E01               	movlw	high _caltime_now
  6927  012FC8  0100               	movlb	0	; () banked
  6928  012FCA  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  6929  012FCC  0EFC               	movlw	low _epoch_now
  6930  012FCE  0100               	movlb	0	; () banked
  6931  012FD0  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  6932  012FD2  0E00               	movlw	high _epoch_now
  6933  012FD4  0100               	movlb	0	; () banked
  6934  012FD6  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  6935  012FD8  EC6E  F0B9         	call	_RTCC_from_epoch	;wreg free
  6936                           
  6937                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
  6938  012FDC  0E01               	movlw	1
  6939  012FDE  6E2A               	movwf	_time_change_flag,c
  6940  012FE0  0012               	return		;funcret
  6941  012FE2                     __end_of_RTCC_adjust_time_inc:
  6942                           	opt stack 0
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           prodh	equ	0xFF4
  6948                           prodl	equ	0xFF3
  6949                           intcon	equ	0xFF2
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           indf1	equ	0xFE7
  6953                           postdec1	equ	0xFE5
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _RTCC_adjust_time_dec *****************
  6964 ;; Defined at:
  6965 ;;		line 342 in file "../My_header\My_RTCC.h"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  ct              2   53[BANK0 ] PTR struct .
  6968 ;;		 -> caltime_now(7), 
  6969 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  6970 ;;		 -> epoch_now(4), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  i               1   61[BANK0 ] unsigned char 
  6973 ;;  i               1   62[BANK0 ] unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;		None               void
  6976 ;; Registers used:
  6977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;Total ram usage:       10 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:   15
  6990 ;; This function calls:
  6991 ;;		_RTCC_from_RTCC
  6992 ;;		_RTCC_from_epoch
  6993 ;;		___lmul
  6994 ;;		_month_length
  6995 ;; This function is called by:
  6996 ;;		_settings_loop
  6997 ;;		_RTCC_adjust_time_button
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text10
  7002  012FE2                     __ptext10:
  7003                           	opt stack 0
  7004  012FE2                     _RTCC_adjust_time_dec:
  7005                           	opt stack 13
  7006                           
  7007                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
  7008                           
  7009                           ;incstack = 0
  7010  012FE2  C095  F088         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
  7011  012FE6  C096  F089         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
  7012  012FEA  C097  F08A         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
  7013  012FEE  C098  F08B         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
  7014  012FF2  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
  7015                           
  7016                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
  7017  012FF6  0100               	movlb	0	; () banked
  7018  012FF8  A1F6               	btfss	_edit_flag& (0+255),0,b
  7019  012FFA  D009               	goto	l11118
  7020                           
  7021                           ; BSR set to: 0
  7022  012FFC  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7023  013000  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7024  013004  06DE               	decf	postinc2,f,c
  7025  013006  0E00               	movlw	0
  7026  013008  5ADE               	subwfb	postinc2,f,c
  7027  01300A  5ADE               	subwfb	postinc2,f,c
  7028  01300C  5ADE               	subwfb	postinc2,f,c
  7029  01300E                     l11118:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  7033  01300E  0100               	movlb	0	; () banked
  7034  013010  A3F6               	btfss	_edit_flag& (0+255),1,b
  7035  013012  D00A               	goto	l11122
  7036                           
  7037                           ; BSR set to: 0
  7038  013014  0E3C               	movlw	60
  7039  013016  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7040  01301A  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7041  01301E  5EDE               	subwf	postinc2,f,c
  7042  013020  0E00               	movlw	0
  7043  013022  5ADE               	subwfb	postinc2,f,c
  7044  013024  5ADE               	subwfb	postinc2,f,c
  7045  013026  5ADE               	subwfb	postinc2,f,c
  7046  013028                     l11122:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  7050  013028  0100               	movlb	0	; () banked
  7051  01302A  A5F6               	btfss	_edit_flag& (0+255),2,b
  7052  01302C  D00C               	goto	l11126
  7053                           
  7054                           ; BSR set to: 0
  7055  01302E  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7056  013032  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7057  013036  0E10               	movlw	16
  7058  013038  5EDE               	subwf	postinc2,f,c
  7059  01303A  0E0E               	movlw	14
  7060  01303C  5ADE               	subwfb	postinc2,f,c
  7061  01303E  0E00               	movlw	0
  7062  013040  5ADE               	subwfb	postinc2,f,c
  7063  013042  0E00               	movlw	0
  7064  013044  5ADE               	subwfb	postinc2,f,c
  7065  013046                     l11126:
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  7069  013046  0100               	movlb	0	; () banked
  7070  013048  A7F6               	btfss	_edit_flag& (0+255),3,b
  7071  01304A  D00C               	goto	l11130
  7072                           
  7073                           ; BSR set to: 0
  7074  01304C  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7075  013050  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7076  013054  0E80               	movlw	128
  7077  013056  5EDE               	subwf	postinc2,f,c
  7078  013058  0E51               	movlw	81
  7079  01305A  5ADE               	subwfb	postinc2,f,c
  7080  01305C  0E01               	movlw	1
  7081  01305E  5ADE               	subwfb	postinc2,f,c
  7082  013060  0E00               	movlw	0
  7083  013062  5ADE               	subwfb	postinc2,f,c
  7084  013064                     l11130:
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7088  013064  0100               	movlb	0	; () banked
  7089  013066  A9F6               	btfss	_edit_flag& (0+255),4,b
  7090  013068  D038               	goto	l11134
  7091                           
  7092                           ; BSR set to: 0
  7093  01306A  0100               	movlb	0	; () banked
  7094  01306C  EE20 F005          	lfsr	2,5
  7095  013070  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7096  013072  26D9               	addwf	fsr2l,f,c
  7097  013074  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7098  013076  22DA               	addwfc	fsr2h,f,c
  7099  013078  50DF               	movf	indf2,w,c
  7100  01307A  0100               	movlb	0	; () banked
  7101  01307C  6F66               	movwf	month_length@month& (0+255),b
  7102  01307E  0100               	movlb	0	; () banked
  7103  013080  EE20 F006          	lfsr	2,6
  7104  013084  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7105  013086  26D9               	addwf	fsr2l,f,c
  7106  013088  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7107  01308A  22DA               	addwfc	fsr2h,f,c
  7108  01308C  50DF               	movf	indf2,w,c
  7109  01308E  EC3D  F0A6         	call	_month_length
  7110  013092  0100               	movlb	0	; () banked
  7111  013094  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7112  013096  0100               	movlb	0	; () banked
  7113  013098  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7114  01309A  0100               	movlb	0	; () banked
  7115  01309C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7116  01309E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7117  0130A0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7118  0130A2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7119  0130A4  0E80               	movlw	128
  7120  0130A6  0100               	movlb	0	; () banked
  7121  0130A8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7122  0130AA  0E51               	movlw	81
  7123  0130AC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7124  0130AE  0E01               	movlw	1
  7125  0130B0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7126  0130B2  0E00               	movlw	0
  7127  0130B4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7128  0130B6  EC29  F0B3         	call	___lmul	;wreg free
  7129  0130BA  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7130  0130BE  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7131  0130C2  0100               	movlb	0	; () banked
  7132  0130C4  516D               	movf	?___lmul& (0+255),w,b
  7133  0130C6  5EDE               	subwf	postinc2,f,c
  7134  0130C8  0100               	movlb	0	; () banked
  7135  0130CA  516E               	movf	(?___lmul+1)& (0+255),w,b
  7136  0130CC  5ADE               	subwfb	postinc2,f,c
  7137  0130CE  0100               	movlb	0	; () banked
  7138  0130D0  516F               	movf	(?___lmul+2)& (0+255),w,b
  7139  0130D2  5ADE               	subwfb	postinc2,f,c
  7140  0130D4  0100               	movlb	0	; () banked
  7141  0130D6  5170               	movf	(?___lmul+3)& (0+255),w,b
  7142  0130D8  5ADE               	subwfb	postinc2,f,c
  7143  0130DA                     l11134:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
  7147  0130DA  0100               	movlb	0	; () banked
  7148  0130DC  ABF6               	btfss	_edit_flag& (0+255),5,b
  7149  0130DE  D088               	goto	l11156
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
  7153  0130E0  0100               	movlb	0	; () banked
  7154  0130E2  EE20 F005          	lfsr	2,5
  7155  0130E6  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7156  0130E8  26D9               	addwf	fsr2l,f,c
  7157  0130EA  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7158  0130EC  22DA               	addwfc	fsr2h,f,c
  7159  0130EE  50DF               	movf	indf2,w,c
  7160  0130F0  0100               	movlb	0	; () banked
  7161  0130F2  6F9E               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  7162  0130F4                     l11138:
  7163                           
  7164                           ; BSR set to: 0
  7165  0130F4  0100               	movlb	0	; () banked
  7166  0130F6  519E               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  7167  0130F8  0100               	movlb	0	; () banked
  7168  0130FA  B4D8               	btfsc	status,2,c
  7169  0130FC  D033               	goto	l11148
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7173                           
  7174                           ; BSR set to: 0
  7175                           
  7176                           ; BSR set to: 0
  7177  0130FE  C09E  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  7178  013102  0100               	movlb	0	; () banked
  7179  013104  EE20 F006          	lfsr	2,6
  7180  013108  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7181  01310A  26D9               	addwf	fsr2l,f,c
  7182  01310C  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7183  01310E  22DA               	addwfc	fsr2h,f,c
  7184  013110  50DF               	movf	indf2,w,c
  7185  013112  EC3D  F0A6         	call	_month_length
  7186  013116  0100               	movlb	0	; () banked
  7187  013118  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7188  01311A  0100               	movlb	0	; () banked
  7189  01311C  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7190  01311E  0100               	movlb	0	; () banked
  7191  013120  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7192  013122  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7193  013124  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7194  013126  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7195  013128  0E80               	movlw	128
  7196  01312A  0100               	movlb	0	; () banked
  7197  01312C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7198  01312E  0E51               	movlw	81
  7199  013130  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7200  013132  0E01               	movlw	1
  7201  013134  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7202  013136  0E00               	movlw	0
  7203  013138  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7204  01313A  EC29  F0B3         	call	___lmul	;wreg free
  7205  01313E  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7206  013142  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7207  013146  0100               	movlb	0	; () banked
  7208  013148  516D               	movf	?___lmul& (0+255),w,b
  7209  01314A  5EDE               	subwf	postinc2,f,c
  7210  01314C  0100               	movlb	0	; () banked
  7211  01314E  516E               	movf	(?___lmul+1)& (0+255),w,b
  7212  013150  5ADE               	subwfb	postinc2,f,c
  7213  013152  0100               	movlb	0	; () banked
  7214  013154  516F               	movf	(?___lmul+2)& (0+255),w,b
  7215  013156  5ADE               	subwfb	postinc2,f,c
  7216  013158  0100               	movlb	0	; () banked
  7217  01315A  5170               	movf	(?___lmul+3)& (0+255),w,b
  7218  01315C  5ADE               	subwfb	postinc2,f,c
  7219                           
  7220                           ; BSR set to: 0
  7221  01315E  0100               	movlb	0	; () banked
  7222  013160  079E               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  7223  013162  D7C8               	goto	l11138
  7224  013164                     l11148:
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;My_header\My_RTCC.h: 352: }
  7228                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
  7229  013164  0E0C               	movlw	12
  7230  013166  0100               	movlb	0	; () banked
  7231  013168  6F9D               	movwf	RTCC_adjust_time_dec@i_3984& (0+255),b
  7232  01316A  D036               	goto	l11154
  7233  01316C                     l11150:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  7237  01316C  C09D  F066         	movff	RTCC_adjust_time_dec@i_3984,month_length@month
  7238  013170  0100               	movlb	0	; () banked
  7239  013172  EE20 F006          	lfsr	2,6
  7240  013176  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7241  013178  26D9               	addwf	fsr2l,f,c
  7242  01317A  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7243  01317C  22DA               	addwfc	fsr2h,f,c
  7244  01317E  50DF               	movf	indf2,w,c
  7245  013180  0100               	movlb	0	; () banked
  7246  013182  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7247  013184  0100               	movlb	0	; () banked
  7248  013186  0599               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  7249  013188  EC3D  F0A6         	call	_month_length
  7250  01318C  0100               	movlb	0	; () banked
  7251  01318E  6F9A               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  7252  013190  0100               	movlb	0	; () banked
  7253  013192  519A               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  7254  013194  0100               	movlb	0	; () banked
  7255  013196  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7256  013198  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7257  01319A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7258  01319C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7259  01319E  0E80               	movlw	128
  7260  0131A0  0100               	movlb	0	; () banked
  7261  0131A2  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7262  0131A4  0E51               	movlw	81
  7263  0131A6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7264  0131A8  0E01               	movlw	1
  7265  0131AA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7266  0131AC  0E00               	movlw	0
  7267  0131AE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7268  0131B0  EC29  F0B3         	call	___lmul	;wreg free
  7269  0131B4  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7270  0131B8  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7271  0131BC  0100               	movlb	0	; () banked
  7272  0131BE  516D               	movf	?___lmul& (0+255),w,b
  7273  0131C0  5EDE               	subwf	postinc2,f,c
  7274  0131C2  0100               	movlb	0	; () banked
  7275  0131C4  516E               	movf	(?___lmul+1)& (0+255),w,b
  7276  0131C6  5ADE               	subwfb	postinc2,f,c
  7277  0131C8  0100               	movlb	0	; () banked
  7278  0131CA  516F               	movf	(?___lmul+2)& (0+255),w,b
  7279  0131CC  5ADE               	subwfb	postinc2,f,c
  7280  0131CE  0100               	movlb	0	; () banked
  7281  0131D0  5170               	movf	(?___lmul+3)& (0+255),w,b
  7282  0131D2  5ADE               	subwfb	postinc2,f,c
  7283                           
  7284                           ; BSR set to: 0
  7285  0131D4  0100               	movlb	0	; () banked
  7286  0131D6  079D               	decf	RTCC_adjust_time_dec@i_3984& (0+255),f,b
  7287  0131D8                     l11154:
  7288                           
  7289                           ; BSR set to: 0
  7290  0131D8  0100               	movlb	0	; () banked
  7291  0131DA  EE20 F005          	lfsr	2,5
  7292  0131DE  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7293  0131E0  26D9               	addwf	fsr2l,f,c
  7294  0131E2  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7295  0131E4  22DA               	addwfc	fsr2h,f,c
  7296  0131E6  0100               	movlb	0	; () banked
  7297  0131E8  519D               	movf	RTCC_adjust_time_dec@i_3984& (0+255),w,b
  7298  0131EA  5CDE               	subwf	postinc2,w,c
  7299  0131EC  A0D8               	btfss	status,0,c
  7300  0131EE  D7BE               	goto	l11150
  7301  0131F0                     l11156:
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;My_header\My_RTCC.h: 355: }
  7305                           ;My_header\My_RTCC.h: 356: }
  7306                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
  7307  0131F0  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7308  0131F4  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7309  0131F8  0E80               	movlw	128
  7310  0131FA  5CDE               	subwf	postinc2,w,c
  7311  0131FC  0E13               	movlw	19
  7312  0131FE  58DE               	subwfb	postinc2,w,c
  7313  013200  0E19               	movlw	25
  7314  013202  58DE               	subwfb	postinc2,w,c
  7315  013204  0EBC               	movlw	188
  7316  013206  58DE               	subwfb	postinc2,w,c
  7317  013208  A0D8               	btfss	status,0,c
  7318  01320A  D00C               	goto	l11160
  7319                           
  7320                           ; BSR set to: 0
  7321  01320C  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7322  013210  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7323  013214  0E80               	movlw	128
  7324  013216  26DE               	addwf	postinc2,f,c
  7325  013218  0E13               	movlw	19
  7326  01321A  22DE               	addwfc	postinc2,f,c
  7327  01321C  0E19               	movlw	25
  7328  01321E  22DE               	addwfc	postinc2,f,c
  7329  013220  0EBC               	movlw	188
  7330  013222  22DE               	addwfc	postinc2,f,c
  7331  013224                     l11160:
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
  7335  013224  0E7E               	movlw	low _caltime_now
  7336  013226  0100               	movlb	0	; () banked
  7337  013228  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  7338  01322A  0E01               	movlw	high _caltime_now
  7339  01322C  0100               	movlb	0	; () banked
  7340  01322E  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7341  013230  0EFC               	movlw	low _epoch_now
  7342  013232  0100               	movlb	0	; () banked
  7343  013234  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  7344  013236  0E00               	movlw	high _epoch_now
  7345  013238  0100               	movlb	0	; () banked
  7346  01323A  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7347  01323C  EC6E  F0B9         	call	_RTCC_from_epoch	;wreg free
  7348                           
  7349                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
  7350  013240  0E01               	movlw	1
  7351  013242  6E2A               	movwf	_time_change_flag,c
  7352  013244  0012               	return		;funcret
  7353  013246                     __end_of_RTCC_adjust_time_dec:
  7354                           	opt stack 0
  7355                           tblptru	equ	0xFF8
  7356                           tblptrh	equ	0xFF7
  7357                           tblptrl	equ	0xFF6
  7358                           tablat	equ	0xFF5
  7359                           prodh	equ	0xFF4
  7360                           prodl	equ	0xFF3
  7361                           intcon	equ	0xFF2
  7362                           postinc0	equ	0xFEE
  7363                           wreg	equ	0xFE8
  7364                           indf1	equ	0xFE7
  7365                           postdec1	equ	0xFE5
  7366                           fsr1h	equ	0xFE2
  7367                           fsr1l	equ	0xFE1
  7368                           indf2	equ	0xFDF
  7369                           postinc2	equ	0xFDE
  7370                           postdec2	equ	0xFDD
  7371                           fsr2h	equ	0xFDA
  7372                           fsr2l	equ	0xFD9
  7373                           status	equ	0xFD8
  7374                           
  7375 ;; *************** function _RTCC_from_epoch *****************
  7376 ;; Defined at:
  7377 ;;		line 242 in file "../My_header\My_RTCC.h"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  ct              2   49[BANK0 ] PTR struct .
  7380 ;;		 -> caltime_now(7), 
  7381 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  7382 ;;		 -> epoch_now(4), 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;		None               void
  7387 ;; Registers used:
  7388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7398 ;;Total ram usage:        4 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:   14
  7401 ;; This function calls:
  7402 ;;		_caltime_to_RTCC
  7403 ;;		_epoch_to_caltime
  7404 ;; This function is called by:
  7405 ;;		_RTCC_adjust_time_inc
  7406 ;;		_RTCC_adjust_time_dec
  7407 ;;		_software_init
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text11
  7412  0172DC                     __ptext11:
  7413                           	opt stack 0
  7414  0172DC                     _RTCC_from_epoch:
  7415                           	opt stack 15
  7416                           
  7417                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  7418                           
  7419                           ;incstack = 0
  7420  0172DC  C091  F081         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7421  0172E0  C092  F082         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7422  0172E4  C093  F083         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7423  0172E8  C094  F084         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7424  0172EC  EC3B  F09A         	call	_epoch_to_caltime	;wreg free
  7425                           
  7426                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  7427  0172F0  C091  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7428  0172F4  C092  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7429  0172F8  EC58  F0A8         	call	_caltime_to_RTCC	;wreg free
  7430  0172FC  0012               	return		;funcret
  7431  0172FE                     __end_of_RTCC_from_epoch:
  7432                           	opt stack 0
  7433                           tblptru	equ	0xFF8
  7434                           tblptrh	equ	0xFF7
  7435                           tblptrl	equ	0xFF6
  7436                           tablat	equ	0xFF5
  7437                           prodh	equ	0xFF4
  7438                           prodl	equ	0xFF3
  7439                           intcon	equ	0xFF2
  7440                           postinc0	equ	0xFEE
  7441                           wreg	equ	0xFE8
  7442                           indf1	equ	0xFE7
  7443                           postdec1	equ	0xFE5
  7444                           fsr1h	equ	0xFE2
  7445                           fsr1l	equ	0xFE1
  7446                           indf2	equ	0xFDF
  7447                           postinc2	equ	0xFDE
  7448                           postdec2	equ	0xFDD
  7449                           fsr2h	equ	0xFDA
  7450                           fsr2l	equ	0xFD9
  7451                           status	equ	0xFD8
  7452                           
  7453 ;; *************** function _RTCC_adjust_time_cursor *****************
  7454 ;; Defined at:
  7455 ;;		line 311 in file "../My_header\My_RTCC.h"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;		None
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;		None               void
  7462 ;; Registers used:
  7463 ;;		wreg, status,2
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;Total ram usage:        0 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:   11
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_settings_loop
  7480 ;;		_RTCC_adjust_time_button
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text12
  7485  016A1E                     __ptext12:
  7486                           	opt stack 0
  7487  016A1E                     _RTCC_adjust_time_cursor:
  7488                           	opt stack 17
  7489                           
  7490                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  7491                           
  7492                           ;incstack = 0
  7493  016A1E  0100               	movlb	0	; () banked
  7494  016A20  A1F6               	btfss	_edit_flag& (0+255),0,b
  7495  016A22  D004               	goto	l1094
  7496                           
  7497                           ; BSR set to: 0
  7498  016A24  0E02               	movlw	2
  7499  016A26  0100               	movlb	0	; () banked
  7500  016A28  6FF6               	movwf	_edit_flag& (0+255),b
  7501  016A2A  0012               	return	
  7502  016A2C                     l1094:
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  7506  016A2C  0100               	movlb	0	; () banked
  7507  016A2E  A3F6               	btfss	_edit_flag& (0+255),1,b
  7508  016A30  D004               	goto	l1096
  7509                           
  7510                           ; BSR set to: 0
  7511  016A32  0E04               	movlw	4
  7512  016A34  0100               	movlb	0	; () banked
  7513  016A36  6FF6               	movwf	_edit_flag& (0+255),b
  7514  016A38  0012               	return	
  7515  016A3A                     l1096:
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  7519  016A3A  0100               	movlb	0	; () banked
  7520  016A3C  A5F6               	btfss	_edit_flag& (0+255),2,b
  7521  016A3E  D004               	goto	l1098
  7522                           
  7523                           ; BSR set to: 0
  7524  016A40  0E08               	movlw	8
  7525  016A42  0100               	movlb	0	; () banked
  7526  016A44  6FF6               	movwf	_edit_flag& (0+255),b
  7527  016A46  0012               	return	
  7528  016A48                     l1098:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  7532  016A48  0100               	movlb	0	; () banked
  7533  016A4A  A7F6               	btfss	_edit_flag& (0+255),3,b
  7534  016A4C  D004               	goto	l1100
  7535                           
  7536                           ; BSR set to: 0
  7537  016A4E  0E10               	movlw	16
  7538  016A50  0100               	movlb	0	; () banked
  7539  016A52  6FF6               	movwf	_edit_flag& (0+255),b
  7540  016A54  0012               	return	
  7541  016A56                     l1100:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  7545  016A56  0100               	movlb	0	; () banked
  7546  016A58  A9F6               	btfss	_edit_flag& (0+255),4,b
  7547  016A5A  D004               	goto	l1102
  7548                           
  7549                           ; BSR set to: 0
  7550  016A5C  0E20               	movlw	32
  7551  016A5E  0100               	movlb	0	; () banked
  7552  016A60  6FF6               	movwf	_edit_flag& (0+255),b
  7553  016A62  0012               	return	
  7554  016A64                     l1102:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  7558  016A64  0100               	movlb	0	; () banked
  7559  016A66  ABF6               	btfss	_edit_flag& (0+255),5,b
  7560  016A68  D004               	goto	l11058
  7561                           
  7562                           ; BSR set to: 0
  7563  016A6A  0E01               	movlw	1
  7564  016A6C  0100               	movlb	0	; () banked
  7565  016A6E  6FF6               	movwf	_edit_flag& (0+255),b
  7566  016A70  0012               	return	
  7567  016A72                     l11058:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
  7571  016A72  0E00               	movlw	0
  7572  016A74  0100               	movlb	0	; () banked
  7573  016A76  6FF6               	movwf	_edit_flag& (0+255),b
  7574                           
  7575                           ; BSR set to: 0
  7576                           
  7577                           ; BSR set to: 0
  7578                           
  7579                           ; BSR set to: 0
  7580                           
  7581                           ; BSR set to: 0
  7582                           
  7583                           ; BSR set to: 0
  7584  016A78  0012               	return	
  7585  016A7A                     __end_of_RTCC_adjust_time_cursor:
  7586                           	opt stack 0
  7587                           tblptru	equ	0xFF8
  7588                           tblptrh	equ	0xFF7
  7589                           tblptrl	equ	0xFF6
  7590                           tablat	equ	0xFF5
  7591                           prodh	equ	0xFF4
  7592                           prodl	equ	0xFF3
  7593                           intcon	equ	0xFF2
  7594                           postinc0	equ	0xFEE
  7595                           wreg	equ	0xFE8
  7596                           indf1	equ	0xFE7
  7597                           postdec1	equ	0xFE5
  7598                           fsr1h	equ	0xFE2
  7599                           fsr1l	equ	0xFE1
  7600                           indf2	equ	0xFDF
  7601                           postinc2	equ	0xFDE
  7602                           postdec2	equ	0xFDD
  7603                           fsr2h	equ	0xFDA
  7604                           fsr2l	equ	0xFD9
  7605                           status	equ	0xFD8
  7606                           
  7607 ;; *************** function _port_button_loop *****************
  7608 ;; Defined at:
  7609 ;;		line 477 in file "tasks.h"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  i               1    2[BANK0 ] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;		None               void
  7616 ;; Registers used:
  7617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7626 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;Total ram usage:        1 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:   12
  7630 ;; This function calls:
  7631 ;;		_LED_OUT
  7632 ;;		_OUT
  7633 ;;		_display_now
  7634 ;; This function is called by:
  7635 ;;		_normal_loop
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text13
  7640  013938                     __ptext13:
  7641                           	opt stack 0
  7642  013938                     _port_button_loop:
  7643                           	opt stack 17
  7644                           
  7645                           ;tasks.h: 478: uint8_t i;
  7646                           ;tasks.h: 479: for (i = 0; i < 3; i++) {
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;incstack = 0
  7650  013938  0E00               	movlw	0
  7651  01393A  0100               	movlb	0	; () banked
  7652  01393C  6F62               	movwf	port_button_loop@i& (0+255),b
  7653  01393E                     l11782:
  7654                           
  7655                           ; BSR set to: 0
  7656  01393E  0E02               	movlw	2
  7657  013940  0100               	movlb	0	; () banked
  7658  013942  6562               	cpfsgt	port_button_loop@i& (0+255),b
  7659  013944  D001               	goto	l11786
  7660  013946  0012               	return	
  7661  013948                     l11786:
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;tasks.h: 481: if (port[i].ctmu.flag.pressing) {
  7665  013948  0100               	movlb	0	; () banked
  7666  01394A  5162               	movf	port_button_loop@i& (0+255),w,b
  7667  01394C  0D17               	mullw	23
  7668  01394E  0E03               	movlw	3
  7669  013950  26F3               	addwf	prodl,f,c
  7670  013952  0E00               	movlw	0
  7671  013954  22F4               	addwfc	prodh,f,c
  7672  013956  0E29               	movlw	low _port
  7673  013958  24F3               	addwf	prodl,w,c
  7674  01395A  6ED9               	movwf	fsr2l,c
  7675  01395C  0E01               	movlw	high _port
  7676  01395E  20F4               	addwfc	prodh,w,c
  7677  013960  6EDA               	movwf	fsr2h,c
  7678  013962  0101               	movlb	1	; () banked
  7679  013964  A0DF               	btfss	indf2,0,c
  7680  013966  D008               	goto	l11790
  7681                           
  7682                           ; BSR set to: 1
  7683                           ;tasks.h: 482: LED_OUT(i, 1);
  7684  013968  0E01               	movlw	1
  7685  01396A  0100               	movlb	0	; () banked
  7686  01396C  6F60               	movwf	LED_OUT@value& (0+255),b
  7687  01396E  0100               	movlb	0	; () banked
  7688  013970  5162               	movf	port_button_loop@i& (0+255),w,b
  7689  013972  EC64  F0B3         	call	_LED_OUT
  7690                           
  7691                           ;tasks.h: 483: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag.led_flag ==
      +                           1) {
  7692  013976  D027               	goto	l11796
  7693  013978                     l11790:
  7694  013978  0100               	movlb	0	; () banked
  7695  01397A  5162               	movf	port_button_loop@i& (0+255),w,b
  7696  01397C  0D17               	mullw	23
  7697  01397E  0E16               	movlw	22
  7698  013980  26F3               	addwf	prodl,f,c
  7699  013982  0E00               	movlw	0
  7700  013984  22F4               	addwfc	prodh,f,c
  7701  013986  0E29               	movlw	low _port
  7702  013988  24F3               	addwf	prodl,w,c
  7703  01398A  6ED9               	movwf	fsr2l,c
  7704  01398C  0E01               	movlw	high _port
  7705  01398E  20F4               	addwfc	prodh,w,c
  7706  013990  6EDA               	movwf	fsr2h,c
  7707  013992  0101               	movlb	1	; () banked
  7708  013994  B2DF               	btfsc	indf2,1,c
  7709  013996  D017               	goto	l11796
  7710                           
  7711                           ; BSR set to: 1
  7712  013998  0100               	movlb	0	; () banked
  7713  01399A  5162               	movf	port_button_loop@i& (0+255),w,b
  7714  01399C  0D17               	mullw	23
  7715  01399E  0E16               	movlw	22
  7716  0139A0  26F3               	addwf	prodl,f,c
  7717  0139A2  0E00               	movlw	0
  7718  0139A4  22F4               	addwfc	prodh,f,c
  7719  0139A6  0E29               	movlw	low _port
  7720  0139A8  24F3               	addwf	prodl,w,c
  7721  0139AA  6ED9               	movwf	fsr2l,c
  7722  0139AC  0E01               	movlw	high _port
  7723  0139AE  20F4               	addwfc	prodh,w,c
  7724  0139B0  6EDA               	movwf	fsr2h,c
  7725  0139B2  0101               	movlb	1	; () banked
  7726  0139B4  A6DF               	btfss	indf2,3,c
  7727  0139B6  D007               	goto	l11796
  7728                           
  7729                           ; BSR set to: 1
  7730                           ;tasks.h: 484: LED_OUT(i, 0);
  7731  0139B8  0E00               	movlw	0
  7732  0139BA  0100               	movlb	0	; () banked
  7733  0139BC  6F60               	movwf	LED_OUT@value& (0+255),b
  7734  0139BE  0100               	movlb	0	; () banked
  7735  0139C0  5162               	movf	port_button_loop@i& (0+255),w,b
  7736  0139C2  EC64  F0B3         	call	_LED_OUT
  7737  0139C6                     l11796:
  7738                           
  7739                           ;tasks.h: 485: }
  7740                           ;tasks.h: 487: if (port[i].ctmu.flag.press) {
  7741  0139C6  0100               	movlb	0	; () banked
  7742  0139C8  5162               	movf	port_button_loop@i& (0+255),w,b
  7743  0139CA  0D17               	mullw	23
  7744  0139CC  0E02               	movlw	2
  7745  0139CE  26F3               	addwf	prodl,f,c
  7746  0139D0  0E00               	movlw	0
  7747  0139D2  22F4               	addwfc	prodh,f,c
  7748  0139D4  0E29               	movlw	low _port
  7749  0139D6  24F3               	addwf	prodl,w,c
  7750  0139D8  6ED9               	movwf	fsr2l,c
  7751  0139DA  0E01               	movlw	high _port
  7752  0139DC  20F4               	addwfc	prodh,w,c
  7753  0139DE  6EDA               	movwf	fsr2h,c
  7754  0139E0  0101               	movlb	1	; () banked
  7755  0139E2  A0DF               	btfss	indf2,0,c
  7756  0139E4  D04E               	goto	l11822
  7757                           
  7758                           ; BSR set to: 1
  7759                           ;tasks.h: 488: port[i].ctmu.flags = 0;
  7760  0139E6  0100               	movlb	0	; () banked
  7761  0139E8  5162               	movf	port_button_loop@i& (0+255),w,b
  7762  0139EA  0D17               	mullw	23
  7763  0139EC  0E02               	movlw	2
  7764  0139EE  26F3               	addwf	prodl,f,c
  7765  0139F0  0E00               	movlw	0
  7766  0139F2  22F4               	addwfc	prodh,f,c
  7767  0139F4  0E29               	movlw	low _port
  7768  0139F6  24F3               	addwf	prodl,w,c
  7769  0139F8  6ED9               	movwf	fsr2l,c
  7770  0139FA  0E01               	movlw	high _port
  7771  0139FC  20F4               	addwfc	prodh,w,c
  7772  0139FE  6EDA               	movwf	fsr2h,c
  7773  013A00  0E00               	movlw	0
  7774  013A02  6EDE               	movwf	postinc2,c
  7775  013A04  0E00               	movlw	0
  7776  013A06  6EDD               	movwf	postdec2,c
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;tasks.h: 489: LED_OUT(i, 0);
  7780  013A08  0E00               	movlw	0
  7781  013A0A  0100               	movlb	0	; () banked
  7782  013A0C  6F60               	movwf	LED_OUT@value& (0+255),b
  7783  013A0E  0100               	movlb	0	; () banked
  7784  013A10  5162               	movf	port_button_loop@i& (0+255),w,b
  7785  013A12  EC64  F0B3         	call	_LED_OUT
  7786                           
  7787                           ;tasks.h: 492: if (print_port == i) {
  7788  013A16  0100               	movlb	0	; () banked
  7789  013A18  5162               	movf	port_button_loop@i& (0+255),w,b
  7790  013A1A  0100               	movlb	0	; () banked
  7791  013A1C  19FA               	xorwf	_print_port& (0+255),w,b
  7792  013A1E  B4D8               	btfsc	status,2,c
  7793  013A20  D009               	goto	l11814
  7794  013A22  D012               	goto	l1469
  7795  013A24                     l11806:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;tasks.h: 495: print_data = INTEGRATED_CURRENT;
  7799  013A24  0E01               	movlw	1
  7800  013A26  D003               	goto	L2
  7801  013A28                     l11808:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;tasks.h: 498: print_data = INTEGRATED_TIME;
  7805  013A28  0E02               	movlw	2
  7806  013A2A  D001               	goto	L2
  7807  013A2C                     l11810:
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;tasks.h: 502: print_data = CURRENT;
  7811  013A2C  0E00               	movlw	0
  7812  013A2E                     L2:
  7813  013A2E  0100               	movlb	0	; () banked
  7814  013A30  6FF9               	movwf	_print_data& (0+255),b
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;tasks.h: 504: }
  7818                           
  7819                           ;tasks.h: 503: break;
  7820  013A32  D00C               	goto	l11816
  7821  013A34                     l11814:
  7822                           
  7823                           ; BSR set to: 0
  7824  013A34  0100               	movlb	0	; () banked
  7825  013A36  51F9               	movf	_print_data& (0+255),w,b
  7826                           
  7827                           ; Switch size 1, requested type "space"
  7828                           ; Number of cases is 3, Range of values is 0 to 2
  7829                           ; switch strategies available:
  7830                           ; Name         Instructions Cycles
  7831                           ; simple_byte           10     6 (average)
  7832                           ;	Chosen strategy is simple_byte
  7833  013A38  0A00               	xorlw	0	; case 0
  7834  013A3A  B4D8               	btfsc	status,2,c
  7835  013A3C  D7F3               	goto	l11806
  7836  013A3E  0A01               	xorlw	1	; case 1
  7837  013A40  B4D8               	btfsc	status,2,c
  7838  013A42  D7F2               	goto	l11808
  7839  013A44  0A03               	xorlw	3	; case 2
  7840  013A46  D7F2               	goto	l11810
  7841  013A48                     l1469:
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;tasks.h: 506: print_port = i;
  7845  013A48  C062  F0FA         	movff	port_button_loop@i,_print_port
  7846  013A4C                     l11816:
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;tasks.h: 507: }
  7850                           ;tasks.h: 508: display_now(PRINT_DATA);
  7851  013A4C  0E02               	movlw	2
  7852  013A4E  EC01  F0BA         	call	_display_now
  7853                           
  7854                           ;tasks.h: 510: OUT(i, 1);
  7855  013A52  0E01               	movlw	1
  7856  013A54  0100               	movlb	0	; () banked
  7857  013A56  6F60               	movwf	OUT@value& (0+255),b
  7858  013A58  0100               	movlb	0	; () banked
  7859  013A5A  5162               	movf	port_button_loop@i& (0+255),w,b
  7860  013A5C  EC9D  F0B3         	call	_OUT
  7861                           
  7862                           ;tasks.h: 511: port[i].cut_cnt = 0;
  7863  013A60  0100               	movlb	0	; () banked
  7864  013A62  5162               	movf	port_button_loop@i& (0+255),w,b
  7865  013A64  0D17               	mullw	23
  7866  013A66  0E14               	movlw	20
  7867  013A68  26F3               	addwf	prodl,f,c
  7868  013A6A  0E00               	movlw	0
  7869  013A6C  22F4               	addwfc	prodh,f,c
  7870  013A6E  0E29               	movlw	low _port
  7871  013A70  24F3               	addwf	prodl,w,c
  7872  013A72  6ED9               	movwf	fsr2l,c
  7873  013A74  0E01               	movlw	high _port
  7874  013A76  20F4               	addwfc	prodh,w,c
  7875  013A78  6EDA               	movwf	fsr2h,c
  7876  013A7A  0E00               	movlw	0
  7877  013A7C  6EDE               	movwf	postinc2,c
  7878  013A7E  0E00               	movlw	0
  7879  013A80  6EDD               	movwf	postdec2,c
  7880  013A82                     l11822:
  7881  013A82  0100               	movlb	0	; () banked
  7882  013A84  2B62               	incf	port_button_loop@i& (0+255),f,b
  7883  013A86  D75B               	goto	l11782
  7884  013A88                     __end_of_port_button_loop:
  7885                           	opt stack 0
  7886                           tblptru	equ	0xFF8
  7887                           tblptrh	equ	0xFF7
  7888                           tblptrl	equ	0xFF6
  7889                           tablat	equ	0xFF5
  7890                           prodh	equ	0xFF4
  7891                           prodl	equ	0xFF3
  7892                           intcon	equ	0xFF2
  7893                           postinc0	equ	0xFEE
  7894                           wreg	equ	0xFE8
  7895                           indf1	equ	0xFE7
  7896                           postdec1	equ	0xFE5
  7897                           fsr1h	equ	0xFE2
  7898                           fsr1l	equ	0xFE1
  7899                           indf2	equ	0xFDF
  7900                           postinc2	equ	0xFDE
  7901                           postdec2	equ	0xFDD
  7902                           fsr2h	equ	0xFDA
  7903                           fsr2l	equ	0xFD9
  7904                           status	equ	0xFD8
  7905                           
  7906 ;; *************** function _display_now *****************
  7907 ;; Defined at:
  7908 ;;		line 307 in file "tasks.h"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  pres_item       1    wreg     enum E9644
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  pres_item       1    0[BANK0 ] enum E9644
  7913 ;; Return value:  Size  Location     Type
  7914 ;;		None               void
  7915 ;; Registers used:
  7916 ;;		wreg, status,2
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;Total ram usage:        1 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:   11
  7929 ;; This function calls:
  7930 ;;		Nothing
  7931 ;; This function is called by:
  7932 ;;		_port_button_loop
  7933 ;;		_settings_loop
  7934 ;;		_normal_loop
  7935 ;;		_sleep_loop
  7936 ;;		_software_init
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text14
  7941  017402                     __ptext14:
  7942                           	opt stack 0
  7943  017402                     _display_now:
  7944                           	opt stack 18
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;incstack = 0
  7948                           ;display_now@pres_item stored from wreg
  7949  017402  0100               	movlb	0	; () banked
  7950  017404  6F60               	movwf	display_now@pres_item& (0+255),b
  7951                           
  7952                           ;tasks.h: 308: pres_print_item = pres_item;
  7953  017406  C060  F0F8         	movff	display_now@pres_item,_pres_print_item
  7954                           
  7955                           ;tasks.h: 309: next_print_item = pres_item;
  7956  01740A  C060  F125         	movff	display_now@pres_item,_next_print_item
  7957                           
  7958                           ;tasks.h: 310: display_flag = 1;
  7959  01740E  0E01               	movlw	1
  7960  017410  6E23               	movwf	_display_flag,c
  7961  017412  0012               	return		;funcret
  7962  017414                     __end_of_display_now:
  7963                           	opt stack 0
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           prodh	equ	0xFF4
  7969                           prodl	equ	0xFF3
  7970                           intcon	equ	0xFF2
  7971                           postinc0	equ	0xFEE
  7972                           wreg	equ	0xFE8
  7973                           indf1	equ	0xFE7
  7974                           postdec1	equ	0xFE5
  7975                           fsr1h	equ	0xFE2
  7976                           fsr1l	equ	0xFE1
  7977                           indf2	equ	0xFDF
  7978                           postinc2	equ	0xFDE
  7979                           postdec2	equ	0xFDD
  7980                           fsr2h	equ	0xFDA
  7981                           fsr2l	equ	0xFD9
  7982                           status	equ	0xFD8
  7983                           
  7984 ;; *************** function _LED_OUT *****************
  7985 ;; Defined at:
  7986 ;;		line 142 in file "tasks.h"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  b               1    wreg     unsigned char 
  7989 ;;  value           1    0[BANK0 ] unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  b               1    1[BANK0 ] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;		None               void
  7994 ;; Registers used:
  7995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8001 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;Total ram usage:        2 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:   11
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_port_button_loop
  8012 ;;		_sleep_loop
  8013 ;;		_software_init
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text15
  8018  0166C8                     __ptext15:
  8019                           	opt stack 0
  8020  0166C8                     _LED_OUT:
  8021                           	opt stack 18
  8022                           
  8023                           ;incstack = 0
  8024                           ;LED_OUT@b stored from wreg
  8025  0166C8  0100               	movlb	0	; () banked
  8026  0166CA  6F61               	movwf	LED_OUT@b& (0+255),b
  8027                           
  8028                           ;tasks.h: 143: port[b].flag.led_flag = value;
  8029  0166CC  0100               	movlb	0	; () banked
  8030  0166CE  5161               	movf	LED_OUT@b& (0+255),w,b
  8031  0166D0  0D17               	mullw	23
  8032  0166D2  0E16               	movlw	22
  8033  0166D4  26F3               	addwf	prodl,f,c
  8034  0166D6  0E00               	movlw	0
  8035  0166D8  22F4               	addwfc	prodh,f,c
  8036  0166DA  0E29               	movlw	low _port
  8037  0166DC  24F3               	addwf	prodl,w,c
  8038  0166DE  6ED9               	movwf	fsr2l,c
  8039  0166E0  0E01               	movlw	high _port
  8040  0166E2  20F4               	addwfc	prodh,w,c
  8041  0166E4  6EDA               	movwf	fsr2h,c
  8042  0166E6  0100               	movlb	0	; () banked
  8043  0166E8  B160               	btfsc	LED_OUT@value& (0+255),0,b
  8044  0166EA  D003               	bra	u13395
  8045  0166EC  0101               	movlb	1	; () banked
  8046  0166EE  96DF               	bcf	indf2,3,c
  8047  0166F0  D002               	bra	u13396
  8048  0166F2                     u13395:
  8049  0166F2  0101               	movlb	1	; () banked
  8050  0166F4  86DF               	bsf	indf2,3,c
  8051  0166F6                     u13396:
  8052                           
  8053                           ;tasks.h: 144: switch (b) {
  8054  0166F6  D015               	goto	l11244
  8055  0166F8                     l1291:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;tasks.h: 146: LATB7 = value;
  8059  0166F8  0100               	movlb	0	; () banked
  8060  0166FA  A160               	btfss	LED_OUT@value& (0+255),0,b
  8061  0166FC  D002               	goto	u13400
  8062  0166FE  8E8A               	bsf	3978,7,c	;volatile
  8063  016700  0012               	return	
  8064  016702                     u13400:
  8065  016702  9E8A               	bcf	3978,7,c	;volatile
  8066                           
  8067                           ;tasks.h: 147: break;
  8068  016704  0012               	return	
  8069  016706                     l1293:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;tasks.h: 149: LATB6 = value;
  8073  016706  0100               	movlb	0	; () banked
  8074  016708  A160               	btfss	LED_OUT@value& (0+255),0,b
  8075  01670A  D002               	goto	u13420
  8076  01670C  8C8A               	bsf	3978,6,c	;volatile
  8077  01670E  0012               	return	
  8078  016710                     u13420:
  8079  016710  9C8A               	bcf	3978,6,c	;volatile
  8080                           
  8081                           ;tasks.h: 150: break;
  8082  016712  0012               	return	
  8083  016714                     l1294:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;tasks.h: 152: LATC2 = value;
  8087  016714  0100               	movlb	0	; () banked
  8088  016716  A160               	btfss	LED_OUT@value& (0+255),0,b
  8089  016718  D002               	goto	u13440
  8090  01671A  848B               	bsf	3979,2,c	;volatile
  8091  01671C  0012               	return	
  8092  01671E                     u13440:
  8093  01671E  948B               	bcf	3979,2,c	;volatile
  8094                           
  8095                           ;tasks.h: 154: }
  8096                           
  8097                           ;tasks.h: 153: break;
  8098  016720  0012               	return	
  8099  016722                     l11244:
  8100  016722  0100               	movlb	0	; () banked
  8101  016724  5161               	movf	LED_OUT@b& (0+255),w,b
  8102                           
  8103                           ; Switch size 1, requested type "space"
  8104                           ; Number of cases is 3, Range of values is 0 to 2
  8105                           ; switch strategies available:
  8106                           ; Name         Instructions Cycles
  8107                           ; simple_byte           10     6 (average)
  8108                           ;	Chosen strategy is simple_byte
  8109  016726  0A00               	xorlw	0	; case 0
  8110  016728  B4D8               	btfsc	status,2,c
  8111  01672A  D7E6               	goto	l1291
  8112  01672C  0A01               	xorlw	1	; case 1
  8113  01672E  B4D8               	btfsc	status,2,c
  8114  016730  D7EA               	goto	l1293
  8115  016732  0A03               	xorlw	3	; case 2
  8116  016734  A4D8               	btfss	status,2,c
  8117  016736  0012               	return	
  8118  016738  D7ED               	goto	l1294
  8119  01673A                     __end_of_LED_OUT:
  8120                           	opt stack 0
  8121                           tblptru	equ	0xFF8
  8122                           tblptrh	equ	0xFF7
  8123                           tblptrl	equ	0xFF6
  8124                           tablat	equ	0xFF5
  8125                           prodh	equ	0xFF4
  8126                           prodl	equ	0xFF3
  8127                           intcon	equ	0xFF2
  8128                           postinc0	equ	0xFEE
  8129                           wreg	equ	0xFE8
  8130                           indf1	equ	0xFE7
  8131                           postdec1	equ	0xFE5
  8132                           fsr1h	equ	0xFE2
  8133                           fsr1l	equ	0xFE1
  8134                           indf2	equ	0xFDF
  8135                           postinc2	equ	0xFDE
  8136                           postdec2	equ	0xFDD
  8137                           fsr2h	equ	0xFDA
  8138                           fsr2l	equ	0xFD9
  8139                           status	equ	0xFD8
  8140                           
  8141 ;; *************** function _display_LCD *****************
  8142 ;; Defined at:
  8143 ;;		line 243 in file "tasks.h"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;		None
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  str            10   60[BANK0 ] unsigned char [10]
  8148 ;; Return value:  Size  Location     Type
  8149 ;;		None               void
  8150 ;; Registers used:
  8151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8161 ;;Total ram usage:       14 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; Hardware stack levels required when called:   16
  8164 ;; This function calls:
  8165 ;;		_I2C_LCD_Clear
  8166 ;;		_I2C_LCD_Putc
  8167 ;;		_I2C_LCD_Puts
  8168 ;;		_I2C_LCD_SetCursor
  8169 ;;		___lldiv
  8170 ;;		___llmod
  8171 ;;		___lwdiv
  8172 ;;		___lwmod
  8173 ;;		_display_port
  8174 ;;		_display_time_1602
  8175 ;;		_my_utoa
  8176 ;;		_my_utoa32
  8177 ;; This function is called by:
  8178 ;;		_normal_loop
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text16
  8183  0114F2                     __ptext16:
  8184                           	opt stack 0
  8185  0114F2                     _display_LCD:
  8186                           	opt stack 13
  8187                           
  8188                           ;tasks.h: 244: I2C_LCD_Clear();
  8189                           
  8190                           ;incstack = 0
  8191  0114F2  ECDD  F0B9         	call	_I2C_LCD_Clear	;wreg free
  8192                           
  8193                           ;tasks.h: 245: switch (pres_print_item) {
  8194  0114F6  D278               	goto	l11774
  8195  0114F8                     l11698:
  8196                           
  8197                           ;tasks.h: 247: I2C_LCD_SetCursor(0, 0);
  8198  0114F8  0E00               	movlw	0
  8199  0114FA  0100               	movlb	0	; () banked
  8200  0114FC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8201  0114FE  0E00               	movlw	0
  8202  011500  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8203                           
  8204                           ;tasks.h: 248: I2C_LCD_Puts(display_char[0]);
  8205  011504  0E52               	movlw	low _display_char
  8206  011506  0100               	movlb	0	; () banked
  8207  011508  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8208  01150A  0E02               	movlw	high _display_char
  8209  01150C  0100               	movlb	0	; () banked
  8210  01150E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8211  011510  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8212                           
  8213                           ;tasks.h: 249: I2C_LCD_SetCursor(0, 1);
  8214  011514  0E01               	movlw	1
  8215  011516  0100               	movlb	0	; () banked
  8216  011518  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8217  01151A  0E00               	movlw	0
  8218  01151C  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8219                           
  8220                           ;tasks.h: 250: I2C_LCD_Puts(display_char[1]);
  8221  011520  0E66               	movlw	low (_display_char+20)
  8222  011522  0100               	movlb	0	; () banked
  8223  011524  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8224  011526  0E02               	movlw	high (_display_char+20)
  8225  011528  0100               	movlb	0	; () banked
  8226  01152A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8227  01152C  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8228                           
  8229                           ;tasks.h: 251: break;
  8230  011530  0012               	return	
  8231  011532                     l11704:
  8232                           
  8233                           ;tasks.h: 253: display_time_1602(&caltime_now, &epoch_now);
  8234  011532  0E7E               	movlw	low _caltime_now
  8235  011534  0100               	movlb	0	; () banked
  8236  011536  6F97               	movwf	display_time_1602@ct& (0+255),b
  8237  011538  0E01               	movlw	high _caltime_now
  8238  01153A  0100               	movlb	0	; () banked
  8239  01153C  6F98               	movwf	(display_time_1602@ct+1)& (0+255),b
  8240  01153E  0EFC               	movlw	low _epoch_now
  8241  011540  0100               	movlb	0	; () banked
  8242  011542  6F99               	movwf	display_time_1602@ep& (0+255),b
  8243  011544  0E00               	movlw	high _epoch_now
  8244  011546  0100               	movlb	0	; () banked
  8245  011548  6F9A               	movwf	(display_time_1602@ep+1)& (0+255),b
  8246  01154A  EC44  F09D         	call	_display_time_1602	;wreg free
  8247                           
  8248                           ;tasks.h: 254: break;
  8249  01154E  0012               	return	
  8250  011550                     l11706:
  8251                           
  8252                           ;tasks.h: 258: display_port();
  8253  011550  EC59  F0AA         	call	_display_port	;wreg free
  8254                           
  8255                           ;tasks.h: 259: I2C_LCD_SetCursor(0, 1);
  8256  011554  0E01               	movlw	1
  8257  011556  0100               	movlb	0	; () banked
  8258  011558  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8259  01155A  0E00               	movlw	0
  8260  01155C  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8261                           
  8262                           ;tasks.h: 260: I2C_LCD_Putc((port[print_port].current % 10000) / 1000 + '0');
  8263  011560  0E27               	movlw	39
  8264  011562  0100               	movlb	0	; () banked
  8265  011564  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8266  011566  0E10               	movlw	16
  8267  011568  6F62               	movwf	___lwmod@divisor& (0+255),b
  8268  01156A  0100               	movlb	0	; () banked
  8269  01156C  51FA               	movf	_print_port& (0+255),w,b
  8270  01156E  0D17               	mullw	23
  8271  011570  0E06               	movlw	6
  8272  011572  26F3               	addwf	prodl,f,c
  8273  011574  0E00               	movlw	0
  8274  011576  22F4               	addwfc	prodh,f,c
  8275  011578  0E29               	movlw	low _port
  8276  01157A  24F3               	addwf	prodl,w,c
  8277  01157C  6ED9               	movwf	fsr2l,c
  8278  01157E  0E01               	movlw	high _port
  8279  011580  20F4               	addwfc	prodh,w,c
  8280  011582  6EDA               	movwf	fsr2h,c
  8281  011584  CFDE F060          	movff	postinc2,___lwmod@dividend
  8282  011588  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8283  01158C  ECDE  F0B4         	call	___lwmod	;wreg free
  8284  011590  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  8285  011594  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  8286  011598  0E03               	movlw	3
  8287  01159A  0100               	movlb	0	; () banked
  8288  01159C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8289  01159E  0EE8               	movlw	232
  8290  0115A0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  8291  0115A2  ECED  F0B2         	call	___lwdiv	;wreg free
  8292  0115A6  0100               	movlb	0	; () banked
  8293  0115A8  517C               	movf	?___lwdiv& (0+255),w,b
  8294  0115AA  0F30               	addlw	48
  8295  0115AC  EC6D  F0B7         	call	_I2C_LCD_Putc
  8296                           
  8297                           ;tasks.h: 261: I2C_LCD_Putc('.');
  8298  0115B0  0E2E               	movlw	46
  8299  0115B2  EC6D  F0B7         	call	_I2C_LCD_Putc
  8300                           
  8301                           ;tasks.h: 262: I2C_LCD_Putc((port[print_port].current % 1000) / 100 + '0');
  8302  0115B6  0E03               	movlw	3
  8303  0115B8  0100               	movlb	0	; () banked
  8304  0115BA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8305  0115BC  0EE8               	movlw	232
  8306  0115BE  6F62               	movwf	___lwmod@divisor& (0+255),b
  8307  0115C0  0100               	movlb	0	; () banked
  8308  0115C2  51FA               	movf	_print_port& (0+255),w,b
  8309  0115C4  0D17               	mullw	23
  8310  0115C6  0E06               	movlw	6
  8311  0115C8  26F3               	addwf	prodl,f,c
  8312  0115CA  0E00               	movlw	0
  8313  0115CC  22F4               	addwfc	prodh,f,c
  8314  0115CE  0E29               	movlw	low _port
  8315  0115D0  24F3               	addwf	prodl,w,c
  8316  0115D2  6ED9               	movwf	fsr2l,c
  8317  0115D4  0E01               	movlw	high _port
  8318  0115D6  20F4               	addwfc	prodh,w,c
  8319  0115D8  6EDA               	movwf	fsr2h,c
  8320  0115DA  CFDE F060          	movff	postinc2,___lwmod@dividend
  8321  0115DE  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8322  0115E2  ECDE  F0B4         	call	___lwmod	;wreg free
  8323  0115E6  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  8324  0115EA  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  8325  0115EE  0E00               	movlw	0
  8326  0115F0  0100               	movlb	0	; () banked
  8327  0115F2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8328  0115F4  0E64               	movlw	100
  8329  0115F6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  8330  0115F8  ECED  F0B2         	call	___lwdiv	;wreg free
  8331  0115FC  0100               	movlb	0	; () banked
  8332  0115FE  517C               	movf	?___lwdiv& (0+255),w,b
  8333  011600  0F30               	addlw	48
  8334  011602  EC6D  F0B7         	call	_I2C_LCD_Putc
  8335                           
  8336                           ;tasks.h: 263: I2C_LCD_Putc((port[print_port].current % 100) / 10 + '0');
  8337  011606  0E00               	movlw	0
  8338  011608  0100               	movlb	0	; () banked
  8339  01160A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8340  01160C  0E64               	movlw	100
  8341  01160E  6F62               	movwf	___lwmod@divisor& (0+255),b
  8342  011610  0100               	movlb	0	; () banked
  8343  011612  51FA               	movf	_print_port& (0+255),w,b
  8344  011614  0D17               	mullw	23
  8345  011616  0E06               	movlw	6
  8346  011618  26F3               	addwf	prodl,f,c
  8347  01161A  0E00               	movlw	0
  8348  01161C  22F4               	addwfc	prodh,f,c
  8349  01161E  0E29               	movlw	low _port
  8350  011620  24F3               	addwf	prodl,w,c
  8351  011622  6ED9               	movwf	fsr2l,c
  8352  011624  0E01               	movlw	high _port
  8353  011626  20F4               	addwfc	prodh,w,c
  8354  011628  6EDA               	movwf	fsr2h,c
  8355  01162A  CFDE F060          	movff	postinc2,___lwmod@dividend
  8356  01162E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8357  011632  ECDE  F0B4         	call	___lwmod	;wreg free
  8358  011636  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  8359  01163A  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  8360  01163E  0E00               	movlw	0
  8361  011640  0100               	movlb	0	; () banked
  8362  011642  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8363  011644  0E0A               	movlw	10
  8364  011646  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  8365  011648  ECED  F0B2         	call	___lwdiv	;wreg free
  8366  01164C  0100               	movlb	0	; () banked
  8367  01164E  517C               	movf	?___lwdiv& (0+255),w,b
  8368  011650  0F30               	addlw	48
  8369  011652  EC6D  F0B7         	call	_I2C_LCD_Putc
  8370                           
  8371                           ;tasks.h: 264: I2C_LCD_Putc((port[print_port].current % 10) / 1 + '0');
  8372  011656  0100               	movlb	0	; () banked
  8373  011658  51FA               	movf	_print_port& (0+255),w,b
  8374  01165A  0D17               	mullw	23
  8375  01165C  0E06               	movlw	6
  8376  01165E  26F3               	addwf	prodl,f,c
  8377  011660  0E00               	movlw	0
  8378  011662  22F4               	addwfc	prodh,f,c
  8379  011664  0E29               	movlw	low _port
  8380  011666  24F3               	addwf	prodl,w,c
  8381  011668  6ED9               	movwf	fsr2l,c
  8382  01166A  0E01               	movlw	high _port
  8383  01166C  20F4               	addwfc	prodh,w,c
  8384  01166E  6EDA               	movwf	fsr2h,c
  8385  011670  CFDE F060          	movff	postinc2,___lwmod@dividend
  8386  011674  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8387  011678  0E00               	movlw	0
  8388  01167A  0100               	movlb	0	; () banked
  8389  01167C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8390  01167E  0E0A               	movlw	10
  8391  011680  6F62               	movwf	___lwmod@divisor& (0+255),b
  8392  011682  ECDE  F0B4         	call	___lwmod	;wreg free
  8393  011686  0100               	movlb	0	; () banked
  8394  011688  5160               	movf	?___lwmod& (0+255),w,b
  8395  01168A  0F30               	addlw	48
  8396  01168C  EC6D  F0B7         	call	_I2C_LCD_Putc
  8397                           
  8398                           ;tasks.h: 265: I2C_LCD_Putc('A');
  8399  011690  0E41               	movlw	65
  8400  011692  EC6D  F0B7         	call	_I2C_LCD_Putc
  8401                           
  8402                           ;tasks.h: 266: break;
  8403  011696  0012               	return	
  8404  011698                     l11722:
  8405                           
  8406                           ;tasks.h: 268: display_port();
  8407  011698  EC59  F0AA         	call	_display_port	;wreg free
  8408                           
  8409                           ;tasks.h: 269: I2C_LCD_SetCursor(0, 1);
  8410  01169C  0E01               	movlw	1
  8411  01169E  0100               	movlb	0	; () banked
  8412  0116A0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8413  0116A2  0E00               	movlw	0
  8414  0116A4  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8415                           
  8416                           ;tasks.h: 270: char str[10];
  8417                           ;tasks.h: 271: my_utoa32(str, port[print_port].integrated_current, 7);
  8418  0116A8  0E9C               	movlw	low display_LCD@str
  8419  0116AA  0100               	movlb	0	; () banked
  8420  0116AC  6F76               	movwf	my_utoa32@str& (0+255),b
  8421  0116AE  0E00               	movlw	high display_LCD@str
  8422  0116B0  0100               	movlb	0	; () banked
  8423  0116B2  6F77               	movwf	(my_utoa32@str+1)& (0+255),b
  8424  0116B4  0100               	movlb	0	; () banked
  8425  0116B6  51FA               	movf	_print_port& (0+255),w,b
  8426  0116B8  0D17               	mullw	23
  8427  0116BA  0E0C               	movlw	12
  8428  0116BC  26F3               	addwf	prodl,f,c
  8429  0116BE  0E00               	movlw	0
  8430  0116C0  22F4               	addwfc	prodh,f,c
  8431  0116C2  0E29               	movlw	low _port
  8432  0116C4  24F3               	addwf	prodl,w,c
  8433  0116C6  6ED9               	movwf	fsr2l,c
  8434  0116C8  0E01               	movlw	high _port
  8435  0116CA  20F4               	addwfc	prodh,w,c
  8436  0116CC  6EDA               	movwf	fsr2h,c
  8437  0116CE  CFDE F078          	movff	postinc2,my_utoa32@value
  8438  0116D2  CFDE F079          	movff	postinc2,my_utoa32@value+1
  8439  0116D6  CFDE F07A          	movff	postinc2,my_utoa32@value+2
  8440  0116DA  CFDE F07B          	movff	postinc2,my_utoa32@value+3
  8441  0116DE  0E07               	movlw	7
  8442  0116E0  0100               	movlb	0	; () banked
  8443  0116E2  6F7C               	movwf	my_utoa32@digits& (0+255),b
  8444  0116E4  EC80  F0AB         	call	_my_utoa32	;wreg free
  8445                           
  8446                           ;tasks.h: 272: I2C_LCD_Puts(str);
  8447  0116E8  0E9C               	movlw	low display_LCD@str
  8448  0116EA  0100               	movlb	0	; () banked
  8449  0116EC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8450  0116EE  0E00               	movlw	high display_LCD@str
  8451  0116F0  0100               	movlb	0	; () banked
  8452  0116F2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8453  0116F4  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8454                           
  8455                           ;tasks.h: 273: I2C_LCD_Puts("mAh");
  8456  0116F8  0E0C               	movlw	low (STR_134+22)
  8457  0116FA  0100               	movlb	0	; () banked
  8458  0116FC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8459  0116FE  0EFE               	movlw	high (STR_134+22)
  8460  011700  0100               	movlb	0	; () banked
  8461  011702  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8462  011704  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8463                           
  8464                           ;tasks.h: 274: break;
  8465  011708  0012               	return	
  8466  01170A                     l11732:
  8467                           
  8468                           ;tasks.h: 276: display_port();
  8469  01170A  EC59  F0AA         	call	_display_port	;wreg free
  8470                           
  8471                           ;tasks.h: 277: char str[10];
  8472                           ;tasks.h: 278: I2C_LCD_SetCursor(0, 1);
  8473  01170E  0E01               	movlw	1
  8474  011710  0100               	movlb	0	; () banked
  8475  011712  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8476  011714  0E00               	movlw	0
  8477  011716  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8478                           
  8479                           ;tasks.h: 279: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  8480  01171A  0E10               	movlw	16
  8481  01171C  0100               	movlb	0	; () banked
  8482  01171E  6F64               	movwf	___lldiv@divisor& (0+255),b
  8483  011720  0E0E               	movlw	14
  8484  011722  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8485  011724  0E00               	movlw	0
  8486  011726  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8487  011728  0E00               	movlw	0
  8488  01172A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8489  01172C  0100               	movlb	0	; () banked
  8490  01172E  51FA               	movf	_print_port& (0+255),w,b
  8491  011730  0D17               	mullw	23
  8492  011732  0E10               	movlw	16
  8493  011734  26F3               	addwf	prodl,f,c
  8494  011736  0E00               	movlw	0
  8495  011738  22F4               	addwfc	prodh,f,c
  8496  01173A  0E29               	movlw	low _port
  8497  01173C  24F3               	addwf	prodl,w,c
  8498  01173E  6ED9               	movwf	fsr2l,c
  8499  011740  0E01               	movlw	high _port
  8500  011742  20F4               	addwfc	prodh,w,c
  8501  011744  6EDA               	movwf	fsr2h,c
  8502  011746  CFDE F060          	movff	postinc2,___lldiv@dividend
  8503  01174A  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8504  01174E  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8505  011752  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8506  011756  EC9E  F0AC         	call	___lldiv	;wreg free
  8507  01175A  C060  F0A6         	movff	?___lldiv,_display_LCD$5384
  8508  01175E  C061  F0A7         	movff	?___lldiv+1,_display_LCD$5384+1
  8509  011762  C062  F0A8         	movff	?___lldiv+2,_display_LCD$5384+2
  8510  011766  C063  F0A9         	movff	?___lldiv+3,_display_LCD$5384+3
  8511                           
  8512                           ;tasks.h: 279: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  8513  01176A  0E9C               	movlw	low display_LCD@str
  8514  01176C  0100               	movlb	0	; () banked
  8515  01176E  6F83               	movwf	my_utoa@str& (0+255),b
  8516  011770  0E00               	movlw	high display_LCD@str
  8517  011772  0100               	movlb	0	; () banked
  8518  011774  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8519  011776  C0A6  F060         	movff	_display_LCD$5384,___lldiv@dividend
  8520  01177A  C0A7  F061         	movff	_display_LCD$5384+1,___lldiv@dividend+1
  8521  01177E  C0A8  F062         	movff	_display_LCD$5384+2,___lldiv@dividend+2
  8522  011782  C0A9  F063         	movff	_display_LCD$5384+3,___lldiv@dividend+3
  8523  011786  0E18               	movlw	24
  8524  011788  0100               	movlb	0	; () banked
  8525  01178A  6F64               	movwf	___lldiv@divisor& (0+255),b
  8526  01178C  0E00               	movlw	0
  8527  01178E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8528  011790  0E00               	movlw	0
  8529  011792  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8530  011794  0E00               	movlw	0
  8531  011796  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8532  011798  EC9E  F0AC         	call	___lldiv	;wreg free
  8533  01179C  C060  F085         	movff	?___lldiv,my_utoa@value
  8534  0117A0  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
  8535  0117A4  0E02               	movlw	2
  8536  0117A6  0100               	movlb	0	; () banked
  8537  0117A8  6F87               	movwf	my_utoa@digits& (0+255),b
  8538  0117AA  ECA9  F0B1         	call	_my_utoa	;wreg free
  8539                           
  8540                           ;tasks.h: 280: I2C_LCD_Puts(str);
  8541  0117AE  0E9C               	movlw	low display_LCD@str
  8542  0117B0  0100               	movlb	0	; () banked
  8543  0117B2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8544  0117B4  0E00               	movlw	high display_LCD@str
  8545  0117B6  0100               	movlb	0	; () banked
  8546  0117B8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8547  0117BA  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8548                           
  8549                           ;tasks.h: 281: I2C_LCD_Puts("d ");
  8550  0117BE  0EE3               	movlw	low STR_24
  8551  0117C0  0100               	movlb	0	; () banked
  8552  0117C2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8553  0117C4  0EFF               	movlw	high STR_24
  8554  0117C6  0100               	movlb	0	; () banked
  8555  0117C8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8556  0117CA  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8557                           
  8558                           ;tasks.h: 282: my_utoa(str, (port[print_port].integrated_time / 3600) % 24, 2);
  8559  0117CE  0E9C               	movlw	low display_LCD@str
  8560  0117D0  0100               	movlb	0	; () banked
  8561  0117D2  6F83               	movwf	my_utoa@str& (0+255),b
  8562  0117D4  0E00               	movlw	high display_LCD@str
  8563  0117D6  0100               	movlb	0	; () banked
  8564  0117D8  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8565  0117DA  0E10               	movlw	16
  8566  0117DC  0100               	movlb	0	; () banked
  8567  0117DE  6F64               	movwf	___lldiv@divisor& (0+255),b
  8568  0117E0  0E0E               	movlw	14
  8569  0117E2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8570  0117E4  0E00               	movlw	0
  8571  0117E6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8572  0117E8  0E00               	movlw	0
  8573  0117EA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8574  0117EC  0100               	movlb	0	; () banked
  8575  0117EE  51FA               	movf	_print_port& (0+255),w,b
  8576  0117F0  0D17               	mullw	23
  8577  0117F2  0E10               	movlw	16
  8578  0117F4  26F3               	addwf	prodl,f,c
  8579  0117F6  0E00               	movlw	0
  8580  0117F8  22F4               	addwfc	prodh,f,c
  8581  0117FA  0E29               	movlw	low _port
  8582  0117FC  24F3               	addwf	prodl,w,c
  8583  0117FE  6ED9               	movwf	fsr2l,c
  8584  011800  0E01               	movlw	high _port
  8585  011802  20F4               	addwfc	prodh,w,c
  8586  011804  6EDA               	movwf	fsr2h,c
  8587  011806  CFDE F060          	movff	postinc2,___lldiv@dividend
  8588  01180A  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8589  01180E  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8590  011812  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8591  011816  EC9E  F0AC         	call	___lldiv	;wreg free
  8592  01181A  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8593  01181E  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8594  011822  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8595  011826  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8596  01182A  0E18               	movlw	24
  8597  01182C  0100               	movlb	0	; () banked
  8598  01182E  6F71               	movwf	___llmod@divisor& (0+255),b
  8599  011830  0E00               	movlw	0
  8600  011832  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8601  011834  0E00               	movlw	0
  8602  011836  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8603  011838  0E00               	movlw	0
  8604  01183A  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8605  01183C  ECA6  F0AF         	call	___llmod	;wreg free
  8606  011840  C06D  F085         	movff	?___llmod,my_utoa@value
  8607  011844  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  8608  011848  0E02               	movlw	2
  8609  01184A  0100               	movlb	0	; () banked
  8610  01184C  6F87               	movwf	my_utoa@digits& (0+255),b
  8611  01184E  ECA9  F0B1         	call	_my_utoa	;wreg free
  8612                           
  8613                           ;tasks.h: 283: I2C_LCD_Puts(str);
  8614  011852  0E9C               	movlw	low display_LCD@str
  8615  011854  0100               	movlb	0	; () banked
  8616  011856  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8617  011858  0E00               	movlw	high display_LCD@str
  8618  01185A  0100               	movlb	0	; () banked
  8619  01185C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8620  01185E  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8621                           
  8622                           ;tasks.h: 284: I2C_LCD_Puts("h ");
  8623  011862  0EE6               	movlw	low STR_25
  8624  011864  0100               	movlb	0	; () banked
  8625  011866  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8626  011868  0EFF               	movlw	high STR_25
  8627  01186A  0100               	movlb	0	; () banked
  8628  01186C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8629  01186E  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8630                           
  8631                           ;tasks.h: 285: my_utoa(str, (port[print_port].integrated_time / 60) % 60, 2);
  8632  011872  0E9C               	movlw	low display_LCD@str
  8633  011874  0100               	movlb	0	; () banked
  8634  011876  6F83               	movwf	my_utoa@str& (0+255),b
  8635  011878  0E00               	movlw	high display_LCD@str
  8636  01187A  0100               	movlb	0	; () banked
  8637  01187C  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8638  01187E  0E3C               	movlw	60
  8639  011880  0100               	movlb	0	; () banked
  8640  011882  6F64               	movwf	___lldiv@divisor& (0+255),b
  8641  011884  0E00               	movlw	0
  8642  011886  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8643  011888  0E00               	movlw	0
  8644  01188A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8645  01188C  0E00               	movlw	0
  8646  01188E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8647  011890  0100               	movlb	0	; () banked
  8648  011892  51FA               	movf	_print_port& (0+255),w,b
  8649  011894  0D17               	mullw	23
  8650  011896  0E10               	movlw	16
  8651  011898  26F3               	addwf	prodl,f,c
  8652  01189A  0E00               	movlw	0
  8653  01189C  22F4               	addwfc	prodh,f,c
  8654  01189E  0E29               	movlw	low _port
  8655  0118A0  24F3               	addwf	prodl,w,c
  8656  0118A2  6ED9               	movwf	fsr2l,c
  8657  0118A4  0E01               	movlw	high _port
  8658  0118A6  20F4               	addwfc	prodh,w,c
  8659  0118A8  6EDA               	movwf	fsr2h,c
  8660  0118AA  CFDE F060          	movff	postinc2,___lldiv@dividend
  8661  0118AE  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8662  0118B2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8663  0118B6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8664  0118BA  EC9E  F0AC         	call	___lldiv	;wreg free
  8665  0118BE  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8666  0118C2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8667  0118C6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8668  0118CA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8669  0118CE  0E3C               	movlw	60
  8670  0118D0  0100               	movlb	0	; () banked
  8671  0118D2  6F71               	movwf	___llmod@divisor& (0+255),b
  8672  0118D4  0E00               	movlw	0
  8673  0118D6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8674  0118D8  0E00               	movlw	0
  8675  0118DA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8676  0118DC  0E00               	movlw	0
  8677  0118DE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8678  0118E0  ECA6  F0AF         	call	___llmod	;wreg free
  8679  0118E4  C06D  F085         	movff	?___llmod,my_utoa@value
  8680  0118E8  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  8681  0118EC  0E02               	movlw	2
  8682  0118EE  0100               	movlb	0	; () banked
  8683  0118F0  6F87               	movwf	my_utoa@digits& (0+255),b
  8684  0118F2  ECA9  F0B1         	call	_my_utoa	;wreg free
  8685                           
  8686                           ;tasks.h: 286: I2C_LCD_Puts(str);
  8687  0118F6  0E9C               	movlw	low display_LCD@str
  8688  0118F8  0100               	movlb	0	; () banked
  8689  0118FA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8690  0118FC  0E00               	movlw	high display_LCD@str
  8691  0118FE  0100               	movlb	0	; () banked
  8692  011900  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8693  011902  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8694                           
  8695                           ;tasks.h: 287: I2C_LCD_Puts("m ");
  8696  011906  0EE9               	movlw	low STR_26
  8697  011908  0100               	movlb	0	; () banked
  8698  01190A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8699  01190C  0EFF               	movlw	high STR_26
  8700  01190E  0100               	movlb	0	; () banked
  8701  011910  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8702  011912  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8703                           
  8704                           ;tasks.h: 288: my_utoa(str, port[print_port].integrated_time % 60, 2);
  8705  011916  0E9C               	movlw	low display_LCD@str
  8706  011918  0100               	movlb	0	; () banked
  8707  01191A  6F83               	movwf	my_utoa@str& (0+255),b
  8708  01191C  0E00               	movlw	high display_LCD@str
  8709  01191E  0100               	movlb	0	; () banked
  8710  011920  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8711  011922  0100               	movlb	0	; () banked
  8712  011924  51FA               	movf	_print_port& (0+255),w,b
  8713  011926  0D17               	mullw	23
  8714  011928  0E10               	movlw	16
  8715  01192A  26F3               	addwf	prodl,f,c
  8716  01192C  0E00               	movlw	0
  8717  01192E  22F4               	addwfc	prodh,f,c
  8718  011930  0E29               	movlw	low _port
  8719  011932  24F3               	addwf	prodl,w,c
  8720  011934  6ED9               	movwf	fsr2l,c
  8721  011936  0E01               	movlw	high _port
  8722  011938  20F4               	addwfc	prodh,w,c
  8723  01193A  6EDA               	movwf	fsr2h,c
  8724  01193C  CFDE F06D          	movff	postinc2,___llmod@dividend
  8725  011940  CFDE F06E          	movff	postinc2,___llmod@dividend+1
  8726  011944  CFDE F06F          	movff	postinc2,___llmod@dividend+2
  8727  011948  CFDE F070          	movff	postinc2,___llmod@dividend+3
  8728  01194C  0E3C               	movlw	60
  8729  01194E  0100               	movlb	0	; () banked
  8730  011950  6F71               	movwf	___llmod@divisor& (0+255),b
  8731  011952  0E00               	movlw	0
  8732  011954  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8733  011956  0E00               	movlw	0
  8734  011958  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8735  01195A  0E00               	movlw	0
  8736  01195C  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8737  01195E  ECA6  F0AF         	call	___llmod	;wreg free
  8738  011962  C06D  F085         	movff	?___llmod,my_utoa@value
  8739  011966  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  8740  01196A  0E02               	movlw	2
  8741  01196C  0100               	movlb	0	; () banked
  8742  01196E  6F87               	movwf	my_utoa@digits& (0+255),b
  8743  011970  ECA9  F0B1         	call	_my_utoa	;wreg free
  8744                           
  8745                           ;tasks.h: 289: I2C_LCD_Puts(str);
  8746  011974  0E9C               	movlw	low display_LCD@str
  8747  011976  0100               	movlb	0	; () banked
  8748  011978  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8749  01197A  0E00               	movlw	high display_LCD@str
  8750  01197C  0100               	movlb	0	; () banked
  8751  01197E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8752  011980  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8753                           
  8754                           ;tasks.h: 290: I2C_LCD_Puts("s");
  8755  011984  0E5C               	movlw	low (STR_93+7)
  8756  011986  0100               	movlb	0	; () banked
  8757  011988  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8758  01198A  0EFF               	movlw	high (STR_93+7)
  8759  01198C  0100               	movlb	0	; () banked
  8760  01198E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8761  011990  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8762                           
  8763                           ;tasks.h: 292: }
  8764                           
  8765                           ;tasks.h: 291: break;
  8766  011994  0012               	return	
  8767  011996                     l11764:
  8768  011996  0100               	movlb	0	; () banked
  8769  011998  51F9               	movf	_print_data& (0+255),w,b
  8770                           
  8771                           ; Switch size 1, requested type "space"
  8772                           ; Number of cases is 3, Range of values is 0 to 2
  8773                           ; switch strategies available:
  8774                           ; Name         Instructions Cycles
  8775                           ; simple_byte           10     6 (average)
  8776                           ;	Chosen strategy is simple_byte
  8777  01199A  0A00               	xorlw	0	; case 0
  8778  01199C  B4D8               	btfsc	status,2,c
  8779  01199E  D5D8               	goto	l11706
  8780  0119A0  0A01               	xorlw	1	; case 1
  8781  0119A2  B4D8               	btfsc	status,2,c
  8782  0119A4  D679               	goto	l11722
  8783  0119A6  0A03               	xorlw	3	; case 2
  8784  0119A8  A4D8               	btfss	status,2,c
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;tasks.h: 293: break;
  8788  0119AA  0012               	return	
  8789  0119AC  D6AE               	goto	l11732
  8790  0119AE                     l11766:
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;tasks.h: 295: I2C_LCD_SetCursor(0, 0);
  8794  0119AE  0E00               	movlw	0
  8795  0119B0  0100               	movlb	0	; () banked
  8796  0119B2  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8797  0119B4  0E00               	movlw	0
  8798  0119B6  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8799                           
  8800                           ;tasks.h: 296: I2C_LCD_Puts(display_char[0]);
  8801  0119BA  0E52               	movlw	low _display_char
  8802  0119BC  0100               	movlb	0	; () banked
  8803  0119BE  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8804  0119C0  0E02               	movlw	high _display_char
  8805  0119C2  0100               	movlb	0	; () banked
  8806  0119C4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8807  0119C6  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8808                           
  8809                           ;tasks.h: 297: I2C_LCD_SetCursor(0, 1);
  8810  0119CA  0E01               	movlw	1
  8811  0119CC  0100               	movlb	0	; () banked
  8812  0119CE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8813  0119D0  0E00               	movlw	0
  8814  0119D2  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  8815                           
  8816                           ;tasks.h: 298: I2C_LCD_Puts(display_char[1]);
  8817  0119D6  0E66               	movlw	low (_display_char+20)
  8818  0119D8  0100               	movlb	0	; () banked
  8819  0119DA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8820  0119DC  0E02               	movlw	high (_display_char+20)
  8821  0119DE  0100               	movlb	0	; () banked
  8822  0119E0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8823  0119E2  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8824                           
  8825                           ;tasks.h: 300: }
  8826                           
  8827                           ;tasks.h: 299: break;
  8828  0119E6  0012               	return	
  8829  0119E8                     l11774:
  8830  0119E8  0100               	movlb	0	; () banked
  8831  0119EA  51F8               	movf	_pres_print_item& (0+255),w,b
  8832                           
  8833                           ; Switch size 1, requested type "space"
  8834                           ; Number of cases is 4, Range of values is 0 to 3
  8835                           ; switch strategies available:
  8836                           ; Name         Instructions Cycles
  8837                           ; simple_byte           13     7 (average)
  8838                           ;	Chosen strategy is simple_byte
  8839  0119EC  0A00               	xorlw	0	; case 0
  8840  0119EE  B4D8               	btfsc	status,2,c
  8841  0119F0  D583               	goto	l11698
  8842  0119F2  0A01               	xorlw	1	; case 1
  8843  0119F4  B4D8               	btfsc	status,2,c
  8844  0119F6  D59D               	goto	l11704
  8845  0119F8  0A03               	xorlw	3	; case 2
  8846  0119FA  B4D8               	btfsc	status,2,c
  8847  0119FC  D7CC               	goto	l11764
  8848  0119FE  0A01               	xorlw	1	; case 3
  8849  011A00  A4D8               	btfss	status,2,c
  8850  011A02  0012               	return	
  8851  011A04  D7D4               	goto	l11766
  8852  011A06                     __end_of_display_LCD:
  8853                           	opt stack 0
  8854                           tblptru	equ	0xFF8
  8855                           tblptrh	equ	0xFF7
  8856                           tblptrl	equ	0xFF6
  8857                           tablat	equ	0xFF5
  8858                           prodh	equ	0xFF4
  8859                           prodl	equ	0xFF3
  8860                           intcon	equ	0xFF2
  8861                           postinc0	equ	0xFEE
  8862                           wreg	equ	0xFE8
  8863                           indf1	equ	0xFE7
  8864                           postdec1	equ	0xFE5
  8865                           fsr1h	equ	0xFE2
  8866                           fsr1l	equ	0xFE1
  8867                           indf2	equ	0xFDF
  8868                           postinc2	equ	0xFDE
  8869                           postdec2	equ	0xFDD
  8870                           fsr2h	equ	0xFDA
  8871                           fsr2l	equ	0xFD9
  8872                           status	equ	0xFD8
  8873                           
  8874 ;; *************** function _my_utoa32 *****************
  8875 ;; Defined at:
  8876 ;;		line 26 in file "../My_header\My_stdlib.h"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  str             2   22[BANK0 ] PTR unsigned char 
  8879 ;;		 -> display_LCD@str(10), 
  8880 ;;  value           4   24[BANK0 ] unsigned long 
  8881 ;;  digits          1   28[BANK0 ] unsigned char 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  v               4   30[BANK0 ] unsigned long 
  8884 ;;  d               1   29[BANK0 ] unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;		None               void
  8887 ;; Registers used:
  8888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8894 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8895 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8897 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8898 ;;Total ram usage:       12 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:   12
  8901 ;; This function calls:
  8902 ;;		___lldiv
  8903 ;;		___llmod
  8904 ;; This function is called by:
  8905 ;;		_display_LCD
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text17
  8910  015700                     __ptext17:
  8911                           	opt stack 0
  8912  015700                     _my_utoa32:
  8913                           	opt stack 16
  8914                           
  8915                           ;My_header\My_stdlib.h: 27: uint32_t v;
  8916                           ;My_header\My_stdlib.h: 28: uint8_t d;
  8917                           ;My_header\My_stdlib.h: 29: while (digits--) {
  8918                           
  8919                           ;incstack = 0
  8920  015700  D052               	goto	l11002
  8921  015702                     l1050:
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;My_header\My_stdlib.h: 30: v = (uint32_t) value;
  8925  015702  C078  F07E         	movff	my_utoa32@value,my_utoa32@v
  8926  015706  C079  F07F         	movff	my_utoa32@value+1,my_utoa32@v+1
  8927  01570A  C07A  F080         	movff	my_utoa32@value+2,my_utoa32@v+2
  8928  01570E  C07B  F081         	movff	my_utoa32@value+3,my_utoa32@v+3
  8929                           
  8930                           ;My_header\My_stdlib.h: 31: d = digits;
  8931  015712  C07C  F07D         	movff	my_utoa32@digits,my_utoa32@d
  8932                           
  8933                           ;My_header\My_stdlib.h: 32: while (d--) {
  8934  015716  D01B               	goto	l10994
  8935  015718                     l10992:
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;My_header\My_stdlib.h: 33: v /= 10;
  8939  015718  C07E  F060         	movff	my_utoa32@v,___lldiv@dividend
  8940  01571C  C07F  F061         	movff	my_utoa32@v+1,___lldiv@dividend+1
  8941  015720  C080  F062         	movff	my_utoa32@v+2,___lldiv@dividend+2
  8942  015724  C081  F063         	movff	my_utoa32@v+3,___lldiv@dividend+3
  8943  015728  0E0A               	movlw	10
  8944  01572A  0100               	movlb	0	; () banked
  8945  01572C  6F64               	movwf	___lldiv@divisor& (0+255),b
  8946  01572E  0E00               	movlw	0
  8947  015730  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8948  015732  0E00               	movlw	0
  8949  015734  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8950  015736  0E00               	movlw	0
  8951  015738  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8952  01573A  EC9E  F0AC         	call	___lldiv	;wreg free
  8953  01573E  C060  F07E         	movff	?___lldiv,my_utoa32@v
  8954  015742  C061  F07F         	movff	?___lldiv+1,my_utoa32@v+1
  8955  015746  C062  F080         	movff	?___lldiv+2,my_utoa32@v+2
  8956  01574A  C063  F081         	movff	?___lldiv+3,my_utoa32@v+3
  8957  01574E                     l10994:
  8958  01574E  0100               	movlb	0	; () banked
  8959  015750  077D               	decf	my_utoa32@d& (0+255),f,b
  8960  015752  0100               	movlb	0	; () banked
  8961  015754  297D               	incf	my_utoa32@d& (0+255),w,b
  8962  015756  A4D8               	btfss	status,2,c
  8963  015758  D7DF               	goto	l10992
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;My_header\My_stdlib.h: 34: }
  8967                           ;My_header\My_stdlib.h: 35: v %= 10;
  8968                           
  8969                           ; BSR set to: 0
  8970  01575A  C07E  F06D         	movff	my_utoa32@v,___llmod@dividend
  8971  01575E  C07F  F06E         	movff	my_utoa32@v+1,___llmod@dividend+1
  8972  015762  C080  F06F         	movff	my_utoa32@v+2,___llmod@dividend+2
  8973  015766  C081  F070         	movff	my_utoa32@v+3,___llmod@dividend+3
  8974  01576A  0E0A               	movlw	10
  8975  01576C  0100               	movlb	0	; () banked
  8976  01576E  6F71               	movwf	___llmod@divisor& (0+255),b
  8977  015770  0E00               	movlw	0
  8978  015772  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8979  015774  0E00               	movlw	0
  8980  015776  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8981  015778  0E00               	movlw	0
  8982  01577A  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8983  01577C  ECA6  F0AF         	call	___llmod	;wreg free
  8984  015780  C06D  F07E         	movff	?___llmod,my_utoa32@v
  8985  015784  C06E  F07F         	movff	?___llmod+1,my_utoa32@v+1
  8986  015788  C06F  F080         	movff	?___llmod+2,my_utoa32@v+2
  8987  01578C  C070  F081         	movff	?___llmod+3,my_utoa32@v+3
  8988                           
  8989                           ;My_header\My_stdlib.h: 36: *str++ = '0' + v;
  8990  015790  0100               	movlb	0	; () banked
  8991  015792  517E               	movf	my_utoa32@v& (0+255),w,b
  8992  015794  0F30               	addlw	48
  8993  015796  C076  FFD9         	movff	my_utoa32@str,fsr2l
  8994  01579A  C077  FFDA         	movff	my_utoa32@str+1,fsr2h
  8995  01579E  6EDF               	movwf	indf2,c
  8996                           
  8997                           ; BSR set to: 0
  8998  0157A0  0100               	movlb	0	; () banked
  8999  0157A2  4B76               	infsnz	my_utoa32@str& (0+255),f,b
  9000  0157A4  2B77               	incf	(my_utoa32@str+1)& (0+255),f,b
  9001  0157A6                     l11002:
  9002  0157A6  0100               	movlb	0	; () banked
  9003  0157A8  077C               	decf	my_utoa32@digits& (0+255),f,b
  9004  0157AA  0100               	movlb	0	; () banked
  9005  0157AC  297C               	incf	my_utoa32@digits& (0+255),w,b
  9006  0157AE  A4D8               	btfss	status,2,c
  9007  0157B0  D7A8               	goto	l1050
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;My_header\My_stdlib.h: 37: }
  9011                           ;My_header\My_stdlib.h: 38: *str = '\0';
  9012                           
  9013                           ; BSR set to: 0
  9014  0157B2  C076  FFD9         	movff	my_utoa32@str,fsr2l
  9015  0157B6  C077  FFDA         	movff	my_utoa32@str+1,fsr2h
  9016  0157BA  0E00               	movlw	0
  9017  0157BC  6EDF               	movwf	indf2,c
  9018                           
  9019                           ; BSR set to: 0
  9020  0157BE  0012               	return		;funcret
  9021  0157C0                     __end_of_my_utoa32:
  9022                           	opt stack 0
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           prodh	equ	0xFF4
  9028                           prodl	equ	0xFF3
  9029                           intcon	equ	0xFF2
  9030                           postinc0	equ	0xFEE
  9031                           wreg	equ	0xFE8
  9032                           indf1	equ	0xFE7
  9033                           postdec1	equ	0xFE5
  9034                           fsr1h	equ	0xFE2
  9035                           fsr1l	equ	0xFE1
  9036                           indf2	equ	0xFDF
  9037                           postinc2	equ	0xFDE
  9038                           postdec2	equ	0xFDD
  9039                           fsr2h	equ	0xFDA
  9040                           fsr2l	equ	0xFD9
  9041                           status	equ	0xFD8
  9042                           
  9043 ;; *************** function _display_time_1602 *****************
  9044 ;; Defined at:
  9045 ;;		line 278 in file "../My_header\My_RTCC.h"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  ct              2   55[BANK0 ] PTR struct .
  9048 ;;		 -> caltime_now(7), 
  9049 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  9050 ;;		 -> epoch_now(4), 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;		None               void
  9055 ;; Registers used:
  9056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;Total ram usage:        5 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:   15
  9069 ;; This function calls:
  9070 ;;		_I2C_LCD_Putc
  9071 ;;		_I2C_LCD_Puts
  9072 ;;		_I2C_LCD_SetCursor
  9073 ;;		_RTCC_from_RTCC
  9074 ;;		_display_dec
  9075 ;; This function is called by:
  9076 ;;		_display_LCD
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text18
  9081  013A88                     __ptext18:
  9082                           	opt stack 0
  9083  013A88                     _display_time_1602:
  9084                           	opt stack 13
  9085                           
  9086                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;incstack = 0
  9090  013A88  C097  F088         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  9091  013A8C  C098  F089         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  9092  013A90  C099  F08A         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  9093  013A94  C09A  F08B         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  9094  013A98  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
  9095                           
  9096                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  9097  013A9C  0E00               	movlw	0
  9098  013A9E  0100               	movlb	0	; () banked
  9099  013AA0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9100  013AA2  0E00               	movlw	0
  9101  013AA4  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  9102                           
  9103                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  9104  013AA8  0E00               	movlw	0
  9105  013AAA  BBF6               	btfsc	_edit_flag& (0+255),5,b
  9106  013AAC  0E01               	movlw	1
  9107  013AAE  0100               	movlb	0	; () banked
  9108  013AB0  6F8B               	movwf	display_dec@edit& (0+255),b
  9109  013AB2  0E14               	movlw	20
  9110  013AB4  EC6B  F0B5         	call	_display_dec
  9111                           
  9112                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  9113  013AB8  0E00               	movlw	0
  9114  013ABA  BBF6               	btfsc	_edit_flag& (0+255),5,b
  9115  013ABC  0E01               	movlw	1
  9116  013ABE  0100               	movlb	0	; () banked
  9117  013AC0  6F8B               	movwf	display_dec@edit& (0+255),b
  9118  013AC2  0100               	movlb	0	; () banked
  9119  013AC4  EE20 F006          	lfsr	2,6
  9120  013AC8  5197               	movf	display_time_1602@ct& (0+255),w,b
  9121  013ACA  26D9               	addwf	fsr2l,f,c
  9122  013ACC  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9123  013ACE  22DA               	addwfc	fsr2h,f,c
  9124  013AD0  50DF               	movf	indf2,w,c
  9125  013AD2  EC6B  F0B5         	call	_display_dec
  9126                           
  9127                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  9128  013AD6  0E2F               	movlw	47
  9129  013AD8  EC6D  F0B7         	call	_I2C_LCD_Putc
  9130                           
  9131                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  9132  013ADC  0E00               	movlw	0
  9133  013ADE  B9F6               	btfsc	_edit_flag& (0+255),4,b
  9134  013AE0  0E01               	movlw	1
  9135  013AE2  0100               	movlb	0	; () banked
  9136  013AE4  6F8B               	movwf	display_dec@edit& (0+255),b
  9137  013AE6  0100               	movlb	0	; () banked
  9138  013AE8  EE20 F005          	lfsr	2,5
  9139  013AEC  5197               	movf	display_time_1602@ct& (0+255),w,b
  9140  013AEE  26D9               	addwf	fsr2l,f,c
  9141  013AF0  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9142  013AF2  22DA               	addwfc	fsr2h,f,c
  9143  013AF4  50DF               	movf	indf2,w,c
  9144  013AF6  EC6B  F0B5         	call	_display_dec
  9145                           
  9146                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  9147  013AFA  0E2F               	movlw	47
  9148  013AFC  EC6D  F0B7         	call	_I2C_LCD_Putc
  9149                           
  9150                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  9151  013B00  0E00               	movlw	0
  9152  013B02  B7F6               	btfsc	_edit_flag& (0+255),3,b
  9153  013B04  0E01               	movlw	1
  9154  013B06  0100               	movlb	0	; () banked
  9155  013B08  6F8B               	movwf	display_dec@edit& (0+255),b
  9156  013B0A  0100               	movlb	0	; () banked
  9157  013B0C  EE20 F004          	lfsr	2,4
  9158  013B10  5197               	movf	display_time_1602@ct& (0+255),w,b
  9159  013B12  26D9               	addwf	fsr2l,f,c
  9160  013B14  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9161  013B16  22DA               	addwfc	fsr2h,f,c
  9162  013B18  50DF               	movf	indf2,w,c
  9163  013B1A  EC6B  F0B5         	call	_display_dec
  9164                           
  9165                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  9166  013B1E  0E28               	movlw	40
  9167  013B20  EC6D  F0B7         	call	_I2C_LCD_Putc
  9168                           
  9169                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  9170  013B24  0100               	movlb	0	; () banked
  9171  013B26  EE20 F003          	lfsr	2,3
  9172  013B2A  5197               	movf	display_time_1602@ct& (0+255),w,b
  9173  013B2C  26D9               	addwf	fsr2l,f,c
  9174  013B2E  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9175  013B30  22DA               	addwfc	fsr2h,f,c
  9176  013B32  50DF               	movf	indf2,w,c
  9177  013B34  0100               	movlb	0	; () banked
  9178  013B36  6F9B               	movwf	??_display_time_1602& (0+255),b
  9179  013B38  0100               	movlb	0	; () banked
  9180  013B3A  519B               	movf	??_display_time_1602& (0+255),w,b
  9181  013B3C  0D04               	mullw	4
  9182  013B3E  0EB2               	movlw	low _weekday_3char
  9183  013B40  24F3               	addwf	prodl,w,c
  9184  013B42  0100               	movlb	0	; () banked
  9185  013B44  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9186  013B46  0EFA               	movlw	high _weekday_3char
  9187  013B48  20F4               	addwfc	prodh,w,c
  9188  013B4A  0100               	movlb	0	; () banked
  9189  013B4C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9190  013B4E  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9191                           
  9192                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  9193  013B52  0E29               	movlw	41
  9194  013B54  EC6D  F0B7         	call	_I2C_LCD_Putc
  9195                           
  9196                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  9197  013B58  0E01               	movlw	1
  9198  013B5A  0100               	movlb	0	; () banked
  9199  013B5C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9200  013B5E  0E08               	movlw	8
  9201  013B60  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  9202                           
  9203                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  9204  013B64  0E00               	movlw	0
  9205  013B66  B5F6               	btfsc	_edit_flag& (0+255),2,b
  9206  013B68  0E01               	movlw	1
  9207  013B6A  0100               	movlb	0	; () banked
  9208  013B6C  6F8B               	movwf	display_dec@edit& (0+255),b
  9209  013B6E  0100               	movlb	0	; () banked
  9210  013B70  EE20 F002          	lfsr	2,2
  9211  013B74  5197               	movf	display_time_1602@ct& (0+255),w,b
  9212  013B76  26D9               	addwf	fsr2l,f,c
  9213  013B78  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9214  013B7A  22DA               	addwfc	fsr2h,f,c
  9215  013B7C  50DF               	movf	indf2,w,c
  9216  013B7E  EC6B  F0B5         	call	_display_dec
  9217                           
  9218                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  9219  013B82  0100               	movlb	0	; () banked
  9220  013B84  51F4               	movf	_colon& (0+255),w,b
  9221  013B86  B4D8               	btfsc	status,2,c
  9222  013B88  D004               	goto	l11034
  9223                           
  9224                           ; BSR set to: 0
  9225  013B8A  0E3A               	movlw	58
  9226  013B8C  EC6D  F0B7         	call	_I2C_LCD_Putc
  9227  013B90  D003               	goto	l11036
  9228  013B92                     l11034:
  9229                           
  9230                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  9231  013B92  0E20               	movlw	32
  9232  013B94  EC6D  F0B7         	call	_I2C_LCD_Putc
  9233  013B98                     l11036:
  9234                           
  9235                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  9236  013B98  0E00               	movlw	0
  9237  013B9A  B3F6               	btfsc	_edit_flag& (0+255),1,b
  9238  013B9C  0E01               	movlw	1
  9239  013B9E  0100               	movlb	0	; () banked
  9240  013BA0  6F8B               	movwf	display_dec@edit& (0+255),b
  9241  013BA2  0100               	movlb	0	; () banked
  9242  013BA4  EE20 F001          	lfsr	2,1
  9243  013BA8  5197               	movf	display_time_1602@ct& (0+255),w,b
  9244  013BAA  26D9               	addwf	fsr2l,f,c
  9245  013BAC  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9246  013BAE  22DA               	addwfc	fsr2h,f,c
  9247  013BB0  50DF               	movf	indf2,w,c
  9248  013BB2  EC6B  F0B5         	call	_display_dec
  9249                           
  9250                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  9251  013BB6  0E2D               	movlw	45
  9252  013BB8  EC6D  F0B7         	call	_I2C_LCD_Putc
  9253                           
  9254                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  9255  013BBC  0E00               	movlw	0
  9256  013BBE  B1F6               	btfsc	_edit_flag& (0+255),0,b
  9257  013BC0  0E01               	movlw	1
  9258  013BC2  0100               	movlb	0	; () banked
  9259  013BC4  6F8B               	movwf	display_dec@edit& (0+255),b
  9260  013BC6  C097  FFD9         	movff	display_time_1602@ct,fsr2l
  9261  013BCA  C098  FFDA         	movff	display_time_1602@ct+1,fsr2h
  9262  013BCE  50DF               	movf	indf2,w,c
  9263  013BD0  EC6B  F0B5         	call	_display_dec
  9264  013BD4  0012               	return		;funcret
  9265  013BD6                     __end_of_display_time_1602:
  9266                           	opt stack 0
  9267                           tblptru	equ	0xFF8
  9268                           tblptrh	equ	0xFF7
  9269                           tblptrl	equ	0xFF6
  9270                           tablat	equ	0xFF5
  9271                           prodh	equ	0xFF4
  9272                           prodl	equ	0xFF3
  9273                           intcon	equ	0xFF2
  9274                           postinc0	equ	0xFEE
  9275                           wreg	equ	0xFE8
  9276                           indf1	equ	0xFE7
  9277                           postdec1	equ	0xFE5
  9278                           fsr1h	equ	0xFE2
  9279                           fsr1l	equ	0xFE1
  9280                           indf2	equ	0xFDF
  9281                           postinc2	equ	0xFDE
  9282                           postdec2	equ	0xFDD
  9283                           fsr2h	equ	0xFDA
  9284                           fsr2l	equ	0xFD9
  9285                           status	equ	0xFD8
  9286                           
  9287 ;; *************** function _display_dec *****************
  9288 ;; Defined at:
  9289 ;;		line 251 in file "../My_header\My_RTCC.h"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  dec             1    wreg     unsigned char 
  9292 ;;  edit            1   43[BANK0 ] unsigned char 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  dec             1   54[BANK0 ] unsigned char 
  9295 ;;  str            10   44[BANK0 ] unsigned char [10]
  9296 ;; Return value:  Size  Location     Type
  9297 ;;		None               void
  9298 ;; Registers used:
  9299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9305 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9306 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9308 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9309 ;;Total ram usage:       12 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:   14
  9312 ;; This function calls:
  9313 ;;		_I2C_LCD_Puts
  9314 ;;		_my_utoa
  9315 ;; This function is called by:
  9316 ;;		_display_time_1602
  9317 ;;		_display_time_0802
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text19
  9322  016AD6                     __ptext19:
  9323                           	opt stack 0
  9324  016AD6                     _display_dec:
  9325                           	opt stack 13
  9326                           
  9327                           ;incstack = 0
  9328                           ;display_dec@dec stored from wreg
  9329  016AD6  0100               	movlb	0	; () banked
  9330  016AD8  6F96               	movwf	display_dec@dec& (0+255),b
  9331                           
  9332                           ;My_header\My_RTCC.h: 252: char str[10];
  9333                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  9334  016ADA  0E8C               	movlw	low display_dec@str
  9335  016ADC  0100               	movlb	0	; () banked
  9336  016ADE  6F83               	movwf	my_utoa@str& (0+255),b
  9337  016AE0  0E00               	movlw	high display_dec@str
  9338  016AE2  0100               	movlb	0	; () banked
  9339  016AE4  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  9340  016AE6  C096  F085         	movff	display_dec@dec,my_utoa@value
  9341  016AEA  0100               	movlb	0	; () banked
  9342  016AEC  6B86               	clrf	(my_utoa@value+1)& (0+255),b
  9343  016AEE  0E02               	movlw	2
  9344  016AF0  0100               	movlb	0	; () banked
  9345  016AF2  6F87               	movwf	my_utoa@digits& (0+255),b
  9346  016AF4  ECA9  F0B1         	call	_my_utoa	;wreg free
  9347                           
  9348                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  9349  016AF8  0100               	movlb	0	; () banked
  9350  016AFA  518B               	movf	display_dec@edit& (0+255),w,b
  9351  016AFC  0100               	movlb	0	; () banked
  9352  016AFE  B4D8               	btfsc	status,2,c
  9353  016B00  D00D               	goto	l10756
  9354                           
  9355                           ; BSR set to: 0
  9356  016B02  0100               	movlb	0	; () banked
  9357  016B04  51F7               	movf	_halfsec& (0+255),w,b
  9358  016B06  B4D8               	btfsc	status,2,c
  9359  016B08  D009               	goto	l10756
  9360                           
  9361                           ; BSR set to: 0
  9362  016B0A  0E8D               	movlw	low (STR_122+3)
  9363  016B0C  0100               	movlb	0	; () banked
  9364  016B0E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9365  016B10  0EFF               	movlw	high (STR_122+3)
  9366  016B12  0100               	movlb	0	; () banked
  9367  016B14  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9368  016B16  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9369  016B1A  0012               	return	
  9370  016B1C                     l10756:
  9371                           
  9372                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  9373  016B1C  0E8C               	movlw	low display_dec@str
  9374  016B1E  0100               	movlb	0	; () banked
  9375  016B20  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9376  016B22  0E00               	movlw	high display_dec@str
  9377  016B24  0100               	movlb	0	; () banked
  9378  016B26  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9379  016B28  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9380  016B2C  0012               	return	
  9381  016B2E                     __end_of_display_dec:
  9382                           	opt stack 0
  9383                           tblptru	equ	0xFF8
  9384                           tblptrh	equ	0xFF7
  9385                           tblptrl	equ	0xFF6
  9386                           tablat	equ	0xFF5
  9387                           prodh	equ	0xFF4
  9388                           prodl	equ	0xFF3
  9389                           intcon	equ	0xFF2
  9390                           postinc0	equ	0xFEE
  9391                           wreg	equ	0xFE8
  9392                           indf1	equ	0xFE7
  9393                           postdec1	equ	0xFE5
  9394                           fsr1h	equ	0xFE2
  9395                           fsr1l	equ	0xFE1
  9396                           indf2	equ	0xFDF
  9397                           postinc2	equ	0xFDE
  9398                           postdec2	equ	0xFDD
  9399                           fsr2h	equ	0xFDA
  9400                           fsr2l	equ	0xFD9
  9401                           status	equ	0xFD8
  9402                           
  9403 ;; *************** function _I2C_LCD_Putc *****************
  9404 ;; Defined at:
  9405 ;;		line 118 in file "../My_header\My_I2C.h"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  c               1    wreg     unsigned char 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  c               1    4[BANK0 ] unsigned char 
  9410 ;;  ans             1    5[BANK0 ] unsigned char 
  9411 ;; Return value:  Size  Location     Type
  9412 ;;		None               void
  9413 ;; Registers used:
  9414 ;;		wreg, status,2, status,0, cstack
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9424 ;;Total ram usage:        2 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:   13
  9427 ;; This function calls:
  9428 ;;		_I2C_Send
  9429 ;;		_I2C_Start
  9430 ;;		_I2C_Stop
  9431 ;; This function is called by:
  9432 ;;		_display_time_1602
  9433 ;;		_display_LCD
  9434 ;;		_display_time_0802
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	text20
  9439  016EDA                     __ptext20:
  9440                           	opt stack 0
  9441  016EDA                     _I2C_LCD_Putc:
  9442                           	opt stack 14
  9443                           
  9444                           ;incstack = 0
  9445                           ;I2C_LCD_Putc@c stored from wreg
  9446  016EDA  0100               	movlb	0	; () banked
  9447  016EDC  6F64               	movwf	I2C_LCD_Putc@c& (0+255),b
  9448                           
  9449                           ;My_header\My_I2C.h: 119: uint8_t ans;
  9450                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  9451  016EDE  0E00               	movlw	0
  9452  016EE0  0100               	movlb	0	; () banked
  9453  016EE2  6F62               	movwf	I2C_Start@rw& (0+255),b
  9454  016EE4  0E3E               	movlw	62
  9455  016EE6  EC2A  F0B8         	call	_I2C_Start
  9456  016EEA  0100               	movlb	0	; () banked
  9457  016EEC  6F65               	movwf	I2C_LCD_Putc@ans& (0+255),b
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  9461  016EEE  0100               	movlb	0	; () banked
  9462  016EF0  5165               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  9463  016EF2  0100               	movlb	0	; () banked
  9464  016EF4  A4D8               	btfss	status,2,c
  9465  016EF6  D007               	goto	l941
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  9469  016EF8  0EC0               	movlw	192
  9470  016EFA  ECEA  F0B9         	call	_I2C_Send
  9471                           
  9472                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  9473  016EFE  0100               	movlb	0	; () banked
  9474  016F00  5164               	movf	I2C_LCD_Putc@c& (0+255),w,b
  9475  016F02  ECEA  F0B9         	call	_I2C_Send
  9476  016F06                     l941:
  9477                           
  9478                           ;My_header\My_I2C.h: 126: }
  9479                           ;My_header\My_I2C.h: 127: I2C_Stop();
  9480  016F06  EC25  F0BA         	call	_I2C_Stop	;wreg free
  9481                           
  9482                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9483  016F0A  0E68               	movlw	104
  9484  016F0C                     u15337:
  9485  016F0C  2EE8               	decfsz	wreg,f,c
  9486  016F0E  D7FE               	goto	u15337
  9487  016F10  0012               	return		;funcret
  9488  016F12                     __end_of_I2C_LCD_Putc:
  9489                           	opt stack 0
  9490                           tblptru	equ	0xFF8
  9491                           tblptrh	equ	0xFF7
  9492                           tblptrl	equ	0xFF6
  9493                           tablat	equ	0xFF5
  9494                           prodh	equ	0xFF4
  9495                           prodl	equ	0xFF3
  9496                           intcon	equ	0xFF2
  9497                           postinc0	equ	0xFEE
  9498                           wreg	equ	0xFE8
  9499                           indf1	equ	0xFE7
  9500                           postdec1	equ	0xFE5
  9501                           fsr1h	equ	0xFE2
  9502                           fsr1l	equ	0xFE1
  9503                           indf2	equ	0xFDF
  9504                           postinc2	equ	0xFDE
  9505                           postdec2	equ	0xFDD
  9506                           fsr2h	equ	0xFDA
  9507                           fsr2l	equ	0xFD9
  9508                           status	equ	0xFD8
  9509                           
  9510 ;; *************** function _display_port *****************
  9511 ;; Defined at:
  9512 ;;		line 218 in file "tasks.h"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;		None               void
  9519 ;; Registers used:
  9520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;Total ram usage:        3 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:   15
  9533 ;; This function calls:
  9534 ;;		_I2C_LCD_Puts
  9535 ;;		_I2C_LCD_SetCursor
  9536 ;; This function is called by:
  9537 ;;		_display_LCD
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text21
  9542  0154B2                     __ptext21:
  9543                           	opt stack 0
  9544  0154B2                     _display_port:
  9545                           	opt stack 13
  9546                           
  9547                           ;tasks.h: 219: static const char port_char[2][3][20] = {
  9548                           ;tasks.h: 220: {"LEFT PORT", "CENTER PORT", "RIGHT PORT"},
  9549                           ;tasks.h: 221: {"Left Port", "Center Port", "Right Port"}
  9550                           ;tasks.h: 222: };
  9551                           ;tasks.h: 223: static const char onoff[2][5] = {"OFF", "ON"};
  9552                           ;tasks.h: 224: I2C_LCD_SetCursor(0, 0);
  9553                           
  9554                           ;incstack = 0
  9555  0154B2  0E00               	movlw	0
  9556  0154B4  0100               	movlb	0	; () banked
  9557  0154B6  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9558  0154B8  0E00               	movlw	0
  9559  0154BA  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  9560                           
  9561                           ;tasks.h: 225: I2C_LCD_Puts(port_char[port[print_port].flag.auto_cut_ON][print_port]);
  9562  0154BE  0100               	movlb	0	; () banked
  9563  0154C0  51FA               	movf	_print_port& (0+255),w,b
  9564  0154C2  0D17               	mullw	23
  9565  0154C4  0E16               	movlw	22
  9566  0154C6  26F3               	addwf	prodl,f,c
  9567  0154C8  0E00               	movlw	0
  9568  0154CA  22F4               	addwfc	prodh,f,c
  9569  0154CC  0E29               	movlw	low _port
  9570  0154CE  24F3               	addwf	prodl,w,c
  9571  0154D0  6ED9               	movwf	fsr2l,c
  9572  0154D2  0E01               	movlw	high _port
  9573  0154D4  20F4               	addwfc	prodh,w,c
  9574  0154D6  6EDA               	movwf	fsr2h,c
  9575  0154D8  0101               	movlb	1	; () banked
  9576  0154DA  A0DF               	btfss	indf2,0,c
  9577  0154DC  D004               	goto	u13460
  9578  0154DE  0100               	movlb	0	; () banked
  9579  0154E0  6B6A               	clrf	??_display_port& (0+255),b
  9580  0154E2  2B6A               	incf	??_display_port& (0+255),f,b
  9581  0154E4  D002               	goto	u13468
  9582  0154E6                     u13460:
  9583  0154E6  0100               	movlb	0	; () banked
  9584  0154E8  6B6A               	clrf	??_display_port& (0+255),b
  9585  0154EA                     u13468:
  9586  0154EA  0100               	movlb	0	; () banked
  9587  0154EC  516A               	movf	??_display_port& (0+255),w,b
  9588  0154EE  0D3C               	mullw	60
  9589  0154F0  0E8F               	movlw	low display_port@port_char
  9590  0154F2  0100               	movlb	0	; () banked
  9591  0154F4  6F6B               	movwf	(??_display_port+1)& (0+255),b
  9592  0154F6  0EF9               	movlw	high display_port@port_char
  9593  0154F8  0100               	movlb	0	; () banked
  9594  0154FA  6F6C               	movwf	(??_display_port+2)& (0+255),b
  9595  0154FC  50F3               	movf	prodl,w,c
  9596  0154FE  0100               	movlb	0	; () banked
  9597  015500  276B               	addwf	(??_display_port+1)& (0+255),f,b
  9598  015502  50F4               	movf	prodh,w,c
  9599  015504  0100               	movlb	0	; () banked
  9600  015506  236C               	addwfc	(??_display_port+2)& (0+255),f,b
  9601  015508  0100               	movlb	0	; () banked
  9602  01550A  51FA               	movf	_print_port& (0+255),w,b
  9603  01550C  0D14               	mullw	20
  9604  01550E  50F3               	movf	prodl,w,c
  9605  015510  0100               	movlb	0	; () banked
  9606  015512  256B               	addwf	(??_display_port+1)& (0+255),w,b
  9607  015514  0100               	movlb	0	; () banked
  9608  015516  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9609  015518  50F4               	movf	prodh,w,c
  9610  01551A  0100               	movlb	0	; () banked
  9611  01551C  216C               	addwfc	(??_display_port+2)& (0+255),w,b
  9612  01551E  0100               	movlb	0	; () banked
  9613  015520  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9614  015522  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9615                           
  9616                           ;tasks.h: 226: I2C_LCD_SetCursor(13, 0);
  9617  015526  0E00               	movlw	0
  9618  015528  0100               	movlb	0	; () banked
  9619  01552A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9620  01552C  0E0D               	movlw	13
  9621  01552E  EC9D  F0B8         	call	_I2C_LCD_SetCursor
  9622                           
  9623                           ;tasks.h: 227: I2C_LCD_Puts(onoff[port[print_port].flag.out_flag]);
  9624  015532  0100               	movlb	0	; () banked
  9625  015534  51FA               	movf	_print_port& (0+255),w,b
  9626  015536  0D17               	mullw	23
  9627  015538  0E16               	movlw	22
  9628  01553A  26F3               	addwf	prodl,f,c
  9629  01553C  0E00               	movlw	0
  9630  01553E  22F4               	addwfc	prodh,f,c
  9631  015540  0E29               	movlw	low _port
  9632  015542  24F3               	addwf	prodl,w,c
  9633  015544  6ED9               	movwf	fsr2l,c
  9634  015546  0E01               	movlw	high _port
  9635  015548  20F4               	addwfc	prodh,w,c
  9636  01554A  6EDA               	movwf	fsr2h,c
  9637  01554C  0101               	movlb	1	; () banked
  9638  01554E  A4DF               	btfss	indf2,2,c
  9639  015550  D004               	goto	u13470
  9640  015552  0100               	movlb	0	; () banked
  9641  015554  6B6A               	clrf	??_display_port& (0+255),b
  9642  015556  2B6A               	incf	??_display_port& (0+255),f,b
  9643  015558  D002               	goto	u13478
  9644  01555A                     u13470:
  9645  01555A  0100               	movlb	0	; () banked
  9646  01555C  6B6A               	clrf	??_display_port& (0+255),b
  9647  01555E                     u13478:
  9648  01555E  0100               	movlb	0	; () banked
  9649  015560  516A               	movf	??_display_port& (0+255),w,b
  9650  015562  0D05               	mullw	5
  9651  015564  0EE0               	movlw	low display_port@onoff
  9652  015566  24F3               	addwf	prodl,w,c
  9653  015568  0100               	movlb	0	; () banked
  9654  01556A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9655  01556C  0EFA               	movlw	high display_port@onoff
  9656  01556E  20F4               	addwfc	prodh,w,c
  9657  015570  0100               	movlb	0	; () banked
  9658  015572  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9659  015574  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9660  015578  0012               	return		;funcret
  9661  01557A                     __end_of_display_port:
  9662                           	opt stack 0
  9663                           tblptru	equ	0xFF8
  9664                           tblptrh	equ	0xFF7
  9665                           tblptrl	equ	0xFF6
  9666                           tablat	equ	0xFF5
  9667                           prodh	equ	0xFF4
  9668                           prodl	equ	0xFF3
  9669                           intcon	equ	0xFF2
  9670                           postinc0	equ	0xFEE
  9671                           wreg	equ	0xFE8
  9672                           indf1	equ	0xFE7
  9673                           postdec1	equ	0xFE5
  9674                           fsr1h	equ	0xFE2
  9675                           fsr1l	equ	0xFE1
  9676                           indf2	equ	0xFDF
  9677                           postinc2	equ	0xFDE
  9678                           postdec2	equ	0xFDD
  9679                           fsr2h	equ	0xFDA
  9680                           fsr2l	equ	0xFD9
  9681                           status	equ	0xFD8
  9682                           
  9683 ;; *************** function _Auto_cut *****************
  9684 ;; Defined at:
  9685 ;;		line 185 in file "tasks.h"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;		None
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;  i               1   30[BANK0 ] unsigned char 
  9690 ;; Return value:  Size  Location     Type
  9691 ;;		None               void
  9692 ;; Registers used:
  9693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9703 ;;Total ram usage:        3 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; Hardware stack levels required when called:   12
  9706 ;; This function calls:
  9707 ;;		_ADC
  9708 ;;		_ANALOG_IN
  9709 ;;		_OUT
  9710 ;;		___wmul
  9711 ;; This function is called by:
  9712 ;;		_normal_loop
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text22
  9717  013FA8                     __ptext22:
  9718                           	opt stack 0
  9719  013FA8                     _Auto_cut:
  9720                           	opt stack 17
  9721                           
  9722                           ;tasks.h: 186: for (uint8_t i = 0; i < 3; i++) {
  9723                           
  9724                           ;incstack = 0
  9725  013FA8  0E00               	movlw	0
  9726  013FAA  0100               	movlb	0	; () banked
  9727  013FAC  6F7E               	movwf	Auto_cut@i& (0+255),b
  9728  013FAE                     l11676:
  9729                           
  9730                           ; BSR set to: 0
  9731  013FAE  0E02               	movlw	2
  9732  013FB0  0100               	movlb	0	; () banked
  9733  013FB2  657E               	cpfsgt	Auto_cut@i& (0+255),b
  9734  013FB4  D001               	goto	l11680
  9735  013FB6  0012               	return	
  9736  013FB8                     l11680:
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;tasks.h: 187: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
  9740  013FB8  0100               	movlb	0	; () banked
  9741  013FBA  517E               	movf	Auto_cut@i& (0+255),w,b
  9742  013FBC  EC87  F0B8         	call	_ANALOG_IN
  9743  013FC0  EC42  F0B8         	call	_ADC
  9744  013FC4  C060  F076         	movff	?_ADC,___wmul@multiplier
  9745  013FC8  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
  9746  013FCC  0E00               	movlw	0
  9747  013FCE  0100               	movlb	0	; () banked
  9748  013FD0  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9749  013FD2  0E0D               	movlw	13
  9750  013FD4  6F78               	movwf	___wmul@multiplicand& (0+255),b
  9751  013FD6  ECC1  F0B7         	call	___wmul	;wreg free
  9752  013FDA  0E04               	movlw	4
  9753  013FDC  0100               	movlb	0	; () banked
  9754  013FDE  6F7C               	movwf	??_Auto_cut& (0+255),b
  9755  013FE0                     u14135:
  9756  013FE0  0100               	movlb	0	; () banked
  9757  013FE2  90D8               	bcf	status,0,c
  9758  013FE4  3377               	rrcf	(?___wmul+1)& (0+255),f,b
  9759  013FE6  3376               	rrcf	?___wmul& (0+255),f,b
  9760  013FE8  0100               	movlb	0	; () banked
  9761  013FEA  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
  9762  013FEC  D7F9               	goto	u14135
  9763  013FEE  0100               	movlb	0	; () banked
  9764  013FF0  517E               	movf	Auto_cut@i& (0+255),w,b
  9765  013FF2  0D17               	mullw	23
  9766  013FF4  0E06               	movlw	6
  9767  013FF6  26F3               	addwf	prodl,f,c
  9768  013FF8  0E00               	movlw	0
  9769  013FFA  22F4               	addwfc	prodh,f,c
  9770  013FFC  0E29               	movlw	low _port
  9771  013FFE  24F3               	addwf	prodl,w,c
  9772  014000  6ED9               	movwf	fsr2l,c
  9773  014002  0E01               	movlw	high _port
  9774  014004  20F4               	addwfc	prodh,w,c
  9775  014006  6EDA               	movwf	fsr2h,c
  9776  014008  0100               	movlb	0	; () banked
  9777  01400A  C076  FFDE         	movff	?___wmul,postinc2
  9778  01400E  0100               	movlb	0	; () banked
  9779  014010  C077  FFDD         	movff	?___wmul+1,postdec2
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;tasks.h: 188: if (port[i].flag.auto_cut_ON) {
  9783  014014  0100               	movlb	0	; () banked
  9784  014016  517E               	movf	Auto_cut@i& (0+255),w,b
  9785  014018  0D17               	mullw	23
  9786  01401A  0E16               	movlw	22
  9787  01401C  26F3               	addwf	prodl,f,c
  9788  01401E  0E00               	movlw	0
  9789  014020  22F4               	addwfc	prodh,f,c
  9790  014022  0E29               	movlw	low _port
  9791  014024  24F3               	addwf	prodl,w,c
  9792  014026  6ED9               	movwf	fsr2l,c
  9793  014028  0E01               	movlw	high _port
  9794  01402A  20F4               	addwfc	prodh,w,c
  9795  01402C  6EDA               	movwf	fsr2h,c
  9796  01402E  0101               	movlb	1	; () banked
  9797  014030  A0DF               	btfss	indf2,0,c
  9798  014032  D051               	goto	l11692
  9799                           
  9800                           ; BSR set to: 1
  9801                           ;tasks.h: 189: if (port[i].current < 100) {
  9802  014034  0100               	movlb	0	; () banked
  9803  014036  517E               	movf	Auto_cut@i& (0+255),w,b
  9804  014038  0D17               	mullw	23
  9805  01403A  0E06               	movlw	6
  9806  01403C  26F3               	addwf	prodl,f,c
  9807  01403E  0E00               	movlw	0
  9808  014040  22F4               	addwfc	prodh,f,c
  9809  014042  0E29               	movlw	low _port
  9810  014044  24F3               	addwf	prodl,w,c
  9811  014046  6ED9               	movwf	fsr2l,c
  9812  014048  0E01               	movlw	high _port
  9813  01404A  20F4               	addwfc	prodh,w,c
  9814  01404C  6EDA               	movwf	fsr2h,c
  9815  01404E  0E01               	movlw	1
  9816  014050  50DB               	movf	plusw2,w,c
  9817  014052  E130               	bnz	l11690
  9818  014054  0E64               	movlw	100
  9819  014056  5CDE               	subwf	postinc2,w,c
  9820  014058  B0D8               	btfsc	status,0,c
  9821  01405A  D02C               	goto	l11690
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;tasks.h: 190: port[i].cut_cnt++;
  9825  01405C  0100               	movlb	0	; () banked
  9826  01405E  517E               	movf	Auto_cut@i& (0+255),w,b
  9827  014060  0D17               	mullw	23
  9828  014062  0E14               	movlw	20
  9829  014064  26F3               	addwf	prodl,f,c
  9830  014066  0E00               	movlw	0
  9831  014068  22F4               	addwfc	prodh,f,c
  9832  01406A  0E29               	movlw	low _port
  9833  01406C  24F3               	addwf	prodl,w,c
  9834  01406E  6ED9               	movwf	fsr2l,c
  9835  014070  0E01               	movlw	high _port
  9836  014072  20F4               	addwfc	prodh,w,c
  9837  014074  6EDA               	movwf	fsr2h,c
  9838  014076  2ADE               	incf	postinc2,f,c
  9839  014078  0E00               	movlw	0
  9840  01407A  22DD               	addwfc	postdec2,f,c
  9841                           
  9842                           ;tasks.h: 191: if (port[i].cut_cnt > 6) {
  9843  01407C  0100               	movlb	0	; () banked
  9844  01407E  517E               	movf	Auto_cut@i& (0+255),w,b
  9845  014080  0D17               	mullw	23
  9846  014082  0E14               	movlw	20
  9847  014084  26F3               	addwf	prodl,f,c
  9848  014086  0E00               	movlw	0
  9849  014088  22F4               	addwfc	prodh,f,c
  9850  01408A  0E29               	movlw	low _port
  9851  01408C  24F3               	addwf	prodl,w,c
  9852  01408E  6ED9               	movwf	fsr2l,c
  9853  014090  0E01               	movlw	high _port
  9854  014092  20F4               	addwfc	prodh,w,c
  9855  014094  6EDA               	movwf	fsr2h,c
  9856  014096  0E01               	movlw	1
  9857  014098  50DB               	movf	plusw2,w,c
  9858  01409A  E104               	bnz	u14160
  9859  01409C  0E07               	movlw	7
  9860  01409E  5CDE               	subwf	postinc2,w,c
  9861  0140A0  A0D8               	btfss	status,0,c
  9862  0140A2  D019               	goto	l11692
  9863  0140A4                     u14160:
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;tasks.h: 192: OUT(i, 0);
  9867  0140A4  0E00               	movlw	0
  9868  0140A6  0100               	movlb	0	; () banked
  9869  0140A8  6F60               	movwf	OUT@value& (0+255),b
  9870  0140AA  0100               	movlb	0	; () banked
  9871  0140AC  517E               	movf	Auto_cut@i& (0+255),w,b
  9872  0140AE  EC9D  F0B3         	call	_OUT
  9873                           
  9874                           ;tasks.h: 193: }
  9875                           ;tasks.h: 194: } else {
  9876  0140B2  D011               	goto	l11692
  9877  0140B4                     l11690:
  9878                           
  9879                           ;tasks.h: 195: port[i].cut_cnt = 0;
  9880  0140B4  0100               	movlb	0	; () banked
  9881  0140B6  517E               	movf	Auto_cut@i& (0+255),w,b
  9882  0140B8  0D17               	mullw	23
  9883  0140BA  0E14               	movlw	20
  9884  0140BC  26F3               	addwf	prodl,f,c
  9885  0140BE  0E00               	movlw	0
  9886  0140C0  22F4               	addwfc	prodh,f,c
  9887  0140C2  0E29               	movlw	low _port
  9888  0140C4  24F3               	addwf	prodl,w,c
  9889  0140C6  6ED9               	movwf	fsr2l,c
  9890  0140C8  0E01               	movlw	high _port
  9891  0140CA  20F4               	addwfc	prodh,w,c
  9892  0140CC  6EDA               	movwf	fsr2h,c
  9893  0140CE  0E00               	movlw	0
  9894  0140D0  6EDE               	movwf	postinc2,c
  9895  0140D2  0E00               	movlw	0
  9896  0140D4  6EDD               	movwf	postdec2,c
  9897  0140D6                     l11692:
  9898  0140D6  0100               	movlb	0	; () banked
  9899  0140D8  2B7E               	incf	Auto_cut@i& (0+255),f,b
  9900  0140DA  D769               	goto	l11676
  9901  0140DC                     __end_of_Auto_cut:
  9902                           	opt stack 0
  9903                           tblptru	equ	0xFF8
  9904                           tblptrh	equ	0xFF7
  9905                           tblptrl	equ	0xFF6
  9906                           tablat	equ	0xFF5
  9907                           prodh	equ	0xFF4
  9908                           prodl	equ	0xFF3
  9909                           intcon	equ	0xFF2
  9910                           postinc0	equ	0xFEE
  9911                           wreg	equ	0xFE8
  9912                           indf1	equ	0xFE7
  9913                           postdec1	equ	0xFE5
  9914                           fsr1h	equ	0xFE2
  9915                           fsr1l	equ	0xFE1
  9916                           indf2	equ	0xFDF
  9917                           postinc2	equ	0xFDE
  9918                           postdec2	equ	0xFDD
  9919                           plusw2	equ	0xFDB
  9920                           fsr2h	equ	0xFDA
  9921                           fsr2l	equ	0xFD9
  9922                           status	equ	0xFD8
  9923                           
  9924 ;; *************** function _OUT *****************
  9925 ;; Defined at:
  9926 ;;		line 113 in file "tasks.h"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  b               1    wreg     unsigned char 
  9929 ;;  value           1    0[BANK0 ] unsigned char 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  b               1    1[BANK0 ] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;		None               void
  9934 ;; Registers used:
  9935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9941 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9945 ;;Total ram usage:        2 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:   11
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_Auto_cut
  9952 ;;		_port_button_loop
  9953 ;;		_sleep_loop
  9954 ;;		_software_init
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text23
  9959  01673A                     __ptext23:
  9960                           	opt stack 0
  9961  01673A                     _OUT:
  9962                           	opt stack 18
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;incstack = 0
  9966                           ;OUT@b stored from wreg
  9967  01673A  0100               	movlb	0	; () banked
  9968  01673C  6F61               	movwf	OUT@b& (0+255),b
  9969                           
  9970                           ;tasks.h: 114: port[b].flag.out_flag = value;
  9971  01673E  0100               	movlb	0	; () banked
  9972  016740  5161               	movf	OUT@b& (0+255),w,b
  9973  016742  0D17               	mullw	23
  9974  016744  0E16               	movlw	22
  9975  016746  26F3               	addwf	prodl,f,c
  9976  016748  0E00               	movlw	0
  9977  01674A  22F4               	addwfc	prodh,f,c
  9978  01674C  0E29               	movlw	low _port
  9979  01674E  24F3               	addwf	prodl,w,c
  9980  016750  6ED9               	movwf	fsr2l,c
  9981  016752  0E01               	movlw	high _port
  9982  016754  20F4               	addwfc	prodh,w,c
  9983  016756  6EDA               	movwf	fsr2h,c
  9984  016758  0100               	movlb	0	; () banked
  9985  01675A  B160               	btfsc	OUT@value& (0+255),0,b
  9986  01675C  D003               	bra	u13325
  9987  01675E  0101               	movlb	1	; () banked
  9988  016760  94DF               	bcf	indf2,2,c
  9989  016762  D002               	bra	u13326
  9990  016764                     u13325:
  9991  016764  0101               	movlb	1	; () banked
  9992  016766  84DF               	bsf	indf2,2,c
  9993  016768                     u13326:
  9994                           
  9995                           ;tasks.h: 115: switch (b) {
  9996  016768  D015               	goto	l11216
  9997  01676A                     l1275:
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;tasks.h: 117: LATA5 = value;
 10001  01676A  0100               	movlb	0	; () banked
 10002  01676C  A160               	btfss	OUT@value& (0+255),0,b
 10003  01676E  D002               	goto	u13330
 10004  016770  8A89               	bsf	3977,5,c	;volatile
 10005  016772  0012               	return	
 10006  016774                     u13330:
 10007  016774  9A89               	bcf	3977,5,c	;volatile
 10008                           
 10009                           ;tasks.h: 118: break;
 10010  016776  0012               	return	
 10011  016778                     l1277:
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;tasks.h: 120: LATA6 = value;
 10015  016778  0100               	movlb	0	; () banked
 10016  01677A  A160               	btfss	OUT@value& (0+255),0,b
 10017  01677C  D002               	goto	u13350
 10018  01677E  8C89               	bsf	3977,6,c	;volatile
 10019  016780  0012               	return	
 10020  016782                     u13350:
 10021  016782  9C89               	bcf	3977,6,c	;volatile
 10022                           
 10023                           ;tasks.h: 121: break;
 10024  016784  0012               	return	
 10025  016786                     l1278:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;tasks.h: 123: LATA7 = value;
 10029  016786  0100               	movlb	0	; () banked
 10030  016788  A160               	btfss	OUT@value& (0+255),0,b
 10031  01678A  D002               	goto	u13370
 10032  01678C  8E89               	bsf	3977,7,c	;volatile
 10033  01678E  0012               	return	
 10034  016790                     u13370:
 10035  016790  9E89               	bcf	3977,7,c	;volatile
 10036                           
 10037                           ;tasks.h: 125: }
 10038                           
 10039                           ;tasks.h: 124: break;
 10040  016792  0012               	return	
 10041  016794                     l11216:
 10042  016794  0100               	movlb	0	; () banked
 10043  016796  5161               	movf	OUT@b& (0+255),w,b
 10044                           
 10045                           ; Switch size 1, requested type "space"
 10046                           ; Number of cases is 3, Range of values is 0 to 2
 10047                           ; switch strategies available:
 10048                           ; Name         Instructions Cycles
 10049                           ; simple_byte           10     6 (average)
 10050                           ;	Chosen strategy is simple_byte
 10051  016798  0A00               	xorlw	0	; case 0
 10052  01679A  B4D8               	btfsc	status,2,c
 10053  01679C  D7E6               	goto	l1275
 10054  01679E  0A01               	xorlw	1	; case 1
 10055  0167A0  B4D8               	btfsc	status,2,c
 10056  0167A2  D7EA               	goto	l1277
 10057  0167A4  0A03               	xorlw	3	; case 2
 10058  0167A6  A4D8               	btfss	status,2,c
 10059  0167A8  0012               	return	
 10060  0167AA  D7ED               	goto	l1278
 10061  0167AC                     __end_of_OUT:
 10062                           	opt stack 0
 10063                           tblptru	equ	0xFF8
 10064                           tblptrh	equ	0xFF7
 10065                           tblptrl	equ	0xFF6
 10066                           tablat	equ	0xFF5
 10067                           prodh	equ	0xFF4
 10068                           prodl	equ	0xFF3
 10069                           intcon	equ	0xFF2
 10070                           postinc0	equ	0xFEE
 10071                           wreg	equ	0xFE8
 10072                           indf1	equ	0xFE7
 10073                           postdec1	equ	0xFE5
 10074                           fsr1h	equ	0xFE2
 10075                           fsr1l	equ	0xFE1
 10076                           indf2	equ	0xFDF
 10077                           postinc2	equ	0xFDE
 10078                           postdec2	equ	0xFDD
 10079                           plusw2	equ	0xFDB
 10080                           fsr2h	equ	0xFDA
 10081                           fsr2l	equ	0xFD9
 10082                           status	equ	0xFD8
 10083                           
 10084 ;; *************** function _ANALOG_IN *****************
 10085 ;; Defined at:
 10086 ;;		line 129 in file "tasks.h"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  b               1    wreg     unsigned char 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  b               1    0[BANK0 ] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      unsigned char 
 10093 ;; Registers used:
 10094 ;;		wreg, status,2, status,0
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10104 ;;Total ram usage:        1 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:   11
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_Auto_cut
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text24
 10115  01710E                     __ptext24:
 10116                           	opt stack 0
 10117  01710E                     _ANALOG_IN:
 10118                           	opt stack 17
 10119                           
 10120                           ;incstack = 0
 10121                           ;ANALOG_IN@b stored from wreg
 10122  01710E  0100               	movlb	0	; () banked
 10123  017110  6F60               	movwf	ANALOG_IN@b& (0+255),b
 10124                           
 10125                           ;tasks.h: 130: switch (b) {
 10126  017112  D006               	goto	l11234
 10127  017114                     l11220:
 10128                           
 10129                           ;tasks.h: 132: return 8;
 10130  017114  0E08               	movlw	8
 10131  017116  0012               	return	
 10132  017118                     l11224:
 10133                           
 10134                           ;tasks.h: 134: return 9;
 10135  017118  0E09               	movlw	9
 10136  01711A  0012               	return	
 10137  01711C                     l11228:
 10138                           
 10139                           ;tasks.h: 136: return 10;
 10140  01711C  0E0A               	movlw	10
 10141  01711E  0012               	return	
 10142  017120                     l11234:
 10143  017120  0100               	movlb	0	; () banked
 10144  017122  5160               	movf	ANALOG_IN@b& (0+255),w,b
 10145                           
 10146                           ; Switch size 1, requested type "space"
 10147                           ; Number of cases is 3, Range of values is 0 to 2
 10148                           ; switch strategies available:
 10149                           ; Name         Instructions Cycles
 10150                           ; simple_byte           10     6 (average)
 10151                           ;	Chosen strategy is simple_byte
 10152  017124  0A00               	xorlw	0	; case 0
 10153  017126  B4D8               	btfsc	status,2,c
 10154  017128  D7F5               	goto	l11220
 10155  01712A  0A01               	xorlw	1	; case 1
 10156  01712C  B4D8               	btfsc	status,2,c
 10157  01712E  D7F4               	goto	l11224
 10158  017130  0A03               	xorlw	3	; case 2
 10159  017132  B4D8               	btfsc	status,2,c
 10160  017134  D7F3               	goto	l11228
 10161                           
 10162                           ;tasks.h: 138: return 0;
 10163                           
 10164                           ; BSR set to: 0
 10165  017136  0E00               	movlw	0
 10166  017138  0012               	return	
 10167  01713A                     __end_of_ANALOG_IN:
 10168                           	opt stack 0
 10169                           tblptru	equ	0xFF8
 10170                           tblptrh	equ	0xFF7
 10171                           tblptrl	equ	0xFF6
 10172                           tablat	equ	0xFF5
 10173                           prodh	equ	0xFF4
 10174                           prodl	equ	0xFF3
 10175                           intcon	equ	0xFF2
 10176                           postinc0	equ	0xFEE
 10177                           wreg	equ	0xFE8
 10178                           indf1	equ	0xFE7
 10179                           postdec1	equ	0xFE5
 10180                           fsr1h	equ	0xFE2
 10181                           fsr1l	equ	0xFE1
 10182                           indf2	equ	0xFDF
 10183                           postinc2	equ	0xFDE
 10184                           postdec2	equ	0xFDD
 10185                           plusw2	equ	0xFDB
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function _ADC *****************
 10191 ;; Defined at:
 10192 ;;		line 172 in file "../My_header\My_header.h"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  ch              1    wreg     unsigned char 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  ch              1    3[BANK0 ] unsigned char 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  2    0[BANK0 ] unsigned int 
 10199 ;; Registers used:
 10200 ;;		wreg, status,2, status,0
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10209 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;Total ram usage:        4 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:   11
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_Auto_cut
 10217 ;;		_sleep_loop
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text25
 10222  017084                     __ptext25:
 10223                           	opt stack 0
 10224  017084                     _ADC:
 10225                           	opt stack 18
 10226                           
 10227                           ;incstack = 0
 10228                           ;ADC@ch stored from wreg
 10229  017084  0100               	movlb	0	; () banked
 10230  017086  6F63               	movwf	ADC@ch& (0+255),b
 10231                           
 10232                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10233  017088  C063  F062         	movff	ADC@ch,??_ADC
 10234  01708C  0100               	movlb	0	; () banked
 10235  01708E  4762               	rlncf	??_ADC& (0+255),f,b
 10236  017090  4762               	rlncf	??_ADC& (0+255),f,b
 10237  017092  50C2               	movf	4034,w,c	;volatile
 10238  017094  0100               	movlb	0	; () banked
 10239  017096  1962               	xorwf	??_ADC& (0+255),w,b
 10240  017098  0BC3               	andlw	-61
 10241  01709A  1962               	xorwf	??_ADC& (0+255),w,b
 10242  01709C  6EC2               	movwf	4034,c	;volatile
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10246  01709E  80C2               	bsf	4034,0,c	;volatile
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 10250  0170A0  9C9E               	bcf	3998,6,c	;volatile
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 10254  0170A2  82C2               	bsf	4034,1,c	;volatile
 10255  0170A4                     l745:
 10256  0170A4  AC9E               	btfss	3998,6,c	;volatile
 10257  0170A6  D7FE               	goto	l745
 10258                           
 10259                           ;My_header\My_header.h: 179: return ADRES;
 10260  0170A8  CFC3 F060          	movff	4035,?_ADC	;volatile
 10261  0170AC  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 10262  0170B0  0012               	return		;funcret
 10263  0170B2                     __end_of_ADC:
 10264                           	opt stack 0
 10265                           tblptru	equ	0xFF8
 10266                           tblptrh	equ	0xFF7
 10267                           tblptrl	equ	0xFF6
 10268                           tablat	equ	0xFF5
 10269                           prodh	equ	0xFF4
 10270                           prodl	equ	0xFF3
 10271                           intcon	equ	0xFF2
 10272                           postinc0	equ	0xFEE
 10273                           wreg	equ	0xFE8
 10274                           indf1	equ	0xFE7
 10275                           postdec1	equ	0xFE5
 10276                           fsr1h	equ	0xFE2
 10277                           fsr1l	equ	0xFE1
 10278                           indf2	equ	0xFDF
 10279                           postinc2	equ	0xFDE
 10280                           postdec2	equ	0xFDD
 10281                           plusw2	equ	0xFDB
 10282                           fsr2h	equ	0xFDA
 10283                           fsr2l	equ	0xFD9
 10284                           status	equ	0xFD8
 10285                           
 10286 ;; *************** function _my_terminal_loop *****************
 10287 ;; Defined at:
 10288 ;;		line 22 in file "../My_header\My_terminal.h"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
 10291 ;;		 -> usb_tx(8), 
 10292 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
 10293 ;;		 -> usb_rx(8), 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  i               1  102[BANK4 ] unsigned char 
 10296 ;;  i               1  104[BANK4 ] unsigned char 
 10297 ;;  ascii           1  103[BANK4 ] unsigned char 
 10298 ;;  buf           100    0[BANK4 ] unsigned char [100]
 10299 ;; Return value:  Size  Location     Type
 10300 ;;		None               void
 10301 ;; Registers used:
 10302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10308 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10309 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
 10310 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;Total ram usage:      111 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:   19
 10315 ;; This function calls:
 10316 ;;		_command_operation
 10317 ;;		_ringbuf_backspace
 10318 ;;		_ringbuf_delete
 10319 ;;		_ringbuf_init
 10320 ;;		_ringbuf_num
 10321 ;;		_ringbuf_pop
 10322 ;;		_ringbuf_put
 10323 ;;		_ringbuf_put_num
 10324 ;;		_ringbuf_put_str
 10325 ;; This function is called by:
 10326 ;;		_main
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text26
 10331  011EF8                     __ptext26:
 10332                           	opt stack 0
 10333  011EF8                     _my_terminal_loop:
 10334                           	opt stack 11
 10335                           
 10336                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
 10337                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
 10338                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
 10339                           
 10340                           ;incstack = 0
 10341  011EF8  0101               	movlb	1	; () banked
 10342  011EFA  5127               	movf	my_terminal_loop@command_init& (0+255),w,b
 10343  011EFC  0101               	movlb	1	; () banked
 10344  011EFE  A4D8               	btfss	status,2,c
 10345  011F00  D016               	goto	l12100
 10346                           
 10347                           ; BSR set to: 1
 10348                           ;My_header\My_terminal.h: 26: command_init = 1;
 10349  011F02  0E01               	movlw	1
 10350  011F04  0101               	movlb	1	; () banked
 10351  011F06  6F27               	movwf	my_terminal_loop@command_init& (0+255),b
 10352                           
 10353                           ; BSR set to: 1
 10354                           ;My_header\My_terminal.h: 27: char buf[100];
 10355                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
 10356  011F08  0E76               	movlw	low my_terminal_loop@command
 10357  011F0A  0100               	movlb	0	; () banked
 10358  011F0C  6F60               	movwf	ringbuf_init@rb& (0+255),b
 10359  011F0E  0E01               	movlw	high my_terminal_loop@command
 10360  011F10  0100               	movlb	0	; () banked
 10361  011F12  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 10362  011F14  0E00               	movlw	low my_terminal_loop@buf
 10363  011F16  0100               	movlb	0	; () banked
 10364  011F18  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 10365  011F1A  0E04               	movlw	high my_terminal_loop@buf
 10366  011F1C  0100               	movlb	0	; () banked
 10367  011F1E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 10368  011F20  0E00               	movlw	0
 10369  011F22  0100               	movlb	0	; () banked
 10370  011F24  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 10371  011F26  0E64               	movlw	100
 10372  011F28  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 10373  011F2A  ECEF  F0B5         	call	_ringbuf_init	;wreg free
 10374  011F2E                     l12100:
 10375                           
 10376                           ;My_header\My_terminal.h: 29: }
 10377                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
 10378  011F2E  C194  F060         	movff	my_terminal_loop@rx,ringbuf_num@rb
 10379  011F32  C195  F061         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
 10380  011F36  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 10381  011F3A  0100               	movlb	0	; () banked
 10382  011F3C  5160               	movf	?_ringbuf_num& (0+255),w,b
 10383  011F3E  0100               	movlb	0	; () banked
 10384  011F40  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10385  011F42  B4D8               	btfsc	status,2,c
 10386  011F44  0012               	return	
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
 10390  011F46  C194  F068         	movff	my_terminal_loop@rx,ringbuf_pop@rb
 10391  011F4A  C195  F069         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
 10392  011F4E  EC8E  F0A9         	call	_ringbuf_pop	;wreg free
 10393  011F52  0104               	movlb	4	; () banked
 10394  011F54  6F67               	movwf	my_terminal_loop@ascii& (0+255),b
 10395                           
 10396                           ;My_header\My_terminal.h: 32: switch (ascii) {
 10397  011F56  D176               	goto	l12164
 10398  011F58                     l12104:
 10399                           
 10400                           ; BSR set to: 4
 10401                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
 10402  011F58  0E76               	movlw	low my_terminal_loop@command
 10403  011F5A  0100               	movlb	0	; () banked
 10404  011F5C  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10405  011F5E  0E01               	movlw	high my_terminal_loop@command
 10406  011F60  0100               	movlb	0	; () banked
 10407  011F62  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10408  011F64  0E00               	movlw	0
 10409  011F66  0100               	movlb	0	; () banked
 10410  011F68  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10411  011F6A  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10412                           
 10413                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
 10414  011F6E  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10415  011F72  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10416  011F76  0E09               	movlw	9
 10417  011F78  0100               	movlb	0	; () banked
 10418  011F7A  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10419  011F7C  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10420                           
 10421                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
 10422  011F80  0E76               	movlw	low my_terminal_loop@command
 10423  011F82  0100               	movlb	0	; () banked
 10424  011F84  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10425  011F86  0E01               	movlw	high my_terminal_loop@command
 10426  011F88  0100               	movlb	0	; () banked
 10427  011F8A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10428  011F8C  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 10429  011F90  0EFF               	movlw	255
 10430  011F92  0100               	movlb	0	; () banked
 10431  011F94  2560               	addwf	?_ringbuf_num& (0+255),w,b
 10432  011F96  0104               	movlb	4	; () banked
 10433  011F98  6F64               	movwf	_my_terminal_loop$5382& (0+255),b
 10434  011F9A  0EFF               	movlw	255
 10435  011F9C  0100               	movlb	0	; () banked
 10436  011F9E  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
 10437  011FA0  0104               	movlb	4	; () banked
 10438  011FA2  6F65               	movwf	(_my_terminal_loop$5382+1)& (0+255),b
 10439                           
 10440                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
 10441  011FA4  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
 10442  011FA8  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
 10443  011FAC  C464  F08C         	movff	_my_terminal_loop$5382,ringbuf_put_num@value
 10444  011FB0  C465  F08D         	movff	_my_terminal_loop$5382+1,ringbuf_put_num@value+1
 10445  011FB4  0E02               	movlw	2
 10446  011FB6  0100               	movlb	0	; () banked
 10447  011FB8  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 10448  011FBA  EC2F  F0B2         	call	_ringbuf_put_num	;wreg free
 10449                           
 10450                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
 10451  011FBE  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10452  011FC2  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10453  011FC6  0E0A               	movlw	10
 10454  011FC8  0100               	movlb	0	; () banked
 10455  011FCA  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10456  011FCC  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10457                           
 10458                           ;My_header\My_terminal.h: 38: static char op0[20];
 10459                           ;My_header\My_terminal.h: 39: static char op1[20];
 10460                           ;My_header\My_terminal.h: 40: static char op2[20];
 10461                           ;My_header\My_terminal.h: 41: static char op3[20];
 10462                           ;My_header\My_terminal.h: 42: uint8_t i;
 10463                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
 10464  011FD0  0E00               	movlw	0
 10465  011FD2  0104               	movlb	4	; () banked
 10466  011FD4  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10467  011FD6  D002               	goto	l12110
 10468  011FD8                     l12108:
 10469                           
 10470                           ; BSR set to: 4
 10471  011FD8  0104               	movlb	4	; () banked
 10472  011FDA  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10473  011FDC                     l12110:
 10474                           
 10475                           ; BSR set to: 4
 10476  011FDC  0E76               	movlw	low my_terminal_loop@command
 10477  011FDE  0100               	movlb	0	; () banked
 10478  011FE0  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10479  011FE2  0E01               	movlw	high my_terminal_loop@command
 10480  011FE4  0100               	movlb	0	; () banked
 10481  011FE6  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10482  011FE8  EC8E  F0A9         	call	_ringbuf_pop	;wreg free
 10483  011FEC  0101               	movlb	1	; () banked
 10484  011FEE  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10485  011FF0  0104               	movlb	4	; () banked
 10486  011FF2  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10487  011FF4  0D01               	mullw	1
 10488  011FF6  0E7A               	movlw	low my_terminal_loop@op0
 10489  011FF8  24F3               	addwf	prodl,w,c
 10490  011FFA  6ED9               	movwf	fsr2l,c
 10491  011FFC  0E02               	movlw	high my_terminal_loop@op0
 10492  011FFE  20F4               	addwfc	prodh,w,c
 10493  012000  6EDA               	movwf	fsr2h,c
 10494  012002  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10495  012006  50DF               	movf	indf2,w,c
 10496  012008  A4D8               	btfss	status,2,c
 10497  01200A  D7E6               	goto	l12108
 10498                           
 10499                           ; BSR set to: 4
 10500                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
 10501                           
 10502                           ; BSR set to: 4
 10503  01200C  0104               	movlb	4	; () banked
 10504  01200E  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10505  012010  0D01               	mullw	1
 10506  012012  0E7A               	movlw	low my_terminal_loop@op0
 10507  012014  24F3               	addwf	prodl,w,c
 10508  012016  6ED9               	movwf	fsr2l,c
 10509  012018  0E02               	movlw	high my_terminal_loop@op0
 10510  01201A  20F4               	addwfc	prodh,w,c
 10511  01201C  6EDA               	movwf	fsr2h,c
 10512  01201E  0E00               	movlw	0
 10513  012020  6EDF               	movwf	indf2,c
 10514                           
 10515                           ; BSR set to: 4
 10516                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
 10517  012022  0E00               	movlw	0
 10518  012024  0104               	movlb	4	; () banked
 10519  012026  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10520  012028  D002               	goto	l12118
 10521  01202A                     l12116:
 10522                           
 10523                           ; BSR set to: 4
 10524  01202A  0104               	movlb	4	; () banked
 10525  01202C  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10526  01202E                     l12118:
 10527                           
 10528                           ; BSR set to: 4
 10529  01202E  0E76               	movlw	low my_terminal_loop@command
 10530  012030  0100               	movlb	0	; () banked
 10531  012032  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10532  012034  0E01               	movlw	high my_terminal_loop@command
 10533  012036  0100               	movlb	0	; () banked
 10534  012038  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10535  01203A  EC8E  F0A9         	call	_ringbuf_pop	;wreg free
 10536  01203E  0101               	movlb	1	; () banked
 10537  012040  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10538  012042  0104               	movlb	4	; () banked
 10539  012044  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10540  012046  0D01               	mullw	1
 10541  012048  0E8E               	movlw	low my_terminal_loop@op1
 10542  01204A  24F3               	addwf	prodl,w,c
 10543  01204C  6ED9               	movwf	fsr2l,c
 10544  01204E  0E02               	movlw	high my_terminal_loop@op1
 10545  012050  20F4               	addwfc	prodh,w,c
 10546  012052  6EDA               	movwf	fsr2h,c
 10547  012054  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10548  012058  50DF               	movf	indf2,w,c
 10549  01205A  A4D8               	btfss	status,2,c
 10550  01205C  D7E6               	goto	l12116
 10551                           
 10552                           ; BSR set to: 4
 10553                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
 10554                           
 10555                           ; BSR set to: 4
 10556  01205E  0104               	movlb	4	; () banked
 10557  012060  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10558  012062  0D01               	mullw	1
 10559  012064  0E8E               	movlw	low my_terminal_loop@op1
 10560  012066  24F3               	addwf	prodl,w,c
 10561  012068  6ED9               	movwf	fsr2l,c
 10562  01206A  0E02               	movlw	high my_terminal_loop@op1
 10563  01206C  20F4               	addwfc	prodh,w,c
 10564  01206E  6EDA               	movwf	fsr2h,c
 10565  012070  0E00               	movlw	0
 10566  012072  6EDF               	movwf	indf2,c
 10567                           
 10568                           ; BSR set to: 4
 10569                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
 10570  012074  0E00               	movlw	0
 10571  012076  0104               	movlb	4	; () banked
 10572  012078  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10573  01207A  D002               	goto	l12126
 10574  01207C                     l12124:
 10575                           
 10576                           ; BSR set to: 4
 10577  01207C  0104               	movlb	4	; () banked
 10578  01207E  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10579  012080                     l12126:
 10580                           
 10581                           ; BSR set to: 4
 10582  012080  0E76               	movlw	low my_terminal_loop@command
 10583  012082  0100               	movlb	0	; () banked
 10584  012084  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10585  012086  0E01               	movlw	high my_terminal_loop@command
 10586  012088  0100               	movlb	0	; () banked
 10587  01208A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10588  01208C  EC8E  F0A9         	call	_ringbuf_pop	;wreg free
 10589  012090  0101               	movlb	1	; () banked
 10590  012092  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10591  012094  0104               	movlb	4	; () banked
 10592  012096  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10593  012098  0D01               	mullw	1
 10594  01209A  0EA2               	movlw	low my_terminal_loop@op2
 10595  01209C  24F3               	addwf	prodl,w,c
 10596  01209E  6ED9               	movwf	fsr2l,c
 10597  0120A0  0E02               	movlw	high my_terminal_loop@op2
 10598  0120A2  20F4               	addwfc	prodh,w,c
 10599  0120A4  6EDA               	movwf	fsr2h,c
 10600  0120A6  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10601  0120AA  50DF               	movf	indf2,w,c
 10602  0120AC  A4D8               	btfss	status,2,c
 10603  0120AE  D7E6               	goto	l12124
 10604                           
 10605                           ; BSR set to: 4
 10606                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
 10607                           
 10608                           ; BSR set to: 4
 10609  0120B0  0104               	movlb	4	; () banked
 10610  0120B2  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10611  0120B4  0D01               	mullw	1
 10612  0120B6  0EA2               	movlw	low my_terminal_loop@op2
 10613  0120B8  24F3               	addwf	prodl,w,c
 10614  0120BA  6ED9               	movwf	fsr2l,c
 10615  0120BC  0E02               	movlw	high my_terminal_loop@op2
 10616  0120BE  20F4               	addwfc	prodh,w,c
 10617  0120C0  6EDA               	movwf	fsr2h,c
 10618  0120C2  0E00               	movlw	0
 10619  0120C4  6EDF               	movwf	indf2,c
 10620                           
 10621                           ; BSR set to: 4
 10622                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
 10623  0120C6  0E00               	movlw	0
 10624  0120C8  0104               	movlb	4	; () banked
 10625  0120CA  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10626  0120CC  D002               	goto	l12134
 10627  0120CE                     l12132:
 10628                           
 10629                           ; BSR set to: 4
 10630  0120CE  0104               	movlb	4	; () banked
 10631  0120D0  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10632  0120D2                     l12134:
 10633                           
 10634                           ; BSR set to: 4
 10635  0120D2  0E76               	movlw	low my_terminal_loop@command
 10636  0120D4  0100               	movlb	0	; () banked
 10637  0120D6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10638  0120D8  0E01               	movlw	high my_terminal_loop@command
 10639  0120DA  0100               	movlb	0	; () banked
 10640  0120DC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10641  0120DE  EC8E  F0A9         	call	_ringbuf_pop	;wreg free
 10642  0120E2  0101               	movlb	1	; () banked
 10643  0120E4  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10644  0120E6  0104               	movlb	4	; () banked
 10645  0120E8  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10646  0120EA  0D01               	mullw	1
 10647  0120EC  0EB6               	movlw	low my_terminal_loop@op3
 10648  0120EE  24F3               	addwf	prodl,w,c
 10649  0120F0  6ED9               	movwf	fsr2l,c
 10650  0120F2  0E02               	movlw	high my_terminal_loop@op3
 10651  0120F4  20F4               	addwfc	prodh,w,c
 10652  0120F6  6EDA               	movwf	fsr2h,c
 10653  0120F8  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10654  0120FC  50DF               	movf	indf2,w,c
 10655  0120FE  A4D8               	btfss	status,2,c
 10656  012100  D7E6               	goto	l12132
 10657                           
 10658                           ; BSR set to: 4
 10659                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
 10660                           
 10661                           ; BSR set to: 4
 10662  012102  0104               	movlb	4	; () banked
 10663  012104  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10664  012106  0D01               	mullw	1
 10665  012108  0EB6               	movlw	low my_terminal_loop@op3
 10666  01210A  24F3               	addwf	prodl,w,c
 10667  01210C  6ED9               	movwf	fsr2l,c
 10668  01210E  0E02               	movlw	high my_terminal_loop@op3
 10669  012110  20F4               	addwfc	prodh,w,c
 10670  012112  6EDA               	movwf	fsr2h,c
 10671  012114  0E00               	movlw	0
 10672  012116  6EDF               	movwf	indf2,c
 10673                           
 10674                           ; BSR set to: 4
 10675                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
 10676  012118  C192  F0D9         	movff	my_terminal_loop@tx,command_operation@tx
 10677  01211C  C193  F0DA         	movff	my_terminal_loop@tx+1,command_operation@tx+1
 10678  012120  0E7A               	movlw	low my_terminal_loop@op0
 10679  012122  0100               	movlb	0	; () banked
 10680  012124  6FDB               	movwf	command_operation@op0& (0+255),b
 10681  012126  0E02               	movlw	high my_terminal_loop@op0
 10682  012128  0100               	movlb	0	; () banked
 10683  01212A  6FDC               	movwf	(command_operation@op0+1)& (0+255),b
 10684  01212C  0E8E               	movlw	low my_terminal_loop@op1
 10685  01212E  0100               	movlb	0	; () banked
 10686  012130  6FDD               	movwf	command_operation@op1& (0+255),b
 10687  012132  0E02               	movlw	high my_terminal_loop@op1
 10688  012134  0100               	movlb	0	; () banked
 10689  012136  6FDE               	movwf	(command_operation@op1+1)& (0+255),b
 10690  012138  0EA2               	movlw	low my_terminal_loop@op2
 10691  01213A  0100               	movlb	0	; () banked
 10692  01213C  6FDF               	movwf	command_operation@op2& (0+255),b
 10693  01213E  0E02               	movlw	high my_terminal_loop@op2
 10694  012140  0100               	movlb	0	; () banked
 10695  012142  6FE0               	movwf	(command_operation@op2+1)& (0+255),b
 10696  012144  0EB6               	movlw	low my_terminal_loop@op3
 10697  012146  0100               	movlb	0	; () banked
 10698  012148  6FE1               	movwf	command_operation@op3& (0+255),b
 10699  01214A  0E02               	movlw	high my_terminal_loop@op3
 10700  01214C  0100               	movlb	0	; () banked
 10701  01214E  6FE2               	movwf	(command_operation@op3+1)& (0+255),b
 10702  012150  EC3C  F084         	call	_command_operation	;wreg free
 10703                           
 10704                           ;My_header\My_terminal.h: 52: break;
 10705  012154  0012               	return	
 10706  012156                     l12140:
 10707                           
 10708                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
 10709  012156  0E76               	movlw	low my_terminal_loop@command
 10710  012158  0100               	movlb	0	; () banked
 10711  01215A  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10712  01215C  0E01               	movlw	high my_terminal_loop@command
 10713  01215E  0100               	movlb	0	; () banked
 10714  012160  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10715  012162  0E00               	movlw	0
 10716  012164  0100               	movlb	0	; () banked
 10717  012166  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10718  012168  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10719                           
 10720                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
 10721  01216C  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10722  012170  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10723  012174  0E20               	movlw	32
 10724  012176  0100               	movlb	0	; () banked
 10725  012178  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10726  01217A  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10727                           
 10728                           ;My_header\My_terminal.h: 56: break;
 10729  01217E  0012               	return	
 10730  012180                     l12142:
 10731                           
 10732                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
 10733  012180  0E76               	movlw	low my_terminal_loop@command
 10734  012182  0100               	movlb	0	; () banked
 10735  012184  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
 10736  012186  0E01               	movlw	high my_terminal_loop@command
 10737  012188  0100               	movlb	0	; () banked
 10738  01218A  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
 10739  01218C  ECD6  F0B0         	call	_ringbuf_backspace	;wreg free
 10740                           
 10741                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
 10742  012190  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
 10743  012194  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
 10744  012198  0ED8               	movlw	low STR_2
 10745  01219A  0100               	movlb	0	; () banked
 10746  01219C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10747  01219E  0EFF               	movlw	high STR_2
 10748  0121A0  0100               	movlb	0	; () banked
 10749  0121A2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10750  0121A4  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 10751                           
 10752                           ;My_header\My_terminal.h: 60: break;
 10753  0121A8  0012               	return	
 10754  0121AA                     l12146:
 10755                           
 10756                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
 10757  0121AA  0E00               	movlw	0
 10758  0121AC  0104               	movlb	4	; () banked
 10759  0121AE  6F66               	movwf	my_terminal_loop@i_4124& (0+255),b
 10760  0121B0  D00E               	goto	l12152
 10761  0121B2                     l12148:
 10762  0121B2  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
 10763  0121B6  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
 10764  0121BA  0ED8               	movlw	low STR_2
 10765  0121BC  0100               	movlb	0	; () banked
 10766  0121BE  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10767  0121C0  0EFF               	movlw	high STR_2
 10768  0121C2  0100               	movlb	0	; () banked
 10769  0121C4  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10770  0121C6  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 10771  0121CA  0104               	movlb	4	; () banked
 10772  0121CC  2B66               	incf	my_terminal_loop@i_4124& (0+255),f,b
 10773  0121CE                     l12152:
 10774                           
 10775                           ; BSR set to: 4
 10776  0121CE  0E76               	movlw	low my_terminal_loop@command
 10777  0121D0  0100               	movlb	0	; () banked
 10778  0121D2  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10779  0121D4  0E01               	movlw	high my_terminal_loop@command
 10780  0121D6  0100               	movlb	0	; () banked
 10781  0121D8  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10782  0121DA  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 10783  0121DE  0104               	movlb	4	; () banked
 10784  0121E0  5166               	movf	my_terminal_loop@i_4124& (0+255),w,b
 10785  0121E2  0101               	movlb	1	; () banked
 10786  0121E4  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10787  0121E6  6B97               	clrf	(??_my_terminal_loop+1)& (0+255),b
 10788  0121E8  0100               	movlb	0	; () banked
 10789  0121EA  5160               	movf	?_ringbuf_num& (0+255),w,b
 10790  0121EC  0101               	movlb	1	; () banked
 10791  0121EE  5D96               	subwf	??_my_terminal_loop& (0+255),w,b
 10792  0121F0  0100               	movlb	0	; () banked
 10793  0121F2  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
 10794  0121F4  0101               	movlb	1	; () banked
 10795  0121F6  5997               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
 10796  0121F8  A0D8               	btfss	status,0,c
 10797  0121FA  D7DB               	goto	l12148
 10798                           
 10799                           ; BSR set to: 1
 10800                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
 10801                           
 10802                           ; BSR set to: 1
 10803  0121FC  0E76               	movlw	low my_terminal_loop@command
 10804  0121FE  0100               	movlb	0	; () banked
 10805  012200  6F60               	movwf	ringbuf_delete@rb& (0+255),b
 10806  012202  0E01               	movlw	high my_terminal_loop@command
 10807  012204  0100               	movlb	0	; () banked
 10808  012206  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
 10809  012208  EC48  F0B9         	call	_ringbuf_delete	;wreg free
 10810                           
 10811                           ;My_header\My_terminal.h: 64: break;
 10812  01220C  0012               	return	
 10813  01220E                     l12156:
 10814                           
 10815                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
 10816  01220E  0E1F               	movlw	31
 10817  012210  0104               	movlb	4	; () banked
 10818  012212  6567               	cpfsgt	my_terminal_loop@ascii& (0+255),b
 10819  012214  0012               	return	
 10820                           
 10821                           ; BSR set to: 4
 10822  012216  0E7F               	movlw	127
 10823  012218  0104               	movlb	4	; () banked
 10824  01221A  6167               	cpfslt	my_terminal_loop@ascii& (0+255),b
 10825  01221C  0012               	return	
 10826                           
 10827                           ; BSR set to: 4
 10828                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
 10829  01221E  0E76               	movlw	low my_terminal_loop@command
 10830  012220  0100               	movlb	0	; () banked
 10831  012222  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10832  012224  0E01               	movlw	high my_terminal_loop@command
 10833  012226  0100               	movlb	0	; () banked
 10834  012228  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10835  01222A  C467  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
 10836  01222E  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10837                           
 10838                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
 10839  012232  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10840  012236  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10841  01223A  C467  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
 10842  01223E  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 10843                           
 10844                           ;My_header\My_terminal.h: 71: }
 10845                           
 10846                           ;My_header\My_terminal.h: 69: }
 10847                           ;My_header\My_terminal.h: 70: break;
 10848  012242  0012               	return	
 10849  012244                     l12164:
 10850  012244  0104               	movlb	4	; () banked
 10851  012246  5167               	movf	my_terminal_loop@ascii& (0+255),w,b
 10852                           
 10853                           ; Switch size 1, requested type "space"
 10854                           ; Number of cases is 4, Range of values is 8 to 127
 10855                           ; switch strategies available:
 10856                           ; Name         Instructions Cycles
 10857                           ; simple_byte           13     7 (average)
 10858                           ;	Chosen strategy is simple_byte
 10859  012248  0A08               	xorlw	8	; case 8
 10860  01224A  B4D8               	btfsc	status,2,c
 10861  01224C  D799               	goto	l12142
 10862  01224E  0A05               	xorlw	5	; case 13
 10863  012250  B4D8               	btfsc	status,2,c
 10864  012252  D682               	goto	l12104
 10865  012254  0A2D               	xorlw	45	; case 32
 10866  012256  B4D8               	btfsc	status,2,c
 10867  012258  D77E               	goto	l12140
 10868  01225A  0A5F               	xorlw	95	; case 127
 10869  01225C  B4D8               	btfsc	status,2,c
 10870  01225E  D7A5               	goto	l12146
 10871  012260  D7D6               	goto	l12156
 10872  012262                     __end_of_my_terminal_loop:
 10873                           	opt stack 0
 10874                           tblptru	equ	0xFF8
 10875                           tblptrh	equ	0xFF7
 10876                           tblptrl	equ	0xFF6
 10877                           tablat	equ	0xFF5
 10878                           prodh	equ	0xFF4
 10879                           prodl	equ	0xFF3
 10880                           intcon	equ	0xFF2
 10881                           postinc0	equ	0xFEE
 10882                           wreg	equ	0xFE8
 10883                           indf1	equ	0xFE7
 10884                           postdec1	equ	0xFE5
 10885                           fsr1h	equ	0xFE2
 10886                           fsr1l	equ	0xFE1
 10887                           indf2	equ	0xFDF
 10888                           postinc2	equ	0xFDE
 10889                           postdec2	equ	0xFDD
 10890                           plusw2	equ	0xFDB
 10891                           fsr2h	equ	0xFDA
 10892                           fsr2l	equ	0xFD9
 10893                           status	equ	0xFD8
 10894                           
 10895 ;; *************** function _ringbuf_delete *****************
 10896 ;; Defined at:
 10897 ;;		line 85 in file "../My_header\My_ringbuf.h"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10900 ;;		 -> my_terminal_loop@command(8), 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;		None               void
 10905 ;; Registers used:
 10906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10916 ;;Total ram usage:        2 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:   11
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_my_terminal_loop
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text27
 10927  017290                     __ptext27:
 10928                           	opt stack 0
 10929  017290                     _ringbuf_delete:
 10930                           	opt stack 18
 10931                           
 10932                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
 10933                           
 10934                           ;incstack = 0
 10935  017290  0100               	movlb	0	; () banked
 10936  017292  EE20 F006          	lfsr	2,6
 10937  017296  5160               	movf	ringbuf_delete@rb& (0+255),w,b
 10938  017298  26D9               	addwf	fsr2l,f,c
 10939  01729A  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
 10940  01729C  22DA               	addwfc	fsr2h,f,c
 10941  01729E  0100               	movlb	0	; () banked
 10942  0172A0  EE10 F004          	lfsr	1,4
 10943  0172A4  5160               	movf	ringbuf_delete@rb& (0+255),w,b
 10944  0172A6  26E1               	addwf	fsr1l,f,c
 10945  0172A8  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
 10946  0172AA  22E2               	addwfc	fsr1h,f,c
 10947  0172AC  CFDE FFE6          	movff	postinc2,postinc1
 10948  0172B0  CFDD FFE5          	movff	postdec2,postdec1
 10949                           
 10950                           ; BSR set to: 0
 10951  0172B4  0012               	return		;funcret
 10952  0172B6                     __end_of_ringbuf_delete:
 10953                           	opt stack 0
 10954                           tblptru	equ	0xFF8
 10955                           tblptrh	equ	0xFF7
 10956                           tblptrl	equ	0xFF6
 10957                           tablat	equ	0xFF5
 10958                           prodh	equ	0xFF4
 10959                           prodl	equ	0xFF3
 10960                           intcon	equ	0xFF2
 10961                           postinc0	equ	0xFEE
 10962                           wreg	equ	0xFE8
 10963                           indf1	equ	0xFE7
 10964                           postinc1	equ	0xFE6
 10965                           postdec1	equ	0xFE5
 10966                           fsr1h	equ	0xFE2
 10967                           fsr1l	equ	0xFE1
 10968                           indf2	equ	0xFDF
 10969                           postinc2	equ	0xFDE
 10970                           postdec2	equ	0xFDD
 10971                           plusw2	equ	0xFDB
 10972                           fsr2h	equ	0xFDA
 10973                           fsr2l	equ	0xFD9
 10974                           status	equ	0xFD8
 10975                           
 10976 ;; *************** function _ringbuf_backspace *****************
 10977 ;; Defined at:
 10978 ;;		line 78 in file "../My_header\My_ringbuf.h"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10981 ;;		 -> my_terminal_loop@command(8), 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;		None
 10984 ;; Return value:  Size  Location     Type
 10985 ;;		None               void
 10986 ;; Registers used:
 10987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10995 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10997 ;;Total ram usage:        6 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; Hardware stack levels required when called:   12
 11000 ;; This function calls:
 11001 ;;		_ringbuf_num
 11002 ;; This function is called by:
 11003 ;;		_my_terminal_loop
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           	psect	text28
 11008  0161AC                     __ptext28:
 11009                           	opt stack 0
 11010  0161AC                     _ringbuf_backspace:
 11011                           	opt stack 17
 11012                           
 11013                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;incstack = 0
 11017  0161AC  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
 11018  0161B0  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
 11019  0161B4  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 11020  0161B8  0100               	movlb	0	; () banked
 11021  0161BA  5160               	movf	?_ringbuf_num& (0+255),w,b
 11022  0161BC  0100               	movlb	0	; () banked
 11023  0161BE  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11024  0161C0  B4D8               	btfsc	status,2,c
 11025  0161C2  0012               	return	
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
 11029  0161C4  0100               	movlb	0	; () banked
 11030  0161C6  EE20 F004          	lfsr	2,4
 11031  0161CA  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11032  0161CC  26D9               	addwf	fsr2l,f,c
 11033  0161CE  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11034  0161D0  22DA               	addwfc	fsr2h,f,c
 11035  0161D2  50DE               	movf	postinc2,w,c
 11036  0161D4  10DE               	iorwf	postinc2,w,c
 11037  0161D6  B4D8               	btfsc	status,2,c
 11038  0161D8  D00B               	goto	l11490
 11039                           
 11040                           ; BSR set to: 0
 11041  0161DA  0100               	movlb	0	; () banked
 11042  0161DC  EE20 F004          	lfsr	2,4
 11043  0161E0  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11044  0161E2  26D9               	addwf	fsr2l,f,c
 11045  0161E4  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11046  0161E6  22DA               	addwfc	fsr2h,f,c
 11047  0161E8  06DE               	decf	postinc2,f,c
 11048  0161EA  0E00               	movlw	0
 11049  0161EC  5ADD               	subwfb	postdec2,f,c
 11050  0161EE  0012               	return	
 11051  0161F0                     l11490:
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
 11055  0161F0  0EFF               	movlw	255
 11056  0161F2  0100               	movlb	0	; () banked
 11057  0161F4  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
 11058  0161F6  0EFF               	movlw	255
 11059  0161F8  0100               	movlb	0	; () banked
 11060  0161FA  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
 11061  0161FC  0100               	movlb	0	; () banked
 11062  0161FE  EE20 F002          	lfsr	2,2
 11063  016202  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11064  016204  26D9               	addwf	fsr2l,f,c
 11065  016206  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11066  016208  22DA               	addwfc	fsr2h,f,c
 11067  01620A  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
 11068  01620E  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
 11069  016212  0100               	movlb	0	; () banked
 11070  016214  516A               	movf	??_ringbuf_backspace& (0+255),w,b
 11071  016216  0100               	movlb	0	; () banked
 11072  016218  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
 11073  01621A  0100               	movlb	0	; () banked
 11074  01621C  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
 11075  01621E  0100               	movlb	0	; () banked
 11076  016220  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
 11077  016222  0100               	movlb	0	; () banked
 11078  016224  EE20 F004          	lfsr	2,4
 11079  016228  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11080  01622A  26D9               	addwf	fsr2l,f,c
 11081  01622C  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11082  01622E  22DA               	addwfc	fsr2h,f,c
 11083  016230  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
 11084  016234  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
 11085                           
 11086                           ; BSR set to: 0
 11087  016238  0012               	return	
 11088  01623A                     __end_of_ringbuf_backspace:
 11089                           	opt stack 0
 11090                           tblptru	equ	0xFF8
 11091                           tblptrh	equ	0xFF7
 11092                           tblptrl	equ	0xFF6
 11093                           tablat	equ	0xFF5
 11094                           prodh	equ	0xFF4
 11095                           prodl	equ	0xFF3
 11096                           intcon	equ	0xFF2
 11097                           postinc0	equ	0xFEE
 11098                           wreg	equ	0xFE8
 11099                           indf1	equ	0xFE7
 11100                           postinc1	equ	0xFE6
 11101                           postdec1	equ	0xFE5
 11102                           fsr1h	equ	0xFE2
 11103                           fsr1l	equ	0xFE1
 11104                           indf2	equ	0xFDF
 11105                           postinc2	equ	0xFDE
 11106                           postdec2	equ	0xFDD
 11107                           plusw2	equ	0xFDB
 11108                           fsr2h	equ	0xFDA
 11109                           fsr2l	equ	0xFD9
 11110                           status	equ	0xFD8
 11111                           
 11112 ;; *************** function _command_operation *****************
 11113 ;; Defined at:
 11114 ;;		line 365 in file "tasks.h"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  tx              2  121[BANK0 ] PTR struct ringbuf
 11117 ;;		 -> usb_tx(8), 
 11118 ;;  op0             2  123[BANK0 ] PTR unsigned char 
 11119 ;;		 -> my_terminal_loop@op0(20), 
 11120 ;;  op1             2  125[BANK0 ] PTR unsigned char 
 11121 ;;		 -> my_terminal_loop@op1(20), 
 11122 ;;  op2             2  127[BANK0 ] PTR unsigned char 
 11123 ;;		 -> my_terminal_loop@op2(20), 
 11124 ;;  op3             2  129[BANK0 ] PTR unsigned char 
 11125 ;;		 -> my_terminal_loop@op3(20), 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  percentage      1  131[BANK0 ] unsigned char 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;		None               void
 11130 ;; Registers used:
 11131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11137 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11140 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11141 ;;Total ram usage:       11 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:   18
 11144 ;; This function calls:
 11145 ;;		_bootload
 11146 ;;		_command_get_data
 11147 ;;		_command_time
 11148 ;;		_ctmu_set_ratio
 11149 ;;		_my_atoi
 11150 ;;		_my_strcmp
 11151 ;;		_ringbuf_put_str
 11152 ;; This function is called by:
 11153 ;;		_my_terminal_loop
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text29
 11158  010878                     __ptext29:
 11159                           	opt stack 0
 11160  010878                     _command_operation:
 11161                           	opt stack 11
 11162                           
 11163                           ;tasks.h: 366: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?")) {
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;incstack = 0
 11167  010878  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11168  01087C  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11169  010880  0EBF               	movlw	low STR_39
 11170  010882  0100               	movlb	0	; () banked
 11171  010884  6F62               	movwf	my_strcmp@str2& (0+255),b
 11172  010886  0EFF               	movlw	high STR_39
 11173  010888  0100               	movlb	0	; () banked
 11174  01088A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11175  01088C  EC64  F0AE         	call	_my_strcmp	;wreg free
 11176  010890  0900               	iorlw	0
 11177  010892  B4D8               	btfsc	status,2,c
 11178  010894  D00F               	goto	l11532
 11179  010896  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11180  01089A  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11181  01089E  0EF7               	movlw	low STR_40
 11182  0108A0  0100               	movlb	0	; () banked
 11183  0108A2  6F62               	movwf	my_strcmp@str2& (0+255),b
 11184  0108A4  0EFF               	movlw	high STR_40
 11185  0108A6  0100               	movlb	0	; () banked
 11186  0108A8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11187  0108AA  EC64  F0AE         	call	_my_strcmp	;wreg free
 11188  0108AE  0900               	iorlw	0
 11189  0108B0  A4D8               	btfss	status,2,c
 11190  0108B2  D00C               	goto	l11534
 11191  0108B4                     l11532:
 11192                           
 11193                           ;tasks.h: 367: ringbuf_put_str(tx,
 11194                           ;tasks.h: 368: "\t****************************\n"
 11195                           ;tasks.h: 369: "\t**** Charge Station 6.7 ****\n"
 11196                           ;tasks.h: 370: "\t**** Made by @Ryokeri   ****\n"
 11197                           ;tasks.h: 371: "\t****************************\n\n"
 11198                           ;tasks.h: 372: "\tcommand \topeland1\topeland2\n\n"
 11199                           ;tasks.h: 373: "\tprint_time(t)\n"
 11200                           ;tasks.h: 374: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
 11201                           ;tasks.h: 375: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
 11202  0108B4  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11203  0108B8  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11204  0108BC  0EF4               	movlw	low STR_41
 11205  0108BE  0100               	movlb	0	; () banked
 11206  0108C0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11207  0108C2  0EFA               	movlw	high STR_41
 11208  0108C4  0100               	movlb	0	; () banked
 11209  0108C6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11210  0108C8  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11211  0108CC                     l11534:
 11212                           
 11213                           ;tasks.h: 383: }
 11214                           ;tasks.h: 384: command_time(tx, op0, op1, op2);
 11215  0108CC  C0D9  F0D0         	movff	command_operation@tx,command_time@tx
 11216  0108D0  C0DA  F0D1         	movff	command_operation@tx+1,command_time@tx+1
 11217  0108D4  C0DB  F0D2         	movff	command_operation@op0,command_time@op0
 11218  0108D8  C0DC  F0D3         	movff	command_operation@op0+1,command_time@op0+1
 11219  0108DC  C0DD  F0D4         	movff	command_operation@op1,command_time@op1
 11220  0108E0  C0DE  F0D5         	movff	command_operation@op1+1,command_time@op1+1
 11221  0108E4  C0DF  F0D6         	movff	command_operation@op2,command_time@op2
 11222  0108E8  C0E0  F0D7         	movff	command_operation@op2+1,command_time@op2+1
 11223  0108EC  EC31  F091         	call	_command_time	;wreg free
 11224                           
 11225                           ;tasks.h: 385: if (!my_strcmp(op0, "RESET();")) {
 11226  0108F0  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11227  0108F4  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11228  0108F8  0E43               	movlw	low STR_42
 11229  0108FA  0100               	movlb	0	; () banked
 11230  0108FC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11231  0108FE  0EFF               	movlw	high STR_42
 11232  010900  0100               	movlb	0	; () banked
 11233  010902  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11234  010904  EC64  F0AE         	call	_my_strcmp	;wreg free
 11235  010908  0900               	iorlw	0
 11236  01090A  B4D8               	btfsc	status,2,c
 11237  01090C  00FF               	reset		;# 
 11238                           
 11239                           ;tasks.h: 387: }
 11240                           ;tasks.h: 388: if (!my_strcmp(op0, "bootload")) {
 11241  01090E  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11242  010912  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11243  010916  0E4C               	movlw	low STR_43
 11244  010918  0100               	movlb	0	; () banked
 11245  01091A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11246  01091C  0EFF               	movlw	high STR_43
 11247  01091E  0100               	movlb	0	; () banked
 11248  010920  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11249  010922  EC64  F0AE         	call	_my_strcmp	;wreg free
 11250  010926  0900               	iorlw	0
 11251  010928  B4D8               	btfsc	status,2,c
 11252                           
 11253                           ;tasks.h: 389: bootload();
 11254  01092A  ECD5  F0B6         	call	_bootload	;wreg free
 11255                           
 11256                           ;tasks.h: 390: }
 11257                           ;tasks.h: 391: if (!my_strcmp(op0, "od") || !my_strcmp(op0, "output_data")) {
 11258  01092E  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11259  010932  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11260  010936  0EEF               	movlw	low STR_44
 11261  010938  0100               	movlb	0	; () banked
 11262  01093A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11263  01093C  0EFF               	movlw	high STR_44
 11264  01093E  0100               	movlb	0	; () banked
 11265  010940  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11266  010942  EC64  F0AE         	call	_my_strcmp	;wreg free
 11267  010946  0900               	iorlw	0
 11268  010948  B4D8               	btfsc	status,2,c
 11269  01094A  D00F               	goto	l11548
 11270  01094C  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11271  010950  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11272  010954  0E15               	movlw	low STR_45
 11273  010956  0100               	movlb	0	; () banked
 11274  010958  6F62               	movwf	my_strcmp@str2& (0+255),b
 11275  01095A  0EFF               	movlw	high STR_45
 11276  01095C  0100               	movlb	0	; () banked
 11277  01095E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11278  010960  EC64  F0AE         	call	_my_strcmp	;wreg free
 11279  010964  0900               	iorlw	0
 11280  010966  A4D8               	btfss	status,2,c
 11281  010968  D002               	goto	l11550
 11282  01096A                     l11548:
 11283                           
 11284                           ;tasks.h: 392: terminal_data_out = 1;
 11285  01096A  0E01               	movlw	1
 11286  01096C  6E28               	movwf	_terminal_data_out,c
 11287  01096E                     l11550:
 11288                           
 11289                           ;tasks.h: 393: }
 11290                           ;tasks.h: 394: if (!my_strcmp(op0, "")) {
 11291  01096E  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11292  010972  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11293  010976  0EDB               	movlw	low (STR_2+3)
 11294  010978  0100               	movlb	0	; () banked
 11295  01097A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11296  01097C  0EFF               	movlw	high (STR_2+3)
 11297  01097E  0100               	movlb	0	; () banked
 11298  010980  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11299  010982  EC64  F0AE         	call	_my_strcmp	;wreg free
 11300  010986  0900               	iorlw	0
 11301  010988  A4D8               	btfss	status,2,c
 11302  01098A  D002               	goto	l11554
 11303                           
 11304                           ;tasks.h: 395: terminal_data_out = 0;
 11305  01098C  0E00               	movlw	0
 11306  01098E  6E28               	movwf	_terminal_data_out,c
 11307  010990                     l11554:
 11308                           
 11309                           ;tasks.h: 396: }
 11310                           ;tasks.h: 397: if (!my_strcmp(op0, "touch")) {
 11311  010990  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11312  010994  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11313  010998  0EA2               	movlw	low STR_47
 11314  01099A  0100               	movlb	0	; () banked
 11315  01099C  6F62               	movwf	my_strcmp@str2& (0+255),b
 11316  01099E  0EFF               	movlw	high STR_47
 11317  0109A0  0100               	movlb	0	; () banked
 11318  0109A2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11319  0109A4  EC64  F0AE         	call	_my_strcmp	;wreg free
 11320  0109A8  0900               	iorlw	0
 11321  0109AA  A4D8               	btfss	status,2,c
 11322  0109AC  D079               	goto	l11580
 11323                           
 11324                           ;tasks.h: 398: if (!my_strcmp(op1, "initialize") || !my_strcmp(op1, "init")) {
 11325  0109AE  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11326  0109B2  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11327  0109B6  0E38               	movlw	low STR_48
 11328  0109B8  0100               	movlb	0	; () banked
 11329  0109BA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11330  0109BC  0EFF               	movlw	high STR_48
 11331  0109BE  0100               	movlb	0	; () banked
 11332  0109C0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11333  0109C2  EC64  F0AE         	call	_my_strcmp	;wreg free
 11334  0109C6  0900               	iorlw	0
 11335  0109C8  B4D8               	btfsc	status,2,c
 11336  0109CA  D00F               	goto	l11560
 11337  0109CC  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11338  0109D0  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11339  0109D4  0ED3               	movlw	low STR_49
 11340  0109D6  0100               	movlb	0	; () banked
 11341  0109D8  6F62               	movwf	my_strcmp@str2& (0+255),b
 11342  0109DA  0EFF               	movlw	high STR_49
 11343  0109DC  0100               	movlb	0	; () banked
 11344  0109DE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11345  0109E0  EC64  F0AE         	call	_my_strcmp	;wreg free
 11346  0109E4  0900               	iorlw	0
 11347  0109E6  A4D8               	btfss	status,2,c
 11348  0109E8  D02D               	goto	l11572
 11349  0109EA                     l11560:
 11350                           
 11351                           ;tasks.h: 399: uint8_t percentage = my_atoi(op2);
 11352  0109EA  C0DF  F07C         	movff	command_operation@op2,my_atoi@str
 11353  0109EE  C0E0  F07D         	movff	command_operation@op2+1,my_atoi@str+1
 11354  0109F2  EC07  F0AF         	call	_my_atoi	;wreg free
 11355  0109F6  0100               	movlb	0	; () banked
 11356  0109F8  517C               	movf	?_my_atoi& (0+255),w,b
 11357  0109FA  0100               	movlb	0	; () banked
 11358  0109FC  6FE3               	movwf	command_operation@percentage& (0+255),b
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;tasks.h: 400: if (percentage <= 100) {
 11362  0109FE  0E65               	movlw	101
 11363  010A00  0100               	movlb	0	; () banked
 11364  010A02  61E3               	cpfslt	command_operation@percentage& (0+255),b
 11365  010A04  D013               	goto	l11570
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;tasks.h: 401: ctmu_ratio = percentage;
 11369  010A06  C0E3  F0F5         	movff	command_operation@percentage,_ctmu_ratio
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;tasks.h: 402: ctmu_set_ratio(ctmu_ratio);
 11373  010A0A  0100               	movlb	0	; () banked
 11374  010A0C  51F5               	movf	_ctmu_ratio& (0+255),w,b
 11375  010A0E  ECE9  F0A4         	call	_ctmu_set_ratio
 11376                           
 11377                           ;tasks.h: 403: ringbuf_put_str(tx, "\tinitializing complete\n");
 11378  010A12  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11379  010A16  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11380  010A1A  0E10               	movlw	low STR_50
 11381  010A1C  0100               	movlb	0	; () banked
 11382  010A1E  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11383  010A20  0EFE               	movlw	high STR_50
 11384  010A22  0100               	movlb	0	; () banked
 11385  010A24  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11386  010A26  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11387                           
 11388                           ;tasks.h: 404: } else {
 11389  010A2A  D00C               	goto	l11572
 11390  010A2C                     l11570:
 11391                           
 11392                           ;tasks.h: 405: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n");
 11393  010A2C  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11394  010A30  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11395  010A34  0E8F               	movlw	low STR_51
 11396  010A36  0100               	movlb	0	; () banked
 11397  010A38  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11398  010A3A  0EFD               	movlw	high STR_51
 11399  010A3C  0100               	movlb	0	; () banked
 11400  010A3E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11401  010A40  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11402  010A44                     l11572:
 11403                           
 11404                           ;tasks.h: 406: }
 11405                           ;tasks.h: 407: }
 11406                           ;tasks.h: 408: if (!my_strcmp(op1, "reset") || !my_strcmp(op1, "r")) {
 11407  010A44  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11408  010A48  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11409  010A4C  0EAE               	movlw	low STR_52
 11410  010A4E  0100               	movlb	0	; () banked
 11411  010A50  6F62               	movwf	my_strcmp@str2& (0+255),b
 11412  010A52  0EFF               	movlw	high STR_52
 11413  010A54  0100               	movlb	0	; () banked
 11414  010A56  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11415  010A58  EC64  F0AE         	call	_my_strcmp	;wreg free
 11416  010A5C  0900               	iorlw	0
 11417  010A5E  B4D8               	btfsc	status,2,c
 11418  010A60  D00F               	goto	l11576
 11419  010A62  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11420  010A66  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11421  010A6A  0EC7               	movlw	low (STR_12+3)
 11422  010A6C  0100               	movlb	0	; () banked
 11423  010A6E  6F62               	movwf	my_strcmp@str2& (0+255),b
 11424  010A70  0EFF               	movlw	high (STR_12+3)
 11425  010A72  0100               	movlb	0	; () banked
 11426  010A74  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11427  010A76  EC64  F0AE         	call	_my_strcmp	;wreg free
 11428  010A7A  0900               	iorlw	0
 11429  010A7C  A4D8               	btfss	status,2,c
 11430  010A7E  D010               	goto	l11580
 11431  010A80                     l11576:
 11432                           
 11433                           ;tasks.h: 409: ctmu_set_ratio(ctmu_ratio);
 11434  010A80  0100               	movlb	0	; () banked
 11435  010A82  51F5               	movf	_ctmu_ratio& (0+255),w,b
 11436  010A84  ECE9  F0A4         	call	_ctmu_set_ratio
 11437                           
 11438                           ;tasks.h: 410: ringbuf_put_str(tx, "\tseting complete\n");
 11439  010A88  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11440  010A8C  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11441  010A90  0E3B               	movlw	low STR_54
 11442  010A92  0100               	movlb	0	; () banked
 11443  010A94  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11444  010A96  0EFE               	movlw	high STR_54
 11445  010A98  0100               	movlb	0	; () banked
 11446  010A9A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11447  010A9C  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11448  010AA0                     l11580:
 11449                           
 11450                           ;tasks.h: 411: }
 11451                           ;tasks.h: 412: }
 11452                           ;tasks.h: 413: if (!my_strcmp(op0, "display") || !my_strcmp(op0, "d")) {
 11453  010AA0  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11454  010AA4  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11455  010AA8  0E66               	movlw	low STR_55
 11456  010AAA  0100               	movlb	0	; () banked
 11457  010AAC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11458  010AAE  0EFF               	movlw	high STR_55
 11459  010AB0  0100               	movlb	0	; () banked
 11460  010AB2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11461  010AB4  EC64  F0AE         	call	_my_strcmp	;wreg free
 11462  010AB8  0900               	iorlw	0
 11463  010ABA  B4D8               	btfsc	status,2,c
 11464  010ABC  D00F               	goto	l11584
 11465  010ABE  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11466  010AC2  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11467  010AC6  0EF4               	movlw	low (STR_133+30)
 11468  010AC8  0100               	movlb	0	; () banked
 11469  010ACA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11470  010ACC  0EFD               	movlw	high (STR_133+30)
 11471  010ACE  0100               	movlb	0	; () banked
 11472  010AD0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11473  010AD2  EC64  F0AE         	call	_my_strcmp	;wreg free
 11474  010AD6  0900               	iorlw	0
 11475  010AD8  A4D8               	btfss	status,2,c
 11476  010ADA  0012               	return	
 11477  010ADC                     l11584:
 11478                           
 11479                           ;tasks.h: 414: if (!my_strcmp(op1, "help") || !my_strcmp(op1, "?")) {
 11480  010ADC  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11481  010AE0  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11482  010AE4  0EBF               	movlw	low STR_39
 11483  010AE6  0100               	movlb	0	; () banked
 11484  010AE8  6F62               	movwf	my_strcmp@str2& (0+255),b
 11485  010AEA  0EFF               	movlw	high STR_39
 11486  010AEC  0100               	movlb	0	; () banked
 11487  010AEE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11488  010AF0  EC64  F0AE         	call	_my_strcmp	;wreg free
 11489  010AF4  0900               	iorlw	0
 11490  010AF6  B4D8               	btfsc	status,2,c
 11491  010AF8  D00F               	goto	l11588
 11492  010AFA  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11493  010AFE  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11494  010B02  0EF7               	movlw	low STR_40
 11495  010B04  0100               	movlb	0	; () banked
 11496  010B06  6F62               	movwf	my_strcmp@str2& (0+255),b
 11497  010B08  0EFF               	movlw	high STR_40
 11498  010B0A  0100               	movlb	0	; () banked
 11499  010B0C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11500  010B0E  EC64  F0AE         	call	_my_strcmp	;wreg free
 11501  010B12  0900               	iorlw	0
 11502  010B14  A4D8               	btfss	status,2,c
 11503  010B16  D00C               	goto	l11590
 11504  010B18                     l11588:
 11505                           
 11506                           ;tasks.h: 415: ringbuf_put_str(tx, "\tleft(l) or center(c) or right(r)\n");
 11507  010B18  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11508  010B1C  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11509  010B20  0EB3               	movlw	low STR_59
 11510  010B22  0100               	movlb	0	; () banked
 11511  010B24  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11512  010B26  0EFD               	movlw	high STR_59
 11513  010B28  0100               	movlb	0	; () banked
 11514  010B2A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11515  010B2C  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11516  010B30                     l11590:
 11517                           
 11518                           ;tasks.h: 416: }
 11519                           ;tasks.h: 417: if (!my_strcmp(op1, "left") || !my_strcmp(op1, "l")) {
 11520  010B30  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11521  010B34  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11522  010B38  0ECE               	movlw	low STR_60
 11523  010B3A  0100               	movlb	0	; () banked
 11524  010B3C  6F62               	movwf	my_strcmp@str2& (0+255),b
 11525  010B3E  0EFF               	movlw	high STR_60
 11526  010B40  0100               	movlb	0	; () banked
 11527  010B42  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11528  010B44  EC64  F0AE         	call	_my_strcmp	;wreg free
 11529  010B48  0900               	iorlw	0
 11530  010B4A  B4D8               	btfsc	status,2,c
 11531  010B4C  D00F               	goto	l11594
 11532  010B4E  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11533  010B52  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11534  010B56  0EFB               	movlw	low STR_61
 11535  010B58  0100               	movlb	0	; () banked
 11536  010B5A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11537  010B5C  0EFF               	movlw	high STR_61
 11538  010B5E  0100               	movlb	0	; () banked
 11539  010B60  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11540  010B62  EC64  F0AE         	call	_my_strcmp	;wreg free
 11541  010B66  0900               	iorlw	0
 11542  010B68  A4D8               	btfss	status,2,c
 11543  010B6A  D0A8               	goto	l11618
 11544  010B6C                     l11594:
 11545                           
 11546                           ;tasks.h: 418: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 11547  010B6C  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11548  010B70  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11549  010B74  0EBF               	movlw	low STR_39
 11550  010B76  0100               	movlb	0	; () banked
 11551  010B78  6F62               	movwf	my_strcmp@str2& (0+255),b
 11552  010B7A  0EFF               	movlw	high STR_39
 11553  010B7C  0100               	movlb	0	; () banked
 11554  010B7E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11555  010B80  EC64  F0AE         	call	_my_strcmp	;wreg free
 11556  010B84  0900               	iorlw	0
 11557  010B86  B4D8               	btfsc	status,2,c
 11558  010B88  D00F               	goto	l11598
 11559  010B8A  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11560  010B8E  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11561  010B92  0EF7               	movlw	low STR_40
 11562  010B94  0100               	movlb	0	; () banked
 11563  010B96  6F62               	movwf	my_strcmp@str2& (0+255),b
 11564  010B98  0EFF               	movlw	high STR_40
 11565  010B9A  0100               	movlb	0	; () banked
 11566  010B9C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11567  010B9E  EC64  F0AE         	call	_my_strcmp	;wreg free
 11568  010BA2  0900               	iorlw	0
 11569  010BA4  A4D8               	btfss	status,2,c
 11570  010BA6  D00C               	goto	l11600
 11571  010BA8                     l11598:
 11572                           
 11573                           ;tasks.h: 419: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 11574  010BA8  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11575  010BAC  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11576  010BB0  0E2C               	movlw	low STR_64
 11577  010BB2  0100               	movlb	0	; () banked
 11578  010BB4  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11579  010BB6  0EFD               	movlw	high STR_64
 11580  010BB8  0100               	movlb	0	; () banked
 11581  010BBA  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11582  010BBC  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11583  010BC0                     l11600:
 11584                           
 11585                           ;tasks.h: 420: }
 11586                           ;tasks.h: 421: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 11587  010BC0  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11588  010BC4  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11589  010BC8  0E33               	movlw	low (STR_67+11)
 11590  010BCA  0100               	movlb	0	; () banked
 11591  010BCC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11592  010BCE  0EFE               	movlw	high (STR_67+11)
 11593  010BD0  0100               	movlb	0	; () banked
 11594  010BD2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11595  010BD4  EC64  F0AE         	call	_my_strcmp	;wreg free
 11596  010BD8  0900               	iorlw	0
 11597  010BDA  B4D8               	btfsc	status,2,c
 11598  010BDC  D00F               	goto	l11604
 11599  010BDE  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11600  010BE2  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11601  010BE6  0EED               	movlw	low (STR_68+1)
 11602  010BE8  0100               	movlb	0	; () banked
 11603  010BEA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11604  010BEC  0EFF               	movlw	high (STR_68+1)
 11605  010BEE  0100               	movlb	0	; () banked
 11606  010BF0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11607  010BF2  EC64  F0AE         	call	_my_strcmp	;wreg free
 11608  010BF6  0900               	iorlw	0
 11609  010BF8  A4D8               	btfss	status,2,c
 11610  010BFA  D00C               	goto	l11606
 11611  010BFC                     l11604:
 11612                           
 11613                           ;tasks.h: 422: command_get_data(tx, CURRENT, 0);
 11614  010BFC  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11615  010C00  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11616  010C04  0E00               	movlw	0
 11617  010C06  0100               	movlb	0	; () banked
 11618  010C08  6F94               	movwf	command_get_data@item& (0+255),b
 11619  010C0A  0E00               	movlw	0
 11620  010C0C  0100               	movlb	0	; () banked
 11621  010C0E  6F95               	movwf	command_get_data@i& (0+255),b
 11622  010C10  EC03  F08D         	call	_command_get_data	;wreg free
 11623  010C14                     l11606:
 11624                           
 11625                           ;tasks.h: 423: }
 11626                           ;tasks.h: 424: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 11627  010C14  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11628  010C18  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11629  010C1C  0E28               	movlw	low STR_67
 11630  010C1E  0100               	movlb	0	; () banked
 11631  010C20  6F62               	movwf	my_strcmp@str2& (0+255),b
 11632  010C22  0EFE               	movlw	high STR_67
 11633  010C24  0100               	movlb	0	; () banked
 11634  010C26  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11635  010C28  EC64  F0AE         	call	_my_strcmp	;wreg free
 11636  010C2C  0900               	iorlw	0
 11637  010C2E  B4D8               	btfsc	status,2,c
 11638  010C30  D00F               	goto	l11610
 11639  010C32  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11640  010C36  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11641  010C3A  0EEC               	movlw	low STR_68
 11642  010C3C  0100               	movlb	0	; () banked
 11643  010C3E  6F62               	movwf	my_strcmp@str2& (0+255),b
 11644  010C40  0EFF               	movlw	high STR_68
 11645  010C42  0100               	movlb	0	; () banked
 11646  010C44  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11647  010C46  EC64  F0AE         	call	_my_strcmp	;wreg free
 11648  010C4A  0900               	iorlw	0
 11649  010C4C  A4D8               	btfss	status,2,c
 11650  010C4E  D00C               	goto	l11612
 11651  010C50                     l11610:
 11652                           
 11653                           ;tasks.h: 425: command_get_data(tx, INTEGRATED_CURRENT, 0);
 11654  010C50  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11655  010C54  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11656  010C58  0E01               	movlw	1
 11657  010C5A  0100               	movlb	0	; () banked
 11658  010C5C  6F94               	movwf	command_get_data@item& (0+255),b
 11659  010C5E  0E00               	movlw	0
 11660  010C60  0100               	movlb	0	; () banked
 11661  010C62  6F95               	movwf	command_get_data@i& (0+255),b
 11662  010C64  EC03  F08D         	call	_command_get_data	;wreg free
 11663  010C68                     l11612:
 11664                           
 11665                           ;tasks.h: 426: }
 11666                           ;tasks.h: 427: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 11667  010C68  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11668  010C6C  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11669  010C70  0EB1               	movlw	low STR_69
 11670  010C72  0100               	movlb	0	; () banked
 11671  010C74  6F62               	movwf	my_strcmp@str2& (0+255),b
 11672  010C76  0EFE               	movlw	high STR_69
 11673  010C78  0100               	movlb	0	; () banked
 11674  010C7A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11675  010C7C  EC64  F0AE         	call	_my_strcmp	;wreg free
 11676  010C80  0900               	iorlw	0
 11677  010C82  B4D8               	btfsc	status,2,c
 11678  010C84  D00F               	goto	l11616
 11679  010C86  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11680  010C8A  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11681  010C8E  0ED5               	movlw	low (STR_49+2)
 11682  010C90  0100               	movlb	0	; () banked
 11683  010C92  6F62               	movwf	my_strcmp@str2& (0+255),b
 11684  010C94  0EFF               	movlw	high (STR_49+2)
 11685  010C96  0100               	movlb	0	; () banked
 11686  010C98  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11687  010C9A  EC64  F0AE         	call	_my_strcmp	;wreg free
 11688  010C9E  0900               	iorlw	0
 11689  010CA0  A4D8               	btfss	status,2,c
 11690  010CA2  D00C               	goto	l11618
 11691  010CA4                     l11616:
 11692                           
 11693                           ;tasks.h: 428: command_get_data(tx, INTEGRATED_TIME, 0);
 11694  010CA4  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11695  010CA8  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11696  010CAC  0E02               	movlw	2
 11697  010CAE  0100               	movlb	0	; () banked
 11698  010CB0  6F94               	movwf	command_get_data@item& (0+255),b
 11699  010CB2  0E00               	movlw	0
 11700  010CB4  0100               	movlb	0	; () banked
 11701  010CB6  6F95               	movwf	command_get_data@i& (0+255),b
 11702  010CB8  EC03  F08D         	call	_command_get_data	;wreg free
 11703  010CBC                     l11618:
 11704                           
 11705                           ;tasks.h: 429: }
 11706                           ;tasks.h: 430: }
 11707                           ;tasks.h: 431: if (!my_strcmp(op1, "center") || !my_strcmp(op1, "c")) {
 11708  010CBC  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11709  010CC0  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11710  010CC4  0E83               	movlw	low STR_71
 11711  010CC6  0100               	movlb	0	; () banked
 11712  010CC8  6F62               	movwf	my_strcmp@str2& (0+255),b
 11713  010CCA  0EFF               	movlw	high STR_71
 11714  010CCC  0100               	movlb	0	; () banked
 11715  010CCE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11716  010CD0  EC64  F0AE         	call	_my_strcmp	;wreg free
 11717  010CD4  0900               	iorlw	0
 11718  010CD6  B4D8               	btfsc	status,2,c
 11719  010CD8  D00F               	goto	l11622
 11720  010CDA  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11721  010CDE  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11722  010CE2  0EED               	movlw	low (STR_68+1)
 11723  010CE4  0100               	movlb	0	; () banked
 11724  010CE6  6F62               	movwf	my_strcmp@str2& (0+255),b
 11725  010CE8  0EFF               	movlw	high (STR_68+1)
 11726  010CEA  0100               	movlb	0	; () banked
 11727  010CEC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11728  010CEE  EC64  F0AE         	call	_my_strcmp	;wreg free
 11729  010CF2  0900               	iorlw	0
 11730  010CF4  A4D8               	btfss	status,2,c
 11731  010CF6  D0A8               	goto	l11646
 11732  010CF8                     l11622:
 11733                           
 11734                           ;tasks.h: 432: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 11735  010CF8  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11736  010CFC  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11737  010D00  0EBF               	movlw	low STR_39
 11738  010D02  0100               	movlb	0	; () banked
 11739  010D04  6F62               	movwf	my_strcmp@str2& (0+255),b
 11740  010D06  0EFF               	movlw	high STR_39
 11741  010D08  0100               	movlb	0	; () banked
 11742  010D0A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11743  010D0C  EC64  F0AE         	call	_my_strcmp	;wreg free
 11744  010D10  0900               	iorlw	0
 11745  010D12  B4D8               	btfsc	status,2,c
 11746  010D14  D00F               	goto	l11626
 11747  010D16  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11748  010D1A  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11749  010D1E  0EF7               	movlw	low STR_40
 11750  010D20  0100               	movlb	0	; () banked
 11751  010D22  6F62               	movwf	my_strcmp@str2& (0+255),b
 11752  010D24  0EFF               	movlw	high STR_40
 11753  010D26  0100               	movlb	0	; () banked
 11754  010D28  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11755  010D2A  EC64  F0AE         	call	_my_strcmp	;wreg free
 11756  010D2E  0900               	iorlw	0
 11757  010D30  A4D8               	btfss	status,2,c
 11758  010D32  D00C               	goto	l11628
 11759  010D34                     l11626:
 11760                           
 11761                           ;tasks.h: 433: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 11762  010D34  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11763  010D38  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11764  010D3C  0E2C               	movlw	low STR_64
 11765  010D3E  0100               	movlb	0	; () banked
 11766  010D40  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11767  010D42  0EFD               	movlw	high STR_64
 11768  010D44  0100               	movlb	0	; () banked
 11769  010D46  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11770  010D48  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11771  010D4C                     l11628:
 11772                           
 11773                           ;tasks.h: 434: }
 11774                           ;tasks.h: 435: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 11775  010D4C  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11776  010D50  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11777  010D54  0E33               	movlw	low (STR_67+11)
 11778  010D56  0100               	movlb	0	; () banked
 11779  010D58  6F62               	movwf	my_strcmp@str2& (0+255),b
 11780  010D5A  0EFE               	movlw	high (STR_67+11)
 11781  010D5C  0100               	movlb	0	; () banked
 11782  010D5E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11783  010D60  EC64  F0AE         	call	_my_strcmp	;wreg free
 11784  010D64  0900               	iorlw	0
 11785  010D66  B4D8               	btfsc	status,2,c
 11786  010D68  D00F               	goto	l11632
 11787  010D6A  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11788  010D6E  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11789  010D72  0EED               	movlw	low (STR_68+1)
 11790  010D74  0100               	movlb	0	; () banked
 11791  010D76  6F62               	movwf	my_strcmp@str2& (0+255),b
 11792  010D78  0EFF               	movlw	high (STR_68+1)
 11793  010D7A  0100               	movlb	0	; () banked
 11794  010D7C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11795  010D7E  EC64  F0AE         	call	_my_strcmp	;wreg free
 11796  010D82  0900               	iorlw	0
 11797  010D84  A4D8               	btfss	status,2,c
 11798  010D86  D00C               	goto	l11634
 11799  010D88                     l11632:
 11800                           
 11801                           ;tasks.h: 436: command_get_data(tx, CURRENT, 1);
 11802  010D88  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11803  010D8C  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11804  010D90  0E00               	movlw	0
 11805  010D92  0100               	movlb	0	; () banked
 11806  010D94  6F94               	movwf	command_get_data@item& (0+255),b
 11807  010D96  0E01               	movlw	1
 11808  010D98  0100               	movlb	0	; () banked
 11809  010D9A  6F95               	movwf	command_get_data@i& (0+255),b
 11810  010D9C  EC03  F08D         	call	_command_get_data	;wreg free
 11811  010DA0                     l11634:
 11812                           
 11813                           ;tasks.h: 437: }
 11814                           ;tasks.h: 438: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 11815  010DA0  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11816  010DA4  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11817  010DA8  0E28               	movlw	low STR_67
 11818  010DAA  0100               	movlb	0	; () banked
 11819  010DAC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11820  010DAE  0EFE               	movlw	high STR_67
 11821  010DB0  0100               	movlb	0	; () banked
 11822  010DB2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11823  010DB4  EC64  F0AE         	call	_my_strcmp	;wreg free
 11824  010DB8  0900               	iorlw	0
 11825  010DBA  B4D8               	btfsc	status,2,c
 11826  010DBC  D00F               	goto	l11638
 11827  010DBE  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11828  010DC2  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11829  010DC6  0EEC               	movlw	low STR_68
 11830  010DC8  0100               	movlb	0	; () banked
 11831  010DCA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11832  010DCC  0EFF               	movlw	high STR_68
 11833  010DCE  0100               	movlb	0	; () banked
 11834  010DD0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11835  010DD2  EC64  F0AE         	call	_my_strcmp	;wreg free
 11836  010DD6  0900               	iorlw	0
 11837  010DD8  A4D8               	btfss	status,2,c
 11838  010DDA  D00C               	goto	l11640
 11839  010DDC                     l11638:
 11840                           
 11841                           ;tasks.h: 439: command_get_data(tx, INTEGRATED_CURRENT, 1);
 11842  010DDC  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11843  010DE0  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11844  010DE4  0E01               	movlw	1
 11845  010DE6  0100               	movlb	0	; () banked
 11846  010DE8  6F94               	movwf	command_get_data@item& (0+255),b
 11847  010DEA  0E01               	movlw	1
 11848  010DEC  0100               	movlb	0	; () banked
 11849  010DEE  6F95               	movwf	command_get_data@i& (0+255),b
 11850  010DF0  EC03  F08D         	call	_command_get_data	;wreg free
 11851  010DF4                     l11640:
 11852                           
 11853                           ;tasks.h: 440: }
 11854                           ;tasks.h: 441: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 11855  010DF4  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11856  010DF8  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11857  010DFC  0EB1               	movlw	low STR_69
 11858  010DFE  0100               	movlb	0	; () banked
 11859  010E00  6F62               	movwf	my_strcmp@str2& (0+255),b
 11860  010E02  0EFE               	movlw	high STR_69
 11861  010E04  0100               	movlb	0	; () banked
 11862  010E06  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11863  010E08  EC64  F0AE         	call	_my_strcmp	;wreg free
 11864  010E0C  0900               	iorlw	0
 11865  010E0E  B4D8               	btfsc	status,2,c
 11866  010E10  D00F               	goto	l11644
 11867  010E12  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11868  010E16  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11869  010E1A  0ED5               	movlw	low (STR_49+2)
 11870  010E1C  0100               	movlb	0	; () banked
 11871  010E1E  6F62               	movwf	my_strcmp@str2& (0+255),b
 11872  010E20  0EFF               	movlw	high (STR_49+2)
 11873  010E22  0100               	movlb	0	; () banked
 11874  010E24  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11875  010E26  EC64  F0AE         	call	_my_strcmp	;wreg free
 11876  010E2A  0900               	iorlw	0
 11877  010E2C  A4D8               	btfss	status,2,c
 11878  010E2E  D00C               	goto	l11646
 11879  010E30                     l11644:
 11880                           
 11881                           ;tasks.h: 442: command_get_data(tx, INTEGRATED_TIME, 1);
 11882  010E30  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11883  010E34  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11884  010E38  0E02               	movlw	2
 11885  010E3A  0100               	movlb	0	; () banked
 11886  010E3C  6F94               	movwf	command_get_data@item& (0+255),b
 11887  010E3E  0E01               	movlw	1
 11888  010E40  0100               	movlb	0	; () banked
 11889  010E42  6F95               	movwf	command_get_data@i& (0+255),b
 11890  010E44  EC03  F08D         	call	_command_get_data	;wreg free
 11891  010E48                     l11646:
 11892                           
 11893                           ;tasks.h: 443: }
 11894                           ;tasks.h: 444: }
 11895                           ;tasks.h: 445: if (!my_strcmp(op1, "right") || !my_strcmp(op1, "r")) {
 11896  010E48  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11897  010E4C  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11898  010E50  0EB4               	movlw	low STR_82
 11899  010E52  0100               	movlb	0	; () banked
 11900  010E54  6F62               	movwf	my_strcmp@str2& (0+255),b
 11901  010E56  0EFF               	movlw	high STR_82
 11902  010E58  0100               	movlb	0	; () banked
 11903  010E5A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11904  010E5C  EC64  F0AE         	call	_my_strcmp	;wreg free
 11905  010E60  0900               	iorlw	0
 11906  010E62  B4D8               	btfsc	status,2,c
 11907  010E64  D00F               	goto	l11650
 11908  010E66  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11909  010E6A  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11910  010E6E  0EC7               	movlw	low (STR_12+3)
 11911  010E70  0100               	movlb	0	; () banked
 11912  010E72  6F62               	movwf	my_strcmp@str2& (0+255),b
 11913  010E74  0EFF               	movlw	high (STR_12+3)
 11914  010E76  0100               	movlb	0	; () banked
 11915  010E78  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11916  010E7A  EC64  F0AE         	call	_my_strcmp	;wreg free
 11917  010E7E  0900               	iorlw	0
 11918  010E80  A4D8               	btfss	status,2,c
 11919  010E82  0012               	return	
 11920  010E84                     l11650:
 11921                           
 11922                           ;tasks.h: 446: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 11923  010E84  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11924  010E88  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11925  010E8C  0EBF               	movlw	low STR_39
 11926  010E8E  0100               	movlb	0	; () banked
 11927  010E90  6F62               	movwf	my_strcmp@str2& (0+255),b
 11928  010E92  0EFF               	movlw	high STR_39
 11929  010E94  0100               	movlb	0	; () banked
 11930  010E96  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11931  010E98  EC64  F0AE         	call	_my_strcmp	;wreg free
 11932  010E9C  0900               	iorlw	0
 11933  010E9E  B4D8               	btfsc	status,2,c
 11934  010EA0  D00F               	goto	l11654
 11935  010EA2  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11936  010EA6  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11937  010EAA  0EF7               	movlw	low STR_40
 11938  010EAC  0100               	movlb	0	; () banked
 11939  010EAE  6F62               	movwf	my_strcmp@str2& (0+255),b
 11940  010EB0  0EFF               	movlw	high STR_40
 11941  010EB2  0100               	movlb	0	; () banked
 11942  010EB4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11943  010EB6  EC64  F0AE         	call	_my_strcmp	;wreg free
 11944  010EBA  0900               	iorlw	0
 11945  010EBC  A4D8               	btfss	status,2,c
 11946  010EBE  D00C               	goto	l11656
 11947  010EC0                     l11654:
 11948                           
 11949                           ;tasks.h: 447: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 11950  010EC0  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11951  010EC4  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11952  010EC8  0E2C               	movlw	low STR_64
 11953  010ECA  0100               	movlb	0	; () banked
 11954  010ECC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11955  010ECE  0EFD               	movlw	high STR_64
 11956  010ED0  0100               	movlb	0	; () banked
 11957  010ED2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11958  010ED4  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 11959  010ED8                     l11656:
 11960                           
 11961                           ;tasks.h: 448: }
 11962                           ;tasks.h: 449: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 11963  010ED8  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11964  010EDC  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11965  010EE0  0E33               	movlw	low (STR_67+11)
 11966  010EE2  0100               	movlb	0	; () banked
 11967  010EE4  6F62               	movwf	my_strcmp@str2& (0+255),b
 11968  010EE6  0EFE               	movlw	high (STR_67+11)
 11969  010EE8  0100               	movlb	0	; () banked
 11970  010EEA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11971  010EEC  EC64  F0AE         	call	_my_strcmp	;wreg free
 11972  010EF0  0900               	iorlw	0
 11973  010EF2  B4D8               	btfsc	status,2,c
 11974  010EF4  D00F               	goto	l11660
 11975  010EF6  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11976  010EFA  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11977  010EFE  0EED               	movlw	low (STR_68+1)
 11978  010F00  0100               	movlb	0	; () banked
 11979  010F02  6F62               	movwf	my_strcmp@str2& (0+255),b
 11980  010F04  0EFF               	movlw	high (STR_68+1)
 11981  010F06  0100               	movlb	0	; () banked
 11982  010F08  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11983  010F0A  EC64  F0AE         	call	_my_strcmp	;wreg free
 11984  010F0E  0900               	iorlw	0
 11985  010F10  A4D8               	btfss	status,2,c
 11986  010F12  D00C               	goto	l11662
 11987  010F14                     l11660:
 11988                           
 11989                           ;tasks.h: 450: command_get_data(tx, CURRENT, 2);
 11990  010F14  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11991  010F18  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11992  010F1C  0E00               	movlw	0
 11993  010F1E  0100               	movlb	0	; () banked
 11994  010F20  6F94               	movwf	command_get_data@item& (0+255),b
 11995  010F22  0E02               	movlw	2
 11996  010F24  0100               	movlb	0	; () banked
 11997  010F26  6F95               	movwf	command_get_data@i& (0+255),b
 11998  010F28  EC03  F08D         	call	_command_get_data	;wreg free
 11999  010F2C                     l11662:
 12000                           
 12001                           ;tasks.h: 451: }
 12002                           ;tasks.h: 452: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 12003  010F2C  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12004  010F30  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12005  010F34  0E28               	movlw	low STR_67
 12006  010F36  0100               	movlb	0	; () banked
 12007  010F38  6F62               	movwf	my_strcmp@str2& (0+255),b
 12008  010F3A  0EFE               	movlw	high STR_67
 12009  010F3C  0100               	movlb	0	; () banked
 12010  010F3E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12011  010F40  EC64  F0AE         	call	_my_strcmp	;wreg free
 12012  010F44  0900               	iorlw	0
 12013  010F46  B4D8               	btfsc	status,2,c
 12014  010F48  D00F               	goto	l11666
 12015  010F4A  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12016  010F4E  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12017  010F52  0EEC               	movlw	low STR_68
 12018  010F54  0100               	movlb	0	; () banked
 12019  010F56  6F62               	movwf	my_strcmp@str2& (0+255),b
 12020  010F58  0EFF               	movlw	high STR_68
 12021  010F5A  0100               	movlb	0	; () banked
 12022  010F5C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12023  010F5E  EC64  F0AE         	call	_my_strcmp	;wreg free
 12024  010F62  0900               	iorlw	0
 12025  010F64  A4D8               	btfss	status,2,c
 12026  010F66  D00C               	goto	l11668
 12027  010F68                     l11666:
 12028                           
 12029                           ;tasks.h: 453: command_get_data(tx, INTEGRATED_CURRENT, 2);
 12030  010F68  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 12031  010F6C  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12032  010F70  0E01               	movlw	1
 12033  010F72  0100               	movlb	0	; () banked
 12034  010F74  6F94               	movwf	command_get_data@item& (0+255),b
 12035  010F76  0E02               	movlw	2
 12036  010F78  0100               	movlb	0	; () banked
 12037  010F7A  6F95               	movwf	command_get_data@i& (0+255),b
 12038  010F7C  EC03  F08D         	call	_command_get_data	;wreg free
 12039  010F80                     l11668:
 12040                           
 12041                           ;tasks.h: 454: }
 12042                           ;tasks.h: 455: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 12043  010F80  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12044  010F84  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12045  010F88  0EB1               	movlw	low STR_69
 12046  010F8A  0100               	movlb	0	; () banked
 12047  010F8C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12048  010F8E  0EFE               	movlw	high STR_69
 12049  010F90  0100               	movlb	0	; () banked
 12050  010F92  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12051  010F94  EC64  F0AE         	call	_my_strcmp	;wreg free
 12052  010F98  0900               	iorlw	0
 12053  010F9A  B4D8               	btfsc	status,2,c
 12054  010F9C  D00F               	goto	l11672
 12055  010F9E  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12056  010FA2  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12057  010FA6  0ED5               	movlw	low (STR_49+2)
 12058  010FA8  0100               	movlb	0	; () banked
 12059  010FAA  6F62               	movwf	my_strcmp@str2& (0+255),b
 12060  010FAC  0EFF               	movlw	high (STR_49+2)
 12061  010FAE  0100               	movlb	0	; () banked
 12062  010FB0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12063  010FB2  EC64  F0AE         	call	_my_strcmp	;wreg free
 12064  010FB6  0900               	iorlw	0
 12065  010FB8  A4D8               	btfss	status,2,c
 12066  010FBA  0012               	return	
 12067  010FBC                     l11672:
 12068                           
 12069                           ;tasks.h: 456: command_get_data(tx, INTEGRATED_TIME, 2);
 12070  010FBC  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 12071  010FC0  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12072  010FC4  0E02               	movlw	2
 12073  010FC6  0100               	movlb	0	; () banked
 12074  010FC8  6F94               	movwf	command_get_data@item& (0+255),b
 12075  010FCA  0E02               	movlw	2
 12076  010FCC  0100               	movlb	0	; () banked
 12077  010FCE  6F95               	movwf	command_get_data@i& (0+255),b
 12078  010FD0  EC03  F08D         	call	_command_get_data	;wreg free
 12079  010FD4  0012               	return	
 12080  010FD6                     __end_of_command_operation:
 12081                           	opt stack 0
 12082                           tblptru	equ	0xFF8
 12083                           tblptrh	equ	0xFF7
 12084                           tblptrl	equ	0xFF6
 12085                           tablat	equ	0xFF5
 12086                           prodh	equ	0xFF4
 12087                           prodl	equ	0xFF3
 12088                           intcon	equ	0xFF2
 12089                           postinc0	equ	0xFEE
 12090                           wreg	equ	0xFE8
 12091                           indf1	equ	0xFE7
 12092                           postinc1	equ	0xFE6
 12093                           postdec1	equ	0xFE5
 12094                           fsr1h	equ	0xFE2
 12095                           fsr1l	equ	0xFE1
 12096                           indf2	equ	0xFDF
 12097                           postinc2	equ	0xFDE
 12098                           postdec2	equ	0xFDD
 12099                           plusw2	equ	0xFDB
 12100                           fsr2h	equ	0xFDA
 12101                           fsr2l	equ	0xFD9
 12102                           status	equ	0xFD8
 12103                           
 12104 ;; *************** function _ctmu_set_ratio *****************
 12105 ;; Defined at:
 12106 ;;		line 313 in file "tasks.h"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  percentage      1    wreg     unsigned char 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;  percentage      1   35[BANK0 ] unsigned char 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;		None               void
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12123 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12124 ;;Total ram usage:        1 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:   13
 12127 ;; This function calls:
 12128 ;;		_CTMU_read
 12129 ;;		___lwdiv
 12130 ;;		___wmul
 12131 ;; This function is called by:
 12132 ;;		_command_operation
 12133 ;;		_software_init
 12134 ;; This function uses a non-reentrant model
 12135 ;;
 12136                           
 12137                           	psect	text30
 12138  0149D2                     __ptext30:
 12139                           	opt stack 0
 12140  0149D2                     _ctmu_set_ratio:
 12141                           	opt stack 16
 12142                           
 12143                           ;incstack = 0
 12144                           ;ctmu_set_ratio@percentage stored from wreg
 12145  0149D2  0100               	movlb	0	; () banked
 12146  0149D4  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
 12147                           
 12148                           ;tasks.h: 314: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
 12149  0149D6  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12150  0149DA  0100               	movlb	0	; () banked
 12151  0149DC  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12152  0149DE  0E00               	movlw	0
 12153  0149E0  EC1F  F0AB         	call	_CTMU_read
 12154  0149E4  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12155  0149E8  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12156  0149EC  ECC1  F0B7         	call	___wmul	;wreg free
 12157  0149F0  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12158  0149F4  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12159  0149F8  0E00               	movlw	0
 12160  0149FA  0100               	movlb	0	; () banked
 12161  0149FC  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12162  0149FE  0E64               	movlw	100
 12163  014A00  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12164  014A02  ECED  F0B2         	call	___lwdiv	;wreg free
 12165  014A06  C07C  F12D         	movff	?___lwdiv,_port+4
 12166  014A0A  C07D  F12E         	movff	?___lwdiv+1,_port+5
 12167                           
 12168                           ;tasks.h: 315: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
 12169  014A0E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12170  014A12  0100               	movlb	0	; () banked
 12171  014A14  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12172  014A16  0E01               	movlw	1
 12173  014A18  EC1F  F0AB         	call	_CTMU_read
 12174  014A1C  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12175  014A20  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12176  014A24  ECC1  F0B7         	call	___wmul	;wreg free
 12177  014A28  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12178  014A2C  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12179  014A30  0E00               	movlw	0
 12180  014A32  0100               	movlb	0	; () banked
 12181  014A34  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12182  014A36  0E64               	movlw	100
 12183  014A38  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12184  014A3A  ECED  F0B2         	call	___lwdiv	;wreg free
 12185  014A3E  C07C  F144         	movff	?___lwdiv,_port+27
 12186  014A42  C07D  F145         	movff	?___lwdiv+1,_port+28
 12187                           
 12188                           ;tasks.h: 316: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
 12189  014A46  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12190  014A4A  0100               	movlb	0	; () banked
 12191  014A4C  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12192  014A4E  0E02               	movlw	2
 12193  014A50  EC1F  F0AB         	call	_CTMU_read
 12194  014A54  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12195  014A58  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12196  014A5C  ECC1  F0B7         	call	___wmul	;wreg free
 12197  014A60  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12198  014A64  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12199  014A68  0E00               	movlw	0
 12200  014A6A  0100               	movlb	0	; () banked
 12201  014A6C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12202  014A6E  0E64               	movlw	100
 12203  014A70  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12204  014A72  ECED  F0B2         	call	___lwdiv	;wreg free
 12205  014A76  C07C  F15B         	movff	?___lwdiv,_port+50
 12206  014A7A  C07D  F15C         	movff	?___lwdiv+1,_port+51
 12207                           
 12208                           ;tasks.h: 317: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
 12209  014A7E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12210  014A82  0100               	movlb	0	; () banked
 12211  014A84  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12212  014A86  0E03               	movlw	3
 12213  014A88  EC1F  F0AB         	call	_CTMU_read
 12214  014A8C  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12215  014A90  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12216  014A94  ECC1  F0B7         	call	___wmul	;wreg free
 12217  014A98  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12218  014A9C  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12219  014AA0  0E00               	movlw	0
 12220  014AA2  0100               	movlb	0	; () banked
 12221  014AA4  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12222  014AA6  0E64               	movlw	100
 12223  014AA8  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12224  014AAA  ECED  F0B2         	call	___lwdiv	;wreg free
 12225  014AAE  C07C  F119         	movff	?___lwdiv,_ctmu_value_m
 12226  014AB2  C07D  F11A         	movff	?___lwdiv+1,_ctmu_value_m+1
 12227  014AB6  0012               	return		;funcret
 12228  014AB8                     __end_of_ctmu_set_ratio:
 12229                           	opt stack 0
 12230                           tblptru	equ	0xFF8
 12231                           tblptrh	equ	0xFF7
 12232                           tblptrl	equ	0xFF6
 12233                           tablat	equ	0xFF5
 12234                           prodh	equ	0xFF4
 12235                           prodl	equ	0xFF3
 12236                           intcon	equ	0xFF2
 12237                           postinc0	equ	0xFEE
 12238                           wreg	equ	0xFE8
 12239                           indf1	equ	0xFE7
 12240                           postinc1	equ	0xFE6
 12241                           postdec1	equ	0xFE5
 12242                           fsr1h	equ	0xFE2
 12243                           fsr1l	equ	0xFE1
 12244                           indf2	equ	0xFDF
 12245                           postinc2	equ	0xFDE
 12246                           postdec2	equ	0xFDD
 12247                           plusw2	equ	0xFDB
 12248                           fsr2h	equ	0xFDA
 12249                           fsr2l	equ	0xFD9
 12250                           status	equ	0xFD8
 12251                           
 12252 ;; *************** function _command_time *****************
 12253 ;; Defined at:
 12254 ;;		line 107 in file "../My_header\My_terminal.h"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;  tx              2  112[BANK0 ] PTR struct ringbuf
 12257 ;;		 -> usb_tx(8), 
 12258 ;;  op0             2  114[BANK0 ] PTR unsigned char 
 12259 ;;		 -> my_terminal_loop@op0(20), 
 12260 ;;  op1             2  116[BANK0 ] PTR unsigned char 
 12261 ;;		 -> my_terminal_loop@op1(20), 
 12262 ;;  op2             2  118[BANK0 ] PTR unsigned char 
 12263 ;;		 -> my_terminal_loop@op2(20), 
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;		None
 12266 ;; Return value:  Size  Location     Type
 12267 ;;		None               void
 12268 ;; Registers used:
 12269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12275 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12278 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12279 ;;Total ram usage:        9 bytes
 12280 ;; Hardware stack levels used:    1
 12281 ;; Hardware stack levels required when called:   17
 12282 ;; This function calls:
 12283 ;;		_command_at_hand
 12284 ;;		_month_length
 12285 ;;		_my_atoi
 12286 ;;		_my_strcmp
 12287 ;;		_print_time
 12288 ;; This function is called by:
 12289 ;;		_command_operation
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text31
 12294  012262                     __ptext31:
 12295                           	opt stack 0
 12296  012262                     _command_time:
 12297                           	opt stack 11
 12298                           
 12299                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
 12300                           
 12301                           ;incstack = 0
 12302  012262  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12303  012266  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12304  01226A  0E2D               	movlw	low STR_7
 12305  01226C  0100               	movlb	0	; () banked
 12306  01226E  6F62               	movwf	my_strcmp@str2& (0+255),b
 12307  012270  0EFF               	movlw	high STR_7
 12308  012272  0100               	movlb	0	; () banked
 12309  012274  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12310  012276  EC64  F0AE         	call	_my_strcmp	;wreg free
 12311  01227A  0900               	iorlw	0
 12312  01227C  B4D8               	btfsc	status,2,c
 12313  01227E  D00F               	goto	l11168
 12314  012280  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12315  012284  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12316  012288  0EF3               	movlw	low (STR_9+1)
 12317  01228A  0100               	movlb	0	; () banked
 12318  01228C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12319  01228E  0EFF               	movlw	high (STR_9+1)
 12320  012290  0100               	movlb	0	; () banked
 12321  012292  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12322  012294  EC64  F0AE         	call	_my_strcmp	;wreg free
 12323  012298  0900               	iorlw	0
 12324  01229A  A4D8               	btfss	status,2,c
 12325  01229C  D006               	goto	l11170
 12326  01229E                     l11168:
 12327                           
 12328                           ;My_header\My_terminal.h: 109: print_time(tx);
 12329  01229E  C0D0  F0A9         	movff	command_time@tx,print_time@tx
 12330  0122A2  C0D1  F0AA         	movff	command_time@tx+1,print_time@tx+1
 12331  0122A6  EC40  F0B0         	call	_print_time	;wreg free
 12332  0122AA                     l11170:
 12333                           
 12334                           ;My_header\My_terminal.h: 110: }
 12335                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
 12336  0122AA  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12337  0122AE  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12338  0122B2  0EF2               	movlw	low STR_9
 12339  0122B4  0100               	movlb	0	; () banked
 12340  0122B6  6F62               	movwf	my_strcmp@str2& (0+255),b
 12341  0122B8  0EFF               	movlw	high STR_9
 12342  0122BA  0100               	movlb	0	; () banked
 12343  0122BC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12344  0122BE  EC64  F0AE         	call	_my_strcmp	;wreg free
 12345  0122C2  0900               	iorlw	0
 12346  0122C4  B4D8               	btfsc	status,2,c
 12347  0122C6  D00F               	goto	l11174
 12348  0122C8  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12349  0122CC  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12350  0122D0  0E21               	movlw	low STR_10
 12351  0122D2  0100               	movlb	0	; () banked
 12352  0122D4  6F62               	movwf	my_strcmp@str2& (0+255),b
 12353  0122D6  0EFF               	movlw	high STR_10
 12354  0122D8  0100               	movlb	0	; () banked
 12355  0122DA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12356  0122DC  EC64  F0AE         	call	_my_strcmp	;wreg free
 12357  0122E0  0900               	iorlw	0
 12358  0122E2  A4D8               	btfss	status,2,c
 12359  0122E4  0012               	return	
 12360  0122E6                     l11174:
 12361                           
 12362                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
 12363  0122E6  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12364  0122EA  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12365  0122EE  0EDE               	movlw	low (STR_16+2)
 12366  0122F0  0100               	movlb	0	; () banked
 12367  0122F2  6F62               	movwf	my_strcmp@str2& (0+255),b
 12368  0122F4  0EFF               	movlw	high (STR_16+2)
 12369  0122F6  0100               	movlb	0	; () banked
 12370  0122F8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12371  0122FA  EC64  F0AE         	call	_my_strcmp	;wreg free
 12372  0122FE  0900               	iorlw	0
 12373  012300  B4D8               	btfsc	status,2,c
 12374  012302  D00F               	goto	l11178
 12375  012304  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12376  012308  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12377  01230C  0EC4               	movlw	low STR_12
 12378  01230E  0100               	movlb	0	; () banked
 12379  012310  6F62               	movwf	my_strcmp@str2& (0+255),b
 12380  012312  0EFF               	movlw	high STR_12
 12381  012314  0100               	movlb	0	; () banked
 12382  012316  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12383  012318  EC64  F0AE         	call	_my_strcmp	;wreg free
 12384  01231C  0900               	iorlw	0
 12385  01231E  A4D8               	btfss	status,2,c
 12386  012320  D01C               	goto	l11180
 12387  012322                     l11178:
 12388                           
 12389                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
 12390  012322  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12391  012326  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12392  01232A  0E84               	movlw	low (_caltime_now+6)
 12393  01232C  0100               	movlb	0	; () banked
 12394  01232E  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12395  012330  0E01               	movlw	high (_caltime_now+6)
 12396  012332  0100               	movlb	0	; () banked
 12397  012334  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12398  012336  0E00               	movlw	0
 12399  012338  0100               	movlb	0	; () banked
 12400  01233A  6FCD               	movwf	command_at_hand@min& (0+255),b
 12401  01233C  0E63               	movlw	99
 12402  01233E  0100               	movlb	0	; () banked
 12403  012340  6FCE               	movwf	command_at_hand@max& (0+255),b
 12404  012342  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12405  012346  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12406  01234A  EC07  F0AF         	call	_my_atoi	;wreg free
 12407  01234E  0100               	movlb	0	; () banked
 12408  012350  517C               	movf	?_my_atoi& (0+255),w,b
 12409  012352  0100               	movlb	0	; () banked
 12410  012354  6FCF               	movwf	command_at_hand@value& (0+255),b
 12411  012356  EC44  F0B4         	call	_command_at_hand	;wreg free
 12412  01235A                     l11180:
 12413                           
 12414                           ;My_header\My_terminal.h: 114: }
 12415                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
 12416  01235A  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12417  01235E  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12418  012362  0EF9               	movlw	low STR_13
 12419  012364  0100               	movlb	0	; () banked
 12420  012366  6F62               	movwf	my_strcmp@str2& (0+255),b
 12421  012368  0EFF               	movlw	high STR_13
 12422  01236A  0100               	movlb	0	; () banked
 12423  01236C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12424  01236E  EC64  F0AE         	call	_my_strcmp	;wreg free
 12425  012372  0900               	iorlw	0
 12426  012374  B4D8               	btfsc	status,2,c
 12427  012376  D00F               	goto	l11184
 12428  012378  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12429  01237C  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12430  012380  0EA8               	movlw	low STR_14
 12431  012382  0100               	movlb	0	; () banked
 12432  012384  6F62               	movwf	my_strcmp@str2& (0+255),b
 12433  012386  0EFF               	movlw	high STR_14
 12434  012388  0100               	movlb	0	; () banked
 12435  01238A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12436  01238C  EC64  F0AE         	call	_my_strcmp	;wreg free
 12437  012390  0900               	iorlw	0
 12438  012392  A4D8               	btfss	status,2,c
 12439  012394  D01C               	goto	l11186
 12440  012396                     l11184:
 12441                           
 12442                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
 12443  012396  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12444  01239A  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12445  01239E  0E83               	movlw	low (_caltime_now+5)
 12446  0123A0  0100               	movlb	0	; () banked
 12447  0123A2  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12448  0123A4  0E01               	movlw	high (_caltime_now+5)
 12449  0123A6  0100               	movlb	0	; () banked
 12450  0123A8  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12451  0123AA  0E01               	movlw	1
 12452  0123AC  0100               	movlb	0	; () banked
 12453  0123AE  6FCD               	movwf	command_at_hand@min& (0+255),b
 12454  0123B0  0E0C               	movlw	12
 12455  0123B2  0100               	movlb	0	; () banked
 12456  0123B4  6FCE               	movwf	command_at_hand@max& (0+255),b
 12457  0123B6  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12458  0123BA  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12459  0123BE  EC07  F0AF         	call	_my_atoi	;wreg free
 12460  0123C2  0100               	movlb	0	; () banked
 12461  0123C4  517C               	movf	?_my_atoi& (0+255),w,b
 12462  0123C6  0100               	movlb	0	; () banked
 12463  0123C8  6FCF               	movwf	command_at_hand@value& (0+255),b
 12464  0123CA  EC44  F0B4         	call	_command_at_hand	;wreg free
 12465  0123CE                     l11186:
 12466                           
 12467                           ;My_header\My_terminal.h: 117: }
 12468                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
 12469  0123CE  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12470  0123D2  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12471  0123D6  0EF4               	movlw	low (STR_133+30)
 12472  0123D8  0100               	movlb	0	; () banked
 12473  0123DA  6F62               	movwf	my_strcmp@str2& (0+255),b
 12474  0123DC  0EFD               	movlw	high (STR_133+30)
 12475  0123DE  0100               	movlb	0	; () banked
 12476  0123E0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12477  0123E2  EC64  F0AE         	call	_my_strcmp	;wreg free
 12478  0123E6  0900               	iorlw	0
 12479  0123E8  B4D8               	btfsc	status,2,c
 12480  0123EA  D00F               	goto	l11190
 12481  0123EC  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12482  0123F0  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12483  0123F4  0EDC               	movlw	low STR_16
 12484  0123F6  0100               	movlb	0	; () banked
 12485  0123F8  6F62               	movwf	my_strcmp@str2& (0+255),b
 12486  0123FA  0EFF               	movlw	high STR_16
 12487  0123FC  0100               	movlb	0	; () banked
 12488  0123FE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12489  012400  EC64  F0AE         	call	_my_strcmp	;wreg free
 12490  012404  0900               	iorlw	0
 12491  012406  A4D8               	btfss	status,2,c
 12492  012408  D023               	goto	l11194
 12493  01240A                     l11190:
 12494                           
 12495                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 12496  01240A  C183  F066         	movff	_caltime_now+5,month_length@month
 12497  01240E  0101               	movlb	1	; () banked
 12498  012410  5184               	movf	(_caltime_now+6)& (0+255),w,b
 12499  012412  EC3D  F0A6         	call	_month_length
 12500  012416  0100               	movlb	0	; () banked
 12501  012418  6FD8               	movwf	_command_time$5383& (0+255),b
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 12505  01241A  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12506  01241E  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12507  012422  0E82               	movlw	low (_caltime_now+4)
 12508  012424  0100               	movlb	0	; () banked
 12509  012426  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12510  012428  0E01               	movlw	high (_caltime_now+4)
 12511  01242A  0100               	movlb	0	; () banked
 12512  01242C  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12513  01242E  0E01               	movlw	1
 12514  012430  0100               	movlb	0	; () banked
 12515  012432  6FCD               	movwf	command_at_hand@min& (0+255),b
 12516  012434  C0D8  F0CE         	movff	_command_time$5383,command_at_hand@max
 12517  012438  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12518  01243C  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12519  012440  EC07  F0AF         	call	_my_atoi	;wreg free
 12520  012444  0100               	movlb	0	; () banked
 12521  012446  517C               	movf	?_my_atoi& (0+255),w,b
 12522  012448  0100               	movlb	0	; () banked
 12523  01244A  6FCF               	movwf	command_at_hand@value& (0+255),b
 12524  01244C  EC44  F0B4         	call	_command_at_hand	;wreg free
 12525  012450                     l11194:
 12526                           
 12527                           ;My_header\My_terminal.h: 120: }
 12528                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
 12529  012450  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12530  012454  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12531  012458  0E0E               	movlw	low (STR_134+24)
 12532  01245A  0100               	movlb	0	; () banked
 12533  01245C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12534  01245E  0EFE               	movlw	high (STR_134+24)
 12535  012460  0100               	movlb	0	; () banked
 12536  012462  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12537  012464  EC64  F0AE         	call	_my_strcmp	;wreg free
 12538  012468  0900               	iorlw	0
 12539  01246A  B4D8               	btfsc	status,2,c
 12540  01246C  D00F               	goto	l11198
 12541  01246E  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12542  012472  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12543  012476  0EC9               	movlw	low STR_18
 12544  012478  0100               	movlb	0	; () banked
 12545  01247A  6F62               	movwf	my_strcmp@str2& (0+255),b
 12546  01247C  0EFF               	movlw	high STR_18
 12547  01247E  0100               	movlb	0	; () banked
 12548  012480  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12549  012482  EC64  F0AE         	call	_my_strcmp	;wreg free
 12550  012486  0900               	iorlw	0
 12551  012488  A4D8               	btfss	status,2,c
 12552  01248A  D01C               	goto	l11200
 12553  01248C                     l11198:
 12554                           
 12555                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
 12556  01248C  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12557  012490  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12558  012494  0E80               	movlw	low (_caltime_now+2)
 12559  012496  0100               	movlb	0	; () banked
 12560  012498  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12561  01249A  0E01               	movlw	high (_caltime_now+2)
 12562  01249C  0100               	movlb	0	; () banked
 12563  01249E  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12564  0124A0  0E00               	movlw	0
 12565  0124A2  0100               	movlb	0	; () banked
 12566  0124A4  6FCD               	movwf	command_at_hand@min& (0+255),b
 12567  0124A6  0E17               	movlw	23
 12568  0124A8  0100               	movlb	0	; () banked
 12569  0124AA  6FCE               	movwf	command_at_hand@max& (0+255),b
 12570  0124AC  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12571  0124B0  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12572  0124B4  EC07  F0AF         	call	_my_atoi	;wreg free
 12573  0124B8  0100               	movlb	0	; () banked
 12574  0124BA  517C               	movf	?_my_atoi& (0+255),w,b
 12575  0124BC  0100               	movlb	0	; () banked
 12576  0124BE  6FCF               	movwf	command_at_hand@value& (0+255),b
 12577  0124C0  EC44  F0B4         	call	_command_at_hand	;wreg free
 12578  0124C4                     l11200:
 12579                           
 12580                           ;My_header\My_terminal.h: 123: }
 12581                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
 12582  0124C4  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12583  0124C8  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12584  0124CC  0EFD               	movlw	low STR_19
 12585  0124CE  0100               	movlb	0	; () banked
 12586  0124D0  6F62               	movwf	my_strcmp@str2& (0+255),b
 12587  0124D2  0EFF               	movlw	high STR_19
 12588  0124D4  0100               	movlb	0	; () banked
 12589  0124D6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12590  0124D8  EC64  F0AE         	call	_my_strcmp	;wreg free
 12591  0124DC  0900               	iorlw	0
 12592  0124DE  B4D8               	btfsc	status,2,c
 12593  0124E0  D00F               	goto	l11204
 12594  0124E2  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12595  0124E6  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12596  0124EA  0E7C               	movlw	low STR_20
 12597  0124EC  0100               	movlb	0	; () banked
 12598  0124EE  6F62               	movwf	my_strcmp@str2& (0+255),b
 12599  0124F0  0EFF               	movlw	high STR_20
 12600  0124F2  0100               	movlb	0	; () banked
 12601  0124F4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12602  0124F6  EC64  F0AE         	call	_my_strcmp	;wreg free
 12603  0124FA  0900               	iorlw	0
 12604  0124FC  A4D8               	btfss	status,2,c
 12605  0124FE  D01C               	goto	l11206
 12606  012500                     l11204:
 12607                           
 12608                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
 12609  012500  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12610  012504  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12611  012508  0E7F               	movlw	low (_caltime_now+1)
 12612  01250A  0100               	movlb	0	; () banked
 12613  01250C  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12614  01250E  0E01               	movlw	high (_caltime_now+1)
 12615  012510  0100               	movlb	0	; () banked
 12616  012512  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12617  012514  0E00               	movlw	0
 12618  012516  0100               	movlb	0	; () banked
 12619  012518  6FCD               	movwf	command_at_hand@min& (0+255),b
 12620  01251A  0E3B               	movlw	59
 12621  01251C  0100               	movlb	0	; () banked
 12622  01251E  6FCE               	movwf	command_at_hand@max& (0+255),b
 12623  012520  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12624  012524  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12625  012528  EC07  F0AF         	call	_my_atoi	;wreg free
 12626  01252C  0100               	movlb	0	; () banked
 12627  01252E  517C               	movf	?_my_atoi& (0+255),w,b
 12628  012530  0100               	movlb	0	; () banked
 12629  012532  6FCF               	movwf	command_at_hand@value& (0+255),b
 12630  012534  EC44  F0B4         	call	_command_at_hand	;wreg free
 12631  012538                     l11206:
 12632                           
 12633                           ;My_header\My_terminal.h: 126: }
 12634                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
 12635  012538  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12636  01253C  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12637  012540  0E5C               	movlw	low (STR_93+7)
 12638  012542  0100               	movlb	0	; () banked
 12639  012544  6F62               	movwf	my_strcmp@str2& (0+255),b
 12640  012546  0EFF               	movlw	high (STR_93+7)
 12641  012548  0100               	movlb	0	; () banked
 12642  01254A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12643  01254C  EC64  F0AE         	call	_my_strcmp	;wreg free
 12644  012550  0900               	iorlw	0
 12645  012552  B4D8               	btfsc	status,2,c
 12646  012554  D00F               	goto	l11210
 12647  012556  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12648  01255A  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12649  01255E  0E75               	movlw	low STR_22
 12650  012560  0100               	movlb	0	; () banked
 12651  012562  6F62               	movwf	my_strcmp@str2& (0+255),b
 12652  012564  0EFF               	movlw	high STR_22
 12653  012566  0100               	movlb	0	; () banked
 12654  012568  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12655  01256A  EC64  F0AE         	call	_my_strcmp	;wreg free
 12656  01256E  0900               	iorlw	0
 12657  012570  A4D8               	btfss	status,2,c
 12658  012572  0012               	return	
 12659  012574                     l11210:
 12660                           
 12661                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
 12662  012574  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12663  012578  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12664  01257C  0E7E               	movlw	low _caltime_now
 12665  01257E  0100               	movlb	0	; () banked
 12666  012580  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12667  012582  0E01               	movlw	high _caltime_now
 12668  012584  0100               	movlb	0	; () banked
 12669  012586  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12670  012588  0E00               	movlw	0
 12671  01258A  0100               	movlb	0	; () banked
 12672  01258C  6FCD               	movwf	command_at_hand@min& (0+255),b
 12673  01258E  0E3B               	movlw	59
 12674  012590  0100               	movlb	0	; () banked
 12675  012592  6FCE               	movwf	command_at_hand@max& (0+255),b
 12676  012594  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12677  012598  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12678  01259C  EC07  F0AF         	call	_my_atoi	;wreg free
 12679  0125A0  0100               	movlb	0	; () banked
 12680  0125A2  517C               	movf	?_my_atoi& (0+255),w,b
 12681  0125A4  0100               	movlb	0	; () banked
 12682  0125A6  6FCF               	movwf	command_at_hand@value& (0+255),b
 12683  0125A8  EC44  F0B4         	call	_command_at_hand	;wreg free
 12684  0125AC  0012               	return	
 12685  0125AE                     __end_of_command_time:
 12686                           	opt stack 0
 12687                           tblptru	equ	0xFF8
 12688                           tblptrh	equ	0xFF7
 12689                           tblptrl	equ	0xFF6
 12690                           tablat	equ	0xFF5
 12691                           prodh	equ	0xFF4
 12692                           prodl	equ	0xFF3
 12693                           intcon	equ	0xFF2
 12694                           postinc0	equ	0xFEE
 12695                           wreg	equ	0xFE8
 12696                           indf1	equ	0xFE7
 12697                           postinc1	equ	0xFE6
 12698                           postdec1	equ	0xFE5
 12699                           fsr1h	equ	0xFE2
 12700                           fsr1l	equ	0xFE1
 12701                           indf2	equ	0xFDF
 12702                           postinc2	equ	0xFDE
 12703                           postdec2	equ	0xFDD
 12704                           plusw2	equ	0xFDB
 12705                           fsr2h	equ	0xFDA
 12706                           fsr2l	equ	0xFD9
 12707                           status	equ	0xFD8
 12708                           
 12709 ;; *************** function _my_strcmp *****************
 12710 ;; Defined at:
 12711 ;;		line 53 in file "../My_header\My_stdlib.h"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
 12714 ;;		 -> my_terminal_loop@op2(20), my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
 12715 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
 12716 ;;		 -> STR_92(3), STR_91(16), STR_90(3), STR_89(19), 
 12717 ;;		 -> STR_88(2), STR_87(8), STR_85(2), STR_84(5), 
 12718 ;;		 -> STR_83(2), STR_82(6), STR_81(3), STR_80(16), 
 12719 ;;		 -> STR_79(3), STR_78(19), STR_77(2), STR_76(8), 
 12720 ;;		 -> STR_74(2), STR_73(5), STR_72(2), STR_71(7), 
 12721 ;;		 -> STR_70(3), STR_69(16), STR_68(3), STR_67(19), 
 12722 ;;		 -> STR_66(2), STR_65(8), STR_63(2), STR_62(5), 
 12723 ;;		 -> STR_61(2), STR_60(5), STR_58(2), STR_57(5), 
 12724 ;;		 -> STR_56(2), STR_55(8), STR_53(2), STR_52(6), 
 12725 ;;		 -> STR_49(5), STR_48(11), STR_47(6), STR_46(1), 
 12726 ;;		 -> STR_45(12), STR_44(3), STR_43(9), STR_42(9), 
 12727 ;;		 -> STR_40(2), STR_39(5), STR_22(7), STR_21(2), 
 12728 ;;		 -> STR_20(7), STR_19(2), STR_18(5), STR_17(2), 
 12729 ;;		 -> STR_16(4), STR_15(2), STR_14(6), STR_13(2), 
 12730 ;;		 -> STR_12(5), STR_11(2), STR_10(12), STR_9(3), 
 12731 ;;		 -> STR_8(2), STR_7(11), 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1    wreg      char 
 12736 ;; Registers used:
 12737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12746 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12747 ;;Total ram usage:        5 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:   11
 12750 ;; This function calls:
 12751 ;;		Nothing
 12752 ;; This function is called by:
 12753 ;;		_command_time
 12754 ;;		_command_operation
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758                           	psect	text32
 12759  015CC8                     __ptext32:
 12760                           	opt stack 0
 12761  015CC8                     _my_strcmp:
 12762                           	opt stack 17
 12763                           
 12764                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
 12765                           
 12766                           ;incstack = 0
 12767  015CC8  D02C               	goto	l10740
 12768  015CCA                     l10732:
 12769                           
 12770                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
 12771  015CCA  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12772  015CCE  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12773  015CD2  50DF               	movf	indf2,w,c
 12774  015CD4  0100               	movlb	0	; () banked
 12775  015CD6  6F64               	movwf	??_my_strcmp& (0+255),b
 12776  015CD8  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12777  015CDC  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12778  015CE0                     	if	0	;tblptru may be non-zero
 12779  015CE0                     	endif
 12780  015CE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12781  015CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 12782  015CE2  6EF8               	movwf	tblptru,c
 12783  015CE4                     	endif
 12784  015CE4  0008               	tblrd		*
 12785  015CE6  50F5               	movf	tablat,w,c
 12786  015CE8  0100               	movlb	0	; () banked
 12787  015CEA  1964               	xorwf	??_my_strcmp& (0+255),w,b
 12788  015CEC  B4D8               	btfsc	status,2,c
 12789  015CEE  D013               	goto	l10738
 12790                           
 12791                           ; BSR set to: 0
 12792  015CF0  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12793  015CF4  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12794  015CF8  50DF               	movf	indf2,w,c
 12795  015CFA  0100               	movlb	0	; () banked
 12796  015CFC  6F64               	movwf	??_my_strcmp& (0+255),b
 12797  015CFE  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12798  015D02  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12799  015D06                     	if	0	;tblptru may be non-zero
 12800  015D06                     	endif
 12801  015D06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12802  015D06  0E00               	movlw	low (__mediumconst shr (0+16))
 12803  015D08  6EF8               	movwf	tblptru,c
 12804  015D0A                     	endif
 12805  015D0A  0008               	tblrd		*
 12806  015D0C  50F5               	movf	tablat,w,c
 12807  015D0E  0800               	sublw	0
 12808  015D10  0100               	movlb	0	; () banked
 12809  015D12  2564               	addwf	??_my_strcmp& (0+255),w,b
 12810                           
 12811                           ; BSR set to: 0
 12812  015D14  0012               	return	
 12813  015D16                     l10738:
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;My_header\My_stdlib.h: 56: str1++;
 12817  015D16  0100               	movlb	0	; () banked
 12818  015D18  4B60               	infsnz	my_strcmp@str1& (0+255),f,b
 12819  015D1A  2B61               	incf	(my_strcmp@str1+1)& (0+255),f,b
 12820                           
 12821                           ;My_header\My_stdlib.h: 57: str2++;
 12822  015D1C  0100               	movlb	0	; () banked
 12823  015D1E  4B62               	infsnz	my_strcmp@str2& (0+255),f,b
 12824  015D20  2B63               	incf	(my_strcmp@str2+1)& (0+255),f,b
 12825  015D22                     l10740:
 12826  015D22  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12827  015D26  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12828  015D2A  50DF               	movf	indf2,w,c
 12829  015D2C  B4D8               	btfsc	status,2,c
 12830  015D2E  D00B               	goto	l10744
 12831  015D30  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12832  015D34  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12833  015D38                     	if	0	;tblptru may be non-zero
 12834  015D38                     	endif
 12835  015D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12836  015D38  0E00               	movlw	low (__mediumconst shr (0+16))
 12837  015D3A  6EF8               	movwf	tblptru,c
 12838  015D3C                     	endif
 12839  015D3C  0008               	tblrd		*
 12840  015D3E  50F5               	movf	tablat,w,c
 12841  015D40  0900               	iorlw	0
 12842  015D42  A4D8               	btfss	status,2,c
 12843  015D44  D7C2               	goto	l10732
 12844  015D46                     l10744:
 12845                           
 12846                           ;My_header\My_stdlib.h: 58: }
 12847                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
 12848  015D46  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12849  015D4A  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12850  015D4E  50DF               	movf	indf2,w,c
 12851  015D50  0100               	movlb	0	; () banked
 12852  015D52  6F64               	movwf	??_my_strcmp& (0+255),b
 12853  015D54  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12854  015D58  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12855  015D5C                     	if	0	;tblptru may be non-zero
 12856  015D5C                     	endif
 12857  015D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12858  015D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 12859  015D5E  6EF8               	movwf	tblptru,c
 12860  015D60                     	endif
 12861  015D60  0008               	tblrd		*
 12862  015D62  50F5               	movf	tablat,w,c
 12863  015D64  0800               	sublw	0
 12864  015D66  0100               	movlb	0	; () banked
 12865  015D68  2564               	addwf	??_my_strcmp& (0+255),w,b
 12866  015D6A  0012               	return	
 12867  015D6C                     __end_of_my_strcmp:
 12868                           	opt stack 0
 12869                           tblptru	equ	0xFF8
 12870                           tblptrh	equ	0xFF7
 12871                           tblptrl	equ	0xFF6
 12872                           tablat	equ	0xFF5
 12873                           prodh	equ	0xFF4
 12874                           prodl	equ	0xFF3
 12875                           intcon	equ	0xFF2
 12876                           postinc0	equ	0xFEE
 12877                           wreg	equ	0xFE8
 12878                           indf1	equ	0xFE7
 12879                           postinc1	equ	0xFE6
 12880                           postdec1	equ	0xFE5
 12881                           fsr1h	equ	0xFE2
 12882                           fsr1l	equ	0xFE1
 12883                           indf2	equ	0xFDF
 12884                           postinc2	equ	0xFDE
 12885                           postdec2	equ	0xFDD
 12886                           plusw2	equ	0xFDB
 12887                           fsr2h	equ	0xFDA
 12888                           fsr2l	equ	0xFD9
 12889                           status	equ	0xFD8
 12890                           
 12891 ;; *************** function _my_atoi *****************
 12892 ;; Defined at:
 12893 ;;		line 41 in file "../My_header\My_stdlib.h"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  str             2   28[BANK0 ] PTR const unsigned char 
 12896 ;;		 -> my_terminal_loop@op2(20), 
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;  ret             2   34[BANK0 ] unsigned int 
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  2   28[BANK0 ] unsigned int 
 12901 ;; Registers used:
 12902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/0
 12905 ;;		On exit  : 0/0
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12910 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12911 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12912 ;;Total ram usage:        8 bytes
 12913 ;; Hardware stack levels used:    1
 12914 ;; Hardware stack levels required when called:   12
 12915 ;; This function calls:
 12916 ;;		___wmul
 12917 ;; This function is called by:
 12918 ;;		_command_time
 12919 ;;		_command_operation
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text33
 12924  015E0E                     __ptext33:
 12925                           	opt stack 0
 12926  015E0E                     _my_atoi:
 12927                           	opt stack 16
 12928                           
 12929                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
 12930                           
 12931                           ; BSR set to: 0
 12932                           ;incstack = 0
 12933  015E0E  0E00               	movlw	0
 12934  015E10  0100               	movlb	0	; () banked
 12935  015E12  6F83               	movwf	(my_atoi@ret+1)& (0+255),b
 12936  015E14  0E00               	movlw	0
 12937  015E16  6F82               	movwf	my_atoi@ret& (0+255),b
 12938                           
 12939                           ;My_header\My_stdlib.h: 43: while (*str) {
 12940  015E18  D03E               	goto	l10728
 12941  015E1A                     l10718:
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
 12945  015E1A  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12946  015E1E  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12947  015E22  0E2F               	movlw	47
 12948  015E24  64DF               	cpfsgt	indf2,c
 12949  015E26  D034               	goto	l10726
 12950                           
 12951                           ; BSR set to: 0
 12952  015E28  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12953  015E2C  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12954  015E30  0E3A               	movlw	58
 12955  015E32  60DF               	cpfslt	indf2,c
 12956  015E34  D02D               	goto	l10726
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;My_header\My_stdlib.h: 45: ret *= 10;
 12960  015E36  C082  F076         	movff	my_atoi@ret,___wmul@multiplier
 12961  015E3A  C083  F077         	movff	my_atoi@ret+1,___wmul@multiplier+1
 12962  015E3E  0E00               	movlw	0
 12963  015E40  0100               	movlb	0	; () banked
 12964  015E42  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12965  015E44  0E0A               	movlw	10
 12966  015E46  6F78               	movwf	___wmul@multiplicand& (0+255),b
 12967  015E48  ECC1  F0B7         	call	___wmul	;wreg free
 12968  015E4C  C076  F082         	movff	?___wmul,my_atoi@ret
 12969  015E50  C077  F083         	movff	?___wmul+1,my_atoi@ret+1
 12970                           
 12971                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
 12972  015E54  0ED0               	movlw	208
 12973  015E56  0100               	movlb	0	; () banked
 12974  015E58  6F7E               	movwf	??_my_atoi& (0+255),b
 12975  015E5A  0EFF               	movlw	255
 12976  015E5C  0100               	movlb	0	; () banked
 12977  015E5E  6F7F               	movwf	(??_my_atoi+1)& (0+255),b
 12978  015E60  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12979  015E64  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12980  015E68  50DF               	movf	indf2,w,c
 12981  015E6A  0100               	movlb	0	; () banked
 12982  015E6C  6F80               	movwf	(??_my_atoi+2)& (0+255),b
 12983  015E6E  6B81               	clrf	(??_my_atoi+3)& (0+255),b
 12984  015E70  0100               	movlb	0	; () banked
 12985  015E72  517E               	movf	??_my_atoi& (0+255),w,b
 12986  015E74  0100               	movlb	0	; () banked
 12987  015E76  2780               	addwf	(??_my_atoi+2)& (0+255),f,b
 12988  015E78  0100               	movlb	0	; () banked
 12989  015E7A  517F               	movf	(??_my_atoi+1)& (0+255),w,b
 12990  015E7C  0100               	movlb	0	; () banked
 12991  015E7E  2381               	addwfc	(??_my_atoi+3)& (0+255),f,b
 12992  015E80  0100               	movlb	0	; () banked
 12993  015E82  5180               	movf	(??_my_atoi+2)& (0+255),w,b
 12994  015E84  0100               	movlb	0	; () banked
 12995  015E86  2782               	addwf	my_atoi@ret& (0+255),f,b
 12996  015E88  0100               	movlb	0	; () banked
 12997  015E8A  5181               	movf	(??_my_atoi+3)& (0+255),w,b
 12998  015E8C  0100               	movlb	0	; () banked
 12999  015E8E  2383               	addwfc	(my_atoi@ret+1)& (0+255),f,b
 13000  015E90                     l10726:
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;My_header\My_stdlib.h: 47: }
 13004                           ;My_header\My_stdlib.h: 48: str++;
 13005  015E90  0100               	movlb	0	; () banked
 13006  015E92  4B7C               	infsnz	my_atoi@str& (0+255),f,b
 13007  015E94  2B7D               	incf	(my_atoi@str+1)& (0+255),f,b
 13008  015E96                     l10728:
 13009                           
 13010                           ; BSR set to: 0
 13011  015E96  C07C  FFD9         	movff	my_atoi@str,fsr2l
 13012  015E9A  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 13013  015E9E  50DF               	movf	indf2,w,c
 13014  015EA0  A4D8               	btfss	status,2,c
 13015  015EA2  D7BB               	goto	l10718
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;My_header\My_stdlib.h: 49: }
 13019                           ;My_header\My_stdlib.h: 50: return ret;
 13020  015EA4  C082  F07C         	movff	my_atoi@ret,?_my_atoi
 13021  015EA8  C083  F07D         	movff	my_atoi@ret+1,?_my_atoi+1
 13022                           
 13023                           ; BSR set to: 0
 13024  015EAC  0012               	return		;funcret
 13025  015EAE                     __end_of_my_atoi:
 13026                           	opt stack 0
 13027                           tblptru	equ	0xFF8
 13028                           tblptrh	equ	0xFF7
 13029                           tblptrl	equ	0xFF6
 13030                           tablat	equ	0xFF5
 13031                           prodh	equ	0xFF4
 13032                           prodl	equ	0xFF3
 13033                           intcon	equ	0xFF2
 13034                           postinc0	equ	0xFEE
 13035                           wreg	equ	0xFE8
 13036                           indf1	equ	0xFE7
 13037                           postinc1	equ	0xFE6
 13038                           postdec1	equ	0xFE5
 13039                           fsr1h	equ	0xFE2
 13040                           fsr1l	equ	0xFE1
 13041                           indf2	equ	0xFDF
 13042                           postinc2	equ	0xFDE
 13043                           postdec2	equ	0xFDD
 13044                           plusw2	equ	0xFDB
 13045                           fsr2h	equ	0xFDA
 13046                           fsr2l	equ	0xFD9
 13047                           status	equ	0xFD8
 13048                           
 13049 ;; *************** function _command_at_hand *****************
 13050 ;; Defined at:
 13051 ;;		line 96 in file "../My_header\My_terminal.h"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;  tx              2  105[BANK0 ] PTR struct ringbuf
 13054 ;;		 -> usb_tx(8), 
 13055 ;;  hand            2  107[BANK0 ] PTR unsigned char 
 13056 ;;		 -> caltime_now(7), 
 13057 ;;  min             1  109[BANK0 ] unsigned char 
 13058 ;;  max             1  110[BANK0 ] unsigned char 
 13059 ;;  value           1  111[BANK0 ] unsigned char 
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;		None
 13062 ;; Return value:  Size  Location     Type
 13063 ;;		None               void
 13064 ;; Registers used:
 13065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13071 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;Total ram usage:        7 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; Hardware stack levels required when called:   16
 13078 ;; This function calls:
 13079 ;;		_RTCC_from_caltime
 13080 ;;		_print_time
 13081 ;;		_ringbuf_put_str
 13082 ;; This function is called by:
 13083 ;;		_command_time
 13084 ;; This function uses a non-reentrant model
 13085 ;;
 13086                           
 13087                           	psect	text34
 13088  016888                     __ptext34:
 13089                           	opt stack 0
 13090  016888                     _command_at_hand:
 13091                           	opt stack 11
 13092                           
 13093                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;incstack = 0
 13097  016888  0100               	movlb	0	; () banked
 13098  01688A  51CD               	movf	command_at_hand@min& (0+255),w,b
 13099  01688C  0100               	movlb	0	; () banked
 13100  01688E  5DCF               	subwf	command_at_hand@value& (0+255),w,b
 13101  016890  A0D8               	btfss	status,0,c
 13102  016892  D023               	goto	l10770
 13103                           
 13104                           ; BSR set to: 0
 13105  016894  0100               	movlb	0	; () banked
 13106  016896  51CF               	movf	command_at_hand@value& (0+255),w,b
 13107  016898  0100               	movlb	0	; () banked
 13108  01689A  5DCE               	subwf	command_at_hand@max& (0+255),w,b
 13109  01689C  A0D8               	btfss	status,0,c
 13110  01689E  D01D               	goto	l10770
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;My_header\My_terminal.h: 98: *hand = value;
 13114  0168A0  C0CB  FFD9         	movff	command_at_hand@hand,fsr2l
 13115  0168A4  C0CC  FFDA         	movff	command_at_hand@hand+1,fsr2h
 13116  0168A8  C0CF  FFDF         	movff	command_at_hand@value,indf2
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
 13120  0168AC  0E7E               	movlw	low _caltime_now
 13121  0168AE  0100               	movlb	0	; () banked
 13122  0168B0  6F91               	movwf	RTCC_from_caltime@ct& (0+255),b
 13123  0168B2  0E01               	movlw	high _caltime_now
 13124  0168B4  0100               	movlb	0	; () banked
 13125  0168B6  6F92               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
 13126  0168B8  0EFC               	movlw	low _epoch_now
 13127  0168BA  0100               	movlb	0	; () banked
 13128  0168BC  6F93               	movwf	RTCC_from_caltime@ep& (0+255),b
 13129  0168BE  0E00               	movlw	high _epoch_now
 13130  0168C0  0100               	movlb	0	; () banked
 13131  0168C2  6F94               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
 13132  0168C4  ECDC  F0B7         	call	_RTCC_from_caltime	;wreg free
 13133                           
 13134                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
 13135  0168C8  0E01               	movlw	1
 13136  0168CA  6E2A               	movwf	_time_change_flag,c
 13137                           
 13138                           ;My_header\My_terminal.h: 101: print_time(tx);
 13139  0168CC  C0C9  F0A9         	movff	command_at_hand@tx,print_time@tx
 13140  0168D0  C0CA  F0AA         	movff	command_at_hand@tx+1,print_time@tx+1
 13141  0168D4  EC40  F0B0         	call	_print_time	;wreg free
 13142                           
 13143                           ;My_header\My_terminal.h: 102: } else {
 13144  0168D8  0012               	return	
 13145  0168DA                     l10770:
 13146                           
 13147                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
 13148  0168DA  C0C9  F08A         	movff	command_at_hand@tx,ringbuf_put_str@rb
 13149  0168DE  C0CA  F08B         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
 13150  0168E2  0E5E               	movlw	low STR_6
 13151  0168E4  0100               	movlb	0	; () banked
 13152  0168E6  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13153  0168E8  0EFF               	movlw	high STR_6
 13154  0168EA  0100               	movlb	0	; () banked
 13155  0168EC  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13156  0168EE  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 13157  0168F2  0012               	return	
 13158  0168F4                     __end_of_command_at_hand:
 13159                           	opt stack 0
 13160                           tblptru	equ	0xFF8
 13161                           tblptrh	equ	0xFF7
 13162                           tblptrl	equ	0xFF6
 13163                           tablat	equ	0xFF5
 13164                           prodh	equ	0xFF4
 13165                           prodl	equ	0xFF3
 13166                           intcon	equ	0xFF2
 13167                           postinc0	equ	0xFEE
 13168                           wreg	equ	0xFE8
 13169                           indf1	equ	0xFE7
 13170                           postinc1	equ	0xFE6
 13171                           postdec1	equ	0xFE5
 13172                           fsr1h	equ	0xFE2
 13173                           fsr1l	equ	0xFE1
 13174                           indf2	equ	0xFDF
 13175                           postinc2	equ	0xFDE
 13176                           postdec2	equ	0xFDD
 13177                           plusw2	equ	0xFDB
 13178                           fsr2h	equ	0xFDA
 13179                           fsr2l	equ	0xFD9
 13180                           status	equ	0xFD8
 13181                           
 13182 ;; *************** function _print_time *****************
 13183 ;; Defined at:
 13184 ;;		line 82 in file "../My_header\My_terminal.h"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;  tx              2   73[BANK0 ] PTR struct ringbuf
 13187 ;;		 -> usb_tx(8), 
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;  str            30   75[BANK0 ] unsigned char [30]
 13190 ;; Return value:  Size  Location     Type
 13191 ;;		None               void
 13192 ;; Registers used:
 13193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/0
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13200 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13202 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13203 ;;Total ram usage:       32 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; Hardware stack levels required when called:   15
 13206 ;; This function calls:
 13207 ;;		_RTCC_from_RTCC
 13208 ;;		_ringbuf_put_str
 13209 ;;		_sprintf
 13210 ;; This function is called by:
 13211 ;;		_command_at_hand
 13212 ;;		_command_time
 13213 ;; This function uses a non-reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text35
 13217  016080                     __ptext35:
 13218                           	opt stack 0
 13219  016080                     _print_time:
 13220                           	opt stack 12
 13221                           
 13222                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
 13223                           
 13224                           ;incstack = 0
 13225  016080  0E7E               	movlw	low _caltime_now
 13226  016082  0100               	movlb	0	; () banked
 13227  016084  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 13228  016086  0E01               	movlw	high _caltime_now
 13229  016088  0100               	movlb	0	; () banked
 13230  01608A  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 13231  01608C  0EFC               	movlw	low _epoch_now
 13232  01608E  0100               	movlb	0	; () banked
 13233  016090  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 13234  016092  0E00               	movlw	high _epoch_now
 13235  016094  0100               	movlb	0	; () banked
 13236  016096  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 13237  016098  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
 13238                           
 13239                           ;My_header\My_terminal.h: 84: char str[30];
 13240                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
 13241                           ;My_header\My_terminal.h: 86: caltime_now.YY,
 13242                           ;My_header\My_terminal.h: 87: caltime_now.MM,
 13243                           ;My_header\My_terminal.h: 88: caltime_now.DD,
 13244                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
 13245                           ;My_header\My_terminal.h: 90: caltime_now.hh,
 13246                           ;My_header\My_terminal.h: 91: caltime_now.mm,
 13247                           ;My_header\My_terminal.h: 92: caltime_now.ss);
 13248  01609C  0EAB               	movlw	low print_time@str
 13249  01609E  0100               	movlb	0	; () banked
 13250  0160A0  6F83               	movwf	sprintf@sp& (0+255),b
 13251  0160A2  0E00               	movlw	high print_time@str
 13252  0160A4  0100               	movlb	0	; () banked
 13253  0160A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13254  0160A8  0E6A               	movlw	low STR_5
 13255  0160AA  0100               	movlb	0	; () banked
 13256  0160AC  6F85               	movwf	sprintf@f& (0+255),b
 13257  0160AE  0EFD               	movlw	high STR_5
 13258  0160B0  0100               	movlb	0	; () banked
 13259  0160B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13260  0160B4  C184  F087         	movff	_caltime_now+6,?_sprintf+4
 13261  0160B8  0100               	movlb	0	; () banked
 13262  0160BA  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13263  0160BC  C183  F089         	movff	_caltime_now+5,?_sprintf+6
 13264  0160C0  0100               	movlb	0	; () banked
 13265  0160C2  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13266  0160C4  C182  F08B         	movff	_caltime_now+4,?_sprintf+8
 13267  0160C8  0100               	movlb	0	; () banked
 13268  0160CA  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13269  0160CC  0101               	movlb	1	; () banked
 13270  0160CE  5181               	movf	(_caltime_now+3)& (0+255),w,b
 13271  0160D0  0D04               	mullw	4
 13272  0160D2  0EB2               	movlw	low _weekday_3char
 13273  0160D4  24F3               	addwf	prodl,w,c
 13274  0160D6  0100               	movlb	0	; () banked
 13275  0160D8  6F8D               	movwf	(?_sprintf+10)& (0+255),b
 13276  0160DA  0EFA               	movlw	high _weekday_3char
 13277  0160DC  20F4               	addwfc	prodh,w,c
 13278  0160DE  0100               	movlb	0	; () banked
 13279  0160E0  6F8E               	movwf	(?_sprintf+11)& (0+255),b
 13280  0160E2  C180  F08F         	movff	_caltime_now+2,?_sprintf+12
 13281  0160E6  0100               	movlb	0	; () banked
 13282  0160E8  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13283  0160EA  C17F  F091         	movff	_caltime_now+1,?_sprintf+14
 13284  0160EE  0100               	movlb	0	; () banked
 13285  0160F0  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13286  0160F2  C17E  F093         	movff	_caltime_now,?_sprintf+16
 13287  0160F6  0100               	movlb	0	; () banked
 13288  0160F8  6B94               	clrf	(?_sprintf+17)& (0+255),b
 13289  0160FA  ECEB  F087         	call	_sprintf	;wreg free
 13290                           
 13291                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
 13292  0160FE  C0A9  F08A         	movff	print_time@tx,ringbuf_put_str@rb
 13293  016102  C0AA  F08B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
 13294  016106  0EAB               	movlw	low print_time@str
 13295  016108  0100               	movlb	0	; () banked
 13296  01610A  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13297  01610C  0E00               	movlw	high print_time@str
 13298  01610E  0100               	movlb	0	; () banked
 13299  016110  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13300  016112  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 13301  016116  0012               	return		;funcret
 13302  016118                     __end_of_print_time:
 13303                           	opt stack 0
 13304                           tblptru	equ	0xFF8
 13305                           tblptrh	equ	0xFF7
 13306                           tblptrl	equ	0xFF6
 13307                           tablat	equ	0xFF5
 13308                           prodh	equ	0xFF4
 13309                           prodl	equ	0xFF3
 13310                           intcon	equ	0xFF2
 13311                           postinc0	equ	0xFEE
 13312                           wreg	equ	0xFE8
 13313                           indf1	equ	0xFE7
 13314                           postinc1	equ	0xFE6
 13315                           postdec1	equ	0xFE5
 13316                           fsr1h	equ	0xFE2
 13317                           fsr1l	equ	0xFE1
 13318                           indf2	equ	0xFDF
 13319                           postinc2	equ	0xFDE
 13320                           postdec2	equ	0xFDD
 13321                           plusw2	equ	0xFDB
 13322                           fsr2h	equ	0xFDA
 13323                           fsr2l	equ	0xFD9
 13324                           status	equ	0xFD8
 13325                           
 13326 ;; *************** function _sprintf *****************
 13327 ;; Defined at:
 13328 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13331 ;;		 -> normal_loop@str(30), print_time@str(30), 
 13332 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13333 ;;		 -> STR_134(26), STR_133(32), STR_5(37), 
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  val             4   65[BANK0 ] unsigned long 
 13336 ;;  tmpval          4    0        struct .
 13337 ;;  width           2   71[BANK0 ] int 
 13338 ;;  len             2   63[BANK0 ] unsigned int 
 13339 ;;  ap              2   61[BANK0 ] PTR void [1]
 13340 ;;		 -> ?_sprintf(2), 
 13341 ;;  cp              2   59[BANK0 ] PTR const unsigned char 
 13342 ;;		 -> STR_140(7), normal_loop@p(6), sp__ADC(2), weekday_3char(28), 
 13343 ;;  prec            2   57[BANK0 ] int 
 13344 ;;  c               1   70[BANK0 ] char 
 13345 ;;  flag            1   69[BANK0 ] unsigned char 
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  2   35[BANK0 ] int 
 13348 ;; Registers used:
 13349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13355 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13356 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13357 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13358 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13359 ;;Total ram usage:       38 bytes
 13360 ;; Hardware stack levels used:    1
 13361 ;; Hardware stack levels required when called:   12
 13362 ;; This function calls:
 13363 ;;		___lldiv
 13364 ;;		___llmod
 13365 ;;		___wmul
 13366 ;;		_isdigit
 13367 ;; This function is called by:
 13368 ;;		_print_time
 13369 ;;		_normal_loop
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text36
 13374  010FD6                     __ptext36:
 13375                           	opt stack 0
 13376  010FD6                     _sprintf:
 13377                           	opt stack 17
 13378                           
 13379                           ;doprnt.c: 494: va_list ap;
 13380                           ;doprnt.c: 499: signed char c;
 13381                           ;doprnt.c: 501: int width;
 13382                           ;doprnt.c: 504: int prec;
 13383                           ;doprnt.c: 508: unsigned char flag;
 13384                           ;doprnt.c: 523: union {
 13385                           ;doprnt.c: 524: unsigned long vd;
 13386                           ;doprnt.c: 525: double integ;
 13387                           ;doprnt.c: 526: } tmpval;
 13388                           ;doprnt.c: 528: unsigned long val;
 13389                           ;doprnt.c: 529: unsigned len;
 13390                           ;doprnt.c: 530: const char * cp;
 13391                           ;doprnt.c: 533: *ap = __va_start();
 13392                           
 13393                           ;incstack = 0
 13394  010FD6  0E87               	movlw	low (?_sprintf+4)
 13395  010FD8  0100               	movlb	0	; () banked
 13396  010FDA  6F9D               	movwf	sprintf@ap& (0+255),b
 13397  010FDC  0E00               	movlw	high (?_sprintf+4)
 13398  010FDE  0100               	movlb	0	; () banked
 13399  010FE0  6F9E               	movwf	(sprintf@ap+1)& (0+255),b
 13400                           
 13401                           ;doprnt.c: 536: while(c = *f++) {
 13402  010FE2  D270               	goto	l10510
 13403  010FE4                     l10364:
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;doprnt.c: 538: if(c != '%')
 13407  010FE4  0E25               	movlw	37
 13408  010FE6  0100               	movlb	0	; () banked
 13409  010FE8  19A6               	xorwf	sprintf@c& (0+255),w,b
 13410  010FEA  B4D8               	btfsc	status,2,c
 13411  010FEC  D00A               	goto	l10370
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;doprnt.c: 540: {
 13415                           ;doprnt.c: 541: ((*sp++ = (c)));
 13416  010FEE  C083  FFD9         	movff	sprintf@sp,fsr2l
 13417  010FF2  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13418  010FF6  C0A6  FFDF         	movff	sprintf@c,indf2
 13419                           
 13420                           ; BSR set to: 0
 13421  010FFA  0100               	movlb	0	; () banked
 13422  010FFC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13423  010FFE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13424                           
 13425                           ;doprnt.c: 542: continue;
 13426  011000  D261               	goto	l10510
 13427  011002                     l10370:
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;doprnt.c: 543: }
 13431                           ;doprnt.c: 546: width = 0;
 13432  011002  0E00               	movlw	0
 13433  011004  0100               	movlb	0	; () banked
 13434  011006  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 13435  011008  0E00               	movlw	0
 13436  01100A  6FA7               	movwf	sprintf@width& (0+255),b
 13437                           
 13438                           ;doprnt.c: 548: flag = 0;
 13439  01100C  0E00               	movlw	0
 13440  01100E  0100               	movlb	0	; () banked
 13441  011010  6FA5               	movwf	sprintf@flag& (0+255),b
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;doprnt.c: 551: switch(*f) {
 13445                           
 13446                           ;doprnt.c: 550: for(;;) {
 13447  011012  D005               	goto	l10376
 13448  011014                     l10372:
 13449                           
 13450                           ;doprnt.c: 580: flag |= 0x04;
 13451  011014  0100               	movlb	0	; () banked
 13452  011016  85A5               	bsf	sprintf@flag& (0+255),2,b
 13453                           
 13454                           ;doprnt.c: 581: f++;
 13455  011018  0100               	movlb	0	; () banked
 13456  01101A  4B85               	infsnz	sprintf@f& (0+255),f,b
 13457  01101C  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13458  01101E                     l10376:
 13459  01101E  C085  FFF6         	movff	sprintf@f,tblptrl
 13460  011022  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13461  011026                     	if	0	;tblptru may be non-zero
 13462  011026                     	endif
 13463  011026                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13464  011026  0E00               	movlw	low (__mediumconst shr (0+16))
 13465  011028  6EF8               	movwf	tblptru,c
 13466  01102A                     	endif
 13467  01102A  0008               	tblrd		*
 13468  01102C  50F5               	movf	tablat,w,c
 13469                           
 13470                           ; Switch size 1, requested type "space"
 13471                           ; Number of cases is 1, Range of values is 48 to 48
 13472                           ; switch strategies available:
 13473                           ; Name         Instructions Cycles
 13474                           ; simple_byte            4     3 (average)
 13475                           ;	Chosen strategy is simple_byte
 13476  01102E  0A30               	xorlw	48	; case 48
 13477  011030  B4D8               	btfsc	status,2,c
 13478  011032  D7F0               	goto	l10372
 13479                           
 13480                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13481                           
 13482                           ;doprnt.c: 586: }
 13483                           
 13484                           ;doprnt.c: 585: break;
 13485  011034  C085  FFF6         	movff	sprintf@f,tblptrl
 13486  011038  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13487  01103C                     	if	0	;tblptru may be non-zero
 13488  01103C                     	endif
 13489  01103C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13490  01103C  0E00               	movlw	low (__mediumconst shr (0+16))
 13491  01103E  6EF8               	movwf	tblptru,c
 13492  011040                     	endif
 13493  011040  0008               	tblrd		*
 13494  011042  50F5               	movf	tablat,w,c
 13495  011044  EC0B  F0B9         	call	_isdigit
 13496  011048  A0D8               	btfss	status,0,c
 13497  01104A  D0E0               	goto	l10428
 13498                           
 13499                           ;doprnt.c: 598: width = 0;
 13500  01104C  0E00               	movlw	0
 13501  01104E  0100               	movlb	0	; () banked
 13502  011050  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 13503  011052  0E00               	movlw	0
 13504  011054  6FA7               	movwf	sprintf@width& (0+255),b
 13505  011056                     l10382:
 13506                           
 13507                           ;doprnt.c: 600: width *= 10;
 13508  011056  C0A7  F076         	movff	sprintf@width,___wmul@multiplier
 13509  01105A  C0A8  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13510  01105E  0E00               	movlw	0
 13511  011060  0100               	movlb	0	; () banked
 13512  011062  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13513  011064  0E0A               	movlw	10
 13514  011066  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13515  011068  ECC1  F0B7         	call	___wmul	;wreg free
 13516  01106C  C076  F0A7         	movff	?___wmul,sprintf@width
 13517  011070  C077  F0A8         	movff	?___wmul+1,sprintf@width+1
 13518                           
 13519                           ;doprnt.c: 601: width += *f++ - '0';
 13520  011074  0ED0               	movlw	208
 13521  011076  0100               	movlb	0	; () banked
 13522  011078  6F95               	movwf	??_sprintf& (0+255),b
 13523  01107A  0EFF               	movlw	255
 13524  01107C  0100               	movlb	0	; () banked
 13525  01107E  6F96               	movwf	(??_sprintf+1)& (0+255),b
 13526  011080  C085  FFF6         	movff	sprintf@f,tblptrl
 13527  011084  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13528  011088                     	if	0	;tblptru may be non-zero
 13529  011088                     	endif
 13530  011088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13531  011088  0E00               	movlw	low (__mediumconst shr (0+16))
 13532  01108A  6EF8               	movwf	tblptru,c
 13533  01108C                     	endif
 13534  01108C  0008               	tblrd		*
 13535  01108E  50F5               	movf	tablat,w,c
 13536  011090  0100               	movlb	0	; () banked
 13537  011092  6F97               	movwf	(??_sprintf+2)& (0+255),b
 13538  011094  6B98               	clrf	(??_sprintf+3)& (0+255),b
 13539  011096  0100               	movlb	0	; () banked
 13540  011098  5195               	movf	??_sprintf& (0+255),w,b
 13541  01109A  0100               	movlb	0	; () banked
 13542  01109C  2797               	addwf	(??_sprintf+2)& (0+255),f,b
 13543  01109E  0100               	movlb	0	; () banked
 13544  0110A0  5196               	movf	(??_sprintf+1)& (0+255),w,b
 13545  0110A2  0100               	movlb	0	; () banked
 13546  0110A4  2398               	addwfc	(??_sprintf+3)& (0+255),f,b
 13547  0110A6  0100               	movlb	0	; () banked
 13548  0110A8  5197               	movf	(??_sprintf+2)& (0+255),w,b
 13549  0110AA  0100               	movlb	0	; () banked
 13550  0110AC  27A7               	addwf	sprintf@width& (0+255),f,b
 13551  0110AE  0100               	movlb	0	; () banked
 13552  0110B0  5198               	movf	(??_sprintf+3)& (0+255),w,b
 13553  0110B2  0100               	movlb	0	; () banked
 13554  0110B4  23A8               	addwfc	(sprintf@width+1)& (0+255),f,b
 13555                           
 13556                           ; BSR set to: 0
 13557  0110B6  0100               	movlb	0	; () banked
 13558  0110B8  4B85               	infsnz	sprintf@f& (0+255),f,b
 13559  0110BA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13563  0110BC  C085  FFF6         	movff	sprintf@f,tblptrl
 13564  0110C0  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13565  0110C4                     	if	0	;tblptru may be non-zero
 13566  0110C4                     	endif
 13567  0110C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13568  0110C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13569  0110C6  6EF8               	movwf	tblptru,c
 13570  0110C8                     	endif
 13571  0110C8  0008               	tblrd		*
 13572  0110CA  50F5               	movf	tablat,w,c
 13573  0110CC  EC0B  F0B9         	call	_isdigit
 13574  0110D0  A0D8               	btfss	status,0,c
 13575  0110D2  D09C               	goto	l10428
 13576  0110D4  D7C0               	goto	l10382
 13577  0110D6                     l10390:
 13578                           
 13579                           ;doprnt.c: 643: flag |= 0x10;
 13580  0110D6  0100               	movlb	0	; () banked
 13581  0110D8  89A5               	bsf	sprintf@flag& (0+255),4,b
 13582                           
 13583                           ;doprnt.c: 644: goto loop;
 13584  0110DA  D098               	goto	l10428
 13585  0110DC                     l10392:
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13589  0110DC  C09D  FFD9         	movff	sprintf@ap,fsr2l
 13590  0110E0  C09E  FFDA         	movff	sprintf@ap+1,fsr2h
 13591  0110E4  CFDE F09B          	movff	postinc2,sprintf@cp
 13592  0110E8  CFDD F09C          	movff	postdec2,sprintf@cp+1
 13593                           
 13594                           ; BSR set to: 0
 13595  0110EC  0E02               	movlw	2
 13596  0110EE  0100               	movlb	0	; () banked
 13597  0110F0  279D               	addwf	sprintf@ap& (0+255),f,b
 13598  0110F2  0E00               	movlw	0
 13599  0110F4  239E               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;doprnt.c: 740: if(!cp)
 13603  0110F6  0100               	movlb	0	; () banked
 13604  0110F8  519B               	movf	sprintf@cp& (0+255),w,b
 13605  0110FA  0100               	movlb	0	; () banked
 13606  0110FC  119C               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13607  0110FE  A4D8               	btfss	status,2,c
 13608  011100  D006               	goto	l10400
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;doprnt.c: 741: cp = "(null)";
 13612  011102  0E6E               	movlw	low STR_140
 13613  011104  0100               	movlb	0	; () banked
 13614  011106  6F9B               	movwf	sprintf@cp& (0+255),b
 13615  011108  0EFF               	movlw	high STR_140
 13616  01110A  0100               	movlb	0	; () banked
 13617  01110C  6F9C               	movwf	(sprintf@cp+1)& (0+255),b
 13618  01110E                     l10400:
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;doprnt.c: 745: len = 0;
 13622  01110E  0E00               	movlw	0
 13623  011110  0100               	movlb	0	; () banked
 13624  011112  6FA0               	movwf	(sprintf@len+1)& (0+255),b
 13625  011114  0E00               	movlw	0
 13626  011116  6F9F               	movwf	sprintf@len& (0+255),b
 13627                           
 13628                           ;doprnt.c: 746: while(cp[len])
 13629  011118  D003               	goto	l10404
 13630  01111A                     l10402:
 13631                           
 13632                           ;doprnt.c: 747: len++;
 13633  01111A  0100               	movlb	0	; () banked
 13634  01111C  4B9F               	infsnz	sprintf@len& (0+255),f,b
 13635  01111E  2BA0               	incf	(sprintf@len+1)& (0+255),f,b
 13636  011120                     l10404:
 13637                           
 13638                           ; BSR set to: 0
 13639  011120  0100               	movlb	0	; () banked
 13640  011122  519F               	movf	sprintf@len& (0+255),w,b
 13641  011124  0100               	movlb	0	; () banked
 13642  011126  259B               	addwf	sprintf@cp& (0+255),w,b
 13643  011128  0100               	movlb	0	; () banked
 13644  01112A  6F95               	movwf	??_sprintf& (0+255),b
 13645  01112C  0100               	movlb	0	; () banked
 13646  01112E  51A0               	movf	(sprintf@len+1)& (0+255),w,b
 13647  011130  0100               	movlb	0	; () banked
 13648  011132  219C               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13649  011134  0100               	movlb	0	; () banked
 13650  011136  6F96               	movwf	(??_sprintf+1)& (0+255),b
 13651  011138  C095  FFF6         	movff	??_sprintf,tblptrl
 13652  01113C  C096  FFF7         	movff	??_sprintf+1,tblptrh
 13653  011140  0E00               	movlw	low (__mediumconst shr (0+16))
 13654  011142  6EF8               	movwf	tblptru,c
 13655  011144  0E0E               	movlw	(high __ramtop+-1)
 13656  011146  64F7               	cpfsgt	tblptrh,c
 13657  011148  D003               	bra	u11997
 13658  01114A  0008               	tblrd		*
 13659  01114C  50F5               	movf	tablat,w,c
 13660  01114E  D005               	bra	u11990
 13661  011150                     u11997:
 13662  011150  CFF6 FFE1          	movff	tblptrl,fsr1l
 13663  011154  CFF7 FFE2          	movff	tblptrh,fsr1h
 13664  011158  50E7               	movf	indf1,w,c
 13665  01115A                     u11990:
 13666  01115A  0900               	iorlw	0
 13667  01115C  A4D8               	btfss	status,2,c
 13668  01115E  D7DD               	goto	l10402
 13669                           
 13670                           ;doprnt.c: 757: if(width > len)
 13671  011160  0100               	movlb	0	; () banked
 13672  011162  51A7               	movf	sprintf@width& (0+255),w,b
 13673  011164  0100               	movlb	0	; () banked
 13674  011166  5D9F               	subwf	sprintf@len& (0+255),w,b
 13675  011168  0100               	movlb	0	; () banked
 13676  01116A  51A8               	movf	(sprintf@width+1)& (0+255),w,b
 13677  01116C  0100               	movlb	0	; () banked
 13678  01116E  59A0               	subwfb	(sprintf@len+1)& (0+255),w,b
 13679  011170  B0D8               	btfsc	status,0,c
 13680  011172  D009               	goto	l10410
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;doprnt.c: 758: width -= len;
 13684  011174  0100               	movlb	0	; () banked
 13685  011176  519F               	movf	sprintf@len& (0+255),w,b
 13686  011178  0100               	movlb	0	; () banked
 13687  01117A  5FA7               	subwf	sprintf@width& (0+255),f,b
 13688  01117C  0100               	movlb	0	; () banked
 13689  01117E  51A0               	movf	(sprintf@len+1)& (0+255),w,b
 13690  011180  0100               	movlb	0	; () banked
 13691  011182  5BA8               	subwfb	(sprintf@width+1)& (0+255),f,b
 13692  011184  D00F               	goto	l10416
 13693  011186                     l10410:
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;doprnt.c: 759: else
 13697                           ;doprnt.c: 760: width = 0;
 13698  011186  0E00               	movlw	0
 13699  011188  0100               	movlb	0	; () banked
 13700  01118A  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 13701  01118C  0E00               	movlw	0
 13702  01118E  6FA7               	movwf	sprintf@width& (0+255),b
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;doprnt.c: 764: while(width--)
 13706  011190  D009               	goto	l10416
 13707  011192                     l10412:
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13711  011192  C083  FFD9         	movff	sprintf@sp,fsr2l
 13712  011196  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13713  01119A  0E20               	movlw	32
 13714  01119C  6EDF               	movwf	indf2,c
 13715                           
 13716                           ; BSR set to: 0
 13717  01119E  0100               	movlb	0	; () banked
 13718  0111A0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13719  0111A2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13720  0111A4                     l10416:
 13721                           
 13722                           ; BSR set to: 0
 13723  0111A4  0100               	movlb	0	; () banked
 13724  0111A6  07A7               	decf	sprintf@width& (0+255),f,b
 13725  0111A8  A0D8               	btfss	status,0,c
 13726  0111AA  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 13727  0111AC  0100               	movlb	0	; () banked
 13728  0111AE  29A7               	incf	sprintf@width& (0+255),w,b
 13729  0111B0  E1F0               	bnz	l10412
 13730  0111B2  0100               	movlb	0	; () banked
 13731  0111B4  29A8               	incf	(sprintf@width+1)& (0+255),w,b
 13732  0111B6  B4D8               	btfsc	status,2,c
 13733  0111B8  D01D               	goto	l10424
 13734  0111BA  D7EB               	goto	l10412
 13735  0111BC                     l10418:
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13739  0111BC  C09B  FFF6         	movff	sprintf@cp,tblptrl
 13740  0111C0  C09C  FFF7         	movff	sprintf@cp+1,tblptrh
 13741  0111C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13742  0111C6  6EF8               	movwf	tblptru,c
 13743  0111C8  C083  FFD9         	movff	sprintf@sp,fsr2l
 13744  0111CC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13745  0111D0  0E0E               	movlw	(high __ramtop+-1)
 13746  0111D2  64F7               	cpfsgt	tblptrh,c
 13747  0111D4  D003               	bra	u12037
 13748  0111D6  0008               	tblrd		*
 13749  0111D8  50F5               	movf	tablat,w,c
 13750  0111DA  D005               	bra	u12030
 13751  0111DC                     u12037:
 13752  0111DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 13753  0111E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 13754  0111E4  50E7               	movf	indf1,w,c
 13755  0111E6                     u12030:
 13756  0111E6  6EDF               	movwf	indf2,c
 13757  0111E8  0100               	movlb	0	; () banked
 13758  0111EA  4B9B               	infsnz	sprintf@cp& (0+255),f,b
 13759  0111EC  2B9C               	incf	(sprintf@cp+1)& (0+255),f,b
 13760                           
 13761                           ; BSR set to: 0
 13762  0111EE  0100               	movlb	0	; () banked
 13763  0111F0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13764  0111F2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13765  0111F4                     l10424:
 13766                           
 13767                           ; BSR set to: 0
 13768  0111F4  0100               	movlb	0	; () banked
 13769  0111F6  079F               	decf	sprintf@len& (0+255),f,b
 13770  0111F8  A0D8               	btfss	status,0,c
 13771  0111FA  07A0               	decf	(sprintf@len+1)& (0+255),f,b
 13772  0111FC  0100               	movlb	0	; () banked
 13773  0111FE  299F               	incf	sprintf@len& (0+255),w,b
 13774  011200  E1DD               	bnz	l10418
 13775  011202  0100               	movlb	0	; () banked
 13776  011204  29A0               	incf	(sprintf@len+1)& (0+255),w,b
 13777  011206  B4D8               	btfsc	status,2,c
 13778  011208  D15D               	goto	l10510
 13779  01120A  D7D8               	goto	l10418
 13780  01120C                     l10428:
 13781  01120C  C085  FFF6         	movff	sprintf@f,tblptrl
 13782  011210  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13783  011214  0100               	movlb	0	; () banked
 13784  011216  4B85               	infsnz	sprintf@f& (0+255),f,b
 13785  011218  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13786  01121A                     	if	0	;tblptru may be non-zero
 13787  01121A                     	endif
 13788  01121A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13789  01121A  0E00               	movlw	low (__mediumconst shr (0+16))
 13790  01121C  6EF8               	movwf	tblptru,c
 13791  01121E                     	endif
 13792  01121E  0008               	tblrd		*
 13793  011220  CFF5 F0A6          	movff	tablat,sprintf@c
 13794  011224  0100               	movlb	0	; () banked
 13795  011226  51A6               	movf	sprintf@c& (0+255),w,b
 13796                           
 13797                           ; Switch size 1, requested type "space"
 13798                           ; Number of cases is 5, Range of values is 0 to 115
 13799                           ; switch strategies available:
 13800                           ; Name         Instructions Cycles
 13801                           ; simple_byte           16     9 (average)
 13802                           ;	Chosen strategy is simple_byte
 13803  011228  0A00               	xorlw	0	; case 0
 13804  01122A  B4D8               	btfsc	status,2,c
 13805  01122C  D15B               	goto	l10512
 13806  01122E  0A64               	xorlw	100	; case 100
 13807  011230  B4D8               	btfsc	status,2,c
 13808  011232  D00A               	goto	l1659
 13809  011234  0A0D               	xorlw	13	; case 105
 13810  011236  B4D8               	btfsc	status,2,c
 13811  011238  D007               	goto	l1659
 13812  01123A  0A05               	xorlw	5	; case 108
 13813  01123C  B4D8               	btfsc	status,2,c
 13814  01123E  D74B               	goto	l10390
 13815  011240  0A1F               	xorlw	31	; case 115
 13816  011242  B4D8               	btfsc	status,2,c
 13817  011244  D74B               	goto	l10392
 13818  011246  D13E               	goto	l10510
 13819  011248                     l1659:
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;doprnt.c: 1253: {
 13823                           ;doprnt.c: 1255: if(flag & 0x10)
 13824  011248  0100               	movlb	0	; () banked
 13825  01124A  A9A5               	btfss	sprintf@flag& (0+255),4,b
 13826  01124C  D00E               	goto	l10434
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13830  01124E  C09D  FFD9         	movff	sprintf@ap,fsr2l
 13831  011252  C09E  FFDA         	movff	sprintf@ap+1,fsr2h
 13832  011256  CFDE F0A1          	movff	postinc2,sprintf@val
 13833  01125A  CFDE F0A2          	movff	postinc2,sprintf@val+1
 13834  01125E  CFDE F0A3          	movff	postinc2,sprintf@val+2
 13835  011262  CFDE F0A4          	movff	postinc2,sprintf@val+3
 13836                           
 13837                           ; BSR set to: 0
 13838  011266  0E04               	movlw	4
 13839  011268  D00F               	goto	L3
 13840  01126A                     l10434:
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;doprnt.c: 1257: else
 13844                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13845  01126A  C09D  FFD9         	movff	sprintf@ap,fsr2l
 13846  01126E  C09E  FFDA         	movff	sprintf@ap+1,fsr2h
 13847  011272  CFDE F0A1          	movff	postinc2,sprintf@val
 13848  011276  CFDD F0A2          	movff	postdec2,sprintf@val+1
 13849  01127A  0100               	movlb	0	; () banked
 13850  01127C  0E00               	movlw	0
 13851  01127E  BFA2               	btfsc	(sprintf@val+1)& (0+255),7,b
 13852  011280  0EFF               	movlw	-1
 13853  011282  6FA3               	movwf	(sprintf@val+2)& (0+255),b
 13854  011284  6FA4               	movwf	(sprintf@val+3)& (0+255),b
 13855                           
 13856                           ; BSR set to: 0
 13857  011286  0E02               	movlw	2
 13858  011288                     L3:
 13859  011288  0100               	movlb	0	; () banked
 13860  01128A  279D               	addwf	sprintf@ap& (0+255),f,b
 13861  01128C  0E00               	movlw	0
 13862  01128E  239E               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;doprnt.c: 1261: if((long)val < 0) {
 13866                           
 13867                           ; BSR set to: 0
 13868  011290  0100               	movlb	0	; () banked
 13869  011292  AFA4               	btfss	(sprintf@val+3)& (0+255),7,b
 13870  011294  D00C               	goto	l10444
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;doprnt.c: 1262: flag |= 0x03;
 13874  011296  0E03               	movlw	3
 13875  011298  0100               	movlb	0	; () banked
 13876  01129A  13A5               	iorwf	sprintf@flag& (0+255),f,b
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;doprnt.c: 1263: val = -val;
 13880  01129C  0100               	movlb	0	; () banked
 13881  01129E  1FA4               	comf	(sprintf@val+3)& (0+255),f,b
 13882  0112A0  1FA3               	comf	(sprintf@val+2)& (0+255),f,b
 13883  0112A2  1FA2               	comf	(sprintf@val+1)& (0+255),f,b
 13884  0112A4  6DA1               	negf	sprintf@val& (0+255),b
 13885  0112A6  0E00               	movlw	0
 13886  0112A8  23A2               	addwfc	(sprintf@val+1)& (0+255),f,b
 13887  0112AA  23A3               	addwfc	(sprintf@val+2)& (0+255),f,b
 13888  0112AC  23A4               	addwfc	(sprintf@val+3)& (0+255),f,b
 13889  0112AE                     l10444:
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;doprnt.c: 1264: }
 13893                           ;doprnt.c: 1266: }
 13894                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13895  0112AE  0E01               	movlw	1
 13896  0112B0  0100               	movlb	0	; () banked
 13897  0112B2  6FA6               	movwf	sprintf@c& (0+255),b
 13898  0112B4                     l10446:
 13899                           
 13900                           ; BSR set to: 0
 13901  0112B4  0E0A               	movlw	10
 13902  0112B6  0100               	movlb	0	; () banked
 13903  0112B8  19A6               	xorwf	sprintf@c& (0+255),w,b
 13904  0112BA  B4D8               	btfsc	status,2,c
 13905  0112BC  D021               	goto	l10458
 13906                           
 13907                           ; BSR set to: 0
 13908                           ;doprnt.c: 1306: if(val < dpowers[c])
 13909                           
 13910                           ; BSR set to: 0
 13911                           
 13912                           ; BSR set to: 0
 13913  0112BE  0100               	movlb	0	; () banked
 13914  0112C0  51A6               	movf	sprintf@c& (0+255),w,b
 13915  0112C2  0D04               	mullw	4
 13916  0112C4  0E5F               	movlw	low _dpowers
 13917  0112C6  24F3               	addwf	prodl,w,c
 13918  0112C8  6EF6               	movwf	tblptrl,c
 13919  0112CA  0EF9               	movlw	high _dpowers
 13920  0112CC  20F4               	addwfc	prodh,w,c
 13921  0112CE  6EF7               	movwf	tblptrh,c
 13922  0112D0                     	if	1	;There are 3 active tblptr bytes
 13923  0112D0  6AF8               	clrf	tblptru,c
 13924  0112D2  0E00               	movlw	low (__mediumconst shr (0+16))
 13925  0112D4  22F8               	addwfc	tblptru,f,c
 13926  0112D6                     	endif
 13927  0112D6  0009               	tblrd		*+
 13928  0112D8  50F5               	movf	tablat,w,c
 13929  0112DA  0100               	movlb	0	; () banked
 13930  0112DC  5DA1               	subwf	sprintf@val& (0+255),w,b
 13931  0112DE  0009               	tblrd		*+
 13932  0112E0  50F5               	movf	tablat,w,c
 13933  0112E2  0100               	movlb	0	; () banked
 13934  0112E4  59A2               	subwfb	(sprintf@val+1)& (0+255),w,b
 13935  0112E6  0009               	tblrd		*+
 13936  0112E8  50F5               	movf	tablat,w,c
 13937  0112EA  0100               	movlb	0	; () banked
 13938  0112EC  59A3               	subwfb	(sprintf@val+2)& (0+255),w,b
 13939  0112EE  0009               	tblrd		*+
 13940  0112F0  50F5               	movf	tablat,w,c
 13941  0112F2  0100               	movlb	0	; () banked
 13942  0112F4  59A4               	subwfb	(sprintf@val+3)& (0+255),w,b
 13943  0112F6  A0D8               	btfss	status,0,c
 13944  0112F8  D003               	goto	l10458
 13945                           
 13946                           ; BSR set to: 0
 13947                           
 13948                           ; BSR set to: 0
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;doprnt.c: 1307: break;
 13952  0112FA  0100               	movlb	0	; () banked
 13953  0112FC  2BA6               	incf	sprintf@c& (0+255),f,b
 13954  0112FE  D7DA               	goto	l10446
 13955  011300                     l10458:
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13959  011300  0100               	movlb	0	; () banked
 13960  011302  51A7               	movf	sprintf@width& (0+255),w,b
 13961  011304  0100               	movlb	0	; () banked
 13962  011306  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 13963  011308  B4D8               	btfsc	status,2,c
 13964  01130A  D00B               	goto	l10464
 13965                           
 13966                           ; BSR set to: 0
 13967  01130C  C0A5  F095         	movff	sprintf@flag,??_sprintf
 13968  011310  0E03               	movlw	3
 13969  011312  0100               	movlb	0	; () banked
 13970  011314  1795               	andwf	??_sprintf& (0+255),f,b
 13971  011316  B4D8               	btfsc	status,2,c
 13972  011318  D004               	goto	l10464
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;doprnt.c: 1346: width--;
 13976  01131A  0100               	movlb	0	; () banked
 13977  01131C  07A7               	decf	sprintf@width& (0+255),f,b
 13978  01131E  A0D8               	btfss	status,0,c
 13979  011320  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 13980  011322                     l10464:
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;doprnt.c: 1381: if(width > c)
 13984  011322  0E80               	movlw	128
 13985  011324  0100               	movlb	0	; () banked
 13986  011326  BFA6               	btfsc	sprintf@c& (0+255),7,b
 13987  011328  0E7F               	movlw	127
 13988  01132A  0100               	movlb	0	; () banked
 13989  01132C  6F95               	movwf	??_sprintf& (0+255),b
 13990  01132E  0100               	movlb	0	; () banked
 13991  011330  51A7               	movf	sprintf@width& (0+255),w,b
 13992  011332  0100               	movlb	0	; () banked
 13993  011334  5DA6               	subwf	sprintf@c& (0+255),w,b
 13994  011336  0100               	movlb	0	; () banked
 13995  011338  51A8               	movf	(sprintf@width+1)& (0+255),w,b
 13996  01133A  0A80               	xorlw	128
 13997  01133C  0100               	movlb	0	; () banked
 13998  01133E  5995               	subwfb	??_sprintf& (0+255),w,b
 13999  011340  B0D8               	btfsc	status,0,c
 14000  011342  D00B               	goto	l10468
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;doprnt.c: 1382: width -= c;
 14004  011344  0100               	movlb	0	; () banked
 14005  011346  51A6               	movf	sprintf@c& (0+255),w,b
 14006  011348  0100               	movlb	0	; () banked
 14007  01134A  5FA7               	subwf	sprintf@width& (0+255),f,b
 14008  01134C  0E00               	movlw	0
 14009  01134E  0100               	movlb	0	; () banked
 14010  011350  BFA6               	btfsc	sprintf@c& (0+255),7,b
 14011  011352  0EFF               	movlw	255
 14012  011354  0100               	movlb	0	; () banked
 14013  011356  5BA8               	subwfb	(sprintf@width+1)& (0+255),f,b
 14014  011358  D005               	goto	l10470
 14015  01135A                     l10468:
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;doprnt.c: 1383: else
 14019                           ;doprnt.c: 1384: width = 0;
 14020  01135A  0E00               	movlw	0
 14021  01135C  0100               	movlb	0	; () banked
 14022  01135E  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 14023  011360  0E00               	movlw	0
 14024  011362  6FA7               	movwf	sprintf@width& (0+255),b
 14025  011364                     l10470:
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;doprnt.c: 1387: if(flag & 0x04) {
 14029  011364  0100               	movlb	0	; () banked
 14030  011366  A5A5               	btfss	sprintf@flag& (0+255),2,b
 14031  011368  D024               	goto	l10486
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;doprnt.c: 1392: if(flag & 0x03)
 14035  01136A  C0A5  F095         	movff	sprintf@flag,??_sprintf
 14036  01136E  0E03               	movlw	3
 14037  011370  0100               	movlb	0	; () banked
 14038  011372  1795               	andwf	??_sprintf& (0+255),f,b
 14039  011374  B4D8               	btfsc	status,2,c
 14040  011376  D009               	goto	l10478
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14044  011378  C083  FFD9         	movff	sprintf@sp,fsr2l
 14045  01137C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14046  011380  0E2D               	movlw	45
 14047  011382  6EDF               	movwf	indf2,c
 14048                           
 14049                           ; BSR set to: 0
 14050  011384  0100               	movlb	0	; () banked
 14051  011386  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14052  011388  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14053  01138A                     l10478:
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;doprnt.c: 1415: if(width)
 14057  01138A  0100               	movlb	0	; () banked
 14058  01138C  51A7               	movf	sprintf@width& (0+255),w,b
 14059  01138E  0100               	movlb	0	; () banked
 14060  011390  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 14061  011392  B4D8               	btfsc	status,2,c
 14062  011394  D037               	goto	l10500
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14066                           
 14067                           ; BSR set to: 0
 14068                           
 14069                           ;doprnt.c: 1416: do
 14070  011396  C083  FFD9         	movff	sprintf@sp,fsr2l
 14071  01139A  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14072  01139E  0E30               	movlw	48
 14073  0113A0  6EDF               	movwf	indf2,c
 14074                           
 14075                           ; BSR set to: 0
 14076  0113A2  0100               	movlb	0	; () banked
 14077  0113A4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14078  0113A6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;doprnt.c: 1418: while(--width);
 14082  0113A8  0100               	movlb	0	; () banked
 14083  0113AA  07A7               	decf	sprintf@width& (0+255),f,b
 14084  0113AC  A0D8               	btfss	status,0,c
 14085  0113AE  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 14086  0113B0  D7EC               	goto	l10478
 14087  0113B2                     l10486:
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;doprnt.c: 1422: {
 14091                           ;doprnt.c: 1424: if(width
 14092                           ;doprnt.c: 1428: )
 14093  0113B2  0100               	movlb	0	; () banked
 14094  0113B4  51A7               	movf	sprintf@width& (0+255),w,b
 14095  0113B6  0100               	movlb	0	; () banked
 14096  0113B8  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 14097  0113BA  B4D8               	btfsc	status,2,c
 14098  0113BC  D013               	goto	l10494
 14099  0113BE                     l10488:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14103  0113BE  C083  FFD9         	movff	sprintf@sp,fsr2l
 14104  0113C2  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14105  0113C6  0E20               	movlw	32
 14106  0113C8  6EDF               	movwf	indf2,c
 14107                           
 14108                           ; BSR set to: 0
 14109  0113CA  0100               	movlb	0	; () banked
 14110  0113CC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14111  0113CE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14112                           
 14113                           ; BSR set to: 0
 14114                           ;doprnt.c: 1431: while(--width);
 14115  0113D0  0100               	movlb	0	; () banked
 14116  0113D2  07A7               	decf	sprintf@width& (0+255),f,b
 14117  0113D4  A0D8               	btfss	status,0,c
 14118  0113D6  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 14119  0113D8  0100               	movlb	0	; () banked
 14120  0113DA  51A7               	movf	sprintf@width& (0+255),w,b
 14121  0113DC  0100               	movlb	0	; () banked
 14122  0113DE  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 14123  0113E0  A4D8               	btfss	status,2,c
 14124  0113E2  D7ED               	goto	l10488
 14125  0113E4                     l10494:
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;doprnt.c: 1438: if(flag & 0x03)
 14129  0113E4  C0A5  F095         	movff	sprintf@flag,??_sprintf
 14130  0113E8  0E03               	movlw	3
 14131  0113EA  0100               	movlb	0	; () banked
 14132  0113EC  1795               	andwf	??_sprintf& (0+255),f,b
 14133  0113EE  B4D8               	btfsc	status,2,c
 14134  0113F0  D009               	goto	l10500
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14138  0113F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14139  0113F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14140  0113FA  0E2D               	movlw	45
 14141  0113FC  6EDF               	movwf	indf2,c
 14142                           
 14143                           ; BSR set to: 0
 14144  0113FE  0100               	movlb	0	; () banked
 14145  011400  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14146  011402  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14147  011404                     l10500:
 14148                           
 14149                           ; BSR set to: 0
 14150                           ;doprnt.c: 1469: }
 14151                           ;doprnt.c: 1472: prec = c;
 14152  011404  0100               	movlb	0	; () banked
 14153  011406  51A6               	movf	sprintf@c& (0+255),w,b
 14154  011408  0100               	movlb	0	; () banked
 14155  01140A  6F99               	movwf	sprintf@prec& (0+255),b
 14156  01140C  6B9A               	clrf	(sprintf@prec+1)& (0+255),b
 14157  01140E  BF99               	btfsc	sprintf@prec& (0+255),7,b
 14158  011410  079A               	decf	(sprintf@prec+1)& (0+255),f,b
 14159                           
 14160                           ;doprnt.c: 1474: while(prec--) {
 14161  011412  D04D               	goto	l10508
 14162  011414                     l10502:
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;doprnt.c: 1478: {
 14166                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14167  011414  C099  F095         	movff	sprintf@prec,??_sprintf
 14168  011418  C09A  F096         	movff	sprintf@prec+1,??_sprintf+1
 14169  01141C  0100               	movlb	0	; () banked
 14170  01141E  90D8               	bcf	status,0,c
 14171  011420  3795               	rlcf	??_sprintf& (0+255),f,b
 14172  011422  3796               	rlcf	(??_sprintf+1)& (0+255),f,b
 14173  011424  0100               	movlb	0	; () banked
 14174  011426  90D8               	bcf	status,0,c
 14175  011428  3795               	rlcf	??_sprintf& (0+255),f,b
 14176  01142A  3796               	rlcf	(??_sprintf+1)& (0+255),f,b
 14177  01142C  0E5F               	movlw	low _dpowers
 14178  01142E  0100               	movlb	0	; () banked
 14179  011430  2595               	addwf	??_sprintf& (0+255),w,b
 14180  011432  6EF6               	movwf	tblptrl,c
 14181  011434  0EF9               	movlw	high _dpowers
 14182  011436  2196               	addwfc	(??_sprintf+1)& (0+255),w,b
 14183  011438  6EF7               	movwf	tblptrh,c
 14184  01143A                     	if	1	;There are 3 active tblptr bytes
 14185  01143A  6AF8               	clrf	tblptru,c
 14186  01143C  0E00               	movlw	low (__mediumconst shr (0+16))
 14187  01143E  22F8               	addwfc	tblptru,f,c
 14188  011440                     	endif
 14189  011440  0009               	tblrd		*+
 14190  011442  CFF5 F064          	movff	tablat,___lldiv@divisor
 14191  011446  0009               	tblrd		*+
 14192  011448  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14193  01144C  0009               	tblrd		*+
 14194  01144E  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14195  011452  000A               	tblrd		*-
 14196  011454  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14197  011458  C0A1  F060         	movff	sprintf@val,___lldiv@dividend
 14198  01145C  C0A2  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14199  011460  C0A3  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14200  011464  C0A4  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14201  011468  EC9E  F0AC         	call	___lldiv	;wreg free
 14202  01146C  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14203  011470  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14204  011474  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14205  011478  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14206  01147C  0E0A               	movlw	10
 14207  01147E  0100               	movlb	0	; () banked
 14208  011480  6F71               	movwf	___llmod@divisor& (0+255),b
 14209  011482  0E00               	movlw	0
 14210  011484  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14211  011486  0E00               	movlw	0
 14212  011488  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14213  01148A  0E00               	movlw	0
 14214  01148C  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14215  01148E  ECA6  F0AF         	call	___llmod	;wreg free
 14216  011492  0100               	movlb	0	; () banked
 14217  011494  516D               	movf	?___llmod& (0+255),w,b
 14218  011496  0F30               	addlw	48
 14219  011498  0100               	movlb	0	; () banked
 14220  01149A  6FA6               	movwf	sprintf@c& (0+255),b
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;doprnt.c: 1523: }
 14224                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14225  01149C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14226  0114A0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14227  0114A4  C0A6  FFDF         	movff	sprintf@c,indf2
 14228                           
 14229                           ; BSR set to: 0
 14230  0114A8  0100               	movlb	0	; () banked
 14231  0114AA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14232  0114AC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14233  0114AE                     l10508:
 14234                           
 14235                           ; BSR set to: 0
 14236  0114AE  0100               	movlb	0	; () banked
 14237  0114B0  0799               	decf	sprintf@prec& (0+255),f,b
 14238  0114B2  A0D8               	btfss	status,0,c
 14239  0114B4  079A               	decf	(sprintf@prec+1)& (0+255),f,b
 14240  0114B6  0100               	movlb	0	; () banked
 14241  0114B8  2999               	incf	sprintf@prec& (0+255),w,b
 14242  0114BA  E1AC               	bnz	l10502
 14243  0114BC  0100               	movlb	0	; () banked
 14244  0114BE  299A               	incf	(sprintf@prec+1)& (0+255),w,b
 14245  0114C0  A4D8               	btfss	status,2,c
 14246  0114C2  D7A8               	goto	l10502
 14247  0114C4                     l10510:
 14248                           
 14249                           ; BSR set to: 0
 14250  0114C4  C085  FFF6         	movff	sprintf@f,tblptrl
 14251  0114C8  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14252  0114CC  0100               	movlb	0	; () banked
 14253  0114CE  4B85               	infsnz	sprintf@f& (0+255),f,b
 14254  0114D0  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14255  0114D2                     	if	0	;tblptru may be non-zero
 14256  0114D2                     	endif
 14257  0114D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14258  0114D2  0E00               	movlw	low (__mediumconst shr (0+16))
 14259  0114D4  6EF8               	movwf	tblptru,c
 14260  0114D6                     	endif
 14261  0114D6  0008               	tblrd		*
 14262  0114D8  CFF5 F0A6          	movff	tablat,sprintf@c
 14263  0114DC  0100               	movlb	0	; () banked
 14264  0114DE  51A6               	movf	sprintf@c& (0+255),w,b
 14265  0114E0  A4D8               	btfss	status,2,c
 14266  0114E2  D580               	goto	l10364
 14267  0114E4                     l10512:
 14268                           
 14269                           ;doprnt.c: 1538: *sp = 0;
 14270  0114E4  C083  FFD9         	movff	sprintf@sp,fsr2l
 14271  0114E8  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14272  0114EC  0E00               	movlw	0
 14273  0114EE  6EDF               	movwf	indf2,c
 14274  0114F0  0012               	return	
 14275  0114F2                     __end_of_sprintf:
 14276                           	opt stack 0
 14277                           tblptru	equ	0xFF8
 14278                           tblptrh	equ	0xFF7
 14279                           tblptrl	equ	0xFF6
 14280                           tablat	equ	0xFF5
 14281                           prodh	equ	0xFF4
 14282                           prodl	equ	0xFF3
 14283                           intcon	equ	0xFF2
 14284                           postinc0	equ	0xFEE
 14285                           wreg	equ	0xFE8
 14286                           indf1	equ	0xFE7
 14287                           postinc1	equ	0xFE6
 14288                           postdec1	equ	0xFE5
 14289                           fsr1h	equ	0xFE2
 14290                           fsr1l	equ	0xFE1
 14291                           indf2	equ	0xFDF
 14292                           postinc2	equ	0xFDE
 14293                           postdec2	equ	0xFDD
 14294                           plusw2	equ	0xFDB
 14295                           fsr2h	equ	0xFDA
 14296                           fsr2l	equ	0xFD9
 14297                           status	equ	0xFD8
 14298                           
 14299 ;; *************** function _isdigit *****************
 14300 ;; Defined at:
 14301 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;  c               1    wreg     unsigned char 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;  c               1    2[BANK0 ] unsigned char 
 14306 ;; Return value:  Size  Location     Type
 14307 ;;		None               void
 14308 ;; Registers used:
 14309 ;;		wreg, status,2, status,0
 14310 ;; Tracked objects:
 14311 ;;		On entry : 0/0
 14312 ;;		On exit  : 0/0
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14318 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14319 ;;Total ram usage:        3 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; Hardware stack levels required when called:   11
 14322 ;; This function calls:
 14323 ;;		Nothing
 14324 ;; This function is called by:
 14325 ;;		_sprintf
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329                           	psect	text37
 14330  017216                     __ptext37:
 14331                           	opt stack 0
 14332  017216                     _isdigit:
 14333                           	opt stack 17
 14334                           
 14335                           ;incstack = 0
 14336                           ;isdigit@c stored from wreg
 14337  017216  0100               	movlb	0	; () banked
 14338  017218  6F62               	movwf	isdigit@c& (0+255),b
 14339  01721A  0E00               	movlw	0
 14340  01721C  0100               	movlb	0	; () banked
 14341  01721E  6F61               	movwf	_isdigit$4789& (0+255),b
 14342                           
 14343                           ; BSR set to: 0
 14344  017220  0E3A               	movlw	58
 14345  017222  0100               	movlb	0	; () banked
 14346  017224  6162               	cpfslt	isdigit@c& (0+255),b
 14347  017226  D007               	goto	l10218
 14348                           
 14349                           ; BSR set to: 0
 14350  017228  0E2F               	movlw	47
 14351  01722A  0100               	movlb	0	; () banked
 14352  01722C  6562               	cpfsgt	isdigit@c& (0+255),b
 14353  01722E  D003               	goto	l10218
 14354                           
 14355                           ; BSR set to: 0
 14356  017230  0E01               	movlw	1
 14357  017232  0100               	movlb	0	; () banked
 14358  017234  6F61               	movwf	_isdigit$4789& (0+255),b
 14359  017236                     l10218:
 14360                           
 14361                           ; BSR set to: 0
 14362  017236  C061  F060         	movff	_isdigit$4789,??_isdigit
 14363  01723A  0100               	movlb	0	; () banked
 14364  01723C  3160               	rrcf	??_isdigit& (0+255),w,b
 14365  01723E  0012               	return	
 14366  017240                     __end_of_isdigit:
 14367                           	opt stack 0
 14368                           tblptru	equ	0xFF8
 14369                           tblptrh	equ	0xFF7
 14370                           tblptrl	equ	0xFF6
 14371                           tablat	equ	0xFF5
 14372                           prodh	equ	0xFF4
 14373                           prodl	equ	0xFF3
 14374                           intcon	equ	0xFF2
 14375                           postinc0	equ	0xFEE
 14376                           wreg	equ	0xFE8
 14377                           indf1	equ	0xFE7
 14378                           postinc1	equ	0xFE6
 14379                           postdec1	equ	0xFE5
 14380                           fsr1h	equ	0xFE2
 14381                           fsr1l	equ	0xFE1
 14382                           indf2	equ	0xFDF
 14383                           postinc2	equ	0xFDE
 14384                           postdec2	equ	0xFDD
 14385                           plusw2	equ	0xFDB
 14386                           fsr2h	equ	0xFDA
 14387                           fsr2l	equ	0xFD9
 14388                           status	equ	0xFD8
 14389                           
 14390 ;; *************** function ___wmul *****************
 14391 ;; Defined at:
 14392 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14393 ;; Parameters:    Size  Location     Type
 14394 ;;  multiplier      2   22[BANK0 ] unsigned int 
 14395 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;  product         2   26[BANK0 ] unsigned int 
 14398 ;; Return value:  Size  Location     Type
 14399 ;;                  2   22[BANK0 ] unsigned int 
 14400 ;; Registers used:
 14401 ;;		wreg, status,2, status,0, prodl, prodh
 14402 ;; Tracked objects:
 14403 ;;		On entry : 0/0
 14404 ;;		On exit  : 0/0
 14405 ;;		Unchanged: 0/0
 14406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14407 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14410 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14411 ;;Total ram usage:        6 bytes
 14412 ;; Hardware stack levels used:    1
 14413 ;; Hardware stack levels required when called:   11
 14414 ;; This function calls:
 14415 ;;		Nothing
 14416 ;; This function is called by:
 14417 ;;		_my_atoi
 14418 ;;		_Auto_cut
 14419 ;;		_ctmu_set_ratio
 14420 ;;		_sprintf
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           	psect	text38
 14425  016F82                     __ptext38:
 14426                           	opt stack 0
 14427  016F82                     ___wmul:
 14428                           	opt stack 17
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;incstack = 0
 14432  016F82  0100               	movlb	0	; () banked
 14433  016F84  5176               	movf	___wmul@multiplier& (0+255),w,b
 14434  016F86  0100               	movlb	0	; () banked
 14435  016F88  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14436  016F8A  CFF3 F07A          	movff	prodl,___wmul@product
 14437  016F8E  CFF4 F07B          	movff	prodh,___wmul@product+1
 14438  016F92  0100               	movlb	0	; () banked
 14439  016F94  5176               	movf	___wmul@multiplier& (0+255),w,b
 14440  016F96  0100               	movlb	0	; () banked
 14441  016F98  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14442  016F9A  50F3               	movf	prodl,w,c
 14443  016F9C  0100               	movlb	0	; () banked
 14444  016F9E  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14445  016FA0  0100               	movlb	0	; () banked
 14446  016FA2  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14447  016FA4  0100               	movlb	0	; () banked
 14448  016FA6  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14449  016FA8  50F3               	movf	prodl,w,c
 14450  016FAA  0100               	movlb	0	; () banked
 14451  016FAC  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14452                           
 14453                           ; BSR set to: 0
 14454  016FAE  C07A  F076         	movff	___wmul@product,?___wmul
 14455  016FB2  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 14456  016FB6  0012               	return	
 14457  016FB8                     __end_of___wmul:
 14458                           	opt stack 0
 14459                           tblptru	equ	0xFF8
 14460                           tblptrh	equ	0xFF7
 14461                           tblptrl	equ	0xFF6
 14462                           tablat	equ	0xFF5
 14463                           prodh	equ	0xFF4
 14464                           prodl	equ	0xFF3
 14465                           intcon	equ	0xFF2
 14466                           postinc0	equ	0xFEE
 14467                           wreg	equ	0xFE8
 14468                           indf1	equ	0xFE7
 14469                           postinc1	equ	0xFE6
 14470                           postdec1	equ	0xFE5
 14471                           fsr1h	equ	0xFE2
 14472                           fsr1l	equ	0xFE1
 14473                           indf2	equ	0xFDF
 14474                           postinc2	equ	0xFDE
 14475                           postdec2	equ	0xFDD
 14476                           plusw2	equ	0xFDB
 14477                           fsr2h	equ	0xFDA
 14478                           fsr2l	equ	0xFD9
 14479                           status	equ	0xFD8
 14480                           
 14481 ;; *************** function _RTCC_from_caltime *****************
 14482 ;; Defined at:
 14483 ;;		line 236 in file "../My_header\My_RTCC.h"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;  ct              2   49[BANK0 ] PTR struct .
 14486 ;;		 -> caltime_now(7), 
 14487 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 14488 ;;		 -> epoch_now(4), 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;		None
 14491 ;; Return value:  Size  Location     Type
 14492 ;;		None               void
 14493 ;; Registers used:
 14494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14503 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14504 ;;Total ram usage:        4 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; Hardware stack levels required when called:   14
 14507 ;; This function calls:
 14508 ;;		_caltime_to_RTCC
 14509 ;;		_caltime_to_epoch
 14510 ;;		_epoch_to_caltime
 14511 ;; This function is called by:
 14512 ;;		_command_at_hand
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text39
 14517  016FB8                     __ptext39:
 14518                           	opt stack 0
 14519  016FB8                     _RTCC_from_caltime:
 14520                           	opt stack 12
 14521                           
 14522                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;incstack = 0
 14526  016FB8  C091  F079         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
 14527  016FBC  C092  F07A         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
 14528  016FC0  C093  F07B         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
 14529  016FC4  C094  F07C         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
 14530  016FC8  EC3B  F094         	call	_caltime_to_epoch	;wreg free
 14531                           
 14532                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
 14533  016FCC  C091  F081         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
 14534  016FD0  C092  F082         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
 14535  016FD4  C093  F083         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
 14536  016FD8  C094  F084         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
 14537  016FDC  EC3B  F09A         	call	_epoch_to_caltime	;wreg free
 14538                           
 14539                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
 14540  016FE0  C091  F069         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
 14541  016FE4  C092  F06A         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
 14542  016FE8  EC58  F0A8         	call	_caltime_to_RTCC	;wreg free
 14543  016FEC  0012               	return		;funcret
 14544  016FEE                     __end_of_RTCC_from_caltime:
 14545                           	opt stack 0
 14546                           tblptru	equ	0xFF8
 14547                           tblptrh	equ	0xFF7
 14548                           tblptrl	equ	0xFF6
 14549                           tablat	equ	0xFF5
 14550                           prodh	equ	0xFF4
 14551                           prodl	equ	0xFF3
 14552                           intcon	equ	0xFF2
 14553                           postinc0	equ	0xFEE
 14554                           wreg	equ	0xFE8
 14555                           indf1	equ	0xFE7
 14556                           postinc1	equ	0xFE6
 14557                           postdec1	equ	0xFE5
 14558                           fsr1h	equ	0xFE2
 14559                           fsr1l	equ	0xFE1
 14560                           indf2	equ	0xFDF
 14561                           postinc2	equ	0xFDE
 14562                           postdec2	equ	0xFDD
 14563                           plusw2	equ	0xFDB
 14564                           fsr2h	equ	0xFDA
 14565                           fsr2l	equ	0xFD9
 14566                           status	equ	0xFD8
 14567                           
 14568 ;; *************** function _epoch_to_caltime *****************
 14569 ;; Defined at:
 14570 ;;		line 157 in file "../My_header\My_RTCC.h"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;  ct              2   33[BANK0 ] PTR struct .
 14573 ;;		 -> caltime_now(7), 
 14574 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 14575 ;;		 -> epoch_now(4), 
 14576 ;; Auto vars:     Size  Location     Type
 14577 ;;  num             4   45[BANK0 ] unsigned long 
 14578 ;;  day             2   41[BANK0 ] unsigned int 
 14579 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 14580 ;;  month           1   44[BANK0 ] unsigned char 
 14581 ;;  year            1   43[BANK0 ] unsigned char 
 14582 ;; Return value:  Size  Location     Type
 14583 ;;		None               void
 14584 ;; Registers used:
 14585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14586 ;; Tracked objects:
 14587 ;;		On entry : 0/0
 14588 ;;		On exit  : 0/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14592 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14594 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14595 ;;Total ram usage:       16 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; Hardware stack levels required when called:   13
 14598 ;; This function calls:
 14599 ;;		_get_quot_rem
 14600 ;;		_month_length
 14601 ;; This function is called by:
 14602 ;;		_RTCC_from_caltime
 14603 ;;		_RTCC_from_epoch
 14604 ;; This function uses a non-reentrant model
 14605 ;;
 14606                           
 14607                           	psect	text40
 14608  013476                     __ptext40:
 14609                           	opt stack 0
 14610  013476                     _epoch_to_caltime:
 14611                           	opt stack 15
 14612                           
 14613                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 14614                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 14615                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 14616                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 14617                           ;My_header\My_RTCC.h: 164: uint16_t day;
 14618                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 14619                           
 14620                           ;incstack = 0
 14621  013476  0E00               	movlw	0
 14622  013478  0100               	movlb	0	; () banked
 14623  01347A  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 14624                           
 14625                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 14626  01347C  0E01               	movlw	1
 14627  01347E  0100               	movlb	0	; () banked
 14628  013480  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;My_header\My_RTCC.h: 167: epoch_t num;
 14632                           ;My_header\My_RTCC.h: 169: num = *ep;
 14633  013482  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 14634  013486  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 14635  01348A  CFDE F08D          	movff	postinc2,epoch_to_caltime@num
 14636  01348E  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+1
 14637  013492  CFDE F08F          	movff	postinc2,epoch_to_caltime@num+2
 14638  013496  CFDE F090          	movff	postinc2,epoch_to_caltime@num+3
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 14642  01349A  0E8D               	movlw	low epoch_to_caltime@num
 14643  01349C  0100               	movlb	0	; () banked
 14644  01349E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14645  0134A0  0E00               	movlw	high epoch_to_caltime@num
 14646  0134A2  0100               	movlb	0	; () banked
 14647  0134A4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14648  0134A6  0E3C               	movlw	60
 14649  0134A8  0100               	movlb	0	; () banked
 14650  0134AA  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14651  0134AC  EC84  F0A7         	call	_get_quot_rem	;wreg free
 14652  0134B0  0100               	movlb	0	; () banked
 14653  0134B2  5179               	movf	?_get_quot_rem& (0+255),w,b
 14654  0134B4  C081  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 14655  0134B8  C082  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 14656  0134BC  6EDF               	movwf	indf2,c
 14657                           
 14658                           ; BSR set to: 0
 14659                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 14660  0134BE  0E8D               	movlw	low epoch_to_caltime@num
 14661  0134C0  0100               	movlb	0	; () banked
 14662  0134C2  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14663  0134C4  0E00               	movlw	high epoch_to_caltime@num
 14664  0134C6  0100               	movlb	0	; () banked
 14665  0134C8  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14666  0134CA  0E3C               	movlw	60
 14667  0134CC  0100               	movlb	0	; () banked
 14668  0134CE  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14669  0134D0  EC84  F0A7         	call	_get_quot_rem	;wreg free
 14670  0134D4  0100               	movlb	0	; () banked
 14671  0134D6  EE20 F001          	lfsr	2,1
 14672  0134DA  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14673  0134DC  26D9               	addwf	fsr2l,f,c
 14674  0134DE  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14675  0134E0  22DA               	addwfc	fsr2h,f,c
 14676  0134E2  0100               	movlb	0	; () banked
 14677  0134E4  C079  FFDF         	movff	?_get_quot_rem,indf2
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 14681  0134E8  0E8D               	movlw	low epoch_to_caltime@num
 14682  0134EA  0100               	movlb	0	; () banked
 14683  0134EC  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14684  0134EE  0E00               	movlw	high epoch_to_caltime@num
 14685  0134F0  0100               	movlb	0	; () banked
 14686  0134F2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14687  0134F4  0E18               	movlw	24
 14688  0134F6  0100               	movlb	0	; () banked
 14689  0134F8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14690  0134FA  EC84  F0A7         	call	_get_quot_rem	;wreg free
 14691  0134FE  0100               	movlb	0	; () banked
 14692  013500  EE20 F002          	lfsr	2,2
 14693  013504  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14694  013506  26D9               	addwf	fsr2l,f,c
 14695  013508  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14696  01350A  22DA               	addwfc	fsr2h,f,c
 14697  01350C  0100               	movlb	0	; () banked
 14698  01350E  C079  FFDF         	movff	?_get_quot_rem,indf2
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;My_header\My_RTCC.h: 173: day = num;
 14702  013512  C08D  F089         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 14703  013516  C08E  F08A         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 14707  01351A  C089  F087         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 14708  01351E  C08A  F088         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 14709                           
 14710                           ; BSR set to: 0
 14711                           ;My_header\My_RTCC.h: 176: num += 6;
 14712  013522  0E06               	movlw	6
 14713  013524  0100               	movlb	0	; () banked
 14714  013526  278D               	addwf	epoch_to_caltime@num& (0+255),f,b
 14715  013528  0E00               	movlw	0
 14716  01352A  238E               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 14717  01352C  238F               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 14718  01352E  2390               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 14722  013530  0E8D               	movlw	low epoch_to_caltime@num
 14723  013532  0100               	movlb	0	; () banked
 14724  013534  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14725  013536  0E00               	movlw	high epoch_to_caltime@num
 14726  013538  0100               	movlb	0	; () banked
 14727  01353A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14728  01353C  0E07               	movlw	7
 14729  01353E  0100               	movlb	0	; () banked
 14730  013540  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14731  013542  EC84  F0A7         	call	_get_quot_rem	;wreg free
 14732  013546  0100               	movlb	0	; () banked
 14733  013548  EE20 F003          	lfsr	2,3
 14734  01354C  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14735  01354E  26D9               	addwf	fsr2l,f,c
 14736  013550  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14737  013552  22DA               	addwfc	fsr2h,f,c
 14738  013554  0100               	movlb	0	; () banked
 14739  013556  C079  FFDF         	movff	?_get_quot_rem,indf2
 14740                           
 14741                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 14742  01355A  D03F               	goto	l10346
 14743  01355C                     l1012:
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 14747  01355C  848A               	bsf	3978,2,c	;volatile
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 14751  01355E  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 14752  013562  0100               	movlb	0	; () banked
 14753  013564  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 14754  013566  EC3D  F0A6         	call	_month_length
 14755  01356A  0100               	movlb	0	; () banked
 14756  01356C  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 14757  01356E  6B86               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 14758  013570  0100               	movlb	0	; () banked
 14759  013572  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 14760  013574  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 14761  013576  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 14762  013578  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 14763  01357A  0100               	movlb	0	; () banked
 14764  01357C  5189               	movf	epoch_to_caltime@day& (0+255),w,b
 14765  01357E  0100               	movlb	0	; () banked
 14766  013580  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 14767  013582  0100               	movlb	0	; () banked
 14768  013584  6F89               	movwf	epoch_to_caltime@day& (0+255),b
 14769  013586  0100               	movlb	0	; () banked
 14770  013588  518A               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 14771  01358A  0100               	movlb	0	; () banked
 14772  01358C  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 14773  01358E  0100               	movlb	0	; () banked
 14774  013590  6F8A               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 14775                           
 14776                           ; BSR set to: 0
 14777                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 14778  013592  0E0C               	movlw	12
 14779  013594  0100               	movlb	0	; () banked
 14780  013596  198C               	xorwf	epoch_to_caltime@month& (0+255),w,b
 14781  013598  A4D8               	btfss	status,2,c
 14782  01359A  D019               	goto	l10340
 14783                           
 14784                           ; BSR set to: 0
 14785                           ;My_header\My_RTCC.h: 190: month = 1;
 14786  01359C  0E01               	movlw	1
 14787  01359E  0100               	movlb	0	; () banked
 14788  0135A0  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;My_header\My_RTCC.h: 191: year++;
 14792  0135A2  0100               	movlb	0	; () banked
 14793  0135A4  2B8B               	incf	epoch_to_caltime@year& (0+255),f,b
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 14797  0135A6  0E63               	movlw	99
 14798  0135A8  0100               	movlb	0	; () banked
 14799  0135AA  658B               	cpfsgt	epoch_to_caltime@year& (0+255),b
 14800  0135AC  D012               	goto	l10342
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 14804  0135AE  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 14805  0135B2  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 14806  0135B6  0E80               	movlw	128
 14807  0135B8  5EDE               	subwf	postinc2,f,c
 14808  0135BA  0E13               	movlw	19
 14809  0135BC  5ADE               	subwfb	postinc2,f,c
 14810  0135BE  0E19               	movlw	25
 14811  0135C0  5ADE               	subwfb	postinc2,f,c
 14812  0135C2  0EBC               	movlw	188
 14813  0135C4  5ADE               	subwfb	postinc2,f,c
 14814                           
 14815                           ; BSR set to: 0
 14816                           ;My_header\My_RTCC.h: 195: year = 0;
 14817  0135C6  0E00               	movlw	0
 14818  0135C8  0100               	movlb	0	; () banked
 14819  0135CA  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;My_header\My_RTCC.h: 196: }
 14823                           ;My_header\My_RTCC.h: 197: } else {
 14824  0135CC  D002               	goto	l10342
 14825  0135CE                     l10340:
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;My_header\My_RTCC.h: 198: month++;
 14829  0135CE  0100               	movlb	0	; () banked
 14830  0135D0  2B8C               	incf	epoch_to_caltime@month& (0+255),f,b
 14831  0135D2                     l10342:
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;My_header\My_RTCC.h: 199: }
 14835                           ;My_header\My_RTCC.h: 200: month_cache = month;
 14836  0135D2  C08C  F19A         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;My_header\My_RTCC.h: 201: year_cache = year;
 14840  0135D6  C08B  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 14841  0135DA                     l10346:
 14842                           
 14843                           ; BSR set to: 0
 14844  0135DA  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 14845  0135DE  0100               	movlb	0	; () banked
 14846  0135E0  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 14847  0135E2  EC3D  F0A6         	call	_month_length
 14848  0135E6  0100               	movlb	0	; () banked
 14849  0135E8  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 14850  0135EA  0100               	movlb	0	; () banked
 14851  0135EC  5185               	movf	??_epoch_to_caltime& (0+255),w,b
 14852  0135EE  0100               	movlb	0	; () banked
 14853  0135F0  5D89               	subwf	epoch_to_caltime@day& (0+255),w,b
 14854  0135F2  0E00               	movlw	0
 14855  0135F4  598A               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 14856  0135F6  B0D8               	btfsc	status,0,c
 14857  0135F8  D7B1               	goto	l1012
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;My_header\My_RTCC.h: 202: }
 14861                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 14862                           
 14863                           ; BSR set to: 0
 14864  0135FA  C089  F085         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 14865  0135FE  C08A  F086         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 14866  013602  0100               	movlb	0	; () banked
 14867  013604  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 14868  013606  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 14869  013608  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 14870  01360A  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 14871  01360C  0100               	movlb	0	; () banked
 14872  01360E  5187               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 14873  013610  0100               	movlb	0	; () banked
 14874  013612  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 14875  013614  0101               	movlb	1	; () banked
 14876  013616  6F1D               	movwf	epoch_to_caltime@day_cache& (0+255),b
 14877  013618  0100               	movlb	0	; () banked
 14878  01361A  5188               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 14879  01361C  0100               	movlb	0	; () banked
 14880  01361E  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 14881  013620  0101               	movlb	1	; () banked
 14882  013622  6F1E               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 14883                           
 14884                           ; BSR set to: 1
 14885                           ;My_header\My_RTCC.h: 204: day++;
 14886  013624  0100               	movlb	0	; () banked
 14887  013626  4B89               	infsnz	epoch_to_caltime@day& (0+255),f,b
 14888  013628  2B8A               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 14892  01362A  0100               	movlb	0	; () banked
 14893  01362C  EE20 F006          	lfsr	2,6
 14894  013630  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14895  013632  26D9               	addwf	fsr2l,f,c
 14896  013634  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14897  013636  22DA               	addwfc	fsr2h,f,c
 14898  013638  C08B  FFDF         	movff	epoch_to_caltime@year,indf2
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 14902  01363C  0100               	movlb	0	; () banked
 14903  01363E  EE20 F005          	lfsr	2,5
 14904  013642  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14905  013644  26D9               	addwf	fsr2l,f,c
 14906  013646  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14907  013648  22DA               	addwfc	fsr2h,f,c
 14908  01364A  C08C  FFDF         	movff	epoch_to_caltime@month,indf2
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 14912  01364E  0100               	movlb	0	; () banked
 14913  013650  EE20 F004          	lfsr	2,4
 14914  013654  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14915  013656  26D9               	addwf	fsr2l,f,c
 14916  013658  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14917  01365A  22DA               	addwfc	fsr2h,f,c
 14918  01365C  C089  FFDF         	movff	epoch_to_caltime@day,indf2
 14919                           
 14920                           ; BSR set to: 0
 14921  013660  0012               	return		;funcret
 14922  013662                     __end_of_epoch_to_caltime:
 14923                           	opt stack 0
 14924                           tblptru	equ	0xFF8
 14925                           tblptrh	equ	0xFF7
 14926                           tblptrl	equ	0xFF6
 14927                           tablat	equ	0xFF5
 14928                           prodh	equ	0xFF4
 14929                           prodl	equ	0xFF3
 14930                           intcon	equ	0xFF2
 14931                           postinc0	equ	0xFEE
 14932                           wreg	equ	0xFE8
 14933                           indf1	equ	0xFE7
 14934                           postinc1	equ	0xFE6
 14935                           postdec1	equ	0xFE5
 14936                           fsr1h	equ	0xFE2
 14937                           fsr1l	equ	0xFE1
 14938                           indf2	equ	0xFDF
 14939                           postinc2	equ	0xFDE
 14940                           postdec2	equ	0xFDD
 14941                           plusw2	equ	0xFDB
 14942                           fsr2h	equ	0xFDA
 14943                           fsr2l	equ	0xFD9
 14944                           status	equ	0xFD8
 14945                           
 14946 ;; *************** function _get_quot_rem *****************
 14947 ;; Defined at:
 14948 ;;		line 112 in file "../My_header\My_RTCC.h"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 14951 ;;		 -> epoch_to_caltime@num(4), 
 14952 ;;  div             1   27[BANK0 ] unsigned char 
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;  num             4   29[BANK0 ] unsigned long 
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  4   25[BANK0 ] unsigned long 
 14957 ;; Registers used:
 14958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14967 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;Total ram usage:        8 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:   12
 14971 ;; This function calls:
 14972 ;;		___lldiv
 14973 ;;		___lmul
 14974 ;; This function is called by:
 14975 ;;		_epoch_to_caltime
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text41
 14980  014F08                     __ptext41:
 14981                           	opt stack 0
 14982  014F08                     _get_quot_rem:
 14983                           	opt stack 15
 14984                           
 14985                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;incstack = 0
 14989  014F08  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 14990  014F0C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 14991  014F10  CFDE F07D          	movff	postinc2,get_quot_rem@num
 14992  014F14  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 14993  014F18  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 14994  014F1C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 14995                           
 14996                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 14997  014F20  0100               	movlb	0	; () banked
 14998  014F22  517B               	movf	get_quot_rem@div& (0+255),w,b
 14999  014F24  0100               	movlb	0	; () banked
 15000  014F26  6F64               	movwf	___lldiv@divisor& (0+255),b
 15001  014F28  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 15002  014F2A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 15003  014F2C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 15004  014F2E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 15005  014F32  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 15006  014F36  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 15007  014F3A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 15008  014F3E  EC9E  F0AC         	call	___lldiv	;wreg free
 15009  014F42  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 15010  014F46  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 15011  014F4A  0100               	movlb	0	; () banked
 15012  014F4C  C060  FFDE         	movff	?___lldiv,postinc2
 15013  014F50  0100               	movlb	0	; () banked
 15014  014F52  C061  FFDE         	movff	?___lldiv+1,postinc2
 15015  014F56  0100               	movlb	0	; () banked
 15016  014F58  C062  FFDE         	movff	?___lldiv+2,postinc2
 15017  014F5C  0100               	movlb	0	; () banked
 15018  014F5E  C063  FFDD         	movff	?___lldiv+3,postdec2
 15019  014F62  52DD               	movf	postdec2,f,c
 15020  014F64  52DD               	movf	postdec2,f,c
 15021  014F66  CFDE F06D          	movff	postinc2,___lmul@multiplier
 15022  014F6A  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 15023  014F6E  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 15024  014F72  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 15025  014F76  0100               	movlb	0	; () banked
 15026  014F78  517B               	movf	get_quot_rem@div& (0+255),w,b
 15027  014F7A  0100               	movlb	0	; () banked
 15028  014F7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 15029  014F7E  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 15030  014F80  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 15031  014F82  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 15032  014F84  EC29  F0B3         	call	___lmul	;wreg free
 15033  014F88  0100               	movlb	0	; () banked
 15034  014F8A  1F6D               	comf	?___lmul& (0+255),f,b
 15035  014F8C  0100               	movlb	0	; () banked
 15036  014F8E  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 15037  014F90  0100               	movlb	0	; () banked
 15038  014F92  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 15039  014F94  0100               	movlb	0	; () banked
 15040  014F96  1F70               	comf	(?___lmul+3)& (0+255),f,b
 15041  014F98  0100               	movlb	0	; () banked
 15042  014F9A  2B6D               	incf	?___lmul& (0+255),f,b
 15043  014F9C  0E00               	movlw	0
 15044  014F9E  0100               	movlb	0	; () banked
 15045  014FA0  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 15046  014FA2  0100               	movlb	0	; () banked
 15047  014FA4  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 15048  014FA6  0100               	movlb	0	; () banked
 15049  014FA8  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 15050  014FAA  0100               	movlb	0	; () banked
 15051  014FAC  517D               	movf	get_quot_rem@num& (0+255),w,b
 15052  014FAE  0100               	movlb	0	; () banked
 15053  014FB0  256D               	addwf	?___lmul& (0+255),w,b
 15054  014FB2  0100               	movlb	0	; () banked
 15055  014FB4  6F79               	movwf	?_get_quot_rem& (0+255),b
 15056  014FB6  0100               	movlb	0	; () banked
 15057  014FB8  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 15058  014FBA  0100               	movlb	0	; () banked
 15059  014FBC  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 15060  014FBE  0100               	movlb	0	; () banked
 15061  014FC0  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 15062  014FC2  0100               	movlb	0	; () banked
 15063  014FC4  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 15064  014FC6  0100               	movlb	0	; () banked
 15065  014FC8  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 15066  014FCA  0100               	movlb	0	; () banked
 15067  014FCC  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 15068  014FCE  0100               	movlb	0	; () banked
 15069  014FD0  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 15070  014FD2  0100               	movlb	0	; () banked
 15071  014FD4  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 15072  014FD6  0100               	movlb	0	; () banked
 15073  014FD8  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 15074  014FDA  0012               	return	
 15075  014FDC                     __end_of_get_quot_rem:
 15076                           	opt stack 0
 15077                           tblptru	equ	0xFF8
 15078                           tblptrh	equ	0xFF7
 15079                           tblptrl	equ	0xFF6
 15080                           tablat	equ	0xFF5
 15081                           prodh	equ	0xFF4
 15082                           prodl	equ	0xFF3
 15083                           intcon	equ	0xFF2
 15084                           postinc0	equ	0xFEE
 15085                           wreg	equ	0xFE8
 15086                           indf1	equ	0xFE7
 15087                           postinc1	equ	0xFE6
 15088                           postdec1	equ	0xFE5
 15089                           fsr1h	equ	0xFE2
 15090                           fsr1l	equ	0xFE1
 15091                           indf2	equ	0xFDF
 15092                           postinc2	equ	0xFDE
 15093                           postdec2	equ	0xFDD
 15094                           plusw2	equ	0xFDB
 15095                           fsr2h	equ	0xFDA
 15096                           fsr2l	equ	0xFD9
 15097                           status	equ	0xFD8
 15098                           
 15099 ;; *************** function _caltime_to_RTCC *****************
 15100 ;; Defined at:
 15101 ;;		line 137 in file "../My_header\My_RTCC.h"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  ct              2    9[BANK0 ] PTR struct .
 15104 ;;		 -> caltime_now(7), 
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;		None
 15107 ;; Return value:  Size  Location     Type
 15108 ;;		None               void
 15109 ;; Registers used:
 15110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15116 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15120 ;;Total ram usage:        2 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:   13
 15123 ;; This function calls:
 15124 ;;		_d_to_x
 15125 ;; This function is called by:
 15126 ;;		_RTCC_from_caltime
 15127 ;;		_RTCC_from_epoch
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text42
 15132  0150B0                     __ptext42:
 15133                           	opt stack 0
 15134  0150B0                     _caltime_to_RTCC:
 15135                           	opt stack 15
 15136  0150B0                     l999:
 15137  0150B0  010F               	movlb	15	; () banked
 15138  0150B2  B93F               	btfsc	63,4,b	;volatile
 15139  0150B4  D7FD               	goto	l999
 15140                           
 15141                           ; BSR set to: 15
 15142                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 15143  0150B6  010F               	movlb	15	; () banked
 15144  0150B8  813F               	bsf	63,0,b	;volatile
 15145                           
 15146                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 15147  0150BA  010F               	movlb	15	; () banked
 15148  0150BC  833F               	bsf	63,1,b	;volatile
 15149                           
 15150                           ; BSR set to: 15
 15151                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 15152  0150BE  0100               	movlb	0	; () banked
 15153  0150C0  EE20 F006          	lfsr	2,6
 15154  0150C4  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15155  0150C6  26D9               	addwf	fsr2l,f,c
 15156  0150C8  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15157  0150CA  22DA               	addwfc	fsr2h,f,c
 15158  0150CC  50DF               	movf	indf2,w,c
 15159  0150CE  EC20  F0B9         	call	_d_to_x
 15160  0150D2  010F               	movlb	15	; () banked
 15161  0150D4  6F3A               	movwf	58,b	;volatile
 15162                           
 15163                           ; BSR set to: 15
 15164                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 15165  0150D6  0E00               	movlw	0
 15166  0150D8  010F               	movlb	15	; () banked
 15167  0150DA  6F3B               	movwf	59,b	;volatile
 15168                           
 15169                           ; BSR set to: 15
 15170                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 15171  0150DC  010F               	movlb	15	; () banked
 15172  0150DE  913F               	bcf	63,0,b	;volatile
 15173                           
 15174                           ; BSR set to: 15
 15175                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 15176  0150E0  010F               	movlb	15	; () banked
 15177  0150E2  833F               	bsf	63,1,b	;volatile
 15178                           
 15179                           ; BSR set to: 15
 15180                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 15181  0150E4  0100               	movlb	0	; () banked
 15182  0150E6  EE20 F004          	lfsr	2,4
 15183  0150EA  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15184  0150EC  26D9               	addwf	fsr2l,f,c
 15185  0150EE  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15186  0150F0  22DA               	addwfc	fsr2h,f,c
 15187  0150F2  50DF               	movf	indf2,w,c
 15188  0150F4  EC20  F0B9         	call	_d_to_x
 15189  0150F8  010F               	movlb	15	; () banked
 15190  0150FA  6F3A               	movwf	58,b	;volatile
 15191                           
 15192                           ; BSR set to: 15
 15193                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 15194  0150FC  0100               	movlb	0	; () banked
 15195  0150FE  EE20 F005          	lfsr	2,5
 15196  015102  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15197  015104  26D9               	addwf	fsr2l,f,c
 15198  015106  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15199  015108  22DA               	addwfc	fsr2h,f,c
 15200  01510A  50DF               	movf	indf2,w,c
 15201  01510C  EC20  F0B9         	call	_d_to_x
 15202  015110  010F               	movlb	15	; () banked
 15203  015112  6F3B               	movwf	59,b	;volatile
 15204                           
 15205                           ; BSR set to: 15
 15206                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 15207  015114  010F               	movlb	15	; () banked
 15208  015116  813F               	bsf	63,0,b	;volatile
 15209                           
 15210                           ; BSR set to: 15
 15211                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 15212  015118  010F               	movlb	15	; () banked
 15213  01511A  933F               	bcf	63,1,b	;volatile
 15214                           
 15215                           ; BSR set to: 15
 15216                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 15217  01511C  0100               	movlb	0	; () banked
 15218  01511E  EE20 F002          	lfsr	2,2
 15219  015122  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15220  015124  26D9               	addwf	fsr2l,f,c
 15221  015126  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15222  015128  22DA               	addwfc	fsr2h,f,c
 15223  01512A  50DF               	movf	indf2,w,c
 15224  01512C  EC20  F0B9         	call	_d_to_x
 15225  015130  010F               	movlb	15	; () banked
 15226  015132  6F3A               	movwf	58,b	;volatile
 15227                           
 15228                           ; BSR set to: 15
 15229                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 15230  015134  0100               	movlb	0	; () banked
 15231  015136  EE20 F003          	lfsr	2,3
 15232  01513A  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15233  01513C  26D9               	addwf	fsr2l,f,c
 15234  01513E  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15235  015140  22DA               	addwfc	fsr2h,f,c
 15236  015142  50DF               	movf	indf2,w,c
 15237  015144  EC20  F0B9         	call	_d_to_x
 15238  015148  010F               	movlb	15	; () banked
 15239  01514A  6F3B               	movwf	59,b	;volatile
 15240                           
 15241                           ; BSR set to: 15
 15242                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 15243  01514C  010F               	movlb	15	; () banked
 15244  01514E  913F               	bcf	63,0,b	;volatile
 15245                           
 15246                           ; BSR set to: 15
 15247                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 15248  015150  010F               	movlb	15	; () banked
 15249  015152  933F               	bcf	63,1,b	;volatile
 15250                           
 15251                           ; BSR set to: 15
 15252                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 15253  015154  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 15254  015158  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 15255  01515C  50DF               	movf	indf2,w,c
 15256  01515E  EC20  F0B9         	call	_d_to_x
 15257  015162  010F               	movlb	15	; () banked
 15258  015164  6F3A               	movwf	58,b	;volatile
 15259                           
 15260                           ; BSR set to: 15
 15261                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 15262  015166  0100               	movlb	0	; () banked
 15263  015168  EE20 F001          	lfsr	2,1
 15264  01516C  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15265  01516E  26D9               	addwf	fsr2l,f,c
 15266  015170  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15267  015172  22DA               	addwfc	fsr2h,f,c
 15268  015174  50DF               	movf	indf2,w,c
 15269  015176  EC20  F0B9         	call	_d_to_x
 15270  01517A  010F               	movlb	15	; () banked
 15271  01517C  6F3B               	movwf	59,b	;volatile
 15272                           
 15273                           ; BSR set to: 15
 15274  01517E  0012               	return		;funcret
 15275  015180                     __end_of_caltime_to_RTCC:
 15276                           	opt stack 0
 15277                           tblptru	equ	0xFF8
 15278                           tblptrh	equ	0xFF7
 15279                           tblptrl	equ	0xFF6
 15280                           tablat	equ	0xFF5
 15281                           prodh	equ	0xFF4
 15282                           prodl	equ	0xFF3
 15283                           intcon	equ	0xFF2
 15284                           postinc0	equ	0xFEE
 15285                           wreg	equ	0xFE8
 15286                           indf1	equ	0xFE7
 15287                           postinc1	equ	0xFE6
 15288                           postdec1	equ	0xFE5
 15289                           fsr1h	equ	0xFE2
 15290                           fsr1l	equ	0xFE1
 15291                           indf2	equ	0xFDF
 15292                           postinc2	equ	0xFDE
 15293                           postdec2	equ	0xFDD
 15294                           plusw2	equ	0xFDB
 15295                           fsr2h	equ	0xFDA
 15296                           fsr2l	equ	0xFD9
 15297                           status	equ	0xFD8
 15298                           
 15299 ;; *************** function _d_to_x *****************
 15300 ;; Defined at:
 15301 ;;		line 73 in file "../My_header\My_RTCC.h"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  dec             1    wreg     unsigned char 
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;  dec             1    8[BANK0 ] unsigned char 
 15306 ;; Return value:  Size  Location     Type
 15307 ;;                  1    wreg      unsigned char 
 15308 ;; Registers used:
 15309 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15310 ;; Tracked objects:
 15311 ;;		On entry : 0/0
 15312 ;;		On exit  : 0/0
 15313 ;;		Unchanged: 0/0
 15314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15318 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15319 ;;Total ram usage:        1 bytes
 15320 ;; Hardware stack levels used:    1
 15321 ;; Hardware stack levels required when called:   12
 15322 ;; This function calls:
 15323 ;;		___awdiv
 15324 ;; This function is called by:
 15325 ;;		_caltime_to_RTCC
 15326 ;; This function uses a non-reentrant model
 15327 ;;
 15328                           
 15329                           	psect	text43
 15330  017240                     __ptext43:
 15331                           	opt stack 0
 15332  017240                     _d_to_x:
 15333                           	opt stack 15
 15334                           
 15335                           ; BSR set to: 15
 15336                           ;incstack = 0
 15337                           ;d_to_x@dec stored from wreg
 15338  017240  0100               	movlb	0	; () banked
 15339  017242  6F68               	movwf	d_to_x@dec& (0+255),b
 15340                           
 15341                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 15342  017244  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 15343  017248  0100               	movlb	0	; () banked
 15344  01724A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 15345  01724C  0E00               	movlw	0
 15346  01724E  0100               	movlb	0	; () banked
 15347  017250  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 15348  017252  0E0A               	movlw	10
 15349  017254  6F62               	movwf	___awdiv@divisor& (0+255),b
 15350  017256  ECE0  F0AB         	call	___awdiv	;wreg free
 15351  01725A  0100               	movlb	0	; () banked
 15352  01725C  5160               	movf	?___awdiv& (0+255),w,b
 15353  01725E  0D06               	mullw	6
 15354  017260  50F3               	movf	prodl,w,c
 15355  017262  0100               	movlb	0	; () banked
 15356  017264  2568               	addwf	d_to_x@dec& (0+255),w,b
 15357  017266  0012               	return	
 15358  017268                     __end_of_d_to_x:
 15359                           	opt stack 0
 15360                           tblptru	equ	0xFF8
 15361                           tblptrh	equ	0xFF7
 15362                           tblptrl	equ	0xFF6
 15363                           tablat	equ	0xFF5
 15364                           prodh	equ	0xFF4
 15365                           prodl	equ	0xFF3
 15366                           intcon	equ	0xFF2
 15367                           postinc0	equ	0xFEE
 15368                           wreg	equ	0xFE8
 15369                           indf1	equ	0xFE7
 15370                           postinc1	equ	0xFE6
 15371                           postdec1	equ	0xFE5
 15372                           fsr1h	equ	0xFE2
 15373                           fsr1l	equ	0xFE1
 15374                           indf2	equ	0xFDF
 15375                           postinc2	equ	0xFDE
 15376                           postdec2	equ	0xFDD
 15377                           plusw2	equ	0xFDB
 15378                           fsr2h	equ	0xFDA
 15379                           fsr2l	equ	0xFD9
 15380                           status	equ	0xFD8
 15381                           
 15382 ;; *************** function ___awdiv *****************
 15383 ;; Defined at:
 15384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;  dividend        2    0[BANK0 ] int 
 15387 ;;  divisor         2    2[BANK0 ] int 
 15388 ;; Auto vars:     Size  Location     Type
 15389 ;;  quotient        2    6[BANK0 ] int 
 15390 ;;  sign            1    5[BANK0 ] unsigned char 
 15391 ;;  counter         1    4[BANK0 ] unsigned char 
 15392 ;; Return value:  Size  Location     Type
 15393 ;;                  2    0[BANK0 ] int 
 15394 ;; Registers used:
 15395 ;;		wreg, status,2, status,0
 15396 ;; Tracked objects:
 15397 ;;		On entry : 0/0
 15398 ;;		On exit  : 0/0
 15399 ;;		Unchanged: 0/0
 15400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15401 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15402 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15404 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15405 ;;Total ram usage:        8 bytes
 15406 ;; Hardware stack levels used:    1
 15407 ;; Hardware stack levels required when called:   11
 15408 ;; This function calls:
 15409 ;;		Nothing
 15410 ;; This function is called by:
 15411 ;;		_d_to_x
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           
 15415                           	psect	text44
 15416  0157C0                     __ptext44:
 15417                           	opt stack 0
 15418  0157C0                     ___awdiv:
 15419                           	opt stack 15
 15420                           
 15421                           ; BSR set to: 0
 15422                           ;incstack = 0
 15423  0157C0  0E00               	movlw	0
 15424  0157C2  0100               	movlb	0	; () banked
 15425  0157C4  6F65               	movwf	___awdiv@sign& (0+255),b
 15426                           
 15427                           ; BSR set to: 0
 15428  0157C6  0100               	movlb	0	; () banked
 15429  0157C8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15430  0157CA  D008               	goto	l10090
 15431                           
 15432                           ; BSR set to: 0
 15433  0157CC  0100               	movlb	0	; () banked
 15434  0157CE  6D62               	negf	___awdiv@divisor& (0+255),b
 15435  0157D0  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 15436  0157D2  B0D8               	btfsc	status,0,c
 15437  0157D4  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 15438                           
 15439                           ; BSR set to: 0
 15440  0157D6  0E01               	movlw	1
 15441  0157D8  0100               	movlb	0	; () banked
 15442  0157DA  6F65               	movwf	___awdiv@sign& (0+255),b
 15443  0157DC                     l10090:
 15444                           
 15445                           ; BSR set to: 0
 15446  0157DC  0100               	movlb	0	; () banked
 15447  0157DE  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 15448  0157E0  D008               	goto	l10096
 15449                           
 15450                           ; BSR set to: 0
 15451  0157E2  0100               	movlb	0	; () banked
 15452  0157E4  6D60               	negf	___awdiv@dividend& (0+255),b
 15453  0157E6  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 15454  0157E8  B0D8               	btfsc	status,0,c
 15455  0157EA  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 15456                           
 15457                           ; BSR set to: 0
 15458  0157EC  0E01               	movlw	1
 15459  0157EE  0100               	movlb	0	; () banked
 15460  0157F0  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 15461  0157F2                     l10096:
 15462                           
 15463                           ; BSR set to: 0
 15464  0157F2  0E00               	movlw	0
 15465  0157F4  0100               	movlb	0	; () banked
 15466  0157F6  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 15467  0157F8  0E00               	movlw	0
 15468  0157FA  6F66               	movwf	___awdiv@quotient& (0+255),b
 15469                           
 15470                           ; BSR set to: 0
 15471  0157FC  0100               	movlb	0	; () banked
 15472  0157FE  5162               	movf	___awdiv@divisor& (0+255),w,b
 15473  015800  0100               	movlb	0	; () banked
 15474  015802  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 15475  015804  B4D8               	btfsc	status,2,c
 15476  015806  D02C               	goto	l10118
 15477                           
 15478                           ; BSR set to: 0
 15479  015808  0E01               	movlw	1
 15480  01580A  0100               	movlb	0	; () banked
 15481  01580C  6F64               	movwf	___awdiv@counter& (0+255),b
 15482  01580E  D006               	goto	l10104
 15483  015810                     l10102:
 15484                           
 15485                           ; BSR set to: 0
 15486  015810  0100               	movlb	0	; () banked
 15487  015812  90D8               	bcf	status,0,c
 15488  015814  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 15489  015816  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 15490  015818  0100               	movlb	0	; () banked
 15491  01581A  2B64               	incf	___awdiv@counter& (0+255),f,b
 15492  01581C                     l10104:
 15493                           
 15494                           ; BSR set to: 0
 15495  01581C  0100               	movlb	0	; () banked
 15496  01581E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15497  015820  D7F7               	goto	l10102
 15498  015822                     l10106:
 15499                           
 15500                           ; BSR set to: 0
 15501  015822  0100               	movlb	0	; () banked
 15502  015824  90D8               	bcf	status,0,c
 15503  015826  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 15504  015828  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 15505                           
 15506                           ; BSR set to: 0
 15507  01582A  0100               	movlb	0	; () banked
 15508  01582C  5162               	movf	___awdiv@divisor& (0+255),w,b
 15509  01582E  0100               	movlb	0	; () banked
 15510  015830  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 15511  015832  0100               	movlb	0	; () banked
 15512  015834  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15513  015836  0100               	movlb	0	; () banked
 15514  015838  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 15515  01583A  A0D8               	btfss	status,0,c
 15516  01583C  D00A               	goto	l10114
 15517                           
 15518                           ; BSR set to: 0
 15519  01583E  0100               	movlb	0	; () banked
 15520  015840  5162               	movf	___awdiv@divisor& (0+255),w,b
 15521  015842  0100               	movlb	0	; () banked
 15522  015844  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 15523  015846  0100               	movlb	0	; () banked
 15524  015848  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15525  01584A  0100               	movlb	0	; () banked
 15526  01584C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 15527                           
 15528                           ; BSR set to: 0
 15529  01584E  0100               	movlb	0	; () banked
 15530  015850  8166               	bsf	___awdiv@quotient& (0+255),0,b
 15531  015852                     l10114:
 15532                           
 15533                           ; BSR set to: 0
 15534  015852  0100               	movlb	0	; () banked
 15535  015854  90D8               	bcf	status,0,c
 15536  015856  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 15537  015858  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 15538                           
 15539                           ; BSR set to: 0
 15540  01585A  0100               	movlb	0	; () banked
 15541  01585C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 15542  01585E  D7E1               	goto	l10106
 15543  015860                     l10118:
 15544                           
 15545                           ; BSR set to: 0
 15546  015860  0100               	movlb	0	; () banked
 15547  015862  5165               	movf	___awdiv@sign& (0+255),w,b
 15548  015864  0100               	movlb	0	; () banked
 15549  015866  B4D8               	btfsc	status,2,c
 15550  015868  D005               	goto	l10122
 15551                           
 15552                           ; BSR set to: 0
 15553  01586A  0100               	movlb	0	; () banked
 15554  01586C  6D66               	negf	___awdiv@quotient& (0+255),b
 15555  01586E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 15556  015870  B0D8               	btfsc	status,0,c
 15557  015872  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 15558  015874                     l10122:
 15559                           
 15560                           ; BSR set to: 0
 15561  015874  C066  F060         	movff	___awdiv@quotient,?___awdiv
 15562  015878  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 15563  01587C  0012               	return	
 15564  01587E                     __end_of___awdiv:
 15565                           	opt stack 0
 15566                           tblptru	equ	0xFF8
 15567                           tblptrh	equ	0xFF7
 15568                           tblptrl	equ	0xFF6
 15569                           tablat	equ	0xFF5
 15570                           prodh	equ	0xFF4
 15571                           prodl	equ	0xFF3
 15572                           intcon	equ	0xFF2
 15573                           postinc0	equ	0xFEE
 15574                           wreg	equ	0xFE8
 15575                           indf1	equ	0xFE7
 15576                           postinc1	equ	0xFE6
 15577                           postdec1	equ	0xFE5
 15578                           fsr1h	equ	0xFE2
 15579                           fsr1l	equ	0xFE1
 15580                           indf2	equ	0xFDF
 15581                           postinc2	equ	0xFDE
 15582                           postdec2	equ	0xFDD
 15583                           plusw2	equ	0xFDB
 15584                           fsr2h	equ	0xFDA
 15585                           fsr2l	equ	0xFD9
 15586                           status	equ	0xFD8
 15587                           
 15588 ;; *************** function _command_get_data *****************
 15589 ;; Defined at:
 15590 ;;		line 320 in file "tasks.h"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;  tx              2   50[BANK0 ] PTR struct ringbuf
 15593 ;;		 -> usb_tx(8), 
 15594 ;;  item            1   52[BANK0 ] enum E9650
 15595 ;;  i               1   53[BANK0 ] unsigned char 
 15596 ;; Auto vars:     Size  Location     Type
 15597 ;;  str            10   54[BANK0 ] unsigned char [10]
 15598 ;; Return value:  Size  Location     Type
 15599 ;;		None               void
 15600 ;; Registers used:
 15601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15602 ;; Tracked objects:
 15603 ;;		On entry : 0/0
 15604 ;;		On exit  : 0/0
 15605 ;;		Unchanged: 0/0
 15606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15608 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15610 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;Total ram usage:       18 bytes
 15612 ;; Hardware stack levels used:    1
 15613 ;; Hardware stack levels required when called:   14
 15614 ;; This function calls:
 15615 ;;		___lldiv
 15616 ;;		___llmod
 15617 ;;		___lwdiv
 15618 ;;		___lwmod
 15619 ;;		_my_utoa
 15620 ;;		_ringbuf_put
 15621 ;;		_ringbuf_put_num
 15622 ;;		_ringbuf_put_str
 15623 ;; This function is called by:
 15624 ;;		_command_operation
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628                           	psect	text45
 15629  011A06                     __ptext45:
 15630                           	opt stack 0
 15631  011A06                     _command_get_data:
 15632                           	opt stack 14
 15633                           
 15634                           ;tasks.h: 321: switch (item) {
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;incstack = 0
 15638  011A06  D26C               	goto	l11336
 15639  011A08                     l11286:
 15640                           
 15641                           ;tasks.h: 323: ringbuf_put_str(tx, "\t");
 15642  011A08  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15643  011A0C  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15644  011A10  0EF5               	movlw	low STR_28
 15645  011A12  0100               	movlb	0	; () banked
 15646  011A14  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15647  011A16  0EFF               	movlw	high STR_28
 15648  011A18  0100               	movlb	0	; () banked
 15649  011A1A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15650  011A1C  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15651                           
 15652                           ;tasks.h: 324: ringbuf_put(tx, (port[i].current % 10000) / 1000 + '0');
 15653  011A20  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15654  011A24  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15655  011A28  0E27               	movlw	39
 15656  011A2A  0100               	movlb	0	; () banked
 15657  011A2C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15658  011A2E  0E10               	movlw	16
 15659  011A30  6F62               	movwf	___lwmod@divisor& (0+255),b
 15660  011A32  0100               	movlb	0	; () banked
 15661  011A34  5195               	movf	command_get_data@i& (0+255),w,b
 15662  011A36  0D17               	mullw	23
 15663  011A38  0E06               	movlw	6
 15664  011A3A  26F3               	addwf	prodl,f,c
 15665  011A3C  0E00               	movlw	0
 15666  011A3E  22F4               	addwfc	prodh,f,c
 15667  011A40  0E29               	movlw	low _port
 15668  011A42  24F3               	addwf	prodl,w,c
 15669  011A44  6ED9               	movwf	fsr2l,c
 15670  011A46  0E01               	movlw	high _port
 15671  011A48  20F4               	addwfc	prodh,w,c
 15672  011A4A  6EDA               	movwf	fsr2h,c
 15673  011A4C  CFDE F060          	movff	postinc2,___lwmod@dividend
 15674  011A50  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15675  011A54  ECDE  F0B4         	call	___lwmod	;wreg free
 15676  011A58  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 15677  011A5C  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 15678  011A60  0E03               	movlw	3
 15679  011A62  0100               	movlb	0	; () banked
 15680  011A64  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15681  011A66  0EE8               	movlw	232
 15682  011A68  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 15683  011A6A  ECED  F0B2         	call	___lwdiv	;wreg free
 15684  011A6E  0100               	movlb	0	; () banked
 15685  011A70  517C               	movf	?___lwdiv& (0+255),w,b
 15686  011A72  0F30               	addlw	48
 15687  011A74  0100               	movlb	0	; () banked
 15688  011A76  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15689  011A78  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 15690                           
 15691                           ;tasks.h: 325: ringbuf_put(tx, '.');
 15692  011A7C  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15693  011A80  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15694  011A84  0E2E               	movlw	46
 15695  011A86  0100               	movlb	0	; () banked
 15696  011A88  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15697  011A8A  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 15698                           
 15699                           ;tasks.h: 326: ringbuf_put(tx, (port[i].current % 1000) / 100 + '0');
 15700  011A8E  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15701  011A92  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15702  011A96  0E03               	movlw	3
 15703  011A98  0100               	movlb	0	; () banked
 15704  011A9A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15705  011A9C  0EE8               	movlw	232
 15706  011A9E  6F62               	movwf	___lwmod@divisor& (0+255),b
 15707  011AA0  0100               	movlb	0	; () banked
 15708  011AA2  5195               	movf	command_get_data@i& (0+255),w,b
 15709  011AA4  0D17               	mullw	23
 15710  011AA6  0E06               	movlw	6
 15711  011AA8  26F3               	addwf	prodl,f,c
 15712  011AAA  0E00               	movlw	0
 15713  011AAC  22F4               	addwfc	prodh,f,c
 15714  011AAE  0E29               	movlw	low _port
 15715  011AB0  24F3               	addwf	prodl,w,c
 15716  011AB2  6ED9               	movwf	fsr2l,c
 15717  011AB4  0E01               	movlw	high _port
 15718  011AB6  20F4               	addwfc	prodh,w,c
 15719  011AB8  6EDA               	movwf	fsr2h,c
 15720  011ABA  CFDE F060          	movff	postinc2,___lwmod@dividend
 15721  011ABE  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15722  011AC2  ECDE  F0B4         	call	___lwmod	;wreg free
 15723  011AC6  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 15724  011ACA  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 15725  011ACE  0E00               	movlw	0
 15726  011AD0  0100               	movlb	0	; () banked
 15727  011AD2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15728  011AD4  0E64               	movlw	100
 15729  011AD6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 15730  011AD8  ECED  F0B2         	call	___lwdiv	;wreg free
 15731  011ADC  0100               	movlb	0	; () banked
 15732  011ADE  517C               	movf	?___lwdiv& (0+255),w,b
 15733  011AE0  0F30               	addlw	48
 15734  011AE2  0100               	movlb	0	; () banked
 15735  011AE4  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15736  011AE6  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 15737                           
 15738                           ;tasks.h: 327: ringbuf_put(tx, (port[i].current % 100) / 10 + '0');
 15739  011AEA  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15740  011AEE  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15741  011AF2  0E00               	movlw	0
 15742  011AF4  0100               	movlb	0	; () banked
 15743  011AF6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15744  011AF8  0E64               	movlw	100
 15745  011AFA  6F62               	movwf	___lwmod@divisor& (0+255),b
 15746  011AFC  0100               	movlb	0	; () banked
 15747  011AFE  5195               	movf	command_get_data@i& (0+255),w,b
 15748  011B00  0D17               	mullw	23
 15749  011B02  0E06               	movlw	6
 15750  011B04  26F3               	addwf	prodl,f,c
 15751  011B06  0E00               	movlw	0
 15752  011B08  22F4               	addwfc	prodh,f,c
 15753  011B0A  0E29               	movlw	low _port
 15754  011B0C  24F3               	addwf	prodl,w,c
 15755  011B0E  6ED9               	movwf	fsr2l,c
 15756  011B10  0E01               	movlw	high _port
 15757  011B12  20F4               	addwfc	prodh,w,c
 15758  011B14  6EDA               	movwf	fsr2h,c
 15759  011B16  CFDE F060          	movff	postinc2,___lwmod@dividend
 15760  011B1A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15761  011B1E  ECDE  F0B4         	call	___lwmod	;wreg free
 15762  011B22  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 15763  011B26  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 15764  011B2A  0E00               	movlw	0
 15765  011B2C  0100               	movlb	0	; () banked
 15766  011B2E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15767  011B30  0E0A               	movlw	10
 15768  011B32  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 15769  011B34  ECED  F0B2         	call	___lwdiv	;wreg free
 15770  011B38  0100               	movlb	0	; () banked
 15771  011B3A  517C               	movf	?___lwdiv& (0+255),w,b
 15772  011B3C  0F30               	addlw	48
 15773  011B3E  0100               	movlb	0	; () banked
 15774  011B40  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15775  011B42  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 15776                           
 15777                           ;tasks.h: 328: ringbuf_put(tx, (port[i].current % 10) / 1 + '0');
 15778  011B46  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15779  011B4A  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15780  011B4E  0100               	movlb	0	; () banked
 15781  011B50  5195               	movf	command_get_data@i& (0+255),w,b
 15782  011B52  0D17               	mullw	23
 15783  011B54  0E06               	movlw	6
 15784  011B56  26F3               	addwf	prodl,f,c
 15785  011B58  0E00               	movlw	0
 15786  011B5A  22F4               	addwfc	prodh,f,c
 15787  011B5C  0E29               	movlw	low _port
 15788  011B5E  24F3               	addwf	prodl,w,c
 15789  011B60  6ED9               	movwf	fsr2l,c
 15790  011B62  0E01               	movlw	high _port
 15791  011B64  20F4               	addwfc	prodh,w,c
 15792  011B66  6EDA               	movwf	fsr2h,c
 15793  011B68  CFDE F060          	movff	postinc2,___lwmod@dividend
 15794  011B6C  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15795  011B70  0E00               	movlw	0
 15796  011B72  0100               	movlb	0	; () banked
 15797  011B74  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15798  011B76  0E0A               	movlw	10
 15799  011B78  6F62               	movwf	___lwmod@divisor& (0+255),b
 15800  011B7A  ECDE  F0B4         	call	___lwmod	;wreg free
 15801  011B7E  0100               	movlb	0	; () banked
 15802  011B80  5160               	movf	?___lwmod& (0+255),w,b
 15803  011B82  0F30               	addlw	48
 15804  011B84  0100               	movlb	0	; () banked
 15805  011B86  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15806  011B88  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 15807                           
 15808                           ;tasks.h: 329: ringbuf_put_str(tx, "A\n");
 15809  011B8C  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15810  011B90  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15811  011B94  0EE0               	movlw	low STR_29
 15812  011B96  0100               	movlb	0	; () banked
 15813  011B98  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15814  011B9A  0EFF               	movlw	high STR_29
 15815  011B9C  0100               	movlb	0	; () banked
 15816  011B9E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15817  011BA0  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15818                           
 15819                           ;tasks.h: 330: break;
 15820  011BA4  0012               	return	
 15821  011BA6                     l11300:
 15822                           
 15823                           ;tasks.h: 332: ringbuf_put_str(tx, "\t");
 15824  011BA6  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15825  011BAA  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15826  011BAE  0EF5               	movlw	low STR_28
 15827  011BB0  0100               	movlb	0	; () banked
 15828  011BB2  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15829  011BB4  0EFF               	movlw	high STR_28
 15830  011BB6  0100               	movlb	0	; () banked
 15831  011BB8  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15832  011BBA  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15833                           
 15834                           ;tasks.h: 333: ringbuf_put_num(tx, port[i].integrated_current, 5);
 15835  011BBE  C092  F08A         	movff	command_get_data@tx,ringbuf_put_num@rb
 15836  011BC2  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_num@rb+1
 15837  011BC6  0100               	movlb	0	; () banked
 15838  011BC8  5195               	movf	command_get_data@i& (0+255),w,b
 15839  011BCA  0D17               	mullw	23
 15840  011BCC  0E0C               	movlw	12
 15841  011BCE  26F3               	addwf	prodl,f,c
 15842  011BD0  0E00               	movlw	0
 15843  011BD2  22F4               	addwfc	prodh,f,c
 15844  011BD4  0E29               	movlw	low _port
 15845  011BD6  24F3               	addwf	prodl,w,c
 15846  011BD8  6ED9               	movwf	fsr2l,c
 15847  011BDA  0E01               	movlw	high _port
 15848  011BDC  20F4               	addwfc	prodh,w,c
 15849  011BDE  6EDA               	movwf	fsr2h,c
 15850  011BE0  CFDE F08C          	movff	postinc2,ringbuf_put_num@value
 15851  011BE4  CFDD F08D          	movff	postdec2,ringbuf_put_num@value+1
 15852  011BE8  0E05               	movlw	5
 15853  011BEA  0100               	movlb	0	; () banked
 15854  011BEC  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 15855  011BEE  EC2F  F0B2         	call	_ringbuf_put_num	;wreg free
 15856                           
 15857                           ;tasks.h: 334: ringbuf_put_str(tx, "mAh\n");
 15858  011BF2  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15859  011BF6  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15860  011BFA  0EBA               	movlw	low STR_31
 15861  011BFC  0100               	movlb	0	; () banked
 15862  011BFE  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15863  011C00  0EFF               	movlw	high STR_31
 15864  011C02  0100               	movlb	0	; () banked
 15865  011C04  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15866  011C06  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15867                           
 15868                           ;tasks.h: 335: break;
 15869  011C0A  0012               	return	
 15870  011C0C                     l11306:
 15871                           
 15872                           ;tasks.h: 337: ringbuf_put_str(tx, "\t");
 15873  011C0C  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15874  011C10  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15875  011C14  0EF5               	movlw	low STR_28
 15876  011C16  0100               	movlb	0	; () banked
 15877  011C18  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15878  011C1A  0EFF               	movlw	high STR_28
 15879  011C1C  0100               	movlb	0	; () banked
 15880  011C1E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15881  011C20  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15882                           
 15883                           ;tasks.h: 338: char str[10];
 15884                           ;tasks.h: 339: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 15885  011C24  0E10               	movlw	16
 15886  011C26  0100               	movlb	0	; () banked
 15887  011C28  6F64               	movwf	___lldiv@divisor& (0+255),b
 15888  011C2A  0E0E               	movlw	14
 15889  011C2C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15890  011C2E  0E00               	movlw	0
 15891  011C30  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15892  011C32  0E00               	movlw	0
 15893  011C34  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15894  011C36  0100               	movlb	0	; () banked
 15895  011C38  5195               	movf	command_get_data@i& (0+255),w,b
 15896  011C3A  0D17               	mullw	23
 15897  011C3C  0E10               	movlw	16
 15898  011C3E  26F3               	addwf	prodl,f,c
 15899  011C40  0E00               	movlw	0
 15900  011C42  22F4               	addwfc	prodh,f,c
 15901  011C44  0E29               	movlw	low _port
 15902  011C46  24F3               	addwf	prodl,w,c
 15903  011C48  6ED9               	movwf	fsr2l,c
 15904  011C4A  0E01               	movlw	high _port
 15905  011C4C  20F4               	addwfc	prodh,w,c
 15906  011C4E  6EDA               	movwf	fsr2h,c
 15907  011C50  CFDE F060          	movff	postinc2,___lldiv@dividend
 15908  011C54  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 15909  011C58  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 15910  011C5C  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 15911  011C60  EC9E  F0AC         	call	___lldiv	;wreg free
 15912  011C64  C060  F0A0         	movff	?___lldiv,_command_get_data$5385
 15913  011C68  C061  F0A1         	movff	?___lldiv+1,_command_get_data$5385+1
 15914  011C6C  C062  F0A2         	movff	?___lldiv+2,_command_get_data$5385+2
 15915  011C70  C063  F0A3         	movff	?___lldiv+3,_command_get_data$5385+3
 15916                           
 15917                           ;tasks.h: 338: char str[10];
 15918                           ;tasks.h: 339: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 15919  011C74  0E96               	movlw	low command_get_data@str
 15920  011C76  0100               	movlb	0	; () banked
 15921  011C78  6F83               	movwf	my_utoa@str& (0+255),b
 15922  011C7A  0E00               	movlw	high command_get_data@str
 15923  011C7C  0100               	movlb	0	; () banked
 15924  011C7E  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 15925  011C80  C0A0  F060         	movff	_command_get_data$5385,___lldiv@dividend
 15926  011C84  C0A1  F061         	movff	_command_get_data$5385+1,___lldiv@dividend+1
 15927  011C88  C0A2  F062         	movff	_command_get_data$5385+2,___lldiv@dividend+2
 15928  011C8C  C0A3  F063         	movff	_command_get_data$5385+3,___lldiv@dividend+3
 15929  011C90  0E18               	movlw	24
 15930  011C92  0100               	movlb	0	; () banked
 15931  011C94  6F64               	movwf	___lldiv@divisor& (0+255),b
 15932  011C96  0E00               	movlw	0
 15933  011C98  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15934  011C9A  0E00               	movlw	0
 15935  011C9C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15936  011C9E  0E00               	movlw	0
 15937  011CA0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15938  011CA2  EC9E  F0AC         	call	___lldiv	;wreg free
 15939  011CA6  C060  F085         	movff	?___lldiv,my_utoa@value
 15940  011CAA  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
 15941  011CAE  0E02               	movlw	2
 15942  011CB0  0100               	movlb	0	; () banked
 15943  011CB2  6F87               	movwf	my_utoa@digits& (0+255),b
 15944  011CB4  ECA9  F0B1         	call	_my_utoa	;wreg free
 15945                           
 15946                           ;tasks.h: 340: ringbuf_put_str(tx, str);
 15947  011CB8  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15948  011CBC  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15949  011CC0  0E96               	movlw	low command_get_data@str
 15950  011CC2  0100               	movlb	0	; () banked
 15951  011CC4  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15952  011CC6  0E00               	movlw	high command_get_data@str
 15953  011CC8  0100               	movlb	0	; () banked
 15954  011CCA  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15955  011CCC  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15956                           
 15957                           ;tasks.h: 341: ringbuf_put_str(tx, "d ");
 15958  011CD0  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15959  011CD4  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15960  011CD8  0EE3               	movlw	low STR_24
 15961  011CDA  0100               	movlb	0	; () banked
 15962  011CDC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15963  011CDE  0EFF               	movlw	high STR_24
 15964  011CE0  0100               	movlb	0	; () banked
 15965  011CE2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15966  011CE4  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 15967                           
 15968                           ;tasks.h: 342: my_utoa(str, (port[i].integrated_time / 3600) % 24, 2);
 15969  011CE8  0E96               	movlw	low command_get_data@str
 15970  011CEA  0100               	movlb	0	; () banked
 15971  011CEC  6F83               	movwf	my_utoa@str& (0+255),b
 15972  011CEE  0E00               	movlw	high command_get_data@str
 15973  011CF0  0100               	movlb	0	; () banked
 15974  011CF2  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 15975  011CF4  0E10               	movlw	16
 15976  011CF6  0100               	movlb	0	; () banked
 15977  011CF8  6F64               	movwf	___lldiv@divisor& (0+255),b
 15978  011CFA  0E0E               	movlw	14
 15979  011CFC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15980  011CFE  0E00               	movlw	0
 15981  011D00  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15982  011D02  0E00               	movlw	0
 15983  011D04  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15984  011D06  0100               	movlb	0	; () banked
 15985  011D08  5195               	movf	command_get_data@i& (0+255),w,b
 15986  011D0A  0D17               	mullw	23
 15987  011D0C  0E10               	movlw	16
 15988  011D0E  26F3               	addwf	prodl,f,c
 15989  011D10  0E00               	movlw	0
 15990  011D12  22F4               	addwfc	prodh,f,c
 15991  011D14  0E29               	movlw	low _port
 15992  011D16  24F3               	addwf	prodl,w,c
 15993  011D18  6ED9               	movwf	fsr2l,c
 15994  011D1A  0E01               	movlw	high _port
 15995  011D1C  20F4               	addwfc	prodh,w,c
 15996  011D1E  6EDA               	movwf	fsr2h,c
 15997  011D20  CFDE F060          	movff	postinc2,___lldiv@dividend
 15998  011D24  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 15999  011D28  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 16000  011D2C  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 16001  011D30  EC9E  F0AC         	call	___lldiv	;wreg free
 16002  011D34  C060  F06D         	movff	?___lldiv,___llmod@dividend
 16003  011D38  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 16004  011D3C  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 16005  011D40  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 16006  011D44  0E18               	movlw	24
 16007  011D46  0100               	movlb	0	; () banked
 16008  011D48  6F71               	movwf	___llmod@divisor& (0+255),b
 16009  011D4A  0E00               	movlw	0
 16010  011D4C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16011  011D4E  0E00               	movlw	0
 16012  011D50  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16013  011D52  0E00               	movlw	0
 16014  011D54  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16015  011D56  ECA6  F0AF         	call	___llmod	;wreg free
 16016  011D5A  C06D  F085         	movff	?___llmod,my_utoa@value
 16017  011D5E  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16018  011D62  0E02               	movlw	2
 16019  011D64  0100               	movlb	0	; () banked
 16020  011D66  6F87               	movwf	my_utoa@digits& (0+255),b
 16021  011D68  ECA9  F0B1         	call	_my_utoa	;wreg free
 16022                           
 16023                           ;tasks.h: 343: ringbuf_put_str(tx, str);
 16024  011D6C  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16025  011D70  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16026  011D74  0E96               	movlw	low command_get_data@str
 16027  011D76  0100               	movlb	0	; () banked
 16028  011D78  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16029  011D7A  0E00               	movlw	high command_get_data@str
 16030  011D7C  0100               	movlb	0	; () banked
 16031  011D7E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16032  011D80  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 16033                           
 16034                           ;tasks.h: 344: ringbuf_put_str(tx, "h ");
 16035  011D84  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16036  011D88  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16037  011D8C  0EE6               	movlw	low STR_25
 16038  011D8E  0100               	movlb	0	; () banked
 16039  011D90  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16040  011D92  0EFF               	movlw	high STR_25
 16041  011D94  0100               	movlb	0	; () banked
 16042  011D96  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16043  011D98  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 16044                           
 16045                           ;tasks.h: 345: my_utoa(str, (port[i].integrated_time / 60) % 60, 2);
 16046  011D9C  0E96               	movlw	low command_get_data@str
 16047  011D9E  0100               	movlb	0	; () banked
 16048  011DA0  6F83               	movwf	my_utoa@str& (0+255),b
 16049  011DA2  0E00               	movlw	high command_get_data@str
 16050  011DA4  0100               	movlb	0	; () banked
 16051  011DA6  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16052  011DA8  0E3C               	movlw	60
 16053  011DAA  0100               	movlb	0	; () banked
 16054  011DAC  6F64               	movwf	___lldiv@divisor& (0+255),b
 16055  011DAE  0E00               	movlw	0
 16056  011DB0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 16057  011DB2  0E00               	movlw	0
 16058  011DB4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 16059  011DB6  0E00               	movlw	0
 16060  011DB8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 16061  011DBA  0100               	movlb	0	; () banked
 16062  011DBC  5195               	movf	command_get_data@i& (0+255),w,b
 16063  011DBE  0D17               	mullw	23
 16064  011DC0  0E10               	movlw	16
 16065  011DC2  26F3               	addwf	prodl,f,c
 16066  011DC4  0E00               	movlw	0
 16067  011DC6  22F4               	addwfc	prodh,f,c
 16068  011DC8  0E29               	movlw	low _port
 16069  011DCA  24F3               	addwf	prodl,w,c
 16070  011DCC  6ED9               	movwf	fsr2l,c
 16071  011DCE  0E01               	movlw	high _port
 16072  011DD0  20F4               	addwfc	prodh,w,c
 16073  011DD2  6EDA               	movwf	fsr2h,c
 16074  011DD4  CFDE F060          	movff	postinc2,___lldiv@dividend
 16075  011DD8  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 16076  011DDC  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 16077  011DE0  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 16078  011DE4  EC9E  F0AC         	call	___lldiv	;wreg free
 16079  011DE8  C060  F06D         	movff	?___lldiv,___llmod@dividend
 16080  011DEC  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 16081  011DF0  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 16082  011DF4  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 16083  011DF8  0E3C               	movlw	60
 16084  011DFA  0100               	movlb	0	; () banked
 16085  011DFC  6F71               	movwf	___llmod@divisor& (0+255),b
 16086  011DFE  0E00               	movlw	0
 16087  011E00  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16088  011E02  0E00               	movlw	0
 16089  011E04  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16090  011E06  0E00               	movlw	0
 16091  011E08  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16092  011E0A  ECA6  F0AF         	call	___llmod	;wreg free
 16093  011E0E  C06D  F085         	movff	?___llmod,my_utoa@value
 16094  011E12  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16095  011E16  0E02               	movlw	2
 16096  011E18  0100               	movlb	0	; () banked
 16097  011E1A  6F87               	movwf	my_utoa@digits& (0+255),b
 16098  011E1C  ECA9  F0B1         	call	_my_utoa	;wreg free
 16099                           
 16100                           ;tasks.h: 346: ringbuf_put_str(tx, str);
 16101  011E20  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16102  011E24  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16103  011E28  0E96               	movlw	low command_get_data@str
 16104  011E2A  0100               	movlb	0	; () banked
 16105  011E2C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16106  011E2E  0E00               	movlw	high command_get_data@str
 16107  011E30  0100               	movlb	0	; () banked
 16108  011E32  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16109  011E34  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 16110                           
 16111                           ;tasks.h: 347: ringbuf_put_str(tx, "m ");
 16112  011E38  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16113  011E3C  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16114  011E40  0EE9               	movlw	low STR_26
 16115  011E42  0100               	movlb	0	; () banked
 16116  011E44  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16117  011E46  0EFF               	movlw	high STR_26
 16118  011E48  0100               	movlb	0	; () banked
 16119  011E4A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16120  011E4C  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 16121                           
 16122                           ;tasks.h: 348: my_utoa(str, port[i].integrated_time % 60, 2);
 16123  011E50  0E96               	movlw	low command_get_data@str
 16124  011E52  0100               	movlb	0	; () banked
 16125  011E54  6F83               	movwf	my_utoa@str& (0+255),b
 16126  011E56  0E00               	movlw	high command_get_data@str
 16127  011E58  0100               	movlb	0	; () banked
 16128  011E5A  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16129  011E5C  0100               	movlb	0	; () banked
 16130  011E5E  5195               	movf	command_get_data@i& (0+255),w,b
 16131  011E60  0D17               	mullw	23
 16132  011E62  0E10               	movlw	16
 16133  011E64  26F3               	addwf	prodl,f,c
 16134  011E66  0E00               	movlw	0
 16135  011E68  22F4               	addwfc	prodh,f,c
 16136  011E6A  0E29               	movlw	low _port
 16137  011E6C  24F3               	addwf	prodl,w,c
 16138  011E6E  6ED9               	movwf	fsr2l,c
 16139  011E70  0E01               	movlw	high _port
 16140  011E72  20F4               	addwfc	prodh,w,c
 16141  011E74  6EDA               	movwf	fsr2h,c
 16142  011E76  CFDE F06D          	movff	postinc2,___llmod@dividend
 16143  011E7A  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 16144  011E7E  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 16145  011E82  CFDE F070          	movff	postinc2,___llmod@dividend+3
 16146  011E86  0E3C               	movlw	60
 16147  011E88  0100               	movlb	0	; () banked
 16148  011E8A  6F71               	movwf	___llmod@divisor& (0+255),b
 16149  011E8C  0E00               	movlw	0
 16150  011E8E  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16151  011E90  0E00               	movlw	0
 16152  011E92  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16153  011E94  0E00               	movlw	0
 16154  011E96  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16155  011E98  ECA6  F0AF         	call	___llmod	;wreg free
 16156  011E9C  C06D  F085         	movff	?___llmod,my_utoa@value
 16157  011EA0  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16158  011EA4  0E02               	movlw	2
 16159  011EA6  0100               	movlb	0	; () banked
 16160  011EA8  6F87               	movwf	my_utoa@digits& (0+255),b
 16161  011EAA  ECA9  F0B1         	call	_my_utoa	;wreg free
 16162                           
 16163                           ;tasks.h: 349: ringbuf_put_str(tx, str);
 16164  011EAE  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16165  011EB2  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16166  011EB6  0E96               	movlw	low command_get_data@str
 16167  011EB8  0100               	movlb	0	; () banked
 16168  011EBA  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16169  011EBC  0E00               	movlw	high command_get_data@str
 16170  011EBE  0100               	movlb	0	; () banked
 16171  011EC0  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16172  011EC2  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 16173                           
 16174                           ;tasks.h: 350: ringbuf_put_str(tx, "s");
 16175  011EC6  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16176  011ECA  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16177  011ECE  0E5C               	movlw	low (STR_93+7)
 16178  011ED0  0100               	movlb	0	; () banked
 16179  011ED2  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16180  011ED4  0EFF               	movlw	high (STR_93+7)
 16181  011ED6  0100               	movlb	0	; () banked
 16182  011ED8  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16183  011EDA  EC7A  F0B4         	call	_ringbuf_put_str	;wreg free
 16184                           
 16185                           ;tasks.h: 352: }
 16186                           
 16187                           ;tasks.h: 351: break;
 16188  011EDE  0012               	return	
 16189  011EE0                     l11336:
 16190  011EE0  0100               	movlb	0	; () banked
 16191  011EE2  5194               	movf	command_get_data@item& (0+255),w,b
 16192                           
 16193                           ; Switch size 1, requested type "space"
 16194                           ; Number of cases is 3, Range of values is 0 to 2
 16195                           ; switch strategies available:
 16196                           ; Name         Instructions Cycles
 16197                           ; simple_byte           10     6 (average)
 16198                           ;	Chosen strategy is simple_byte
 16199  011EE4  0A00               	xorlw	0	; case 0
 16200  011EE6  B4D8               	btfsc	status,2,c
 16201  011EE8  D58F               	goto	l11286
 16202  011EEA  0A01               	xorlw	1	; case 1
 16203  011EEC  B4D8               	btfsc	status,2,c
 16204  011EEE  D65B               	goto	l11300
 16205  011EF0  0A03               	xorlw	3	; case 2
 16206  011EF2  A4D8               	btfss	status,2,c
 16207  011EF4  0012               	return	
 16208  011EF6  D68A               	goto	l11306
 16209  011EF8                     __end_of_command_get_data:
 16210                           	opt stack 0
 16211                           tblptru	equ	0xFF8
 16212                           tblptrh	equ	0xFF7
 16213                           tblptrl	equ	0xFF6
 16214                           tablat	equ	0xFF5
 16215                           prodh	equ	0xFF4
 16216                           prodl	equ	0xFF3
 16217                           intcon	equ	0xFF2
 16218                           postinc0	equ	0xFEE
 16219                           wreg	equ	0xFE8
 16220                           indf1	equ	0xFE7
 16221                           postinc1	equ	0xFE6
 16222                           postdec1	equ	0xFE5
 16223                           fsr1h	equ	0xFE2
 16224                           fsr1l	equ	0xFE1
 16225                           indf2	equ	0xFDF
 16226                           postinc2	equ	0xFDE
 16227                           postdec2	equ	0xFDD
 16228                           plusw2	equ	0xFDB
 16229                           fsr2h	equ	0xFDA
 16230                           fsr2l	equ	0xFD9
 16231                           status	equ	0xFD8
 16232                           
 16233 ;; *************** function _ringbuf_put_str *****************
 16234 ;; Defined at:
 16235 ;;		line 58 in file "../My_header\My_ringbuf.h"
 16236 ;; Parameters:    Size  Location     Type
 16237 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 16238 ;;		 -> usb_tx(8), 
 16239 ;;  str             2   44[BANK0 ] PTR const unsigned char 
 16240 ;;		 -> STR_135(2), normal_loop@str(30), STR_86(62), STR_75(62), 
 16241 ;;		 -> STR_64(62), STR_59(35), STR_54(18), STR_51(36), 
 16242 ;;		 -> STR_50(24), STR_41(568), STR_36(2), STR_35(3), 
 16243 ;;		 -> STR_34(3), STR_33(3), command_get_data@str(10), STR_32(2), 
 16244 ;;		 -> STR_31(5), STR_30(2), STR_29(3), STR_28(2), 
 16245 ;;		 -> STR_6(8), print_time@str(30), STR_4(3), print_time_dec@str(10), 
 16246 ;;		 -> STR_3(4), STR_2(4), 
 16247 ;; Auto vars:     Size  Location     Type
 16248 ;;		None
 16249 ;; Return value:  Size  Location     Type
 16250 ;;		None               void
 16251 ;; Registers used:
 16252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16253 ;; Tracked objects:
 16254 ;;		On entry : 0/0
 16255 ;;		On exit  : 0/0
 16256 ;;		Unchanged: 0/0
 16257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16261 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;Total ram usage:        4 bytes
 16263 ;; Hardware stack levels used:    1
 16264 ;; Hardware stack levels required when called:   13
 16265 ;; This function calls:
 16266 ;;		_ringbuf_put
 16267 ;; This function is called by:
 16268 ;;		_my_terminal_loop
 16269 ;;		_print_time
 16270 ;;		_command_at_hand
 16271 ;;		_command_get_data
 16272 ;;		_command_operation
 16273 ;;		_normal_loop
 16274 ;;		_print_time_dec
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           	psect	text46
 16279  0168F4                     __ptext46:
 16280                           	opt stack 0
 16281  0168F4                     _ringbuf_put_str:
 16282                           	opt stack 16
 16283                           
 16284                           ;My_header\My_ringbuf.h: 59: while (*str) {
 16285                           
 16286                           ;incstack = 0
 16287  0168F4  D01C               	goto	l10250
 16288  0168F6                     l10246:
 16289                           
 16290                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
 16291  0168F6  C08A  F083         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 16292  0168FA  C08B  F084         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 16293  0168FE  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 16294  016902  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 16295  016906  0E00               	movlw	low (__mediumconst shr (0+16))
 16296  016908  6EF8               	movwf	tblptru,c
 16297  01690A  0E0E               	movlw	(high __ramtop+-1)
 16298  01690C  64F7               	cpfsgt	tblptrh,c
 16299  01690E  D003               	bra	u11857
 16300  016910  0008               	tblrd		*
 16301  016912  50F5               	movf	tablat,w,c
 16302  016914  D005               	bra	u11850
 16303  016916                     u11857:
 16304  016916  CFF6 FFE1          	movff	tblptrl,fsr1l
 16305  01691A  CFF7 FFE2          	movff	tblptrh,fsr1h
 16306  01691E  50E7               	movf	indf1,w,c
 16307  016920                     u11850:
 16308  016920  0100               	movlb	0	; () banked
 16309  016922  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16310  016924  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 16311  016928  0100               	movlb	0	; () banked
 16312  01692A  4B8C               	infsnz	ringbuf_put_str@str& (0+255),f,b
 16313  01692C  2B8D               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 16314  01692E                     l10250:
 16315  01692E  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 16316  016932  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 16317  016936  0E00               	movlw	low (__mediumconst shr (0+16))
 16318  016938  6EF8               	movwf	tblptru,c
 16319  01693A  0E0E               	movlw	(high __ramtop+-1)
 16320  01693C  64F7               	cpfsgt	tblptrh,c
 16321  01693E  D003               	bra	u11867
 16322  016940  0008               	tblrd		*
 16323  016942  50F5               	movf	tablat,w,c
 16324  016944  D005               	bra	u11860
 16325  016946                     u11867:
 16326  016946  CFF6 FFE1          	movff	tblptrl,fsr1l
 16327  01694A  CFF7 FFE2          	movff	tblptrh,fsr1h
 16328  01694E  50E7               	movf	indf1,w,c
 16329  016950                     u11860:
 16330  016950  0900               	iorlw	0
 16331  016952  B4D8               	btfsc	status,2,c
 16332  016954  0012               	return	
 16333  016956  D7CF               	goto	l10246
 16334  016958                     __end_of_ringbuf_put_str:
 16335                           	opt stack 0
 16336                           tblptru	equ	0xFF8
 16337                           tblptrh	equ	0xFF7
 16338                           tblptrl	equ	0xFF6
 16339                           tablat	equ	0xFF5
 16340                           prodh	equ	0xFF4
 16341                           prodl	equ	0xFF3
 16342                           intcon	equ	0xFF2
 16343                           postinc0	equ	0xFEE
 16344                           wreg	equ	0xFE8
 16345                           indf1	equ	0xFE7
 16346                           postinc1	equ	0xFE6
 16347                           postdec1	equ	0xFE5
 16348                           fsr1h	equ	0xFE2
 16349                           fsr1l	equ	0xFE1
 16350                           indf2	equ	0xFDF
 16351                           postinc2	equ	0xFDE
 16352                           postdec2	equ	0xFDD
 16353                           plusw2	equ	0xFDB
 16354                           fsr2h	equ	0xFDA
 16355                           fsr2l	equ	0xFD9
 16356                           status	equ	0xFD8
 16357                           
 16358 ;; *************** function _ringbuf_put_num *****************
 16359 ;; Defined at:
 16360 ;;		line 47 in file "../My_header\My_ringbuf.h"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 16363 ;;		 -> usb_tx(8), 
 16364 ;;  value           2   44[BANK0 ] const unsigned int 
 16365 ;;  digits          1   46[BANK0 ] unsigned char 
 16366 ;; Auto vars:     Size  Location     Type
 16367 ;;  i               1   47[BANK0 ] unsigned char 
 16368 ;;  temp            2   48[BANK0 ] unsigned int 
 16369 ;; Return value:  Size  Location     Type
 16370 ;;		None               void
 16371 ;; Registers used:
 16372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16373 ;; Tracked objects:
 16374 ;;		On entry : 0/0
 16375 ;;		On exit  : 0/0
 16376 ;;		Unchanged: 0/0
 16377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16378 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16381 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16382 ;;Total ram usage:        8 bytes
 16383 ;; Hardware stack levels used:    1
 16384 ;; Hardware stack levels required when called:   13
 16385 ;; This function calls:
 16386 ;;		___lwdiv
 16387 ;;		___lwmod
 16388 ;;		_ringbuf_put
 16389 ;; This function is called by:
 16390 ;;		_my_terminal_loop
 16391 ;;		_command_get_data
 16392 ;; This function uses a non-reentrant model
 16393 ;;
 16394                           
 16395                           	psect	text47
 16396  01645E                     __ptext47:
 16397                           	opt stack 0
 16398  01645E                     _ringbuf_put_num:
 16399                           	opt stack 16
 16400                           
 16401                           ;My_header\My_ringbuf.h: 48: while (digits--) {
 16402                           
 16403                           ;incstack = 0
 16404  01645E  D039               	goto	l10656
 16405  016460                     l766:
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
 16409  016460  C08C  F090         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
 16410  016464  C08D  F091         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
 16414  016468  0E00               	movlw	0
 16415  01646A  0100               	movlb	0	; () banked
 16416  01646C  6F8F               	movwf	ringbuf_put_num@i& (0+255),b
 16417  01646E  D011               	goto	l10650
 16418  016470                     l10646:
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;My_header\My_ringbuf.h: 51: temp /= 10;
 16422  016470  C090  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
 16423  016474  C091  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
 16424  016478  0E00               	movlw	0
 16425  01647A  0100               	movlb	0	; () banked
 16426  01647C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16427  01647E  0E0A               	movlw	10
 16428  016480  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16429  016482  ECED  F0B2         	call	___lwdiv	;wreg free
 16430  016486  C07C  F090         	movff	?___lwdiv,ringbuf_put_num@temp
 16431  01648A  C07D  F091         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
 16432  01648E  0100               	movlb	0	; () banked
 16433  016490  2B8F               	incf	ringbuf_put_num@i& (0+255),f,b
 16434  016492                     l10650:
 16435                           
 16436                           ; BSR set to: 0
 16437  016492  0100               	movlb	0	; () banked
 16438  016494  518E               	movf	ringbuf_put_num@digits& (0+255),w,b
 16439  016496  0100               	movlb	0	; () banked
 16440  016498  5D8F               	subwf	ringbuf_put_num@i& (0+255),w,b
 16441  01649A  A0D8               	btfss	status,0,c
 16442  01649C  D7E9               	goto	l10646
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;My_header\My_ringbuf.h: 52: }
 16446                           ;My_header\My_ringbuf.h: 53: temp %= 10;
 16447                           
 16448                           ; BSR set to: 0
 16449  01649E  C090  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
 16450  0164A2  C091  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
 16451  0164A6  0E00               	movlw	0
 16452  0164A8  0100               	movlb	0	; () banked
 16453  0164AA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16454  0164AC  0E0A               	movlw	10
 16455  0164AE  6F62               	movwf	___lwmod@divisor& (0+255),b
 16456  0164B0  ECDE  F0B4         	call	___lwmod	;wreg free
 16457  0164B4  C060  F090         	movff	?___lwmod,ringbuf_put_num@temp
 16458  0164B8  C061  F091         	movff	?___lwmod+1,ringbuf_put_num@temp+1
 16459                           
 16460                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
 16461  0164BC  C08A  F083         	movff	ringbuf_put_num@rb,ringbuf_put@rb
 16462  0164C0  C08B  F084         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
 16463  0164C4  0100               	movlb	0	; () banked
 16464  0164C6  5190               	movf	ringbuf_put_num@temp& (0+255),w,b
 16465  0164C8  0F30               	addlw	48
 16466  0164CA  0100               	movlb	0	; () banked
 16467  0164CC  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16468  0164CE  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 16469  0164D2                     l10656:
 16470  0164D2  0100               	movlb	0	; () banked
 16471  0164D4  078E               	decf	ringbuf_put_num@digits& (0+255),f,b
 16472  0164D6  0100               	movlb	0	; () banked
 16473  0164D8  298E               	incf	ringbuf_put_num@digits& (0+255),w,b
 16474  0164DA  B4D8               	btfsc	status,2,c
 16475  0164DC  0012               	return	
 16476  0164DE  D7C0               	goto	l766
 16477  0164E0                     __end_of_ringbuf_put_num:
 16478                           	opt stack 0
 16479                           tblptru	equ	0xFF8
 16480                           tblptrh	equ	0xFF7
 16481                           tblptrl	equ	0xFF6
 16482                           tablat	equ	0xFF5
 16483                           prodh	equ	0xFF4
 16484                           prodl	equ	0xFF3
 16485                           intcon	equ	0xFF2
 16486                           postinc0	equ	0xFEE
 16487                           wreg	equ	0xFE8
 16488                           indf1	equ	0xFE7
 16489                           postinc1	equ	0xFE6
 16490                           postdec1	equ	0xFE5
 16491                           fsr1h	equ	0xFE2
 16492                           fsr1l	equ	0xFE1
 16493                           indf2	equ	0xFDF
 16494                           postinc2	equ	0xFDE
 16495                           postdec2	equ	0xFDD
 16496                           plusw2	equ	0xFDB
 16497                           fsr2h	equ	0xFDA
 16498                           fsr2l	equ	0xFD9
 16499                           status	equ	0xFD8
 16500                           
 16501 ;; *************** function _my_utoa *****************
 16502 ;; Defined at:
 16503 ;;		line 11 in file "../My_header\My_stdlib.h"
 16504 ;; Parameters:    Size  Location     Type
 16505 ;;  str             2   35[BANK0 ] PTR unsigned char 
 16506 ;;		 -> command_get_data@str(10), display_LCD@str(10), print_time_dec@str(10), display_dec@str(10), 
 16507 ;;  value           2   37[BANK0 ] unsigned int 
 16508 ;;  digits          1   39[BANK0 ] unsigned char 
 16509 ;; Auto vars:     Size  Location     Type
 16510 ;;  v               2   41[BANK0 ] unsigned int 
 16511 ;;  d               1   40[BANK0 ] unsigned char 
 16512 ;; Return value:  Size  Location     Type
 16513 ;;		None               void
 16514 ;; Registers used:
 16515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16521 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16522 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16525 ;;Total ram usage:        8 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:   12
 16528 ;; This function calls:
 16529 ;;		___lwdiv
 16530 ;;		___lwmod
 16531 ;; This function is called by:
 16532 ;;		_display_dec
 16533 ;;		_display_LCD
 16534 ;;		_command_get_data
 16535 ;;		_print_time_dec
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           	psect	text48
 16540  016352                     __ptext48:
 16541                           	opt stack 0
 16542  016352                     _my_utoa:
 16543                           	opt stack 16
 16544                           
 16545                           ;My_header\My_stdlib.h: 12: uint16_t v;
 16546                           ;My_header\My_stdlib.h: 13: uint8_t d;
 16547                           ;My_header\My_stdlib.h: 14: while (digits--) {
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;incstack = 0
 16551  016352  D036               	goto	l10594
 16552  016354                     l1041:
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;My_header\My_stdlib.h: 15: v = value;
 16556  016354  C085  F089         	movff	my_utoa@value,my_utoa@v
 16557  016358  C086  F08A         	movff	my_utoa@value+1,my_utoa@v+1
 16558                           
 16559                           ;My_header\My_stdlib.h: 16: d = digits;
 16560  01635C  C087  F088         	movff	my_utoa@digits,my_utoa@d
 16561                           
 16562                           ;My_header\My_stdlib.h: 17: while (d--) {
 16563  016360  D00F               	goto	l10586
 16564  016362                     l10584:
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;My_header\My_stdlib.h: 18: v /= 10;
 16568  016362  C089  F07C         	movff	my_utoa@v,___lwdiv@dividend
 16569  016366  C08A  F07D         	movff	my_utoa@v+1,___lwdiv@dividend+1
 16570  01636A  0E00               	movlw	0
 16571  01636C  0100               	movlb	0	; () banked
 16572  01636E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16573  016370  0E0A               	movlw	10
 16574  016372  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16575  016374  ECED  F0B2         	call	___lwdiv	;wreg free
 16576  016378  C07C  F089         	movff	?___lwdiv,my_utoa@v
 16577  01637C  C07D  F08A         	movff	?___lwdiv+1,my_utoa@v+1
 16578  016380                     l10586:
 16579  016380  0100               	movlb	0	; () banked
 16580  016382  0788               	decf	my_utoa@d& (0+255),f,b
 16581  016384  0100               	movlb	0	; () banked
 16582  016386  2988               	incf	my_utoa@d& (0+255),w,b
 16583  016388  A4D8               	btfss	status,2,c
 16584  01638A  D7EB               	goto	l10584
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;My_header\My_stdlib.h: 19: }
 16588                           ;My_header\My_stdlib.h: 20: v %= 10;
 16589                           
 16590                           ; BSR set to: 0
 16591  01638C  C089  F060         	movff	my_utoa@v,___lwmod@dividend
 16592  016390  C08A  F061         	movff	my_utoa@v+1,___lwmod@dividend+1
 16593  016394  0E00               	movlw	0
 16594  016396  0100               	movlb	0	; () banked
 16595  016398  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16596  01639A  0E0A               	movlw	10
 16597  01639C  6F62               	movwf	___lwmod@divisor& (0+255),b
 16598  01639E  ECDE  F0B4         	call	___lwmod	;wreg free
 16599  0163A2  C060  F089         	movff	?___lwmod,my_utoa@v
 16600  0163A6  C061  F08A         	movff	?___lwmod+1,my_utoa@v+1
 16601                           
 16602                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
 16603  0163AA  0100               	movlb	0	; () banked
 16604  0163AC  5189               	movf	my_utoa@v& (0+255),w,b
 16605  0163AE  0F30               	addlw	48
 16606  0163B0  C083  FFD9         	movff	my_utoa@str,fsr2l
 16607  0163B4  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 16608  0163B8  6EDF               	movwf	indf2,c
 16609                           
 16610                           ; BSR set to: 0
 16611  0163BA  0100               	movlb	0	; () banked
 16612  0163BC  4B83               	infsnz	my_utoa@str& (0+255),f,b
 16613  0163BE  2B84               	incf	(my_utoa@str+1)& (0+255),f,b
 16614  0163C0                     l10594:
 16615  0163C0  0100               	movlb	0	; () banked
 16616  0163C2  0787               	decf	my_utoa@digits& (0+255),f,b
 16617  0163C4  0100               	movlb	0	; () banked
 16618  0163C6  2987               	incf	my_utoa@digits& (0+255),w,b
 16619  0163C8  A4D8               	btfss	status,2,c
 16620  0163CA  D7C4               	goto	l1041
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;My_header\My_stdlib.h: 22: }
 16624                           ;My_header\My_stdlib.h: 23: *str = '\0';
 16625                           
 16626                           ; BSR set to: 0
 16627  0163CC  C083  FFD9         	movff	my_utoa@str,fsr2l
 16628  0163D0  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 16629  0163D4  0E00               	movlw	0
 16630  0163D6  6EDF               	movwf	indf2,c
 16631                           
 16632                           ; BSR set to: 0
 16633  0163D8  0012               	return		;funcret
 16634  0163DA                     __end_of_my_utoa:
 16635                           	opt stack 0
 16636                           tblptru	equ	0xFF8
 16637                           tblptrh	equ	0xFF7
 16638                           tblptrl	equ	0xFF6
 16639                           tablat	equ	0xFF5
 16640                           prodh	equ	0xFF4
 16641                           prodl	equ	0xFF3
 16642                           intcon	equ	0xFF2
 16643                           postinc0	equ	0xFEE
 16644                           wreg	equ	0xFE8
 16645                           indf1	equ	0xFE7
 16646                           postinc1	equ	0xFE6
 16647                           postdec1	equ	0xFE5
 16648                           fsr1h	equ	0xFE2
 16649                           fsr1l	equ	0xFE1
 16650                           indf2	equ	0xFDF
 16651                           postinc2	equ	0xFDE
 16652                           postdec2	equ	0xFDD
 16653                           plusw2	equ	0xFDB
 16654                           fsr2h	equ	0xFDA
 16655                           fsr2l	equ	0xFD9
 16656                           status	equ	0xFD8
 16657                           
 16658 ;; *************** function ___lwmod *****************
 16659 ;; Defined at:
 16660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 16661 ;; Parameters:    Size  Location     Type
 16662 ;;  dividend        2    0[BANK0 ] unsigned int 
 16663 ;;  divisor         2    2[BANK0 ] unsigned int 
 16664 ;; Auto vars:     Size  Location     Type
 16665 ;;  counter         1    4[BANK0 ] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  2    0[BANK0 ] unsigned int 
 16668 ;; Registers used:
 16669 ;;		wreg, status,2, status,0
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16678 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16679 ;;Total ram usage:        5 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; Hardware stack levels required when called:   11
 16682 ;; This function calls:
 16683 ;;		Nothing
 16684 ;; This function is called by:
 16685 ;;		_ringbuf_put_num
 16686 ;;		_my_utoa
 16687 ;;		_display_LCD
 16688 ;;		_command_get_data
 16689 ;;		_normal_loop
 16690 ;;		_tx_sendn
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text49
 16695  0169BC                     __ptext49:
 16696                           	opt stack 0
 16697  0169BC                     ___lwmod:
 16698                           	opt stack 16
 16699                           
 16700                           ; BSR set to: 0
 16701                           ;incstack = 0
 16702  0169BC  0100               	movlb	0	; () banked
 16703  0169BE  5162               	movf	___lwmod@divisor& (0+255),w,b
 16704  0169C0  0100               	movlb	0	; () banked
 16705  0169C2  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 16706  0169C4  B4D8               	btfsc	status,2,c
 16707  0169C6  D026               	goto	l2115
 16708                           
 16709                           ; BSR set to: 0
 16710  0169C8  0E01               	movlw	1
 16711  0169CA  0100               	movlb	0	; () banked
 16712  0169CC  6F64               	movwf	___lwmod@counter& (0+255),b
 16713  0169CE  D006               	goto	l10544
 16714  0169D0                     l10542:
 16715                           
 16716                           ; BSR set to: 0
 16717  0169D0  0100               	movlb	0	; () banked
 16718  0169D2  90D8               	bcf	status,0,c
 16719  0169D4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 16720  0169D6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16721  0169D8  0100               	movlb	0	; () banked
 16722  0169DA  2B64               	incf	___lwmod@counter& (0+255),f,b
 16723  0169DC                     l10544:
 16724                           
 16725                           ; BSR set to: 0
 16726  0169DC  0100               	movlb	0	; () banked
 16727  0169DE  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16728  0169E0  D7F7               	goto	l10542
 16729  0169E2                     l10546:
 16730                           
 16731                           ; BSR set to: 0
 16732  0169E2  0100               	movlb	0	; () banked
 16733  0169E4  5162               	movf	___lwmod@divisor& (0+255),w,b
 16734  0169E6  0100               	movlb	0	; () banked
 16735  0169E8  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 16736  0169EA  0100               	movlb	0	; () banked
 16737  0169EC  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16738  0169EE  0100               	movlb	0	; () banked
 16739  0169F0  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16740  0169F2  A0D8               	btfss	status,0,c
 16741  0169F4  D008               	goto	l10550
 16742                           
 16743                           ; BSR set to: 0
 16744  0169F6  0100               	movlb	0	; () banked
 16745  0169F8  5162               	movf	___lwmod@divisor& (0+255),w,b
 16746  0169FA  0100               	movlb	0	; () banked
 16747  0169FC  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 16748  0169FE  0100               	movlb	0	; () banked
 16749  016A00  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16750  016A02  0100               	movlb	0	; () banked
 16751  016A04  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16752  016A06                     l10550:
 16753                           
 16754                           ; BSR set to: 0
 16755  016A06  0100               	movlb	0	; () banked
 16756  016A08  90D8               	bcf	status,0,c
 16757  016A0A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16758  016A0C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 16759                           
 16760                           ; BSR set to: 0
 16761  016A0E  0100               	movlb	0	; () banked
 16762  016A10  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 16763  016A12  D7E7               	goto	l10546
 16764  016A14                     l2115:
 16765                           
 16766                           ; BSR set to: 0
 16767  016A14  C060  F060         	movff	___lwmod@dividend,?___lwmod
 16768  016A18  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 16769                           
 16770                           ; BSR set to: 0
 16771  016A1C  0012               	return		;funcret
 16772  016A1E                     __end_of___lwmod:
 16773                           	opt stack 0
 16774                           tblptru	equ	0xFF8
 16775                           tblptrh	equ	0xFF7
 16776                           tblptrl	equ	0xFF6
 16777                           tablat	equ	0xFF5
 16778                           prodh	equ	0xFF4
 16779                           prodl	equ	0xFF3
 16780                           intcon	equ	0xFF2
 16781                           postinc0	equ	0xFEE
 16782                           wreg	equ	0xFE8
 16783                           indf1	equ	0xFE7
 16784                           postinc1	equ	0xFE6
 16785                           postdec1	equ	0xFE5
 16786                           fsr1h	equ	0xFE2
 16787                           fsr1l	equ	0xFE1
 16788                           indf2	equ	0xFDF
 16789                           postinc2	equ	0xFDE
 16790                           postdec2	equ	0xFDD
 16791                           plusw2	equ	0xFDB
 16792                           fsr2h	equ	0xFDA
 16793                           fsr2l	equ	0xFD9
 16794                           status	equ	0xFD8
 16795                           
 16796 ;; *************** function ___llmod *****************
 16797 ;; Defined at:
 16798 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;  dividend        4   13[BANK0 ] unsigned long 
 16801 ;;  divisor         4   17[BANK0 ] unsigned long 
 16802 ;; Auto vars:     Size  Location     Type
 16803 ;;  counter         1   21[BANK0 ] unsigned char 
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  4   13[BANK0 ] unsigned long 
 16806 ;; Registers used:
 16807 ;;		wreg, status,2, status,0
 16808 ;; Tracked objects:
 16809 ;;		On entry : 0/0
 16810 ;;		On exit  : 0/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16813 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16816 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16817 ;;Total ram usage:        9 bytes
 16818 ;; Hardware stack levels used:    1
 16819 ;; Hardware stack levels required when called:   11
 16820 ;; This function calls:
 16821 ;;		Nothing
 16822 ;; This function is called by:
 16823 ;;		_my_utoa32
 16824 ;;		_display_LCD
 16825 ;;		_command_get_data
 16826 ;;		_sprintf
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           	psect	text50
 16831  015F4C                     __ptext50:
 16832                           	opt stack 0
 16833  015F4C                     ___llmod:
 16834                           	opt stack 17
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;incstack = 0
 16838  015F4C  0100               	movlb	0	; () banked
 16839  015F4E  5171               	movf	___llmod@divisor& (0+255),w,b
 16840  015F50  0100               	movlb	0	; () banked
 16841  015F52  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 16842  015F54  0100               	movlb	0	; () banked
 16843  015F56  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 16844  015F58  0100               	movlb	0	; () banked
 16845  015F5A  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 16846  015F5C  B4D8               	btfsc	status,2,c
 16847  015F5E  D03A               	goto	l2062
 16848                           
 16849                           ; BSR set to: 0
 16850  015F60  0E01               	movlw	1
 16851  015F62  0100               	movlb	0	; () banked
 16852  015F64  6F75               	movwf	___llmod@counter& (0+255),b
 16853  015F66  D008               	goto	l10234
 16854  015F68                     l10232:
 16855                           
 16856                           ; BSR set to: 0
 16857  015F68  0100               	movlb	0	; () banked
 16858  015F6A  90D8               	bcf	status,0,c
 16859  015F6C  3771               	rlcf	___llmod@divisor& (0+255),f,b
 16860  015F6E  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 16861  015F70  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16862  015F72  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16863  015F74  0100               	movlb	0	; () banked
 16864  015F76  2B75               	incf	___llmod@counter& (0+255),f,b
 16865  015F78                     l10234:
 16866                           
 16867                           ; BSR set to: 0
 16868  015F78  0100               	movlb	0	; () banked
 16869  015F7A  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16870  015F7C  D7F5               	goto	l10232
 16871  015F7E                     l10236:
 16872                           
 16873                           ; BSR set to: 0
 16874  015F7E  0100               	movlb	0	; () banked
 16875  015F80  5171               	movf	___llmod@divisor& (0+255),w,b
 16876  015F82  0100               	movlb	0	; () banked
 16877  015F84  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 16878  015F86  0100               	movlb	0	; () banked
 16879  015F88  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 16880  015F8A  0100               	movlb	0	; () banked
 16881  015F8C  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16882  015F8E  0100               	movlb	0	; () banked
 16883  015F90  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 16884  015F92  0100               	movlb	0	; () banked
 16885  015F94  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16886  015F96  0100               	movlb	0	; () banked
 16887  015F98  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 16888  015F9A  0100               	movlb	0	; () banked
 16889  015F9C  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16890  015F9E  A0D8               	btfss	status,0,c
 16891  015FA0  D010               	goto	l10240
 16892                           
 16893                           ; BSR set to: 0
 16894  015FA2  0100               	movlb	0	; () banked
 16895  015FA4  5171               	movf	___llmod@divisor& (0+255),w,b
 16896  015FA6  0100               	movlb	0	; () banked
 16897  015FA8  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 16898  015FAA  0100               	movlb	0	; () banked
 16899  015FAC  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 16900  015FAE  0100               	movlb	0	; () banked
 16901  015FB0  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16902  015FB2  0100               	movlb	0	; () banked
 16903  015FB4  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 16904  015FB6  0100               	movlb	0	; () banked
 16905  015FB8  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16906  015FBA  0100               	movlb	0	; () banked
 16907  015FBC  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 16908  015FBE  0100               	movlb	0	; () banked
 16909  015FC0  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16910  015FC2                     l10240:
 16911                           
 16912                           ; BSR set to: 0
 16913  015FC2  0100               	movlb	0	; () banked
 16914  015FC4  90D8               	bcf	status,0,c
 16915  015FC6  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16916  015FC8  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16917  015FCA  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16918  015FCC  3371               	rrcf	___llmod@divisor& (0+255),f,b
 16919                           
 16920                           ; BSR set to: 0
 16921  015FCE  0100               	movlb	0	; () banked
 16922  015FD0  2F75               	decfsz	___llmod@counter& (0+255),f,b
 16923  015FD2  D7D5               	goto	l10236
 16924  015FD4                     l2062:
 16925                           
 16926                           ; BSR set to: 0
 16927  015FD4  C06D  F06D         	movff	___llmod@dividend,?___llmod
 16928  015FD8  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 16929  015FDC  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 16930  015FE0  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 16931                           
 16932                           ; BSR set to: 0
 16933  015FE4  0012               	return		;funcret
 16934  015FE6                     __end_of___llmod:
 16935                           	opt stack 0
 16936                           tblptru	equ	0xFF8
 16937                           tblptrh	equ	0xFF7
 16938                           tblptrl	equ	0xFF6
 16939                           tablat	equ	0xFF5
 16940                           prodh	equ	0xFF4
 16941                           prodl	equ	0xFF3
 16942                           intcon	equ	0xFF2
 16943                           postinc0	equ	0xFEE
 16944                           wreg	equ	0xFE8
 16945                           indf1	equ	0xFE7
 16946                           postinc1	equ	0xFE6
 16947                           postdec1	equ	0xFE5
 16948                           fsr1h	equ	0xFE2
 16949                           fsr1l	equ	0xFE1
 16950                           indf2	equ	0xFDF
 16951                           postinc2	equ	0xFDE
 16952                           postdec2	equ	0xFDD
 16953                           plusw2	equ	0xFDB
 16954                           fsr2h	equ	0xFDA
 16955                           fsr2l	equ	0xFD9
 16956                           status	equ	0xFD8
 16957                           
 16958 ;; *************** function _bootload *****************
 16959 ;; Defined at:
 16960 ;;		line 356 in file "tasks.h"
 16961 ;; Parameters:    Size  Location     Type
 16962 ;;		None
 16963 ;; Auto vars:     Size  Location     Type
 16964 ;;		None
 16965 ;; Return value:  Size  Location     Type
 16966 ;;		None               void
 16967 ;; Registers used:
 16968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16969 ;; Tracked objects:
 16970 ;;		On entry : 0/0
 16971 ;;		On exit  : 0/0
 16972 ;;		Unchanged: 0/0
 16973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16978 ;;Total ram usage:        0 bytes
 16979 ;; Hardware stack levels used:    1
 16980 ;; Hardware stack levels required when called:   15
 16981 ;; This function calls:
 16982 ;;		_I2C_LCD_Clear
 16983 ;;		_I2C_LCD_Puts
 16984 ;;		_I2C_LCD_SetCursor
 16985 ;; This function is called by:
 16986 ;;		_command_operation
 16987 ;;		_main
 16988 ;; This function uses a non-reentrant model
 16989 ;;
 16990                           
 16991                           	psect	text51
 16992  016DAA                     __ptext51:
 16993                           	opt stack 0
 16994  016DAA                     _bootload:
 16995                           	opt stack 13
 16996                           
 16997                           ;tasks.h: 357: I2C_LCD_Clear();
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;incstack = 0
 17001  016DAA  ECDD  F0B9         	call	_I2C_LCD_Clear	;wreg free
 17002                           
 17003                           ;tasks.h: 358: I2C_LCD_SetCursor(0, 0);
 17004  016DAE  0E00               	movlw	0
 17005  016DB0  0100               	movlb	0	; () banked
 17006  016DB2  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 17007  016DB4  0E00               	movlw	0
 17008  016DB6  EC9D  F0B8         	call	_I2C_LCD_SetCursor
 17009                           
 17010                           ;tasks.h: 359: I2C_LCD_Puts("PIC18F27J53");
 17011  016DBA  0E09               	movlw	low STR_37
 17012  016DBC  0100               	movlb	0	; () banked
 17013  016DBE  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 17014  016DC0  0EFF               	movlw	high STR_37
 17015  016DC2  0100               	movlb	0	; () banked
 17016  016DC4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 17017  016DC6  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
 17018                           
 17019                           ;tasks.h: 360: I2C_LCD_SetCursor(0, 1);
 17020  016DCA  0E01               	movlw	1
 17021  016DCC  0100               	movlb	0	; () banked
 17022  016DCE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 17023  016DD0  0E00               	movlw	0
 17024  016DD2  EC9D  F0B8         	call	_I2C_LCD_SetCursor
 17025                           
 17026                           ;tasks.h: 361: I2C_LCD_Puts("Bootloader mode");
 17027  016DD6  0E91               	movlw	low STR_38
 17028  016DD8  0100               	movlb	0	; () banked
 17029  016DDA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 17030  016DDC  0EFE               	movlw	high STR_38
 17031  016DDE  0100               	movlb	0	; () banked
 17032  016DE0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 17033  016DE2  EC1D  F0B1         	call	_I2C_LCD_Puts	;wreg free
 17034  016DE6  EF0E F000          	goto	28	;# 
 17035  016DEA  0012               	return		;funcret
 17036  016DEC                     __end_of_bootload:
 17037                           	opt stack 0
 17038                           tblptru	equ	0xFF8
 17039                           tblptrh	equ	0xFF7
 17040                           tblptrl	equ	0xFF6
 17041                           tablat	equ	0xFF5
 17042                           prodh	equ	0xFF4
 17043                           prodl	equ	0xFF3
 17044                           intcon	equ	0xFF2
 17045                           postinc0	equ	0xFEE
 17046                           wreg	equ	0xFE8
 17047                           indf1	equ	0xFE7
 17048                           postinc1	equ	0xFE6
 17049                           postdec1	equ	0xFE5
 17050                           fsr1h	equ	0xFE2
 17051                           fsr1l	equ	0xFE1
 17052                           indf2	equ	0xFDF
 17053                           postinc2	equ	0xFDE
 17054                           postdec2	equ	0xFDD
 17055                           plusw2	equ	0xFDB
 17056                           fsr2h	equ	0xFDA
 17057                           fsr2l	equ	0xFD9
 17058                           status	equ	0xFD8
 17059                           
 17060 ;; *************** function _I2C_LCD_SetCursor *****************
 17061 ;; Defined at:
 17062 ;;		line 112 in file "../My_header\My_I2C.h"
 17063 ;; Parameters:    Size  Location     Type
 17064 ;;  col             1    wreg     unsigned char 
 17065 ;;  row             1    6[BANK0 ] unsigned char 
 17066 ;; Auto vars:     Size  Location     Type
 17067 ;;  col             1    9[BANK0 ] unsigned char 
 17068 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 17069 ;; Return value:  Size  Location     Type
 17070 ;;		None               void
 17071 ;; Registers used:
 17072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17073 ;; Tracked objects:
 17074 ;;		On entry : 0/0
 17075 ;;		On exit  : 0/0
 17076 ;;		Unchanged: 0/0
 17077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17078 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17079 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17081 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17082 ;;Total ram usage:        4 bytes
 17083 ;; Hardware stack levels used:    1
 17084 ;; Hardware stack levels required when called:   14
 17085 ;; This function calls:
 17086 ;;		_I2C_LCD_Command
 17087 ;; This function is called by:
 17088 ;;		_display_time_1602
 17089 ;;		_display_port
 17090 ;;		_display_LCD
 17091 ;;		_bootload
 17092 ;;		_sleep_loop
 17093 ;;		_display_time_0802
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           	psect	text52
 17098  01713A                     __ptext52:
 17099                           	opt stack 0
 17100  01713A                     _I2C_LCD_SetCursor:
 17101                           	opt stack 15
 17102                           
 17103                           ;incstack = 0
 17104                           ;I2C_LCD_SetCursor@col stored from wreg
 17105  01713A  0100               	movlb	0	; () banked
 17106  01713C  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 17107                           
 17108                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
 17109  01713E  C198  F067         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
 17110  017142  C199  F068         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
 17111                           
 17112                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 17113  017146  0100               	movlb	0	; () banked
 17114  017148  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 17115  01714A  0D01               	mullw	1
 17116  01714C  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 17117  01714E  24F3               	addwf	prodl,w,c
 17118  017150  6ED9               	movwf	fsr2l,c
 17119  017152  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 17120  017154  20F4               	addwfc	prodh,w,c
 17121  017156  6EDA               	movwf	fsr2h,c
 17122  017158  50DF               	movf	indf2,w,c
 17123  01715A  0100               	movlb	0	; () banked
 17124  01715C  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 17125  01715E  0980               	iorlw	128
 17126  017160  ECA5  F0B7         	call	_I2C_LCD_Command
 17127  017164  0012               	return		;funcret
 17128  017166                     __end_of_I2C_LCD_SetCursor:
 17129                           	opt stack 0
 17130                           tblptru	equ	0xFF8
 17131                           tblptrh	equ	0xFF7
 17132                           tblptrl	equ	0xFF6
 17133                           tablat	equ	0xFF5
 17134                           prodh	equ	0xFF4
 17135                           prodl	equ	0xFF3
 17136                           intcon	equ	0xFF2
 17137                           postinc0	equ	0xFEE
 17138                           wreg	equ	0xFE8
 17139                           indf1	equ	0xFE7
 17140                           postinc1	equ	0xFE6
 17141                           postdec1	equ	0xFE5
 17142                           fsr1h	equ	0xFE2
 17143                           fsr1l	equ	0xFE1
 17144                           indf2	equ	0xFDF
 17145                           postinc2	equ	0xFDE
 17146                           postdec2	equ	0xFDD
 17147                           plusw2	equ	0xFDB
 17148                           fsr2h	equ	0xFDA
 17149                           fsr2l	equ	0xFD9
 17150                           status	equ	0xFD8
 17151                           
 17152 ;; *************** function _I2C_LCD_Puts *****************
 17153 ;; Defined at:
 17154 ;;		line 131 in file "../My_header\My_I2C.h"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 17157 ;;		 -> STR_137(13), STR_136(17), STR_38(16), STR_37(12), 
 17158 ;;		 -> STR_27(2), STR_26(3), STR_25(3), STR_24(3), 
 17159 ;;		 -> STR_23(4), display_LCD@str(10), display_char(40), display_port@onoff(10), 
 17160 ;;		 -> display_port@port_char(120), weekday_3char(28), STR_1(3), display_dec@str(10), 
 17161 ;; Auto vars:     Size  Location     Type
 17162 ;;  ans             2    7[BANK0 ] int 
 17163 ;; Return value:  Size  Location     Type
 17164 ;;		None               void
 17165 ;; Registers used:
 17166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17167 ;; Tracked objects:
 17168 ;;		On entry : 0/0
 17169 ;;		On exit  : 0/0
 17170 ;;		Unchanged: 0/0
 17171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17175 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17176 ;;Total ram usage:        5 bytes
 17177 ;; Hardware stack levels used:    1
 17178 ;; Hardware stack levels required when called:   13
 17179 ;; This function calls:
 17180 ;;		_I2C_Send
 17181 ;;		_I2C_Start
 17182 ;;		_I2C_Stop
 17183 ;; This function is called by:
 17184 ;;		_display_dec
 17185 ;;		_display_time_1602
 17186 ;;		_display_port
 17187 ;;		_display_LCD
 17188 ;;		_bootload
 17189 ;;		_sleep_loop
 17190 ;;		_display_time_0802
 17191 ;; This function uses a non-reentrant model
 17192 ;;
 17193                           
 17194                           	psect	text53
 17195  01623A                     __ptext53:
 17196                           	opt stack 0
 17197  01623A                     _I2C_LCD_Puts:
 17198                           	opt stack 16
 17199                           
 17200                           ;My_header\My_I2C.h: 132: int ans;
 17201                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
 17202                           
 17203                           ;incstack = 0
 17204  01623A  0E00               	movlw	0
 17205  01623C  0100               	movlb	0	; () banked
 17206  01623E  6F62               	movwf	I2C_Start@rw& (0+255),b
 17207  016240  0E3E               	movlw	62
 17208  016242  EC2A  F0B8         	call	_I2C_Start
 17209  016246  0100               	movlb	0	; () banked
 17210  016248  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 17211  01624A  0100               	movlb	0	; () banked
 17212  01624C  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 17213  01624E  0100               	movlb	0	; () banked
 17214  016250  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 17215  016252  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 17216                           
 17217                           ; BSR set to: 0
 17218                           ;My_header\My_I2C.h: 135: if (ans == 0) {
 17219  016254  0100               	movlb	0	; () banked
 17220  016256  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 17221  016258  0100               	movlb	0	; () banked
 17222  01625A  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 17223  01625C  A4D8               	btfss	status,2,c
 17224  01625E  D031               	goto	l10576
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
 17228  016260  0E40               	movlw	64
 17229  016262  ECEA  F0B9         	call	_I2C_Send
 17230                           
 17231                           ;My_header\My_I2C.h: 137: while (*s) {
 17232  016266  D019               	goto	l10574
 17233  016268                     l10568:
 17234                           
 17235                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
 17236  016268  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 17237  01626C  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 17238  016270  0E00               	movlw	low (__mediumconst shr (0+16))
 17239  016272  6EF8               	movwf	tblptru,c
 17240  016274  0E0E               	movlw	(high __ramtop+-1)
 17241  016276  64F7               	cpfsgt	tblptrh,c
 17242  016278  D003               	bra	u12307
 17243  01627A  0008               	tblrd		*
 17244  01627C  50F5               	movf	tablat,w,c
 17245  01627E  D005               	bra	u12300
 17246  016280                     u12307:
 17247  016280  CFF6 FFE1          	movff	tblptrl,fsr1l
 17248  016284  CFF7 FFE2          	movff	tblptrh,fsr1h
 17249  016288  50E7               	movf	indf1,w,c
 17250  01628A                     u12300:
 17251  01628A  ECEA  F0B9         	call	_I2C_Send
 17252  01628E  0100               	movlb	0	; () banked
 17253  016290  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 17254  016292  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 17255                           
 17256                           ; BSR set to: 0
 17257                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
 17258  016294  0E68               	movlw	104
 17259  016296                     u15347:
 17260  016296  2EE8               	decfsz	wreg,f,c
 17261  016298  D7FE               	goto	u15347
 17262  01629A                     l10574:
 17263  01629A  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 17264  01629E  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 17265  0162A2  0E00               	movlw	low (__mediumconst shr (0+16))
 17266  0162A4  6EF8               	movwf	tblptru,c
 17267  0162A6  0E0E               	movlw	(high __ramtop+-1)
 17268  0162A8  64F7               	cpfsgt	tblptrh,c
 17269  0162AA  D003               	bra	u12317
 17270  0162AC  0008               	tblrd		*
 17271  0162AE  50F5               	movf	tablat,w,c
 17272  0162B0  D005               	bra	u12310
 17273  0162B2                     u12317:
 17274  0162B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 17275  0162B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 17276  0162BA  50E7               	movf	indf1,w,c
 17277  0162BC                     u12310:
 17278  0162BC  0900               	iorlw	0
 17279  0162BE  A4D8               	btfss	status,2,c
 17280  0162C0  D7D3               	goto	l10568
 17281  0162C2                     l10576:
 17282                           
 17283                           ;My_header\My_I2C.h: 140: }
 17284                           ;My_header\My_I2C.h: 141: }
 17285                           ;My_header\My_I2C.h: 142: I2C_Stop();
 17286  0162C2  EC25  F0BA         	call	_I2C_Stop	;wreg free
 17287  0162C6  0012               	return		;funcret
 17288  0162C8                     __end_of_I2C_LCD_Puts:
 17289                           	opt stack 0
 17290                           tblptru	equ	0xFF8
 17291                           tblptrh	equ	0xFF7
 17292                           tblptrl	equ	0xFF6
 17293                           tablat	equ	0xFF5
 17294                           prodh	equ	0xFF4
 17295                           prodl	equ	0xFF3
 17296                           intcon	equ	0xFF2
 17297                           postinc0	equ	0xFEE
 17298                           wreg	equ	0xFE8
 17299                           indf1	equ	0xFE7
 17300                           postinc1	equ	0xFE6
 17301                           postdec1	equ	0xFE5
 17302                           fsr1h	equ	0xFE2
 17303                           fsr1l	equ	0xFE1
 17304                           indf2	equ	0xFDF
 17305                           postinc2	equ	0xFDE
 17306                           postdec2	equ	0xFDD
 17307                           plusw2	equ	0xFDB
 17308                           fsr2h	equ	0xFDA
 17309                           fsr2l	equ	0xFD9
 17310                           status	equ	0xFD8
 17311                           
 17312 ;; *************** function _hardware_init *****************
 17313 ;; Defined at:
 17314 ;;		line 84 in file "main.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;		None
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;		None
 17319 ;; Return value:  Size  Location     Type
 17320 ;;		None               void
 17321 ;; Registers used:
 17322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17323 ;; Tracked objects:
 17324 ;;		On entry : 0/0
 17325 ;;		On exit  : 0/0
 17326 ;;		Unchanged: 0/0
 17327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17332 ;;Total ram usage:        0 bytes
 17333 ;; Hardware stack levels used:    1
 17334 ;; Hardware stack levels required when called:   16
 17335 ;; This function calls:
 17336 ;;		_ADC_init
 17337 ;;		_CTMU_init
 17338 ;;		_I2C_LCD_init
 17339 ;;		_I2C_init
 17340 ;;		_RTCC_init
 17341 ;;		_USB_init
 17342 ;;		_ringbuf_init
 17343 ;;		_timer0_init
 17344 ;;		_timer1_init
 17345 ;;		_timer3_init
 17346 ;; This function is called by:
 17347 ;;		_main
 17348 ;; This function uses a non-reentrant model
 17349 ;;
 17350                           
 17351                           	psect	text54
 17352  015C22                     __ptext54:
 17353                           	opt stack 0
 17354  015C22                     _hardware_init:
 17355                           	opt stack 14
 17356                           
 17357                           ;main.c: 85: OSCCONbits.IRCF = 7;
 17358                           
 17359                           ;incstack = 0
 17360  015C22  88D3               	bsf	4051,4,c	;volatile
 17361  015C24  8AD3               	bsf	4051,5,c	;volatile
 17362  015C26  8CD3               	bsf	4051,6,c	;volatile
 17363                           
 17364                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
 17365  015C28  8C9B               	bsf	3995,6,c	;volatile
 17366                           
 17367                           ;main.c: 87: OSCCONbits.SCS = 0;
 17368  015C2A  0EFC               	movlw	-4
 17369  015C2C  16D3               	andwf	4051,f,c	;volatile
 17370                           
 17371                           ;main.c: 88: TRISA = 0b00011111;
 17372  015C2E  0E1F               	movlw	31
 17373  015C30  6E92               	movwf	3986,c	;volatile
 17374                           
 17375                           ;main.c: 89: TRISB = 0b00111111;
 17376  015C32  0E3F               	movlw	63
 17377  015C34  6E93               	movwf	3987,c	;volatile
 17378                           
 17379                           ;main.c: 90: TRISC = 0b10110010;
 17380  015C36  0EB2               	movlw	178
 17381  015C38  6E94               	movwf	3988,c	;volatile
 17382                           
 17383                           ;main.c: 91: ANCON0 = 0b11110000;
 17384  015C3A  0EF0               	movlw	240
 17385  015C3C  010F               	movlb	15	; () banked
 17386  015C3E  6F48               	movwf	72,b	;volatile
 17387                           
 17388                           ;main.c: 92: ANCON1 = 0b00001000;
 17389  015C40  0E08               	movlw	8
 17390  015C42  010F               	movlb	15	; () banked
 17391  015C44  6F49               	movwf	73,b	;volatile
 17392                           
 17393                           ; BSR set to: 15
 17394                           ;main.c: 93: INTCON2bits.RBPU = 0;
 17395  015C46  9EF1               	bcf	intcon2,7,c	;volatile
 17396                           
 17397                           ; BSR set to: 15
 17398                           ;main.c: 95: timer0_init(0);
 17399  015C48  0E00               	movlw	0
 17400  015C4A  EC34  F0B7         	call	_timer0_init
 17401                           
 17402                           ;main.c: 96: timer1_init(0, 2);
 17403  015C4E  0E02               	movlw	2
 17404  015C50  0100               	movlb	0	; () banked
 17405  015C52  6F60               	movwf	timer1_init@clock_select& (0+255),b
 17406  015C54  0E00               	movlw	0
 17407  015C56  EC42  F0B6         	call	_timer1_init
 17408                           
 17409                           ;main.c: 97: timer3_init(2);
 17410  015C5A  0E02               	movlw	2
 17411  015C5C  ECB3  F0B8         	call	_timer3_init
 17412                           
 17413                           ;main.c: 98: I2C_init();
 17414  015C60  EC0A  F0BA         	call	_I2C_init	;wreg free
 17415                           
 17416                           ;main.c: 99: I2C_LCD_init();
 17417  015C64  EC97  F0B5         	call	_I2C_LCD_init	;wreg free
 17418                           
 17419                           ;main.c: 100: RTCC_init();
 17420  015C68  EC59  F0B8         	call	_RTCC_init	;wreg free
 17421                           
 17422                           ;main.c: 101: ADC_init(0);
 17423  015C6C  0E00               	movlw	0
 17424  015C6E  EC90  F0B9         	call	_ADC_init
 17425                           
 17426                           ;main.c: 102: CTMU_init();
 17427  015C72  EC34  F0B9         	call	_CTMU_init	;wreg free
 17428                           
 17429                           ;main.c: 104: USB_init();
 17430  015C76  EC20  F0BA         	call	_USB_init	;wreg free
 17431                           
 17432                           ;main.c: 105: static uint8_t usbtx[2000];
 17433                           ;main.c: 106: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 17434  015C7A  0E6E               	movlw	low _usb_tx
 17435  015C7C  0100               	movlb	0	; () banked
 17436  015C7E  6F60               	movwf	ringbuf_init@rb& (0+255),b
 17437  015C80  0E01               	movlw	high _usb_tx
 17438  015C82  0100               	movlb	0	; () banked
 17439  015C84  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 17440  015C86  0E69               	movlw	low hardware_init@usbtx
 17441  015C88  0100               	movlb	0	; () banked
 17442  015C8A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 17443  015C8C  0E04               	movlw	high hardware_init@usbtx
 17444  015C8E  0100               	movlb	0	; () banked
 17445  015C90  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 17446  015C92  0E07               	movlw	7
 17447  015C94  0100               	movlb	0	; () banked
 17448  015C96  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 17449  015C98  0ED0               	movlw	208
 17450  015C9A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 17451  015C9C  ECEF  F0B5         	call	_ringbuf_init	;wreg free
 17452                           
 17453                           ;main.c: 107: static uint8_t usbrx[100];
 17454                           ;main.c: 108: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 17455  015CA0  0EE2               	movlw	low _usb_rx
 17456  015CA2  0100               	movlb	0	; () banked
 17457  015CA4  6F60               	movwf	ringbuf_init@rb& (0+255),b
 17458  015CA6  0E02               	movlw	high _usb_rx
 17459  015CA8  0100               	movlb	0	; () banked
 17460  015CAA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 17461  015CAC  0E00               	movlw	low hardware_init@usbrx
 17462  015CAE  0100               	movlb	0	; () banked
 17463  015CB0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 17464  015CB2  0E03               	movlw	high hardware_init@usbrx
 17465  015CB4  0100               	movlb	0	; () banked
 17466  015CB6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 17467  015CB8  0E00               	movlw	0
 17468  015CBA  0100               	movlb	0	; () banked
 17469  015CBC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 17470  015CBE  0E64               	movlw	100
 17471  015CC0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 17472  015CC2  ECEF  F0B5         	call	_ringbuf_init	;wreg free
 17473  015CC6  0012               	return		;funcret
 17474  015CC8                     __end_of_hardware_init:
 17475                           	opt stack 0
 17476                           tblptru	equ	0xFF8
 17477                           tblptrh	equ	0xFF7
 17478                           tblptrl	equ	0xFF6
 17479                           tablat	equ	0xFF5
 17480                           prodh	equ	0xFF4
 17481                           prodl	equ	0xFF3
 17482                           intcon	equ	0xFF2
 17483                           intcon2	equ	0xFF1
 17484                           postinc0	equ	0xFEE
 17485                           wreg	equ	0xFE8
 17486                           indf1	equ	0xFE7
 17487                           postinc1	equ	0xFE6
 17488                           postdec1	equ	0xFE5
 17489                           fsr1h	equ	0xFE2
 17490                           fsr1l	equ	0xFE1
 17491                           indf2	equ	0xFDF
 17492                           postinc2	equ	0xFDE
 17493                           postdec2	equ	0xFDD
 17494                           plusw2	equ	0xFDB
 17495                           fsr2h	equ	0xFDA
 17496                           fsr2l	equ	0xFD9
 17497                           status	equ	0xFD8
 17498                           
 17499 ;; *************** function _timer3_init *****************
 17500 ;; Defined at:
 17501 ;;		line 85 in file "../My_header\My_header.h"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;  prescaler       1    wreg     unsigned char 
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;  prescaler       1    1[BANK0 ] unsigned char 
 17506 ;; Return value:  Size  Location     Type
 17507 ;;		None               void
 17508 ;; Registers used:
 17509 ;;		wreg, status,2, status,0
 17510 ;; Tracked objects:
 17511 ;;		On entry : 0/0
 17512 ;;		On exit  : 0/0
 17513 ;;		Unchanged: 0/0
 17514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;Total ram usage:        2 bytes
 17520 ;; Hardware stack levels used:    1
 17521 ;; Hardware stack levels required when called:   11
 17522 ;; This function calls:
 17523 ;;		Nothing
 17524 ;; This function is called by:
 17525 ;;		_hardware_init
 17526 ;; This function uses a non-reentrant model
 17527 ;;
 17528                           
 17529                           	psect	text55
 17530  017166                     __ptext55:
 17531                           	opt stack 0
 17532  017166                     _timer3_init:
 17533                           	opt stack 18
 17534                           
 17535                           ;incstack = 0
 17536                           ;timer3_init@prescaler stored from wreg
 17537  017166  0100               	movlb	0	; () banked
 17538  017168  6F61               	movwf	timer3_init@prescaler& (0+255),b
 17539                           
 17540                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 17541  01716A  0E3F               	movlw	-193
 17542  01716C  1679               	andwf	3961,f,c	;volatile
 17543                           
 17544                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 17545  01716E  9679               	bcf	3961,3,c	;volatile
 17546                           
 17547                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 17548  017170  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 17549  017174  0100               	movlb	0	; () banked
 17550  017176  3B60               	swapf	??_timer3_init& (0+255),f,b
 17551  017178  5079               	movf	3961,w,c	;volatile
 17552  01717A  0100               	movlb	0	; () banked
 17553  01717C  1960               	xorwf	??_timer3_init& (0+255),w,b
 17554  01717E  0BCF               	andlw	-49
 17555  017180  1960               	xorwf	??_timer3_init& (0+255),w,b
 17556  017182  6E79               	movwf	3961,c	;volatile
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 17560  017184  9E79               	bcf	3961,7,c	;volatile
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 17564  017186  8079               	bsf	3961,0,c	;volatile
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 17568  017188  92A2               	bcf	4002,1,c	;volatile
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 17572  01718A  92A1               	bcf	4001,1,c	;volatile
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 17576  01718C  82A0               	bsf	4000,1,c	;volatile
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 17580  01718E  8CF2               	bsf	intcon,6,c	;volatile
 17581                           
 17582                           ; BSR set to: 0
 17583  017190  0012               	return		;funcret
 17584  017192                     __end_of_timer3_init:
 17585                           	opt stack 0
 17586                           tblptru	equ	0xFF8
 17587                           tblptrh	equ	0xFF7
 17588                           tblptrl	equ	0xFF6
 17589                           tablat	equ	0xFF5
 17590                           prodh	equ	0xFF4
 17591                           prodl	equ	0xFF3
 17592                           intcon	equ	0xFF2
 17593                           intcon2	equ	0xFF1
 17594                           postinc0	equ	0xFEE
 17595                           wreg	equ	0xFE8
 17596                           indf1	equ	0xFE7
 17597                           postinc1	equ	0xFE6
 17598                           postdec1	equ	0xFE5
 17599                           fsr1h	equ	0xFE2
 17600                           fsr1l	equ	0xFE1
 17601                           indf2	equ	0xFDF
 17602                           postinc2	equ	0xFDE
 17603                           postdec2	equ	0xFDD
 17604                           plusw2	equ	0xFDB
 17605                           fsr2h	equ	0xFDA
 17606                           fsr2l	equ	0xFD9
 17607                           status	equ	0xFD8
 17608                           
 17609 ;; *************** function _timer1_init *****************
 17610 ;; Defined at:
 17611 ;;		line 54 in file "../My_header\My_header.h"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;  prescaler       1    wreg     unsigned char 
 17614 ;;  clock_select    1    0[BANK0 ] unsigned char 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  prescaler       1    2[BANK0 ] unsigned char 
 17617 ;; Return value:  Size  Location     Type
 17618 ;;		None               void
 17619 ;; Registers used:
 17620 ;;		wreg, status,2, status,0
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17626 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17629 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17630 ;;Total ram usage:        3 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:   11
 17633 ;; This function calls:
 17634 ;;		Nothing
 17635 ;; This function is called by:
 17636 ;;		_hardware_init
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           	psect	text56
 17641  016C84                     __ptext56:
 17642                           	opt stack 0
 17643  016C84                     _timer1_init:
 17644                           	opt stack 18
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;incstack = 0
 17648                           ;timer1_init@prescaler stored from wreg
 17649  016C84  0100               	movlb	0	; () banked
 17650  016C86  6F62               	movwf	timer1_init@prescaler& (0+255),b
 17651                           
 17652                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 17653  016C88  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 17654  016C8C  0100               	movlb	0	; () banked
 17655  016C8E  3B61               	swapf	??_timer1_init& (0+255),f,b
 17656  016C90  4761               	rlncf	??_timer1_init& (0+255),f,b
 17657  016C92  4761               	rlncf	??_timer1_init& (0+255),f,b
 17658  016C94  50CD               	movf	4045,w,c	;volatile
 17659  016C96  0100               	movlb	0	; () banked
 17660  016C98  1961               	xorwf	??_timer1_init& (0+255),w,b
 17661  016C9A  0B3F               	andlw	-193
 17662  016C9C  1961               	xorwf	??_timer1_init& (0+255),w,b
 17663  016C9E  6ECD               	movwf	4045,c	;volatile
 17664                           
 17665                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 17666  016CA0  0E02               	movlw	2
 17667  016CA2  0100               	movlb	0	; () banked
 17668  016CA4  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 17669  016CA6  A4D8               	btfss	status,2,c
 17670  016CA8  D002               	goto	l728
 17671                           
 17672                           ; BSR set to: 0
 17673  016CAA  86CD               	bsf	4045,3,c	;volatile
 17674  016CAC  D001               	goto	l11412
 17675  016CAE                     l728:
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 17679  016CAE  96CD               	bcf	4045,3,c	;volatile
 17680  016CB0                     l11412:
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 17684  016CB0  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 17685  016CB4  0100               	movlb	0	; () banked
 17686  016CB6  3B61               	swapf	??_timer1_init& (0+255),f,b
 17687  016CB8  50CD               	movf	4045,w,c	;volatile
 17688  016CBA  0100               	movlb	0	; () banked
 17689  016CBC  1961               	xorwf	??_timer1_init& (0+255),w,b
 17690  016CBE  0BCF               	andlw	-49
 17691  016CC0  1961               	xorwf	??_timer1_init& (0+255),w,b
 17692  016CC2  6ECD               	movwf	4045,c	;volatile
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 17696  016CC4  84CD               	bsf	4045,2,c	;volatile
 17697                           
 17698                           ; BSR set to: 0
 17699                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 17700  016CC6  92CD               	bcf	4045,1,c	;volatile
 17701                           
 17702                           ; BSR set to: 0
 17703                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 17704  016CC8  80CD               	bsf	4045,0,c	;volatile
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 17708  016CCA  909F               	bcf	3999,0,c	;volatile
 17709                           
 17710                           ; BSR set to: 0
 17711                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 17712  016CCC  909E               	bcf	3998,0,c	;volatile
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 17716  016CCE  809D               	bsf	3997,0,c	;volatile
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 17720  016CD0  8CF2               	bsf	intcon,6,c	;volatile
 17721                           
 17722                           ; BSR set to: 0
 17723  016CD2  0012               	return		;funcret
 17724  016CD4                     __end_of_timer1_init:
 17725                           	opt stack 0
 17726                           tblptru	equ	0xFF8
 17727                           tblptrh	equ	0xFF7
 17728                           tblptrl	equ	0xFF6
 17729                           tablat	equ	0xFF5
 17730                           prodh	equ	0xFF4
 17731                           prodl	equ	0xFF3
 17732                           intcon	equ	0xFF2
 17733                           intcon2	equ	0xFF1
 17734                           postinc0	equ	0xFEE
 17735                           wreg	equ	0xFE8
 17736                           indf1	equ	0xFE7
 17737                           postinc1	equ	0xFE6
 17738                           postdec1	equ	0xFE5
 17739                           fsr1h	equ	0xFE2
 17740                           fsr1l	equ	0xFE1
 17741                           indf2	equ	0xFDF
 17742                           postinc2	equ	0xFDE
 17743                           postdec2	equ	0xFDD
 17744                           plusw2	equ	0xFDB
 17745                           fsr2h	equ	0xFDA
 17746                           fsr2l	equ	0xFD9
 17747                           status	equ	0xFD8
 17748                           
 17749 ;; *************** function _timer0_init *****************
 17750 ;; Defined at:
 17751 ;;		line 15 in file "../My_header\My_header.h"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  prescaler       1    wreg     unsigned char 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  prescaler       1    1[BANK0 ] unsigned char 
 17756 ;; Return value:  Size  Location     Type
 17757 ;;		None               void
 17758 ;; Registers used:
 17759 ;;		wreg, status,2, status,0
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17768 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17769 ;;Total ram usage:        2 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; Hardware stack levels required when called:   11
 17772 ;; This function calls:
 17773 ;;		Nothing
 17774 ;; This function is called by:
 17775 ;;		_hardware_init
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           	psect	text57
 17780  016E68                     __ptext57:
 17781                           	opt stack 0
 17782  016E68                     _timer0_init:
 17783                           	opt stack 18
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;incstack = 0
 17787                           ;timer0_init@prescaler stored from wreg
 17788  016E68  0100               	movlb	0	; () banked
 17789  016E6A  6F61               	movwf	timer0_init@prescaler& (0+255),b
 17790                           
 17791                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 17792  016E6C  8ED5               	bsf	4053,7,c	;volatile
 17793                           
 17794                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 17795  016E6E  8CD5               	bsf	4053,6,c	;volatile
 17796                           
 17797                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 17798  016E70  9AD5               	bcf	4053,5,c	;volatile
 17799                           
 17800                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 17801  016E72  0100               	movlb	0	; () banked
 17802  016E74  5161               	movf	timer0_init@prescaler& (0+255),w,b
 17803  016E76  0100               	movlb	0	; () banked
 17804  016E78  A4D8               	btfss	status,2,c
 17805  016E7A  D002               	goto	l723
 17806                           
 17807                           ; BSR set to: 0
 17808                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 17809  016E7C  86D5               	bsf	4053,3,c	;volatile
 17810                           
 17811                           ;My_header\My_header.h: 21: } else {
 17812  016E7E  D00C               	goto	l11400
 17813  016E80                     l723:
 17814                           
 17815                           ; BSR set to: 0
 17816                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 17817  016E80  96D5               	bcf	4053,3,c	;volatile
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 17821  016E82  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 17822  016E86  0EFF               	movlw	255
 17823  016E88  0100               	movlb	0	; () banked
 17824  016E8A  2760               	addwf	??_timer0_init& (0+255),f,b
 17825  016E8C  50D5               	movf	4053,w,c	;volatile
 17826  016E8E  0100               	movlb	0	; () banked
 17827  016E90  1960               	xorwf	??_timer0_init& (0+255),w,b
 17828  016E92  0BF8               	andlw	-8
 17829  016E94  1960               	xorwf	??_timer0_init& (0+255),w,b
 17830  016E96  6ED5               	movwf	4053,c	;volatile
 17831  016E98                     l11400:
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;My_header\My_header.h: 24: }
 17835                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 17836  016E98  8AF2               	bsf	intcon,5,c	;volatile
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 17840  016E9A  94F2               	bcf	intcon,2,c	;volatile
 17841                           
 17842                           ; BSR set to: 0
 17843                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 17844  016E9C  94F1               	bcf	intcon2,2,c	;volatile
 17845                           
 17846                           ; BSR set to: 0
 17847                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 17848  016E9E  8CF2               	bsf	intcon,6,c	;volatile
 17849                           
 17850                           ; BSR set to: 0
 17851  016EA0  0012               	return		;funcret
 17852  016EA2                     __end_of_timer0_init:
 17853                           	opt stack 0
 17854                           tblptru	equ	0xFF8
 17855                           tblptrh	equ	0xFF7
 17856                           tblptrl	equ	0xFF6
 17857                           tablat	equ	0xFF5
 17858                           prodh	equ	0xFF4
 17859                           prodl	equ	0xFF3
 17860                           intcon	equ	0xFF2
 17861                           intcon2	equ	0xFF1
 17862                           postinc0	equ	0xFEE
 17863                           wreg	equ	0xFE8
 17864                           indf1	equ	0xFE7
 17865                           postinc1	equ	0xFE6
 17866                           postdec1	equ	0xFE5
 17867                           fsr1h	equ	0xFE2
 17868                           fsr1l	equ	0xFE1
 17869                           indf2	equ	0xFDF
 17870                           postinc2	equ	0xFDE
 17871                           postdec2	equ	0xFDD
 17872                           plusw2	equ	0xFDB
 17873                           fsr2h	equ	0xFDA
 17874                           fsr2l	equ	0xFD9
 17875                           status	equ	0xFD8
 17876                           
 17877 ;; *************** function _ringbuf_init *****************
 17878 ;; Defined at:
 17879 ;;		line 24 in file "../My_header\My_ringbuf.h"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17882 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), 
 17883 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17884 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(2000), my_terminal_loop@buf(100), 
 17885 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;		None
 17888 ;; Return value:  Size  Location     Type
 17889 ;;		None               void
 17890 ;; Registers used:
 17891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17897 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17900 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;Total ram usage:        6 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:   11
 17904 ;; This function calls:
 17905 ;;		Nothing
 17906 ;; This function is called by:
 17907 ;;		_my_terminal_loop
 17908 ;;		_hardware_init
 17909 ;; This function uses a non-reentrant model
 17910 ;;
 17911                           
 17912                           	psect	text58
 17913  016BDE                     __ptext58:
 17914                           	opt stack 0
 17915  016BDE                     _ringbuf_init:
 17916                           	opt stack 18
 17917                           
 17918                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;incstack = 0
 17922  016BDE  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17923  016BE2  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17924  016BE6  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17925  016BEA  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17926                           
 17927                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 17928  016BEE  0100               	movlb	0	; () banked
 17929  016BF0  EE20 F002          	lfsr	2,2
 17930  016BF4  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17931  016BF6  26D9               	addwf	fsr2l,f,c
 17932  016BF8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17933  016BFA  22DA               	addwfc	fsr2h,f,c
 17934  016BFC  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17935  016C00  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17936                           
 17937                           ; BSR set to: 0
 17938                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 17939  016C04  0100               	movlb	0	; () banked
 17940  016C06  EE20 F004          	lfsr	2,4
 17941  016C0A  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17942  016C0C  26D9               	addwf	fsr2l,f,c
 17943  016C0E  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17944  016C10  22DA               	addwfc	fsr2h,f,c
 17945  016C12  0E00               	movlw	0
 17946  016C14  6EDE               	movwf	postinc2,c
 17947  016C16  0E00               	movlw	0
 17948  016C18  6EDD               	movwf	postdec2,c
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 17952  016C1A  0100               	movlb	0	; () banked
 17953  016C1C  EE20 F006          	lfsr	2,6
 17954  016C20  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17955  016C22  26D9               	addwf	fsr2l,f,c
 17956  016C24  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17957  016C26  22DA               	addwfc	fsr2h,f,c
 17958  016C28  0E00               	movlw	0
 17959  016C2A  6EDE               	movwf	postinc2,c
 17960  016C2C  0E00               	movlw	0
 17961  016C2E  6EDD               	movwf	postdec2,c
 17962                           
 17963                           ; BSR set to: 0
 17964  016C30  0012               	return		;funcret
 17965  016C32                     __end_of_ringbuf_init:
 17966                           	opt stack 0
 17967                           tblptru	equ	0xFF8
 17968                           tblptrh	equ	0xFF7
 17969                           tblptrl	equ	0xFF6
 17970                           tablat	equ	0xFF5
 17971                           prodh	equ	0xFF4
 17972                           prodl	equ	0xFF3
 17973                           intcon	equ	0xFF2
 17974                           intcon2	equ	0xFF1
 17975                           postinc0	equ	0xFEE
 17976                           wreg	equ	0xFE8
 17977                           indf1	equ	0xFE7
 17978                           postinc1	equ	0xFE6
 17979                           postdec1	equ	0xFE5
 17980                           fsr1h	equ	0xFE2
 17981                           fsr1l	equ	0xFE1
 17982                           indf2	equ	0xFDF
 17983                           postinc2	equ	0xFDE
 17984                           postdec2	equ	0xFDD
 17985                           plusw2	equ	0xFDB
 17986                           fsr2h	equ	0xFDA
 17987                           fsr2l	equ	0xFD9
 17988                           status	equ	0xFD8
 17989                           
 17990 ;; *************** function _USB_init *****************
 17991 ;; Defined at:
 17992 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;		None
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;		None
 17997 ;; Return value:  Size  Location     Type
 17998 ;;		None               void
 17999 ;; Registers used:
 18000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18001 ;; Tracked objects:
 18002 ;;		On entry : 0/0
 18003 ;;		On exit  : 0/0
 18004 ;;		Unchanged: 0/0
 18005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18010 ;;Total ram usage:        0 bytes
 18011 ;; Hardware stack levels used:    1
 18012 ;; Hardware stack levels required when called:   13
 18013 ;; This function calls:
 18014 ;;		_USBDeviceAttach
 18015 ;;		_USBDeviceInit
 18016 ;; This function is called by:
 18017 ;;		_hardware_init
 18018 ;; This function uses a non-reentrant model
 18019 ;;
 18020                           
 18021                           	psect	text59
 18022  017440                     __ptext59:
 18023                           	opt stack 0
 18024  017440                     _USB_init:
 18025                           	opt stack 16
 18026                           
 18027                           ;My_usb_cdc.c: 8: USBDeviceInit();
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;incstack = 0
 18031  017440  ECED  F09B         	call	_USBDeviceInit	;wreg free
 18032                           
 18033                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 18034  017444  EC89  F0B7         	call	_USBDeviceAttach	;wreg free
 18035  017448  0012               	return		;funcret
 18036  01744A                     __end_of_USB_init:
 18037                           	opt stack 0
 18038                           tblptru	equ	0xFF8
 18039                           tblptrh	equ	0xFF7
 18040                           tblptrl	equ	0xFF6
 18041                           tablat	equ	0xFF5
 18042                           prodh	equ	0xFF4
 18043                           prodl	equ	0xFF3
 18044                           intcon	equ	0xFF2
 18045                           intcon2	equ	0xFF1
 18046                           postinc0	equ	0xFEE
 18047                           wreg	equ	0xFE8
 18048                           indf1	equ	0xFE7
 18049                           postinc1	equ	0xFE6
 18050                           postdec1	equ	0xFE5
 18051                           fsr1h	equ	0xFE2
 18052                           fsr1l	equ	0xFE1
 18053                           indf2	equ	0xFDF
 18054                           postinc2	equ	0xFDE
 18055                           postdec2	equ	0xFDD
 18056                           plusw2	equ	0xFDB
 18057                           fsr2h	equ	0xFDA
 18058                           fsr2l	equ	0xFD9
 18059                           status	equ	0xFD8
 18060                           
 18061 ;; *************** function _USBDeviceInit *****************
 18062 ;; Defined at:
 18063 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 18064 ;; Parameters:    Size  Location     Type
 18065 ;;		None
 18066 ;; Auto vars:     Size  Location     Type
 18067 ;;  i               1    8[BANK0 ] unsigned char 
 18068 ;; Return value:  Size  Location     Type
 18069 ;;		None               void
 18070 ;; Registers used:
 18071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18072 ;; Tracked objects:
 18073 ;;		On entry : 0/0
 18074 ;;		On exit  : 0/0
 18075 ;;		Unchanged: 0/0
 18076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18080 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18081 ;;Total ram usage:        1 bytes
 18082 ;; Hardware stack levels used:    1
 18083 ;; Hardware stack levels required when called:   12
 18084 ;; This function calls:
 18085 ;;		_memset
 18086 ;; This function is called by:
 18087 ;;		_USB_init
 18088 ;; This function uses a non-reentrant model
 18089 ;;
 18090                           
 18091                           	psect	text60
 18092  0137DA                     __ptext60:
 18093                           	opt stack 0
 18094  0137DA                     _USBDeviceInit:
 18095                           	opt stack 16
 18096                           
 18097                           ;usb_device.c: 300: uint8_t i;
 18098                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 18099                           
 18100                           ;incstack = 0
 18101  0137DA  98A0               	bcf	4000,4,c	;volatile
 18102                           
 18103                           ;usb_device.c: 305: {UEIR = 0;};
 18104  0137DC  0E00               	movlw	0
 18105  0137DE  6E63               	movwf	3939,c	;volatile
 18106                           
 18107                           ;usb_device.c: 308: {UIR = 0;};
 18108  0137E0  0E00               	movlw	0
 18109  0137E2  6E62               	movwf	3938,c	;volatile
 18110                           
 18111                           ;usb_device.c: 311: UEP0 = 0;
 18112  0137E4  0E00               	movlw	0
 18113  0137E6  010F               	movlb	15	; () banked
 18114  0137E8  6F26               	movwf	38,b	;volatile
 18115                           
 18116                           ; BSR set to: 15
 18117                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 18118  0137EA  0E27               	movlw	39
 18119  0137EC  0100               	movlb	0	; () banked
 18120  0137EE  6F60               	movwf	memset@p1& (0+255),b
 18121  0137F0  0E0F               	movlw	15
 18122  0137F2  0100               	movlb	0	; () banked
 18123  0137F4  6F61               	movwf	(memset@p1+1)& (0+255),b
 18124  0137F6  0E00               	movlw	0
 18125  0137F8  0100               	movlb	0	; () banked
 18126  0137FA  6F63               	movwf	(memset@c+1)& (0+255),b
 18127  0137FC  0E00               	movlw	0
 18128  0137FE  6F62               	movwf	memset@c& (0+255),b
 18129  013800  0E00               	movlw	0
 18130  013802  0100               	movlb	0	; () banked
 18131  013804  6F65               	movwf	(memset@n+1)& (0+255),b
 18132  013806  0E02               	movlw	2
 18133  013808  6F64               	movwf	memset@n& (0+255),b
 18134  01380A  ECF7  F0B7         	call	_memset	;wreg free
 18135                           
 18136                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18137  01380E  0E16               	movlw	22
 18138  013810  010F               	movlb	15	; () banked
 18139  013812  6F39               	movwf	57,b	;volatile
 18140                           
 18141                           ; BSR set to: 15
 18142  013814  0E9F               	movlw	159
 18143  013816  010F               	movlb	15	; () banked
 18144  013818  6F37               	movwf	55,b	;volatile
 18145                           
 18146                           ; BSR set to: 15
 18147  01381A  0E7B               	movlw	123
 18148  01381C  010F               	movlb	15	; () banked
 18149  01381E  6F36               	movwf	54,b	;volatile
 18150                           
 18151                           ; BSR set to: 15
 18152                           ;usb_device.c: 318: ;
 18153                           ;usb_device.c: 321: ;
 18154                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 18155  013820  0E00               	movlw	0
 18156  013822  0100               	movlb	0	; () banked
 18157  013824  6F68               	movwf	USBDeviceInit@i& (0+255),b
 18158  013826                     l10786:
 18159                           
 18160                           ; BSR set to: 0
 18161  013826  0E0B               	movlw	11
 18162  013828  0100               	movlb	0	; () banked
 18163  01382A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 18164  01382C  D001               	goto	l10790
 18165  01382E  D010               	goto	l132
 18166  013830                     l10790:
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;usb_device.c: 325: {
 18170                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 18171  013830  0100               	movlb	0	; () banked
 18172  013832  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18173  013834  0D04               	mullw	4
 18174  013836  0E00               	movlw	0
 18175  013838  24F3               	addwf	prodl,w,c
 18176  01383A  6ED9               	movwf	fsr2l,c
 18177  01383C  0E0D               	movlw	13
 18178  01383E  20F4               	addwfc	prodh,w,c
 18179  013840  6EDA               	movwf	fsr2h,c
 18180  013842  6ADE               	clrf	postinc2,c
 18181  013844  6ADE               	clrf	postinc2,c
 18182  013846  6ADE               	clrf	postinc2,c
 18183  013848  6ADD               	clrf	postdec2,c
 18184                           
 18185                           ; BSR set to: 0
 18186  01384A  0100               	movlb	0	; () banked
 18187  01384C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 18188  01384E  D7EB               	goto	l10786
 18189  013850                     l132:
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;usb_device.c: 327: }
 18193                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 18194  013850  8C65               	bsf	3941,6,c	;volatile
 18195                           
 18196                           ; BSR set to: 0
 18197                           ;usb_device.c: 333: UADDR = 0x00;
 18198  013852  0E00               	movlw	0
 18199  013854  010F               	movlb	15	; () banked
 18200  013856  6F38               	movwf	56,b	;volatile
 18201                           
 18202                           ; BSR set to: 15
 18203                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 18204  013858  9865               	bcf	3941,4,c	;volatile
 18205                           
 18206                           ; BSR set to: 15
 18207                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 18208  01385A  9C65               	bcf	3941,6,c	;volatile
 18209                           
 18210                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 18211  01385C  D00A               	goto	l10810
 18212  01385E                     l10802:
 18213                           
 18214                           ;usb_device.c: 343: {
 18215                           ;usb_device.c: 344: (UIR &= 0xF7);
 18216  01385E  9662               	bcf	3938,3,c	;volatile
 18217                           
 18218                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 18219  013860  0E00               	movlw	0
 18220  013862  0100               	movlb	0	; () banked
 18221  013864  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 18225  013866  0E00               	movlw	0
 18226  013868  6E04               	movwf	_outPipes+3,c	;volatile
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 18230  01386A  0E00               	movlw	0
 18231  01386C  6E06               	movwf	_outPipes+5,c	;volatile
 18232  01386E  0E00               	movlw	0
 18233  013870  6E05               	movwf	_outPipes+4,c	;volatile
 18234  013872                     l10810:
 18235  013872  B662               	btfsc	3938,3,c	;volatile
 18236  013874  D7F4               	goto	l10802
 18237                           
 18238                           ;usb_device.c: 349: }
 18239                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 18240  013876  0E01               	movlw	1
 18241  013878  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18242                           
 18243                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 18244  01387A  0E01               	movlw	1
 18245  01387C  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18246                           
 18247                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 18248  01387E  0E00               	movlw	0
 18249  013880  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 18250                           
 18251                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 18252  013882  0E00               	movlw	0
 18253  013884  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 18254                           
 18255                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 18256  013886  0E00               	movlw	0
 18257  013888  0101               	movlb	1	; () banked
 18258  01388A  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18259                           
 18260                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 18261  01388C  0E00               	movlw	0
 18262  01388E  0100               	movlb	0	; () banked
 18263  013890  6F68               	movwf	USBDeviceInit@i& (0+255),b
 18264  013892                     l10814:
 18265                           
 18266                           ; BSR set to: 0
 18267  013892  0E02               	movlw	2
 18268  013894  0100               	movlb	0	; () banked
 18269  013896  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 18270  013898  D001               	goto	l10818
 18271  01389A  D033               	goto	l10824
 18272  01389C                     l10818:
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;usb_device.c: 363: {
 18276                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 18277  01389C  0100               	movlb	0	; () banked
 18278  01389E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18279  0138A0  0D02               	mullw	2
 18280  0138A2  0EEA               	movlw	low _pBDTEntryIn
 18281  0138A4  24F3               	addwf	prodl,w,c
 18282  0138A6  6ED9               	movwf	fsr2l,c
 18283  0138A8  0E00               	movlw	high _pBDTEntryIn
 18284  0138AA  20F4               	addwfc	prodh,w,c
 18285  0138AC  6EDA               	movwf	fsr2h,c
 18286  0138AE  0E00               	movlw	0
 18287  0138B0  6EDE               	movwf	postinc2,c
 18288  0138B2  0E00               	movlw	0
 18289  0138B4  6EDD               	movwf	postdec2,c
 18290                           
 18291                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 18292  0138B6  0100               	movlb	0	; () banked
 18293  0138B8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18294  0138BA  0D02               	mullw	2
 18295  0138BC  0E00               	movlw	low _pBDTEntryOut
 18296  0138BE  24F3               	addwf	prodl,w,c
 18297  0138C0  6ED9               	movwf	fsr2l,c
 18298  0138C2  0E01               	movlw	high _pBDTEntryOut
 18299  0138C4  20F4               	addwfc	prodh,w,c
 18300  0138C6  6EDA               	movwf	fsr2h,c
 18301  0138C8  0E00               	movlw	0
 18302  0138CA  6EDE               	movwf	postinc2,c
 18303  0138CC  0E00               	movlw	0
 18304  0138CE  6EDD               	movwf	postdec2,c
 18305                           
 18306                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 18307  0138D0  0100               	movlb	0	; () banked
 18308  0138D2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18309  0138D4  0D01               	mullw	1
 18310  0138D6  0E0A               	movlw	low _ep_data_in
 18311  0138D8  24F3               	addwf	prodl,w,c
 18312  0138DA  6ED9               	movwf	fsr2l,c
 18313  0138DC  0E00               	movlw	high _ep_data_in
 18314  0138DE  20F4               	addwfc	prodh,w,c
 18315  0138E0  6EDA               	movwf	fsr2h,c
 18316  0138E2  0E00               	movlw	0
 18317  0138E4  6EDF               	movwf	indf2,c
 18318                           
 18319                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 18320  0138E6  0100               	movlb	0	; () banked
 18321  0138E8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18322  0138EA  0D01               	mullw	1
 18323  0138EC  0E0D               	movlw	low _ep_data_out
 18324  0138EE  24F3               	addwf	prodl,w,c
 18325  0138F0  6ED9               	movwf	fsr2l,c
 18326  0138F2  0E00               	movlw	high _ep_data_out
 18327  0138F4  20F4               	addwfc	prodh,w,c
 18328  0138F6  6EDA               	movwf	fsr2h,c
 18329  0138F8  0E00               	movlw	0
 18330  0138FA  6EDF               	movwf	indf2,c
 18331                           
 18332                           ; BSR set to: 0
 18333  0138FC  0100               	movlb	0	; () banked
 18334  0138FE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 18335  013900  D7C8               	goto	l10814
 18336  013902                     l10824:
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;usb_device.c: 368: }
 18340                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18341  013902  0E08               	movlw	8
 18342  013904  0100               	movlb	0	; () banked
 18343  013906  6FEA               	movwf	_pBDTEntryIn& (0+255),b
 18344  013908  0E0D               	movlw	13
 18345  01390A  0100               	movlb	0	; () banked
 18346  01390C  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 18350  01390E  0E16               	movlw	22
 18351  013910  010F               	movlb	15	; () banked
 18352  013912  6F26               	movwf	38,b	;volatile
 18353                           
 18354                           ; BSR set to: 15
 18355                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 18356  013914  0E0D               	movlw	13
 18357  013916  010D               	movlb	13	; () banked
 18358  013918  6F03               	movwf	3,b	;volatile
 18359  01391A  0E30               	movlw	48
 18360  01391C  6F02               	movwf	2,b	;volatile
 18361                           
 18362                           ; BSR set to: 13
 18363                           ;usb_device.c: 376: BDT[0].CNT = 8;
 18364  01391E  0E08               	movlw	8
 18365  013920  010D               	movlb	13	; () banked
 18366  013922  6F01               	movwf	1,b	;volatile
 18367                           
 18368                           ; BSR set to: 13
 18369                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 18370  013924  0E04               	movlw	4
 18371  013926  010D               	movlb	13	; () banked
 18372  013928  6F00               	movwf	0,b	;volatile
 18373                           
 18374                           ; BSR set to: 13
 18375                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 18376  01392A  010D               	movlb	13	; () banked
 18377  01392C  8F00               	bsf	0,7,b	;volatile
 18378                           
 18379                           ; BSR set to: 13
 18380                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 18381  01392E  0E00               	movlw	0
 18382  013930  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 18383                           
 18384                           ; BSR set to: 13
 18385                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 18386  013932  0E00               	movlw	0
 18387  013934  6E1A               	movwf	_USBDeviceState,c	;volatile
 18388                           
 18389                           ; BSR set to: 13
 18390  013936  0012               	return		;funcret
 18391  013938                     __end_of_USBDeviceInit:
 18392                           	opt stack 0
 18393                           tblptru	equ	0xFF8
 18394                           tblptrh	equ	0xFF7
 18395                           tblptrl	equ	0xFF6
 18396                           tablat	equ	0xFF5
 18397                           prodh	equ	0xFF4
 18398                           prodl	equ	0xFF3
 18399                           intcon	equ	0xFF2
 18400                           intcon2	equ	0xFF1
 18401                           postinc0	equ	0xFEE
 18402                           wreg	equ	0xFE8
 18403                           indf1	equ	0xFE7
 18404                           postinc1	equ	0xFE6
 18405                           postdec1	equ	0xFE5
 18406                           fsr1h	equ	0xFE2
 18407                           fsr1l	equ	0xFE1
 18408                           indf2	equ	0xFDF
 18409                           postinc2	equ	0xFDE
 18410                           postdec2	equ	0xFDD
 18411                           plusw2	equ	0xFDB
 18412                           fsr2h	equ	0xFDA
 18413                           fsr2l	equ	0xFD9
 18414                           status	equ	0xFD8
 18415                           
 18416 ;; *************** function _memset *****************
 18417 ;; Defined at:
 18418 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 18419 ;; Parameters:    Size  Location     Type
 18420 ;;  p1              2    0[BANK0 ] PTR void 
 18421 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18422 ;;  c               2    2[BANK0 ] int 
 18423 ;;  n               2    4[BANK0 ] unsigned int 
 18424 ;; Auto vars:     Size  Location     Type
 18425 ;;  p               2    6[BANK0 ] PTR unsigned char 
 18426 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18427 ;; Return value:  Size  Location     Type
 18428 ;;                  2    0[BANK0 ] PTR void 
 18429 ;; Registers used:
 18430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18431 ;; Tracked objects:
 18432 ;;		On entry : 0/0
 18433 ;;		On exit  : 0/0
 18434 ;;		Unchanged: 0/0
 18435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18436 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18439 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18440 ;;Total ram usage:        8 bytes
 18441 ;; Hardware stack levels used:    1
 18442 ;; Hardware stack levels required when called:   11
 18443 ;; This function calls:
 18444 ;;		Nothing
 18445 ;; This function is called by:
 18446 ;;		_USBDeviceInit
 18447 ;; This function uses a non-reentrant model
 18448 ;;
 18449                           
 18450                           	psect	text61
 18451  016FEE                     __ptext61:
 18452                           	opt stack 0
 18453  016FEE                     _memset:
 18454                           	opt stack 16
 18455                           
 18456                           ; BSR set to: 13
 18457                           ;incstack = 0
 18458  016FEE  C060  F066         	movff	memset@p1,memset@p
 18459  016FF2  C061  F067         	movff	memset@p1+1,memset@p+1
 18460  016FF6  D009               	goto	l10610
 18461  016FF8                     l10606:
 18462  016FF8  C066  FFD9         	movff	memset@p,fsr2l
 18463  016FFC  C067  FFDA         	movff	memset@p+1,fsr2h
 18464  017000  C062  FFDF         	movff	memset@c,indf2
 18465  017004  0100               	movlb	0	; () banked
 18466  017006  4B66               	infsnz	memset@p& (0+255),f,b
 18467  017008  2B67               	incf	(memset@p+1)& (0+255),f,b
 18468  01700A                     l10610:
 18469  01700A  0100               	movlb	0	; () banked
 18470  01700C  0764               	decf	memset@n& (0+255),f,b
 18471  01700E  A0D8               	btfss	status,0,c
 18472  017010  0765               	decf	(memset@n+1)& (0+255),f,b
 18473  017012  0100               	movlb	0	; () banked
 18474  017014  2964               	incf	memset@n& (0+255),w,b
 18475  017016  E1F0               	bnz	l10606
 18476  017018  0100               	movlb	0	; () banked
 18477  01701A  2965               	incf	(memset@n+1)& (0+255),w,b
 18478  01701C  B4D8               	btfsc	status,2,c
 18479  01701E  0012               	return	
 18480  017020  D7EB               	goto	l10606
 18481  017022                     __end_of_memset:
 18482                           	opt stack 0
 18483                           tblptru	equ	0xFF8
 18484                           tblptrh	equ	0xFF7
 18485                           tblptrl	equ	0xFF6
 18486                           tablat	equ	0xFF5
 18487                           prodh	equ	0xFF4
 18488                           prodl	equ	0xFF3
 18489                           intcon	equ	0xFF2
 18490                           intcon2	equ	0xFF1
 18491                           postinc0	equ	0xFEE
 18492                           wreg	equ	0xFE8
 18493                           indf1	equ	0xFE7
 18494                           postinc1	equ	0xFE6
 18495                           postdec1	equ	0xFE5
 18496                           fsr1h	equ	0xFE2
 18497                           fsr1l	equ	0xFE1
 18498                           indf2	equ	0xFDF
 18499                           postinc2	equ	0xFDE
 18500                           postdec2	equ	0xFDD
 18501                           plusw2	equ	0xFDB
 18502                           fsr2h	equ	0xFDA
 18503                           fsr2l	equ	0xFD9
 18504                           status	equ	0xFD8
 18505                           
 18506 ;; *************** function _USBDeviceAttach *****************
 18507 ;; Defined at:
 18508 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 18509 ;; Parameters:    Size  Location     Type
 18510 ;;		None
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;		None
 18513 ;; Return value:  Size  Location     Type
 18514 ;;		None               void
 18515 ;; Registers used:
 18516 ;;		wreg, status,2
 18517 ;; Tracked objects:
 18518 ;;		On entry : 0/0
 18519 ;;		On exit  : 0/0
 18520 ;;		Unchanged: 0/0
 18521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;Total ram usage:        0 bytes
 18527 ;; Hardware stack levels used:    1
 18528 ;; Hardware stack levels required when called:   11
 18529 ;; This function calls:
 18530 ;;		Nothing
 18531 ;; This function is called by:
 18532 ;;		_USB_init
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           	psect	text62
 18537  016F12                     __ptext62:
 18538                           	opt stack 0
 18539  016F12                     _USBDeviceAttach:
 18540                           	opt stack 17
 18541                           
 18542                           ;usb_device.c: 1356: {
 18543                           ;usb_device.c: 1357: if(1 == 1)
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;incstack = 0
 18547  016F12  501A               	movf	_USBDeviceState,w,c	;volatile
 18548  016F14  A4D8               	btfss	status,2,c
 18549  016F16  0012               	return	
 18550                           
 18551                           ;usb_device.c: 1358: {
 18552                           ;usb_device.c: 1360: UCON = 0;
 18553  016F18  0E00               	movlw	0
 18554  016F1A  6E65               	movwf	3941,c	;volatile
 18555                           
 18556                           ;usb_device.c: 1363: UIE = 0;
 18557  016F1C  0E00               	movlw	0
 18558  016F1E  010F               	movlb	15	; () banked
 18559  016F20  6F36               	movwf	54,b	;volatile
 18560                           
 18561                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 18562  016F22  0E16               	movlw	22
 18563  016F24  010F               	movlb	15	; () banked
 18564  016F26  6F39               	movwf	57,b	;volatile
 18565  016F28  0E9F               	movlw	159
 18566  016F2A  010F               	movlb	15	; () banked
 18567  016F2C  6F37               	movwf	55,b	;volatile
 18568  016F2E  0E7B               	movlw	123
 18569  016F30  010F               	movlb	15	; () banked
 18570  016F32  6F36               	movwf	54,b	;volatile
 18571                           
 18572                           ; BSR set to: 15
 18573                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 18574  016F34  8ED0               	bsf	4048,7,c	;volatile
 18575                           
 18576                           ; BSR set to: 15
 18577  016F36  88A2               	bsf	4002,4,c	;volatile
 18578                           
 18579                           ; BSR set to: 15
 18580  016F38  88A0               	bsf	4000,4,c	;volatile
 18581                           
 18582                           ; BSR set to: 15
 18583  016F3A  8EF2               	bsf	intcon,7,c	;volatile
 18584                           
 18585                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 18586  016F3C  D001               	goto	l193
 18587  016F3E                     l194:
 18588  016F3E  8665               	bsf	3941,3,c	;volatile
 18589  016F40                     l193:
 18590  016F40  A665               	btfss	3941,3,c	;volatile
 18591  016F42  D7FD               	goto	l194
 18592                           
 18593                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 18594  016F44  0E01               	movlw	1
 18595  016F46  6E1A               	movwf	_USBDeviceState,c	;volatile
 18596  016F48  0012               	return	
 18597  016F4A                     __end_of_USBDeviceAttach:
 18598                           	opt stack 0
 18599                           tblptru	equ	0xFF8
 18600                           tblptrh	equ	0xFF7
 18601                           tblptrl	equ	0xFF6
 18602                           tablat	equ	0xFF5
 18603                           prodh	equ	0xFF4
 18604                           prodl	equ	0xFF3
 18605                           intcon	equ	0xFF2
 18606                           intcon2	equ	0xFF1
 18607                           postinc0	equ	0xFEE
 18608                           wreg	equ	0xFE8
 18609                           indf1	equ	0xFE7
 18610                           postinc1	equ	0xFE6
 18611                           postdec1	equ	0xFE5
 18612                           fsr1h	equ	0xFE2
 18613                           fsr1l	equ	0xFE1
 18614                           indf2	equ	0xFDF
 18615                           postinc2	equ	0xFDE
 18616                           postdec2	equ	0xFDD
 18617                           plusw2	equ	0xFDB
 18618                           fsr2h	equ	0xFDA
 18619                           fsr2l	equ	0xFD9
 18620                           status	equ	0xFD8
 18621                           
 18622 ;; *************** function _RTCC_init *****************
 18623 ;; Defined at:
 18624 ;;		line 56 in file "../My_header\My_RTCC.h"
 18625 ;; Parameters:    Size  Location     Type
 18626 ;;		None
 18627 ;; Auto vars:     Size  Location     Type
 18628 ;;		None
 18629 ;; Return value:  Size  Location     Type
 18630 ;;		None               void
 18631 ;; Registers used:
 18632 ;;		wreg, status,2
 18633 ;; Tracked objects:
 18634 ;;		On entry : 0/0
 18635 ;;		On exit  : 0/0
 18636 ;;		Unchanged: 0/0
 18637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18642 ;;Total ram usage:        0 bytes
 18643 ;; Hardware stack levels used:    1
 18644 ;; Hardware stack levels required when called:   11
 18645 ;; This function calls:
 18646 ;;		Nothing
 18647 ;; This function is called by:
 18648 ;;		_hardware_init
 18649 ;; This function uses a non-reentrant model
 18650 ;;
 18651                           
 18652                           	psect	text63
 18653  0170B2                     __ptext63:
 18654                           	opt stack 0
 18655  0170B2                     _RTCC_init:
 18656                           	opt stack 18
 18657                           
 18658                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 18659                           
 18660                           ;incstack = 0
 18661  0170B2  010F               	movlb	15	; () banked
 18662  0170B4  8B3F               	bsf	63,5,b	;volatile
 18663                           
 18664                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 18665  0170B6  010F               	movlb	15	; () banked
 18666  0170B8  BB3F               	btfsc	63,5,b	;volatile
 18667  0170BA  D006               	goto	l11520
 18668                           
 18669                           ; BSR set to: 15
 18670                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 18671  0170BC  0E55               	movlw	85
 18672  0170BE  6EA7               	movwf	4007,c	;volatile
 18673                           
 18674                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 18675  0170C0  0EAA               	movlw	170
 18676  0170C2  6EA7               	movwf	4007,c	;volatile
 18677                           
 18678                           ; BSR set to: 15
 18679                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 18680  0170C4  010F               	movlb	15	; () banked
 18681  0170C6  8B3F               	bsf	63,5,b	;volatile
 18682  0170C8                     l11520:
 18683                           
 18684                           ; BSR set to: 15
 18685                           ;My_header\My_RTCC.h: 62: }
 18686                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 18687  0170C8  010F               	movlb	15	; () banked
 18688  0170CA  8F3F               	bsf	63,7,b	;volatile
 18689                           
 18690                           ; BSR set to: 15
 18691                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 18692  0170CC  010F               	movlb	15	; () banked
 18693  0170CE  953F               	bcf	63,2,b	;volatile
 18694                           
 18695                           ; BSR set to: 15
 18696                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 18697  0170D0  010F               	movlb	15	; () banked
 18698  0170D2  833C               	bsf	60,1,b	;volatile
 18699                           
 18700                           ; BSR set to: 15
 18701                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 18702  0170D4  010F               	movlb	15	; () banked
 18703  0170D6  853C               	bsf	60,2,b	;volatile
 18704                           
 18705                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 18706  0170D8  0E00               	movlw	0
 18707  0170DA  010F               	movlb	15	; () banked
 18708  0170DC  6F3E               	movwf	62,b	;volatile
 18709                           
 18710                           ; BSR set to: 15
 18711  0170DE  0012               	return		;funcret
 18712  0170E0                     __end_of_RTCC_init:
 18713                           	opt stack 0
 18714                           tblptru	equ	0xFF8
 18715                           tblptrh	equ	0xFF7
 18716                           tblptrl	equ	0xFF6
 18717                           tablat	equ	0xFF5
 18718                           prodh	equ	0xFF4
 18719                           prodl	equ	0xFF3
 18720                           intcon	equ	0xFF2
 18721                           intcon2	equ	0xFF1
 18722                           postinc0	equ	0xFEE
 18723                           wreg	equ	0xFE8
 18724                           indf1	equ	0xFE7
 18725                           postinc1	equ	0xFE6
 18726                           postdec1	equ	0xFE5
 18727                           fsr1h	equ	0xFE2
 18728                           fsr1l	equ	0xFE1
 18729                           indf2	equ	0xFDF
 18730                           postinc2	equ	0xFDE
 18731                           postdec2	equ	0xFDD
 18732                           plusw2	equ	0xFDB
 18733                           fsr2h	equ	0xFDA
 18734                           fsr2l	equ	0xFD9
 18735                           status	equ	0xFD8
 18736                           
 18737 ;; *************** function _I2C_init *****************
 18738 ;; Defined at:
 18739 ;;		line 25 in file "../My_header\My_I2C.h"
 18740 ;; Parameters:    Size  Location     Type
 18741 ;;		None
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;		None
 18744 ;; Return value:  Size  Location     Type
 18745 ;;		None               void
 18746 ;; Registers used:
 18747 ;;		wreg, status,2
 18748 ;; Tracked objects:
 18749 ;;		On entry : 0/0
 18750 ;;		On exit  : 0/0
 18751 ;;		Unchanged: 0/0
 18752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;Total ram usage:        0 bytes
 18758 ;; Hardware stack levels used:    1
 18759 ;; Hardware stack levels required when called:   11
 18760 ;; This function calls:
 18761 ;;		Nothing
 18762 ;; This function is called by:
 18763 ;;		_hardware_init
 18764 ;; This function uses a non-reentrant model
 18765 ;;
 18766                           
 18767                           	psect	text64
 18768  017414                     __ptext64:
 18769                           	opt stack 0
 18770  017414                     _I2C_init:
 18771                           	opt stack 18
 18772                           
 18773                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 18774                           
 18775                           ; BSR set to: 15
 18776                           ;incstack = 0
 18777  017414  0E80               	movlw	128
 18778  017416  6EC7               	movwf	4039,c	;volatile
 18779                           
 18780                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 18781  017418  0E28               	movlw	40
 18782  01741A  6EC6               	movwf	4038,c	;volatile
 18783                           
 18784                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 18785  01741C  0E13               	movlw	19
 18786  01741E  6EC8               	movwf	4040,c	;volatile
 18787                           
 18788                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 18789  017420  969E               	bcf	3998,3,c	;volatile
 18790                           
 18791                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 18792  017422  96A1               	bcf	4001,3,c	;volatile
 18793  017424  0012               	return		;funcret
 18794  017426                     __end_of_I2C_init:
 18795                           	opt stack 0
 18796                           tblptru	equ	0xFF8
 18797                           tblptrh	equ	0xFF7
 18798                           tblptrl	equ	0xFF6
 18799                           tablat	equ	0xFF5
 18800                           prodh	equ	0xFF4
 18801                           prodl	equ	0xFF3
 18802                           intcon	equ	0xFF2
 18803                           intcon2	equ	0xFF1
 18804                           postinc0	equ	0xFEE
 18805                           wreg	equ	0xFE8
 18806                           indf1	equ	0xFE7
 18807                           postinc1	equ	0xFE6
 18808                           postdec1	equ	0xFE5
 18809                           fsr1h	equ	0xFE2
 18810                           fsr1l	equ	0xFE1
 18811                           indf2	equ	0xFDF
 18812                           postinc2	equ	0xFDE
 18813                           postdec2	equ	0xFDD
 18814                           plusw2	equ	0xFDB
 18815                           fsr2h	equ	0xFDA
 18816                           fsr2l	equ	0xFD9
 18817                           status	equ	0xFD8
 18818                           
 18819 ;; *************** function _I2C_LCD_init *****************
 18820 ;; Defined at:
 18821 ;;		line 164 in file "../My_header\My_I2C.h"
 18822 ;; Parameters:    Size  Location     Type
 18823 ;;		None
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;		None
 18826 ;; Return value:  Size  Location     Type
 18827 ;;		None               void
 18828 ;; Registers used:
 18829 ;;		wreg, status,2, status,0, cstack
 18830 ;; Tracked objects:
 18831 ;;		On entry : 0/0
 18832 ;;		On exit  : 0/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;Total ram usage:        0 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:   15
 18842 ;; This function calls:
 18843 ;;		_Delay_ms
 18844 ;;		_I2C_LCD_Clear
 18845 ;;		_I2C_LCD_Command
 18846 ;; This function is called by:
 18847 ;;		_hardware_init
 18848 ;; This function uses a non-reentrant model
 18849 ;;
 18850                           
 18851                           	psect	text65
 18852  016B2E                     __ptext65:
 18853                           	opt stack 0
 18854  016B2E                     _I2C_LCD_init:
 18855                           	opt stack 14
 18856                           
 18857                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 18858                           
 18859                           ;incstack = 0
 18860  016B2E  0E00               	movlw	0
 18861  016B30  0100               	movlb	0	; () banked
 18862  016B32  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 18863  016B34  0E28               	movlw	40
 18864  016B36  6F60               	movwf	Delay_ms@ms& (0+255),b
 18865  016B38  ECC9  F0B8         	call	_Delay_ms	;wreg free
 18866                           
 18867                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 18868  016B3C  0E38               	movlw	56
 18869  016B3E  ECA5  F0B7         	call	_I2C_LCD_Command
 18870                           
 18871                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 18872  016B42  0E39               	movlw	57
 18873  016B44  ECA5  F0B7         	call	_I2C_LCD_Command
 18874                           
 18875                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 18876  016B48  0E14               	movlw	20
 18877  016B4A  ECA5  F0B7         	call	_I2C_LCD_Command
 18878                           
 18879                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 18880  016B4E  0E70               	movlw	112
 18881  016B50  ECA5  F0B7         	call	_I2C_LCD_Command
 18882                           
 18883                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 18884  016B54  0E56               	movlw	86
 18885  016B56  ECA5  F0B7         	call	_I2C_LCD_Command
 18886                           
 18887                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 18888  016B5A  0E6C               	movlw	108
 18889  016B5C  ECA5  F0B7         	call	_I2C_LCD_Command
 18890                           
 18891                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 18892  016B60  0E00               	movlw	0
 18893  016B62  0100               	movlb	0	; () banked
 18894  016B64  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 18895  016B66  0EC8               	movlw	200
 18896  016B68  6F60               	movwf	Delay_ms@ms& (0+255),b
 18897  016B6A  ECC9  F0B8         	call	_Delay_ms	;wreg free
 18898                           
 18899                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 18900  016B6E  0E38               	movlw	56
 18901  016B70  ECA5  F0B7         	call	_I2C_LCD_Command
 18902                           
 18903                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 18904  016B74  0E0C               	movlw	12
 18905  016B76  ECA5  F0B7         	call	_I2C_LCD_Command
 18906                           
 18907                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 18908  016B7A  0E06               	movlw	6
 18909  016B7C  ECA5  F0B7         	call	_I2C_LCD_Command
 18910                           
 18911                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 18912  016B80  ECDD  F0B9         	call	_I2C_LCD_Clear	;wreg free
 18913  016B84  0012               	return		;funcret
 18914  016B86                     __end_of_I2C_LCD_init:
 18915                           	opt stack 0
 18916                           tblptru	equ	0xFF8
 18917                           tblptrh	equ	0xFF7
 18918                           tblptrl	equ	0xFF6
 18919                           tablat	equ	0xFF5
 18920                           prodh	equ	0xFF4
 18921                           prodl	equ	0xFF3
 18922                           intcon	equ	0xFF2
 18923                           intcon2	equ	0xFF1
 18924                           postinc0	equ	0xFEE
 18925                           wreg	equ	0xFE8
 18926                           indf1	equ	0xFE7
 18927                           postinc1	equ	0xFE6
 18928                           postdec1	equ	0xFE5
 18929                           fsr1h	equ	0xFE2
 18930                           fsr1l	equ	0xFE1
 18931                           indf2	equ	0xFDF
 18932                           postinc2	equ	0xFDE
 18933                           postdec2	equ	0xFDD
 18934                           plusw2	equ	0xFDB
 18935                           fsr2h	equ	0xFDA
 18936                           fsr2l	equ	0xFD9
 18937                           status	equ	0xFD8
 18938                           
 18939 ;; *************** function _I2C_LCD_Clear *****************
 18940 ;; Defined at:
 18941 ;;		line 107 in file "../My_header\My_I2C.h"
 18942 ;; Parameters:    Size  Location     Type
 18943 ;;		None
 18944 ;; Auto vars:     Size  Location     Type
 18945 ;;		None
 18946 ;; Return value:  Size  Location     Type
 18947 ;;		None               void
 18948 ;; Registers used:
 18949 ;;		wreg, status,2, status,0, cstack
 18950 ;; Tracked objects:
 18951 ;;		On entry : 0/0
 18952 ;;		On exit  : 0/0
 18953 ;;		Unchanged: 0/0
 18954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18958 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18959 ;;Total ram usage:        1 bytes
 18960 ;; Hardware stack levels used:    1
 18961 ;; Hardware stack levels required when called:   14
 18962 ;; This function calls:
 18963 ;;		_I2C_LCD_Command
 18964 ;; This function is called by:
 18965 ;;		_I2C_LCD_init
 18966 ;;		_display_LCD
 18967 ;;		_bootload
 18968 ;;		_sleep_loop
 18969 ;; This function uses a non-reentrant model
 18970 ;;
 18971                           
 18972                           	psect	text66
 18973  0173BA                     __ptext66:
 18974                           	opt stack 0
 18975  0173BA                     _I2C_LCD_Clear:
 18976                           	opt stack 15
 18977                           
 18978                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 18979                           
 18980                           ;incstack = 0
 18981  0173BA  0E01               	movlw	1
 18982  0173BC  ECA5  F0B7         	call	_I2C_LCD_Command
 18983                           
 18984                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18985  0173C0  0E12               	movlw	18
 18986  0173C2  0100               	movlb	0	; () banked
 18987  0173C4  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18988  0173C6  0E23               	movlw	35
 18989  0173C8                     u15357:
 18990  0173C8  2EE8               	decfsz	wreg,f,c
 18991  0173CA  D7FE               	goto	u15357
 18992  0173CC  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18993  0173CE  D7FC               	goto	u15357
 18994  0173D0  F000               	nop	
 18995  0173D2  0012               	return		;funcret
 18996  0173D4                     __end_of_I2C_LCD_Clear:
 18997                           	opt stack 0
 18998                           tblptru	equ	0xFF8
 18999                           tblptrh	equ	0xFF7
 19000                           tblptrl	equ	0xFF6
 19001                           tablat	equ	0xFF5
 19002                           prodh	equ	0xFF4
 19003                           prodl	equ	0xFF3
 19004                           intcon	equ	0xFF2
 19005                           intcon2	equ	0xFF1
 19006                           postinc0	equ	0xFEE
 19007                           wreg	equ	0xFE8
 19008                           indf1	equ	0xFE7
 19009                           postinc1	equ	0xFE6
 19010                           postdec1	equ	0xFE5
 19011                           fsr1h	equ	0xFE2
 19012                           fsr1l	equ	0xFE1
 19013                           indf2	equ	0xFDF
 19014                           postinc2	equ	0xFDE
 19015                           postdec2	equ	0xFDD
 19016                           plusw2	equ	0xFDB
 19017                           fsr2h	equ	0xFDA
 19018                           fsr2l	equ	0xFD9
 19019                           status	equ	0xFD8
 19020                           
 19021 ;; *************** function _I2C_LCD_Command *****************
 19022 ;; Defined at:
 19023 ;;		line 94 in file "../My_header\My_I2C.h"
 19024 ;; Parameters:    Size  Location     Type
 19025 ;;  c               1    wreg     unsigned char 
 19026 ;; Auto vars:     Size  Location     Type
 19027 ;;  c               1    4[BANK0 ] unsigned char 
 19028 ;;  ans             1    5[BANK0 ] unsigned char 
 19029 ;; Return value:  Size  Location     Type
 19030 ;;		None               void
 19031 ;; Registers used:
 19032 ;;		wreg, status,2, status,0, cstack
 19033 ;; Tracked objects:
 19034 ;;		On entry : 0/0
 19035 ;;		On exit  : 0/0
 19036 ;;		Unchanged: 0/0
 19037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19042 ;;Total ram usage:        2 bytes
 19043 ;; Hardware stack levels used:    1
 19044 ;; Hardware stack levels required when called:   13
 19045 ;; This function calls:
 19046 ;;		_I2C_Send
 19047 ;;		_I2C_Start
 19048 ;;		_I2C_Stop
 19049 ;; This function is called by:
 19050 ;;		_I2C_LCD_Clear
 19051 ;;		_I2C_LCD_SetCursor
 19052 ;;		_I2C_LCD_init
 19053 ;; This function uses a non-reentrant model
 19054 ;;
 19055                           
 19056                           	psect	text67
 19057  016F4A                     __ptext67:
 19058                           	opt stack 0
 19059  016F4A                     _I2C_LCD_Command:
 19060                           	opt stack 15
 19061                           
 19062                           ;incstack = 0
 19063                           ;I2C_LCD_Command@c stored from wreg
 19064  016F4A  0100               	movlb	0	; () banked
 19065  016F4C  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 19066                           
 19067                           ;My_header\My_I2C.h: 95: uint8_t ans;
 19068                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 19069  016F4E  0E00               	movlw	0
 19070  016F50  0100               	movlb	0	; () banked
 19071  016F52  6F62               	movwf	I2C_Start@rw& (0+255),b
 19072  016F54  0E3E               	movlw	62
 19073  016F56  EC2A  F0B8         	call	_I2C_Start
 19074  016F5A  0100               	movlb	0	; () banked
 19075  016F5C  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 19076                           
 19077                           ; BSR set to: 0
 19078                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 19079  016F5E  0100               	movlb	0	; () banked
 19080  016F60  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 19081  016F62  0100               	movlb	0	; () banked
 19082  016F64  A4D8               	btfss	status,2,c
 19083  016F66  D007               	goto	l929
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 19087  016F68  0E80               	movlw	128
 19088  016F6A  ECEA  F0B9         	call	_I2C_Send
 19089                           
 19090                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 19091  016F6E  0100               	movlb	0	; () banked
 19092  016F70  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 19093  016F72  ECEA  F0B9         	call	_I2C_Send
 19094  016F76                     l929:
 19095                           
 19096                           ;My_header\My_I2C.h: 102: }
 19097                           ;My_header\My_I2C.h: 103: I2C_Stop();
 19098  016F76  EC25  F0BA         	call	_I2C_Stop	;wreg free
 19099                           
 19100                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 19101  016F7A  0E68               	movlw	104
 19102  016F7C                     u15367:
 19103  016F7C  2EE8               	decfsz	wreg,f,c
 19104  016F7E  D7FE               	goto	u15367
 19105  016F80  0012               	return		;funcret
 19106  016F82                     __end_of_I2C_LCD_Command:
 19107                           	opt stack 0
 19108                           tblptru	equ	0xFF8
 19109                           tblptrh	equ	0xFF7
 19110                           tblptrl	equ	0xFF6
 19111                           tablat	equ	0xFF5
 19112                           prodh	equ	0xFF4
 19113                           prodl	equ	0xFF3
 19114                           intcon	equ	0xFF2
 19115                           intcon2	equ	0xFF1
 19116                           postinc0	equ	0xFEE
 19117                           wreg	equ	0xFE8
 19118                           indf1	equ	0xFE7
 19119                           postinc1	equ	0xFE6
 19120                           postdec1	equ	0xFE5
 19121                           fsr1h	equ	0xFE2
 19122                           fsr1l	equ	0xFE1
 19123                           indf2	equ	0xFDF
 19124                           postinc2	equ	0xFDE
 19125                           postdec2	equ	0xFDD
 19126                           plusw2	equ	0xFDB
 19127                           fsr2h	equ	0xFDA
 19128                           fsr2l	equ	0xFD9
 19129                           status	equ	0xFD8
 19130                           
 19131 ;; *************** function _I2C_Stop *****************
 19132 ;; Defined at:
 19133 ;;		line 59 in file "../My_header\My_I2C.h"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;		None               void
 19140 ;; Registers used:
 19141 ;;		wreg, status,2, status,0, cstack
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:   12
 19154 ;; This function calls:
 19155 ;;		_I2C_IdleCheck
 19156 ;; This function is called by:
 19157 ;;		_I2C_LCD_Command
 19158 ;;		_I2C_LCD_Putc
 19159 ;;		_I2C_LCD_Puts
 19160 ;;		_I2C_LCD_CreateChar
 19161 ;; This function uses a non-reentrant model
 19162 ;;
 19163                           
 19164                           	psect	text68
 19165  01744A                     __ptext68:
 19166                           	opt stack 0
 19167  01744A                     _I2C_Stop:
 19168                           	opt stack 15
 19169                           
 19170                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 19171                           
 19172                           ;incstack = 0
 19173  01744A  0E05               	movlw	5
 19174  01744C  ECC0  F0B9         	call	_I2C_IdleCheck
 19175                           
 19176                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 19177  017450  84C5               	bsf	4037,2,c	;volatile
 19178  017452  0012               	return		;funcret
 19179  017454                     __end_of_I2C_Stop:
 19180                           	opt stack 0
 19181                           tblptru	equ	0xFF8
 19182                           tblptrh	equ	0xFF7
 19183                           tblptrl	equ	0xFF6
 19184                           tablat	equ	0xFF5
 19185                           prodh	equ	0xFF4
 19186                           prodl	equ	0xFF3
 19187                           intcon	equ	0xFF2
 19188                           intcon2	equ	0xFF1
 19189                           postinc0	equ	0xFEE
 19190                           wreg	equ	0xFE8
 19191                           indf1	equ	0xFE7
 19192                           postinc1	equ	0xFE6
 19193                           postdec1	equ	0xFE5
 19194                           fsr1h	equ	0xFE2
 19195                           fsr1l	equ	0xFE1
 19196                           indf2	equ	0xFDF
 19197                           postinc2	equ	0xFDE
 19198                           postdec2	equ	0xFDD
 19199                           plusw2	equ	0xFDB
 19200                           fsr2h	equ	0xFDA
 19201                           fsr2l	equ	0xFD9
 19202                           status	equ	0xFD8
 19203                           
 19204 ;; *************** function _I2C_Start *****************
 19205 ;; Defined at:
 19206 ;;		line 35 in file "../My_header\My_I2C.h"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;  adrs            1    wreg     unsigned char 
 19209 ;;  rw              1    2[BANK0 ] unsigned char 
 19210 ;; Auto vars:     Size  Location     Type
 19211 ;;  adrs            1    3[BANK0 ] unsigned char 
 19212 ;; Return value:  Size  Location     Type
 19213 ;;                  1    wreg      unsigned char 
 19214 ;; Registers used:
 19215 ;;		wreg, status,2, status,0, cstack
 19216 ;; Tracked objects:
 19217 ;;		On entry : 0/0
 19218 ;;		On exit  : 0/0
 19219 ;;		Unchanged: 0/0
 19220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19221 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19224 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19225 ;;Total ram usage:        2 bytes
 19226 ;; Hardware stack levels used:    1
 19227 ;; Hardware stack levels required when called:   12
 19228 ;; This function calls:
 19229 ;;		_I2C_IdleCheck
 19230 ;; This function is called by:
 19231 ;;		_I2C_LCD_Command
 19232 ;;		_I2C_LCD_Putc
 19233 ;;		_I2C_LCD_Puts
 19234 ;;		_I2C_LCD_CreateChar
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           	psect	text69
 19239  017054                     __ptext69:
 19240                           	opt stack 0
 19241  017054                     _I2C_Start:
 19242                           	opt stack 15
 19243                           
 19244                           ;incstack = 0
 19245                           ;I2C_Start@adrs stored from wreg
 19246  017054  0100               	movlb	0	; () banked
 19247  017056  6F63               	movwf	I2C_Start@adrs& (0+255),b
 19248                           
 19249                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 19250  017058  0E05               	movlw	5
 19251  01705A  ECC0  F0B9         	call	_I2C_IdleCheck
 19252                           
 19253                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 19254  01705E  80C5               	bsf	4037,0,c	;volatile
 19255                           
 19256                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 19257  017060  0E05               	movlw	5
 19258  017062  ECC0  F0B9         	call	_I2C_IdleCheck
 19259                           
 19260                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 19261  017066  969E               	bcf	3998,3,c	;volatile
 19262                           
 19263                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 19264  017068  0100               	movlb	0	; () banked
 19265  01706A  5163               	movf	I2C_Start@adrs& (0+255),w,b
 19266  01706C  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 19267  01706E  0100               	movlb	0	; () banked
 19268  017070  2562               	addwf	I2C_Start@rw& (0+255),w,b
 19269  017072  6EC9               	movwf	4041,c	;volatile
 19270  017074                     l905:
 19271  017074  A69E               	btfss	3998,3,c	;volatile
 19272  017076  D7FE               	goto	l905
 19273                           
 19274                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 19275  017078  ACC5               	btfss	4037,6,c	;volatile
 19276  01707A  D002               	goto	u11890
 19277  01707C  0E01               	movlw	1
 19278  01707E  0012               	return	
 19279  017080                     u11890:
 19280  017080  0E00               	movlw	0
 19281  017082  0012               	return	
 19282  017084                     __end_of_I2C_Start:
 19283                           	opt stack 0
 19284                           tblptru	equ	0xFF8
 19285                           tblptrh	equ	0xFF7
 19286                           tblptrl	equ	0xFF6
 19287                           tablat	equ	0xFF5
 19288                           prodh	equ	0xFF4
 19289                           prodl	equ	0xFF3
 19290                           intcon	equ	0xFF2
 19291                           intcon2	equ	0xFF1
 19292                           postinc0	equ	0xFEE
 19293                           wreg	equ	0xFE8
 19294                           indf1	equ	0xFE7
 19295                           postinc1	equ	0xFE6
 19296                           postdec1	equ	0xFE5
 19297                           fsr1h	equ	0xFE2
 19298                           fsr1l	equ	0xFE1
 19299                           indf2	equ	0xFDF
 19300                           postinc2	equ	0xFDE
 19301                           postdec2	equ	0xFDD
 19302                           plusw2	equ	0xFDB
 19303                           fsr2h	equ	0xFDA
 19304                           fsr2l	equ	0xFD9
 19305                           status	equ	0xFD8
 19306                           
 19307 ;; *************** function _I2C_Send *****************
 19308 ;; Defined at:
 19309 ;;		line 65 in file "../My_header\My_I2C.h"
 19310 ;; Parameters:    Size  Location     Type
 19311 ;;  data            1    wreg     unsigned char 
 19312 ;; Auto vars:     Size  Location     Type
 19313 ;;  data            1    2[BANK0 ] unsigned char 
 19314 ;; Return value:  Size  Location     Type
 19315 ;;                  1    wreg      unsigned char 
 19316 ;; Registers used:
 19317 ;;		wreg, status,2, status,0, cstack
 19318 ;; Tracked objects:
 19319 ;;		On entry : 0/0
 19320 ;;		On exit  : 0/0
 19321 ;;		Unchanged: 0/0
 19322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19327 ;;Total ram usage:        1 bytes
 19328 ;; Hardware stack levels used:    1
 19329 ;; Hardware stack levels required when called:   12
 19330 ;; This function calls:
 19331 ;;		_I2C_IdleCheck
 19332 ;; This function is called by:
 19333 ;;		_I2C_LCD_Command
 19334 ;;		_I2C_LCD_Putc
 19335 ;;		_I2C_LCD_Puts
 19336 ;;		_I2C_LCD_CreateChar
 19337 ;; This function uses a non-reentrant model
 19338 ;;
 19339                           
 19340                           	psect	text70
 19341  0173D4                     __ptext70:
 19342                           	opt stack 0
 19343  0173D4                     _I2C_Send:
 19344                           	opt stack 15
 19345                           
 19346                           ;incstack = 0
 19347                           ;I2C_Send@data stored from wreg
 19348  0173D4  0100               	movlb	0	; () banked
 19349  0173D6  6F62               	movwf	I2C_Send@data& (0+255),b
 19350                           
 19351                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 19352  0173D8  0E05               	movlw	5
 19353  0173DA  ECC0  F0B9         	call	_I2C_IdleCheck
 19354                           
 19355                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 19356  0173DE  969E               	bcf	3998,3,c	;volatile
 19357                           
 19358                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 19359  0173E0  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 19360  0173E4                     l920:
 19361  0173E4  A69E               	btfss	3998,3,c	;volatile
 19362  0173E6  D7FE               	goto	l920
 19363                           
 19364                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 19365                           ;	Return value of _I2C_Send is never used
 19366  0173E8  50C5               	movf	4037,w,c	;volatile
 19367  0173EA  0012               	return	
 19368  0173EC                     __end_of_I2C_Send:
 19369                           	opt stack 0
 19370                           tblptru	equ	0xFF8
 19371                           tblptrh	equ	0xFF7
 19372                           tblptrl	equ	0xFF6
 19373                           tablat	equ	0xFF5
 19374                           prodh	equ	0xFF4
 19375                           prodl	equ	0xFF3
 19376                           intcon	equ	0xFF2
 19377                           intcon2	equ	0xFF1
 19378                           postinc0	equ	0xFEE
 19379                           wreg	equ	0xFE8
 19380                           indf1	equ	0xFE7
 19381                           postinc1	equ	0xFE6
 19382                           postdec1	equ	0xFE5
 19383                           fsr1h	equ	0xFE2
 19384                           fsr1l	equ	0xFE1
 19385                           indf2	equ	0xFDF
 19386                           postinc2	equ	0xFDE
 19387                           postdec2	equ	0xFDD
 19388                           plusw2	equ	0xFDB
 19389                           fsr2h	equ	0xFDA
 19390                           fsr2l	equ	0xFD9
 19391                           status	equ	0xFD8
 19392                           
 19393 ;; *************** function _I2C_IdleCheck *****************
 19394 ;; Defined at:
 19395 ;;		line 21 in file "../My_header\My_I2C.h"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;  mask            1    wreg     unsigned char 
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  mask            1    1[BANK0 ] unsigned char 
 19400 ;; Return value:  Size  Location     Type
 19401 ;;		None               void
 19402 ;; Registers used:
 19403 ;;		wreg, status,2, status,0
 19404 ;; Tracked objects:
 19405 ;;		On entry : 0/0
 19406 ;;		On exit  : 0/0
 19407 ;;		Unchanged: 0/0
 19408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19413 ;;Total ram usage:        2 bytes
 19414 ;; Hardware stack levels used:    1
 19415 ;; Hardware stack levels required when called:   11
 19416 ;; This function calls:
 19417 ;;		Nothing
 19418 ;; This function is called by:
 19419 ;;		_I2C_Start
 19420 ;;		_I2C_Stop
 19421 ;;		_I2C_Send
 19422 ;;		_I2C_rStart
 19423 ;;		_I2C_Receive
 19424 ;; This function uses a non-reentrant model
 19425 ;;
 19426                           
 19427                           	psect	text71
 19428  017380                     __ptext71:
 19429                           	opt stack 0
 19430  017380                     _I2C_IdleCheck:
 19431                           	opt stack 15
 19432                           
 19433                           ;incstack = 0
 19434                           ;I2C_IdleCheck@mask stored from wreg
 19435  017380  0100               	movlb	0	; () banked
 19436  017382  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 19437  017384                     l10160:
 19438  017384  50C7               	movf	4039,w,c	;volatile
 19439  017386  0100               	movlb	0	; () banked
 19440  017388  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 19441  01738A  0100               	movlb	0	; () banked
 19442  01738C  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 19443  01738E  50C5               	movf	4037,w,c	;volatile
 19444  017390  0B1F               	andlw	31
 19445  017392  0100               	movlb	0	; () banked
 19446  017394  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 19447  017396  0900               	iorlw	0
 19448  017398  B4D8               	btfsc	status,2,c
 19449  01739A  0012               	return	
 19450  01739C  D7F3               	goto	l10160
 19451  01739E                     __end_of_I2C_IdleCheck:
 19452                           	opt stack 0
 19453                           tblptru	equ	0xFF8
 19454                           tblptrh	equ	0xFF7
 19455                           tblptrl	equ	0xFF6
 19456                           tablat	equ	0xFF5
 19457                           prodh	equ	0xFF4
 19458                           prodl	equ	0xFF3
 19459                           intcon	equ	0xFF2
 19460                           intcon2	equ	0xFF1
 19461                           postinc0	equ	0xFEE
 19462                           wreg	equ	0xFE8
 19463                           indf1	equ	0xFE7
 19464                           postinc1	equ	0xFE6
 19465                           postdec1	equ	0xFE5
 19466                           fsr1h	equ	0xFE2
 19467                           fsr1l	equ	0xFE1
 19468                           indf2	equ	0xFDF
 19469                           postinc2	equ	0xFDE
 19470                           postdec2	equ	0xFDD
 19471                           plusw2	equ	0xFDB
 19472                           fsr2h	equ	0xFDA
 19473                           fsr2l	equ	0xFD9
 19474                           status	equ	0xFD8
 19475                           
 19476 ;; *************** function _Delay_ms *****************
 19477 ;; Defined at:
 19478 ;;		line 333 in file "../My_header\My_header.h"
 19479 ;; Parameters:    Size  Location     Type
 19480 ;;  ms              2    0[BANK0 ] unsigned int 
 19481 ;; Auto vars:     Size  Location     Type
 19482 ;;		None
 19483 ;; Return value:  Size  Location     Type
 19484 ;;		None               void
 19485 ;; Registers used:
 19486 ;;		wreg, status,2, status,0
 19487 ;; Tracked objects:
 19488 ;;		On entry : 0/0
 19489 ;;		On exit  : 0/0
 19490 ;;		Unchanged: 0/0
 19491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19495 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19496 ;;Total ram usage:        3 bytes
 19497 ;; Hardware stack levels used:    1
 19498 ;; Hardware stack levels required when called:   11
 19499 ;; This function calls:
 19500 ;;		Nothing
 19501 ;; This function is called by:
 19502 ;;		_I2C_LCD_init
 19503 ;; This function uses a non-reentrant model
 19504 ;;
 19505                           
 19506                           	psect	text72
 19507  017192                     __ptext72:
 19508                           	opt stack 0
 19509  017192                     _Delay_ms:
 19510                           	opt stack 17
 19511                           
 19512                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;incstack = 0
 19516  017192  D009               	goto	l10988
 19517  017194                     l10986:
 19518  017194  0E10               	movlw	16
 19519  017196  0100               	movlb	0	; () banked
 19520  017198  6F62               	movwf	??_Delay_ms& (0+255),b
 19521  01719A  0E94               	movlw	148
 19522  01719C                     u15377:
 19523  01719C  2EE8               	decfsz	wreg,f,c
 19524  01719E  D7FE               	goto	u15377
 19525  0171A0  2F62               	decfsz	??_Delay_ms& (0+255),f,b
 19526  0171A2  D7FC               	goto	u15377
 19527  0171A4  D000               	nop2	
 19528  0171A6                     l10988:
 19529  0171A6  0100               	movlb	0	; () banked
 19530  0171A8  0760               	decf	Delay_ms@ms& (0+255),f,b
 19531  0171AA  A0D8               	btfss	status,0,c
 19532  0171AC  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
 19533  0171AE  0100               	movlb	0	; () banked
 19534  0171B0  2960               	incf	Delay_ms@ms& (0+255),w,b
 19535  0171B2  E1F0               	bnz	l10986
 19536  0171B4  0100               	movlb	0	; () banked
 19537  0171B6  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
 19538  0171B8  B4D8               	btfsc	status,2,c
 19539  0171BA  0012               	return	
 19540  0171BC  D7EB               	goto	l10986
 19541  0171BE                     __end_of_Delay_ms:
 19542                           	opt stack 0
 19543                           tblptru	equ	0xFF8
 19544                           tblptrh	equ	0xFF7
 19545                           tblptrl	equ	0xFF6
 19546                           tablat	equ	0xFF5
 19547                           prodh	equ	0xFF4
 19548                           prodl	equ	0xFF3
 19549                           intcon	equ	0xFF2
 19550                           intcon2	equ	0xFF1
 19551                           postinc0	equ	0xFEE
 19552                           wreg	equ	0xFE8
 19553                           indf1	equ	0xFE7
 19554                           postinc1	equ	0xFE6
 19555                           postdec1	equ	0xFE5
 19556                           fsr1h	equ	0xFE2
 19557                           fsr1l	equ	0xFE1
 19558                           indf2	equ	0xFDF
 19559                           postinc2	equ	0xFDE
 19560                           postdec2	equ	0xFDD
 19561                           plusw2	equ	0xFDB
 19562                           fsr2h	equ	0xFDA
 19563                           fsr2l	equ	0xFD9
 19564                           status	equ	0xFD8
 19565                           
 19566 ;; *************** function _CTMU_init *****************
 19567 ;; Defined at:
 19568 ;;		line 289 in file "../My_header\My_header.h"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;		None
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;		None
 19573 ;; Return value:  Size  Location     Type
 19574 ;;		None               void
 19575 ;; Registers used:
 19576 ;;		wreg, status,2
 19577 ;; Tracked objects:
 19578 ;;		On entry : 0/0
 19579 ;;		On exit  : 0/0
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19586 ;;Total ram usage:        0 bytes
 19587 ;; Hardware stack levels used:    1
 19588 ;; Hardware stack levels required when called:   11
 19589 ;; This function calls:
 19590 ;;		Nothing
 19591 ;; This function is called by:
 19592 ;;		_hardware_init
 19593 ;; This function uses a non-reentrant model
 19594 ;;
 19595                           
 19596                           	psect	text73
 19597  017268                     __ptext73:
 19598                           	opt stack 0
 19599  017268                     _CTMU_init:
 19600                           	opt stack 18
 19601                           
 19602                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 19603                           
 19604                           ; BSR set to: 0
 19605                           ;incstack = 0
 19606  017268  0E00               	movlw	0
 19607  01726A  6EB3               	movwf	4019,c	;volatile
 19608                           
 19609                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 19610  01726C  0E90               	movlw	144
 19611  01726E  6EB2               	movwf	4018,c	;volatile
 19612                           
 19613                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 19614  017270  0E01               	movlw	1
 19615  017272  6EB1               	movwf	4017,c	;volatile
 19616                           
 19617                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 19618  017274  8EC1               	bsf	4033,7,c	;volatile
 19619                           
 19620                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 19621  017276  9CC1               	bcf	4033,6,c	;volatile
 19622                           
 19623                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 19624  017278  50C1               	movf	4033,w,c	;volatile
 19625  01727A  0BC7               	andlw	-57
 19626  01727C  0908               	iorlw	8
 19627  01727E  6EC1               	movwf	4033,c	;volatile
 19628                           
 19629                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 19630  017280  50C1               	movf	4033,w,c	;volatile
 19631  017282  0BF8               	andlw	-8
 19632  017284  0906               	iorlw	6
 19633  017286  6EC1               	movwf	4033,c	;volatile
 19634                           
 19635                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 19636  017288  9CC2               	bcf	4034,6,c	;volatile
 19637                           
 19638                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 19639  01728A  9EC2               	bcf	4034,7,c	;volatile
 19640                           
 19641                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 19642  01728C  80C2               	bsf	4034,0,c	;volatile
 19643  01728E  0012               	return		;funcret
 19644  017290                     __end_of_CTMU_init:
 19645                           	opt stack 0
 19646                           tblptru	equ	0xFF8
 19647                           tblptrh	equ	0xFF7
 19648                           tblptrl	equ	0xFF6
 19649                           tablat	equ	0xFF5
 19650                           prodh	equ	0xFF4
 19651                           prodl	equ	0xFF3
 19652                           intcon	equ	0xFF2
 19653                           intcon2	equ	0xFF1
 19654                           postinc0	equ	0xFEE
 19655                           wreg	equ	0xFE8
 19656                           indf1	equ	0xFE7
 19657                           postinc1	equ	0xFE6
 19658                           postdec1	equ	0xFE5
 19659                           fsr1h	equ	0xFE2
 19660                           fsr1l	equ	0xFE1
 19661                           indf2	equ	0xFDF
 19662                           postinc2	equ	0xFDE
 19663                           postdec2	equ	0xFDD
 19664                           plusw2	equ	0xFDB
 19665                           fsr2h	equ	0xFDA
 19666                           fsr2l	equ	0xFD9
 19667                           status	equ	0xFD8
 19668                           
 19669 ;; *************** function _ADC_init *****************
 19670 ;; Defined at:
 19671 ;;		line 149 in file "../My_header\My_header.h"
 19672 ;; Parameters:    Size  Location     Type
 19673 ;;  p_ref           1    wreg     unsigned char 
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;  p_ref           1    0[BANK0 ] unsigned char 
 19676 ;; Return value:  Size  Location     Type
 19677 ;;		None               void
 19678 ;; Registers used:
 19679 ;;		wreg, status,2
 19680 ;; Tracked objects:
 19681 ;;		On entry : 0/0
 19682 ;;		On exit  : 0/0
 19683 ;;		Unchanged: 0/0
 19684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19689 ;;Total ram usage:        1 bytes
 19690 ;; Hardware stack levels used:    1
 19691 ;; Hardware stack levels required when called:   11
 19692 ;; This function calls:
 19693 ;;		Nothing
 19694 ;; This function is called by:
 19695 ;;		_hardware_init
 19696 ;; This function uses a non-reentrant model
 19697 ;;
 19698                           
 19699                           	psect	text74
 19700  017320                     __ptext74:
 19701                           	opt stack 0
 19702  017320                     _ADC_init:
 19703                           	opt stack 18
 19704                           
 19705                           ;incstack = 0
 19706                           ;ADC_init@p_ref stored from wreg
 19707  017320  0100               	movlb	0	; () banked
 19708  017322  6F60               	movwf	ADC_init@p_ref& (0+255),b
 19709                           
 19710                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 19711  017324  9EC2               	bcf	4034,7,c	;volatile
 19712                           
 19713                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 19714  017326  0100               	movlb	0	; () banked
 19715  017328  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 19716  01732A  D002               	bra	u13595
 19717  01732C  9CC2               	bcf	4034,6,c	;volatile
 19718  01732E  D001               	bra	u13596
 19719  017330                     u13595:
 19720  017330  8CC2               	bsf	4034,6,c	;volatile
 19721  017332                     u13596:
 19722                           
 19723                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 19724  017332  8EC1               	bsf	4033,7,c	;volatile
 19725                           
 19726                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 19727  017334  9CC1               	bcf	4033,6,c	;volatile
 19728                           
 19729                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 19730  017336  50C1               	movf	4033,w,c	;volatile
 19731  017338  0BF8               	andlw	-8
 19732  01733A  0906               	iorlw	6
 19733  01733C  6EC1               	movwf	4033,c	;volatile
 19734  01733E  0012               	return		;funcret
 19735  017340                     __end_of_ADC_init:
 19736                           	opt stack 0
 19737                           tblptru	equ	0xFF8
 19738                           tblptrh	equ	0xFF7
 19739                           tblptrl	equ	0xFF6
 19740                           tablat	equ	0xFF5
 19741                           prodh	equ	0xFF4
 19742                           prodl	equ	0xFF3
 19743                           intcon	equ	0xFF2
 19744                           intcon2	equ	0xFF1
 19745                           postinc0	equ	0xFEE
 19746                           wreg	equ	0xFE8
 19747                           indf1	equ	0xFE7
 19748                           postinc1	equ	0xFE6
 19749                           postdec1	equ	0xFE5
 19750                           fsr1h	equ	0xFE2
 19751                           fsr1l	equ	0xFE1
 19752                           indf2	equ	0xFDF
 19753                           postinc2	equ	0xFDE
 19754                           postdec2	equ	0xFDD
 19755                           plusw2	equ	0xFDB
 19756                           fsr2h	equ	0xFDA
 19757                           fsr2l	equ	0xFD9
 19758                           status	equ	0xFD8
 19759                           
 19760 ;; *************** function _ctmu_loop *****************
 19761 ;; Defined at:
 19762 ;;		line 470 in file "tasks.h"
 19763 ;; Parameters:    Size  Location     Type
 19764 ;;		None
 19765 ;; Auto vars:     Size  Location     Type
 19766 ;;		None
 19767 ;; Return value:  Size  Location     Type
 19768 ;;		None               void
 19769 ;; Registers used:
 19770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19771 ;; Tracked objects:
 19772 ;;		On entry : 0/0
 19773 ;;		On exit  : 0/0
 19774 ;;		Unchanged: 0/0
 19775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19780 ;;Total ram usage:        0 bytes
 19781 ;; Hardware stack levels used:    1
 19782 ;; Hardware stack levels required when called:   14
 19783 ;; This function calls:
 19784 ;;		_ctmu_sampling
 19785 ;; This function is called by:
 19786 ;;		_main
 19787 ;; This function uses a non-reentrant model
 19788 ;;
 19789                           
 19790                           	psect	text75
 19791  017426                     __ptext75:
 19792                           	opt stack 0
 19793  017426                     _ctmu_loop:
 19794                           	opt stack 16
 19795                           
 19796                           ;tasks.h: 471: if (ctmu_sampling_flag) {
 19797                           
 19798                           ;incstack = 0
 19799  017426  5021               	movf	_ctmu_sampling_flag,w,c
 19800  017428  B4D8               	btfsc	status,2,c
 19801  01742A  0012               	return	
 19802                           
 19803                           ;tasks.h: 472: ctmu_sampling_flag = 0;
 19804  01742C  0E00               	movlw	0
 19805  01742E  6E21               	movwf	_ctmu_sampling_flag,c
 19806                           
 19807                           ;tasks.h: 473: ctmu_sampling();
 19808  017430  EC13  F0A2         	call	_ctmu_sampling	;wreg free
 19809  017434  0012               	return	
 19810  017436                     __end_of_ctmu_loop:
 19811                           	opt stack 0
 19812                           tblptru	equ	0xFF8
 19813                           tblptrh	equ	0xFF7
 19814                           tblptrl	equ	0xFF6
 19815                           tablat	equ	0xFF5
 19816                           prodh	equ	0xFF4
 19817                           prodl	equ	0xFF3
 19818                           intcon	equ	0xFF2
 19819                           intcon2	equ	0xFF1
 19820                           postinc0	equ	0xFEE
 19821                           wreg	equ	0xFE8
 19822                           indf1	equ	0xFE7
 19823                           postinc1	equ	0xFE6
 19824                           postdec1	equ	0xFE5
 19825                           fsr1h	equ	0xFE2
 19826                           fsr1l	equ	0xFE1
 19827                           indf2	equ	0xFDF
 19828                           postinc2	equ	0xFDE
 19829                           postdec2	equ	0xFDD
 19830                           plusw2	equ	0xFDB
 19831                           fsr2h	equ	0xFDA
 19832                           fsr2l	equ	0xFD9
 19833                           status	equ	0xFD8
 19834                           
 19835 ;; *************** function _ctmu_sampling *****************
 19836 ;; Defined at:
 19837 ;;		line 463 in file "tasks.h"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;		None
 19840 ;; Auto vars:     Size  Location     Type
 19841 ;;		None
 19842 ;; Return value:  Size  Location     Type
 19843 ;;		None               void
 19844 ;; Registers used:
 19845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19846 ;; Tracked objects:
 19847 ;;		On entry : 0/0
 19848 ;;		On exit  : 0/0
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19855 ;;Total ram usage:        0 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; Hardware stack levels required when called:   13
 19858 ;; This function calls:
 19859 ;;		_CTMU_read
 19860 ;;		___lwdiv
 19861 ;;		_button_timer_interrupt
 19862 ;; This function is called by:
 19863 ;;		_ctmu_loop
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text76
 19868  014426                     __ptext76:
 19869                           	opt stack 0
 19870  014426                     _ctmu_sampling:
 19871                           	opt stack 16
 19872                           
 19873                           ;tasks.h: 464: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value
      +                          ));
 19874                           
 19875                           ;incstack = 0
 19876  014426  0E29               	movlw	low _port
 19877  014428  0100               	movlb	0	; () banked
 19878  01442A  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19879  01442C  0E01               	movlw	high _port
 19880  01442E  0100               	movlb	0	; () banked
 19881  014430  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19882  014432  0E00               	movlw	0
 19883  014434  EC1F  F0AB         	call	_CTMU_read
 19884  014438  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19885  01443C  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19886  014440  C12D  F07E         	movff	_port+4,___lwdiv@divisor
 19887  014444  C12E  F07F         	movff	_port+5,___lwdiv@divisor+1
 19888  014448  ECED  F0B2         	call	___lwdiv	;wreg free
 19889  01444C  0100               	movlb	0	; () banked
 19890  01444E  517C               	movf	?___lwdiv& (0+255),w,b
 19891  014450  0100               	movlb	0	; () banked
 19892  014452  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19893  014454  A4D8               	btfss	status,2,c
 19894  014456  D002               	goto	u14180
 19895  014458  0E01               	movlw	1
 19896  01445A  D001               	goto	u14190
 19897  01445C                     u14180:
 19898  01445C  0E00               	movlw	0
 19899  01445E                     u14190:
 19900  01445E  0100               	movlb	0	; () banked
 19901  014460  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19902  014462  ECD7  F092         	call	_button_timer_interrupt	;wreg free
 19903                           
 19904                           ;tasks.h: 465: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value
      +                          ));
 19905  014466  0E40               	movlw	low (_port+23)
 19906  014468  0100               	movlb	0	; () banked
 19907  01446A  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19908  01446C  0E01               	movlw	high (_port+23)
 19909  01446E  0100               	movlb	0	; () banked
 19910  014470  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19911  014472  0E01               	movlw	1
 19912  014474  EC1F  F0AB         	call	_CTMU_read
 19913  014478  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19914  01447C  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19915  014480  C144  F07E         	movff	_port+27,___lwdiv@divisor
 19916  014484  C145  F07F         	movff	_port+28,___lwdiv@divisor+1
 19917  014488  ECED  F0B2         	call	___lwdiv	;wreg free
 19918  01448C  0100               	movlb	0	; () banked
 19919  01448E  517C               	movf	?___lwdiv& (0+255),w,b
 19920  014490  0100               	movlb	0	; () banked
 19921  014492  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19922  014494  A4D8               	btfss	status,2,c
 19923  014496  D002               	goto	u14200
 19924  014498  0E01               	movlw	1
 19925  01449A  D001               	goto	u14210
 19926  01449C                     u14200:
 19927  01449C  0E00               	movlw	0
 19928  01449E                     u14210:
 19929  01449E  0100               	movlb	0	; () banked
 19930  0144A0  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19931  0144A2  ECD7  F092         	call	_button_timer_interrupt	;wreg free
 19932                           
 19933                           ;tasks.h: 466: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value
      +                          ));
 19934  0144A6  0E57               	movlw	low (_port+46)
 19935  0144A8  0100               	movlb	0	; () banked
 19936  0144AA  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19937  0144AC  0E01               	movlw	high (_port+46)
 19938  0144AE  0100               	movlb	0	; () banked
 19939  0144B0  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19940  0144B2  0E02               	movlw	2
 19941  0144B4  EC1F  F0AB         	call	_CTMU_read
 19942  0144B8  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19943  0144BC  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19944  0144C0  C15B  F07E         	movff	_port+50,___lwdiv@divisor
 19945  0144C4  C15C  F07F         	movff	_port+51,___lwdiv@divisor+1
 19946  0144C8  ECED  F0B2         	call	___lwdiv	;wreg free
 19947  0144CC  0100               	movlb	0	; () banked
 19948  0144CE  517C               	movf	?___lwdiv& (0+255),w,b
 19949  0144D0  0100               	movlb	0	; () banked
 19950  0144D2  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19951  0144D4  A4D8               	btfss	status,2,c
 19952  0144D6  D002               	goto	u14220
 19953  0144D8  0E01               	movlw	1
 19954  0144DA  D001               	goto	u14230
 19955  0144DC                     u14220:
 19956  0144DC  0E00               	movlw	0
 19957  0144DE                     u14230:
 19958  0144DE  0100               	movlb	0	; () banked
 19959  0144E0  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19960  0144E2  ECD7  F092         	call	_button_timer_interrupt	;wreg free
 19961                           
 19962                           ;tasks.h: 467: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19963  0144E6  0E8C               	movlw	low _ctmu_m
 19964  0144E8  0100               	movlb	0	; () banked
 19965  0144EA  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19966  0144EC  0E01               	movlw	high _ctmu_m
 19967  0144EE  0100               	movlb	0	; () banked
 19968  0144F0  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19969  0144F2  0E03               	movlw	3
 19970  0144F4  EC1F  F0AB         	call	_CTMU_read
 19971  0144F8  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19972  0144FC  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19973  014500  C119  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19974  014504  C11A  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19975  014508  ECED  F0B2         	call	___lwdiv	;wreg free
 19976  01450C  0100               	movlb	0	; () banked
 19977  01450E  517C               	movf	?___lwdiv& (0+255),w,b
 19978  014510  0100               	movlb	0	; () banked
 19979  014512  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19980  014514  A4D8               	btfss	status,2,c
 19981  014516  D002               	goto	u14240
 19982  014518  0E01               	movlw	1
 19983  01451A  D001               	goto	u14250
 19984  01451C                     u14240:
 19985  01451C  0E00               	movlw	0
 19986  01451E                     u14250:
 19987  01451E  0100               	movlb	0	; () banked
 19988  014520  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19989  014522  ECD7  F092         	call	_button_timer_interrupt	;wreg free
 19990  014526  0012               	return		;funcret
 19991  014528                     __end_of_ctmu_sampling:
 19992                           	opt stack 0
 19993                           tblptru	equ	0xFF8
 19994                           tblptrh	equ	0xFF7
 19995                           tblptrl	equ	0xFF6
 19996                           tablat	equ	0xFF5
 19997                           prodh	equ	0xFF4
 19998                           prodl	equ	0xFF3
 19999                           intcon	equ	0xFF2
 20000                           intcon2	equ	0xFF1
 20001                           postinc0	equ	0xFEE
 20002                           wreg	equ	0xFE8
 20003                           indf1	equ	0xFE7
 20004                           postinc1	equ	0xFE6
 20005                           postdec1	equ	0xFE5
 20006                           fsr1h	equ	0xFE2
 20007                           fsr1l	equ	0xFE1
 20008                           indf2	equ	0xFDF
 20009                           postinc2	equ	0xFDE
 20010                           postdec2	equ	0xFDD
 20011                           plusw2	equ	0xFDB
 20012                           fsr2h	equ	0xFDA
 20013                           fsr2l	equ	0xFD9
 20014                           status	equ	0xFD8
 20015                           
 20016 ;; *************** function _button_timer_interrupt *****************
 20017 ;; Defined at:
 20018 ;;		line 51 in file "../My_header\My_button.h"
 20019 ;; Parameters:    Size  Location     Type
 20020 ;;  bt              2   35[BANK0 ] PTR struct button
 20021 ;;		 -> ctmu_m(4), port(69), 
 20022 ;;  sw_value        1   37[BANK0 ] unsigned char 
 20023 ;; Auto vars:     Size  Location     Type
 20024 ;;		None
 20025 ;; Return value:  Size  Location     Type
 20026 ;;		None               void
 20027 ;; Registers used:
 20028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20029 ;; Tracked objects:
 20030 ;;		On entry : 0/0
 20031 ;;		On exit  : 0/0
 20032 ;;		Unchanged: 0/0
 20033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20038 ;;Total ram usage:        5 bytes
 20039 ;; Hardware stack levels used:    1
 20040 ;; Hardware stack levels required when called:   11
 20041 ;; This function calls:
 20042 ;;		Nothing
 20043 ;; This function is called by:
 20044 ;;		_ctmu_sampling
 20045 ;; This function uses a non-reentrant model
 20046 ;;
 20047                           
 20048                           	psect	text77
 20049  0125AE                     __ptext77:
 20050                           	opt stack 0
 20051  0125AE                     _button_timer_interrupt:
 20052                           	opt stack 17
 20053                           
 20054                           ;My_header\My_button.h: 52: if (sw_value) {
 20055                           
 20056                           ;incstack = 0
 20057  0125AE  0100               	movlb	0	; () banked
 20058  0125B0  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 20059  0125B2  0100               	movlb	0	; () banked
 20060  0125B4  B4D8               	btfsc	status,2,c
 20061  0125B6  D0A8               	goto	l7900
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 20065  0125B8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20066  0125BC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20067  0125C0  0E84               	movlw	132
 20068  0125C2  18DE               	xorwf	postinc2,w,c
 20069  0125C4  E10D               	bnz	l868
 20070  0125C6  0E03               	movlw	3
 20071  0125C8  18DE               	xorwf	postinc2,w,c
 20072  0125CA  A4D8               	btfss	status,2,c
 20073  0125CC  D009               	goto	l868
 20074                           
 20075                           ; BSR set to: 0
 20076  0125CE  0100               	movlb	0	; () banked
 20077  0125D0  EE20 F003          	lfsr	2,3
 20078  0125D4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20079  0125D6  26D9               	addwf	fsr2l,f,c
 20080  0125D8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20081  0125DA  22DA               	addwfc	fsr2h,f,c
 20082  0125DC  0100               	movlb	0	; () banked
 20083  0125DE  8EDF               	bsf	indf2,7,c
 20084  0125E0                     l868:
 20085                           
 20086                           ; BSR set to: 0
 20087                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 20088  0125E0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20089  0125E4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20090  0125E8  0EBC               	movlw	188
 20091  0125EA  18DE               	xorwf	postinc2,w,c
 20092  0125EC  E10D               	bnz	l869
 20093  0125EE  0E02               	movlw	2
 20094  0125F0  18DE               	xorwf	postinc2,w,c
 20095  0125F2  A4D8               	btfss	status,2,c
 20096  0125F4  D009               	goto	l869
 20097                           
 20098                           ; BSR set to: 0
 20099  0125F6  0100               	movlb	0	; () banked
 20100  0125F8  EE20 F003          	lfsr	2,3
 20101  0125FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20102  0125FE  26D9               	addwf	fsr2l,f,c
 20103  012600  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20104  012602  22DA               	addwfc	fsr2h,f,c
 20105  012604  0100               	movlb	0	; () banked
 20106  012606  8CDF               	bsf	indf2,6,c
 20107  012608                     l869:
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 20111  012608  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20112  01260C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20113  012610  0EF4               	movlw	244
 20114  012612  18DE               	xorwf	postinc2,w,c
 20115  012614  E10C               	bnz	l870
 20116  012616  04DE               	decf	postinc2,w,c
 20117  012618  A4D8               	btfss	status,2,c
 20118  01261A  D009               	goto	l870
 20119                           
 20120                           ; BSR set to: 0
 20121  01261C  0100               	movlb	0	; () banked
 20122  01261E  EE20 F003          	lfsr	2,3
 20123  012622  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20124  012624  26D9               	addwf	fsr2l,f,c
 20125  012626  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20126  012628  22DA               	addwfc	fsr2h,f,c
 20127  01262A  0100               	movlb	0	; () banked
 20128  01262C  8ADF               	bsf	indf2,5,c
 20129  01262E                     l870:
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 20133  01262E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20134  012632  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20135  012636  0E2C               	movlw	44
 20136  012638  18DE               	xorwf	postinc2,w,c
 20137  01263A  E10C               	bnz	l871
 20138  01263C  04DE               	decf	postinc2,w,c
 20139  01263E  A4D8               	btfss	status,2,c
 20140  012640  D009               	goto	l871
 20141                           
 20142                           ; BSR set to: 0
 20143  012642  0100               	movlb	0	; () banked
 20144  012644  EE20 F003          	lfsr	2,3
 20145  012648  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20146  01264A  26D9               	addwf	fsr2l,f,c
 20147  01264C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20148  01264E  22DA               	addwfc	fsr2h,f,c
 20149  012650  0100               	movlb	0	; () banked
 20150  012652  88DF               	bsf	indf2,4,c
 20151  012654                     l871:
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 20155  012654  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20156  012658  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20157  01265C  0E96               	movlw	150
 20158  01265E  18DE               	xorwf	postinc2,w,c
 20159  012660  10DE               	iorwf	postinc2,w,c
 20160  012662  A4D8               	btfss	status,2,c
 20161  012664  D009               	goto	l872
 20162                           
 20163                           ; BSR set to: 0
 20164  012666  0100               	movlb	0	; () banked
 20165  012668  EE20 F003          	lfsr	2,3
 20166  01266C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20167  01266E  26D9               	addwf	fsr2l,f,c
 20168  012670  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20169  012672  22DA               	addwfc	fsr2h,f,c
 20170  012674  0100               	movlb	0	; () banked
 20171  012676  86DF               	bsf	indf2,3,c
 20172  012678                     l872:
 20173                           
 20174                           ; BSR set to: 0
 20175                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 20176  012678  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20177  01267C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20178  012680  0E3C               	movlw	60
 20179  012682  18DE               	xorwf	postinc2,w,c
 20180  012684  10DE               	iorwf	postinc2,w,c
 20181  012686  A4D8               	btfss	status,2,c
 20182  012688  D009               	goto	l873
 20183                           
 20184                           ; BSR set to: 0
 20185  01268A  0100               	movlb	0	; () banked
 20186  01268C  EE20 F003          	lfsr	2,3
 20187  012690  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20188  012692  26D9               	addwf	fsr2l,f,c
 20189  012694  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20190  012696  22DA               	addwfc	fsr2h,f,c
 20191  012698  0100               	movlb	0	; () banked
 20192  01269A  84DF               	bsf	indf2,2,c
 20193  01269C                     l873:
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 20197  01269C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20198  0126A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20199  0126A4  0E10               	movlw	16
 20200  0126A6  18DE               	xorwf	postinc2,w,c
 20201  0126A8  10DE               	iorwf	postinc2,w,c
 20202  0126AA  A4D8               	btfss	status,2,c
 20203  0126AC  D009               	goto	l874
 20204                           
 20205                           ; BSR set to: 0
 20206  0126AE  0100               	movlb	0	; () banked
 20207  0126B0  EE20 F003          	lfsr	2,3
 20208  0126B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20209  0126B6  26D9               	addwf	fsr2l,f,c
 20210  0126B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20211  0126BA  22DA               	addwfc	fsr2h,f,c
 20212  0126BC  0100               	movlb	0	; () banked
 20213  0126BE  82DF               	bsf	indf2,1,c
 20214  0126C0                     l874:
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 20218  0126C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20219  0126C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20220  0126C8  0E02               	movlw	2
 20221  0126CA  18DE               	xorwf	postinc2,w,c
 20222  0126CC  10DE               	iorwf	postinc2,w,c
 20223  0126CE  A4D8               	btfss	status,2,c
 20224  0126D0  D009               	goto	l875
 20225                           
 20226                           ; BSR set to: 0
 20227  0126D2  0100               	movlb	0	; () banked
 20228  0126D4  EE20 F003          	lfsr	2,3
 20229  0126D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20230  0126DA  26D9               	addwf	fsr2l,f,c
 20231  0126DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20232  0126DE  22DA               	addwfc	fsr2h,f,c
 20233  0126E0  0100               	movlb	0	; () banked
 20234  0126E2  80DF               	bsf	indf2,0,c
 20235  0126E4                     l875:
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 20239  0126E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20240  0126E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20241  0126EC  0E85               	movlw	133
 20242  0126EE  5CDE               	subwf	postinc2,w,c
 20243  0126F0  0E03               	movlw	3
 20244  0126F2  58DE               	subwfb	postinc2,w,c
 20245  0126F4  B0D8               	btfsc	status,0,c
 20246  0126F6  0012               	return	
 20247                           
 20248                           ; BSR set to: 0
 20249  0126F8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20250  0126FC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20251  012700  2ADE               	incf	postinc2,f,c
 20252  012702  0E00               	movlw	0
 20253  012704  22DD               	addwfc	postdec2,f,c
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;My_header\My_button.h: 62: } else {
 20257  012706  0012               	return	
 20258  012708                     l7900:
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 20262  012708  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20263  01270C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20264  012710  0E84               	movlw	132
 20265  012712  5CDE               	subwf	postinc2,w,c
 20266  012714  0E03               	movlw	3
 20267  012716  58DE               	subwfb	postinc2,w,c
 20268  012718  A0D8               	btfss	status,0,c
 20269  01271A  D00A               	goto	l7904
 20270                           
 20271                           ; BSR set to: 0
 20272  01271C  0100               	movlb	0	; () banked
 20273  01271E  EE20 F002          	lfsr	2,2
 20274  012722  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20275  012724  26D9               	addwf	fsr2l,f,c
 20276  012726  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20277  012728  22DA               	addwfc	fsr2h,f,c
 20278  01272A  0100               	movlb	0	; () banked
 20279  01272C  8EDF               	bsf	indf2,7,c
 20280  01272E  D08F               	goto	l7932
 20281  012730                     l7904:
 20282                           
 20283                           ; BSR set to: 0
 20284                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 20285  012730  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20286  012734  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20287  012738  0EBC               	movlw	188
 20288  01273A  5CDE               	subwf	postinc2,w,c
 20289  01273C  0E02               	movlw	2
 20290  01273E  58DE               	subwfb	postinc2,w,c
 20291  012740  A0D8               	btfss	status,0,c
 20292  012742  D00A               	goto	l7908
 20293                           
 20294                           ; BSR set to: 0
 20295  012744  0100               	movlb	0	; () banked
 20296  012746  EE20 F002          	lfsr	2,2
 20297  01274A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20298  01274C  26D9               	addwf	fsr2l,f,c
 20299  01274E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20300  012750  22DA               	addwfc	fsr2h,f,c
 20301  012752  0100               	movlb	0	; () banked
 20302  012754  8CDF               	bsf	indf2,6,c
 20303  012756  D07B               	goto	l7932
 20304  012758                     l7908:
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 20308  012758  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20309  01275C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20310  012760  0EF4               	movlw	244
 20311  012762  5CDE               	subwf	postinc2,w,c
 20312  012764  0E01               	movlw	1
 20313  012766  58DE               	subwfb	postinc2,w,c
 20314  012768  A0D8               	btfss	status,0,c
 20315  01276A  D00A               	goto	l7912
 20316                           
 20317                           ; BSR set to: 0
 20318  01276C  0100               	movlb	0	; () banked
 20319  01276E  EE20 F002          	lfsr	2,2
 20320  012772  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20321  012774  26D9               	addwf	fsr2l,f,c
 20322  012776  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20323  012778  22DA               	addwfc	fsr2h,f,c
 20324  01277A  0100               	movlb	0	; () banked
 20325  01277C  8ADF               	bsf	indf2,5,c
 20326  01277E  D067               	goto	l7932
 20327  012780                     l7912:
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 20331  012780  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20332  012784  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20333  012788  0E2C               	movlw	44
 20334  01278A  5CDE               	subwf	postinc2,w,c
 20335  01278C  0E01               	movlw	1
 20336  01278E  58DE               	subwfb	postinc2,w,c
 20337  012790  A0D8               	btfss	status,0,c
 20338  012792  D00A               	goto	l7916
 20339                           
 20340                           ; BSR set to: 0
 20341  012794  0100               	movlb	0	; () banked
 20342  012796  EE20 F002          	lfsr	2,2
 20343  01279A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20344  01279C  26D9               	addwf	fsr2l,f,c
 20345  01279E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20346  0127A0  22DA               	addwfc	fsr2h,f,c
 20347  0127A2  0100               	movlb	0	; () banked
 20348  0127A4  88DF               	bsf	indf2,4,c
 20349  0127A6  D053               	goto	l7932
 20350  0127A8                     l7916:
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 20354  0127A8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20355  0127AC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20356  0127B0  0E01               	movlw	1
 20357  0127B2  50DB               	movf	plusw2,w,c
 20358  0127B4  E104               	bnz	u8150
 20359  0127B6  0E96               	movlw	150
 20360  0127B8  5CDE               	subwf	postinc2,w,c
 20361  0127BA  A0D8               	btfss	status,0,c
 20362  0127BC  D00A               	goto	l7920
 20363  0127BE                     u8150:
 20364                           
 20365                           ; BSR set to: 0
 20366  0127BE  0100               	movlb	0	; () banked
 20367  0127C0  EE20 F002          	lfsr	2,2
 20368  0127C4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20369  0127C6  26D9               	addwf	fsr2l,f,c
 20370  0127C8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20371  0127CA  22DA               	addwfc	fsr2h,f,c
 20372  0127CC  0100               	movlb	0	; () banked
 20373  0127CE  86DF               	bsf	indf2,3,c
 20374  0127D0  D03E               	goto	l7932
 20375  0127D2                     l7920:
 20376                           
 20377                           ; BSR set to: 0
 20378                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 20379  0127D2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20380  0127D6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20381  0127DA  0E01               	movlw	1
 20382  0127DC  50DB               	movf	plusw2,w,c
 20383  0127DE  E104               	bnz	u8160
 20384  0127E0  0E3C               	movlw	60
 20385  0127E2  5CDE               	subwf	postinc2,w,c
 20386  0127E4  A0D8               	btfss	status,0,c
 20387  0127E6  D00A               	goto	l7924
 20388  0127E8                     u8160:
 20389                           
 20390                           ; BSR set to: 0
 20391  0127E8  0100               	movlb	0	; () banked
 20392  0127EA  EE20 F002          	lfsr	2,2
 20393  0127EE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20394  0127F0  26D9               	addwf	fsr2l,f,c
 20395  0127F2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20396  0127F4  22DA               	addwfc	fsr2h,f,c
 20397  0127F6  0100               	movlb	0	; () banked
 20398  0127F8  84DF               	bsf	indf2,2,c
 20399  0127FA  D029               	goto	l7932
 20400  0127FC                     l7924:
 20401                           
 20402                           ; BSR set to: 0
 20403                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 20404  0127FC  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20405  012800  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20406  012804  0E01               	movlw	1
 20407  012806  50DB               	movf	plusw2,w,c
 20408  012808  E104               	bnz	u8170
 20409  01280A  0E10               	movlw	16
 20410  01280C  5CDE               	subwf	postinc2,w,c
 20411  01280E  A0D8               	btfss	status,0,c
 20412  012810  D00A               	goto	l7928
 20413  012812                     u8170:
 20414                           
 20415                           ; BSR set to: 0
 20416  012812  0100               	movlb	0	; () banked
 20417  012814  EE20 F002          	lfsr	2,2
 20418  012818  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20419  01281A  26D9               	addwf	fsr2l,f,c
 20420  01281C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20421  01281E  22DA               	addwfc	fsr2h,f,c
 20422  012820  0100               	movlb	0	; () banked
 20423  012822  82DF               	bsf	indf2,1,c
 20424  012824  D014               	goto	l7932
 20425  012826                     l7928:
 20426                           
 20427                           ; BSR set to: 0
 20428                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 20429  012826  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20430  01282A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20431  01282E  0E01               	movlw	1
 20432  012830  50DB               	movf	plusw2,w,c
 20433  012832  E104               	bnz	u8180
 20434  012834  0E02               	movlw	2
 20435  012836  5CDE               	subwf	postinc2,w,c
 20436  012838  A0D8               	btfss	status,0,c
 20437  01283A  D009               	goto	l7932
 20438  01283C                     u8180:
 20439                           
 20440                           ; BSR set to: 0
 20441  01283C  0100               	movlb	0	; () banked
 20442  01283E  EE20 F002          	lfsr	2,2
 20443  012842  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20444  012844  26D9               	addwf	fsr2l,f,c
 20445  012846  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20446  012848  22DA               	addwfc	fsr2h,f,c
 20447  01284A  0100               	movlb	0	; () banked
 20448  01284C  80DF               	bsf	indf2,0,c
 20449  01284E                     l7932:
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 20453  01284E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20454  012852  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20455  012856  0E00               	movlw	0
 20456  012858  6EDE               	movwf	postinc2,c
 20457  01285A  0E00               	movlw	0
 20458  01285C  6EDD               	movwf	postdec2,c
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 20462  01285E  0100               	movlb	0	; () banked
 20463  012860  EE20 F002          	lfsr	2,2
 20464  012864  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20465  012866  26D9               	addwf	fsr2l,f,c
 20466  012868  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20467  01286A  22DA               	addwfc	fsr2h,f,c
 20468  01286C  0EFF               	movlw	255
 20469  01286E  16DE               	andwf	postinc2,f,c
 20470  012870  0E00               	movlw	0
 20471  012872  16DD               	andwf	postdec2,f,c
 20472  012874  0012               	return	
 20473  012876                     __end_of_button_timer_interrupt:
 20474                           	opt stack 0
 20475                           tblptru	equ	0xFF8
 20476                           tblptrh	equ	0xFF7
 20477                           tblptrl	equ	0xFF6
 20478                           tablat	equ	0xFF5
 20479                           prodh	equ	0xFF4
 20480                           prodl	equ	0xFF3
 20481                           intcon	equ	0xFF2
 20482                           intcon2	equ	0xFF1
 20483                           postinc0	equ	0xFEE
 20484                           wreg	equ	0xFE8
 20485                           indf1	equ	0xFE7
 20486                           postinc1	equ	0xFE6
 20487                           postdec1	equ	0xFE5
 20488                           fsr1h	equ	0xFE2
 20489                           fsr1l	equ	0xFE1
 20490                           indf2	equ	0xFDF
 20491                           postinc2	equ	0xFDE
 20492                           postdec2	equ	0xFDD
 20493                           plusw2	equ	0xFDB
 20494                           fsr2h	equ	0xFDA
 20495                           fsr2l	equ	0xFD9
 20496                           status	equ	0xFD8
 20497                           
 20498 ;; *************** function ___lwdiv *****************
 20499 ;; Defined at:
 20500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 20501 ;; Parameters:    Size  Location     Type
 20502 ;;  dividend        2   28[BANK0 ] unsigned int 
 20503 ;;  divisor         2   30[BANK0 ] unsigned int 
 20504 ;; Auto vars:     Size  Location     Type
 20505 ;;  quotient        2   33[BANK0 ] unsigned int 
 20506 ;;  counter         1   32[BANK0 ] unsigned char 
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  2   28[BANK0 ] unsigned int 
 20509 ;; Registers used:
 20510 ;;		wreg, status,2, status,0
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20517 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20519 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20520 ;;Total ram usage:        7 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:   11
 20523 ;; This function calls:
 20524 ;;		Nothing
 20525 ;; This function is called by:
 20526 ;;		_ringbuf_put_num
 20527 ;;		_my_utoa
 20528 ;;		_display_LCD
 20529 ;;		_ctmu_set_ratio
 20530 ;;		_command_get_data
 20531 ;;		_ctmu_sampling
 20532 ;;		_normal_loop
 20533 ;;		_tx_sendn
 20534 ;; This function uses a non-reentrant model
 20535 ;;
 20536                           
 20537                           	psect	text78
 20538  0165DA                     __ptext78:
 20539                           	opt stack 0
 20540  0165DA                     ___lwdiv:
 20541                           	opt stack 17
 20542                           
 20543                           ; BSR set to: 0
 20544                           ;incstack = 0
 20545  0165DA  0E00               	movlw	0
 20546  0165DC  0100               	movlb	0	; () banked
 20547  0165DE  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20548  0165E0  0E00               	movlw	0
 20549  0165E2  6F81               	movwf	___lwdiv@quotient& (0+255),b
 20550                           
 20551                           ; BSR set to: 0
 20552  0165E4  0100               	movlb	0	; () banked
 20553  0165E6  517E               	movf	___lwdiv@divisor& (0+255),w,b
 20554  0165E8  0100               	movlb	0	; () banked
 20555  0165EA  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20556  0165EC  B4D8               	btfsc	status,2,c
 20557  0165EE  D02C               	goto	l2105
 20558                           
 20559                           ; BSR set to: 0
 20560  0165F0  0E01               	movlw	1
 20561  0165F2  0100               	movlb	0	; () banked
 20562  0165F4  6F80               	movwf	___lwdiv@counter& (0+255),b
 20563  0165F6  D006               	goto	l10524
 20564  0165F8                     l10522:
 20565                           
 20566                           ; BSR set to: 0
 20567  0165F8  0100               	movlb	0	; () banked
 20568  0165FA  90D8               	bcf	status,0,c
 20569  0165FC  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 20570  0165FE  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20571  016600  0100               	movlb	0	; () banked
 20572  016602  2B80               	incf	___lwdiv@counter& (0+255),f,b
 20573  016604                     l10524:
 20574                           
 20575                           ; BSR set to: 0
 20576  016604  0100               	movlb	0	; () banked
 20577  016606  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20578  016608  D7F7               	goto	l10522
 20579  01660A                     l10526:
 20580                           
 20581                           ; BSR set to: 0
 20582  01660A  0100               	movlb	0	; () banked
 20583  01660C  90D8               	bcf	status,0,c
 20584  01660E  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 20585  016610  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20586                           
 20587                           ; BSR set to: 0
 20588  016612  0100               	movlb	0	; () banked
 20589  016614  517E               	movf	___lwdiv@divisor& (0+255),w,b
 20590  016616  0100               	movlb	0	; () banked
 20591  016618  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 20592  01661A  0100               	movlb	0	; () banked
 20593  01661C  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20594  01661E  0100               	movlb	0	; () banked
 20595  016620  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20596  016622  A0D8               	btfss	status,0,c
 20597  016624  D00A               	goto	l10534
 20598                           
 20599                           ; BSR set to: 0
 20600  016626  0100               	movlb	0	; () banked
 20601  016628  517E               	movf	___lwdiv@divisor& (0+255),w,b
 20602  01662A  0100               	movlb	0	; () banked
 20603  01662C  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 20604  01662E  0100               	movlb	0	; () banked
 20605  016630  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20606  016632  0100               	movlb	0	; () banked
 20607  016634  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20608                           
 20609                           ; BSR set to: 0
 20610  016636  0100               	movlb	0	; () banked
 20611  016638  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 20612  01663A                     l10534:
 20613                           
 20614                           ; BSR set to: 0
 20615  01663A  0100               	movlb	0	; () banked
 20616  01663C  90D8               	bcf	status,0,c
 20617  01663E  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20618  016640  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 20619                           
 20620                           ; BSR set to: 0
 20621  016642  0100               	movlb	0	; () banked
 20622  016644  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 20623  016646  D7E1               	goto	l10526
 20624  016648                     l2105:
 20625                           
 20626                           ; BSR set to: 0
 20627  016648  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 20628  01664C  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20629                           
 20630                           ; BSR set to: 0
 20631  016650  0012               	return		;funcret
 20632  016652                     __end_of___lwdiv:
 20633                           	opt stack 0
 20634                           tblptru	equ	0xFF8
 20635                           tblptrh	equ	0xFF7
 20636                           tblptrl	equ	0xFF6
 20637                           tablat	equ	0xFF5
 20638                           prodh	equ	0xFF4
 20639                           prodl	equ	0xFF3
 20640                           intcon	equ	0xFF2
 20641                           intcon2	equ	0xFF1
 20642                           postinc0	equ	0xFEE
 20643                           wreg	equ	0xFE8
 20644                           indf1	equ	0xFE7
 20645                           postinc1	equ	0xFE6
 20646                           postdec1	equ	0xFE5
 20647                           fsr1h	equ	0xFE2
 20648                           fsr1l	equ	0xFE1
 20649                           indf2	equ	0xFDF
 20650                           postinc2	equ	0xFDE
 20651                           postdec2	equ	0xFDD
 20652                           plusw2	equ	0xFDB
 20653                           fsr2h	equ	0xFDA
 20654                           fsr2l	equ	0xFD9
 20655                           status	equ	0xFD8
 20656                           
 20657 ;; *************** function _CTMU_read *****************
 20658 ;; Defined at:
 20659 ;;		line 304 in file "../My_header\My_header.h"
 20660 ;; Parameters:    Size  Location     Type
 20661 ;;  ch              1    wreg     unsigned char 
 20662 ;; Auto vars:     Size  Location     Type
 20663 ;;  ch              1   16[BANK0 ] unsigned char 
 20664 ;;  i               1   21[BANK0 ] unsigned char 
 20665 ;;  sum             4   17[BANK0 ] unsigned long 
 20666 ;; Return value:  Size  Location     Type
 20667 ;;                  2   13[BANK0 ] unsigned int 
 20668 ;; Registers used:
 20669 ;;		wreg, status,2, status,0, cstack
 20670 ;; Tracked objects:
 20671 ;;		On entry : 0/0
 20672 ;;		On exit  : 0/0
 20673 ;;		Unchanged: 0/0
 20674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20676 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20678 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20679 ;;Total ram usage:        9 bytes
 20680 ;; Hardware stack levels used:    1
 20681 ;; Hardware stack levels required when called:   12
 20682 ;; This function calls:
 20683 ;;		___lldiv
 20684 ;; This function is called by:
 20685 ;;		_ctmu_set_ratio
 20686 ;;		_ctmu_sampling
 20687 ;; This function uses a non-reentrant model
 20688 ;;
 20689                           
 20690                           	psect	text79
 20691  01563E                     __ptext79:
 20692                           	opt stack 0
 20693  01563E                     _CTMU_read:
 20694                           	opt stack 16
 20695                           
 20696                           ; BSR set to: 0
 20697                           ;incstack = 0
 20698                           ;CTMU_read@ch stored from wreg
 20699  01563E  0100               	movlb	0	; () banked
 20700  015640  6F70               	movwf	CTMU_read@ch& (0+255),b
 20701                           
 20702                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 20703  015642  0E00               	movlw	0
 20704  015644  0100               	movlb	0	; () banked
 20705  015646  6F71               	movwf	CTMU_read@sum& (0+255),b
 20706  015648  0E00               	movlw	0
 20707  01564A  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 20708  01564C  0E00               	movlw	0
 20709  01564E  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 20710  015650  0E00               	movlw	0
 20711  015652  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 20712                           
 20713                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 20714  015654  0E00               	movlw	0
 20715  015656  0100               	movlb	0	; () banked
 20716  015658  6F75               	movwf	CTMU_read@i& (0+255),b
 20717  01565A                     l10660:
 20718                           
 20719                           ; BSR set to: 0
 20720  01565A  0E09               	movlw	9
 20721  01565C  0100               	movlb	0	; () banked
 20722  01565E  6575               	cpfsgt	CTMU_read@i& (0+255),b
 20723  015660  D001               	goto	l10664
 20724  015662  D02B               	goto	l10692
 20725  015664                     l10664:
 20726                           
 20727                           ; BSR set to: 0
 20728                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 20729  015664  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 20730  015668  0100               	movlb	0	; () banked
 20731  01566A  476F               	rlncf	??_CTMU_read& (0+255),f,b
 20732  01566C  476F               	rlncf	??_CTMU_read& (0+255),f,b
 20733  01566E  50C2               	movf	4034,w,c	;volatile
 20734  015670  0100               	movlb	0	; () banked
 20735  015672  196F               	xorwf	??_CTMU_read& (0+255),w,b
 20736  015674  0BC3               	andlw	-61
 20737  015676  196F               	xorwf	??_CTMU_read& (0+255),w,b
 20738  015678  6EC2               	movwf	4034,c	;volatile
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 20742  01567A  8EB3               	bsf	4019,7,c	;volatile
 20743                           
 20744                           ; BSR set to: 0
 20745                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 20746  01567C  90B2               	bcf	4018,0,c	;volatile
 20747                           
 20748                           ; BSR set to: 0
 20749                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 20750  01567E  92B2               	bcf	4018,1,c	;volatile
 20751                           
 20752                           ; BSR set to: 0
 20753                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 20754  015680  82B3               	bsf	4019,1,c	;volatile
 20755                           
 20756                           ; BSR set to: 0
 20757                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 20758  015682  0E50               	movlw	80
 20759  015684                     u15387:
 20760  015684  2EE8               	decfsz	wreg,f,c
 20761  015686  D7FE               	goto	u15387
 20762                           
 20763                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 20764  015688  92B3               	bcf	4019,1,c	;volatile
 20765                           
 20766                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 20767  01568A  80B2               	bsf	4018,0,c	;volatile
 20768                           
 20769                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 20770  01568C  0E14               	movlw	20
 20771  01568E                     u15397:
 20772  01568E  2EE8               	decfsz	wreg,f,c
 20773  015690  D7FE               	goto	u15397
 20774                           
 20775                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 20776  015692  90B2               	bcf	4018,0,c	;volatile
 20777                           
 20778                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 20779  015694  9C9E               	bcf	3998,6,c	;volatile
 20780                           
 20781                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 20782  015696  82C2               	bsf	4034,1,c	;volatile
 20783  015698                     l833:
 20784  015698  AC9E               	btfss	3998,6,c	;volatile
 20785  01569A  D7FE               	goto	l833
 20786                           
 20787                           ;My_header\My_header.h: 324: sum += ADRES;
 20788  01569C  50C3               	movf	4035,w,c	;volatile
 20789  01569E  0100               	movlb	0	; () banked
 20790  0156A0  2771               	addwf	CTMU_read@sum& (0+255),f,b
 20791  0156A2  50C4               	movf	4036,w,c	;volatile
 20792  0156A4  0100               	movlb	0	; () banked
 20793  0156A6  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 20794  0156A8  0E00               	movlw	0
 20795  0156AA  0100               	movlb	0	; () banked
 20796  0156AC  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 20797  0156AE  0E00               	movlw	0
 20798  0156B0  0100               	movlb	0	; () banked
 20799  0156B2  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 20800  0156B4  0100               	movlb	0	; () banked
 20801  0156B6  2B75               	incf	CTMU_read@i& (0+255),f,b
 20802  0156B8  D7D0               	goto	l10660
 20803  0156BA                     l10692:
 20804                           
 20805                           ; BSR set to: 0
 20806                           ;My_header\My_header.h: 325: }
 20807                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 20808  0156BA  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 20809  0156BE  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 20810  0156C2  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 20811  0156C6  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 20812  0156CA  0E0A               	movlw	10
 20813  0156CC  0100               	movlb	0	; () banked
 20814  0156CE  6F64               	movwf	___lldiv@divisor& (0+255),b
 20815  0156D0  0E00               	movlw	0
 20816  0156D2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 20817  0156D4  0E00               	movlw	0
 20818  0156D6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 20819  0156D8  0E00               	movlw	0
 20820  0156DA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 20821  0156DC  EC9E  F0AC         	call	___lldiv	;wreg free
 20822  0156E0  0E03               	movlw	3
 20823  0156E2  D007               	goto	u12440
 20824  0156E4                     u12445:
 20825  0156E4  0100               	movlb	0	; () banked
 20826  0156E6  90D8               	bcf	status,0,c
 20827  0156E8  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 20828  0156EA  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 20829  0156EC  0100               	movlb	0	; () banked
 20830  0156EE  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 20831  0156F0  3360               	rrcf	?___lldiv& (0+255),f,b
 20832  0156F2                     u12440:
 20833  0156F2  2EE8               	decfsz	wreg,f,c
 20834  0156F4  D7F7               	goto	u12445
 20835  0156F6  C060  F06D         	movff	?___lldiv,?_CTMU_read
 20836  0156FA  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 20837  0156FE  0012               	return	
 20838  015700                     __end_of_CTMU_read:
 20839                           	opt stack 0
 20840                           tblptru	equ	0xFF8
 20841                           tblptrh	equ	0xFF7
 20842                           tblptrl	equ	0xFF6
 20843                           tablat	equ	0xFF5
 20844                           prodh	equ	0xFF4
 20845                           prodl	equ	0xFF3
 20846                           intcon	equ	0xFF2
 20847                           intcon2	equ	0xFF1
 20848                           postinc0	equ	0xFEE
 20849                           wreg	equ	0xFE8
 20850                           indf1	equ	0xFE7
 20851                           postinc1	equ	0xFE6
 20852                           postdec1	equ	0xFE5
 20853                           fsr1h	equ	0xFE2
 20854                           fsr1l	equ	0xFE1
 20855                           indf2	equ	0xFDF
 20856                           postinc2	equ	0xFDE
 20857                           postdec2	equ	0xFDD
 20858                           plusw2	equ	0xFDB
 20859                           fsr2h	equ	0xFDA
 20860                           fsr2l	equ	0xFD9
 20861                           status	equ	0xFD8
 20862                           
 20863 ;; *************** function ___lldiv *****************
 20864 ;; Defined at:
 20865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 20866 ;; Parameters:    Size  Location     Type
 20867 ;;  dividend        4    0[BANK0 ] unsigned long 
 20868 ;;  divisor         4    4[BANK0 ] unsigned long 
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;  quotient        4    8[BANK0 ] unsigned long 
 20871 ;;  counter         1   12[BANK0 ] unsigned char 
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  4    0[BANK0 ] unsigned long 
 20874 ;; Registers used:
 20875 ;;		wreg, status,2, status,0
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/0
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20881 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20882 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20884 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20885 ;;Total ram usage:       13 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:   11
 20888 ;; This function calls:
 20889 ;;		Nothing
 20890 ;; This function is called by:
 20891 ;;		_CTMU_read
 20892 ;;		_get_quot_rem
 20893 ;;		_my_utoa32
 20894 ;;		_display_LCD
 20895 ;;		_command_get_data
 20896 ;;		_sprintf
 20897 ;; This function uses a non-reentrant model
 20898 ;;
 20899                           
 20900                           	psect	text80
 20901  01593C                     __ptext80:
 20902                           	opt stack 0
 20903  01593C                     ___lldiv:
 20904                           	opt stack 16
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;incstack = 0
 20908  01593C  0E00               	movlw	0
 20909  01593E  0100               	movlb	0	; () banked
 20910  015940  6F68               	movwf	___lldiv@quotient& (0+255),b
 20911  015942  0E00               	movlw	0
 20912  015944  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20913  015946  0E00               	movlw	0
 20914  015948  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20915  01594A  0E00               	movlw	0
 20916  01594C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20917                           
 20918                           ; BSR set to: 0
 20919  01594E  0100               	movlb	0	; () banked
 20920  015950  5164               	movf	___lldiv@divisor& (0+255),w,b
 20921  015952  0100               	movlb	0	; () banked
 20922  015954  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20923  015956  0100               	movlb	0	; () banked
 20924  015958  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20925  01595A  0100               	movlb	0	; () banked
 20926  01595C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20927  01595E  B4D8               	btfsc	status,2,c
 20928  015960  D042               	goto	l2052
 20929                           
 20930                           ; BSR set to: 0
 20931  015962  0E01               	movlw	1
 20932  015964  0100               	movlb	0	; () banked
 20933  015966  6F6C               	movwf	___lldiv@counter& (0+255),b
 20934  015968  D008               	goto	l10134
 20935  01596A                     l10132:
 20936                           
 20937                           ; BSR set to: 0
 20938  01596A  0100               	movlb	0	; () banked
 20939  01596C  90D8               	bcf	status,0,c
 20940  01596E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20941  015970  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20942  015972  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20943  015974  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20944  015976  0100               	movlb	0	; () banked
 20945  015978  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20946  01597A                     l10134:
 20947                           
 20948                           ; BSR set to: 0
 20949  01597A  0100               	movlb	0	; () banked
 20950  01597C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20951  01597E  D7F5               	goto	l10132
 20952  015980                     l10136:
 20953                           
 20954                           ; BSR set to: 0
 20955  015980  0100               	movlb	0	; () banked
 20956  015982  90D8               	bcf	status,0,c
 20957  015984  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20958  015986  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20959  015988  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20960  01598A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20961                           
 20962                           ; BSR set to: 0
 20963  01598C  0100               	movlb	0	; () banked
 20964  01598E  5164               	movf	___lldiv@divisor& (0+255),w,b
 20965  015990  0100               	movlb	0	; () banked
 20966  015992  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20967  015994  0100               	movlb	0	; () banked
 20968  015996  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20969  015998  0100               	movlb	0	; () banked
 20970  01599A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20971  01599C  0100               	movlb	0	; () banked
 20972  01599E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20973  0159A0  0100               	movlb	0	; () banked
 20974  0159A2  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20975  0159A4  0100               	movlb	0	; () banked
 20976  0159A6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20977  0159A8  0100               	movlb	0	; () banked
 20978  0159AA  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20979  0159AC  A0D8               	btfss	status,0,c
 20980  0159AE  D012               	goto	l10144
 20981                           
 20982                           ; BSR set to: 0
 20983  0159B0  0100               	movlb	0	; () banked
 20984  0159B2  5164               	movf	___lldiv@divisor& (0+255),w,b
 20985  0159B4  0100               	movlb	0	; () banked
 20986  0159B6  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20987  0159B8  0100               	movlb	0	; () banked
 20988  0159BA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20989  0159BC  0100               	movlb	0	; () banked
 20990  0159BE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20991  0159C0  0100               	movlb	0	; () banked
 20992  0159C2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20993  0159C4  0100               	movlb	0	; () banked
 20994  0159C6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20995  0159C8  0100               	movlb	0	; () banked
 20996  0159CA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20997  0159CC  0100               	movlb	0	; () banked
 20998  0159CE  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20999                           
 21000                           ; BSR set to: 0
 21001  0159D0  0100               	movlb	0	; () banked
 21002  0159D2  8168               	bsf	___lldiv@quotient& (0+255),0,b
 21003  0159D4                     l10144:
 21004                           
 21005                           ; BSR set to: 0
 21006  0159D4  0100               	movlb	0	; () banked
 21007  0159D6  90D8               	bcf	status,0,c
 21008  0159D8  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21009  0159DA  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21010  0159DC  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21011  0159DE  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 21012                           
 21013                           ; BSR set to: 0
 21014  0159E0  0100               	movlb	0	; () banked
 21015  0159E2  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 21016  0159E4  D7CD               	goto	l10136
 21017  0159E6                     l2052:
 21018                           
 21019                           ; BSR set to: 0
 21020  0159E6  C068  F060         	movff	___lldiv@quotient,?___lldiv
 21021  0159EA  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 21022  0159EE  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 21023  0159F2  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 21024                           
 21025                           ; BSR set to: 0
 21026  0159F6  0012               	return		;funcret
 21027  0159F8                     __end_of___lldiv:
 21028                           	opt stack 0
 21029                           tblptru	equ	0xFF8
 21030                           tblptrh	equ	0xFF7
 21031                           tblptrl	equ	0xFF6
 21032                           tablat	equ	0xFF5
 21033                           prodh	equ	0xFF4
 21034                           prodl	equ	0xFF3
 21035                           intcon	equ	0xFF2
 21036                           intcon2	equ	0xFF1
 21037                           postinc0	equ	0xFEE
 21038                           wreg	equ	0xFE8
 21039                           indf1	equ	0xFE7
 21040                           postinc1	equ	0xFE6
 21041                           postdec1	equ	0xFE5
 21042                           fsr1h	equ	0xFE2
 21043                           fsr1l	equ	0xFE1
 21044                           indf2	equ	0xFDF
 21045                           postinc2	equ	0xFDE
 21046                           postdec2	equ	0xFDD
 21047                           plusw2	equ	0xFDB
 21048                           fsr2h	equ	0xFDA
 21049                           fsr2l	equ	0xFD9
 21050                           status	equ	0xFD8
 21051                           
 21052 ;; *************** function _USB_loop *****************
 21053 ;; Defined at:
 21054 ;;		line 744 in file "tasks.h"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;		None
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;  rx_len          2   42[BANK0 ] int 
 21059 ;;  data            1   44[BANK0 ] unsigned char 
 21060 ;; Return value:  Size  Location     Type
 21061 ;;		None               void
 21062 ;; Registers used:
 21063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21064 ;; Tracked objects:
 21065 ;;		On entry : 0/0
 21066 ;;		On exit  : 0/0
 21067 ;;		Unchanged: 0/0
 21068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21070 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21072 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21073 ;;Total ram usage:        3 bytes
 21074 ;; Hardware stack levels used:    1
 21075 ;; Hardware stack levels required when called:   14
 21076 ;; This function calls:
 21077 ;;		_get_string_usb
 21078 ;;		_put_string_usb
 21079 ;;		_ringbuf_num
 21080 ;;		_ringbuf_pop
 21081 ;;		_ringbuf_put
 21082 ;; This function is called by:
 21083 ;;		_main
 21084 ;; This function uses a non-reentrant model
 21085 ;;
 21086                           
 21087                           	psect	text81
 21088  015FE6                     __ptext81:
 21089                           	opt stack 0
 21090  015FE6                     _USB_loop:
 21091                           	opt stack 16
 21092                           
 21093                           ;tasks.h: 745: char data;
 21094                           ;tasks.h: 746: int rx_len;
 21095                           ;tasks.h: 747: rx_len = get_string_usb(&data, 1);
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;incstack = 0
 21099  015FE6  0E8C               	movlw	low USB_loop@data
 21100  015FE8  0100               	movlb	0	; () banked
 21101  015FEA  6F6D               	movwf	get_string_usb@s& (0+255),b
 21102  015FEC  0E00               	movlw	high USB_loop@data
 21103  015FEE  0100               	movlb	0	; () banked
 21104  015FF0  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 21105  015FF2  0E00               	movlw	0
 21106  015FF4  0100               	movlb	0	; () banked
 21107  015FF6  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 21108  015FF8  0E01               	movlw	1
 21109  015FFA  6F6F               	movwf	get_string_usb@len& (0+255),b
 21110  015FFC  EC6A  F0B6         	call	_get_string_usb	;wreg free
 21111  016000  C06D  F08A         	movff	?_get_string_usb,USB_loop@rx_len
 21112  016004  C06E  F08B         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 21113                           
 21114                           ;tasks.h: 748: if (rx_len) {
 21115  016008  0100               	movlb	0	; () banked
 21116  01600A  518A               	movf	USB_loop@rx_len& (0+255),w,b
 21117  01600C  0100               	movlb	0	; () banked
 21118  01600E  118B               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 21119  016010  B4D8               	btfsc	status,2,c
 21120  016012  D00A               	goto	l1577
 21121                           
 21122                           ; BSR set to: 0
 21123                           ;tasks.h: 749: ringbuf_put(&usb_rx, data);
 21124  016014  0EE2               	movlw	low _usb_rx
 21125  016016  0100               	movlb	0	; () banked
 21126  016018  6F83               	movwf	ringbuf_put@rb& (0+255),b
 21127  01601A  0E02               	movlw	high _usb_rx
 21128  01601C  0100               	movlb	0	; () banked
 21129  01601E  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 21130  016020  C08C  F085         	movff	USB_loop@data,ringbuf_put@asciicode
 21131  016024  ECEE  F0A7         	call	_ringbuf_put	;wreg free
 21132  016028                     l1577:
 21133                           
 21134                           ;tasks.h: 750: }
 21135                           ;tasks.h: 751: if (ringbuf_num(&usb_tx)) {
 21136  016028  0E6E               	movlw	low _usb_tx
 21137  01602A  0100               	movlb	0	; () banked
 21138  01602C  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21139  01602E  0E01               	movlw	high _usb_tx
 21140  016030  0100               	movlb	0	; () banked
 21141  016032  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21142  016034  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 21143  016038  0100               	movlb	0	; () banked
 21144  01603A  5160               	movf	?_ringbuf_num& (0+255),w,b
 21145  01603C  0100               	movlb	0	; () banked
 21146  01603E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21147  016040  B4D8               	btfsc	status,2,c
 21148  016042  0012               	return	
 21149                           
 21150                           ; BSR set to: 0
 21151                           ;tasks.h: 752: data = ringbuf_pop(&usb_tx);
 21152  016044  0E6E               	movlw	low _usb_tx
 21153  016046  0100               	movlb	0	; () banked
 21154  016048  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21155  01604A  0E01               	movlw	high _usb_tx
 21156  01604C  0100               	movlb	0	; () banked
 21157  01604E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21158  016050  EC8E  F0A9         	call	_ringbuf_pop	;wreg free
 21159  016054  0100               	movlb	0	; () banked
 21160  016056  6F8C               	movwf	USB_loop@data& (0+255),b
 21161  016058                     l12246:
 21162                           
 21163                           ; BSR set to: 0
 21164  016058  0E8C               	movlw	low USB_loop@data
 21165  01605A  0100               	movlb	0	; () banked
 21166  01605C  6F6C               	movwf	put_string_usb@s& (0+255),b
 21167  01605E  0E00               	movlw	high USB_loop@data
 21168  016060  0100               	movlb	0	; () banked
 21169  016062  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 21170  016064  0E00               	movlw	0
 21171  016066  0100               	movlb	0	; () banked
 21172  016068  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 21173  01606A  0E01               	movlw	1
 21174  01606C  6F6E               	movwf	put_string_usb@len& (0+255),b
 21175  01606E  ECF6  F0B6         	call	_put_string_usb	;wreg free
 21176  016072  0100               	movlb	0	; () banked
 21177  016074  516C               	movf	?_put_string_usb& (0+255),w,b
 21178  016076  0100               	movlb	0	; () banked
 21179  016078  116D               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 21180  01607A  B4D8               	btfsc	status,2,c
 21181  01607C  0012               	return	
 21182  01607E  D7EC               	goto	l12246
 21183  016080                     __end_of_USB_loop:
 21184                           	opt stack 0
 21185                           tblptru	equ	0xFF8
 21186                           tblptrh	equ	0xFF7
 21187                           tblptrl	equ	0xFF6
 21188                           tablat	equ	0xFF5
 21189                           prodh	equ	0xFF4
 21190                           prodl	equ	0xFF3
 21191                           intcon	equ	0xFF2
 21192                           intcon2	equ	0xFF1
 21193                           postinc0	equ	0xFEE
 21194                           wreg	equ	0xFE8
 21195                           indf1	equ	0xFE7
 21196                           postinc1	equ	0xFE6
 21197                           postdec1	equ	0xFE5
 21198                           fsr1h	equ	0xFE2
 21199                           fsr1l	equ	0xFE1
 21200                           indf2	equ	0xFDF
 21201                           postinc2	equ	0xFDE
 21202                           postdec2	equ	0xFDD
 21203                           plusw2	equ	0xFDB
 21204                           fsr2h	equ	0xFDA
 21205                           fsr2l	equ	0xFD9
 21206                           status	equ	0xFD8
 21207                           
 21208 ;; *************** function _ringbuf_put *****************
 21209 ;; Defined at:
 21210 ;;		line 39 in file "../My_header\My_ringbuf.h"
 21211 ;; Parameters:    Size  Location     Type
 21212 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
 21213 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), rx_buf(8), 
 21214 ;;		 -> tx_buf(8), 
 21215 ;;  asciicode       1   37[BANK0 ] unsigned char 
 21216 ;; Auto vars:     Size  Location     Type
 21217 ;;		None
 21218 ;; Return value:  Size  Location     Type
 21219 ;;		None               void
 21220 ;; Registers used:
 21221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21222 ;; Tracked objects:
 21223 ;;		On entry : 0/0
 21224 ;;		On exit  : 0/0
 21225 ;;		Unchanged: 0/0
 21226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21227 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21231 ;;Total ram usage:        7 bytes
 21232 ;; Hardware stack levels used:    1
 21233 ;; Hardware stack levels required when called:   12
 21234 ;; This function calls:
 21235 ;;		_ringbuf_num
 21236 ;; This function is called by:
 21237 ;;		_ringbuf_put_num
 21238 ;;		_ringbuf_put_str
 21239 ;;		_my_terminal_loop
 21240 ;;		_command_get_data
 21241 ;;		_USB_loop
 21242 ;;		_UART_ISR
 21243 ;;		_tx_send
 21244 ;;		_tx_sends
 21245 ;; This function uses a non-reentrant model
 21246 ;;
 21247                           
 21248                           	psect	text82
 21249  014FDC                     __ptext82:
 21250                           	opt stack 0
 21251  014FDC                     _ringbuf_put:
 21252                           	opt stack 16
 21253                           
 21254                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;incstack = 0
 21258  014FDC  C083  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 21259  014FE0  C084  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 21260  014FE4  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 21261  014FE8  0100               	movlb	0	; () banked
 21262  014FEA  EE20 F002          	lfsr	2,2
 21263  014FEE  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21264  014FF0  26D9               	addwf	fsr2l,f,c
 21265  014FF2  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21266  014FF4  22DA               	addwfc	fsr2h,f,c
 21267  014FF6  50DE               	movf	postinc2,w,c
 21268  014FF8  0100               	movlb	0	; () banked
 21269  014FFA  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 21270  014FFC  50DE               	movf	postinc2,w,c
 21271  014FFE  0100               	movlb	0	; () banked
 21272  015000  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 21273  015002  B0D8               	btfsc	status,0,c
 21274  015004  0012               	return	
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 21278  015006  0100               	movlb	0	; () banked
 21279  015008  EE20 F004          	lfsr	2,4
 21280  01500C  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21281  01500E  26D9               	addwf	fsr2l,f,c
 21282  015010  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21283  015012  22DA               	addwfc	fsr2h,f,c
 21284  015014  CFDE F086          	movff	postinc2,??_ringbuf_put
 21285  015018  CFDD F087          	movff	postdec2,??_ringbuf_put+1
 21286  01501C  C083  FFD9         	movff	ringbuf_put@rb,fsr2l
 21287  015020  C084  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 21288  015024  CFDE F088          	movff	postinc2,??_ringbuf_put+2
 21289  015028  CFDD F089          	movff	postdec2,??_ringbuf_put+3
 21290  01502C  0100               	movlb	0	; () banked
 21291  01502E  5186               	movf	??_ringbuf_put& (0+255),w,b
 21292  015030  0100               	movlb	0	; () banked
 21293  015032  2588               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 21294  015034  6ED9               	movwf	fsr2l,c
 21295  015036  0100               	movlb	0	; () banked
 21296  015038  5187               	movf	(??_ringbuf_put+1)& (0+255),w,b
 21297  01503A  0100               	movlb	0	; () banked
 21298  01503C  2189               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 21299  01503E  6EDA               	movwf	fsr2h,c
 21300  015040  C085  FFDF         	movff	ringbuf_put@asciicode,indf2
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 21304  015044  0100               	movlb	0	; () banked
 21305  015046  EE20 F002          	lfsr	2,2
 21306  01504A  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21307  01504C  26D9               	addwf	fsr2l,f,c
 21308  01504E  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21309  015050  22DA               	addwfc	fsr2h,f,c
 21310  015052  0100               	movlb	0	; () banked
 21311  015054  EE10 F004          	lfsr	1,4
 21312  015058  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21313  01505A  26E1               	addwf	fsr1l,f,c
 21314  01505C  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21315  01505E  22E2               	addwfc	fsr1h,f,c
 21316  015060  CFE6 F088          	movff	postinc1,??_ringbuf_put+2
 21317  015064  CFE5 F089          	movff	postdec1,??_ringbuf_put+3
 21318  015068  0E01               	movlw	1
 21319  01506A  0100               	movlb	0	; () banked
 21320  01506C  2788               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 21321  01506E  0E00               	movlw	0
 21322  015070  2389               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 21323  015072  50DE               	movf	postinc2,w,c
 21324  015074  0100               	movlb	0	; () banked
 21325  015076  5D88               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 21326  015078  50DE               	movf	postinc2,w,c
 21327  01507A  0100               	movlb	0	; () banked
 21328  01507C  5989               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 21329  01507E  B0D8               	btfsc	status,0,c
 21330  015080  D00B               	goto	l10156
 21331                           
 21332                           ; BSR set to: 0
 21333  015082  0100               	movlb	0	; () banked
 21334  015084  EE20 F004          	lfsr	2,4
 21335  015088  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21336  01508A  26D9               	addwf	fsr2l,f,c
 21337  01508C  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21338  01508E  22DA               	addwfc	fsr2h,f,c
 21339  015090  2ADE               	incf	postinc2,f,c
 21340  015092  0E00               	movlw	0
 21341  015094  22DD               	addwfc	postdec2,f,c
 21342  015096  0012               	return	
 21343  015098                     l10156:
 21344                           
 21345                           ; BSR set to: 0
 21346                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 21347  015098  0100               	movlb	0	; () banked
 21348  01509A  EE20 F004          	lfsr	2,4
 21349  01509E  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21350  0150A0  26D9               	addwf	fsr2l,f,c
 21351  0150A2  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21352  0150A4  22DA               	addwfc	fsr2h,f,c
 21353  0150A6  0E00               	movlw	0
 21354  0150A8  6EDE               	movwf	postinc2,c
 21355  0150AA  0E00               	movlw	0
 21356  0150AC  6EDD               	movwf	postdec2,c
 21357                           
 21358                           ; BSR set to: 0
 21359  0150AE  0012               	return	
 21360  0150B0                     __end_of_ringbuf_put:
 21361                           	opt stack 0
 21362                           tblptru	equ	0xFF8
 21363                           tblptrh	equ	0xFF7
 21364                           tblptrl	equ	0xFF6
 21365                           tablat	equ	0xFF5
 21366                           prodh	equ	0xFF4
 21367                           prodl	equ	0xFF3
 21368                           intcon	equ	0xFF2
 21369                           intcon2	equ	0xFF1
 21370                           postinc0	equ	0xFEE
 21371                           wreg	equ	0xFE8
 21372                           indf1	equ	0xFE7
 21373                           postinc1	equ	0xFE6
 21374                           postdec1	equ	0xFE5
 21375                           fsr1h	equ	0xFE2
 21376                           fsr1l	equ	0xFE1
 21377                           indf2	equ	0xFDF
 21378                           postinc2	equ	0xFDE
 21379                           postdec2	equ	0xFDD
 21380                           plusw2	equ	0xFDB
 21381                           fsr2h	equ	0xFDA
 21382                           fsr2l	equ	0xFD9
 21383                           status	equ	0xFD8
 21384                           
 21385 ;; *************** function _ringbuf_pop *****************
 21386 ;; Defined at:
 21387 ;;		line 64 in file "../My_header\My_ringbuf.h"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 21390 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), tx_buf(8), 
 21391 ;; Auto vars:     Size  Location     Type
 21392 ;;  ret             1   14[BANK0 ] unsigned char 
 21393 ;; Return value:  Size  Location     Type
 21394 ;;                  1    wreg      unsigned char 
 21395 ;; Registers used:
 21396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21397 ;; Tracked objects:
 21398 ;;		On entry : 0/0
 21399 ;;		On exit  : 0/0
 21400 ;;		Unchanged: 0/0
 21401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21405 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21406 ;;Total ram usage:        7 bytes
 21407 ;; Hardware stack levels used:    1
 21408 ;; Hardware stack levels required when called:   12
 21409 ;; This function calls:
 21410 ;;		_ringbuf_num
 21411 ;; This function is called by:
 21412 ;;		_my_terminal_loop
 21413 ;;		_USB_loop
 21414 ;;		_UART_ISR
 21415 ;; This function uses a non-reentrant model
 21416 ;;
 21417                           
 21418                           	psect	text83
 21419  01531C                     __ptext83:
 21420                           	opt stack 0
 21421  01531C                     _ringbuf_pop:
 21422                           	opt stack 17
 21423                           
 21424                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;incstack = 0
 21428  01531C  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 21429  015320  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 21430  015324  ECFD  F0A3         	call	_ringbuf_num	;wreg free
 21431  015328  0100               	movlb	0	; () banked
 21432  01532A  5160               	movf	?_ringbuf_num& (0+255),w,b
 21433  01532C  0100               	movlb	0	; () banked
 21434  01532E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21435  015330  B4D8               	btfsc	status,2,c
 21436  015332  D058               	goto	l11480
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 21440  015334  0100               	movlb	0	; () banked
 21441  015336  EE20 F006          	lfsr	2,6
 21442  01533A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21443  01533C  26D9               	addwf	fsr2l,f,c
 21444  01533E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21445  015340  22DA               	addwfc	fsr2h,f,c
 21446  015342  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 21447  015346  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 21448  01534A  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 21449  01534E  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 21450  015352  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 21451  015356  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 21452  01535A  0100               	movlb	0	; () banked
 21453  01535C  516A               	movf	??_ringbuf_pop& (0+255),w,b
 21454  01535E  0100               	movlb	0	; () banked
 21455  015360  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 21456  015362  6ED9               	movwf	fsr2l,c
 21457  015364  0100               	movlb	0	; () banked
 21458  015366  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 21459  015368  0100               	movlb	0	; () banked
 21460  01536A  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 21461  01536C  6EDA               	movwf	fsr2h,c
 21462  01536E  50DF               	movf	indf2,w,c
 21463  015370  0100               	movlb	0	; () banked
 21464  015372  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 21468  015374  0100               	movlb	0	; () banked
 21469  015376  EE20 F002          	lfsr	2,2
 21470  01537A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21471  01537C  26D9               	addwf	fsr2l,f,c
 21472  01537E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21473  015380  22DA               	addwfc	fsr2h,f,c
 21474  015382  0100               	movlb	0	; () banked
 21475  015384  EE10 F006          	lfsr	1,6
 21476  015388  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21477  01538A  26E1               	addwf	fsr1l,f,c
 21478  01538C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21479  01538E  22E2               	addwfc	fsr1h,f,c
 21480  015390  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 21481  015394  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 21482  015398  0E01               	movlw	1
 21483  01539A  0100               	movlb	0	; () banked
 21484  01539C  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 21485  01539E  0E00               	movlw	0
 21486  0153A0  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 21487  0153A2  50DE               	movf	postinc2,w,c
 21488  0153A4  0100               	movlb	0	; () banked
 21489  0153A6  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 21490  0153A8  50DE               	movf	postinc2,w,c
 21491  0153AA  0100               	movlb	0	; () banked
 21492  0153AC  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 21493  0153AE  B0D8               	btfsc	status,0,c
 21494  0153B0  D00B               	goto	l11472
 21495                           
 21496                           ; BSR set to: 0
 21497                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 21498  0153B2  0100               	movlb	0	; () banked
 21499  0153B4  EE20 F006          	lfsr	2,6
 21500  0153B8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21501  0153BA  26D9               	addwf	fsr2l,f,c
 21502  0153BC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21503  0153BE  22DA               	addwfc	fsr2h,f,c
 21504  0153C0  2ADE               	incf	postinc2,f,c
 21505  0153C2  0E00               	movlw	0
 21506  0153C4  22DD               	addwfc	postdec2,f,c
 21507                           
 21508                           ;My_header\My_ringbuf.h: 69: } else {
 21509  0153C6  D00B               	goto	l11474
 21510  0153C8                     l11472:
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 21514  0153C8  0100               	movlb	0	; () banked
 21515  0153CA  EE20 F006          	lfsr	2,6
 21516  0153CE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21517  0153D0  26D9               	addwf	fsr2l,f,c
 21518  0153D2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21519  0153D4  22DA               	addwfc	fsr2h,f,c
 21520  0153D6  0E00               	movlw	0
 21521  0153D8  6EDE               	movwf	postinc2,c
 21522  0153DA  0E00               	movlw	0
 21523  0153DC  6EDD               	movwf	postdec2,c
 21524  0153DE                     l11474:
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;My_header\My_ringbuf.h: 71: }
 21528                           ;My_header\My_ringbuf.h: 72: return ret;
 21529  0153DE  0100               	movlb	0	; () banked
 21530  0153E0  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;My_header\My_ringbuf.h: 73: } else {
 21534                           
 21535                           ; BSR set to: 0
 21536  0153E2  0012               	return	
 21537  0153E4                     l11480:
 21538                           
 21539                           ; BSR set to: 0
 21540                           ;My_header\My_ringbuf.h: 74: return 0;
 21541  0153E4  0E00               	movlw	0
 21542                           
 21543                           ; BSR set to: 0
 21544  0153E6  0012               	return	
 21545  0153E8                     __end_of_ringbuf_pop:
 21546                           	opt stack 0
 21547                           tblptru	equ	0xFF8
 21548                           tblptrh	equ	0xFF7
 21549                           tblptrl	equ	0xFF6
 21550                           tablat	equ	0xFF5
 21551                           prodh	equ	0xFF4
 21552                           prodl	equ	0xFF3
 21553                           intcon	equ	0xFF2
 21554                           intcon2	equ	0xFF1
 21555                           postinc0	equ	0xFEE
 21556                           wreg	equ	0xFE8
 21557                           indf1	equ	0xFE7
 21558                           postinc1	equ	0xFE6
 21559                           postdec1	equ	0xFE5
 21560                           fsr1h	equ	0xFE2
 21561                           fsr1l	equ	0xFE1
 21562                           indf2	equ	0xFDF
 21563                           postinc2	equ	0xFDE
 21564                           postdec2	equ	0xFDD
 21565                           plusw2	equ	0xFDB
 21566                           fsr2h	equ	0xFDA
 21567                           fsr2l	equ	0xFD9
 21568                           status	equ	0xFD8
 21569                           
 21570 ;; *************** function _ringbuf_num *****************
 21571 ;; Defined at:
 21572 ;;		line 31 in file "../My_header\My_ringbuf.h"
 21573 ;; Parameters:    Size  Location     Type
 21574 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 21575 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), rx_buf(8), 
 21576 ;;		 -> tx_buf(8), 
 21577 ;; Auto vars:     Size  Location     Type
 21578 ;;		None
 21579 ;; Return value:  Size  Location     Type
 21580 ;;                  2    0[BANK0 ] unsigned int 
 21581 ;; Registers used:
 21582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21583 ;; Tracked objects:
 21584 ;;		On entry : 0/0
 21585 ;;		On exit  : 0/0
 21586 ;;		Unchanged: 0/0
 21587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21590 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21591 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21592 ;;Total ram usage:        8 bytes
 21593 ;; Hardware stack levels used:    1
 21594 ;; Hardware stack levels required when called:   11
 21595 ;; This function calls:
 21596 ;;		Nothing
 21597 ;; This function is called by:
 21598 ;;		_ringbuf_put
 21599 ;;		_ringbuf_pop
 21600 ;;		_ringbuf_backspace
 21601 ;;		_my_terminal_loop
 21602 ;;		_USB_loop
 21603 ;;		_UART_ISR
 21604 ;; This function uses a non-reentrant model
 21605 ;;
 21606                           
 21607                           	psect	text84
 21608  0147FA                     __ptext84:
 21609                           	opt stack 0
 21610  0147FA                     _ringbuf_num:
 21611                           	opt stack 16
 21612                           
 21613                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 21614                           
 21615                           ; BSR set to: 0
 21616                           ;incstack = 0
 21617  0147FA  0100               	movlb	0	; () banked
 21618  0147FC  EE20 F006          	lfsr	2,6
 21619  014800  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21620  014802  26D9               	addwf	fsr2l,f,c
 21621  014804  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21622  014806  22DA               	addwfc	fsr2h,f,c
 21623  014808  0100               	movlb	0	; () banked
 21624  01480A  EE10 F004          	lfsr	1,4
 21625  01480E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21626  014810  26E1               	addwf	fsr1l,f,c
 21627  014812  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21628  014814  22E2               	addwfc	fsr1h,f,c
 21629  014816  50DE               	movf	postinc2,w,c
 21630  014818  5CE6               	subwf	postinc1,w,c
 21631  01481A  50DE               	movf	postinc2,w,c
 21632  01481C  58E6               	subwfb	postinc1,w,c
 21633  01481E  A0D8               	btfss	status,0,c
 21634  014820  D028               	goto	l10052
 21635                           
 21636                           ; BSR set to: 0
 21637                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 21638  014822  0100               	movlb	0	; () banked
 21639  014824  EE20 F004          	lfsr	2,4
 21640  014828  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21641  01482A  26D9               	addwf	fsr2l,f,c
 21642  01482C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21643  01482E  22DA               	addwfc	fsr2h,f,c
 21644  014830  CFDE F062          	movff	postinc2,??_ringbuf_num
 21645  014834  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 21646  014838  0100               	movlb	0	; () banked
 21647  01483A  EE20 F006          	lfsr	2,6
 21648  01483E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21649  014840  26D9               	addwf	fsr2l,f,c
 21650  014842  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21651  014844  22DA               	addwfc	fsr2h,f,c
 21652  014846  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 21653  01484A  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 21654  01484E  0100               	movlb	0	; () banked
 21655  014850  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 21656  014852  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 21657  014854  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 21658  014856  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 21659  014858  0100               	movlb	0	; () banked
 21660  01485A  5162               	movf	??_ringbuf_num& (0+255),w,b
 21661  01485C  0100               	movlb	0	; () banked
 21662  01485E  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 21663  014860  0100               	movlb	0	; () banked
 21664  014862  6F60               	movwf	?_ringbuf_num& (0+255),b
 21665  014864  0100               	movlb	0	; () banked
 21666  014866  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 21667  014868  0100               	movlb	0	; () banked
 21668  01486A  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 21669  01486C  0100               	movlb	0	; () banked
 21670  01486E  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 21671                           
 21672                           ; BSR set to: 0
 21673                           ;My_header\My_ringbuf.h: 34: } else {
 21674                           
 21675                           ; BSR set to: 0
 21676  014870  0012               	return	
 21677  014872                     l10052:
 21678                           
 21679                           ; BSR set to: 0
 21680                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 21681  014872  0100               	movlb	0	; () banked
 21682  014874  EE20 F004          	lfsr	2,4
 21683  014878  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21684  01487A  26D9               	addwf	fsr2l,f,c
 21685  01487C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21686  01487E  22DA               	addwfc	fsr2h,f,c
 21687  014880  CFDE F062          	movff	postinc2,??_ringbuf_num
 21688  014884  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 21689  014888  0100               	movlb	0	; () banked
 21690  01488A  EE20 F002          	lfsr	2,2
 21691  01488E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21692  014890  26D9               	addwf	fsr2l,f,c
 21693  014892  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21694  014894  22DA               	addwfc	fsr2h,f,c
 21695  014896  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 21696  01489A  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 21697  01489E  0100               	movlb	0	; () banked
 21698  0148A0  EE20 F006          	lfsr	2,6
 21699  0148A4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21700  0148A6  26D9               	addwf	fsr2l,f,c
 21701  0148A8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21702  0148AA  22DA               	addwfc	fsr2h,f,c
 21703  0148AC  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 21704  0148B0  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 21705  0148B4  0100               	movlb	0	; () banked
 21706  0148B6  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 21707  0148B8  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 21708  0148BA  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 21709  0148BC  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 21710  0148BE  0100               	movlb	0	; () banked
 21711  0148C0  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 21712  0148C2  0100               	movlb	0	; () banked
 21713  0148C4  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 21714  0148C6  0100               	movlb	0	; () banked
 21715  0148C8  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 21716  0148CA  0100               	movlb	0	; () banked
 21717  0148CC  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 21718  0148CE  0100               	movlb	0	; () banked
 21719  0148D0  5162               	movf	??_ringbuf_num& (0+255),w,b
 21720  0148D2  0100               	movlb	0	; () banked
 21721  0148D4  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 21722  0148D6  0100               	movlb	0	; () banked
 21723  0148D8  6F60               	movwf	?_ringbuf_num& (0+255),b
 21724  0148DA  0100               	movlb	0	; () banked
 21725  0148DC  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 21726  0148DE  0100               	movlb	0	; () banked
 21727  0148E0  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 21728  0148E2  0100               	movlb	0	; () banked
 21729  0148E4  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 21730                           
 21731                           ; BSR set to: 0
 21732  0148E6  0012               	return	
 21733  0148E8                     __end_of_ringbuf_num:
 21734                           	opt stack 0
 21735                           tblptru	equ	0xFF8
 21736                           tblptrh	equ	0xFF7
 21737                           tblptrl	equ	0xFF6
 21738                           tablat	equ	0xFF5
 21739                           prodh	equ	0xFF4
 21740                           prodl	equ	0xFF3
 21741                           intcon	equ	0xFF2
 21742                           intcon2	equ	0xFF1
 21743                           postinc0	equ	0xFEE
 21744                           wreg	equ	0xFE8
 21745                           indf1	equ	0xFE7
 21746                           postinc1	equ	0xFE6
 21747                           postdec1	equ	0xFE5
 21748                           fsr1h	equ	0xFE2
 21749                           fsr1l	equ	0xFE1
 21750                           indf2	equ	0xFDF
 21751                           postinc2	equ	0xFDE
 21752                           postdec2	equ	0xFDD
 21753                           plusw2	equ	0xFDB
 21754                           fsr2h	equ	0xFDA
 21755                           fsr2l	equ	0xFD9
 21756                           status	equ	0xFD8
 21757                           
 21758 ;; *************** function _put_string_usb *****************
 21759 ;; Defined at:
 21760 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 21761 ;; Parameters:    Size  Location     Type
 21762 ;;  s               2   12[BANK0 ] PTR unsigned char 
 21763 ;;		 -> USB_loop@data(1), 
 21764 ;;  len             2   14[BANK0 ] int 
 21765 ;; Auto vars:     Size  Location     Type
 21766 ;;		None
 21767 ;; Return value:  Size  Location     Type
 21768 ;;                  2   12[BANK0 ] int 
 21769 ;; Registers used:
 21770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21771 ;; Tracked objects:
 21772 ;;		On entry : 0/0
 21773 ;;		On exit  : 0/0
 21774 ;;		Unchanged: 0/0
 21775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21779 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21780 ;;Total ram usage:        4 bytes
 21781 ;; Hardware stack levels used:    1
 21782 ;; Hardware stack levels required when called:   13
 21783 ;; This function calls:
 21784 ;;		_CDCTxService
 21785 ;;		_is_usb_available
 21786 ;;		_putUSBUSART
 21787 ;; This function is called by:
 21788 ;;		_USB_loop
 21789 ;; This function uses a non-reentrant model
 21790 ;;
 21791                           
 21792                           	psect	text85
 21793  016DEC                     __ptext85:
 21794                           	opt stack 0
 21795  016DEC                     _put_string_usb:
 21796                           	opt stack 16
 21797                           
 21798                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;incstack = 0
 21802  016DEC  ECCF  F0B9         	call	_is_usb_available	;wreg free
 21803  016DF0  0900               	iorlw	0
 21804  016DF2  A4D8               	btfss	status,2,c
 21805  016DF4  D008               	goto	l11366
 21806                           
 21807                           ;My_usb_cdc.c: 19: return 1;
 21808  016DF6  0E00               	movlw	0
 21809  016DF8  0100               	movlb	0	; () banked
 21810  016DFA  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 21811  016DFC  0E01               	movlw	1
 21812  016DFE  6F6C               	movwf	?_put_string_usb& (0+255),b
 21813                           
 21814                           ; BSR set to: 0
 21815  016E00  0012               	return	
 21816  016E02                     l11364:
 21817  016E02  EC31  F09B         	call	_CDCTxService	;wreg free
 21818  016E06                     l11366:
 21819  016E06  501F               	movf	_cdc_trf_state,w,c
 21820  016E08  A4D8               	btfss	status,2,c
 21821  016E0A  D7FB               	goto	l11364
 21822                           
 21823                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 21824  016E0C  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 21825  016E10  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 21826  016E14  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 21827  016E18  ECA0  F0B9         	call	_putUSBUSART	;wreg free
 21828                           
 21829                           ;My_usb_cdc.c: 23: CDCTxService();
 21830  016E1C  EC31  F09B         	call	_CDCTxService	;wreg free
 21831                           
 21832                           ;My_usb_cdc.c: 24: return 0;
 21833  016E20  0E00               	movlw	0
 21834  016E22  0100               	movlb	0	; () banked
 21835  016E24  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 21836  016E26  0E00               	movlw	0
 21837  016E28  6F6C               	movwf	?_put_string_usb& (0+255),b
 21838  016E2A  0012               	return	
 21839  016E2C                     __end_of_put_string_usb:
 21840                           	opt stack 0
 21841                           tblptru	equ	0xFF8
 21842                           tblptrh	equ	0xFF7
 21843                           tblptrl	equ	0xFF6
 21844                           tablat	equ	0xFF5
 21845                           prodh	equ	0xFF4
 21846                           prodl	equ	0xFF3
 21847                           intcon	equ	0xFF2
 21848                           intcon2	equ	0xFF1
 21849                           postinc0	equ	0xFEE
 21850                           wreg	equ	0xFE8
 21851                           indf1	equ	0xFE7
 21852                           postinc1	equ	0xFE6
 21853                           postdec1	equ	0xFE5
 21854                           fsr1h	equ	0xFE2
 21855                           fsr1l	equ	0xFE1
 21856                           indf2	equ	0xFDF
 21857                           postinc2	equ	0xFDE
 21858                           postdec2	equ	0xFDD
 21859                           plusw2	equ	0xFDB
 21860                           fsr2h	equ	0xFDA
 21861                           fsr2l	equ	0xFD9
 21862                           status	equ	0xFD8
 21863                           
 21864 ;; *************** function _putUSBUSART *****************
 21865 ;; Defined at:
 21866 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 21867 ;; Parameters:    Size  Location     Type
 21868 ;;  data            2    0[BANK0 ] PTR unsigned char 
 21869 ;;		 -> USB_loop@data(1), 
 21870 ;;  length          1    2[BANK0 ] unsigned char 
 21871 ;; Auto vars:     Size  Location     Type
 21872 ;;		None
 21873 ;; Return value:  Size  Location     Type
 21874 ;;		None               void
 21875 ;; Registers used:
 21876 ;;		wreg, status,2, status,0
 21877 ;; Tracked objects:
 21878 ;;		On entry : 0/0
 21879 ;;		On exit  : 0/0
 21880 ;;		Unchanged: 0/0
 21881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21882 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21885 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21886 ;;Total ram usage:        3 bytes
 21887 ;; Hardware stack levels used:    1
 21888 ;; Hardware stack levels required when called:   11
 21889 ;; This function calls:
 21890 ;;		Nothing
 21891 ;; This function is called by:
 21892 ;;		_put_string_usb
 21893 ;; This function uses a non-reentrant model
 21894 ;;
 21895                           
 21896                           	psect	text86
 21897  017340                     __ptext86:
 21898                           	opt stack 0
 21899  017340                     _putUSBUSART:
 21900                           	opt stack 17
 21901                           
 21902                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;incstack = 0
 21906  017340  98A0               	bcf	4000,4,c	;volatile
 21907                           
 21908                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 21909  017342  501F               	movf	_cdc_trf_state,w,c
 21910  017344  A4D8               	btfss	status,2,c
 21911  017346  D00A               	goto	l10894
 21912                           
 21913                           ;usb_device_cdc.c: 640: {
 21914                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 21915  017348  C060  F112         	movff	putUSBUSART@data,_pCDCSrc
 21916  01734C  C061  F113         	movff	putUSBUSART@data+1,_pCDCSrc+1
 21917  017350  C062  F0F3         	movff	putUSBUSART@length,_cdc_tx_len
 21918  017354  0E01               	movlw	1
 21919  017356  6E1E               	movwf	_cdc_mem_type,c
 21920  017358  0E01               	movlw	1
 21921  01735A  6E1F               	movwf	_cdc_trf_state,c
 21922  01735C                     l10894:
 21923                           
 21924                           ;usb_device_cdc.c: 642: }
 21925                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21926  01735C  88A0               	bsf	4000,4,c	;volatile
 21927  01735E  0012               	return		;funcret
 21928  017360                     __end_of_putUSBUSART:
 21929                           	opt stack 0
 21930                           tblptru	equ	0xFF8
 21931                           tblptrh	equ	0xFF7
 21932                           tblptrl	equ	0xFF6
 21933                           tablat	equ	0xFF5
 21934                           prodh	equ	0xFF4
 21935                           prodl	equ	0xFF3
 21936                           intcon	equ	0xFF2
 21937                           intcon2	equ	0xFF1
 21938                           postinc0	equ	0xFEE
 21939                           wreg	equ	0xFE8
 21940                           indf1	equ	0xFE7
 21941                           postinc1	equ	0xFE6
 21942                           postdec1	equ	0xFE5
 21943                           fsr1h	equ	0xFE2
 21944                           fsr1l	equ	0xFE1
 21945                           indf2	equ	0xFDF
 21946                           postinc2	equ	0xFDE
 21947                           postdec2	equ	0xFDD
 21948                           plusw2	equ	0xFDB
 21949                           fsr2h	equ	0xFDA
 21950                           fsr2l	equ	0xFD9
 21951                           status	equ	0xFD8
 21952                           
 21953 ;; *************** function _get_string_usb *****************
 21954 ;; Defined at:
 21955 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21958 ;;		 -> USB_loop@data(1), 
 21959 ;;  len             2   15[BANK0 ] int 
 21960 ;; Auto vars:     Size  Location     Type
 21961 ;;  rx_len          2   18[BANK0 ] int 
 21962 ;; Return value:  Size  Location     Type
 21963 ;;                  2   13[BANK0 ] int 
 21964 ;; Registers used:
 21965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21966 ;; Tracked objects:
 21967 ;;		On entry : 0/0
 21968 ;;		On exit  : 0/0
 21969 ;;		Unchanged: 0/0
 21970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21974 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21975 ;;Total ram usage:        7 bytes
 21976 ;; Hardware stack levels used:    1
 21977 ;; Hardware stack levels required when called:   13
 21978 ;; This function calls:
 21979 ;;		_CDCTxService
 21980 ;;		_getsUSBUSART
 21981 ;;		_is_usb_available
 21982 ;; This function is called by:
 21983 ;;		_USB_loop
 21984 ;; This function uses a non-reentrant model
 21985 ;;
 21986                           
 21987                           	psect	text87
 21988  016CD4                     __ptext87:
 21989                           	opt stack 0
 21990  016CD4                     _get_string_usb:
 21991                           	opt stack 16
 21992                           
 21993                           ;My_usb_cdc.c: 28: int rx_len;
 21994                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 21995                           
 21996                           ;incstack = 0
 21997  016CD4  ECCF  F0B9         	call	_is_usb_available	;wreg free
 21998  016CD8  0900               	iorlw	0
 21999  016CDA  A4D8               	btfss	status,2,c
 22000  016CDC  D008               	goto	l11384
 22001                           
 22002                           ;My_usb_cdc.c: 31: return 0;
 22003  016CDE  0E00               	movlw	0
 22004  016CE0  0100               	movlb	0	; () banked
 22005  016CE2  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 22006  016CE4  0E00               	movlw	0
 22007  016CE6  6F6D               	movwf	?_get_string_usb& (0+255),b
 22008                           
 22009                           ; BSR set to: 0
 22010  016CE8  0012               	return	
 22011  016CEA                     l11382:
 22012  016CEA  EC31  F09B         	call	_CDCTxService	;wreg free
 22013  016CEE                     l11384:
 22014  016CEE  501F               	movf	_cdc_trf_state,w,c
 22015  016CF0  A4D8               	btfss	status,2,c
 22016  016CF2  D7FB               	goto	l11382
 22017                           
 22018                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 22019  016CF4  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 22020  016CF8  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 22021  016CFC  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 22022  016D00  EC74  F0A4         	call	_getsUSBUSART	;wreg free
 22023  016D04  0100               	movlb	0	; () banked
 22024  016D06  6F71               	movwf	??_get_string_usb& (0+255),b
 22025  016D08  0100               	movlb	0	; () banked
 22026  016D0A  5171               	movf	??_get_string_usb& (0+255),w,b
 22027  016D0C  0100               	movlb	0	; () banked
 22028  016D0E  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 22029  016D10  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 22030                           
 22031                           ;My_usb_cdc.c: 35: CDCTxService();
 22032  016D12  EC31  F09B         	call	_CDCTxService	;wreg free
 22033                           
 22034                           ;My_usb_cdc.c: 36: return rx_len;
 22035  016D16  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 22036  016D1A  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 22037  016D1E  0012               	return	
 22038  016D20                     __end_of_get_string_usb:
 22039                           	opt stack 0
 22040                           tblptru	equ	0xFF8
 22041                           tblptrh	equ	0xFF7
 22042                           tblptrl	equ	0xFF6
 22043                           tablat	equ	0xFF5
 22044                           prodh	equ	0xFF4
 22045                           prodl	equ	0xFF3
 22046                           intcon	equ	0xFF2
 22047                           intcon2	equ	0xFF1
 22048                           postinc0	equ	0xFEE
 22049                           wreg	equ	0xFE8
 22050                           indf1	equ	0xFE7
 22051                           postinc1	equ	0xFE6
 22052                           postdec1	equ	0xFE5
 22053                           fsr1h	equ	0xFE2
 22054                           fsr1l	equ	0xFE1
 22055                           indf2	equ	0xFDF
 22056                           postinc2	equ	0xFDE
 22057                           postdec2	equ	0xFDD
 22058                           plusw2	equ	0xFDB
 22059                           fsr2h	equ	0xFDA
 22060                           fsr2l	equ	0xFD9
 22061                           status	equ	0xFD8
 22062                           
 22063 ;; *************** function _is_usb_available *****************
 22064 ;; Defined at:
 22065 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 22066 ;; Parameters:    Size  Location     Type
 22067 ;;		None
 22068 ;; Auto vars:     Size  Location     Type
 22069 ;;		None
 22070 ;; Return value:  Size  Location     Type
 22071 ;;                  1    wreg      unsigned char 
 22072 ;; Registers used:
 22073 ;;		wreg, status,2, status,0
 22074 ;; Tracked objects:
 22075 ;;		On entry : 0/0
 22076 ;;		On exit  : 0/0
 22077 ;;		Unchanged: 0/0
 22078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22083 ;;Total ram usage:        1 bytes
 22084 ;; Hardware stack levels used:    1
 22085 ;; Hardware stack levels required when called:   11
 22086 ;; This function calls:
 22087 ;;		Nothing
 22088 ;; This function is called by:
 22089 ;;		_put_string_usb
 22090 ;;		_get_string_usb
 22091 ;; This function uses a non-reentrant model
 22092 ;;
 22093                           
 22094                           	psect	text88
 22095  01739E                     __ptext88:
 22096                           	opt stack 0
 22097  01739E                     _is_usb_available:
 22098                           	opt stack 17
 22099                           
 22100                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 22101                           
 22102                           ;incstack = 0
 22103  01739E  0E00               	movlw	0
 22104  0173A0  0100               	movlb	0	; () banked
 22105  0173A2  6F60               	movwf	_is_usb_available$2010& (0+255),b
 22106                           
 22107                           ; BSR set to: 0
 22108  0173A4  0E1F               	movlw	31
 22109  0173A6  641A               	cpfsgt	_USBDeviceState,c	;volatile
 22110  0173A8  D005               	goto	l539
 22111                           
 22112                           ; BSR set to: 0
 22113  0173AA  B265               	btfsc	3941,1,c	;volatile
 22114  0173AC  D003               	goto	l539
 22115                           
 22116                           ; BSR set to: 0
 22117  0173AE  0E01               	movlw	1
 22118  0173B0  0100               	movlb	0	; () banked
 22119  0173B2  6F60               	movwf	_is_usb_available$2010& (0+255),b
 22120  0173B4                     l539:
 22121                           
 22122                           ; BSR set to: 0
 22123  0173B4  0100               	movlb	0	; () banked
 22124  0173B6  5160               	movf	_is_usb_available$2010& (0+255),w,b
 22125  0173B8  0012               	return	
 22126  0173BA                     __end_of_is_usb_available:
 22127                           	opt stack 0
 22128                           tblptru	equ	0xFF8
 22129                           tblptrh	equ	0xFF7
 22130                           tblptrl	equ	0xFF6
 22131                           tablat	equ	0xFF5
 22132                           prodh	equ	0xFF4
 22133                           prodl	equ	0xFF3
 22134                           intcon	equ	0xFF2
 22135                           intcon2	equ	0xFF1
 22136                           postinc0	equ	0xFEE
 22137                           wreg	equ	0xFE8
 22138                           indf1	equ	0xFE7
 22139                           postinc1	equ	0xFE6
 22140                           postdec1	equ	0xFE5
 22141                           fsr1h	equ	0xFE2
 22142                           fsr1l	equ	0xFE1
 22143                           indf2	equ	0xFDF
 22144                           postinc2	equ	0xFDE
 22145                           postdec2	equ	0xFDD
 22146                           plusw2	equ	0xFDB
 22147                           fsr2h	equ	0xFDA
 22148                           fsr2l	equ	0xFD9
 22149                           status	equ	0xFD8
 22150                           
 22151 ;; *************** function _getsUSBUSART *****************
 22152 ;; Defined at:
 22153 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22154 ;; Parameters:    Size  Location     Type
 22155 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 22156 ;;		 -> USB_loop@data(1), 
 22157 ;;  len             1    9[BANK0 ] unsigned char 
 22158 ;; Auto vars:     Size  Location     Type
 22159 ;;		None
 22160 ;; Return value:  Size  Location     Type
 22161 ;;                  1    wreg      unsigned char 
 22162 ;; Registers used:
 22163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22164 ;; Tracked objects:
 22165 ;;		On entry : 0/0
 22166 ;;		On exit  : 0/0
 22167 ;;		Unchanged: 0/0
 22168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22169 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22172 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22173 ;;Total ram usage:        6 bytes
 22174 ;; Hardware stack levels used:    1
 22175 ;; Hardware stack levels required when called:   12
 22176 ;; This function calls:
 22177 ;;		_USBTransferOnePacket
 22178 ;; This function is called by:
 22179 ;;		_get_string_usb
 22180 ;; This function uses a non-reentrant model
 22181 ;;
 22182                           
 22183                           	psect	text89
 22184  0148E8                     __ptext89:
 22185                           	opt stack 0
 22186  0148E8                     _getsUSBUSART:
 22187                           	opt stack 16
 22188                           
 22189                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;incstack = 0
 22193  0148E8  0E00               	movlw	0
 22194  0148EA  0100               	movlb	0	; () banked
 22195  0148EC  6FF2               	movwf	_cdc_rx_len& (0+255),b
 22196                           
 22197                           ; BSR set to: 0
 22198                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 22199  0148EE  0100               	movlb	0	; () banked
 22200  0148F0  51F0               	movf	_CDCDataOutHandle& (0+255),w,b
 22201  0148F2  0100               	movlb	0	; () banked
 22202  0148F4  11F1               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 22203  0148F6  B4D8               	btfsc	status,2,c
 22204  0148F8  D013               	goto	l10860
 22205                           
 22206                           ; BSR set to: 0
 22207  0148FA  C0F0  FFD9         	movff	_CDCDataOutHandle,fsr2l
 22208  0148FE  C0F1  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 22209  014902  0100               	movlb	0	; () banked
 22210  014904  AEDF               	btfss	indf2,7,c
 22211  014906  D004               	goto	u12640
 22212  014908  0100               	movlb	0	; () banked
 22213  01490A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22214  01490C  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 22215  01490E  D002               	goto	u12648
 22216  014910                     u12640:
 22217  014910  0100               	movlb	0	; () banked
 22218  014912  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22219  014914                     u12648:
 22220  014914  0100               	movlb	0	; () banked
 22221  014916  516A               	movf	??_getsUSBUSART& (0+255),w,b
 22222  014918  0100               	movlb	0	; () banked
 22223  01491A  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 22224  01491C  6B6C               	clrf	(_getsUSBUSART$1886+1)& (0+255),b
 22225  01491E  D005               	goto	l10862
 22226  014920                     l10860:
 22227                           
 22228                           ; BSR set to: 0
 22229  014920  0E00               	movlw	0
 22230  014922  0100               	movlb	0	; () banked
 22231  014924  6F6C               	movwf	(_getsUSBUSART$1886+1)& (0+255),b
 22232  014926  0E00               	movlw	0
 22233  014928  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 22234  01492A                     l10862:
 22235                           
 22236                           ; BSR set to: 0
 22237  01492A  0100               	movlb	0	; () banked
 22238  01492C  516B               	movf	_getsUSBUSART$1886& (0+255),w,b
 22239  01492E  0100               	movlb	0	; () banked
 22240  014930  116C               	iorwf	(_getsUSBUSART$1886+1)& (0+255),w,b
 22241  014932  A4D8               	btfss	status,2,c
 22242  014934  D04B               	goto	l10878
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;usb_device_cdc.c: 547: {
 22246                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 22247  014936  0100               	movlb	0	; () banked
 22248  014938  EE20 F001          	lfsr	2,1
 22249  01493C  51F0               	movf	_CDCDataOutHandle& (0+255),w,b
 22250  01493E  26D9               	addwf	fsr2l,f,c
 22251  014940  51F1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22252  014942  22DA               	addwfc	fsr2h,f,c
 22253  014944  0100               	movlb	0	; () banked
 22254  014946  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22255  014948  5CDE               	subwf	postinc2,w,c
 22256  01494A  B0D8               	btfsc	status,0,c
 22257  01494C  D00A               	goto	l10868
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 22261  01494E  0100               	movlb	0	; () banked
 22262  014950  EE20 F001          	lfsr	2,1
 22263  014954  51F0               	movf	_CDCDataOutHandle& (0+255),w,b
 22264  014956  26D9               	addwf	fsr2l,f,c
 22265  014958  51F1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22266  01495A  22DA               	addwfc	fsr2h,f,c
 22267  01495C  50DF               	movf	indf2,w,c
 22268  01495E  0100               	movlb	0	; () banked
 22269  014960  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22270  014962                     l10868:
 22271                           
 22272                           ; BSR set to: 0
 22273                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 22274  014962  0E00               	movlw	0
 22275  014964  0100               	movlb	0	; () banked
 22276  014966  6FF2               	movwf	_cdc_rx_len& (0+255),b
 22277  014968  D018               	goto	l10874
 22278  01496A                     l10870:
 22279                           
 22280                           ; BSR set to: 0
 22281                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 22282  01496A  0100               	movlb	0	; () banked
 22283  01496C  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22284  01496E  0D01               	mullw	1
 22285  014970  0E12               	movlw	low _cdc_data_rx
 22286  014972  24F3               	addwf	prodl,w,c
 22287  014974  6ED9               	movwf	fsr2l,c
 22288  014976  0E02               	movlw	high _cdc_data_rx
 22289  014978  20F4               	addwfc	prodh,w,c
 22290  01497A  6EDA               	movwf	fsr2h,c
 22291  01497C  0100               	movlb	0	; () banked
 22292  01497E  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22293  014980  0D01               	mullw	1
 22294  014982  50F3               	movf	prodl,w,c
 22295  014984  0100               	movlb	0	; () banked
 22296  014986  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 22297  014988  6EE1               	movwf	fsr1l,c
 22298  01498A  50F4               	movf	prodh,w,c
 22299  01498C  0100               	movlb	0	; () banked
 22300  01498E  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 22301  014990  6EE2               	movwf	fsr1h,c
 22302  014992  CFDF FFE7          	movff	indf2,indf1
 22303                           
 22304                           ; BSR set to: 0
 22305  014996  0100               	movlb	0	; () banked
 22306  014998  2BF2               	incf	_cdc_rx_len& (0+255),f,b
 22307  01499A                     l10874:
 22308                           
 22309                           ; BSR set to: 0
 22310  01499A  0100               	movlb	0	; () banked
 22311  01499C  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22312  01499E  0100               	movlb	0	; () banked
 22313  0149A0  5DF2               	subwf	_cdc_rx_len& (0+255),w,b
 22314  0149A2  A0D8               	btfss	status,0,c
 22315  0149A4  D7E2               	goto	l10870
 22316                           
 22317                           ; BSR set to: 0
 22318                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22319                           
 22320                           ; BSR set to: 0
 22321  0149A6  0E00               	movlw	0
 22322  0149A8  0100               	movlb	0	; () banked
 22323  0149AA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22324  0149AC  0E12               	movlw	low _cdc_data_rx
 22325  0149AE  0100               	movlb	0	; () banked
 22326  0149B0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22327  0149B2  0E02               	movlw	high _cdc_data_rx
 22328  0149B4  0100               	movlb	0	; () banked
 22329  0149B6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22330  0149B8  0E40               	movlw	64
 22331  0149BA  0100               	movlb	0	; () banked
 22332  0149BC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22333  0149BE  0E02               	movlw	2
 22334  0149C0  ECAC  F0A6         	call	_USBTransferOnePacket
 22335  0149C4  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 22336  0149C8  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22337  0149CC                     l10878:
 22338                           
 22339                           ;usb_device_cdc.c: 567: }
 22340                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 22341  0149CC  0100               	movlb	0	; () banked
 22342  0149CE  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22343  0149D0  0012               	return	
 22344  0149D2                     __end_of_getsUSBUSART:
 22345                           	opt stack 0
 22346                           tblptru	equ	0xFF8
 22347                           tblptrh	equ	0xFF7
 22348                           tblptrl	equ	0xFF6
 22349                           tablat	equ	0xFF5
 22350                           prodh	equ	0xFF4
 22351                           prodl	equ	0xFF3
 22352                           intcon	equ	0xFF2
 22353                           intcon2	equ	0xFF1
 22354                           postinc0	equ	0xFEE
 22355                           wreg	equ	0xFE8
 22356                           indf1	equ	0xFE7
 22357                           postinc1	equ	0xFE6
 22358                           postdec1	equ	0xFE5
 22359                           fsr1h	equ	0xFE2
 22360                           fsr1l	equ	0xFE1
 22361                           indf2	equ	0xFDF
 22362                           postinc2	equ	0xFDE
 22363                           postdec2	equ	0xFDD
 22364                           plusw2	equ	0xFDB
 22365                           fsr2h	equ	0xFDA
 22366                           fsr2l	equ	0xFD9
 22367                           status	equ	0xFD8
 22368                           
 22369 ;; *************** function _CDCTxService *****************
 22370 ;; Defined at:
 22371 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;		None
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 22376 ;;  i               1   10[BANK0 ] unsigned char 
 22377 ;; Return value:  Size  Location     Type
 22378 ;;		None               void
 22379 ;; Registers used:
 22380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22381 ;; Tracked objects:
 22382 ;;		On entry : 0/0
 22383 ;;		On exit  : 0/0
 22384 ;;		Unchanged: 0/0
 22385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22387 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22389 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22390 ;;Total ram usage:        5 bytes
 22391 ;; Hardware stack levels used:    1
 22392 ;; Hardware stack levels required when called:   12
 22393 ;; This function calls:
 22394 ;;		_USBTransferOnePacket
 22395 ;; This function is called by:
 22396 ;;		_put_string_usb
 22397 ;;		_get_string_usb
 22398 ;; This function uses a non-reentrant model
 22399 ;;
 22400                           
 22401                           	psect	text90
 22402  013662                     __ptext90:
 22403                           	opt stack 0
 22404  013662                     _CDCTxService:
 22405                           	opt stack 16
 22406                           
 22407                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 22408                           ;usb_device_cdc.c: 896: uint8_t i;
 22409                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 22410                           
 22411                           ; BSR set to: 0
 22412                           ;incstack = 0
 22413  013662  98A0               	bcf	4000,4,c	;volatile
 22414                           
 22415                           ;usb_device_cdc.c: 900: {};
 22416                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 22417  013664  0101               	movlb	1	; () banked
 22418  013666  5117               	movf	_CDCDataInHandle& (0+255),w,b
 22419  013668  0101               	movlb	1	; () banked
 22420  01366A  1118               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 22421  01366C  B4D8               	btfsc	status,2,c
 22422  01366E  D013               	goto	l10902
 22423                           
 22424                           ; BSR set to: 1
 22425  013670  C117  FFD9         	movff	_CDCDataInHandle,fsr2l
 22426  013674  C118  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 22427  013678  0101               	movlb	1	; () banked
 22428  01367A  AEDF               	btfss	indf2,7,c
 22429  01367C  D004               	goto	u12700
 22430  01367E  0100               	movlb	0	; () banked
 22431  013680  6B67               	clrf	??_CDCTxService& (0+255),b
 22432  013682  2B67               	incf	??_CDCTxService& (0+255),f,b
 22433  013684  D002               	goto	u12708
 22434  013686                     u12700:
 22435  013686  0100               	movlb	0	; () banked
 22436  013688  6B67               	clrf	??_CDCTxService& (0+255),b
 22437  01368A                     u12708:
 22438  01368A  0100               	movlb	0	; () banked
 22439  01368C  5167               	movf	??_CDCTxService& (0+255),w,b
 22440  01368E  0100               	movlb	0	; () banked
 22441  013690  6F68               	movwf	_CDCTxService$1934& (0+255),b
 22442  013692  6B69               	clrf	(_CDCTxService$1934+1)& (0+255),b
 22443  013694  D005               	goto	l10904
 22444  013696                     l10902:
 22445  013696  0E00               	movlw	0
 22446  013698  0100               	movlb	0	; () banked
 22447  01369A  6F69               	movwf	(_CDCTxService$1934+1)& (0+255),b
 22448  01369C  0E00               	movlw	0
 22449  01369E  6F68               	movwf	_CDCTxService$1934& (0+255),b
 22450  0136A0                     l10904:
 22451                           
 22452                           ; BSR set to: 0
 22453  0136A0  0100               	movlb	0	; () banked
 22454  0136A2  5168               	movf	_CDCTxService$1934& (0+255),w,b
 22455  0136A4  0100               	movlb	0	; () banked
 22456  0136A6  1169               	iorwf	(_CDCTxService$1934+1)& (0+255),w,b
 22457  0136A8  B4D8               	btfsc	status,2,c
 22458  0136AA  D002               	goto	l10908
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;usb_device_cdc.c: 903: {
 22462                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 22463  0136AC  88A0               	bsf	4000,4,c	;volatile
 22464                           
 22465                           ;usb_device_cdc.c: 905: return;
 22466  0136AE  0012               	return	
 22467  0136B0                     l10908:
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;usb_device_cdc.c: 906: }
 22471                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 22472  0136B0  0E03               	movlw	3
 22473  0136B2  181F               	xorwf	_cdc_trf_state,w,c
 22474  0136B4  A4D8               	btfss	status,2,c
 22475  0136B6  D002               	goto	l490
 22476                           
 22477                           ; BSR set to: 0
 22478                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 22479  0136B8  0E00               	movlw	0
 22480  0136BA  6E1F               	movwf	_cdc_trf_state,c
 22481  0136BC                     l490:
 22482                           
 22483                           ; BSR set to: 0
 22484                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 22485  0136BC  501F               	movf	_cdc_trf_state,w,c
 22486  0136BE  A4D8               	btfss	status,2,c
 22487  0136C0  D002               	goto	l10914
 22488                           
 22489                           ; BSR set to: 0
 22490                           ;usb_device_cdc.c: 920: {
 22491                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 22492  0136C2  88A0               	bsf	4000,4,c	;volatile
 22493                           
 22494                           ;usb_device_cdc.c: 922: return;
 22495  0136C4  0012               	return	
 22496  0136C6                     l10914:
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;usb_device_cdc.c: 923: }
 22500                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 22501  0136C6  0E02               	movlw	2
 22502  0136C8  181F               	xorwf	_cdc_trf_state,w,c
 22503  0136CA  A4D8               	btfss	status,2,c
 22504  0136CC  D016               	goto	l10920
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;usb_device_cdc.c: 929: {
 22508                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 22509  0136CE  0E01               	movlw	1
 22510  0136D0  0100               	movlb	0	; () banked
 22511  0136D2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22512  0136D4  0E00               	movlw	0
 22513  0136D6  0100               	movlb	0	; () banked
 22514  0136D8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22515  0136DA  0E00               	movlw	0
 22516  0136DC  0100               	movlb	0	; () banked
 22517  0136DE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22518  0136E0  0E00               	movlw	0
 22519  0136E2  0100               	movlb	0	; () banked
 22520  0136E4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22521  0136E6  0E02               	movlw	2
 22522  0136E8  ECAC  F0A6         	call	_USBTransferOnePacket
 22523  0136EC  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 22524  0136F0  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 22525                           
 22526                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 22527  0136F4  0E03               	movlw	3
 22528  0136F6  6E1F               	movwf	_cdc_trf_state,c
 22529                           
 22530                           ;usb_device_cdc.c: 933: }
 22531  0136F8  D06E               	goto	l10964
 22532  0136FA                     l10920:
 22533                           
 22534                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 22535  0136FA  041F               	decf	_cdc_trf_state,w,c
 22536  0136FC  A4D8               	btfss	status,2,c
 22537  0136FE  D06B               	goto	l10964
 22538                           
 22539                           ;usb_device_cdc.c: 935: {
 22540                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 22541  013700  0E40               	movlw	64
 22542  013702  0100               	movlb	0	; () banked
 22543  013704  65F3               	cpfsgt	_cdc_tx_len& (0+255),b
 22544  013706  D004               	goto	l495
 22545                           
 22546                           ; BSR set to: 0
 22547                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 22548  013708  0E40               	movlw	64
 22549  01370A  0100               	movlb	0	; () banked
 22550  01370C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 22551  01370E  D002               	goto	l10926
 22552  013710                     l495:
 22553                           
 22554                           ; BSR set to: 0
 22555                           ;usb_device_cdc.c: 941: else
 22556                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 22557  013710  C0F3  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 22558  013714                     l10926:
 22559                           
 22560                           ; BSR set to: 0
 22561                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 22562  013714  0100               	movlb	0	; () banked
 22563  013716  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 22564  013718  0800               	sublw	0
 22565  01371A  0100               	movlb	0	; () banked
 22566  01371C  25F3               	addwf	_cdc_tx_len& (0+255),w,b
 22567  01371E  0100               	movlb	0	; () banked
 22568  013720  6FF3               	movwf	_cdc_tx_len& (0+255),b
 22569                           
 22570                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 22571  013722  0E64               	movlw	low _cdc_data_tx
 22572  013724  0101               	movlb	1	; () banked
 22573  013726  6F0F               	movwf	_pCDCDst& (0+255),b
 22574  013728  0E03               	movlw	high _cdc_data_tx
 22575  01372A  0101               	movlb	1	; () banked
 22576  01372C  6F10               	movwf	(_pCDCDst+1)& (0+255),b
 22577                           
 22578                           ; BSR set to: 1
 22579                           ;usb_device_cdc.c: 951: i = byte_to_send;
 22580  01372E  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 22581                           
 22582                           ; BSR set to: 1
 22583                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 22584  013732  501E               	movf	_cdc_mem_type,w,c
 22585  013734  B4D8               	btfsc	status,2,c
 22586  013736  D013               	goto	l10942
 22587  013738  D02A               	goto	l10952
 22588  01373A                     l10934:
 22589                           
 22590                           ;usb_device_cdc.c: 955: {
 22591                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 22592  01373A  C112  FFD9         	movff	_pCDCSrc,fsr2l
 22593  01373E  C113  FFDA         	movff	_pCDCSrc+1,fsr2h
 22594  013742  C10F  FFE1         	movff	_pCDCDst,fsr1l
 22595  013746  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 22596  01374A  CFDF FFE7          	movff	indf2,indf1
 22597                           
 22598                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 22599  01374E  0101               	movlb	1	; () banked
 22600  013750  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 22601  013752  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 22602                           
 22603                           ; BSR set to: 1
 22604                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 22605  013754  0101               	movlb	1	; () banked
 22606  013756  4B12               	infsnz	_pCDCSrc& (0+255),f,b
 22607  013758  2B13               	incf	(_pCDCSrc+1)& (0+255),f,b
 22608                           
 22609                           ; BSR set to: 1
 22610                           ;usb_device_cdc.c: 959: i--;
 22611  01375A  0100               	movlb	0	; () banked
 22612  01375C  076A               	decf	CDCTxService@i& (0+255),f,b
 22613  01375E                     l10942:
 22614  01375E  0100               	movlb	0	; () banked
 22615  013760  516A               	movf	CDCTxService@i& (0+255),w,b
 22616  013762  0100               	movlb	0	; () banked
 22617  013764  B4D8               	btfsc	status,2,c
 22618  013766  D018               	goto	l10954
 22619  013768  D7E8               	goto	l10934
 22620  01376A                     l10944:
 22621                           
 22622                           ; BSR set to: 0
 22623                           ;usb_device_cdc.c: 965: {
 22624                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 22625  01376A  C112  FFD9         	movff	_pCDCSrc,fsr2l
 22626  01376E  C113  FFDA         	movff	_pCDCSrc+1,fsr2h
 22627  013772  C10F  FFE1         	movff	_pCDCDst,fsr1l
 22628  013776  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 22629  01377A  CFDF FFE7          	movff	indf2,indf1
 22630                           
 22631                           ; BSR set to: 0
 22632                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 22633  01377E  0101               	movlb	1	; () banked
 22634  013780  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 22635  013782  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 22636                           
 22637                           ; BSR set to: 1
 22638                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 22639  013784  0101               	movlb	1	; () banked
 22640  013786  4B12               	infsnz	_pCDCSrc& (0+255),f,b
 22641  013788  2B13               	incf	(_pCDCSrc+1)& (0+255),f,b
 22642                           
 22643                           ; BSR set to: 1
 22644                           ;usb_device_cdc.c: 969: i--;
 22645  01378A  0100               	movlb	0	; () banked
 22646  01378C  076A               	decf	CDCTxService@i& (0+255),f,b
 22647  01378E                     l10952:
 22648  01378E  0100               	movlb	0	; () banked
 22649  013790  516A               	movf	CDCTxService@i& (0+255),w,b
 22650  013792  0100               	movlb	0	; () banked
 22651  013794  A4D8               	btfss	status,2,c
 22652  013796  D7E9               	goto	l10944
 22653  013798                     l10954:
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;usb_device_cdc.c: 970: }
 22657                           ;usb_device_cdc.c: 971: }
 22658                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 22659  013798  0100               	movlb	0	; () banked
 22660  01379A  51F3               	movf	_cdc_tx_len& (0+255),w,b
 22661  01379C  A4D8               	btfss	status,2,c
 22662  01379E  D009               	goto	l10962
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;usb_device_cdc.c: 978: {
 22666                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 22667  0137A0  0E40               	movlw	64
 22668  0137A2  0100               	movlb	0	; () banked
 22669  0137A4  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 22670  0137A6  A4D8               	btfss	status,2,c
 22671  0137A8  D002               	goto	l10960
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 22675  0137AA  0E02               	movlw	2
 22676  0137AC  D001               	goto	L4
 22677  0137AE                     l10960:
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;usb_device_cdc.c: 981: else
 22681                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 22682  0137AE  0E03               	movlw	3
 22683  0137B0                     L4:
 22684  0137B0  6E1F               	movwf	_cdc_trf_state,c
 22685  0137B2                     l10962:
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;usb_device_cdc.c: 983: }
 22689                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 22690  0137B2  0E01               	movlw	1
 22691  0137B4  0100               	movlb	0	; () banked
 22692  0137B6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22693  0137B8  0E64               	movlw	low _cdc_data_tx
 22694  0137BA  0100               	movlb	0	; () banked
 22695  0137BC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22696  0137BE  0E03               	movlw	high _cdc_data_tx
 22697  0137C0  0100               	movlb	0	; () banked
 22698  0137C2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22699  0137C4  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 22700  0137C8  0E02               	movlw	2
 22701  0137CA  ECAC  F0A6         	call	_USBTransferOnePacket
 22702  0137CE  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 22703  0137D2  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 22704  0137D6                     l10964:
 22705                           
 22706                           ;usb_device_cdc.c: 986: }
 22707                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 22708  0137D6  88A0               	bsf	4000,4,c	;volatile
 22709  0137D8  0012               	return		;funcret
 22710  0137DA                     __end_of_CDCTxService:
 22711                           	opt stack 0
 22712                           tblptru	equ	0xFF8
 22713                           tblptrh	equ	0xFF7
 22714                           tblptrl	equ	0xFF6
 22715                           tablat	equ	0xFF5
 22716                           prodh	equ	0xFF4
 22717                           prodl	equ	0xFF3
 22718                           intcon	equ	0xFF2
 22719                           intcon2	equ	0xFF1
 22720                           postinc0	equ	0xFEE
 22721                           wreg	equ	0xFE8
 22722                           indf1	equ	0xFE7
 22723                           postinc1	equ	0xFE6
 22724                           postdec1	equ	0xFE5
 22725                           fsr1h	equ	0xFE2
 22726                           fsr1l	equ	0xFE1
 22727                           indf2	equ	0xFDF
 22728                           postinc2	equ	0xFDE
 22729                           postdec2	equ	0xFDD
 22730                           plusw2	equ	0xFDB
 22731                           fsr2h	equ	0xFDA
 22732                           fsr2l	equ	0xFD9
 22733                           status	equ	0xFD8
 22734                           
 22735 ;; *************** function _USBTransferOnePacket *****************
 22736 ;; Defined at:
 22737 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;  ep              1    wreg     unsigned char 
 22740 ;;  dir             1    0[BANK0 ] unsigned char 
 22741 ;;  data            2    1[BANK0 ] PTR unsigned char 
 22742 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22743 ;;  len             1    3[BANK0 ] unsigned char 
 22744 ;; Auto vars:     Size  Location     Type
 22745 ;;  ep              1    4[BANK0 ] unsigned char 
 22746 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 22747 ;;		 -> NULL(0), BDT(48), 
 22748 ;; Return value:  Size  Location     Type
 22749 ;;                  2    0[BANK0 ] PTR void 
 22750 ;; Registers used:
 22751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22752 ;; Tracked objects:
 22753 ;;		On entry : 0/0
 22754 ;;		On exit  : 0/0
 22755 ;;		Unchanged: 0/0
 22756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22760 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22761 ;;Total ram usage:        7 bytes
 22762 ;; Hardware stack levels used:    1
 22763 ;; Hardware stack levels required when called:   11
 22764 ;; This function calls:
 22765 ;;		Nothing
 22766 ;; This function is called by:
 22767 ;;		_getsUSBUSART
 22768 ;;		_CDCTxService
 22769 ;;		_USBCDCEventHandler
 22770 ;; This function uses a non-reentrant model
 22771 ;;
 22772                           
 22773                           	psect	text91
 22774  014D58                     __ptext91:
 22775                           	opt stack 0
 22776  014D58                     _USBTransferOnePacket:
 22777                           	opt stack 16
 22778                           
 22779                           ;incstack = 0
 22780                           ;USBTransferOnePacket@ep stored from wreg
 22781  014D58  0100               	movlb	0	; () banked
 22782  014D5A  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 22783                           
 22784                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22785                           ;usb_device.c: 1000: if(dir != 0)
 22786  014D5C  0100               	movlb	0	; () banked
 22787  014D5E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22788  014D60  0100               	movlb	0	; () banked
 22789  014D62  B4D8               	btfsc	status,2,c
 22790  014D64  D008               	goto	l10616
 22791                           
 22792                           ; BSR set to: 0
 22793                           ;usb_device.c: 1001: {
 22794                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22795  014D66  0100               	movlb	0	; () banked
 22796  014D68  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22797  014D6A  0D02               	mullw	2
 22798  014D6C  0EEA               	movlw	low _pBDTEntryIn
 22799  014D6E  24F3               	addwf	prodl,w,c
 22800  014D70  6ED9               	movwf	fsr2l,c
 22801  014D72  0E00               	movlw	high _pBDTEntryIn
 22802  014D74  D007               	goto	L5
 22803  014D76                     l10616:
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;usb_device.c: 1005: else
 22807                           ;usb_device.c: 1006: {
 22808                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22809  014D76  0100               	movlb	0	; () banked
 22810  014D78  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22811  014D7A  0D02               	mullw	2
 22812  014D7C  0E00               	movlw	low _pBDTEntryOut
 22813  014D7E  24F3               	addwf	prodl,w,c
 22814  014D80  6ED9               	movwf	fsr2l,c
 22815  014D82  0E01               	movlw	high _pBDTEntryOut
 22816  014D84                     L5:
 22817  014D84  20F4               	addwfc	prodh,w,c
 22818  014D86  6EDA               	movwf	fsr2h,c
 22819  014D88  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 22820  014D8C  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;usb_device.c: 1009: }
 22824                           ;usb_device.c: 1013: if(handle == 0)
 22825                           
 22826                           ; BSR set to: 0
 22827  014D90  0100               	movlb	0	; () banked
 22828  014D92  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22829  014D94  0100               	movlb	0	; () banked
 22830  014D96  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22831  014D98  A4D8               	btfss	status,2,c
 22832  014D9A  D007               	goto	l10624
 22833                           
 22834                           ; BSR set to: 0
 22835                           ;usb_device.c: 1014: {
 22836                           ;usb_device.c: 1015: return 0;
 22837  014D9C  0E00               	movlw	0
 22838  014D9E  0100               	movlb	0	; () banked
 22839  014DA0  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 22840  014DA2  0E00               	movlw	0
 22841  014DA4  0100               	movlb	0	; () banked
 22842  014DA6  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 22843                           
 22844                           ; BSR set to: 0
 22845  014DA8  0012               	return	
 22846  014DAA                     l10624:
 22847                           
 22848                           ; BSR set to: 0
 22849                           ;usb_device.c: 1016: }
 22850                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22851  014DAA  0100               	movlb	0	; () banked
 22852  014DAC  EE20 F002          	lfsr	2,2
 22853  014DB0  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22854  014DB2  26D9               	addwf	fsr2l,f,c
 22855  014DB4  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22856  014DB6  22DA               	addwfc	fsr2h,f,c
 22857  014DB8  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 22858  014DBC  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 22859                           
 22860                           ;usb_device.c: 1030: handle->CNT = len;
 22861  014DC0  0100               	movlb	0	; () banked
 22862  014DC2  EE20 F001          	lfsr	2,1
 22863  014DC6  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22864  014DC8  26D9               	addwf	fsr2l,f,c
 22865  014DCA  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22866  014DCC  22DA               	addwfc	fsr2h,f,c
 22867  014DCE  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 22868                           
 22869                           ; BSR set to: 0
 22870                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22871  014DD2  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22872  014DD6  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22873  014DDA  0E40               	movlw	64
 22874  014DDC  16DF               	andwf	indf2,f,c
 22875                           
 22876                           ; BSR set to: 0
 22877                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22878  014DDE  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22879  014DE2  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22880  014DE6  0E00               	movlw	0
 22881  014DE8  86DB               	bsf	plusw2,3,c
 22882                           
 22883                           ; BSR set to: 0
 22884                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22885  014DEA  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22886  014DEE  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22887  014DF2  0E00               	movlw	0
 22888  014DF4  8EDB               	bsf	plusw2,7,c
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;usb_device.c: 1036: if(dir != 0)
 22892  014DF6  0100               	movlb	0	; () banked
 22893  014DF8  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22894  014DFA  0100               	movlb	0	; () banked
 22895  014DFC  B4D8               	btfsc	status,2,c
 22896  014DFE  D008               	goto	l10636
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;usb_device.c: 1037: {
 22900                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22901  014E00  0100               	movlb	0	; () banked
 22902  014E02  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22903  014E04  0D02               	mullw	2
 22904  014E06  0EEA               	movlw	low _pBDTEntryIn
 22905  014E08  24F3               	addwf	prodl,w,c
 22906  014E0A  6ED9               	movwf	fsr2l,c
 22907  014E0C  0E00               	movlw	high _pBDTEntryIn
 22908  014E0E  D007               	goto	L6
 22909  014E10                     l10636:
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;usb_device.c: 1041: else
 22913                           ;usb_device.c: 1042: {
 22914                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22915  014E10  0100               	movlb	0	; () banked
 22916  014E12  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22917  014E14  0D02               	mullw	2
 22918  014E16  0E00               	movlw	low _pBDTEntryOut
 22919  014E18  24F3               	addwf	prodl,w,c
 22920  014E1A  6ED9               	movwf	fsr2l,c
 22921  014E1C  0E01               	movlw	high _pBDTEntryOut
 22922  014E1E                     L6:
 22923  014E1E  20F4               	addwfc	prodh,w,c
 22924  014E20  6EDA               	movwf	fsr2h,c
 22925  014E22  0E04               	movlw	4
 22926  014E24  1ADF               	xorwf	indf2,f,c
 22927                           
 22928                           ; BSR set to: 0
 22929                           ;usb_device.c: 1045: }
 22930                           ;usb_device.c: 1046: return (void*)handle;
 22931                           
 22932                           ; BSR set to: 0
 22933  014E26  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22934  014E2A  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22935  014E2E  0012               	return	
 22936  014E30                     __end_of_USBTransferOnePacket:
 22937                           	opt stack 0
 22938                           tblptru	equ	0xFF8
 22939                           tblptrh	equ	0xFF7
 22940                           tblptrl	equ	0xFF6
 22941                           tablat	equ	0xFF5
 22942                           prodh	equ	0xFF4
 22943                           prodl	equ	0xFF3
 22944                           intcon	equ	0xFF2
 22945                           intcon2	equ	0xFF1
 22946                           postinc0	equ	0xFEE
 22947                           wreg	equ	0xFE8
 22948                           indf1	equ	0xFE7
 22949                           postinc1	equ	0xFE6
 22950                           postdec1	equ	0xFE5
 22951                           fsr1h	equ	0xFE2
 22952                           fsr1l	equ	0xFE1
 22953                           indf2	equ	0xFDF
 22954                           postinc2	equ	0xFDE
 22955                           postdec2	equ	0xFDD
 22956                           plusw2	equ	0xFDB
 22957                           fsr2h	equ	0xFDA
 22958                           fsr2l	equ	0xFD9
 22959                           status	equ	0xFD8
 22960                           
 22961 ;; *************** function _RTCC_loop *****************
 22962 ;; Defined at:
 22963 ;;		line 387 in file "../My_header\My_RTCC.h"
 22964 ;; Parameters:    Size  Location     Type
 22965 ;;		None
 22966 ;; Auto vars:     Size  Location     Type
 22967 ;;		None
 22968 ;; Return value:  Size  Location     Type
 22969 ;;		None               void
 22970 ;; Registers used:
 22971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22972 ;; Tracked objects:
 22973 ;;		On entry : 0/0
 22974 ;;		On exit  : 0/0
 22975 ;;		Unchanged: 0/0
 22976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22981 ;;Total ram usage:        0 bytes
 22982 ;; Hardware stack levels used:    1
 22983 ;; Hardware stack levels required when called:   15
 22984 ;; This function calls:
 22985 ;;		_RTCC_from_RTCC
 22986 ;; This function is called by:
 22987 ;;		_main
 22988 ;; This function uses a non-reentrant model
 22989 ;;
 22990                           
 22991                           	psect	text92
 22992  016D66                     __ptext92:
 22993                           	opt stack 0
 22994  016D66                     _RTCC_loop:
 22995                           	opt stack 15
 22996  016D66                     l1149:
 22997  016D66  010F               	movlb	15	; () banked
 22998  016D68  B93F               	btfsc	63,4,b	;volatile
 22999  016D6A  D7FD               	goto	l1149
 23000                           
 23001                           ; BSR set to: 15
 23002                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 23003                           
 23004                           ; BSR set to: 15
 23005  016D6C  0E00               	movlw	0
 23006  016D6E  B73F               	btfsc	63,3,b	;volatile
 23007  016D70  0E01               	movlw	1
 23008  016D72  0100               	movlb	0	; () banked
 23009  016D74  6FF7               	movwf	_halfsec& (0+255),b
 23010                           
 23011                           ; BSR set to: 0
 23012                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 23013  016D76  0100               	movlb	0	; () banked
 23014  016D78  51F7               	movf	_halfsec& (0+255),w,b
 23015  016D7A  1814               	xorwf	RTCC_loop@prev_halfsec,w,c
 23016  016D7C  B4D8               	btfsc	status,2,c
 23017  016D7E  0012               	return	
 23018                           
 23019                           ; BSR set to: 0
 23020                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 23021  016D80  C0F7  F014         	movff	_halfsec,RTCC_loop@prev_halfsec
 23022                           
 23023                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 23024  016D84  C0F7  F0F4         	movff	_halfsec,_colon
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 23028  016D88  0E01               	movlw	1
 23029  016D8A  6E2A               	movwf	_time_change_flag,c
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 23033  016D8C  0E7E               	movlw	low _caltime_now
 23034  016D8E  0100               	movlb	0	; () banked
 23035  016D90  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 23036  016D92  0E01               	movlw	high _caltime_now
 23037  016D94  0100               	movlb	0	; () banked
 23038  016D96  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 23039  016D98  0EFC               	movlw	low _epoch_now
 23040  016D9A  0100               	movlb	0	; () banked
 23041  016D9C  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 23042  016D9E  0E00               	movlw	high _epoch_now
 23043  016DA0  0100               	movlb	0	; () banked
 23044  016DA2  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 23045  016DA4  EC7F  F0B9         	call	_RTCC_from_RTCC	;wreg free
 23046  016DA8  0012               	return	
 23047  016DAA                     __end_of_RTCC_loop:
 23048                           	opt stack 0
 23049                           tblptru	equ	0xFF8
 23050                           tblptrh	equ	0xFF7
 23051                           tblptrl	equ	0xFF6
 23052                           tablat	equ	0xFF5
 23053                           prodh	equ	0xFF4
 23054                           prodl	equ	0xFF3
 23055                           intcon	equ	0xFF2
 23056                           intcon2	equ	0xFF1
 23057                           postinc0	equ	0xFEE
 23058                           wreg	equ	0xFE8
 23059                           indf1	equ	0xFE7
 23060                           postinc1	equ	0xFE6
 23061                           postdec1	equ	0xFE5
 23062                           fsr1h	equ	0xFE2
 23063                           fsr1l	equ	0xFE1
 23064                           indf2	equ	0xFDF
 23065                           postinc2	equ	0xFDE
 23066                           postdec2	equ	0xFDD
 23067                           plusw2	equ	0xFDB
 23068                           fsr2h	equ	0xFDA
 23069                           fsr2l	equ	0xFD9
 23070                           status	equ	0xFD8
 23071                           
 23072 ;; *************** function _RTCC_from_RTCC *****************
 23073 ;; Defined at:
 23074 ;;		line 231 in file "../My_header\My_RTCC.h"
 23075 ;; Parameters:    Size  Location     Type
 23076 ;;  ct              2   40[BANK0 ] PTR struct .
 23077 ;;		 -> caltime_now(7), 
 23078 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 23079 ;;		 -> epoch_now(4), 
 23080 ;; Auto vars:     Size  Location     Type
 23081 ;;		None
 23082 ;; Return value:  Size  Location     Type
 23083 ;;		None               void
 23084 ;; Registers used:
 23085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23086 ;; Tracked objects:
 23087 ;;		On entry : 0/0
 23088 ;;		On exit  : 0/0
 23089 ;;		Unchanged: 0/0
 23090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23095 ;;Total ram usage:        4 bytes
 23096 ;; Hardware stack levels used:    1
 23097 ;; Hardware stack levels required when called:   14
 23098 ;; This function calls:
 23099 ;;		_RTCC_to_caltime
 23100 ;;		_caltime_to_epoch
 23101 ;; This function is called by:
 23102 ;;		_display_time_1602
 23103 ;;		_RTCC_adjust_time_inc
 23104 ;;		_RTCC_adjust_time_dec
 23105 ;;		_RTCC_loop
 23106 ;;		_print_time
 23107 ;;		_normal_loop
 23108 ;;		_software_init
 23109 ;;		_display_time_0802
 23110 ;; This function uses a non-reentrant model
 23111 ;;
 23112                           
 23113                           	psect	text93
 23114  0172FE                     __ptext93:
 23115                           	opt stack 0
 23116  0172FE                     _RTCC_from_RTCC:
 23117                           	opt stack 15
 23118                           
 23119                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 23120                           
 23121                           ;incstack = 0
 23122  0172FE  C088  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 23123  017302  C089  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 23124  017306  ECB6  F0AD         	call	_RTCC_to_caltime	;wreg free
 23125                           
 23126                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 23127  01730A  C088  F079         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 23128  01730E  C089  F07A         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 23129  017312  C08A  F07B         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 23130  017316  C08B  F07C         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 23131  01731A  EC3B  F094         	call	_caltime_to_epoch	;wreg free
 23132  01731E  0012               	return		;funcret
 23133  017320                     __end_of_RTCC_from_RTCC:
 23134                           	opt stack 0
 23135                           tblptru	equ	0xFF8
 23136                           tblptrh	equ	0xFF7
 23137                           tblptrl	equ	0xFF6
 23138                           tablat	equ	0xFF5
 23139                           prodh	equ	0xFF4
 23140                           prodl	equ	0xFF3
 23141                           intcon	equ	0xFF2
 23142                           intcon2	equ	0xFF1
 23143                           postinc0	equ	0xFEE
 23144                           wreg	equ	0xFE8
 23145                           indf1	equ	0xFE7
 23146                           postinc1	equ	0xFE6
 23147                           postdec1	equ	0xFE5
 23148                           fsr1h	equ	0xFE2
 23149                           fsr1l	equ	0xFE1
 23150                           indf2	equ	0xFDF
 23151                           postinc2	equ	0xFDE
 23152                           postdec2	equ	0xFDD
 23153                           plusw2	equ	0xFDB
 23154                           fsr2h	equ	0xFDA
 23155                           fsr2l	equ	0xFD9
 23156                           status	equ	0xFD8
 23157                           
 23158 ;; *************** function _caltime_to_epoch *****************
 23159 ;; Defined at:
 23160 ;;		line 211 in file "../My_header\My_RTCC.h"
 23161 ;; Parameters:    Size  Location     Type
 23162 ;;  ct              2   25[BANK0 ] PTR struct .
 23163 ;;		 -> caltime_now(7), 
 23164 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 23165 ;;		 -> epoch_now(4), 
 23166 ;; Auto vars:     Size  Location     Type
 23167 ;;  month           1   39[BANK0 ] unsigned char 
 23168 ;;  month           1   34[BANK0 ] unsigned char 
 23169 ;;  year            1   33[BANK0 ] unsigned char 
 23170 ;;  epoch           4   35[BANK0 ] unsigned long 
 23171 ;; Return value:  Size  Location     Type
 23172 ;;		None               void
 23173 ;; Registers used:
 23174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23175 ;; Tracked objects:
 23176 ;;		On entry : 0/0
 23177 ;;		On exit  : 0/0
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23181 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23183 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23184 ;;Total ram usage:       15 bytes
 23185 ;; Hardware stack levels used:    1
 23186 ;; Hardware stack levels required when called:   13
 23187 ;; This function calls:
 23188 ;;		___lmul
 23189 ;;		_month_length
 23190 ;; This function is called by:
 23191 ;;		_RTCC_from_RTCC
 23192 ;;		_RTCC_from_caltime
 23193 ;; This function uses a non-reentrant model
 23194 ;;
 23195                           
 23196                           	psect	text94
 23197  012876                     __ptext94:
 23198                           	opt stack 0
 23199  012876                     _caltime_to_epoch:
 23200                           	opt stack 15
 23201                           
 23202                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 23203                           
 23204                           ;incstack = 0
 23205  012876  0E00               	movlw	0
 23206  012878  0100               	movlb	0	; () banked
 23207  01287A  6F83               	movwf	caltime_to_epoch@epoch& (0+255),b
 23208  01287C  0E00               	movlw	0
 23209  01287E  6F84               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 23210  012880  0E00               	movlw	0
 23211  012882  6F85               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 23212  012884  0E00               	movlw	0
 23213  012886  6F86               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 23214                           
 23215                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 23216  012888  0E00               	movlw	0
 23217  01288A  0100               	movlb	0	; () banked
 23218  01288C  6F81               	movwf	caltime_to_epoch@year& (0+255),b
 23219  01288E  D037               	goto	l10194
 23220  012890                     l10180:
 23221                           
 23222                           ; BSR set to: 0
 23223                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 23224  012890  0E01               	movlw	1
 23225  012892  0100               	movlb	0	; () banked
 23226  012894  6F87               	movwf	caltime_to_epoch@month& (0+255),b
 23227  012896                     l10182:
 23228                           
 23229                           ; BSR set to: 0
 23230  012896  0E0C               	movlw	12
 23231  012898  0100               	movlb	0	; () banked
 23232  01289A  6587               	cpfsgt	caltime_to_epoch@month& (0+255),b
 23233  01289C  D001               	goto	l10186
 23234  01289E  D02D               	goto	l10192
 23235  0128A0                     l10186:
 23236                           
 23237                           ; BSR set to: 0
 23238                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 23239  0128A0  C087  F066         	movff	caltime_to_epoch@month,month_length@month
 23240  0128A4  0100               	movlb	0	; () banked
 23241  0128A6  5181               	movf	caltime_to_epoch@year& (0+255),w,b
 23242  0128A8  EC3D  F0A6         	call	_month_length
 23243  0128AC  0100               	movlb	0	; () banked
 23244  0128AE  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23245  0128B0  0100               	movlb	0	; () banked
 23246  0128B2  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23247  0128B4  0100               	movlb	0	; () banked
 23248  0128B6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23249  0128B8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23250  0128BA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23251  0128BC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23252  0128BE  0E80               	movlw	128
 23253  0128C0  0100               	movlb	0	; () banked
 23254  0128C2  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23255  0128C4  0E51               	movlw	81
 23256  0128C6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23257  0128C8  0E01               	movlw	1
 23258  0128CA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23259  0128CC  0E00               	movlw	0
 23260  0128CE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23261  0128D0  EC29  F0B3         	call	___lmul	;wreg free
 23262  0128D4  0100               	movlb	0	; () banked
 23263  0128D6  516D               	movf	?___lmul& (0+255),w,b
 23264  0128D8  0100               	movlb	0	; () banked
 23265  0128DA  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23266  0128DC  0100               	movlb	0	; () banked
 23267  0128DE  516E               	movf	(?___lmul+1)& (0+255),w,b
 23268  0128E0  0100               	movlb	0	; () banked
 23269  0128E2  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23270  0128E4  0100               	movlb	0	; () banked
 23271  0128E6  516F               	movf	(?___lmul+2)& (0+255),w,b
 23272  0128E8  0100               	movlb	0	; () banked
 23273  0128EA  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23274  0128EC  0100               	movlb	0	; () banked
 23275  0128EE  5170               	movf	(?___lmul+3)& (0+255),w,b
 23276  0128F0  0100               	movlb	0	; () banked
 23277  0128F2  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23278                           
 23279                           ; BSR set to: 0
 23280  0128F4  0100               	movlb	0	; () banked
 23281  0128F6  2B87               	incf	caltime_to_epoch@month& (0+255),f,b
 23282  0128F8  D7CE               	goto	l10182
 23283  0128FA                     l10192:
 23284                           
 23285                           ; BSR set to: 0
 23286  0128FA  0100               	movlb	0	; () banked
 23287  0128FC  2B81               	incf	caltime_to_epoch@year& (0+255),f,b
 23288  0128FE                     l10194:
 23289                           
 23290                           ; BSR set to: 0
 23291  0128FE  0100               	movlb	0	; () banked
 23292  012900  EE20 F006          	lfsr	2,6
 23293  012904  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23294  012906  26D9               	addwf	fsr2l,f,c
 23295  012908  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23296  01290A  22DA               	addwfc	fsr2h,f,c
 23297  01290C  50DE               	movf	postinc2,w,c
 23298  01290E  0100               	movlb	0	; () banked
 23299  012910  5D81               	subwf	caltime_to_epoch@year& (0+255),w,b
 23300  012912  A0D8               	btfss	status,0,c
 23301  012914  D7BD               	goto	l10180
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;My_header\My_RTCC.h: 216: }
 23305                           ;My_header\My_RTCC.h: 217: }
 23306                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 23307                           
 23308                           ; BSR set to: 0
 23309  012916  0E01               	movlw	1
 23310  012918  0100               	movlb	0	; () banked
 23311  01291A  6F82               	movwf	caltime_to_epoch@month_3889& (0+255),b
 23312  01291C  D032               	goto	l10202
 23313  01291E                     l10198:
 23314                           
 23315                           ; BSR set to: 0
 23316                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 23317  01291E  C082  F066         	movff	caltime_to_epoch@month_3889,month_length@month
 23318  012922  0100               	movlb	0	; () banked
 23319  012924  EE20 F006          	lfsr	2,6
 23320  012928  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23321  01292A  26D9               	addwf	fsr2l,f,c
 23322  01292C  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23323  01292E  22DA               	addwfc	fsr2h,f,c
 23324  012930  50DF               	movf	indf2,w,c
 23325  012932  EC3D  F0A6         	call	_month_length
 23326  012936  0100               	movlb	0	; () banked
 23327  012938  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23328  01293A  0100               	movlb	0	; () banked
 23329  01293C  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23330  01293E  0100               	movlb	0	; () banked
 23331  012940  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23332  012942  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23333  012944  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23334  012946  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23335  012948  0E80               	movlw	128
 23336  01294A  0100               	movlb	0	; () banked
 23337  01294C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23338  01294E  0E51               	movlw	81
 23339  012950  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23340  012952  0E01               	movlw	1
 23341  012954  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23342  012956  0E00               	movlw	0
 23343  012958  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23344  01295A  EC29  F0B3         	call	___lmul	;wreg free
 23345  01295E  0100               	movlb	0	; () banked
 23346  012960  516D               	movf	?___lmul& (0+255),w,b
 23347  012962  0100               	movlb	0	; () banked
 23348  012964  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23349  012966  0100               	movlb	0	; () banked
 23350  012968  516E               	movf	(?___lmul+1)& (0+255),w,b
 23351  01296A  0100               	movlb	0	; () banked
 23352  01296C  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23353  01296E  0100               	movlb	0	; () banked
 23354  012970  516F               	movf	(?___lmul+2)& (0+255),w,b
 23355  012972  0100               	movlb	0	; () banked
 23356  012974  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23357  012976  0100               	movlb	0	; () banked
 23358  012978  5170               	movf	(?___lmul+3)& (0+255),w,b
 23359  01297A  0100               	movlb	0	; () banked
 23360  01297C  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23361                           
 23362                           ; BSR set to: 0
 23363  01297E  0100               	movlb	0	; () banked
 23364  012980  2B82               	incf	caltime_to_epoch@month_3889& (0+255),f,b
 23365  012982                     l10202:
 23366                           
 23367                           ; BSR set to: 0
 23368  012982  0100               	movlb	0	; () banked
 23369  012984  EE20 F005          	lfsr	2,5
 23370  012988  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23371  01298A  26D9               	addwf	fsr2l,f,c
 23372  01298C  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23373  01298E  22DA               	addwfc	fsr2h,f,c
 23374  012990  50DE               	movf	postinc2,w,c
 23375  012992  0100               	movlb	0	; () banked
 23376  012994  5D82               	subwf	caltime_to_epoch@month_3889& (0+255),w,b
 23377  012996  A0D8               	btfss	status,0,c
 23378  012998  D7C2               	goto	l10198
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;My_header\My_RTCC.h: 220: }
 23382                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 23383                           
 23384                           ; BSR set to: 0
 23385  01299A  0EFF               	movlw	255
 23386  01299C  0100               	movlb	0	; () banked
 23387  01299E  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23388  0129A0  0EFF               	movlw	255
 23389  0129A2  0100               	movlb	0	; () banked
 23390  0129A4  6F7E               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 23391  0129A6  0100               	movlb	0	; () banked
 23392  0129A8  EE20 F004          	lfsr	2,4
 23393  0129AC  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23394  0129AE  26D9               	addwf	fsr2l,f,c
 23395  0129B0  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23396  0129B2  22DA               	addwfc	fsr2h,f,c
 23397  0129B4  50DF               	movf	indf2,w,c
 23398  0129B6  0100               	movlb	0	; () banked
 23399  0129B8  6F7F               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 23400  0129BA  6B80               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 23401  0129BC  0100               	movlb	0	; () banked
 23402  0129BE  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23403  0129C0  0100               	movlb	0	; () banked
 23404  0129C2  277F               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 23405  0129C4  0100               	movlb	0	; () banked
 23406  0129C6  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 23407  0129C8  0100               	movlb	0	; () banked
 23408  0129CA  2380               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 23409  0129CC  C07F  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 23410  0129D0  C080  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 23411  0129D4  0100               	movlb	0	; () banked
 23412  0129D6  0E00               	movlw	0
 23413  0129D8  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23414  0129DA  0EFF               	movlw	-1
 23415  0129DC  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 23416  0129DE  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 23417  0129E0  0E80               	movlw	128
 23418  0129E2  0100               	movlb	0	; () banked
 23419  0129E4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23420  0129E6  0E51               	movlw	81
 23421  0129E8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23422  0129EA  0E01               	movlw	1
 23423  0129EC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23424  0129EE  0E00               	movlw	0
 23425  0129F0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23426  0129F2  EC29  F0B3         	call	___lmul	;wreg free
 23427  0129F6  0100               	movlb	0	; () banked
 23428  0129F8  516D               	movf	?___lmul& (0+255),w,b
 23429  0129FA  0100               	movlb	0	; () banked
 23430  0129FC  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23431  0129FE  0100               	movlb	0	; () banked
 23432  012A00  516E               	movf	(?___lmul+1)& (0+255),w,b
 23433  012A02  0100               	movlb	0	; () banked
 23434  012A04  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23435  012A06  0100               	movlb	0	; () banked
 23436  012A08  516F               	movf	(?___lmul+2)& (0+255),w,b
 23437  012A0A  0100               	movlb	0	; () banked
 23438  012A0C  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23439  012A0E  0100               	movlb	0	; () banked
 23440  012A10  5170               	movf	(?___lmul+3)& (0+255),w,b
 23441  012A12  0100               	movlb	0	; () banked
 23442  012A14  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23443                           
 23444                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 23445  012A16  0100               	movlb	0	; () banked
 23446  012A18  EE20 F002          	lfsr	2,2
 23447  012A1C  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23448  012A1E  26D9               	addwf	fsr2l,f,c
 23449  012A20  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23450  012A22  22DA               	addwfc	fsr2h,f,c
 23451  012A24  50DF               	movf	indf2,w,c
 23452  012A26  0100               	movlb	0	; () banked
 23453  012A28  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23454  012A2A  0100               	movlb	0	; () banked
 23455  012A2C  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23456  012A2E  0100               	movlb	0	; () banked
 23457  012A30  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23458  012A32  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23459  012A34  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23460  012A36  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23461  012A38  0E10               	movlw	16
 23462  012A3A  0100               	movlb	0	; () banked
 23463  012A3C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23464  012A3E  0E0E               	movlw	14
 23465  012A40  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23466  012A42  0E00               	movlw	0
 23467  012A44  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23468  012A46  0E00               	movlw	0
 23469  012A48  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23470  012A4A  EC29  F0B3         	call	___lmul	;wreg free
 23471  012A4E  0100               	movlb	0	; () banked
 23472  012A50  516D               	movf	?___lmul& (0+255),w,b
 23473  012A52  0100               	movlb	0	; () banked
 23474  012A54  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23475  012A56  0100               	movlb	0	; () banked
 23476  012A58  516E               	movf	(?___lmul+1)& (0+255),w,b
 23477  012A5A  0100               	movlb	0	; () banked
 23478  012A5C  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23479  012A5E  0100               	movlb	0	; () banked
 23480  012A60  516F               	movf	(?___lmul+2)& (0+255),w,b
 23481  012A62  0100               	movlb	0	; () banked
 23482  012A64  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23483  012A66  0100               	movlb	0	; () banked
 23484  012A68  5170               	movf	(?___lmul+3)& (0+255),w,b
 23485  012A6A  0100               	movlb	0	; () banked
 23486  012A6C  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23487                           
 23488                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 23489  012A6E  0100               	movlb	0	; () banked
 23490  012A70  EE20 F001          	lfsr	2,1
 23491  012A74  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23492  012A76  26D9               	addwf	fsr2l,f,c
 23493  012A78  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23494  012A7A  22DA               	addwfc	fsr2h,f,c
 23495  012A7C  50DF               	movf	indf2,w,c
 23496  012A7E  0100               	movlb	0	; () banked
 23497  012A80  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23498  012A82  0100               	movlb	0	; () banked
 23499  012A84  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23500  012A86  0100               	movlb	0	; () banked
 23501  012A88  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23502  012A8A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23503  012A8C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23504  012A8E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23505  012A90  0E3C               	movlw	60
 23506  012A92  0100               	movlb	0	; () banked
 23507  012A94  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23508  012A96  0E00               	movlw	0
 23509  012A98  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23510  012A9A  0E00               	movlw	0
 23511  012A9C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23512  012A9E  0E00               	movlw	0
 23513  012AA0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23514  012AA2  EC29  F0B3         	call	___lmul	;wreg free
 23515  012AA6  0100               	movlb	0	; () banked
 23516  012AA8  516D               	movf	?___lmul& (0+255),w,b
 23517  012AAA  0100               	movlb	0	; () banked
 23518  012AAC  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23519  012AAE  0100               	movlb	0	; () banked
 23520  012AB0  516E               	movf	(?___lmul+1)& (0+255),w,b
 23521  012AB2  0100               	movlb	0	; () banked
 23522  012AB4  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23523  012AB6  0100               	movlb	0	; () banked
 23524  012AB8  516F               	movf	(?___lmul+2)& (0+255),w,b
 23525  012ABA  0100               	movlb	0	; () banked
 23526  012ABC  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23527  012ABE  0100               	movlb	0	; () banked
 23528  012AC0  5170               	movf	(?___lmul+3)& (0+255),w,b
 23529  012AC2  0100               	movlb	0	; () banked
 23530  012AC4  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23531                           
 23532                           ; BSR set to: 0
 23533                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 23534  012AC6  C079  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 23535  012ACA  C07A  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 23536  012ACE  50DF               	movf	indf2,w,c
 23537  012AD0  0100               	movlb	0	; () banked
 23538  012AD2  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23539  012AD4  0100               	movlb	0	; () banked
 23540  012AD6  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23541  012AD8  0100               	movlb	0	; () banked
 23542  012ADA  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23543  012ADC  0E00               	movlw	0
 23544  012ADE  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23545  012AE0  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23546  012AE2  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 23550  012AE4  C07B  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 23551  012AE8  C07C  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 23552  012AEC  C083  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 23553  012AF0  C084  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 23554  012AF4  C085  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 23555  012AF8  C086  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 23556                           
 23557                           ; BSR set to: 0
 23558  012AFC  0012               	return		;funcret
 23559  012AFE                     __end_of_caltime_to_epoch:
 23560                           	opt stack 0
 23561                           tblptru	equ	0xFF8
 23562                           tblptrh	equ	0xFF7
 23563                           tblptrl	equ	0xFF6
 23564                           tablat	equ	0xFF5
 23565                           prodh	equ	0xFF4
 23566                           prodl	equ	0xFF3
 23567                           intcon	equ	0xFF2
 23568                           intcon2	equ	0xFF1
 23569                           postinc0	equ	0xFEE
 23570                           wreg	equ	0xFE8
 23571                           indf1	equ	0xFE7
 23572                           postinc1	equ	0xFE6
 23573                           postdec1	equ	0xFE5
 23574                           fsr1h	equ	0xFE2
 23575                           fsr1l	equ	0xFE1
 23576                           indf2	equ	0xFDF
 23577                           postinc2	equ	0xFDE
 23578                           postdec2	equ	0xFDD
 23579                           plusw2	equ	0xFDB
 23580                           fsr2h	equ	0xFDA
 23581                           fsr2l	equ	0xFD9
 23582                           status	equ	0xFD8
 23583                           
 23584 ;; *************** function _month_length *****************
 23585 ;; Defined at:
 23586 ;;		line 87 in file "../My_header\My_RTCC.h"
 23587 ;; Parameters:    Size  Location     Type
 23588 ;;  year            1    wreg     unsigned char 
 23589 ;;  month           1    6[BANK0 ] unsigned char 
 23590 ;; Auto vars:     Size  Location     Type
 23591 ;;  year            1   11[BANK0 ] unsigned char 
 23592 ;; Return value:  Size  Location     Type
 23593 ;;                  1    wreg      unsigned char 
 23594 ;; Registers used:
 23595 ;;		wreg, status,2, status,0, cstack
 23596 ;; Tracked objects:
 23597 ;;		On entry : 0/0
 23598 ;;		On exit  : 0/0
 23599 ;;		Unchanged: 0/0
 23600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23601 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23604 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23605 ;;Total ram usage:        6 bytes
 23606 ;; Hardware stack levels used:    1
 23607 ;; Hardware stack levels required when called:   12
 23608 ;; This function calls:
 23609 ;;		___awmod
 23610 ;; This function is called by:
 23611 ;;		_epoch_to_caltime
 23612 ;;		_caltime_to_epoch
 23613 ;;		_RTCC_adjust_time_inc
 23614 ;;		_RTCC_adjust_time_dec
 23615 ;;		_command_time
 23616 ;; This function uses a non-reentrant model
 23617 ;;
 23618                           
 23619                           	psect	text95
 23620  014C7A                     __ptext95:
 23621                           	opt stack 0
 23622  014C7A                     _month_length:
 23623                           	opt stack 15
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;incstack = 0
 23627                           ;month_length@year stored from wreg
 23628  014C7A  0100               	movlb	0	; () banked
 23629  014C7C  6F6B               	movwf	month_length@year& (0+255),b
 23630                           
 23631                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 23632  014C7E  0E02               	movlw	2
 23633  014C80  0100               	movlb	0	; () banked
 23634  014C82  1966               	xorwf	month_length@month& (0+255),w,b
 23635  014C84  A4D8               	btfss	status,2,c
 23636  014C86  D03E               	goto	l10068
 23637                           
 23638                           ; BSR set to: 0
 23639  014C88  C06B  F060         	movff	month_length@year,___awmod@dividend
 23640  014C8C  0100               	movlb	0	; () banked
 23641  014C8E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23642  014C90  0E00               	movlw	0
 23643  014C92  0100               	movlb	0	; () banked
 23644  014C94  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23645  014C96  0E64               	movlw	100
 23646  014C98  6F62               	movwf	___awmod@divisor& (0+255),b
 23647  014C9A  ECB6  F0AE         	call	___awmod	;wreg free
 23648  014C9E  0100               	movlb	0	; () banked
 23649  014CA0  5160               	movf	?___awmod& (0+255),w,b
 23650  014CA2  0100               	movlb	0	; () banked
 23651  014CA4  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23652  014CA6  A4D8               	btfss	status,2,c
 23653  014CA8  D002               	goto	u11530
 23654  014CAA  0E01               	movlw	1
 23655  014CAC  D001               	goto	u11540
 23656  014CAE                     u11530:
 23657  014CAE  0E00               	movlw	0
 23658  014CB0                     u11540:
 23659  014CB0  0800               	sublw	0
 23660  014CB2  0100               	movlb	0	; () banked
 23661  014CB4  6F67               	movwf	??_month_length& (0+255),b
 23662  014CB6  C06B  F060         	movff	month_length@year,___awmod@dividend
 23663  014CBA  0100               	movlb	0	; () banked
 23664  014CBC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23665  014CBE  0E01               	movlw	1
 23666  014CC0  0100               	movlb	0	; () banked
 23667  014CC2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23668  014CC4  0E90               	movlw	144
 23669  014CC6  6F62               	movwf	___awmod@divisor& (0+255),b
 23670  014CC8  ECB6  F0AE         	call	___awmod	;wreg free
 23671  014CCC  0100               	movlb	0	; () banked
 23672  014CCE  5160               	movf	?___awmod& (0+255),w,b
 23673  014CD0  0100               	movlb	0	; () banked
 23674  014CD2  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23675  014CD4  A4D8               	btfss	status,2,c
 23676  014CD6  D004               	goto	u11550
 23677  014CD8  0100               	movlb	0	; () banked
 23678  014CDA  6B68               	clrf	(??_month_length+1)& (0+255),b
 23679  014CDC  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23680  014CDE  D002               	goto	u11568
 23681  014CE0                     u11550:
 23682  014CE0  0100               	movlb	0	; () banked
 23683  014CE2  6B68               	clrf	(??_month_length+1)& (0+255),b
 23684  014CE4                     u11568:
 23685  014CE4  C06B  F069         	movff	month_length@year,??_month_length+2
 23686  014CE8  0E03               	movlw	3
 23687  014CEA  0100               	movlb	0	; () banked
 23688  014CEC  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23689  014CEE  A4D8               	btfss	status,2,c
 23690  014CF0  D002               	goto	u11570
 23691  014CF2  0E01               	movlw	1
 23692  014CF4  D001               	goto	u11580
 23693  014CF6                     u11570:
 23694  014CF6  0E00               	movlw	0
 23695  014CF8                     u11580:
 23696  014CF8  0100               	movlb	0	; () banked
 23697  014CFA  2568               	addwf	(??_month_length+1)& (0+255),w,b
 23698  014CFC  0100               	movlb	0	; () banked
 23699  014CFE  2567               	addwf	??_month_length& (0+255),w,b
 23700  014D00  0F1C               	addlw	28
 23701                           
 23702                           ; BSR set to: 0
 23703                           
 23704                           ; BSR set to: 0
 23705  014D02  0012               	return	
 23706  014D04                     l10068:
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 23710  014D04  0100               	movlb	0	; () banked
 23711  014D06  5166               	movf	month_length@month& (0+255),w,b
 23712  014D08  0B01               	andlw	1
 23713  014D0A  0100               	movlb	0	; () banked
 23714  014D0C  6F67               	movwf	??_month_length& (0+255),b
 23715  014D0E  6B68               	clrf	(??_month_length+1)& (0+255),b
 23716  014D10  0100               	movlb	0	; () banked
 23717  014D12  1F67               	comf	??_month_length& (0+255),f,b
 23718  014D14  1F68               	comf	(??_month_length+1)& (0+255),f,b
 23719  014D16  4B67               	infsnz	??_month_length& (0+255),f,b
 23720  014D18  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23721  014D1A  0100               	movlb	0	; () banked
 23722  014D1C  5166               	movf	month_length@month& (0+255),w,b
 23723  014D1E  0100               	movlb	0	; () banked
 23724  014D20  6F69               	movwf	(??_month_length+2)& (0+255),b
 23725  014D22  6B6A               	clrf	(??_month_length+3)& (0+255),b
 23726  014D24  0100               	movlb	0	; () banked
 23727  014D26  5167               	movf	??_month_length& (0+255),w,b
 23728  014D28  0100               	movlb	0	; () banked
 23729  014D2A  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 23730  014D2C  0100               	movlb	0	; () banked
 23731  014D2E  5168               	movf	(??_month_length+1)& (0+255),w,b
 23732  014D30  0100               	movlb	0	; () banked
 23733  014D32  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 23734  014D34  0E0D               	movlw	13
 23735  014D36  0100               	movlb	0	; () banked
 23736  014D38  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23737  014D3A  0E00               	movlw	0
 23738  014D3C  176A               	andwf	(??_month_length+3)& (0+255),f,b
 23739  014D3E  0E04               	movlw	4
 23740  014D40  0100               	movlb	0	; () banked
 23741  014D42  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 23742  014D44  0100               	movlb	0	; () banked
 23743  014D46  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 23744  014D48  A4D8               	btfss	status,2,c
 23745  014D4A  D002               	goto	u11590
 23746  014D4C  0E01               	movlw	1
 23747  014D4E  D001               	goto	u11600
 23748  014D50                     u11590:
 23749  014D50  0E00               	movlw	0
 23750  014D52                     u11600:
 23751  014D52  0800               	sublw	0
 23752  014D54  0F1F               	addlw	31
 23753                           
 23754                           ; BSR set to: 0
 23755  014D56  0012               	return	
 23756  014D58                     __end_of_month_length:
 23757                           	opt stack 0
 23758                           tblptru	equ	0xFF8
 23759                           tblptrh	equ	0xFF7
 23760                           tblptrl	equ	0xFF6
 23761                           tablat	equ	0xFF5
 23762                           prodh	equ	0xFF4
 23763                           prodl	equ	0xFF3
 23764                           intcon	equ	0xFF2
 23765                           intcon2	equ	0xFF1
 23766                           postinc0	equ	0xFEE
 23767                           wreg	equ	0xFE8
 23768                           indf1	equ	0xFE7
 23769                           postinc1	equ	0xFE6
 23770                           postdec1	equ	0xFE5
 23771                           fsr1h	equ	0xFE2
 23772                           fsr1l	equ	0xFE1
 23773                           indf2	equ	0xFDF
 23774                           postinc2	equ	0xFDE
 23775                           postdec2	equ	0xFDD
 23776                           plusw2	equ	0xFDB
 23777                           fsr2h	equ	0xFDA
 23778                           fsr2l	equ	0xFD9
 23779                           status	equ	0xFD8
 23780                           
 23781 ;; *************** function ___awmod *****************
 23782 ;; Defined at:
 23783 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 23784 ;; Parameters:    Size  Location     Type
 23785 ;;  dividend        2    0[BANK0 ] int 
 23786 ;;  divisor         2    2[BANK0 ] int 
 23787 ;; Auto vars:     Size  Location     Type
 23788 ;;  sign            1    5[BANK0 ] unsigned char 
 23789 ;;  counter         1    4[BANK0 ] unsigned char 
 23790 ;; Return value:  Size  Location     Type
 23791 ;;                  2    0[BANK0 ] int 
 23792 ;; Registers used:
 23793 ;;		wreg, status,2, status,0
 23794 ;; Tracked objects:
 23795 ;;		On entry : 0/0
 23796 ;;		On exit  : 0/0
 23797 ;;		Unchanged: 0/0
 23798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23802 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23803 ;;Total ram usage:        6 bytes
 23804 ;; Hardware stack levels used:    1
 23805 ;; Hardware stack levels required when called:   11
 23806 ;; This function calls:
 23807 ;;		Nothing
 23808 ;; This function is called by:
 23809 ;;		_month_length
 23810 ;; This function uses a non-reentrant model
 23811 ;;
 23812                           
 23813                           	psect	text96
 23814  015D6C                     __ptext96:
 23815                           	opt stack 0
 23816  015D6C                     ___awmod:
 23817                           	opt stack 15
 23818                           
 23819                           ; BSR set to: 0
 23820                           ;incstack = 0
 23821  015D6C  0E00               	movlw	0
 23822  015D6E  0100               	movlb	0	; () banked
 23823  015D70  6F65               	movwf	___awmod@sign& (0+255),b
 23824                           
 23825                           ; BSR set to: 0
 23826  015D72  0100               	movlb	0	; () banked
 23827  015D74  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23828  015D76  D008               	goto	l10016
 23829                           
 23830                           ; BSR set to: 0
 23831  015D78  0100               	movlb	0	; () banked
 23832  015D7A  6D60               	negf	___awmod@dividend& (0+255),b
 23833  015D7C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23834  015D7E  B0D8               	btfsc	status,0,c
 23835  015D80  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23836                           
 23837                           ; BSR set to: 0
 23838  015D82  0E01               	movlw	1
 23839  015D84  0100               	movlb	0	; () banked
 23840  015D86  6F65               	movwf	___awmod@sign& (0+255),b
 23841  015D88                     l10016:
 23842                           
 23843                           ; BSR set to: 0
 23844  015D88  0100               	movlb	0	; () banked
 23845  015D8A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23846  015D8C  D005               	goto	l10020
 23847                           
 23848                           ; BSR set to: 0
 23849  015D8E  0100               	movlb	0	; () banked
 23850  015D90  6D62               	negf	___awmod@divisor& (0+255),b
 23851  015D92  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23852  015D94  B0D8               	btfsc	status,0,c
 23853  015D96  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23854  015D98                     l10020:
 23855                           
 23856                           ; BSR set to: 0
 23857  015D98  0100               	movlb	0	; () banked
 23858  015D9A  5162               	movf	___awmod@divisor& (0+255),w,b
 23859  015D9C  0100               	movlb	0	; () banked
 23860  015D9E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23861  015DA0  B4D8               	btfsc	status,2,c
 23862  015DA2  D026               	goto	l10036
 23863                           
 23864                           ; BSR set to: 0
 23865  015DA4  0E01               	movlw	1
 23866  015DA6  0100               	movlb	0	; () banked
 23867  015DA8  6F64               	movwf	___awmod@counter& (0+255),b
 23868  015DAA  D006               	goto	l10026
 23869  015DAC                     l10024:
 23870                           
 23871                           ; BSR set to: 0
 23872  015DAC  0100               	movlb	0	; () banked
 23873  015DAE  90D8               	bcf	status,0,c
 23874  015DB0  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23875  015DB2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23876  015DB4  0100               	movlb	0	; () banked
 23877  015DB6  2B64               	incf	___awmod@counter& (0+255),f,b
 23878  015DB8                     l10026:
 23879                           
 23880                           ; BSR set to: 0
 23881  015DB8  0100               	movlb	0	; () banked
 23882  015DBA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23883  015DBC  D7F7               	goto	l10024
 23884  015DBE                     l10028:
 23885                           
 23886                           ; BSR set to: 0
 23887  015DBE  0100               	movlb	0	; () banked
 23888  015DC0  5162               	movf	___awmod@divisor& (0+255),w,b
 23889  015DC2  0100               	movlb	0	; () banked
 23890  015DC4  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23891  015DC6  0100               	movlb	0	; () banked
 23892  015DC8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23893  015DCA  0100               	movlb	0	; () banked
 23894  015DCC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23895  015DCE  A0D8               	btfss	status,0,c
 23896  015DD0  D008               	goto	l10032
 23897                           
 23898                           ; BSR set to: 0
 23899  015DD2  0100               	movlb	0	; () banked
 23900  015DD4  5162               	movf	___awmod@divisor& (0+255),w,b
 23901  015DD6  0100               	movlb	0	; () banked
 23902  015DD8  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23903  015DDA  0100               	movlb	0	; () banked
 23904  015DDC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23905  015DDE  0100               	movlb	0	; () banked
 23906  015DE0  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23907  015DE2                     l10032:
 23908                           
 23909                           ; BSR set to: 0
 23910  015DE2  0100               	movlb	0	; () banked
 23911  015DE4  90D8               	bcf	status,0,c
 23912  015DE6  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23913  015DE8  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23914                           
 23915                           ; BSR set to: 0
 23916  015DEA  0100               	movlb	0	; () banked
 23917  015DEC  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23918  015DEE  D7E7               	goto	l10028
 23919  015DF0                     l10036:
 23920                           
 23921                           ; BSR set to: 0
 23922  015DF0  0100               	movlb	0	; () banked
 23923  015DF2  5165               	movf	___awmod@sign& (0+255),w,b
 23924  015DF4  0100               	movlb	0	; () banked
 23925  015DF6  B4D8               	btfsc	status,2,c
 23926  015DF8  D005               	goto	l10040
 23927                           
 23928                           ; BSR set to: 0
 23929  015DFA  0100               	movlb	0	; () banked
 23930  015DFC  6D60               	negf	___awmod@dividend& (0+255),b
 23931  015DFE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23932  015E00  B0D8               	btfsc	status,0,c
 23933  015E02  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23934  015E04                     l10040:
 23935                           
 23936                           ; BSR set to: 0
 23937  015E04  C060  F060         	movff	___awmod@dividend,?___awmod
 23938  015E08  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23939  015E0C  0012               	return	
 23940  015E0E                     __end_of___awmod:
 23941                           	opt stack 0
 23942                           tblptru	equ	0xFF8
 23943                           tblptrh	equ	0xFF7
 23944                           tblptrl	equ	0xFF6
 23945                           tablat	equ	0xFF5
 23946                           prodh	equ	0xFF4
 23947                           prodl	equ	0xFF3
 23948                           intcon	equ	0xFF2
 23949                           intcon2	equ	0xFF1
 23950                           postinc0	equ	0xFEE
 23951                           wreg	equ	0xFE8
 23952                           indf1	equ	0xFE7
 23953                           postinc1	equ	0xFE6
 23954                           postdec1	equ	0xFE5
 23955                           fsr1h	equ	0xFE2
 23956                           fsr1l	equ	0xFE1
 23957                           indf2	equ	0xFDF
 23958                           postinc2	equ	0xFDE
 23959                           postdec2	equ	0xFDD
 23960                           plusw2	equ	0xFDB
 23961                           fsr2h	equ	0xFDA
 23962                           fsr2l	equ	0xFD9
 23963                           status	equ	0xFD8
 23964                           
 23965 ;; *************** function ___lmul *****************
 23966 ;; Defined at:
 23967 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23968 ;; Parameters:    Size  Location     Type
 23969 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23970 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23971 ;; Auto vars:     Size  Location     Type
 23972 ;;  product         4   21[BANK0 ] unsigned long 
 23973 ;; Return value:  Size  Location     Type
 23974 ;;                  4   13[BANK0 ] unsigned long 
 23975 ;; Registers used:
 23976 ;;		wreg, status,2, status,0
 23977 ;; Tracked objects:
 23978 ;;		On entry : 0/0
 23979 ;;		On exit  : 0/0
 23980 ;;		Unchanged: 0/0
 23981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23982 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23983 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23985 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23986 ;;Total ram usage:       12 bytes
 23987 ;; Hardware stack levels used:    1
 23988 ;; Hardware stack levels required when called:   11
 23989 ;; This function calls:
 23990 ;;		Nothing
 23991 ;; This function is called by:
 23992 ;;		_get_quot_rem
 23993 ;;		_caltime_to_epoch
 23994 ;;		_RTCC_adjust_time_inc
 23995 ;;		_RTCC_adjust_time_dec
 23996 ;; This function uses a non-reentrant model
 23997 ;;
 23998                           
 23999                           	psect	text97
 24000  016652                     __ptext97:
 24001                           	opt stack 0
 24002  016652                     ___lmul:
 24003                           	opt stack 15
 24004                           
 24005                           ; BSR set to: 0
 24006                           ;incstack = 0
 24007  016652  0E00               	movlw	0
 24008  016654  0100               	movlb	0	; () banked
 24009  016656  6F75               	movwf	___lmul@product& (0+255),b
 24010  016658  0E00               	movlw	0
 24011  01665A  6F76               	movwf	(___lmul@product+1)& (0+255),b
 24012  01665C  0E00               	movlw	0
 24013  01665E  6F77               	movwf	(___lmul@product+2)& (0+255),b
 24014  016660  0E00               	movlw	0
 24015  016662  6F78               	movwf	(___lmul@product+3)& (0+255),b
 24016  016664                     l10074:
 24017                           
 24018                           ; BSR set to: 0
 24019  016664  0100               	movlb	0	; () banked
 24020  016666  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 24021  016668  D010               	goto	l10078
 24022                           
 24023                           ; BSR set to: 0
 24024  01666A  0100               	movlb	0	; () banked
 24025  01666C  5171               	movf	___lmul@multiplicand& (0+255),w,b
 24026  01666E  0100               	movlb	0	; () banked
 24027  016670  2775               	addwf	___lmul@product& (0+255),f,b
 24028  016672  0100               	movlb	0	; () banked
 24029  016674  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24030  016676  0100               	movlb	0	; () banked
 24031  016678  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 24032  01667A  0100               	movlb	0	; () banked
 24033  01667C  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24034  01667E  0100               	movlb	0	; () banked
 24035  016680  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 24036  016682  0100               	movlb	0	; () banked
 24037  016684  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24038  016686  0100               	movlb	0	; () banked
 24039  016688  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 24040  01668A                     l10078:
 24041                           
 24042                           ; BSR set to: 0
 24043  01668A  0100               	movlb	0	; () banked
 24044  01668C  90D8               	bcf	status,0,c
 24045  01668E  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 24046  016690  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24047  016692  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24048  016694  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24049                           
 24050                           ; BSR set to: 0
 24051  016696  0100               	movlb	0	; () banked
 24052  016698  90D8               	bcf	status,0,c
 24053  01669A  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24054  01669C  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24055  01669E  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24056  0166A0  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 24057  0166A2  0100               	movlb	0	; () banked
 24058  0166A4  516D               	movf	___lmul@multiplier& (0+255),w,b
 24059  0166A6  0100               	movlb	0	; () banked
 24060  0166A8  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24061  0166AA  0100               	movlb	0	; () banked
 24062  0166AC  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24063  0166AE  0100               	movlb	0	; () banked
 24064  0166B0  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24065  0166B2  A4D8               	btfss	status,2,c
 24066  0166B4  D7D7               	goto	l10074
 24067                           
 24068                           ; BSR set to: 0
 24069  0166B6  C075  F06D         	movff	___lmul@product,?___lmul
 24070  0166BA  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 24071  0166BE  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 24072  0166C2  C078  F070         	movff	___lmul@product+3,?___lmul+3
 24073                           
 24074                           ; BSR set to: 0
 24075  0166C6  0012               	return		;funcret
 24076  0166C8                     __end_of___lmul:
 24077                           	opt stack 0
 24078                           tblptru	equ	0xFF8
 24079                           tblptrh	equ	0xFF7
 24080                           tblptrl	equ	0xFF6
 24081                           tablat	equ	0xFF5
 24082                           prodh	equ	0xFF4
 24083                           prodl	equ	0xFF3
 24084                           intcon	equ	0xFF2
 24085                           intcon2	equ	0xFF1
 24086                           postinc0	equ	0xFEE
 24087                           wreg	equ	0xFE8
 24088                           indf1	equ	0xFE7
 24089                           postinc1	equ	0xFE6
 24090                           postdec1	equ	0xFE5
 24091                           fsr1h	equ	0xFE2
 24092                           fsr1l	equ	0xFE1
 24093                           indf2	equ	0xFDF
 24094                           postinc2	equ	0xFDE
 24095                           postdec2	equ	0xFDD
 24096                           plusw2	equ	0xFDB
 24097                           fsr2h	equ	0xFDA
 24098                           fsr2l	equ	0xFD9
 24099                           status	equ	0xFD8
 24100                           
 24101 ;; *************** function _RTCC_to_caltime *****************
 24102 ;; Defined at:
 24103 ;;		line 121 in file "../My_header\My_RTCC.h"
 24104 ;; Parameters:    Size  Location     Type
 24105 ;;  ct              2    2[BANK0 ] PTR struct .
 24106 ;;		 -> caltime_now(7), 
 24107 ;; Auto vars:     Size  Location     Type
 24108 ;;  dumy            1    4[BANK0 ] unsigned char 
 24109 ;; Return value:  Size  Location     Type
 24110 ;;		None               void
 24111 ;; Registers used:
 24112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24113 ;; Tracked objects:
 24114 ;;		On entry : 0/0
 24115 ;;		On exit  : 0/0
 24116 ;;		Unchanged: 0/0
 24117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24121 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24122 ;;Total ram usage:        3 bytes
 24123 ;; Hardware stack levels used:    1
 24124 ;; Hardware stack levels required when called:   12
 24125 ;; This function calls:
 24126 ;;		_x_to_d
 24127 ;; This function is called by:
 24128 ;;		_RTCC_from_RTCC
 24129 ;; This function uses a non-reentrant model
 24130 ;;
 24131                           
 24132                           	psect	text98
 24133  015B6C                     __ptext98:
 24134                           	opt stack 0
 24135  015B6C                     _RTCC_to_caltime:
 24136                           	opt stack 16
 24137  015B6C                     l993:
 24138  015B6C  010F               	movlb	15	; () banked
 24139  015B6E  B93F               	btfsc	63,4,b	;volatile
 24140  015B70  D7FD               	goto	l993
 24141                           
 24142                           ; BSR set to: 15
 24143                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 24144  015B72  010F               	movlb	15	; () banked
 24145  015B74  813F               	bsf	63,0,b	;volatile
 24146                           
 24147                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 24148  015B76  010F               	movlb	15	; () banked
 24149  015B78  833F               	bsf	63,1,b	;volatile
 24150                           
 24151                           ; BSR set to: 15
 24152                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 24153  015B7A  0100               	movlb	0	; () banked
 24154  015B7C  EE20 F006          	lfsr	2,6
 24155  015B80  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24156  015B82  26D9               	addwf	fsr2l,f,c
 24157  015B84  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24158  015B86  22DA               	addwfc	fsr2h,f,c
 24159  015B88  010F               	movlb	15	; () banked
 24160  015B8A  513A               	movf	58,w,b	;volatile
 24161  015B8C  ECB0  F0B9         	call	_x_to_d
 24162  015B90  6EDF               	movwf	indf2,c
 24163                           
 24164                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 24165  015B92  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 24166                           
 24167                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 24168  015B96  0100               	movlb	0	; () banked
 24169  015B98  EE20 F004          	lfsr	2,4
 24170  015B9C  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24171  015B9E  26D9               	addwf	fsr2l,f,c
 24172  015BA0  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24173  015BA2  22DA               	addwfc	fsr2h,f,c
 24174  015BA4  010F               	movlb	15	; () banked
 24175  015BA6  513A               	movf	58,w,b	;volatile
 24176  015BA8  ECB0  F0B9         	call	_x_to_d
 24177  015BAC  6EDF               	movwf	indf2,c
 24178                           
 24179                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 24180  015BAE  0100               	movlb	0	; () banked
 24181  015BB0  EE20 F005          	lfsr	2,5
 24182  015BB4  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24183  015BB6  26D9               	addwf	fsr2l,f,c
 24184  015BB8  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24185  015BBA  22DA               	addwfc	fsr2h,f,c
 24186  015BBC  010F               	movlb	15	; () banked
 24187  015BBE  513B               	movf	59,w,b	;volatile
 24188  015BC0  ECB0  F0B9         	call	_x_to_d
 24189  015BC4  6EDF               	movwf	indf2,c
 24190                           
 24191                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 24192  015BC6  0100               	movlb	0	; () banked
 24193  015BC8  EE20 F002          	lfsr	2,2
 24194  015BCC  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24195  015BCE  26D9               	addwf	fsr2l,f,c
 24196  015BD0  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24197  015BD2  22DA               	addwfc	fsr2h,f,c
 24198  015BD4  010F               	movlb	15	; () banked
 24199  015BD6  513A               	movf	58,w,b	;volatile
 24200  015BD8  ECB0  F0B9         	call	_x_to_d
 24201  015BDC  6EDF               	movwf	indf2,c
 24202                           
 24203                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 24204  015BDE  0100               	movlb	0	; () banked
 24205  015BE0  EE20 F003          	lfsr	2,3
 24206  015BE4  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24207  015BE6  26D9               	addwf	fsr2l,f,c
 24208  015BE8  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24209  015BEA  22DA               	addwfc	fsr2h,f,c
 24210  015BEC  010F               	movlb	15	; () banked
 24211  015BEE  513B               	movf	59,w,b	;volatile
 24212  015BF0  ECB0  F0B9         	call	_x_to_d
 24213  015BF4  6EDF               	movwf	indf2,c
 24214                           
 24215                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 24216  015BF6  010F               	movlb	15	; () banked
 24217  015BF8  513A               	movf	58,w,b	;volatile
 24218  015BFA  ECB0  F0B9         	call	_x_to_d
 24219  015BFE  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 24220  015C02  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 24221  015C06  6EDF               	movwf	indf2,c
 24222                           
 24223                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 24224  015C08  0100               	movlb	0	; () banked
 24225  015C0A  EE20 F001          	lfsr	2,1
 24226  015C0E  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24227  015C10  26D9               	addwf	fsr2l,f,c
 24228  015C12  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24229  015C14  22DA               	addwfc	fsr2h,f,c
 24230  015C16  010F               	movlb	15	; () banked
 24231  015C18  513B               	movf	59,w,b	;volatile
 24232  015C1A  ECB0  F0B9         	call	_x_to_d
 24233  015C1E  6EDF               	movwf	indf2,c
 24234  015C20  0012               	return		;funcret
 24235  015C22                     __end_of_RTCC_to_caltime:
 24236                           	opt stack 0
 24237                           tblptru	equ	0xFF8
 24238                           tblptrh	equ	0xFF7
 24239                           tblptrl	equ	0xFF6
 24240                           tablat	equ	0xFF5
 24241                           prodh	equ	0xFF4
 24242                           prodl	equ	0xFF3
 24243                           intcon	equ	0xFF2
 24244                           intcon2	equ	0xFF1
 24245                           postinc0	equ	0xFEE
 24246                           wreg	equ	0xFE8
 24247                           indf1	equ	0xFE7
 24248                           postinc1	equ	0xFE6
 24249                           postdec1	equ	0xFE5
 24250                           fsr1h	equ	0xFE2
 24251                           fsr1l	equ	0xFE1
 24252                           indf2	equ	0xFDF
 24253                           postinc2	equ	0xFDE
 24254                           postdec2	equ	0xFDD
 24255                           plusw2	equ	0xFDB
 24256                           fsr2h	equ	0xFDA
 24257                           fsr2l	equ	0xFD9
 24258                           status	equ	0xFD8
 24259                           
 24260 ;; *************** function _x_to_d *****************
 24261 ;; Defined at:
 24262 ;;		line 81 in file "../My_header\My_RTCC.h"
 24263 ;; Parameters:    Size  Location     Type
 24264 ;;  hex             1    wreg     unsigned char 
 24265 ;; Auto vars:     Size  Location     Type
 24266 ;;  hex             1    1[BANK0 ] unsigned char 
 24267 ;; Return value:  Size  Location     Type
 24268 ;;                  1    wreg      unsigned char 
 24269 ;; Registers used:
 24270 ;;		wreg, status,2, status,0, prodl, prodh
 24271 ;; Tracked objects:
 24272 ;;		On entry : 0/0
 24273 ;;		On exit  : 0/0
 24274 ;;		Unchanged: 0/0
 24275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24280 ;;Total ram usage:        2 bytes
 24281 ;; Hardware stack levels used:    1
 24282 ;; Hardware stack levels required when called:   11
 24283 ;; This function calls:
 24284 ;;		Nothing
 24285 ;; This function is called by:
 24286 ;;		_RTCC_to_caltime
 24287 ;; This function uses a non-reentrant model
 24288 ;;
 24289                           
 24290                           	psect	text99
 24291  017360                     __ptext99:
 24292                           	opt stack 0
 24293  017360                     _x_to_d:
 24294                           	opt stack 16
 24295                           
 24296                           ;incstack = 0
 24297                           ;x_to_d@hex stored from wreg
 24298  017360  0100               	movlb	0	; () banked
 24299  017362  6F61               	movwf	x_to_d@hex& (0+255),b
 24300                           
 24301                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 24302  017364  C061  F060         	movff	x_to_d@hex,??_x_to_d
 24303  017368  0E0F               	movlw	15
 24304  01736A  0100               	movlb	0	; () banked
 24305  01736C  1760               	andwf	??_x_to_d& (0+255),f,b
 24306  01736E  0100               	movlb	0	; () banked
 24307  017370  3961               	swapf	x_to_d@hex& (0+255),w,b
 24308  017372  0B0F               	andlw	15
 24309  017374  0B0F               	andlw	15
 24310  017376  0D0A               	mullw	10
 24311  017378  50F3               	movf	prodl,w,c
 24312  01737A  0100               	movlb	0	; () banked
 24313  01737C  2560               	addwf	??_x_to_d& (0+255),w,b
 24314  01737E  0012               	return	
 24315  017380                     __end_of_x_to_d:
 24316                           	opt stack 0
 24317                           tblptru	equ	0xFF8
 24318                           tblptrh	equ	0xFF7
 24319                           tblptrl	equ	0xFF6
 24320                           tablat	equ	0xFF5
 24321                           prodh	equ	0xFF4
 24322                           prodl	equ	0xFF3
 24323                           intcon	equ	0xFF2
 24324                           intcon2	equ	0xFF1
 24325                           postinc0	equ	0xFEE
 24326                           wreg	equ	0xFE8
 24327                           indf1	equ	0xFE7
 24328                           postinc1	equ	0xFE6
 24329                           postdec1	equ	0xFE5
 24330                           fsr1h	equ	0xFE2
 24331                           fsr1l	equ	0xFE1
 24332                           indf2	equ	0xFDF
 24333                           postinc2	equ	0xFDE
 24334                           postdec2	equ	0xFDD
 24335                           plusw2	equ	0xFDB
 24336                           fsr2h	equ	0xFDA
 24337                           fsr2l	equ	0xFD9
 24338                           status	equ	0xFD8
 24339                           
 24340 ;; *************** function _ISR *****************
 24341 ;; Defined at:
 24342 ;;		line 50 in file "main.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;		None
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;		None
 24347 ;; Return value:  Size  Location     Type
 24348 ;;		None               void
 24349 ;; Registers used:
 24350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/0
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24358 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24359 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24360 ;;Total ram usage:       14 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:   10
 24363 ;; This function calls:
 24364 ;;		_LED_indicator
 24365 ;;		_USB_ISR
 24366 ;;		_charge_time_count
 24367 ;;		_integrating
 24368 ;;		_millis_timer
 24369 ;; This function is called by:
 24370 ;;		Interrupt level 2
 24371 ;; This function uses a non-reentrant model
 24372 ;;
 24373                           
 24374                           	psect	intcode
 24375  000008                     __pintcode:
 24376                           	opt stack 0
 24377  000008                     _ISR:
 24378                           	opt stack 11
 24379                           
 24380                           ; BSR set to: 0
 24381                           ;incstack = 0
 24382  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24383  00000A  CFFA F04B          	movff	pclath,??_ISR
 24384  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 24385  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 24386  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 24387  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 24388  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 24389  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 24390  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 24391  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 24392  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 24393  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 24394  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 24395  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 24396  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 24397                           
 24398                           ;main.c: 51: USB_ISR();
 24399  000042  EC2A  F0BA         	call	_USB_ISR	;wreg free
 24400                           
 24401                           ;main.c: 52: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 24402  000046  B4F2               	btfsc	intcon,2,c	;volatile
 24403  000048  AAF2               	btfss	intcon,5,c	;volatile
 24404  00004A  D003               	goto	i2l9904
 24405                           
 24406                           ;main.c: 53: INTCONbits.T0IF = 0;
 24407  00004C  94F2               	bcf	intcon,2,c	;volatile
 24408                           
 24409                           ;main.c: 54: millis_timer();
 24410  00004E  EC5B  F0B9         	call	_millis_timer	;wreg free
 24411  000052                     i2l9904:
 24412                           
 24413                           ;main.c: 55: }
 24414                           ;main.c: 56: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24415  000052  B09E               	btfsc	3998,0,c	;volatile
 24416  000054  A09D               	btfss	3997,0,c	;volatile
 24417  000056  D01D               	goto	i2l9924
 24418                           
 24419                           ;main.c: 57: PIR1bits.TMR1IF = 0;
 24420  000058  909E               	bcf	3998,0,c	;volatile
 24421                           
 24422                           ;main.c: 58: TMR1H = 0xC0;
 24423  00005A  0EC0               	movlw	192
 24424  00005C  6ECF               	movwf	4047,c	;volatile
 24425                           
 24426                           ;main.c: 59: cut_time_flag = 1;
 24427  00005E  0E01               	movlw	1
 24428  000060  6E22               	movwf	_cut_time_flag,c
 24429                           
 24430                           ;main.c: 60: static uint8_t cnt_t1 = 0;
 24431                           ;main.c: 61: if (cnt_t1) {
 24432  000062  0101               	movlb	1	; () banked
 24433  000064  5122               	movf	ISR@cnt_t1& (0+255),w,b
 24434  000066  B4D8               	btfsc	status,2,c
 24435  000068  D004               	goto	i2l9914
 24436                           
 24437                           ; BSR set to: 1
 24438                           ;main.c: 62: cnt_t1 = 0;
 24439  00006A  0E00               	movlw	0
 24440  00006C  0101               	movlb	1	; () banked
 24441  00006E  6F22               	movwf	ISR@cnt_t1& (0+255),b
 24442                           
 24443                           ;main.c: 63: } else {
 24444  000070  D010               	goto	i2l9924
 24445  000072                     i2l9914:
 24446                           
 24447                           ; BSR set to: 1
 24448                           ;main.c: 64: cnt_t1 = 1;
 24449  000072  0E01               	movlw	1
 24450  000074  0101               	movlb	1	; () banked
 24451  000076  6F22               	movwf	ISR@cnt_t1& (0+255),b
 24452                           
 24453                           ;main.c: 65: terminal_data_out_flag = 1;
 24454  000078  0E01               	movlw	1
 24455  00007A  6E29               	movwf	_terminal_data_out_flag,c
 24456                           
 24457                           ; BSR set to: 1
 24458                           ;main.c: 66: integrating();
 24459  00007C  EC18  F0A7         	call	_integrating	;wreg free
 24460                           
 24461                           ;main.c: 67: charge_time_count();
 24462  000080  ECC3  F0B5         	call	_charge_time_count	;wreg free
 24463                           
 24464                           ;main.c: 68: if (pres_print_item == PRINT_DATA)display_flag = 1;
 24465  000084  0E02               	movlw	2
 24466  000086  0100               	movlb	0	; () banked
 24467  000088  19F8               	xorwf	_pres_print_item& (0+255),w,b
 24468  00008A  A4D8               	btfss	status,2,c
 24469  00008C  D002               	goto	i2l9924
 24470                           
 24471                           ; BSR set to: 0
 24472  00008E  0E01               	movlw	1
 24473  000090  6E23               	movwf	_display_flag,c
 24474  000092                     i2l9924:
 24475                           
 24476                           ;main.c: 69: }
 24477                           ;main.c: 70: }
 24478                           ;main.c: 71: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 24479  000092  B2A1               	btfsc	4001,1,c	;volatile
 24480  000094  A2A0               	btfss	4000,1,c	;volatile
 24481  000096  D00F               	goto	i2l1609
 24482                           
 24483                           ;main.c: 72: PIR2bits.TMR3IF = 0;
 24484  000098  92A1               	bcf	4001,1,c	;volatile
 24485                           
 24486                           ;main.c: 73: ctmu_sampling_flag = 1;
 24487  00009A  0E01               	movlw	1
 24488  00009C  6E21               	movwf	_ctmu_sampling_flag,c
 24489                           
 24490                           ;main.c: 74: static uint8_t cnt;
 24491                           ;main.c: 75: if (cnt) {
 24492  00009E  0101               	movlb	1	; () banked
 24493  0000A0  5121               	movf	ISR@cnt& (0+255),w,b
 24494  0000A2  B4D8               	btfsc	status,2,c
 24495  0000A4  D003               	goto	i2l9934
 24496                           
 24497                           ; BSR set to: 1
 24498                           ;main.c: 76: cnt--;
 24499  0000A6  0101               	movlb	1	; () banked
 24500  0000A8  0721               	decf	ISR@cnt& (0+255),f,b
 24501                           
 24502                           ;main.c: 77: } else {
 24503  0000AA  D005               	goto	i2l1609
 24504  0000AC                     i2l9934:
 24505                           
 24506                           ; BSR set to: 1
 24507                           ;main.c: 78: cnt = 8;
 24508  0000AC  0E08               	movlw	8
 24509  0000AE  0101               	movlb	1	; () banked
 24510  0000B0  6F21               	movwf	ISR@cnt& (0+255),b
 24511                           
 24512                           ; BSR set to: 1
 24513                           ;main.c: 79: LED_indicator();
 24514  0000B2  EC6E  F0A0         	call	_LED_indicator	;wreg free
 24515  0000B6                     i2l1609:
 24516  0000B6  C058  FFF5         	movff	??_ISR+13,tablat
 24517  0000BA  C057  FFF8         	movff	??_ISR+12,tblptru
 24518  0000BE  C056  FFF7         	movff	??_ISR+11,tblptrh
 24519  0000C2  C055  FFF6         	movff	??_ISR+10,tblptrl
 24520  0000C6  C054  FFF4         	movff	??_ISR+9,prodh
 24521  0000CA  C053  FFF3         	movff	??_ISR+8,prodl
 24522  0000CE  C052  FFDA         	movff	??_ISR+7,fsr2h
 24523  0000D2  C051  FFD9         	movff	??_ISR+6,fsr2l
 24524  0000D6  C050  FFE2         	movff	??_ISR+5,fsr1h
 24525  0000DA  C04F  FFE1         	movff	??_ISR+4,fsr1l
 24526  0000DE  C04E  FFEA         	movff	??_ISR+3,fsr0h
 24527  0000E2  C04D  FFE9         	movff	??_ISR+2,fsr0l
 24528  0000E6  C04C  FFFB         	movff	??_ISR+1,pclatu
 24529  0000EA  C04B  FFFA         	movff	??_ISR,pclath
 24530  0000EE  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24531  0000F0  0011               	retfie		f
 24532  0000F2                     __end_of_ISR:
 24533                           	opt stack 0
 24534                           pclatu	equ	0xFFB
 24535                           pclath	equ	0xFFA
 24536                           tblptru	equ	0xFF8
 24537                           tblptrh	equ	0xFF7
 24538                           tblptrl	equ	0xFF6
 24539                           tablat	equ	0xFF5
 24540                           prodh	equ	0xFF4
 24541                           prodl	equ	0xFF3
 24542                           intcon	equ	0xFF2
 24543                           intcon2	equ	0xFF1
 24544                           postinc0	equ	0xFEE
 24545                           fsr0h	equ	0xFEA
 24546                           fsr0l	equ	0xFE9
 24547                           wreg	equ	0xFE8
 24548                           indf1	equ	0xFE7
 24549                           postinc1	equ	0xFE6
 24550                           postdec1	equ	0xFE5
 24551                           fsr1h	equ	0xFE2
 24552                           fsr1l	equ	0xFE1
 24553                           indf2	equ	0xFDF
 24554                           postinc2	equ	0xFDE
 24555                           postdec2	equ	0xFDD
 24556                           plusw2	equ	0xFDB
 24557                           fsr2h	equ	0xFDA
 24558                           fsr2l	equ	0xFD9
 24559                           status	equ	0xFD8
 24560                           
 24561 ;; *************** function _millis_timer *****************
 24562 ;; Defined at:
 24563 ;;		line 357 in file "../My_header\My_header.h"
 24564 ;; Parameters:    Size  Location     Type
 24565 ;;		None
 24566 ;; Auto vars:     Size  Location     Type
 24567 ;;		None
 24568 ;; Return value:  Size  Location     Type
 24569 ;;		None               void
 24570 ;; Registers used:
 24571 ;;		wreg, status,2, status,0
 24572 ;; Tracked objects:
 24573 ;;		On entry : 0/0
 24574 ;;		On exit  : 0/0
 24575 ;;		Unchanged: 0/0
 24576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24581 ;;Total ram usage:        0 bytes
 24582 ;; Hardware stack levels used:    1
 24583 ;; This function calls:
 24584 ;;		Nothing
 24585 ;; This function is called by:
 24586 ;;		_ISR
 24587 ;; This function uses a non-reentrant model
 24588 ;;
 24589                           
 24590                           	psect	text101
 24591  0172B6                     __ptext101:
 24592                           	opt stack 0
 24593  0172B6                     _millis_timer:
 24594                           	opt stack 20
 24595                           
 24596                           ;My_header\My_header.h: 358: static uint16_t cnt;
 24597                           ;My_header\My_header.h: 359: if (cnt) {
 24598                           
 24599                           ;incstack = 0
 24600  0172B6  0101               	movlb	1	; () banked
 24601  0172B8  511F               	movf	millis_timer@cnt& (0+255),w,b
 24602  0172BA  0101               	movlb	1	; () banked
 24603  0172BC  1120               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 24604  0172BE  A4D8               	btfss	status,2,c
 24605  0172C0  0012               	return	
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;My_header\My_header.h: 362: cnt = 47;
 24609                           
 24610                           ; BSR set to: 1
 24611                           
 24612                           ; BSR set to: 1
 24613                           ;My_header\My_header.h: 361: } else {
 24614  0172C2  0E00               	movlw	0
 24615  0172C4  0101               	movlb	1	; () banked
 24616  0172C6  6F20               	movwf	(millis_timer@cnt+1)& (0+255),b
 24617  0172C8  0E2F               	movlw	47
 24618  0172CA  6F1F               	movwf	millis_timer@cnt& (0+255),b
 24619                           
 24620                           ; BSR set to: 1
 24621                           ;My_header\My_header.h: 363: ms++;
 24622  0172CC  0E01               	movlw	1
 24623  0172CE  0102               	movlb	2	; () banked
 24624  0172D0  270E               	addwf	_ms& (0+255),f,b
 24625  0172D2  0E00               	movlw	0
 24626  0172D4  230F               	addwfc	(_ms+1)& (0+255),f,b
 24627  0172D6  2310               	addwfc	(_ms+2)& (0+255),f,b
 24628  0172D8  2311               	addwfc	(_ms+3)& (0+255),f,b
 24629  0172DA  0012               	return	
 24630  0172DC                     __end_of_millis_timer:
 24631                           	opt stack 0
 24632                           pclatu	equ	0xFFB
 24633                           pclath	equ	0xFFA
 24634                           tblptru	equ	0xFF8
 24635                           tblptrh	equ	0xFF7
 24636                           tblptrl	equ	0xFF6
 24637                           tablat	equ	0xFF5
 24638                           prodh	equ	0xFF4
 24639                           prodl	equ	0xFF3
 24640                           intcon	equ	0xFF2
 24641                           intcon2	equ	0xFF1
 24642                           postinc0	equ	0xFEE
 24643                           fsr0h	equ	0xFEA
 24644                           fsr0l	equ	0xFE9
 24645                           wreg	equ	0xFE8
 24646                           indf1	equ	0xFE7
 24647                           postinc1	equ	0xFE6
 24648                           postdec1	equ	0xFE5
 24649                           fsr1h	equ	0xFE2
 24650                           fsr1l	equ	0xFE1
 24651                           indf2	equ	0xFDF
 24652                           postinc2	equ	0xFDE
 24653                           postdec2	equ	0xFDD
 24654                           plusw2	equ	0xFDB
 24655                           fsr2h	equ	0xFDA
 24656                           fsr2l	equ	0xFD9
 24657                           status	equ	0xFD8
 24658                           
 24659 ;; *************** function _integrating *****************
 24660 ;; Defined at:
 24661 ;;		line 202 in file "tasks.h"
 24662 ;; Parameters:    Size  Location     Type
 24663 ;;		None
 24664 ;; Auto vars:     Size  Location     Type
 24665 ;;  i               1   15[COMRAM] unsigned char 
 24666 ;; Return value:  Size  Location     Type
 24667 ;;		None               void
 24668 ;; Registers used:
 24669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24670 ;; Tracked objects:
 24671 ;;		On entry : 0/0
 24672 ;;		On exit  : 0/0
 24673 ;;		Unchanged: 0/0
 24674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24679 ;;Total ram usage:        3 bytes
 24680 ;; Hardware stack levels used:    1
 24681 ;; Hardware stack levels required when called:    1
 24682 ;; This function calls:
 24683 ;;		i2___lldiv
 24684 ;; This function is called by:
 24685 ;;		_ISR
 24686 ;; This function uses a non-reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text102
 24690  014E30                     __ptext102:
 24691                           	opt stack 0
 24692  014E30                     _integrating:
 24693                           	opt stack 19
 24694                           
 24695                           ;tasks.h: 203: for (uint8_t i = 0; i < 3; i++) {
 24696                           
 24697                           ;incstack = 0
 24698  014E30  0E00               	movlw	0
 24699  014E32  6E3C               	movwf	integrating@i,c
 24700  014E34                     i2l9418:
 24701  014E34  0E02               	movlw	2
 24702  014E36  643C               	cpfsgt	integrating@i,c
 24703  014E38  D001               	goto	i2l9422
 24704  014E3A  0012               	return	
 24705  014E3C                     i2l9422:
 24706                           
 24707                           ;tasks.h: 204: if (port[i].flag.out_flag) {
 24708  014E3C  503C               	movf	integrating@i,w,c
 24709  014E3E  0D17               	mullw	23
 24710  014E40  0E16               	movlw	22
 24711  014E42  26F3               	addwf	prodl,f,c
 24712  014E44  0E00               	movlw	0
 24713  014E46  22F4               	addwfc	prodh,f,c
 24714  014E48  0E29               	movlw	low _port
 24715  014E4A  24F3               	addwf	prodl,w,c
 24716  014E4C  6ED9               	movwf	fsr2l,c
 24717  014E4E  0E01               	movlw	high _port
 24718  014E50  20F4               	addwfc	prodh,w,c
 24719  014E52  6EDA               	movwf	fsr2h,c
 24720  014E54  0101               	movlb	1	; () banked
 24721  014E56  A4DF               	btfss	indf2,2,c
 24722  014E58  D055               	goto	i2l9428
 24723                           
 24724                           ; BSR set to: 1
 24725                           ;tasks.h: 205: port[i].integrated_current_sec += (uint32_t) (port[i].current);
 24726  014E5A  503C               	movf	integrating@i,w,c
 24727  014E5C  0D17               	mullw	23
 24728  014E5E  0E06               	movlw	6
 24729  014E60  26F3               	addwf	prodl,f,c
 24730  014E62  0E00               	movlw	0
 24731  014E64  22F4               	addwfc	prodh,f,c
 24732  014E66  0E29               	movlw	low _port
 24733  014E68  24F3               	addwf	prodl,w,c
 24734  014E6A  6ED9               	movwf	fsr2l,c
 24735  014E6C  0E01               	movlw	high _port
 24736  014E6E  20F4               	addwfc	prodh,w,c
 24737  014E70  6EDA               	movwf	fsr2h,c
 24738  014E72  CFDE F03A          	movff	postinc2,??_integrating
 24739  014E76  CFDD F03B          	movff	postdec2,??_integrating+1
 24740  014E7A  503C               	movf	integrating@i,w,c
 24741  014E7C  0D17               	mullw	23
 24742  014E7E  0E08               	movlw	8
 24743  014E80  26F3               	addwf	prodl,f,c
 24744  014E82  0E00               	movlw	0
 24745  014E84  22F4               	addwfc	prodh,f,c
 24746  014E86  0E29               	movlw	low _port
 24747  014E88  24F3               	addwf	prodl,w,c
 24748  014E8A  6ED9               	movwf	fsr2l,c
 24749  014E8C  0E01               	movlw	high _port
 24750  014E8E  20F4               	addwfc	prodh,w,c
 24751  014E90  6EDA               	movwf	fsr2h,c
 24752  014E92  503A               	movf	??_integrating,w,c
 24753  014E94  26DE               	addwf	postinc2,f,c
 24754  014E96  503B               	movf	??_integrating+1,w,c
 24755  014E98  22DE               	addwfc	postinc2,f,c
 24756  014E9A  0E00               	movlw	0
 24757  014E9C  22DE               	addwfc	postinc2,f,c
 24758  014E9E  22DE               	addwfc	postinc2,f,c
 24759                           
 24760                           ; BSR set to: 1
 24761                           ;tasks.h: 206: (uint32_t) (port[i].integrated_current) = (uint32_t) (port[i].integrated_
      +                          current_sec) / 3600;
 24762  014EA0  503C               	movf	integrating@i,w,c
 24763  014EA2  0D17               	mullw	23
 24764  014EA4  0E08               	movlw	8
 24765  014EA6  26F3               	addwf	prodl,f,c
 24766  014EA8  0E00               	movlw	0
 24767  014EAA  22F4               	addwfc	prodh,f,c
 24768  014EAC  0E29               	movlw	low _port
 24769  014EAE  24F3               	addwf	prodl,w,c
 24770  014EB0  6ED9               	movwf	fsr2l,c
 24771  014EB2  0E01               	movlw	high _port
 24772  014EB4  20F4               	addwfc	prodh,w,c
 24773  014EB6  6EDA               	movwf	fsr2h,c
 24774  014EB8  CFDE F02D          	movff	postinc2,i2___lldiv@dividend
 24775  014EBC  CFDE F02E          	movff	postinc2,i2___lldiv@dividend+1
 24776  014EC0  CFDE F02F          	movff	postinc2,i2___lldiv@dividend+2
 24777  014EC4  CFDE F030          	movff	postinc2,i2___lldiv@dividend+3
 24778  014EC8  0E10               	movlw	16
 24779  014ECA  6E31               	movwf	i2___lldiv@divisor,c
 24780  014ECC  0E0E               	movlw	14
 24781  014ECE  6E32               	movwf	i2___lldiv@divisor+1,c
 24782  014ED0  0E00               	movlw	0
 24783  014ED2  6E33               	movwf	i2___lldiv@divisor+2,c
 24784  014ED4  0E00               	movlw	0
 24785  014ED6  6E34               	movwf	i2___lldiv@divisor+3,c
 24786  014ED8  EC70  F0B2         	call	i2___lldiv	;wreg free
 24787  014EDC  503C               	movf	integrating@i,w,c
 24788  014EDE  0D17               	mullw	23
 24789  014EE0  0E0C               	movlw	12
 24790  014EE2  26F3               	addwf	prodl,f,c
 24791  014EE4  0E00               	movlw	0
 24792  014EE6  22F4               	addwfc	prodh,f,c
 24793  014EE8  0E29               	movlw	low _port
 24794  014EEA  24F3               	addwf	prodl,w,c
 24795  014EEC  6ED9               	movwf	fsr2l,c
 24796  014EEE  0E01               	movlw	high _port
 24797  014EF0  20F4               	addwfc	prodh,w,c
 24798  014EF2  6EDA               	movwf	fsr2h,c
 24799  014EF4  C02D  FFDE         	movff	?i2___lldiv,postinc2
 24800  014EF8  C02E  FFDE         	movff	?i2___lldiv+1,postinc2
 24801  014EFC  C02F  FFDE         	movff	?i2___lldiv+2,postinc2
 24802  014F00  C030  FFDE         	movff	?i2___lldiv+3,postinc2
 24803  014F04                     i2l9428:
 24804  014F04  2A3C               	incf	integrating@i,f,c
 24805  014F06  D796               	goto	i2l9418
 24806  014F08                     __end_of_integrating:
 24807                           	opt stack 0
 24808                           pclatu	equ	0xFFB
 24809                           pclath	equ	0xFFA
 24810                           tblptru	equ	0xFF8
 24811                           tblptrh	equ	0xFF7
 24812                           tblptrl	equ	0xFF6
 24813                           tablat	equ	0xFF5
 24814                           prodh	equ	0xFF4
 24815                           prodl	equ	0xFF3
 24816                           intcon	equ	0xFF2
 24817                           intcon2	equ	0xFF1
 24818                           postinc0	equ	0xFEE
 24819                           fsr0h	equ	0xFEA
 24820                           fsr0l	equ	0xFE9
 24821                           wreg	equ	0xFE8
 24822                           indf1	equ	0xFE7
 24823                           postinc1	equ	0xFE6
 24824                           postdec1	equ	0xFE5
 24825                           fsr1h	equ	0xFE2
 24826                           fsr1l	equ	0xFE1
 24827                           indf2	equ	0xFDF
 24828                           postinc2	equ	0xFDE
 24829                           postdec2	equ	0xFDD
 24830                           plusw2	equ	0xFDB
 24831                           fsr2h	equ	0xFDA
 24832                           fsr2l	equ	0xFD9
 24833                           status	equ	0xFD8
 24834                           
 24835 ;; *************** function i2___lldiv *****************
 24836 ;; Defined at:
 24837 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 24838 ;; Parameters:    Size  Location     Type
 24839 ;;  dividend        4    0[COMRAM] unsigned long 
 24840 ;;  divisor         4    4[COMRAM] unsigned long 
 24841 ;; Auto vars:     Size  Location     Type
 24842 ;;  __lldiv         4    8[COMRAM] unsigned long 
 24843 ;;  __lldiv         1   12[COMRAM] unsigned char 
 24844 ;; Return value:  Size  Location     Type
 24845 ;;                  4    0[COMRAM] unsigned long 
 24846 ;; Registers used:
 24847 ;;		wreg, status,2, status,0
 24848 ;; Tracked objects:
 24849 ;;		On entry : 0/0
 24850 ;;		On exit  : 0/0
 24851 ;;		Unchanged: 0/0
 24852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24853 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24854 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24856 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24857 ;;Total ram usage:       13 bytes
 24858 ;; Hardware stack levels used:    1
 24859 ;; This function calls:
 24860 ;;		Nothing
 24861 ;; This function is called by:
 24862 ;;		_integrating
 24863 ;; This function uses a non-reentrant model
 24864 ;;
 24865                           
 24866                           	psect	text103
 24867  0164E0                     __ptext103:
 24868                           	opt stack 0
 24869  0164E0                     i2___lldiv:
 24870                           	opt stack 19
 24871                           
 24872                           ;incstack = 0
 24873  0164E0  0E00               	movlw	0
 24874  0164E2  6E35               	movwf	i2___lldiv@quotient,c
 24875  0164E4  0E00               	movlw	0
 24876  0164E6  6E36               	movwf	i2___lldiv@quotient+1,c
 24877  0164E8  0E00               	movlw	0
 24878  0164EA  6E37               	movwf	i2___lldiv@quotient+2,c
 24879  0164EC  0E00               	movlw	0
 24880  0164EE  6E38               	movwf	i2___lldiv@quotient+3,c
 24881  0164F0  5031               	movf	i2___lldiv@divisor,w,c
 24882  0164F2  1032               	iorwf	i2___lldiv@divisor+1,w,c
 24883  0164F4  1033               	iorwf	i2___lldiv@divisor+2,w,c
 24884  0164F6  1034               	iorwf	i2___lldiv@divisor+3,w,c
 24885  0164F8  B4D8               	btfsc	status,2,c
 24886  0164FA  D02A               	goto	i2l2052
 24887  0164FC  0E01               	movlw	1
 24888  0164FE  6E39               	movwf	i2___lldiv@counter,c
 24889  016500  D006               	goto	i2l9252
 24890  016502                     i2l9250:
 24891  016502  90D8               	bcf	status,0,c
 24892  016504  3631               	rlcf	i2___lldiv@divisor,f,c
 24893  016506  3632               	rlcf	i2___lldiv@divisor+1,f,c
 24894  016508  3633               	rlcf	i2___lldiv@divisor+2,f,c
 24895  01650A  3634               	rlcf	i2___lldiv@divisor+3,f,c
 24896  01650C  2A39               	incf	i2___lldiv@counter,f,c
 24897  01650E                     i2l9252:
 24898  01650E  AE34               	btfss	i2___lldiv@divisor+3,7,c
 24899  016510  D7F8               	goto	i2l9250
 24900  016512                     i2l9254:
 24901  016512  90D8               	bcf	status,0,c
 24902  016514  3635               	rlcf	i2___lldiv@quotient,f,c
 24903  016516  3636               	rlcf	i2___lldiv@quotient+1,f,c
 24904  016518  3637               	rlcf	i2___lldiv@quotient+2,f,c
 24905  01651A  3638               	rlcf	i2___lldiv@quotient+3,f,c
 24906  01651C  5031               	movf	i2___lldiv@divisor,w,c
 24907  01651E  5C2D               	subwf	i2___lldiv@dividend,w,c
 24908  016520  5032               	movf	i2___lldiv@divisor+1,w,c
 24909  016522  582E               	subwfb	i2___lldiv@dividend+1,w,c
 24910  016524  5033               	movf	i2___lldiv@divisor+2,w,c
 24911  016526  582F               	subwfb	i2___lldiv@dividend+2,w,c
 24912  016528  5034               	movf	i2___lldiv@divisor+3,w,c
 24913  01652A  5830               	subwfb	i2___lldiv@dividend+3,w,c
 24914  01652C  A0D8               	btfss	status,0,c
 24915  01652E  D009               	goto	i2l9262
 24916  016530  5031               	movf	i2___lldiv@divisor,w,c
 24917  016532  5E2D               	subwf	i2___lldiv@dividend,f,c
 24918  016534  5032               	movf	i2___lldiv@divisor+1,w,c
 24919  016536  5A2E               	subwfb	i2___lldiv@dividend+1,f,c
 24920  016538  5033               	movf	i2___lldiv@divisor+2,w,c
 24921  01653A  5A2F               	subwfb	i2___lldiv@dividend+2,f,c
 24922  01653C  5034               	movf	i2___lldiv@divisor+3,w,c
 24923  01653E  5A30               	subwfb	i2___lldiv@dividend+3,f,c
 24924  016540  8035               	bsf	i2___lldiv@quotient,0,c
 24925  016542                     i2l9262:
 24926  016542  90D8               	bcf	status,0,c
 24927  016544  3234               	rrcf	i2___lldiv@divisor+3,f,c
 24928  016546  3233               	rrcf	i2___lldiv@divisor+2,f,c
 24929  016548  3232               	rrcf	i2___lldiv@divisor+1,f,c
 24930  01654A  3231               	rrcf	i2___lldiv@divisor,f,c
 24931  01654C  2E39               	decfsz	i2___lldiv@counter,f,c
 24932  01654E  D7E1               	goto	i2l9254
 24933  016550                     i2l2052:
 24934  016550  C035  F02D         	movff	i2___lldiv@quotient,?i2___lldiv
 24935  016554  C036  F02E         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 24936  016558  C037  F02F         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 24937  01655C  C038  F030         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 24938  016560  0012               	return		;funcret
 24939  016562                     __end_ofi2___lldiv:
 24940                           	opt stack 0
 24941                           pclatu	equ	0xFFB
 24942                           pclath	equ	0xFFA
 24943                           tblptru	equ	0xFF8
 24944                           tblptrh	equ	0xFF7
 24945                           tblptrl	equ	0xFF6
 24946                           tablat	equ	0xFF5
 24947                           prodh	equ	0xFF4
 24948                           prodl	equ	0xFF3
 24949                           intcon	equ	0xFF2
 24950                           intcon2	equ	0xFF1
 24951                           postinc0	equ	0xFEE
 24952                           fsr0h	equ	0xFEA
 24953                           fsr0l	equ	0xFE9
 24954                           wreg	equ	0xFE8
 24955                           indf1	equ	0xFE7
 24956                           postinc1	equ	0xFE6
 24957                           postdec1	equ	0xFE5
 24958                           fsr1h	equ	0xFE2
 24959                           fsr1l	equ	0xFE1
 24960                           indf2	equ	0xFDF
 24961                           postinc2	equ	0xFDE
 24962                           postdec2	equ	0xFDD
 24963                           plusw2	equ	0xFDB
 24964                           fsr2h	equ	0xFDA
 24965                           fsr2l	equ	0xFD9
 24966                           status	equ	0xFD8
 24967                           
 24968 ;; *************** function _charge_time_count *****************
 24969 ;; Defined at:
 24970 ;;		line 211 in file "tasks.h"
 24971 ;; Parameters:    Size  Location     Type
 24972 ;;		None
 24973 ;; Auto vars:     Size  Location     Type
 24974 ;;  i               1    2[COMRAM] unsigned char 
 24975 ;; Return value:  Size  Location     Type
 24976 ;;		None               void
 24977 ;; Registers used:
 24978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24979 ;; Tracked objects:
 24980 ;;		On entry : 0/0
 24981 ;;		On exit  : 0/0
 24982 ;;		Unchanged: 0/0
 24983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24988 ;;Total ram usage:        3 bytes
 24989 ;; Hardware stack levels used:    1
 24990 ;; This function calls:
 24991 ;;		Nothing
 24992 ;; This function is called by:
 24993 ;;		_ISR
 24994 ;; This function uses a non-reentrant model
 24995 ;;
 24996                           
 24997                           	psect	text104
 24998  016B86                     __ptext104:
 24999                           	opt stack 0
 25000  016B86                     _charge_time_count:
 25001                           	opt stack 20
 25002                           
 25003                           ;tasks.h: 212: uint8_t i;
 25004                           ;tasks.h: 213: for (i = 0; i < 3; i++) {
 25005                           
 25006                           ;incstack = 0
 25007  016B86  0E00               	movlw	0
 25008  016B88  6E2F               	movwf	charge_time_count@i,c
 25009  016B8A                     i2l9434:
 25010  016B8A  0E02               	movlw	2
 25011  016B8C  642F               	cpfsgt	charge_time_count@i,c
 25012  016B8E  D001               	goto	i2l9438
 25013  016B90  0012               	return	
 25014  016B92                     i2l9438:
 25015                           
 25016                           ;tasks.h: 214: if (port[i].current > 100)port[i].integrated_time++;
 25017  016B92  502F               	movf	charge_time_count@i,w,c
 25018  016B94  0D17               	mullw	23
 25019  016B96  0E06               	movlw	6
 25020  016B98  26F3               	addwf	prodl,f,c
 25021  016B9A  0E00               	movlw	0
 25022  016B9C  22F4               	addwfc	prodh,f,c
 25023  016B9E  0E29               	movlw	low _port
 25024  016BA0  24F3               	addwf	prodl,w,c
 25025  016BA2  6ED9               	movwf	fsr2l,c
 25026  016BA4  0E01               	movlw	high _port
 25027  016BA6  20F4               	addwfc	prodh,w,c
 25028  016BA8  6EDA               	movwf	fsr2h,c
 25029  016BAA  0E01               	movlw	1
 25030  016BAC  50DB               	movf	plusw2,w,c
 25031  016BAE  E104               	bnz	i2u1075_40
 25032  016BB0  0E65               	movlw	101
 25033  016BB2  5CDE               	subwf	postinc2,w,c
 25034  016BB4  A0D8               	btfss	status,0,c
 25035  016BB6  D011               	goto	i2l9442
 25036  016BB8                     i2u1075_40:
 25037  016BB8  502F               	movf	charge_time_count@i,w,c
 25038  016BBA  0D17               	mullw	23
 25039  016BBC  0E10               	movlw	16
 25040  016BBE  26F3               	addwf	prodl,f,c
 25041  016BC0  0E00               	movlw	0
 25042  016BC2  22F4               	addwfc	prodh,f,c
 25043  016BC4  0E29               	movlw	low _port
 25044  016BC6  24F3               	addwf	prodl,w,c
 25045  016BC8  6ED9               	movwf	fsr2l,c
 25046  016BCA  0E01               	movlw	high _port
 25047  016BCC  20F4               	addwfc	prodh,w,c
 25048  016BCE  6EDA               	movwf	fsr2h,c
 25049  016BD0  2ADE               	incf	postinc2,f,c
 25050  016BD2  0E00               	movlw	0
 25051  016BD4  22DE               	addwfc	postinc2,f,c
 25052  016BD6  22DE               	addwfc	postinc2,f,c
 25053  016BD8  22DE               	addwfc	postinc2,f,c
 25054  016BDA                     i2l9442:
 25055  016BDA  2A2F               	incf	charge_time_count@i,f,c
 25056  016BDC  D7D6               	goto	i2l9434
 25057  016BDE                     __end_of_charge_time_count:
 25058                           	opt stack 0
 25059                           pclatu	equ	0xFFB
 25060                           pclath	equ	0xFFA
 25061                           tblptru	equ	0xFF8
 25062                           tblptrh	equ	0xFF7
 25063                           tblptrl	equ	0xFF6
 25064                           tablat	equ	0xFF5
 25065                           prodh	equ	0xFF4
 25066                           prodl	equ	0xFF3
 25067                           intcon	equ	0xFF2
 25068                           intcon2	equ	0xFF1
 25069                           postinc0	equ	0xFEE
 25070                           fsr0h	equ	0xFEA
 25071                           fsr0l	equ	0xFE9
 25072                           wreg	equ	0xFE8
 25073                           indf1	equ	0xFE7
 25074                           postinc1	equ	0xFE6
 25075                           postdec1	equ	0xFE5
 25076                           fsr1h	equ	0xFE2
 25077                           fsr1l	equ	0xFE1
 25078                           indf2	equ	0xFDF
 25079                           postinc2	equ	0xFDE
 25080                           postdec2	equ	0xFDD
 25081                           plusw2	equ	0xFDB
 25082                           fsr2h	equ	0xFDA
 25083                           fsr2l	equ	0xFD9
 25084                           status	equ	0xFD8
 25085                           
 25086 ;; *************** function _USB_ISR *****************
 25087 ;; Defined at:
 25088 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 25089 ;; Parameters:    Size  Location     Type
 25090 ;;		None
 25091 ;; Auto vars:     Size  Location     Type
 25092 ;;		None
 25093 ;; Return value:  Size  Location     Type
 25094 ;;		None               void
 25095 ;; Registers used:
 25096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25097 ;; Tracked objects:
 25098 ;;		On entry : 0/0
 25099 ;;		On exit  : 0/0
 25100 ;;		Unchanged: 0/0
 25101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25106 ;;Total ram usage:        0 bytes
 25107 ;; Hardware stack levels used:    1
 25108 ;; Hardware stack levels required when called:    9
 25109 ;; This function calls:
 25110 ;;		_USBDeviceTasks
 25111 ;; This function is called by:
 25112 ;;		_ISR
 25113 ;; This function uses a non-reentrant model
 25114 ;;
 25115                           
 25116                           	psect	text105
 25117  017454                     __ptext105:
 25118                           	opt stack 0
 25119  017454                     _USB_ISR:
 25120                           	opt stack 11
 25121                           
 25122                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 25123                           
 25124                           ;incstack = 0
 25125  017454  EC92  F09E         	call	_USBDeviceTasks	;wreg free
 25126  017458  0012               	return		;funcret
 25127  01745A                     __end_of_USB_ISR:
 25128                           	opt stack 0
 25129                           pclatu	equ	0xFFB
 25130                           pclath	equ	0xFFA
 25131                           tblptru	equ	0xFF8
 25132                           tblptrh	equ	0xFF7
 25133                           tblptrl	equ	0xFF6
 25134                           tablat	equ	0xFF5
 25135                           prodh	equ	0xFF4
 25136                           prodl	equ	0xFF3
 25137                           intcon	equ	0xFF2
 25138                           intcon2	equ	0xFF1
 25139                           postinc0	equ	0xFEE
 25140                           fsr0h	equ	0xFEA
 25141                           fsr0l	equ	0xFE9
 25142                           wreg	equ	0xFE8
 25143                           indf1	equ	0xFE7
 25144                           postinc1	equ	0xFE6
 25145                           postdec1	equ	0xFE5
 25146                           fsr1h	equ	0xFE2
 25147                           fsr1l	equ	0xFE1
 25148                           indf2	equ	0xFDF
 25149                           postinc2	equ	0xFDE
 25150                           postdec2	equ	0xFDD
 25151                           plusw2	equ	0xFDB
 25152                           fsr2h	equ	0xFDA
 25153                           fsr2l	equ	0xFD9
 25154                           status	equ	0xFD8
 25155                           
 25156 ;; *************** function _USBDeviceTasks *****************
 25157 ;; Defined at:
 25158 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 25159 ;; Parameters:    Size  Location     Type
 25160 ;;		None
 25161 ;; Auto vars:     Size  Location     Type
 25162 ;;  i               1   29[COMRAM] unsigned char 
 25163 ;; Return value:  Size  Location     Type
 25164 ;;		None               void
 25165 ;; Registers used:
 25166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25167 ;; Tracked objects:
 25168 ;;		On entry : 0/0
 25169 ;;		On exit  : 0/0
 25170 ;;		Unchanged: 0/0
 25171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25176 ;;Total ram usage:        1 bytes
 25177 ;; Hardware stack levels used:    1
 25178 ;; Hardware stack levels required when called:    8
 25179 ;; This function calls:
 25180 ;;		_USBCtrlEPAllowStatusStage
 25181 ;;		_USBCtrlEPService
 25182 ;;		_USBStallHandler
 25183 ;;		_USBSuspend
 25184 ;;		_USBWakeFromSuspend
 25185 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25186 ;;		i2_USBDeviceInit
 25187 ;; This function is called by:
 25188 ;;		_USB_ISR
 25189 ;; This function uses a non-reentrant model
 25190 ;;
 25191                           
 25192                           	psect	text106
 25193  013D24                     __ptext106:
 25194                           	opt stack 0
 25195  013D24                     _USBDeviceTasks:
 25196                           	opt stack 11
 25197                           
 25198                           ;usb_device.c: 491: uint8_t i;
 25199                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 25200                           
 25201                           ;incstack = 0
 25202  013D24  041A               	decf	_USBDeviceState,w,c	;volatile
 25203  013D26  B4D8               	btfsc	status,2,c
 25204                           
 25205                           ;usb_device.c: 603: {
 25206                           ;usb_device.c: 613: if(!UCONbits.SE0)
 25207  013D28  BA65               	btfsc	3941,5,c	;volatile
 25208  013D2A  D008               	goto	i2l8378
 25209                           
 25210                           ;usb_device.c: 614: {
 25211                           ;usb_device.c: 615: {UIR = 0;};
 25212  013D2C  0E00               	movlw	0
 25213  013D2E  6E62               	movwf	3938,c	;volatile
 25214                           
 25215                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 25216  013D30  010F               	movlb	15	; () banked
 25217  013D32  8136               	bsf	54,0,b	;volatile
 25218                           
 25219                           ; BSR set to: 15
 25220                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 25221  013D34  010F               	movlb	15	; () banked
 25222  013D36  8936               	bsf	54,4,b	;volatile
 25223                           
 25224                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 25225  013D38  0E02               	movlw	2
 25226  013D3A  6E1A               	movwf	_USBDeviceState,c	;volatile
 25227  013D3C                     i2l8378:
 25228                           
 25229                           ;usb_device.c: 622: }
 25230                           ;usb_device.c: 623: }
 25231                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 25232  013D3C  A462               	btfss	3938,2,c	;volatile
 25233  013D3E  D006               	goto	i2l8386
 25234  013D40  010F               	movlb	15	; () banked
 25235  013D42  A536               	btfss	54,2,b	;volatile
 25236  013D44  D003               	goto	i2l8386
 25237                           
 25238                           ; BSR set to: 15
 25239                           ;usb_device.c: 640: {
 25240                           ;usb_device.c: 641: (UIR &= 0xFB);
 25241  013D46  9462               	bcf	3938,2,c	;volatile
 25242                           
 25243                           ; BSR set to: 15
 25244                           ;usb_device.c: 645: USBWakeFromSuspend();
 25245  013D48  EC11  F0B8         	call	_USBWakeFromSuspend	;wreg free
 25246  013D4C                     i2l8386:
 25247                           
 25248                           ;usb_device.c: 647: }
 25249                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 25250  013D4C  A265               	btfss	3941,1,c	;volatile
 25251  013D4E  D002               	goto	i2l144
 25252                           
 25253                           ;usb_device.c: 653: {
 25254                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 25255  013D50  98A1               	bcf	4001,4,c	;volatile
 25256                           
 25257                           ;usb_device.c: 655: return;
 25258  013D52  0012               	return	
 25259  013D54                     i2l144:
 25260                           
 25261                           ;usb_device.c: 656: }
 25262                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 25263  013D54  A062               	btfss	3938,0,c	;volatile
 25264  013D56  D009               	goto	i2l8400
 25265  013D58  010F               	movlb	15	; () banked
 25266  013D5A  A136               	btfss	54,0,b	;volatile
 25267  013D5C  D006               	goto	i2l8400
 25268                           
 25269                           ; BSR set to: 15
 25270                           ;usb_device.c: 669: {
 25271                           ;usb_device.c: 670: USBDeviceInit();
 25272  013D5E  EC34  F09F         	call	i2_USBDeviceInit	;wreg free
 25273                           
 25274                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 25275  013D62  88A0               	bsf	4000,4,c	;volatile
 25276                           
 25277                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 25278  013D64  0E04               	movlw	4
 25279  013D66  6E1A               	movwf	_USBDeviceState,c	;volatile
 25280                           
 25281                           ;usb_device.c: 686: (UIR &= 0xFE);
 25282  013D68  9062               	bcf	3938,0,c	;volatile
 25283  013D6A                     i2l8400:
 25284                           
 25285                           ;usb_device.c: 687: }
 25286                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 25287  013D6A  A862               	btfss	3938,4,c	;volatile
 25288  013D6C  D006               	goto	i2l8408
 25289  013D6E  010F               	movlb	15	; () banked
 25290  013D70  A936               	btfss	54,4,b	;volatile
 25291  013D72  D003               	goto	i2l8408
 25292                           
 25293                           ; BSR set to: 15
 25294                           ;usb_device.c: 693: {
 25295                           ;usb_device.c: 698: USBSuspend();
 25296  013D74  ECDF  F0B8         	call	_USBSuspend	;wreg free
 25297                           
 25298                           ;usb_device.c: 701: (UIR &= 0xEF);
 25299  013D78  9862               	bcf	3938,4,c	;volatile
 25300  013D7A                     i2l8408:
 25301                           
 25302                           ;usb_device.c: 702: }
 25303                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 25304  013D7A  AC62               	btfss	3938,6,c	;volatile
 25305  013D7C  D019               	goto	i2l8424
 25306                           
 25307                           ;usb_device.c: 705: {
 25308                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 25309  013D7E  010F               	movlb	15	; () banked
 25310  013D80  AD36               	btfss	54,6,b	;volatile
 25311  013D82  D00E               	goto	i2l8414
 25312                           
 25313                           ; BSR set to: 15
 25314                           ;usb_device.c: 707: {
 25315                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 25316  013D84  0E00               	movlw	0
 25317  013D86  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25318  013D88  0E73               	movlw	115
 25319  013D8A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25320  013D8C  0E00               	movlw	0
 25321  013D8E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25322  013D90  0E00               	movlw	0
 25323  013D92  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25324  013D94  0E00               	movlw	0
 25325  013D96  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25326  013D98  0E01               	movlw	1
 25327  013D9A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25328  013D9C  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25329  013DA0                     i2l8414:
 25330                           
 25331                           ;usb_device.c: 709: }
 25332                           ;usb_device.c: 710: (UIR &= 0xBF);
 25333  013DA0  9C62               	bcf	3938,6,c	;volatile
 25334                           
 25335                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 25336  013DA2  501D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25337  013DA4  A4D8               	btfss	status,2,c
 25338                           
 25339                           ;usb_device.c: 736: {
 25340                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 25341  013DA6  061D               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 25342                           
 25343                           ;usb_device.c: 738: }
 25344                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 25345  013DA8  501D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25346  013DAA  B4D8               	btfsc	status,2,c
 25347                           
 25348                           ;usb_device.c: 745: {
 25349                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 25350  013DAC  ECBD  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25351  013DB0                     i2l8424:
 25352                           
 25353                           ;usb_device.c: 747: }
 25354                           ;usb_device.c: 749: }
 25355                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 25356  013DB0  AA62               	btfss	3938,5,c	;volatile
 25357  013DB2  D004               	goto	i2l8430
 25358  013DB4  010F               	movlb	15	; () banked
 25359  013DB6  BB36               	btfsc	54,5,b	;volatile
 25360                           
 25361                           ; BSR set to: 15
 25362                           ;usb_device.c: 752: {
 25363                           ;usb_device.c: 753: USBStallHandler();
 25364  013DB8  EC90  F0B6         	call	_USBStallHandler	;wreg free
 25365  013DBC                     i2l8430:
 25366                           
 25367                           ;usb_device.c: 754: }
 25368                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 25369  013DBC  A262               	btfss	3938,1,c	;volatile
 25370  013DBE  D012               	goto	i2l8438
 25371  013DC0  010F               	movlb	15	; () banked
 25372  013DC2  A336               	btfss	54,1,b	;volatile
 25373  013DC4  D00F               	goto	i2l8438
 25374                           
 25375                           ; BSR set to: 15
 25376                           ;usb_device.c: 757: {
 25377                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 25378  013DC6  0E7F               	movlw	127
 25379  013DC8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25380  013DCA  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25381  013DCC  0E00               	movlw	0
 25382  013DCE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25383  013DD0  0E00               	movlw	0
 25384  013DD2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25385  013DD4  0E00               	movlw	0
 25386  013DD6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25387  013DD8  0E01               	movlw	1
 25388  013DDA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25389  013DDC  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25390                           
 25391                           ;usb_device.c: 759: {UEIR = 0;};
 25392  013DE0  0E00               	movlw	0
 25393  013DE2  6E63               	movwf	3939,c	;volatile
 25394  013DE4                     i2l8438:
 25395                           
 25396                           ;usb_device.c: 767: }
 25397                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 25398  013DE4  0E04               	movlw	4
 25399  013DE6  601A               	cpfslt	_USBDeviceState,c	;volatile
 25400  013DE8  D002               	goto	i2l154
 25401                           
 25402                           ;usb_device.c: 775: {
 25403                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 25404  013DEA  98A1               	bcf	4001,4,c	;volatile
 25405                           
 25406                           ;usb_device.c: 777: return;
 25407  013DEC  0012               	return	
 25408  013DEE                     i2l154:
 25409                           
 25410                           ;usb_device.c: 778: }
 25411                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 25412  013DEE  010F               	movlb	15	; () banked
 25413  013DF0  A736               	btfss	54,3,b	;volatile
 25414  013DF2  D038               	goto	i2l155
 25415                           
 25416                           ; BSR set to: 15
 25417                           ;usb_device.c: 784: {
 25418                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 25419  013DF4  0E00               	movlw	0
 25420  013DF6  6E4A               	movwf	USBDeviceTasks@i,c
 25421  013DF8                     i2l8444:
 25422                           
 25423                           ; BSR set to: 15
 25424  013DF8  0E03               	movlw	3
 25425  013DFA  644A               	cpfsgt	USBDeviceTasks@i,c
 25426  013DFC  D001               	goto	i2l156
 25427  013DFE  D032               	goto	i2l155
 25428  013E00                     i2l156:
 25429                           
 25430                           ;usb_device.c: 786: {
 25431                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 25432  013E00  A662               	btfss	3938,3,c	;volatile
 25433  013E02  D030               	goto	i2l155
 25434                           
 25435                           ;usb_device.c: 788: {
 25436                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 25437  013E04  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 25438                           
 25439                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 25440  013E08  302C               	rrcf	_USTATcopy,w,c	;volatile
 25441  013E0A  32E8               	rrcf	wreg,f,c
 25442  013E0C  32E8               	rrcf	wreg,f,c
 25443  013E0E  0B0F               	andlw	15
 25444  013E10  6E24               	movwf	_endpoint_number,c	;volatile
 25445                           
 25446                           ;usb_device.c: 793: (UIR &= 0xF7);
 25447  013E12  9662               	bcf	3938,3,c	;volatile
 25448                           
 25449                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 25450  013E14  B42C               	btfsc	_USTATcopy,2,c	;volatile
 25451  013E16  D007               	goto	i2l8458
 25452                           
 25453                           ;usb_device.c: 799: {
 25454                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 25455  013E18  5024               	movf	_endpoint_number,w,c	;volatile
 25456  013E1A  0D01               	mullw	1
 25457  013E1C  0E0D               	movlw	low _ep_data_out
 25458  013E1E  24F3               	addwf	prodl,w,c
 25459  013E20  6ED9               	movwf	fsr2l,c
 25460  013E22  0E00               	movlw	high _ep_data_out
 25461  013E24  D006               	goto	L7
 25462  013E26                     i2l8458:
 25463                           
 25464                           ;usb_device.c: 802: else
 25465                           ;usb_device.c: 803: {
 25466                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 25467  013E26  5024               	movf	_endpoint_number,w,c	;volatile
 25468  013E28  0D01               	mullw	1
 25469  013E2A  0E0A               	movlw	low _ep_data_in
 25470  013E2C  24F3               	addwf	prodl,w,c
 25471  013E2E  6ED9               	movwf	fsr2l,c
 25472  013E30  0E00               	movlw	high _ep_data_in
 25473  013E32                     L7:
 25474  013E32  20F4               	addwfc	prodh,w,c
 25475  013E34  6EDA               	movwf	fsr2h,c
 25476  013E36  70DF               	btg	indf2,0,c
 25477                           
 25478                           ;usb_device.c: 805: }
 25479                           ;usb_device.c: 810: if(endpoint_number == 0)
 25480  013E38  5024               	movf	_endpoint_number,w,c	;volatile
 25481  013E3A  A4D8               	btfss	status,2,c
 25482  013E3C  D003               	goto	i2l8464
 25483                           
 25484                           ;usb_device.c: 811: {
 25485                           ;usb_device.c: 812: USBCtrlEPService();
 25486  013E3E  EC27  F0A9         	call	_USBCtrlEPService	;wreg free
 25487                           
 25488                           ;usb_device.c: 813: }
 25489  013E42  D00E               	goto	i2l8466
 25490  013E44                     i2l8464:
 25491                           
 25492                           ;usb_device.c: 814: else
 25493                           ;usb_device.c: 815: {
 25494                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 25495  013E44  0E00               	movlw	0
 25496  013E46  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25497  013E48  0E72               	movlw	114
 25498  013E4A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25499  013E4C  0E2C               	movlw	low _USTATcopy
 25500  013E4E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25501  013E50  0E00               	movlw	high _USTATcopy
 25502  013E52  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25503  013E54  0E00               	movlw	0
 25504  013E56  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25505  013E58  0E00               	movlw	0
 25506  013E5A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25507  013E5C  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25508  013E60                     i2l8466:
 25509  013E60  2A4A               	incf	USBDeviceTasks@i,f,c
 25510  013E62  D7CA               	goto	i2l8444
 25511  013E64                     i2l155:
 25512                           
 25513                           ;usb_device.c: 822: }
 25514                           ;usb_device.c: 823: }
 25515                           ;usb_device.c: 824: }
 25516                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 25517  013E64  98A1               	bcf	4001,4,c	;volatile
 25518  013E66  0012               	return		;funcret
 25519  013E68                     __end_of_USBDeviceTasks:
 25520                           	opt stack 0
 25521                           pclatu	equ	0xFFB
 25522                           pclath	equ	0xFFA
 25523                           tblptru	equ	0xFF8
 25524                           tblptrh	equ	0xFF7
 25525                           tblptrl	equ	0xFF6
 25526                           tablat	equ	0xFF5
 25527                           prodh	equ	0xFF4
 25528                           prodl	equ	0xFF3
 25529                           intcon	equ	0xFF2
 25530                           intcon2	equ	0xFF1
 25531                           postinc0	equ	0xFEE
 25532                           fsr0h	equ	0xFEA
 25533                           fsr0l	equ	0xFE9
 25534                           wreg	equ	0xFE8
 25535                           indf1	equ	0xFE7
 25536                           postinc1	equ	0xFE6
 25537                           postdec1	equ	0xFE5
 25538                           fsr1h	equ	0xFE2
 25539                           fsr1l	equ	0xFE1
 25540                           indf2	equ	0xFDF
 25541                           postinc2	equ	0xFDE
 25542                           postdec2	equ	0xFDD
 25543                           plusw2	equ	0xFDB
 25544                           fsr2h	equ	0xFDA
 25545                           fsr2l	equ	0xFD9
 25546                           status	equ	0xFD8
 25547                           
 25548 ;; *************** function i2_USBDeviceInit *****************
 25549 ;; Defined at:
 25550 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 25551 ;; Parameters:    Size  Location     Type
 25552 ;;		None
 25553 ;; Auto vars:     Size  Location     Type
 25554 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 25555 ;; Return value:  Size  Location     Type
 25556 ;;		None               void
 25557 ;; Registers used:
 25558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25559 ;; Tracked objects:
 25560 ;;		On entry : 0/0
 25561 ;;		On exit  : 0/0
 25562 ;;		Unchanged: 0/0
 25563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25568 ;;Total ram usage:        1 bytes
 25569 ;; Hardware stack levels used:    1
 25570 ;; Hardware stack levels required when called:    1
 25571 ;; This function calls:
 25572 ;;		i2_memset
 25573 ;; This function is called by:
 25574 ;;		_USBDeviceTasks
 25575 ;; This function uses a non-reentrant model
 25576 ;;
 25577                           
 25578                           	psect	text107
 25579  013E68                     __ptext107:
 25580                           	opt stack 0
 25581  013E68                     i2_USBDeviceInit:
 25582                           	opt stack 17
 25583                           
 25584                           ;usb_device.c: 300: uint8_t i;
 25585                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 25586                           
 25587                           ;incstack = 0
 25588  013E68  98A0               	bcf	4000,4,c	;volatile
 25589                           
 25590                           ;usb_device.c: 305: {UEIR = 0;};
 25591  013E6A  0E00               	movlw	0
 25592  013E6C  6E63               	movwf	3939,c	;volatile
 25593                           
 25594                           ;usb_device.c: 308: {UIR = 0;};
 25595  013E6E  0E00               	movlw	0
 25596  013E70  6E62               	movwf	3938,c	;volatile
 25597                           
 25598                           ;usb_device.c: 311: UEP0 = 0;
 25599  013E72  0E00               	movlw	0
 25600  013E74  010F               	movlb	15	; () banked
 25601  013E76  6F26               	movwf	38,b	;volatile
 25602                           
 25603                           ; BSR set to: 15
 25604                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 25605  013E78  0E27               	movlw	39
 25606  013E7A  6E2D               	movwf	i2memset@p1,c
 25607  013E7C  0E0F               	movlw	15
 25608  013E7E  6E2E               	movwf	i2memset@p1+1,c
 25609  013E80  0E00               	movlw	0
 25610  013E82  6E30               	movwf	i2memset@c+1,c
 25611  013E84  0E00               	movlw	0
 25612  013E86  6E2F               	movwf	i2memset@c,c
 25613  013E88  0E00               	movlw	0
 25614  013E8A  6E32               	movwf	i2memset@n+1,c
 25615  013E8C  0E02               	movlw	2
 25616  013E8E  6E31               	movwf	i2memset@n,c
 25617  013E90  ECF5  F0B8         	call	i2_memset	;wreg free
 25618                           
 25619                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25620  013E94  0E16               	movlw	22
 25621  013E96  010F               	movlb	15	; () banked
 25622  013E98  6F39               	movwf	57,b	;volatile
 25623                           
 25624                           ; BSR set to: 15
 25625  013E9A  0E9F               	movlw	159
 25626  013E9C  010F               	movlb	15	; () banked
 25627  013E9E  6F37               	movwf	55,b	;volatile
 25628                           
 25629                           ; BSR set to: 15
 25630  013EA0  0E7B               	movlw	123
 25631  013EA2  010F               	movlb	15	; () banked
 25632  013EA4  6F36               	movwf	54,b	;volatile
 25633                           
 25634                           ; BSR set to: 15
 25635                           ;usb_device.c: 318: ;
 25636                           ;usb_device.c: 321: ;
 25637                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25638  013EA6  0E00               	movlw	0
 25639  013EA8  6E35               	movwf	i2USBDeviceInit@i,c
 25640  013EAA                     i2l8314:
 25641                           
 25642                           ; BSR set to: 15
 25643  013EAA  0E0B               	movlw	11
 25644  013EAC  6435               	cpfsgt	i2USBDeviceInit@i,c
 25645  013EAE  D001               	goto	i2l8318
 25646  013EB0  D00E               	goto	i2l132
 25647  013EB2                     i2l8318:
 25648                           
 25649                           ;usb_device.c: 325: {
 25650                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 25651  013EB2  5035               	movf	i2USBDeviceInit@i,w,c
 25652  013EB4  0D04               	mullw	4
 25653  013EB6  0E00               	movlw	0
 25654  013EB8  24F3               	addwf	prodl,w,c
 25655  013EBA  6ED9               	movwf	fsr2l,c
 25656  013EBC  0E0D               	movlw	13
 25657  013EBE  20F4               	addwfc	prodh,w,c
 25658  013EC0  6EDA               	movwf	fsr2h,c
 25659  013EC2  6ADE               	clrf	postinc2,c
 25660  013EC4  6ADE               	clrf	postinc2,c
 25661  013EC6  6ADE               	clrf	postinc2,c
 25662  013EC8  6ADD               	clrf	postdec2,c
 25663  013ECA  2A35               	incf	i2USBDeviceInit@i,f,c
 25664  013ECC  D7EE               	goto	i2l8314
 25665  013ECE                     i2l132:
 25666                           
 25667                           ;usb_device.c: 327: }
 25668                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 25669  013ECE  8C65               	bsf	3941,6,c	;volatile
 25670                           
 25671                           ;usb_device.c: 333: UADDR = 0x00;
 25672  013ED0  0E00               	movlw	0
 25673  013ED2  010F               	movlb	15	; () banked
 25674  013ED4  6F38               	movwf	56,b	;volatile
 25675                           
 25676                           ; BSR set to: 15
 25677                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 25678  013ED6  9865               	bcf	3941,4,c	;volatile
 25679                           
 25680                           ; BSR set to: 15
 25681                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 25682  013ED8  9C65               	bcf	3941,6,c	;volatile
 25683                           
 25684                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 25685  013EDA  D00A               	goto	i2l8338
 25686  013EDC                     i2l8330:
 25687                           
 25688                           ;usb_device.c: 343: {
 25689                           ;usb_device.c: 344: (UIR &= 0xF7);
 25690  013EDC  9662               	bcf	3938,3,c	;volatile
 25691                           
 25692                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 25693  013EDE  0E00               	movlw	0
 25694  013EE0  0100               	movlb	0	; () banked
 25695  013EE2  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25696                           
 25697                           ; BSR set to: 0
 25698                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 25699  013EE4  0E00               	movlw	0
 25700  013EE6  6E04               	movwf	_outPipes+3,c	;volatile
 25701                           
 25702                           ; BSR set to: 0
 25703                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 25704  013EE8  0E00               	movlw	0
 25705  013EEA  6E06               	movwf	_outPipes+5,c	;volatile
 25706  013EEC  0E00               	movlw	0
 25707  013EEE  6E05               	movwf	_outPipes+4,c	;volatile
 25708  013EF0                     i2l8338:
 25709  013EF0  B662               	btfsc	3938,3,c	;volatile
 25710  013EF2  D7F4               	goto	i2l8330
 25711                           
 25712                           ;usb_device.c: 349: }
 25713                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 25714  013EF4  0E01               	movlw	1
 25715  013EF6  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25716                           
 25717                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 25718  013EF8  0E01               	movlw	1
 25719  013EFA  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25720                           
 25721                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 25722  013EFC  0E00               	movlw	0
 25723  013EFE  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25724                           
 25725                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 25726  013F00  0E00               	movlw	0
 25727  013F02  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25728                           
 25729                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 25730  013F04  0E00               	movlw	0
 25731  013F06  0101               	movlb	1	; () banked
 25732  013F08  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25733                           
 25734                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 25735  013F0A  0E00               	movlw	0
 25736  013F0C  6E35               	movwf	i2USBDeviceInit@i,c
 25737  013F0E                     i2l8342:
 25738                           
 25739                           ; BSR set to: 1
 25740  013F0E  0E02               	movlw	2
 25741  013F10  6435               	cpfsgt	i2USBDeviceInit@i,c
 25742  013F12  D001               	goto	i2l8346
 25743  013F14  D02E               	goto	i2l8352
 25744  013F16                     i2l8346:
 25745                           
 25746                           ;usb_device.c: 363: {
 25747                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 25748  013F16  5035               	movf	i2USBDeviceInit@i,w,c
 25749  013F18  0D02               	mullw	2
 25750  013F1A  0EEA               	movlw	low _pBDTEntryIn
 25751  013F1C  24F3               	addwf	prodl,w,c
 25752  013F1E  6ED9               	movwf	fsr2l,c
 25753  013F20  0E00               	movlw	high _pBDTEntryIn
 25754  013F22  20F4               	addwfc	prodh,w,c
 25755  013F24  6EDA               	movwf	fsr2h,c
 25756  013F26  0E00               	movlw	0
 25757  013F28  6EDE               	movwf	postinc2,c
 25758  013F2A  0E00               	movlw	0
 25759  013F2C  6EDD               	movwf	postdec2,c
 25760                           
 25761                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 25762  013F2E  5035               	movf	i2USBDeviceInit@i,w,c
 25763  013F30  0D02               	mullw	2
 25764  013F32  0E00               	movlw	low _pBDTEntryOut
 25765  013F34  24F3               	addwf	prodl,w,c
 25766  013F36  6ED9               	movwf	fsr2l,c
 25767  013F38  0E01               	movlw	high _pBDTEntryOut
 25768  013F3A  20F4               	addwfc	prodh,w,c
 25769  013F3C  6EDA               	movwf	fsr2h,c
 25770  013F3E  0E00               	movlw	0
 25771  013F40  6EDE               	movwf	postinc2,c
 25772  013F42  0E00               	movlw	0
 25773  013F44  6EDD               	movwf	postdec2,c
 25774                           
 25775                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 25776  013F46  5035               	movf	i2USBDeviceInit@i,w,c
 25777  013F48  0D01               	mullw	1
 25778  013F4A  0E0A               	movlw	low _ep_data_in
 25779  013F4C  24F3               	addwf	prodl,w,c
 25780  013F4E  6ED9               	movwf	fsr2l,c
 25781  013F50  0E00               	movlw	high _ep_data_in
 25782  013F52  20F4               	addwfc	prodh,w,c
 25783  013F54  6EDA               	movwf	fsr2h,c
 25784  013F56  0E00               	movlw	0
 25785  013F58  6EDF               	movwf	indf2,c
 25786                           
 25787                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 25788  013F5A  5035               	movf	i2USBDeviceInit@i,w,c
 25789  013F5C  0D01               	mullw	1
 25790  013F5E  0E0D               	movlw	low _ep_data_out
 25791  013F60  24F3               	addwf	prodl,w,c
 25792  013F62  6ED9               	movwf	fsr2l,c
 25793  013F64  0E00               	movlw	high _ep_data_out
 25794  013F66  20F4               	addwfc	prodh,w,c
 25795  013F68  6EDA               	movwf	fsr2h,c
 25796  013F6A  0E00               	movlw	0
 25797  013F6C  6EDF               	movwf	indf2,c
 25798  013F6E  2A35               	incf	i2USBDeviceInit@i,f,c
 25799  013F70  D7CE               	goto	i2l8342
 25800  013F72                     i2l8352:
 25801                           
 25802                           ;usb_device.c: 368: }
 25803                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25804  013F72  0E08               	movlw	8
 25805  013F74  0100               	movlb	0	; () banked
 25806  013F76  6FEA               	movwf	_pBDTEntryIn& (0+255),b
 25807  013F78  0E0D               	movlw	13
 25808  013F7A  0100               	movlb	0	; () banked
 25809  013F7C  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25810                           
 25811                           ; BSR set to: 0
 25812                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 25813  013F7E  0E16               	movlw	22
 25814  013F80  010F               	movlb	15	; () banked
 25815  013F82  6F26               	movwf	38,b	;volatile
 25816                           
 25817                           ; BSR set to: 15
 25818                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25819  013F84  0E0D               	movlw	13
 25820  013F86  010D               	movlb	13	; () banked
 25821  013F88  6F03               	movwf	3,b	;volatile
 25822  013F8A  0E30               	movlw	48
 25823  013F8C  6F02               	movwf	2,b	;volatile
 25824                           
 25825                           ; BSR set to: 13
 25826                           ;usb_device.c: 376: BDT[0].CNT = 8;
 25827  013F8E  0E08               	movlw	8
 25828  013F90  010D               	movlb	13	; () banked
 25829  013F92  6F01               	movwf	1,b	;volatile
 25830                           
 25831                           ; BSR set to: 13
 25832                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 25833  013F94  0E04               	movlw	4
 25834  013F96  010D               	movlb	13	; () banked
 25835  013F98  6F00               	movwf	0,b	;volatile
 25836                           
 25837                           ; BSR set to: 13
 25838                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 25839  013F9A  010D               	movlb	13	; () banked
 25840  013F9C  8F00               	bsf	0,7,b	;volatile
 25841                           
 25842                           ; BSR set to: 13
 25843                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 25844  013F9E  0E00               	movlw	0
 25845  013FA0  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25846                           
 25847                           ; BSR set to: 13
 25848                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 25849  013FA2  0E00               	movlw	0
 25850  013FA4  6E1A               	movwf	_USBDeviceState,c	;volatile
 25851                           
 25852                           ; BSR set to: 13
 25853  013FA6  0012               	return		;funcret
 25854  013FA8                     __end_ofi2_USBDeviceInit:
 25855                           	opt stack 0
 25856                           pclatu	equ	0xFFB
 25857                           pclath	equ	0xFFA
 25858                           tblptru	equ	0xFF8
 25859                           tblptrh	equ	0xFF7
 25860                           tblptrl	equ	0xFF6
 25861                           tablat	equ	0xFF5
 25862                           prodh	equ	0xFF4
 25863                           prodl	equ	0xFF3
 25864                           intcon	equ	0xFF2
 25865                           intcon2	equ	0xFF1
 25866                           postinc0	equ	0xFEE
 25867                           fsr0h	equ	0xFEA
 25868                           fsr0l	equ	0xFE9
 25869                           wreg	equ	0xFE8
 25870                           indf1	equ	0xFE7
 25871                           postinc1	equ	0xFE6
 25872                           postdec1	equ	0xFE5
 25873                           fsr1h	equ	0xFE2
 25874                           fsr1l	equ	0xFE1
 25875                           indf2	equ	0xFDF
 25876                           postinc2	equ	0xFDE
 25877                           postdec2	equ	0xFDD
 25878                           plusw2	equ	0xFDB
 25879                           fsr2h	equ	0xFDA
 25880                           fsr2l	equ	0xFD9
 25881                           status	equ	0xFD8
 25882                           
 25883 ;; *************** function _USBWakeFromSuspend *****************
 25884 ;; Defined at:
 25885 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 25886 ;; Parameters:    Size  Location     Type
 25887 ;;		None
 25888 ;; Auto vars:     Size  Location     Type
 25889 ;;		None
 25890 ;; Return value:  Size  Location     Type
 25891 ;;		None               void
 25892 ;; Registers used:
 25893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25894 ;; Tracked objects:
 25895 ;;		On entry : 0/0
 25896 ;;		On exit  : 0/0
 25897 ;;		Unchanged: 0/0
 25898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25903 ;;Total ram usage:        0 bytes
 25904 ;; Hardware stack levels used:    1
 25905 ;; Hardware stack levels required when called:    4
 25906 ;; This function calls:
 25907 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25908 ;; This function is called by:
 25909 ;;		_USBDeviceTasks
 25910 ;; This function uses a non-reentrant model
 25911 ;;
 25912                           
 25913                           	psect	text108
 25914  017022                     __ptext108:
 25915                           	opt stack 0
 25916  017022                     _USBWakeFromSuspend:
 25917                           	opt stack 14
 25918                           
 25919                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 25920                           
 25921                           ; BSR set to: 13
 25922                           ;incstack = 0
 25923  017022  0E00               	movlw	0
 25924  017024  0101               	movlb	1	; () banked
 25925  017026  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25926                           
 25927                           ; BSR set to: 1
 25928                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25929  017028  0E00               	movlw	0
 25930  01702A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25931  01702C  0E74               	movlw	116
 25932  01702E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25933  017030  0E00               	movlw	0
 25934  017032  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25935  017034  0E00               	movlw	0
 25936  017036  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25937  017038  0E00               	movlw	0
 25938  01703A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25939  01703C  0E00               	movlw	0
 25940  01703E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25941  017040  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25942                           
 25943                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 25944  017044  9265               	bcf	3941,1,c	;volatile
 25945                           
 25946                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 25947  017046  010F               	movlb	15	; () banked
 25948  017048  9536               	bcf	54,2,b	;volatile
 25949                           
 25950                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 25951  01704A  D001               	goto	i2l7668
 25952  01704C                     i2l7666:
 25953                           
 25954                           ;usb_device.c: 2342: {
 25955                           ;usb_device.c: 2343: (UIR &= 0xFB);
 25956  01704C  9462               	bcf	3938,2,c	;volatile
 25957  01704E                     i2l7668:
 25958  01704E  A462               	btfss	3938,2,c	;volatile
 25959  017050  0012               	return	
 25960  017052  D7FC               	goto	i2l7666
 25961  017054                     __end_of_USBWakeFromSuspend:
 25962                           	opt stack 0
 25963                           pclatu	equ	0xFFB
 25964                           pclath	equ	0xFFA
 25965                           tblptru	equ	0xFF8
 25966                           tblptrh	equ	0xFF7
 25967                           tblptrl	equ	0xFF6
 25968                           tablat	equ	0xFF5
 25969                           prodh	equ	0xFF4
 25970                           prodl	equ	0xFF3
 25971                           intcon	equ	0xFF2
 25972                           intcon2	equ	0xFF1
 25973                           postinc0	equ	0xFEE
 25974                           fsr0h	equ	0xFEA
 25975                           fsr0l	equ	0xFE9
 25976                           wreg	equ	0xFE8
 25977                           indf1	equ	0xFE7
 25978                           postinc1	equ	0xFE6
 25979                           postdec1	equ	0xFE5
 25980                           fsr1h	equ	0xFE2
 25981                           fsr1l	equ	0xFE1
 25982                           indf2	equ	0xFDF
 25983                           postinc2	equ	0xFDE
 25984                           postdec2	equ	0xFDD
 25985                           plusw2	equ	0xFDB
 25986                           fsr2h	equ	0xFDA
 25987                           fsr2l	equ	0xFD9
 25988                           status	equ	0xFD8
 25989                           
 25990 ;; *************** function _USBSuspend *****************
 25991 ;; Defined at:
 25992 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 25993 ;; Parameters:    Size  Location     Type
 25994 ;;		None
 25995 ;; Auto vars:     Size  Location     Type
 25996 ;;		None
 25997 ;; Return value:  Size  Location     Type
 25998 ;;		None               void
 25999 ;; Registers used:
 26000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26001 ;; Tracked objects:
 26002 ;;		On entry : 0/0
 26003 ;;		On exit  : 0/0
 26004 ;;		Unchanged: 0/0
 26005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;Total ram usage:        0 bytes
 26011 ;; Hardware stack levels used:    1
 26012 ;; Hardware stack levels required when called:    4
 26013 ;; This function calls:
 26014 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26015 ;; This function is called by:
 26016 ;;		_USBDeviceTasks
 26017 ;; This function uses a non-reentrant model
 26018 ;;
 26019                           
 26020                           	psect	text109
 26021  0171BE                     __ptext109:
 26022                           	opt stack 0
 26023  0171BE                     _USBSuspend:
 26024                           	opt stack 14
 26025                           
 26026                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 26027                           
 26028                           ;incstack = 0
 26029  0171BE  010F               	movlb	15	; () banked
 26030  0171C0  8536               	bsf	54,2,b	;volatile
 26031                           
 26032                           ; BSR set to: 15
 26033                           ;usb_device.c: 2271: (UIR &= 0xEF);
 26034  0171C2  9862               	bcf	3938,4,c	;volatile
 26035                           
 26036                           ; BSR set to: 15
 26037                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 26038  0171C4  8265               	bsf	3941,1,c	;volatile
 26039                           
 26040                           ; BSR set to: 15
 26041                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 26042  0171C6  0E01               	movlw	1
 26043  0171C8  0101               	movlb	1	; () banked
 26044  0171CA  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26045                           
 26046                           ; BSR set to: 1
 26047                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 26048  0171CC  0E00               	movlw	0
 26049  0171CE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26050  0171D0  0E75               	movlw	117
 26051  0171D2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26052  0171D4  0E00               	movlw	0
 26053  0171D6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26054  0171D8  0E00               	movlw	0
 26055  0171DA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26056  0171DC  0E00               	movlw	0
 26057  0171DE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26058  0171E0  0E00               	movlw	0
 26059  0171E2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26060  0171E4  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26061  0171E8  0012               	return		;funcret
 26062  0171EA                     __end_of_USBSuspend:
 26063                           	opt stack 0
 26064                           pclatu	equ	0xFFB
 26065                           pclath	equ	0xFFA
 26066                           tblptru	equ	0xFF8
 26067                           tblptrh	equ	0xFF7
 26068                           tblptrl	equ	0xFF6
 26069                           tablat	equ	0xFF5
 26070                           prodh	equ	0xFF4
 26071                           prodl	equ	0xFF3
 26072                           intcon	equ	0xFF2
 26073                           intcon2	equ	0xFF1
 26074                           postinc0	equ	0xFEE
 26075                           fsr0h	equ	0xFEA
 26076                           fsr0l	equ	0xFE9
 26077                           wreg	equ	0xFE8
 26078                           indf1	equ	0xFE7
 26079                           postinc1	equ	0xFE6
 26080                           postdec1	equ	0xFE5
 26081                           fsr1h	equ	0xFE2
 26082                           fsr1l	equ	0xFE1
 26083                           indf2	equ	0xFDF
 26084                           postinc2	equ	0xFDE
 26085                           postdec2	equ	0xFDD
 26086                           plusw2	equ	0xFDB
 26087                           fsr2h	equ	0xFDA
 26088                           fsr2l	equ	0xFD9
 26089                           status	equ	0xFD8
 26090                           
 26091 ;; *************** function _USBStallHandler *****************
 26092 ;; Defined at:
 26093 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 26094 ;; Parameters:    Size  Location     Type
 26095 ;;		None
 26096 ;; Auto vars:     Size  Location     Type
 26097 ;;		None
 26098 ;; Return value:  Size  Location     Type
 26099 ;;		None               void
 26100 ;; Registers used:
 26101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26102 ;; Tracked objects:
 26103 ;;		On entry : 0/0
 26104 ;;		On exit  : 0/0
 26105 ;;		Unchanged: 0/0
 26106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26111 ;;Total ram usage:        1 bytes
 26112 ;; Hardware stack levels used:    1
 26113 ;; This function calls:
 26114 ;;		Nothing
 26115 ;; This function is called by:
 26116 ;;		_USBDeviceTasks
 26117 ;; This function uses a non-reentrant model
 26118 ;;
 26119                           
 26120                           	psect	text110
 26121  016D20                     __ptext110:
 26122                           	opt stack 0
 26123  016D20                     _USBStallHandler:
 26124                           	opt stack 18
 26125                           
 26126                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 26127                           
 26128                           ;incstack = 0
 26129  016D20  010F               	movlb	15	; () banked
 26130  016D22  A126               	btfss	38,0,b	;volatile
 26131  016D24  D01E               	goto	i2l294
 26132                           
 26133                           ; BSR set to: 15
 26134                           ;usb_device.c: 2215: {
 26135                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 26136  016D26  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26137  016D2A  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26138  016D2E  0E80               	movlw	128
 26139  016D30  18DE               	xorwf	postinc2,w,c
 26140  016D32  A4D8               	btfss	status,2,c
 26141  016D34  D014               	goto	i2l7690
 26142                           
 26143                           ; BSR set to: 15
 26144  016D36  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26145  016D3A  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26146  016D3E  0E84               	movlw	132
 26147  016D40  18DE               	xorwf	postinc2,w,c
 26148  016D42  A4D8               	btfss	status,2,c
 26149  016D44  D00C               	goto	i2l7690
 26150                           
 26151                           ; BSR set to: 15
 26152                           ;usb_device.c: 2218: {
 26153                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26154  016D46  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26155  016D4A  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26156  016D4E  0E0C               	movlw	12
 26157  016D50  6EDF               	movwf	indf2,c
 26158                           
 26159                           ; BSR set to: 15
 26160                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26161  016D52  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26162  016D56  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26163  016D5A  0E00               	movlw	0
 26164  016D5C  8EDB               	bsf	plusw2,7,c
 26165  016D5E                     i2l7690:
 26166                           
 26167                           ; BSR set to: 15
 26168                           ;usb_device.c: 2222: }
 26169                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 26170  016D5E  010F               	movlb	15	; () banked
 26171  016D60  9126               	bcf	38,0,b	;volatile
 26172  016D62                     i2l294:
 26173                           
 26174                           ; BSR set to: 15
 26175                           ;usb_device.c: 2224: }
 26176                           ;usb_device.c: 2226: (UIR &= 0xDF);
 26177  016D62  9A62               	bcf	3938,5,c	;volatile
 26178                           
 26179                           ; BSR set to: 15
 26180  016D64  0012               	return		;funcret
 26181  016D66                     __end_of_USBStallHandler:
 26182                           	opt stack 0
 26183                           pclatu	equ	0xFFB
 26184                           pclath	equ	0xFFA
 26185                           tblptru	equ	0xFF8
 26186                           tblptrh	equ	0xFF7
 26187                           tblptrl	equ	0xFF6
 26188                           tablat	equ	0xFF5
 26189                           prodh	equ	0xFF4
 26190                           prodl	equ	0xFF3
 26191                           intcon	equ	0xFF2
 26192                           intcon2	equ	0xFF1
 26193                           postinc0	equ	0xFEE
 26194                           fsr0h	equ	0xFEA
 26195                           fsr0l	equ	0xFE9
 26196                           wreg	equ	0xFE8
 26197                           indf1	equ	0xFE7
 26198                           postinc1	equ	0xFE6
 26199                           postdec1	equ	0xFE5
 26200                           fsr1h	equ	0xFE2
 26201                           fsr1l	equ	0xFE1
 26202                           indf2	equ	0xFDF
 26203                           postinc2	equ	0xFDE
 26204                           postdec2	equ	0xFDD
 26205                           plusw2	equ	0xFDB
 26206                           fsr2h	equ	0xFDA
 26207                           fsr2l	equ	0xFD9
 26208                           status	equ	0xFD8
 26209                           
 26210 ;; *************** function _USBCtrlEPService *****************
 26211 ;; Defined at:
 26212 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 26213 ;; Parameters:    Size  Location     Type
 26214 ;;		None
 26215 ;; Auto vars:     Size  Location     Type
 26216 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 26217 ;; Return value:  Size  Location     Type
 26218 ;;		None               void
 26219 ;; Registers used:
 26220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26221 ;; Tracked objects:
 26222 ;;		On entry : 0/0
 26223 ;;		On exit  : 0/0
 26224 ;;		Unchanged: 0/0
 26225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26229 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26230 ;;Total ram usage:        3 bytes
 26231 ;; Hardware stack levels used:    1
 26232 ;; Hardware stack levels required when called:    7
 26233 ;; This function calls:
 26234 ;;		_USBCtrlTrfInHandler
 26235 ;;		_USBCtrlTrfOutHandler
 26236 ;;		_USBCtrlTrfSetupHandler
 26237 ;; This function is called by:
 26238 ;;		_USBDeviceTasks
 26239 ;; This function uses a non-reentrant model
 26240 ;;
 26241                           
 26242                           	psect	text111
 26243  01524E                     __ptext111:
 26244                           	opt stack 0
 26245  01524E                     _USBCtrlEPService:
 26246                           	opt stack 11
 26247                           
 26248                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 26249                           
 26250                           ; BSR set to: 15
 26251                           ;incstack = 0
 26252  01524E  0E2D               	movlw	45
 26253  015250  6E1D               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 26254                           
 26255                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 26256  015252  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26257  015256  0EFD               	movlw	253
 26258  015258  1647               	andwf	??_USBCtrlEPService,f,c
 26259  01525A  A4D8               	btfss	status,2,c
 26260  01525C  D057               	goto	i2l7724
 26261                           
 26262                           ;usb_device.c: 2380: {
 26263                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 26264  01525E  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26265  015262  90D8               	bcf	status,0,c
 26266  015264  3247               	rrcf	??_USBCtrlEPService,f,c
 26267  015266  0E3F               	movlw	63
 26268  015268  1647               	andwf	??_USBCtrlEPService,f,c
 26269  01526A  5047               	movf	??_USBCtrlEPService,w,c
 26270  01526C  0D04               	mullw	4
 26271  01526E  0E00               	movlw	0
 26272  015270  24F3               	addwf	prodl,w,c
 26273  015272  6E10               	movwf	_pBDTEntryEP0OutCurrent,c
 26274  015274  0E0D               	movlw	13
 26275  015276  20F4               	addwfc	prodh,w,c
 26276  015278  6E11               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26277                           
 26278                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26279  01527A  C010  F012         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26280  01527E  C011  F013         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26281                           
 26282                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 26283  015282  0E04               	movlw	4
 26284  015284  1A12               	xorwf	_pBDTEntryEP0OutNext,f,c
 26285                           
 26286                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 26287  015286  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26288  01528A  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26289  01528E  30DF               	rrcf	indf2,w,c
 26290  015290  32E8               	rrcf	wreg,f,c
 26291  015292  0B0F               	andlw	15
 26292  015294  0A0D               	xorlw	13
 26293  015296  A4D8               	btfss	status,2,c
 26294  015298  D036               	goto	i2l7722
 26295                           
 26296                           ;usb_device.c: 2397: {
 26297                           ;usb_device.c: 2398: unsigned char setup_cnt;
 26298                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 26299  01529A  0E00               	movlw	0
 26300  01529C  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 26301  01529E                     i2l7706:
 26302  01529E  0E07               	movlw	7
 26303  0152A0  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 26304  0152A2  D001               	goto	i2l7710
 26305  0152A4  D023               	goto	i2l7718
 26306  0152A6                     i2l7710:
 26307                           
 26308                           ;usb_device.c: 2405: {
 26309                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 26310  0152A6  EE20 F002          	lfsr	2,2
 26311  0152AA  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 26312  0152AC  26D9               	addwf	fsr2l,f,c
 26313  0152AE  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26314  0152B0  22DA               	addwfc	fsr2h,f,c
 26315  0152B2  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 26316  0152B6  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 26317  0152BA  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 26318  0152BE  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 26319  0152C2  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 26320  0152C4  0D01               	mullw	1
 26321  0152C6  0E30               	movlw	48
 26322  0152C8  24F3               	addwf	prodl,w,c
 26323  0152CA  6EE1               	movwf	fsr1l,c
 26324  0152CC  0E0D               	movlw	13
 26325  0152CE  20F4               	addwfc	prodh,w,c
 26326  0152D0  6EE2               	movwf	fsr1h,c
 26327  0152D2  CFDF FFE7          	movff	indf2,indf1
 26328                           
 26329                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 26330  0152D6  EE20 F002          	lfsr	2,2
 26331  0152DA  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 26332  0152DC  26D9               	addwf	fsr2l,f,c
 26333  0152DE  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26334  0152E0  22DA               	addwfc	fsr2h,f,c
 26335  0152E2  2ADE               	incf	postinc2,f,c
 26336  0152E4  0E00               	movlw	0
 26337  0152E6  22DD               	addwfc	postdec2,f,c
 26338  0152E8  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 26339  0152EA  D7D9               	goto	i2l7706
 26340  0152EC                     i2l7718:
 26341                           
 26342                           ;usb_device.c: 2408: }
 26343                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 26344  0152EC  EE20 F002          	lfsr	2,2
 26345  0152F0  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 26346  0152F2  26D9               	addwf	fsr2l,f,c
 26347  0152F4  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26348  0152F6  22DA               	addwfc	fsr2h,f,c
 26349  0152F8  0E30               	movlw	48
 26350  0152FA  6EDE               	movwf	postinc2,c
 26351  0152FC  0E0D               	movlw	13
 26352  0152FE  6EDD               	movwf	postdec2,c
 26353                           
 26354                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 26355  015300  EC64  F0B1         	call	_USBCtrlTrfSetupHandler	;wreg free
 26356                           
 26357                           ;usb_device.c: 2413: }
 26358  015304  0012               	return	
 26359  015306                     i2l7722:
 26360                           
 26361                           ;usb_device.c: 2414: else
 26362                           ;usb_device.c: 2415: {
 26363                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 26364  015306  EC3D  F0B5         	call	_USBCtrlTrfOutHandler	;wreg free
 26365                           
 26366                           ;usb_device.c: 2418: }
 26367                           ;usb_device.c: 2419: }
 26368  01530A  0012               	return	
 26369  01530C                     i2l7724:
 26370                           
 26371                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 26372  01530C  502C               	movf	_USTATcopy,w,c	;volatile
 26373  01530E  0BFD               	andlw	253
 26374  015310  0A04               	xorlw	4
 26375  015312  A4D8               	btfss	status,2,c
 26376  015314  0012               	return	
 26377                           
 26378                           ;usb_device.c: 2421: {
 26379                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 26380  015316  EC3F  F0AC         	call	_USBCtrlTrfInHandler	;wreg free
 26381  01531A  0012               	return	
 26382  01531C                     __end_of_USBCtrlEPService:
 26383                           	opt stack 0
 26384                           pclatu	equ	0xFFB
 26385                           pclath	equ	0xFFA
 26386                           tblptru	equ	0xFF8
 26387                           tblptrh	equ	0xFF7
 26388                           tblptrl	equ	0xFF6
 26389                           tablat	equ	0xFF5
 26390                           prodh	equ	0xFF4
 26391                           prodl	equ	0xFF3
 26392                           intcon	equ	0xFF2
 26393                           intcon2	equ	0xFF1
 26394                           postinc0	equ	0xFEE
 26395                           fsr0h	equ	0xFEA
 26396                           fsr0l	equ	0xFE9
 26397                           wreg	equ	0xFE8
 26398                           indf1	equ	0xFE7
 26399                           postinc1	equ	0xFE6
 26400                           postdec1	equ	0xFE5
 26401                           fsr1h	equ	0xFE2
 26402                           fsr1l	equ	0xFE1
 26403                           indf2	equ	0xFDF
 26404                           postinc2	equ	0xFDE
 26405                           postdec2	equ	0xFDD
 26406                           plusw2	equ	0xFDB
 26407                           fsr2h	equ	0xFDA
 26408                           fsr2l	equ	0xFD9
 26409                           status	equ	0xFD8
 26410                           
 26411 ;; *************** function _USBCtrlTrfSetupHandler *****************
 26412 ;; Defined at:
 26413 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 26414 ;; Parameters:    Size  Location     Type
 26415 ;;		None
 26416 ;; Auto vars:     Size  Location     Type
 26417 ;;		None
 26418 ;; Return value:  Size  Location     Type
 26419 ;;		None               void
 26420 ;; Registers used:
 26421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26422 ;; Tracked objects:
 26423 ;;		On entry : 0/0
 26424 ;;		On exit  : 0/0
 26425 ;;		Unchanged: 0/0
 26426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26431 ;;Total ram usage:        0 bytes
 26432 ;; Hardware stack levels used:    1
 26433 ;; Hardware stack levels required when called:    6
 26434 ;; This function calls:
 26435 ;;		_USBCheckStdRequest
 26436 ;;		_USBCtrlEPServiceComplete
 26437 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26438 ;; This function is called by:
 26439 ;;		_USBCtrlEPService
 26440 ;; This function uses a non-reentrant model
 26441 ;;
 26442                           
 26443                           	psect	text112
 26444  0162C8                     __ptext112:
 26445                           	opt stack 0
 26446  0162C8                     _USBCtrlTrfSetupHandler:
 26447                           	opt stack 11
 26448                           
 26449                           ;usb_device.c: 2474: shortPacketStatus = 0;
 26450                           
 26451                           ;incstack = 0
 26452  0162C8  0E00               	movlw	0
 26453  0162CA  6E27               	movwf	_shortPacketStatus,c	;volatile
 26454                           
 26455                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 26456  0162CC  0E00               	movlw	0
 26457  0162CE  6E19               	movwf	_USBDeferStatusStagePacket,c	;volatile
 26458                           
 26459                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 26460  0162D0  0E00               	movlw	0
 26461  0162D2  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26462                           
 26463                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 26464  0162D4  0E00               	movlw	0
 26465  0162D6  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26466                           
 26467                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 26468  0162D8  0E00               	movlw	0
 26469  0162DA  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26470                           
 26471                           ;usb_device.c: 2479: controlTransferState = 0;
 26472  0162DC  0E00               	movlw	0
 26473  0162DE  6E20               	movwf	_controlTransferState,c	;volatile
 26474                           
 26475                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26476  0162E0  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26477  0162E4  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26478  0162E8  0E7F               	movlw	127
 26479  0162EA  16DF               	andwf	indf2,f,c
 26480                           
 26481                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26482  0162EC  0E04               	movlw	4
 26483  0162EE  0100               	movlb	0	; () banked
 26484  0162F0  1BEA               	xorwf	_pBDTEntryIn& (0+255),f,b
 26485                           
 26486                           ; BSR set to: 0
 26487                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26488  0162F2  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26489  0162F6  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26490  0162FA  0E7F               	movlw	127
 26491  0162FC  16DF               	andwf	indf2,f,c
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26495  0162FE  0E04               	movlw	4
 26496  016300  0100               	movlb	0	; () banked
 26497  016302  1BEA               	xorwf	_pBDTEntryIn& (0+255),f,b
 26498                           
 26499                           ; BSR set to: 0
 26500                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 26501  016304  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26502  016308  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26503  01630C  0E7F               	movlw	127
 26504  01630E  16DF               	andwf	indf2,f,c
 26505                           
 26506                           ; BSR set to: 0
 26507                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 26508  016310  0E00               	movlw	0
 26509  016312  0100               	movlb	0	; () banked
 26510  016314  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26511                           
 26512                           ; BSR set to: 0
 26513                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 26514  016316  0E00               	movlw	0
 26515  016318  0100               	movlb	0	; () banked
 26516  01631A  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26517  01631C  0E00               	movlw	0
 26518  01631E  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26519                           
 26520                           ; BSR set to: 0
 26521                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 26522  016320  0E00               	movlw	0
 26523  016322  6E04               	movwf	_outPipes+3,c	;volatile
 26524                           
 26525                           ; BSR set to: 0
 26526                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 26527  016324  0E00               	movlw	0
 26528  016326  6E06               	movwf	_outPipes+5,c	;volatile
 26529  016328  0E00               	movlw	0
 26530  01632A  6E05               	movwf	_outPipes+4,c	;volatile
 26531                           
 26532                           ; BSR set to: 0
 26533                           ;usb_device.c: 2503: USBCheckStdRequest();
 26534  01632C  EC0D  F0A3         	call	_USBCheckStdRequest	;wreg free
 26535                           
 26536                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 26537  016330  0E00               	movlw	0
 26538  016332  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26539  016334  0E03               	movlw	3
 26540  016336  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26541  016338  0E00               	movlw	0
 26542  01633A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26543  01633C  0E00               	movlw	0
 26544  01633E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26545  016340  0E00               	movlw	0
 26546  016342  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26547  016344  0E00               	movlw	0
 26548  016346  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26549  016348  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26550                           
 26551                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 26552  01634C  EC94  F0A2         	call	_USBCtrlEPServiceComplete	;wreg free
 26553  016350  0012               	return		;funcret
 26554  016352                     __end_of_USBCtrlTrfSetupHandler:
 26555                           	opt stack 0
 26556                           pclatu	equ	0xFFB
 26557                           pclath	equ	0xFFA
 26558                           tblptru	equ	0xFF8
 26559                           tblptrh	equ	0xFF7
 26560                           tblptrl	equ	0xFF6
 26561                           tablat	equ	0xFF5
 26562                           prodh	equ	0xFF4
 26563                           prodl	equ	0xFF3
 26564                           intcon	equ	0xFF2
 26565                           intcon2	equ	0xFF1
 26566                           postinc0	equ	0xFEE
 26567                           fsr0h	equ	0xFEA
 26568                           fsr0l	equ	0xFE9
 26569                           wreg	equ	0xFE8
 26570                           indf1	equ	0xFE7
 26571                           postinc1	equ	0xFE6
 26572                           postdec1	equ	0xFE5
 26573                           fsr1h	equ	0xFE2
 26574                           fsr1l	equ	0xFE1
 26575                           indf2	equ	0xFDF
 26576                           postinc2	equ	0xFDE
 26577                           postdec2	equ	0xFDD
 26578                           plusw2	equ	0xFDB
 26579                           fsr2h	equ	0xFDA
 26580                           fsr2l	equ	0xFD9
 26581                           status	equ	0xFD8
 26582                           
 26583 ;; *************** function _USBCtrlEPServiceComplete *****************
 26584 ;; Defined at:
 26585 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 26586 ;; Parameters:    Size  Location     Type
 26587 ;;		None
 26588 ;; Auto vars:     Size  Location     Type
 26589 ;;		None
 26590 ;; Return value:  Size  Location     Type
 26591 ;;		None               void
 26592 ;; Registers used:
 26593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26594 ;; Tracked objects:
 26595 ;;		On entry : 0/0
 26596 ;;		On exit  : 0/0
 26597 ;;		Unchanged: 0/0
 26598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26603 ;;Total ram usage:        0 bytes
 26604 ;; Hardware stack levels used:    1
 26605 ;; Hardware stack levels required when called:    2
 26606 ;; This function calls:
 26607 ;;		_USBCtrlEPAllowDataStage
 26608 ;;		_USBCtrlEPAllowStatusStage
 26609 ;; This function is called by:
 26610 ;;		_USBCtrlTrfSetupHandler
 26611 ;; This function uses a non-reentrant model
 26612 ;;
 26613                           
 26614                           	psect	text113
 26615  014528                     __ptext113:
 26616                           	opt stack 0
 26617  014528                     _USBCtrlEPServiceComplete:
 26618                           	opt stack 14
 26619                           
 26620                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 26621                           
 26622                           ;incstack = 0
 26623  014528  9865               	bcf	3941,4,c	;volatile
 26624                           
 26625                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 26626  01452A  0100               	movlb	0	; () banked
 26627  01452C  BFE7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 26628  01452E  D038               	goto	i2l218
 26629                           
 26630                           ; BSR set to: 0
 26631                           ;usb_device.c: 1629: {
 26632                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 26633  014530  AE04               	btfss	_outPipes+3,7,c	;volatile
 26634  014532  D00B               	goto	i2l7172
 26635                           
 26636                           ; BSR set to: 0
 26637                           ;usb_device.c: 1631: {
 26638                           ;usb_device.c: 1632: controlTransferState = 2;
 26639  014534  0E02               	movlw	2
 26640  014536  6E20               	movwf	_controlTransferState,c	;volatile
 26641                           
 26642                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 26643  014538  5018               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 26644  01453A  B4D8               	btfsc	status,2,c
 26645                           
 26646                           ; BSR set to: 0
 26647                           ;usb_device.c: 1644: {
 26648                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 26649  01453C  EC57  F0AF         	call	_USBCtrlEPAllowDataStage	;wreg free
 26650                           
 26651                           ;usb_device.c: 1646: }
 26652                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 26653  014540  0E00               	movlw	0
 26654  014542  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26655                           
 26656                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 26657  014544  0E00               	movlw	0
 26658  014546  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26659                           
 26660                           ;usb_device.c: 1652: }
 26661  014548  0012               	return	
 26662  01454A                     i2l7172:
 26663                           
 26664                           ;usb_device.c: 1653: else
 26665                           ;usb_device.c: 1654: {
 26666                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 26667  01454A  EE20 F001          	lfsr	2,1
 26668  01454E  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26669  014550  26D9               	addwf	fsr2l,f,c
 26670  014552  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26671  014554  22DA               	addwfc	fsr2h,f,c
 26672  014556  0E08               	movlw	8
 26673  014558  6EDF               	movwf	indf2,c
 26674                           
 26675                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26676  01455A  EE20 F002          	lfsr	2,2
 26677  01455E  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26678  014560  26D9               	addwf	fsr2l,f,c
 26679  014562  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26680  014564  22DA               	addwfc	fsr2h,f,c
 26681  014566  0E30               	movlw	48
 26682  014568  6EDE               	movwf	postinc2,c
 26683  01456A  0E0D               	movlw	13
 26684  01456C  6EDD               	movwf	postdec2,c
 26685                           
 26686                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26687  01456E  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26688  014572  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26689  014576  0E0C               	movlw	12
 26690  014578  6EDF               	movwf	indf2,c
 26691                           
 26692                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26693  01457A  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26694  01457E  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26695  014582  0E00               	movlw	0
 26696  014584  8EDB               	bsf	plusw2,7,c
 26697                           
 26698                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 26699  014586  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26700  01458A  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26701  01458E  0E04               	movlw	4
 26702  014590  6EDF               	movwf	indf2,c
 26703                           
 26704                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26705  014592  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26706  014596  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26707  01459A  0E00               	movlw	0
 26708  01459C  8EDB               	bsf	plusw2,7,c
 26709                           
 26710                           ;usb_device.c: 1665: }
 26711                           ;usb_device.c: 1666: }
 26712  01459E  0012               	return	
 26713  0145A0                     i2l218:
 26714                           
 26715                           ; BSR set to: 0
 26716                           ;usb_device.c: 1667: else
 26717                           ;usb_device.c: 1668: {
 26718                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 26719  0145A0  010D               	movlb	13	; () banked
 26720  0145A2  AF30               	btfss	48,7,b	;volatile
 26721  0145A4  D010               	goto	i2l7192
 26722                           
 26723                           ; BSR set to: 13
 26724                           ;usb_device.c: 1670: {
 26725                           ;usb_device.c: 1671: controlTransferState = 1;
 26726  0145A6  0E01               	movlw	1
 26727  0145A8  6E20               	movwf	_controlTransferState,c	;volatile
 26728                           
 26729                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 26730  0145AA  5017               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26731  0145AC  B4D8               	btfsc	status,2,c
 26732                           
 26733                           ; BSR set to: 13
 26734                           ;usb_device.c: 1686: {
 26735                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 26736  0145AE  EC57  F0AF         	call	_USBCtrlEPAllowDataStage	;wreg free
 26737                           
 26738                           ;usb_device.c: 1688: }
 26739                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 26740  0145B2  0E00               	movlw	0
 26741  0145B4  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26742                           
 26743                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 26744  0145B6  0E00               	movlw	0
 26745  0145B8  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26746                           
 26747                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 26748  0145BA  5019               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26749  0145BC  A4D8               	btfss	status,2,c
 26750  0145BE  0012               	return	
 26751                           
 26752                           ;usb_device.c: 1713: {
 26753                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 26754  0145C0  ECBD  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26755                           
 26756                           ;usb_device.c: 1715: }
 26757                           ;usb_device.c: 1716: }
 26758  0145C4  0012               	return	
 26759  0145C6                     i2l7192:
 26760                           
 26761                           ;usb_device.c: 1717: else
 26762                           ;usb_device.c: 1718: {
 26763                           ;usb_device.c: 1729: controlTransferState = 2;
 26764  0145C6  0E02               	movlw	2
 26765  0145C8  6E20               	movwf	_controlTransferState,c	;volatile
 26766                           
 26767                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 26768  0145CA  EE20 F001          	lfsr	2,1
 26769  0145CE  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26770  0145D0  26D9               	addwf	fsr2l,f,c
 26771  0145D2  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26772  0145D4  22DA               	addwfc	fsr2h,f,c
 26773  0145D6  0E08               	movlw	8
 26774  0145D8  6EDF               	movwf	indf2,c
 26775                           
 26776                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26777  0145DA  EE20 F002          	lfsr	2,2
 26778  0145DE  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26779  0145E0  26D9               	addwf	fsr2l,f,c
 26780  0145E2  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26781  0145E4  22DA               	addwfc	fsr2h,f,c
 26782  0145E6  0E30               	movlw	48
 26783  0145E8  6EDE               	movwf	postinc2,c
 26784  0145EA  0E0D               	movlw	13
 26785  0145EC  6EDD               	movwf	postdec2,c
 26786                           
 26787                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26788  0145EE  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26789  0145F2  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26790  0145F6  0E04               	movlw	4
 26791  0145F8  6EDF               	movwf	indf2,c
 26792                           
 26793                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26794  0145FA  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26795  0145FE  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26796  014602  0E00               	movlw	0
 26797  014604  8EDB               	bsf	plusw2,7,c
 26798                           
 26799                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 26800  014606  0E00               	movlw	0
 26801  014608  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26802                           
 26803                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 26804  01460A  0E00               	movlw	0
 26805  01460C  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26806                           
 26807                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 26808  01460E  5019               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26809  014610  A4D8               	btfss	status,2,c
 26810  014612  0012               	return	
 26811                           
 26812                           ;usb_device.c: 1741: {
 26813                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 26814  014614  ECBD  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26815  014618  0012               	return	
 26816  01461A                     __end_of_USBCtrlEPServiceComplete:
 26817                           	opt stack 0
 26818                           pclatu	equ	0xFFB
 26819                           pclath	equ	0xFFA
 26820                           tblptru	equ	0xFF8
 26821                           tblptrh	equ	0xFF7
 26822                           tblptrl	equ	0xFF6
 26823                           tablat	equ	0xFF5
 26824                           prodh	equ	0xFF4
 26825                           prodl	equ	0xFF3
 26826                           intcon	equ	0xFF2
 26827                           intcon2	equ	0xFF1
 26828                           postinc0	equ	0xFEE
 26829                           fsr0h	equ	0xFEA
 26830                           fsr0l	equ	0xFE9
 26831                           wreg	equ	0xFE8
 26832                           indf1	equ	0xFE7
 26833                           postinc1	equ	0xFE6
 26834                           postdec1	equ	0xFE5
 26835                           fsr1h	equ	0xFE2
 26836                           fsr1l	equ	0xFE1
 26837                           indf2	equ	0xFDF
 26838                           postinc2	equ	0xFDE
 26839                           postdec2	equ	0xFDD
 26840                           plusw2	equ	0xFDB
 26841                           fsr2h	equ	0xFDA
 26842                           fsr2l	equ	0xFD9
 26843                           status	equ	0xFD8
 26844                           
 26845 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26846 ;; Defined at:
 26847 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 26848 ;; Parameters:    Size  Location     Type
 26849 ;;		None
 26850 ;; Auto vars:     Size  Location     Type
 26851 ;;		None
 26852 ;; Return value:  Size  Location     Type
 26853 ;;		None               void
 26854 ;; Registers used:
 26855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26856 ;; Tracked objects:
 26857 ;;		On entry : 0/0
 26858 ;;		On exit  : 0/0
 26859 ;;		Unchanged: 0/0
 26860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26865 ;;Total ram usage:        0 bytes
 26866 ;; Hardware stack levels used:    1
 26867 ;; Hardware stack levels required when called:    1
 26868 ;; This function calls:
 26869 ;;		_USBCtrlTrfTxService
 26870 ;; This function is called by:
 26871 ;;		_USBCtrlEPServiceComplete
 26872 ;; This function uses a non-reentrant model
 26873 ;;
 26874                           
 26875                           	psect	text114
 26876  015EAE                     __ptext114:
 26877                           	opt stack 0
 26878  015EAE                     _USBCtrlEPAllowDataStage:
 26879                           	opt stack 14
 26880                           
 26881                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 26882                           
 26883                           ;incstack = 0
 26884  015EAE  0E00               	movlw	0
 26885  015EB0  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26886                           
 26887                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 26888  015EB2  0E00               	movlw	0
 26889  015EB4  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26890                           
 26891                           ;usb_device.c: 1493: if(controlTransferState == 2)
 26892  015EB6  0E02               	movlw	2
 26893  015EB8  1820               	xorwf	_controlTransferState,w,c	;volatile
 26894  015EBA  A4D8               	btfss	status,2,c
 26895  015EBC  D01F               	goto	i2l6656
 26896                           
 26897                           ;usb_device.c: 1494: {
 26898                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 26899  015EBE  EE20 F001          	lfsr	2,1
 26900  015EC2  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26901  015EC4  26D9               	addwf	fsr2l,f,c
 26902  015EC6  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26903  015EC8  22DA               	addwfc	fsr2h,f,c
 26904  015ECA  0E08               	movlw	8
 26905  015ECC  6EDF               	movwf	indf2,c
 26906                           
 26907                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26908  015ECE  EE20 F002          	lfsr	2,2
 26909  015ED2  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26910  015ED4  26D9               	addwf	fsr2l,f,c
 26911  015ED6  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26912  015ED8  22DA               	addwfc	fsr2h,f,c
 26913  015EDA  0E38               	movlw	56
 26914  015EDC  6EDE               	movwf	postinc2,c
 26915  015EDE  0E0D               	movlw	13
 26916  015EE0  6EDD               	movwf	postdec2,c
 26917                           
 26918                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26919  015EE2  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26920  015EE6  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26921  015EEA  0E48               	movlw	72
 26922  015EEC  6EDF               	movwf	indf2,c
 26923                           
 26924                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26925  015EEE  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26926  015EF2  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26927  015EF6  0E00               	movlw	0
 26928  015EF8  8EDB               	bsf	plusw2,7,c
 26929                           
 26930                           ;usb_device.c: 1500: }
 26931  015EFA  0012               	return	
 26932  015EFC                     i2l6656:
 26933                           
 26934                           ;usb_device.c: 1501: else
 26935                           ;usb_device.c: 1502: {
 26936                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26937  015EFC  0100               	movlb	0	; () banked
 26938  015EFE  51E8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26939  015F00  010D               	movlb	13	; () banked
 26940  015F02  5D36               	subwf	54,w,b	;volatile
 26941  015F04  0100               	movlb	0	; () banked
 26942  015F06  51E9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26943  015F08  010D               	movlb	13	; () banked
 26944  015F0A  5937               	subwfb	55,w,b	;volatile
 26945  015F0C  B0D8               	btfsc	status,0,c
 26946  015F0E  D004               	goto	i2l6660
 26947                           
 26948                           ; BSR set to: 13
 26949                           ;usb_device.c: 1506: {
 26950                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 26951  015F10  CD36 F0E8          	movff	3382,_inPipes+4	;volatile
 26952  015F14  CD37 F0E9          	movff	3383,_inPipes+5	;volatile
 26953  015F18                     i2l6660:
 26954                           
 26955                           ; BSR set to: 13
 26956                           ;usb_device.c: 1508: }
 26957                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 26958  015F18  ECCD  F0A5         	call	_USBCtrlTrfTxService	;wreg free
 26959                           
 26960                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26961  015F1C  0100               	movlb	0	; () banked
 26962  015F1E  EE20 F002          	lfsr	2,2
 26963  015F22  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 26964  015F24  26D9               	addwf	fsr2l,f,c
 26965  015F26  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26966  015F28  22DA               	addwfc	fsr2h,f,c
 26967  015F2A  0E38               	movlw	56
 26968  015F2C  6EDE               	movwf	postinc2,c
 26969  015F2E  0E0D               	movlw	13
 26970  015F30  6EDD               	movwf	postdec2,c
 26971                           
 26972                           ; BSR set to: 0
 26973                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26974  015F32  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26975  015F36  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26976  015F3A  0E48               	movlw	72
 26977  015F3C  6EDF               	movwf	indf2,c
 26978                           
 26979                           ; BSR set to: 0
 26980                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26981  015F3E  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26982  015F42  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26983  015F46  0E00               	movlw	0
 26984  015F48  8EDB               	bsf	plusw2,7,c
 26985  015F4A  0012               	return	
 26986  015F4C                     __end_of_USBCtrlEPAllowDataStage:
 26987                           	opt stack 0
 26988                           pclatu	equ	0xFFB
 26989                           pclath	equ	0xFFA
 26990                           tblptru	equ	0xFF8
 26991                           tblptrh	equ	0xFF7
 26992                           tblptrl	equ	0xFF6
 26993                           tablat	equ	0xFF5
 26994                           prodh	equ	0xFF4
 26995                           prodl	equ	0xFF3
 26996                           intcon	equ	0xFF2
 26997                           intcon2	equ	0xFF1
 26998                           postinc0	equ	0xFEE
 26999                           fsr0h	equ	0xFEA
 27000                           fsr0l	equ	0xFE9
 27001                           wreg	equ	0xFE8
 27002                           indf1	equ	0xFE7
 27003                           postinc1	equ	0xFE6
 27004                           postdec1	equ	0xFE5
 27005                           fsr1h	equ	0xFE2
 27006                           fsr1l	equ	0xFE1
 27007                           indf2	equ	0xFDF
 27008                           postinc2	equ	0xFDE
 27009                           postdec2	equ	0xFDD
 27010                           plusw2	equ	0xFDB
 27011                           fsr2h	equ	0xFDA
 27012                           fsr2l	equ	0xFD9
 27013                           status	equ	0xFD8
 27014                           
 27015 ;; *************** function _USBCheckStdRequest *****************
 27016 ;; Defined at:
 27017 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 27018 ;; Parameters:    Size  Location     Type
 27019 ;;		None
 27020 ;; Auto vars:     Size  Location     Type
 27021 ;;		None
 27022 ;; Return value:  Size  Location     Type
 27023 ;;		None               void
 27024 ;; Registers used:
 27025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27026 ;; Tracked objects:
 27027 ;;		On entry : 0/0
 27028 ;;		On exit  : 0/0
 27029 ;;		Unchanged: 0/0
 27030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27035 ;;Total ram usage:        0 bytes
 27036 ;; Hardware stack levels used:    1
 27037 ;; Hardware stack levels required when called:    5
 27038 ;; This function calls:
 27039 ;;		_USBStdFeatureReqHandler
 27040 ;;		_USBStdGetDscHandler
 27041 ;;		_USBStdGetStatusHandler
 27042 ;;		_USBStdSetCfgHandler
 27043 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27044 ;; This function is called by:
 27045 ;;		_USBCtrlTrfSetupHandler
 27046 ;; This function uses a non-reentrant model
 27047 ;;
 27048                           
 27049                           	psect	text115
 27050  01461A                     __ptext115:
 27051                           	opt stack 0
 27052  01461A                     _USBCheckStdRequest:
 27053                           	opt stack 11
 27054                           
 27055                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 27056                           
 27057                           ;incstack = 0
 27058  01461A  010D               	movlb	13	; () banked
 27059  01461C  3930               	swapf	48,w,b	;volatile
 27060  01461E  32E8               	rrcf	wreg,f,c
 27061  014620  0B03               	andlw	3
 27062  014622  0900               	iorlw	0
 27063  014624  A4D8               	btfss	status,2,c
 27064  014626  0012               	return	
 27065  014628  D04F               	goto	i2l7290
 27066  01462A                     i2l345:
 27067                           
 27068                           ; BSR set to: 13
 27069                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 27070  01462A  0100               	movlb	0	; () banked
 27071  01462C  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27072                           
 27073                           ; BSR set to: 0
 27074                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 27075  01462E  0E08               	movlw	8
 27076  014630  6E1A               	movwf	_USBDeviceState,c	;volatile
 27077                           
 27078                           ;usb_device.c: 2699: break;
 27079  014632  0012               	return	
 27080  014634                     i2l7260:
 27081                           
 27082                           ;usb_device.c: 2701: USBStdGetDscHandler();
 27083  014634  ECEB  F09D         	call	_USBStdGetDscHandler	;wreg free
 27084                           
 27085                           ;usb_device.c: 2702: break;
 27086  014638  0012               	return	
 27087  01463A                     i2l7262:
 27088                           
 27089                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 27090  01463A  EC5C  F0A5         	call	_USBStdSetCfgHandler	;wreg free
 27091                           
 27092                           ;usb_device.c: 2705: break;
 27093  01463E  0012               	return	
 27094  014640                     i2l7264:
 27095                           
 27096                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 27097  014640  0E2B               	movlw	low _USBActiveConfiguration
 27098  014642  0100               	movlb	0	; () banked
 27099  014644  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27100  014646  0E00               	movlw	high _USBActiveConfiguration
 27101  014648  0100               	movlb	0	; () banked
 27102  01464A  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27103                           
 27104                           ; BSR set to: 0
 27105                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27106  01464C  0100               	movlb	0	; () banked
 27107  01464E  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27108                           
 27109                           ; BSR set to: 0
 27110                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 27111  014650  0E01               	movlw	1
 27112  014652  0100               	movlb	0	; () banked
 27113  014654  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27114                           
 27115                           ; BSR set to: 0
 27116                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 27117  014656  0100               	movlb	0	; () banked
 27118  014658  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27119                           
 27120                           ;usb_device.c: 2711: break;
 27121  01465A  0012               	return	
 27122  01465C                     i2l7272:
 27123                           
 27124                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 27125  01465C  ECFC  F0AC         	call	_USBStdGetStatusHandler	;wreg free
 27126                           
 27127                           ;usb_device.c: 2714: break;
 27128  014660  0012               	return	
 27129  014662                     i2l7274:
 27130                           
 27131                           ;usb_device.c: 2716: case 3:
 27132                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 27133  014662  EC7F  F095         	call	_USBStdFeatureReqHandler	;wreg free
 27134                           
 27135                           ;usb_device.c: 2718: break;
 27136  014666  0012               	return	
 27137  014668                     i2l7276:
 27138                           
 27139                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 27140  014668  010D               	movlb	13	; () banked
 27141  01466A  5134               	movf	52,w,b	;volatile
 27142  01466C  0D01               	mullw	1
 27143  01466E  0E90               	movlw	low _USBAlternateInterface
 27144  014670  24F3               	addwf	prodl,w,c
 27145  014672  0100               	movlb	0	; () banked
 27146  014674  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27147  014676  0E01               	movlw	high _USBAlternateInterface
 27148  014678  20F4               	addwfc	prodh,w,c
 27149  01467A  0100               	movlb	0	; () banked
 27150  01467C  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27151                           
 27152                           ; BSR set to: 0
 27153                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27154  01467E  0100               	movlb	0	; () banked
 27155  014680  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27156                           
 27157                           ; BSR set to: 0
 27158                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 27159  014682  0E01               	movlw	1
 27160  014684  0100               	movlb	0	; () banked
 27161  014686  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27162                           
 27163                           ; BSR set to: 0
 27164                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 27165  014688  0100               	movlb	0	; () banked
 27166  01468A  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27167                           
 27168                           ;usb_device.c: 2724: break;
 27169  01468C  0012               	return	
 27170  01468E                     i2l354:
 27171                           
 27172                           ; BSR set to: 13
 27173                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 27174  01468E  0100               	movlb	0	; () banked
 27175  014690  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27176                           
 27177                           ; BSR set to: 0
 27178                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 27179  014692  010D               	movlb	13	; () banked
 27180  014694  5134               	movf	52,w,b	;volatile
 27181  014696  0D01               	mullw	1
 27182  014698  0E90               	movlw	low _USBAlternateInterface
 27183  01469A  24F3               	addwf	prodl,w,c
 27184  01469C  6ED9               	movwf	fsr2l,c
 27185  01469E  0E01               	movlw	high _USBAlternateInterface
 27186  0146A0  20F4               	addwfc	prodh,w,c
 27187  0146A2  6EDA               	movwf	fsr2h,c
 27188  0146A4  CD32 FFDF          	movff	3378,indf2	;volatile
 27189                           
 27190                           ;usb_device.c: 2728: break;
 27191  0146A8  0012               	return	
 27192  0146AA                     i2l7286:
 27193                           
 27194                           ; BSR set to: 13
 27195                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 27196  0146AA  0E00               	movlw	0
 27197  0146AC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27198  0146AE  0E02               	movlw	2
 27199  0146B0  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27200  0146B2  0E00               	movlw	0
 27201  0146B4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27202  0146B6  0E00               	movlw	0
 27203  0146B8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27204  0146BA  0E00               	movlw	0
 27205  0146BC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27206  0146BE  0E00               	movlw	0
 27207  0146C0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27208  0146C2  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27209                           
 27210                           ;usb_device.c: 2735: }
 27211                           
 27212                           ;usb_device.c: 2734: break;
 27213                           
 27214                           ;usb_device.c: 2733: default:
 27215                           
 27216                           ;usb_device.c: 2732: case 12:
 27217                           
 27218                           ;usb_device.c: 2731: break;
 27219  0146C6  0012               	return	
 27220  0146C8                     i2l7290:
 27221  0146C8  010D               	movlb	13	; () banked
 27222  0146CA  5131               	movf	49,w,b	;volatile
 27223                           
 27224                           ; Switch size 1, requested type "space"
 27225                           ; Number of cases is 11, Range of values is 0 to 12
 27226                           ; switch strategies available:
 27227                           ; Name         Instructions Cycles
 27228                           ; simple_byte           34    18 (average)
 27229                           ;	Chosen strategy is simple_byte
 27230  0146CC  0A00               	xorlw	0	; case 0
 27231  0146CE  B4D8               	btfsc	status,2,c
 27232  0146D0  D7C5               	goto	i2l7272
 27233  0146D2  0A01               	xorlw	1	; case 1
 27234  0146D4  B4D8               	btfsc	status,2,c
 27235  0146D6  D7C5               	goto	i2l7274
 27236  0146D8  0A02               	xorlw	2	; case 3
 27237  0146DA  B4D8               	btfsc	status,2,c
 27238  0146DC  D7C2               	goto	i2l7274
 27239  0146DE  0A06               	xorlw	6	; case 5
 27240  0146E0  B4D8               	btfsc	status,2,c
 27241  0146E2  D7A3               	goto	i2l345
 27242  0146E4  0A03               	xorlw	3	; case 6
 27243  0146E6  B4D8               	btfsc	status,2,c
 27244  0146E8  D7A5               	goto	i2l7260
 27245  0146EA  0A01               	xorlw	1	; case 7
 27246  0146EC  B4D8               	btfsc	status,2,c
 27247  0146EE  D7DD               	goto	i2l7286
 27248  0146F0  0A0F               	xorlw	15	; case 8
 27249  0146F2  B4D8               	btfsc	status,2,c
 27250  0146F4  D7A5               	goto	i2l7264
 27251  0146F6  0A01               	xorlw	1	; case 9
 27252  0146F8  B4D8               	btfsc	status,2,c
 27253  0146FA  D79F               	goto	i2l7262
 27254  0146FC  0A03               	xorlw	3	; case 10
 27255  0146FE  B4D8               	btfsc	status,2,c
 27256  014700  D7B3               	goto	i2l7276
 27257  014702  0A01               	xorlw	1	; case 11
 27258  014704  B4D8               	btfsc	status,2,c
 27259  014706  D7C3               	goto	i2l354
 27260  014708  0A07               	xorlw	7	; case 12
 27261  01470A  0012               	return	
 27262  01470C                     __end_of_USBCheckStdRequest:
 27263                           	opt stack 0
 27264                           pclatu	equ	0xFFB
 27265                           pclath	equ	0xFFA
 27266                           tblptru	equ	0xFF8
 27267                           tblptrh	equ	0xFF7
 27268                           tblptrl	equ	0xFF6
 27269                           tablat	equ	0xFF5
 27270                           prodh	equ	0xFF4
 27271                           prodl	equ	0xFF3
 27272                           intcon	equ	0xFF2
 27273                           intcon2	equ	0xFF1
 27274                           postinc0	equ	0xFEE
 27275                           fsr0h	equ	0xFEA
 27276                           fsr0l	equ	0xFE9
 27277                           wreg	equ	0xFE8
 27278                           indf1	equ	0xFE7
 27279                           postinc1	equ	0xFE6
 27280                           postdec1	equ	0xFE5
 27281                           fsr1h	equ	0xFE2
 27282                           fsr1l	equ	0xFE1
 27283                           indf2	equ	0xFDF
 27284                           postinc2	equ	0xFDE
 27285                           postdec2	equ	0xFDD
 27286                           plusw2	equ	0xFDB
 27287                           fsr2h	equ	0xFDA
 27288                           fsr2l	equ	0xFD9
 27289                           status	equ	0xFD8
 27290                           
 27291 ;; *************** function _USBStdSetCfgHandler *****************
 27292 ;; Defined at:
 27293 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 27294 ;; Parameters:    Size  Location     Type
 27295 ;;		None
 27296 ;; Auto vars:     Size  Location     Type
 27297 ;;  i               1   20[COMRAM] unsigned char 
 27298 ;; Return value:  Size  Location     Type
 27299 ;;		None               void
 27300 ;; Registers used:
 27301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27302 ;; Tracked objects:
 27303 ;;		On entry : 0/0
 27304 ;;		On exit  : 0/0
 27305 ;;		Unchanged: 0/0
 27306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27311 ;;Total ram usage:        1 bytes
 27312 ;; Hardware stack levels used:    1
 27313 ;; Hardware stack levels required when called:    4
 27314 ;; This function calls:
 27315 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27316 ;;		i2_memset
 27317 ;; This function is called by:
 27318 ;;		_USBCheckStdRequest
 27319 ;; This function uses a non-reentrant model
 27320 ;;
 27321                           
 27322                           	psect	text116
 27323  014AB8                     __ptext116:
 27324                           	opt stack 0
 27325  014AB8                     _USBStdSetCfgHandler:
 27326                           	opt stack 11
 27327                           
 27328                           ;usb_device.c: 1970: uint8_t i;
 27329                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 27330                           
 27331                           ;incstack = 0
 27332  014AB8  0100               	movlb	0	; () banked
 27333  014ABA  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27334                           
 27335                           ; BSR set to: 0
 27336                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 27337  014ABC  0E27               	movlw	39
 27338  014ABE  6E2D               	movwf	i2memset@p1,c
 27339  014AC0  0E0F               	movlw	15
 27340  014AC2  6E2E               	movwf	i2memset@p1+1,c
 27341  014AC4  0E00               	movlw	0
 27342  014AC6  6E30               	movwf	i2memset@c+1,c
 27343  014AC8  0E00               	movlw	0
 27344  014ACA  6E2F               	movwf	i2memset@c,c
 27345  014ACC  0E00               	movlw	0
 27346  014ACE  6E32               	movwf	i2memset@n+1,c
 27347  014AD0  0E02               	movlw	2
 27348  014AD2  6E31               	movwf	i2memset@n,c
 27349  014AD4  ECF5  F0B8         	call	i2_memset	;wreg free
 27350                           
 27351                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 27352  014AD8  0E00               	movlw	0
 27353  014ADA  6E2D               	movwf	i2memset@p1,c
 27354  014ADC  0E0D               	movlw	13
 27355  014ADE  6E2E               	movwf	i2memset@p1+1,c
 27356  014AE0  0E00               	movlw	0
 27357  014AE2  6E30               	movwf	i2memset@c+1,c
 27358  014AE4  0E00               	movlw	0
 27359  014AE6  6E2F               	movwf	i2memset@c,c
 27360  014AE8  0E00               	movlw	0
 27361  014AEA  6E32               	movwf	i2memset@n+1,c
 27362  014AEC  0E30               	movlw	48
 27363  014AEE  6E31               	movwf	i2memset@n,c
 27364  014AF0  ECF5  F0B8         	call	i2_memset	;wreg free
 27365                           
 27366                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 27367  014AF4  8C65               	bsf	3941,6,c	;volatile
 27368                           
 27369                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 27370  014AF6  0E00               	movlw	0
 27371  014AF8  6E41               	movwf	USBStdSetCfgHandler@i,c
 27372  014AFA                     i2l6676:
 27373  014AFA  0E02               	movlw	2
 27374  014AFC  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 27375  014AFE  D001               	goto	i2l6680
 27376  014B00  D016               	goto	i2l6686
 27377  014B02                     i2l6680:
 27378                           
 27379                           ;usb_device.c: 1988: {
 27380                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 27381  014B02  5041               	movf	USBStdSetCfgHandler@i,w,c
 27382  014B04  0D01               	mullw	1
 27383  014B06  0E0A               	movlw	low _ep_data_in
 27384  014B08  24F3               	addwf	prodl,w,c
 27385  014B0A  6ED9               	movwf	fsr2l,c
 27386  014B0C  0E00               	movlw	high _ep_data_in
 27387  014B0E  20F4               	addwfc	prodh,w,c
 27388  014B10  6EDA               	movwf	fsr2h,c
 27389  014B12  0E00               	movlw	0
 27390  014B14  6EDF               	movwf	indf2,c
 27391                           
 27392                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 27393  014B16  5041               	movf	USBStdSetCfgHandler@i,w,c
 27394  014B18  0D01               	mullw	1
 27395  014B1A  0E0D               	movlw	low _ep_data_out
 27396  014B1C  24F3               	addwf	prodl,w,c
 27397  014B1E  6ED9               	movwf	fsr2l,c
 27398  014B20  0E00               	movlw	high _ep_data_out
 27399  014B22  20F4               	addwfc	prodh,w,c
 27400  014B24  6EDA               	movwf	fsr2h,c
 27401  014B26  0E00               	movlw	0
 27402  014B28  6EDF               	movwf	indf2,c
 27403  014B2A  2A41               	incf	USBStdSetCfgHandler@i,f,c
 27404  014B2C  D7E6               	goto	i2l6676
 27405  014B2E                     i2l6686:
 27406                           
 27407                           ;usb_device.c: 1991: }
 27408                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 27409  014B2E  0E90               	movlw	low _USBAlternateInterface
 27410  014B30  6E2D               	movwf	i2memset@p1,c
 27411  014B32  0E01               	movlw	high _USBAlternateInterface
 27412  014B34  6E2E               	movwf	i2memset@p1+1,c
 27413  014B36  0E00               	movlw	0
 27414  014B38  6E30               	movwf	i2memset@c+1,c
 27415  014B3A  0E00               	movlw	0
 27416  014B3C  6E2F               	movwf	i2memset@c,c
 27417  014B3E  0E00               	movlw	0
 27418  014B40  6E32               	movwf	i2memset@n+1,c
 27419  014B42  0E02               	movlw	2
 27420  014B44  6E31               	movwf	i2memset@n,c
 27421  014B46  ECF5  F0B8         	call	i2_memset	;wreg free
 27422                           
 27423                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 27424  014B4A  9C65               	bcf	3941,6,c	;volatile
 27425                           
 27426                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 27427  014B4C  0E08               	movlw	8
 27428  014B4E  0100               	movlb	0	; () banked
 27429  014B50  6FEA               	movwf	_pBDTEntryIn& (0+255),b
 27430  014B52  0E0D               	movlw	13
 27431  014B54  0100               	movlb	0	; () banked
 27432  014B56  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 27433                           
 27434                           ; BSR set to: 0
 27435                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 27436  014B58  0E00               	movlw	0
 27437  014B5A  6E10               	movwf	_pBDTEntryEP0OutCurrent,c
 27438  014B5C  0E0D               	movlw	13
 27439  014B5E  6E11               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27440                           
 27441                           ; BSR set to: 0
 27442                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27443  014B60  C010  F012         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27444  014B64  C011  F013         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27445                           
 27446                           ; BSR set to: 0
 27447                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 27448  014B68  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 27449                           
 27450                           ; BSR set to: 0
 27451                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 27452  014B6C  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 27453  014B6E  A4D8               	btfss	status,2,c
 27454  014B70  D003               	goto	i2l6702
 27455                           
 27456                           ; BSR set to: 0
 27457                           ;usb_device.c: 2010: {
 27458                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 27459  014B72  0E10               	movlw	16
 27460  014B74  6E1A               	movwf	_USBDeviceState,c	;volatile
 27461                           
 27462                           ;usb_device.c: 2013: }
 27463  014B76  0012               	return	
 27464  014B78                     i2l6702:
 27465                           
 27466                           ; BSR set to: 0
 27467                           ;usb_device.c: 2014: else
 27468                           ;usb_device.c: 2015: {
 27469                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 27470  014B78  0E00               	movlw	0
 27471  014B7A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27472  014B7C  0E01               	movlw	1
 27473  014B7E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27474  014B80  0E2B               	movlw	low _USBActiveConfiguration
 27475  014B82  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27476  014B84  0E00               	movlw	high _USBActiveConfiguration
 27477  014B86  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27478  014B88  0E00               	movlw	0
 27479  014B8A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27480  014B8C  0E01               	movlw	1
 27481  014B8E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27482  014B90  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27483                           
 27484                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 27485  014B94  0E20               	movlw	32
 27486  014B96  6E1A               	movwf	_USBDeviceState,c	;volatile
 27487  014B98  0012               	return	
 27488  014B9A                     __end_of_USBStdSetCfgHandler:
 27489                           	opt stack 0
 27490                           pclatu	equ	0xFFB
 27491                           pclath	equ	0xFFA
 27492                           tblptru	equ	0xFF8
 27493                           tblptrh	equ	0xFF7
 27494                           tblptrl	equ	0xFF6
 27495                           tablat	equ	0xFF5
 27496                           prodh	equ	0xFF4
 27497                           prodl	equ	0xFF3
 27498                           intcon	equ	0xFF2
 27499                           intcon2	equ	0xFF1
 27500                           postinc0	equ	0xFEE
 27501                           fsr0h	equ	0xFEA
 27502                           fsr0l	equ	0xFE9
 27503                           wreg	equ	0xFE8
 27504                           indf1	equ	0xFE7
 27505                           postinc1	equ	0xFE6
 27506                           postdec1	equ	0xFE5
 27507                           fsr1h	equ	0xFE2
 27508                           fsr1l	equ	0xFE1
 27509                           indf2	equ	0xFDF
 27510                           postinc2	equ	0xFDE
 27511                           postdec2	equ	0xFDD
 27512                           plusw2	equ	0xFDB
 27513                           fsr2h	equ	0xFDA
 27514                           fsr2l	equ	0xFD9
 27515                           status	equ	0xFD8
 27516                           
 27517 ;; *************** function i2_memset *****************
 27518 ;; Defined at:
 27519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 27520 ;; Parameters:    Size  Location     Type
 27521 ;;  p1              2    0[COMRAM] PTR void 
 27522 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27523 ;;  c               2    2[COMRAM] int 
 27524 ;;  n               2    4[COMRAM] unsigned int 
 27525 ;; Auto vars:     Size  Location     Type
 27526 ;;  memset          2    6[COMRAM] PTR unsigned char 
 27527 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27528 ;; Return value:  Size  Location     Type
 27529 ;;                  2    0[COMRAM] PTR void 
 27530 ;; Registers used:
 27531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27532 ;; Tracked objects:
 27533 ;;		On entry : 0/0
 27534 ;;		On exit  : 0/0
 27535 ;;		Unchanged: 0/0
 27536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27537 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27541 ;;Total ram usage:        8 bytes
 27542 ;; Hardware stack levels used:    1
 27543 ;; This function calls:
 27544 ;;		Nothing
 27545 ;; This function is called by:
 27546 ;;		_USBStdSetCfgHandler
 27547 ;;		i2_USBDeviceInit
 27548 ;; This function uses a non-reentrant model
 27549 ;;
 27550                           
 27551                           	psect	text117
 27552  0171EA                     __ptext117:
 27553                           	opt stack 0
 27554  0171EA                     i2_memset:
 27555                           	opt stack 17
 27556                           
 27557                           ;incstack = 0
 27558  0171EA  C02D  F033         	movff	i2memset@p1,i2memset@p
 27559  0171EE  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 27560  0171F2  D008               	goto	i2l6610
 27561  0171F4                     i2l6606:
 27562  0171F4  C033  FFD9         	movff	i2memset@p,fsr2l
 27563  0171F8  C034  FFDA         	movff	i2memset@p+1,fsr2h
 27564  0171FC  C02F  FFDF         	movff	i2memset@c,indf2
 27565  017200  4A33               	infsnz	i2memset@p,f,c
 27566  017202  2A34               	incf	i2memset@p+1,f,c
 27567  017204                     i2l6610:
 27568  017204  0631               	decf	i2memset@n,f,c
 27569  017206  A0D8               	btfss	status,0,c
 27570  017208  0632               	decf	i2memset@n+1,f,c
 27571  01720A  2831               	incf	i2memset@n,w,c
 27572  01720C  E1F3               	bnz	i2l6606
 27573  01720E  2832               	incf	i2memset@n+1,w,c
 27574  017210  B4D8               	btfsc	status,2,c
 27575  017212  0012               	return	
 27576  017214  D7EF               	goto	i2l6606
 27577  017216                     __end_ofi2_memset:
 27578                           	opt stack 0
 27579                           pclatu	equ	0xFFB
 27580                           pclath	equ	0xFFA
 27581                           tblptru	equ	0xFF8
 27582                           tblptrh	equ	0xFF7
 27583                           tblptrl	equ	0xFF6
 27584                           tablat	equ	0xFF5
 27585                           prodh	equ	0xFF4
 27586                           prodl	equ	0xFF3
 27587                           intcon	equ	0xFF2
 27588                           intcon2	equ	0xFF1
 27589                           postinc0	equ	0xFEE
 27590                           fsr0h	equ	0xFEA
 27591                           fsr0l	equ	0xFE9
 27592                           wreg	equ	0xFE8
 27593                           indf1	equ	0xFE7
 27594                           postinc1	equ	0xFE6
 27595                           postdec1	equ	0xFE5
 27596                           fsr1h	equ	0xFE2
 27597                           fsr1l	equ	0xFE1
 27598                           indf2	equ	0xFDF
 27599                           postinc2	equ	0xFDE
 27600                           postdec2	equ	0xFDD
 27601                           plusw2	equ	0xFDB
 27602                           fsr2h	equ	0xFDA
 27603                           fsr2l	equ	0xFD9
 27604                           status	equ	0xFD8
 27605                           
 27606 ;; *************** function _USBStdGetStatusHandler *****************
 27607 ;; Defined at:
 27608 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 27609 ;; Parameters:    Size  Location     Type
 27610 ;;		None
 27611 ;; Auto vars:     Size  Location     Type
 27612 ;;  p               2    1[COMRAM] PTR struct __BDT
 27613 ;;		 -> NULL(0), BDT(48), 
 27614 ;; Return value:  Size  Location     Type
 27615 ;;		None               void
 27616 ;; Registers used:
 27617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27618 ;; Tracked objects:
 27619 ;;		On entry : 0/0
 27620 ;;		On exit  : 0/0
 27621 ;;		Unchanged: 0/0
 27622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27626 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27627 ;;Total ram usage:        3 bytes
 27628 ;; Hardware stack levels used:    1
 27629 ;; This function calls:
 27630 ;;		Nothing
 27631 ;; This function is called by:
 27632 ;;		_USBCheckStdRequest
 27633 ;; This function uses a non-reentrant model
 27634 ;;
 27635                           
 27636                           	psect	text118
 27637  0159F8                     __ptext118:
 27638                           	opt stack 0
 27639  0159F8                     _USBStdGetStatusHandler:
 27640                           	opt stack 15
 27641                           
 27642                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 27643                           
 27644                           ;incstack = 0
 27645  0159F8  0E00               	movlw	0
 27646  0159FA  010D               	movlb	13	; () banked
 27647  0159FC  6F38               	movwf	56,b	;volatile
 27648                           
 27649                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 27650  0159FE  0E00               	movlw	0
 27651  015A00  010D               	movlb	13	; () banked
 27652  015A02  6F39               	movwf	57,b	;volatile
 27653                           
 27654                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 27655  015A04  D03B               	goto	i2l6758
 27656  015A06                     i2l281:
 27657                           
 27658                           ; BSR set to: 13
 27659                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 27660  015A06  0100               	movlb	0	; () banked
 27661  015A08  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27662                           
 27663                           ;usb_device.c: 2145: }
 27664                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 27665                           
 27666                           ; BSR set to: 13
 27667                           
 27668                           ; BSR set to: 0
 27669                           ;usb_device.c: 2143: {
 27670                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 27671                           
 27672                           ;usb_device.c: 2142: if(0 == 1)
 27673  015A0A  0416               	decf	_RemoteWakeup,w,c	;volatile
 27674  015A0C  A4D8               	btfss	status,2,c
 27675  015A0E  D042               	goto	i2l284
 27676                           
 27677                           ;usb_device.c: 2148: {
 27678                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 27679  015A10  010D               	movlb	13	; () banked
 27680  015A12  8338               	bsf	56,1,b	;volatile
 27681                           
 27682                           ; BSR set to: 13
 27683                           ;usb_device.c: 2150: }
 27684                           ;usb_device.c: 2151: break;
 27685  015A14  D03F               	goto	i2l284
 27686  015A16                     i2l285:
 27687                           
 27688                           ; BSR set to: 13
 27689                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 27690  015A16  0100               	movlb	0	; () banked
 27691  015A18  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27692                           
 27693                           ;usb_device.c: 2154: break;
 27694  015A1A  D03C               	goto	i2l284
 27695  015A1C                     i2l286:
 27696                           
 27697                           ; BSR set to: 13
 27698                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 27699  015A1C  0100               	movlb	0	; () banked
 27700  015A1E  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27701                           
 27702                           ;usb_device.c: 2160: {
 27703                           ;usb_device.c: 2161: BDT_ENTRY *p;
 27704                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 27705  015A20  010D               	movlb	13	; () banked
 27706  015A22  BF34               	btfsc	52,7,b	;volatile
 27707  015A24  D00B               	goto	i2l6748
 27708                           
 27709                           ; BSR set to: 13
 27710                           ;usb_device.c: 2164: {
 27711                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27712  015A26  010D               	movlb	13	; () banked
 27713  015A28  5134               	movf	52,w,b	;volatile
 27714  015A2A  0B0F               	andlw	15
 27715  015A2C  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27716  015A2E  502D               	movf	??_USBStdGetStatusHandler,w,c
 27717  015A30  0D02               	mullw	2
 27718  015A32  0E00               	movlw	low _pBDTEntryOut
 27719  015A34  24F3               	addwf	prodl,w,c
 27720  015A36  6ED9               	movwf	fsr2l,c
 27721  015A38  0E01               	movlw	high _pBDTEntryOut
 27722  015A3A  D00A               	goto	L8
 27723  015A3C                     i2l6748:
 27724                           
 27725                           ; BSR set to: 13
 27726                           ;usb_device.c: 2167: else
 27727                           ;usb_device.c: 2168: {
 27728                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27729  015A3C  010D               	movlb	13	; () banked
 27730  015A3E  5134               	movf	52,w,b	;volatile
 27731  015A40  0B0F               	andlw	15
 27732  015A42  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27733  015A44  502D               	movf	??_USBStdGetStatusHandler,w,c
 27734  015A46  0D02               	mullw	2
 27735  015A48  0EEA               	movlw	low _pBDTEntryIn
 27736  015A4A  24F3               	addwf	prodl,w,c
 27737  015A4C  6ED9               	movwf	fsr2l,c
 27738  015A4E  0E00               	movlw	high _pBDTEntryIn
 27739  015A50                     L8:
 27740  015A50  20F4               	addwfc	prodh,w,c
 27741  015A52  6EDA               	movwf	fsr2h,c
 27742  015A54  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 27743  015A58  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 27744                           
 27745                           ; BSR set to: 13
 27746                           ;usb_device.c: 2170: }
 27747                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27748                           
 27749                           ; BSR set to: 13
 27750  015A5C  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27751  015A60  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27752  015A64  AEDF               	btfss	indf2,7,c
 27753  015A66  D016               	goto	i2l284
 27754                           
 27755                           ; BSR set to: 13
 27756  015A68  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27757  015A6C  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27758  015A70  A4DF               	btfss	indf2,2,c
 27759  015A72  D010               	goto	i2l284
 27760                           
 27761                           ; BSR set to: 13
 27762                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 27763  015A74  0E01               	movlw	1
 27764  015A76  010D               	movlb	13	; () banked
 27765  015A78  6F38               	movwf	56,b	;volatile
 27766                           
 27767                           ; BSR set to: 13
 27768                           ;usb_device.c: 2175: }
 27769                           ;usb_device.c: 2176: }
 27770                           
 27771                           ; BSR set to: 13
 27772                           ;usb_device.c: 2174: break;
 27773  015A7A  D00C               	goto	i2l284
 27774  015A7C                     i2l6758:
 27775                           
 27776                           ; BSR set to: 13
 27777  015A7C  010D               	movlb	13	; () banked
 27778  015A7E  5130               	movf	48,w,b	;volatile
 27779  015A80  0B1F               	andlw	31
 27780                           
 27781                           ; Switch size 1, requested type "space"
 27782                           ; Number of cases is 3, Range of values is 0 to 2
 27783                           ; switch strategies available:
 27784                           ; Name         Instructions Cycles
 27785                           ; simple_byte           10     6 (average)
 27786                           ;	Chosen strategy is simple_byte
 27787  015A82  0A00               	xorlw	0	; case 0
 27788  015A84  B4D8               	btfsc	status,2,c
 27789  015A86  D7BF               	goto	i2l281
 27790  015A88  0A01               	xorlw	1	; case 1
 27791  015A8A  B4D8               	btfsc	status,2,c
 27792  015A8C  D7C4               	goto	i2l285
 27793  015A8E  0A03               	xorlw	3	; case 2
 27794  015A90  B4D8               	btfsc	status,2,c
 27795  015A92  D7C4               	goto	i2l286
 27796  015A94                     i2l284:
 27797                           
 27798                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 27799  015A94  0100               	movlb	0	; () banked
 27800  015A96  AFE7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27801  015A98  0012               	return	
 27802                           
 27803                           ; BSR set to: 0
 27804                           ;usb_device.c: 2179: {
 27805                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27806  015A9A  0E38               	movlw	56
 27807  015A9C  0100               	movlb	0	; () banked
 27808  015A9E  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27809  015AA0  0E0D               	movlw	13
 27810  015AA2  0100               	movlb	0	; () banked
 27811  015AA4  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27812                           
 27813                           ; BSR set to: 0
 27814                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27815  015AA6  0100               	movlb	0	; () banked
 27816  015AA8  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27817                           
 27818                           ; BSR set to: 0
 27819                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 27820  015AAA  0E02               	movlw	2
 27821  015AAC  0100               	movlb	0	; () banked
 27822  015AAE  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27823  015AB0  0012               	return	
 27824  015AB2                     __end_of_USBStdGetStatusHandler:
 27825                           	opt stack 0
 27826                           pclatu	equ	0xFFB
 27827                           pclath	equ	0xFFA
 27828                           tblptru	equ	0xFF8
 27829                           tblptrh	equ	0xFF7
 27830                           tblptrl	equ	0xFF6
 27831                           tablat	equ	0xFF5
 27832                           prodh	equ	0xFF4
 27833                           prodl	equ	0xFF3
 27834                           intcon	equ	0xFF2
 27835                           intcon2	equ	0xFF1
 27836                           postinc0	equ	0xFEE
 27837                           fsr0h	equ	0xFEA
 27838                           fsr0l	equ	0xFE9
 27839                           wreg	equ	0xFE8
 27840                           indf1	equ	0xFE7
 27841                           postinc1	equ	0xFE6
 27842                           postdec1	equ	0xFE5
 27843                           fsr1h	equ	0xFE2
 27844                           fsr1l	equ	0xFE1
 27845                           indf2	equ	0xFDF
 27846                           postinc2	equ	0xFDE
 27847                           postdec2	equ	0xFDD
 27848                           plusw2	equ	0xFDB
 27849                           fsr2h	equ	0xFDA
 27850                           fsr2l	equ	0xFD9
 27851                           status	equ	0xFD8
 27852                           
 27853 ;; *************** function _USBStdGetDscHandler *****************
 27854 ;; Defined at:
 27855 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 27856 ;; Parameters:    Size  Location     Type
 27857 ;;		None
 27858 ;; Auto vars:     Size  Location     Type
 27859 ;;		None
 27860 ;; Return value:  Size  Location     Type
 27861 ;;		None               void
 27862 ;; Registers used:
 27863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27864 ;; Tracked objects:
 27865 ;;		On entry : 0/0
 27866 ;;		On exit  : 0/0
 27867 ;;		Unchanged: 0/0
 27868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27873 ;;Total ram usage:        2 bytes
 27874 ;; Hardware stack levels used:    1
 27875 ;; This function calls:
 27876 ;;		Nothing
 27877 ;; This function is called by:
 27878 ;;		_USBCheckStdRequest
 27879 ;; This function uses a non-reentrant model
 27880 ;;
 27881                           
 27882                           	psect	text119
 27883  013BD6                     __ptext119:
 27884                           	opt stack 0
 27885  013BD6                     _USBStdGetDscHandler:
 27886                           	opt stack 15
 27887                           
 27888                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;incstack = 0
 27892  013BD6  0E80               	movlw	128
 27893  013BD8  010D               	movlb	13	; () banked
 27894  013BDA  1930               	xorwf	48,w,b	;volatile
 27895  013BDC  A4D8               	btfss	status,2,c
 27896  013BDE  0012               	return	
 27897                           
 27898                           ; BSR set to: 13
 27899                           ;usb_device.c: 2046: {
 27900                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27901  013BE0  0EC0               	movlw	192
 27902  013BE2  0100               	movlb	0	; () banked
 27903  013BE4  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27904                           
 27905                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 27906  013BE6  D092               	goto	i2l6736
 27907  013BE8                     i2l6710:
 27908                           
 27909                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27910  013BE8  0ECE               	movlw	low _device_dsc
 27911  013BEA  0100               	movlb	0	; () banked
 27912  013BEC  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27913  013BEE  0EFA               	movlw	high _device_dsc
 27914  013BF0  0100               	movlb	0	; () banked
 27915  013BF2  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27916                           
 27917                           ; BSR set to: 0
 27918                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 27919  013BF4  0E00               	movlw	0
 27920  013BF6  0100               	movlb	0	; () banked
 27921  013BF8  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27922  013BFA  0E12               	movlw	18
 27923  013BFC  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27924                           
 27925                           ;usb_device.c: 2058: break;
 27926  013BFE  0012               	return	
 27927  013C00                     i2l6714:
 27928                           
 27929                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 27930  013C00  010D               	movlb	13	; () banked
 27931  013C02  5132               	movf	50,w,b	;volatile
 27932  013C04  A4D8               	btfss	status,2,c
 27933  013C06  D049               	goto	i2l6722
 27934                           
 27935                           ; BSR set to: 13
 27936                           ;usb_device.c: 2064: {
 27937                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27938  013C08  010D               	movlb	13	; () banked
 27939  013C0A  5132               	movf	50,w,b	;volatile
 27940  013C0C  0D02               	mullw	2
 27941  013C0E  0E8D               	movlw	low _USB_CD_Ptr
 27942  013C10  24F3               	addwf	prodl,w,c
 27943  013C12  6EF6               	movwf	tblptrl,c
 27944  013C14  0EF9               	movlw	high _USB_CD_Ptr
 27945  013C16  20F4               	addwfc	prodh,w,c
 27946  013C18  6EF7               	movwf	tblptrh,c
 27947  013C1A                     	if	1	;There are 3 active tblptr bytes
 27948  013C1A  6AF8               	clrf	tblptru,c
 27949  013C1C  0E00               	movlw	low (__mediumconst shr (0+16))
 27950  013C1E  22F8               	addwfc	tblptru,f,c
 27951  013C20                     	endif
 27952  013C20  0009               	tblrd		*+
 27953  013C22  CFF5 F0E4          	movff	tablat,_inPipes	;volatile
 27954  013C26  000A               	tblrd		*-
 27955  013C28  CFF5 F0E5          	movff	tablat,_inPipes+1	;volatile
 27956                           
 27957                           ; BSR set to: 13
 27958                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27959  013C2C  0E02               	movlw	2
 27960  013C2E  0100               	movlb	0	; () banked
 27961  013C30  25E4               	addwf	_inPipes& (0+255),w,b	;volatile
 27962  013C32  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27963  013C34  0E00               	movlw	0
 27964  013C36  0100               	movlb	0	; () banked
 27965  013C38  21E5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27966  013C3A  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27967  013C3C  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27968  013C40  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27969  013C44  0E00               	movlw	low (__mediumconst shr (0+16))
 27970  013C46  6EF8               	movwf	tblptru,c
 27971  013C48  0E0E               	movlw	(high __ramtop+-1)
 27972  013C4A  64F7               	cpfsgt	tblptrh,c
 27973  013C4C  D003               	bra	i2u643_47
 27974  013C4E  0008               	tblrd		*
 27975  013C50  50F5               	movf	tablat,w,c
 27976  013C52  D005               	bra	i2u643_40
 27977  013C54                     i2u643_47:
 27978  013C54  CFF6 FFE1          	movff	tblptrl,fsr1l
 27979  013C58  CFF7 FFE2          	movff	tblptrh,fsr1h
 27980  013C5C  50E7               	movf	indf1,w,c
 27981  013C5E                     i2u643_40:
 27982  013C5E  0100               	movlb	0	; () banked
 27983  013C60  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27984                           
 27985                           ; BSR set to: 0
 27986                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27987  013C62  0E03               	movlw	3
 27988  013C64  0100               	movlb	0	; () banked
 27989  013C66  25E4               	addwf	_inPipes& (0+255),w,b	;volatile
 27990  013C68  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27991  013C6A  0E00               	movlw	0
 27992  013C6C  0100               	movlb	0	; () banked
 27993  013C6E  21E5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27994  013C70  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27995  013C72  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27996  013C76  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27997  013C7A  0E00               	movlw	low (__mediumconst shr (0+16))
 27998  013C7C  6EF8               	movwf	tblptru,c
 27999  013C7E  0E0E               	movlw	(high __ramtop+-1)
 28000  013C80  64F7               	cpfsgt	tblptrh,c
 28001  013C82  D003               	bra	i2u644_47
 28002  013C84  0008               	tblrd		*
 28003  013C86  50F5               	movf	tablat,w,c
 28004  013C88  D005               	bra	i2u644_40
 28005  013C8A                     i2u644_47:
 28006  013C8A  CFF6 FFE1          	movff	tblptrl,fsr1l
 28007  013C8E  CFF7 FFE2          	movff	tblptrh,fsr1h
 28008  013C92  50E7               	movf	indf1,w,c
 28009  013C94                     i2u644_40:
 28010  013C94  0100               	movlb	0	; () banked
 28011  013C96  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28012                           
 28013                           ;usb_device.c: 2076: }
 28014  013C98  0012               	return	
 28015  013C9A                     i2l6722:
 28016                           
 28017                           ;usb_device.c: 2077: else
 28018                           ;usb_device.c: 2078: {
 28019                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 28020  013C9A  0E00               	movlw	0
 28021  013C9C  0100               	movlb	0	; () banked
 28022  013C9E  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28023                           
 28024                           ; BSR set to: 0
 28025                           ;usb_device.c: 2080: }
 28026                           ;usb_device.c: 2081: break;
 28027  013CA0  0012               	return	
 28028  013CA2                     i2l6724:
 28029                           
 28030                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 28031  013CA2  0E03               	movlw	3
 28032  013CA4  010D               	movlb	13	; () banked
 28033  013CA6  6132               	cpfslt	50,b	;volatile
 28034  013CA8  D029               	goto	i2l6730
 28035                           
 28036                           ; BSR set to: 13
 28037                           ;usb_device.c: 2087: {
 28038                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 28039  013CAA  010D               	movlb	13	; () banked
 28040  013CAC  5132               	movf	50,w,b	;volatile
 28041  013CAE  0D02               	mullw	2
 28042  013CB0  0E87               	movlw	low _USB_SD_Ptr
 28043  013CB2  24F3               	addwf	prodl,w,c
 28044  013CB4  6EF6               	movwf	tblptrl,c
 28045  013CB6  0EF9               	movlw	high _USB_SD_Ptr
 28046  013CB8  20F4               	addwfc	prodh,w,c
 28047  013CBA  6EF7               	movwf	tblptrh,c
 28048  013CBC                     	if	1	;There are 3 active tblptr bytes
 28049  013CBC  6AF8               	clrf	tblptru,c
 28050  013CBE  0E00               	movlw	low (__mediumconst shr (0+16))
 28051  013CC0  22F8               	addwfc	tblptru,f,c
 28052  013CC2                     	endif
 28053  013CC2  0009               	tblrd		*+
 28054  013CC4  CFF5 F0E4          	movff	tablat,_inPipes	;volatile
 28055  013CC8  000A               	tblrd		*-
 28056  013CCA  CFF5 F0E5          	movff	tablat,_inPipes+1	;volatile
 28057                           
 28058                           ; BSR set to: 13
 28059                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 28060  013CCE  C0E4  FFF6         	movff	_inPipes,tblptrl	;volatile
 28061  013CD2  C0E5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28062  013CD6  0E00               	movlw	low (__mediumconst shr (0+16))
 28063  013CD8  6EF8               	movwf	tblptru,c
 28064  013CDA  0E0E               	movlw	(high __ramtop+-1)
 28065  013CDC  64F7               	cpfsgt	tblptrh,c
 28066  013CDE  D003               	bra	i2u646_47
 28067  013CE0  0008               	tblrd		*
 28068  013CE2  50F5               	movf	tablat,w,c
 28069  013CE4  D005               	bra	i2u646_40
 28070  013CE6                     i2u646_47:
 28071  013CE6  CFF6 FFE1          	movff	tblptrl,fsr1l
 28072  013CEA  CFF7 FFE2          	movff	tblptrh,fsr1h
 28073  013CEE  50E7               	movf	indf1,w,c
 28074  013CF0                     i2u646_40:
 28075  013CF0  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 28076  013CF2  502D               	movf	??_USBStdGetDscHandler,w,c
 28077  013CF4  0100               	movlb	0	; () banked
 28078  013CF6  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28079  013CF8  6BE9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 28080                           
 28081                           ;usb_device.c: 2092: }
 28082  013CFA  0012               	return	
 28083  013CFC                     i2l6730:
 28084                           
 28085                           ;usb_device.c: 2102: else
 28086                           ;usb_device.c: 2103: {
 28087                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 28088  013CFC  0E00               	movlw	0
 28089  013CFE  0100               	movlb	0	; () banked
 28090  013D00  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28091                           
 28092                           ; BSR set to: 0
 28093                           ;usb_device.c: 2105: }
 28094                           ;usb_device.c: 2106: break;
 28095  013D02  0012               	return	
 28096  013D04                     i2l6732:
 28097                           
 28098                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 28099  013D04  0E00               	movlw	0
 28100  013D06  0100               	movlb	0	; () banked
 28101  013D08  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28102                           
 28103                           ; BSR set to: 0
 28104                           ;usb_device.c: 2110: }
 28105                           
 28106                           ;usb_device.c: 2109: break;
 28107  013D0A  0012               	return	
 28108  013D0C                     i2l6736:
 28109                           
 28110                           ; BSR set to: 0
 28111  013D0C  010D               	movlb	13	; () banked
 28112  013D0E  5133               	movf	51,w,b	;volatile
 28113                           
 28114                           ; Switch size 1, requested type "space"
 28115                           ; Number of cases is 3, Range of values is 1 to 3
 28116                           ; switch strategies available:
 28117                           ; Name         Instructions Cycles
 28118                           ; simple_byte           10     6 (average)
 28119                           ;	Chosen strategy is simple_byte
 28120  013D10  0A01               	xorlw	1	; case 1
 28121  013D12  B4D8               	btfsc	status,2,c
 28122  013D14  D769               	goto	i2l6710
 28123  013D16  0A03               	xorlw	3	; case 2
 28124  013D18  B4D8               	btfsc	status,2,c
 28125  013D1A  D772               	goto	i2l6714
 28126  013D1C  0A01               	xorlw	1	; case 3
 28127  013D1E  B4D8               	btfsc	status,2,c
 28128  013D20  D7C0               	goto	i2l6724
 28129  013D22  D7F0               	goto	i2l6732
 28130  013D24                     __end_of_USBStdGetDscHandler:
 28131                           	opt stack 0
 28132                           pclatu	equ	0xFFB
 28133                           pclath	equ	0xFFA
 28134                           tblptru	equ	0xFF8
 28135                           tblptrh	equ	0xFF7
 28136                           tblptrl	equ	0xFF6
 28137                           tablat	equ	0xFF5
 28138                           prodh	equ	0xFF4
 28139                           prodl	equ	0xFF3
 28140                           intcon	equ	0xFF2
 28141                           intcon2	equ	0xFF1
 28142                           postinc0	equ	0xFEE
 28143                           fsr0h	equ	0xFEA
 28144                           fsr0l	equ	0xFE9
 28145                           wreg	equ	0xFE8
 28146                           indf1	equ	0xFE7
 28147                           postinc1	equ	0xFE6
 28148                           postdec1	equ	0xFE5
 28149                           fsr1h	equ	0xFE2
 28150                           fsr1l	equ	0xFE1
 28151                           indf2	equ	0xFDF
 28152                           postinc2	equ	0xFDE
 28153                           postdec2	equ	0xFDD
 28154                           plusw2	equ	0xFDB
 28155                           fsr2h	equ	0xFDA
 28156                           fsr2l	equ	0xFD9
 28157                           status	equ	0xFD8
 28158                           
 28159 ;; *************** function _USBStdFeatureReqHandler *****************
 28160 ;; Defined at:
 28161 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 28162 ;; Parameters:    Size  Location     Type
 28163 ;;		None
 28164 ;; Auto vars:     Size  Location     Type
 28165 ;;  p               2   24[COMRAM] PTR struct __BDT
 28166 ;;		 -> NULL(0), BDT(48), 
 28167 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 28168 ;;		 -> UEP0(1), 
 28169 ;;  current_ep_d    1   23[COMRAM] struct .
 28170 ;; Return value:  Size  Location     Type
 28171 ;;		None               void
 28172 ;; Registers used:
 28173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28174 ;; Tracked objects:
 28175 ;;		On entry : 0/0
 28176 ;;		On exit  : 0/0
 28177 ;;		Unchanged: 0/0
 28178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28180 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28182 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28183 ;;Total ram usage:        6 bytes
 28184 ;; Hardware stack levels used:    1
 28185 ;; Hardware stack levels required when called:    4
 28186 ;; This function calls:
 28187 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28188 ;; This function is called by:
 28189 ;;		_USBCheckStdRequest
 28190 ;; This function uses a non-reentrant model
 28191 ;;
 28192                           
 28193                           	psect	text120
 28194  012AFE                     __ptext120:
 28195                           	opt stack 0
 28196  012AFE                     _USBStdFeatureReqHandler:
 28197                           	opt stack 11
 28198                           
 28199                           ;usb_device.c: 2759: BDT_ENTRY *p;
 28200                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 28201                           ;usb_device.c: 2764: unsigned char* pUEP;
 28202                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 28203                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 28204                           
 28205                           ;incstack = 0
 28206  012AFE  010D               	movlb	13	; () banked
 28207  012B00  0532               	decf	50,w,b	;volatile
 28208  012B02  A4D8               	btfss	status,2,c
 28209  012B04  D011               	goto	i2l360
 28210                           
 28211                           ; BSR set to: 13
 28212  012B06  010D               	movlb	13	; () banked
 28213  012B08  5130               	movf	48,w,b	;volatile
 28214  012B0A  0B1F               	andlw	31
 28215  012B0C  0900               	iorlw	0
 28216  012B0E  A4D8               	btfss	status,2,c
 28217  012B10  D00B               	goto	i2l360
 28218                           
 28219                           ; BSR set to: 13
 28220                           ;usb_device.c: 2804: {
 28221                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 28222  012B12  0100               	movlb	0	; () banked
 28223  012B14  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28224                           
 28225                           ; BSR set to: 0
 28226                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 28227  012B16  0E03               	movlw	3
 28228  012B18  010D               	movlb	13	; () banked
 28229  012B1A  1931               	xorwf	49,w,b	;volatile
 28230  012B1C  A4D8               	btfss	status,2,c
 28231  012B1E  D002               	goto	i2l6776
 28232                           
 28233                           ; BSR set to: 13
 28234                           ;usb_device.c: 2807: RemoteWakeup = 1;
 28235  012B20  0E01               	movlw	1
 28236  012B22  D001               	goto	L9
 28237  012B24                     i2l6776:
 28238                           
 28239                           ; BSR set to: 13
 28240                           ;usb_device.c: 2808: else
 28241                           ;usb_device.c: 2809: RemoteWakeup = 0;
 28242  012B24  0E00               	movlw	0
 28243  012B26                     L9:
 28244  012B26  6E16               	movwf	_RemoteWakeup,c	;volatile
 28245  012B28                     i2l360:
 28246                           
 28247                           ; BSR set to: 13
 28248                           ;usb_device.c: 2810: }
 28249                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 28250                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 28251                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 28252                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 28253  012B28  010D               	movlb	13	; () banked
 28254  012B2A  5132               	movf	50,w,b	;volatile
 28255  012B2C  A4D8               	btfss	status,2,c
 28256  012B2E  0012               	return	
 28257                           
 28258                           ; BSR set to: 13
 28259  012B30  010D               	movlb	13	; () banked
 28260  012B32  5130               	movf	48,w,b	;volatile
 28261  012B34  0B1F               	andlw	31
 28262  012B36  0A02               	xorlw	2
 28263  012B38  A4D8               	btfss	status,2,c
 28264  012B3A  0012               	return	
 28265                           
 28266                           ; BSR set to: 13
 28267  012B3C  010D               	movlb	13	; () banked
 28268  012B3E  5134               	movf	52,w,b	;volatile
 28269  012B40  0B0F               	andlw	15
 28270  012B42  0900               	iorlw	0
 28271  012B44  B4D8               	btfsc	status,2,c
 28272  012B46  0012               	return	
 28273                           
 28274                           ; BSR set to: 13
 28275  012B48  010D               	movlb	13	; () banked
 28276  012B4A  5134               	movf	52,w,b	;volatile
 28277  012B4C  0B0F               	andlw	15
 28278  012B4E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28279  012B50  0E03               	movlw	3
 28280  012B52  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 28281  012B54  0012               	return	
 28282                           
 28283                           ; BSR set to: 13
 28284  012B56  0E20               	movlw	32
 28285  012B58  181A               	xorwf	_USBDeviceState,w,c	;volatile
 28286  012B5A  A4D8               	btfss	status,2,c
 28287  012B5C  0012               	return	
 28288                           
 28289                           ; BSR set to: 13
 28290                           ;usb_device.c: 2817: {
 28291                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 28292  012B5E  0100               	movlb	0	; () banked
 28293  012B60  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28294                           
 28295                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 28296  012B62  010D               	movlb	13	; () banked
 28297  012B64  BF34               	btfsc	52,7,b	;volatile
 28298  012B66  D01B               	goto	i2l6790
 28299                           
 28300                           ; BSR set to: 13
 28301                           ;usb_device.c: 2824: {
 28302                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28303  012B68  010D               	movlb	13	; () banked
 28304  012B6A  5134               	movf	52,w,b	;volatile
 28305  012B6C  0B0F               	andlw	15
 28306  012B6E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28307  012B70  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28308  012B72  0D02               	mullw	2
 28309  012B74  0E00               	movlw	low _pBDTEntryOut
 28310  012B76  24F3               	addwf	prodl,w,c
 28311  012B78  6ED9               	movwf	fsr2l,c
 28312  012B7A  0E01               	movlw	high _pBDTEntryOut
 28313  012B7C  20F4               	addwfc	prodh,w,c
 28314  012B7E  6EDA               	movwf	fsr2h,c
 28315  012B80  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 28316  012B84  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28317                           
 28318                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 28319  012B88  010D               	movlb	13	; () banked
 28320  012B8A  5134               	movf	52,w,b	;volatile
 28321  012B8C  0B0F               	andlw	15
 28322  012B8E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28323  012B90  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28324  012B92  0D01               	mullw	1
 28325  012B94  0E0D               	movlw	low _ep_data_out
 28326  012B96  24F3               	addwf	prodl,w,c
 28327  012B98  6ED9               	movwf	fsr2l,c
 28328  012B9A  0E00               	movlw	high _ep_data_out
 28329  012B9C  D01A               	goto	L10
 28330  012B9E                     i2l6790:
 28331                           
 28332                           ; BSR set to: 13
 28333                           ;usb_device.c: 2828: else
 28334                           ;usb_device.c: 2829: {
 28335                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28336  012B9E  010D               	movlb	13	; () banked
 28337  012BA0  5134               	movf	52,w,b	;volatile
 28338  012BA2  0B0F               	andlw	15
 28339  012BA4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28340  012BA6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28341  012BA8  0D02               	mullw	2
 28342  012BAA  0EEA               	movlw	low _pBDTEntryIn
 28343  012BAC  24F3               	addwf	prodl,w,c
 28344  012BAE  6ED9               	movwf	fsr2l,c
 28345  012BB0  0E00               	movlw	high _pBDTEntryIn
 28346  012BB2  20F4               	addwfc	prodh,w,c
 28347  012BB4  6EDA               	movwf	fsr2h,c
 28348  012BB6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 28349  012BBA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28350                           
 28351                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 28352  012BBE  010D               	movlb	13	; () banked
 28353  012BC0  5134               	movf	52,w,b	;volatile
 28354  012BC2  0B0F               	andlw	15
 28355  012BC4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28356  012BC6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28357  012BC8  0D01               	mullw	1
 28358  012BCA  0E0A               	movlw	low _ep_data_in
 28359  012BCC  24F3               	addwf	prodl,w,c
 28360  012BCE  6ED9               	movwf	fsr2l,c
 28361  012BD0  0E00               	movlw	high _ep_data_in
 28362  012BD2                     L10:
 28363  012BD2  20F4               	addwfc	prodh,w,c
 28364  012BD4  6EDA               	movwf	fsr2h,c
 28365  012BD6  50DF               	movf	indf2,w,c
 28366  012BD8  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 28367                           
 28368                           ; BSR set to: 13
 28369                           ;usb_device.c: 2832: }
 28370                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 28371                           
 28372                           ; BSR set to: 13
 28373  012BDA  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 28374  012BDC  D002               	goto	i2l6796
 28375                           
 28376                           ; BSR set to: 13
 28377                           ;usb_device.c: 2839: {
 28378                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 28379  012BDE  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 28380                           
 28381                           ;usb_device.c: 2841: }
 28382  012BE0  D001               	goto	i2l6798
 28383  012BE2                     i2l6796:
 28384                           
 28385                           ; BSR set to: 13
 28386                           ;usb_device.c: 2842: else
 28387                           ;usb_device.c: 2843: {
 28388                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 28389  012BE2  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 28390  012BE4                     i2l6798:
 28391                           
 28392                           ; BSR set to: 13
 28393                           ;usb_device.c: 2845: }
 28394                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 28395  012BE4  010D               	movlb	13	; () banked
 28396  012BE6  BF34               	btfsc	52,7,b	;volatile
 28397  012BE8  D00B               	goto	i2l6802
 28398                           
 28399                           ; BSR set to: 13
 28400                           ;usb_device.c: 2851: {
 28401                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28402  012BEA  010D               	movlb	13	; () banked
 28403  012BEC  5134               	movf	52,w,b	;volatile
 28404  012BEE  0B0F               	andlw	15
 28405  012BF0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28406  012BF2  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28407  012BF4  0D02               	mullw	2
 28408  012BF6  0E00               	movlw	low _pBDTEntryOut
 28409  012BF8  24F3               	addwf	prodl,w,c
 28410  012BFA  6ED9               	movwf	fsr2l,c
 28411  012BFC  0E01               	movlw	high _pBDTEntryOut
 28412  012BFE  D00A               	goto	L11
 28413  012C00                     i2l6802:
 28414                           
 28415                           ; BSR set to: 13
 28416                           ;usb_device.c: 2854: else
 28417                           ;usb_device.c: 2855: {
 28418                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28419  012C00  010D               	movlb	13	; () banked
 28420  012C02  5134               	movf	52,w,b	;volatile
 28421  012C04  0B0F               	andlw	15
 28422  012C06  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28423  012C08  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28424  012C0A  0D02               	mullw	2
 28425  012C0C  0EEA               	movlw	low _pBDTEntryIn
 28426  012C0E  24F3               	addwf	prodl,w,c
 28427  012C10  6ED9               	movwf	fsr2l,c
 28428  012C12  0E00               	movlw	high _pBDTEntryIn
 28429  012C14                     L11:
 28430  012C14  20F4               	addwfc	prodh,w,c
 28431  012C16  6EDA               	movwf	fsr2h,c
 28432  012C18  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 28433  012C1C  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 28434                           
 28435                           ; BSR set to: 13
 28436                           ;usb_device.c: 2857: }
 28437                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 28438                           
 28439                           ; BSR set to: 13
 28440  012C20  0E03               	movlw	3
 28441  012C22  010D               	movlb	13	; () banked
 28442  012C24  1931               	xorwf	49,w,b	;volatile
 28443  012C26  A4D8               	btfss	status,2,c
 28444  012C28  D02E               	goto	i2l6818
 28445                           
 28446                           ; BSR set to: 13
 28447                           ;usb_device.c: 2861: {
 28448                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 28449  012C2A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28450  012C2E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28451  012C32  AEDF               	btfss	indf2,7,c
 28452  012C34  D01B               	goto	i2l6814
 28453                           
 28454                           ; BSR set to: 13
 28455                           ;usb_device.c: 2863: {
 28456                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 28457  012C36  010D               	movlb	13	; () banked
 28458  012C38  BF34               	btfsc	52,7,b	;volatile
 28459  012C3A  D00B               	goto	i2l6812
 28460                           
 28461                           ; BSR set to: 13
 28462                           ;usb_device.c: 2867: {
 28463                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28464  012C3C  010D               	movlb	13	; () banked
 28465  012C3E  5134               	movf	52,w,b	;volatile
 28466  012C40  0B0F               	andlw	15
 28467  012C42  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28468  012C44  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28469  012C46  0D01               	mullw	1
 28470  012C48  0E0D               	movlw	low _ep_data_out
 28471  012C4A  24F3               	addwf	prodl,w,c
 28472  012C4C  6ED9               	movwf	fsr2l,c
 28473  012C4E  0E00               	movlw	high _ep_data_out
 28474  012C50  D00A               	goto	L12
 28475  012C52                     i2l6812:
 28476                           
 28477                           ; BSR set to: 13
 28478                           ;usb_device.c: 2870: else
 28479                           ;usb_device.c: 2871: {
 28480                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28481  012C52  010D               	movlb	13	; () banked
 28482  012C54  5134               	movf	52,w,b	;volatile
 28483  012C56  0B0F               	andlw	15
 28484  012C58  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28485  012C5A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28486  012C5C  0D01               	mullw	1
 28487  012C5E  0E0A               	movlw	low _ep_data_in
 28488  012C60  24F3               	addwf	prodl,w,c
 28489  012C62  6ED9               	movwf	fsr2l,c
 28490  012C64  0E00               	movlw	high _ep_data_in
 28491  012C66                     L12:
 28492  012C66  20F4               	addwfc	prodh,w,c
 28493  012C68  6EDA               	movwf	fsr2h,c
 28494  012C6A  82DF               	bsf	indf2,1,c
 28495  012C6C                     i2l6814:
 28496                           
 28497                           ; BSR set to: 13
 28498                           ;usb_device.c: 2873: }
 28499                           ;usb_device.c: 2874: }
 28500                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 28501  012C6C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28502  012C70  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28503  012C74  0E00               	movlw	0
 28504  012C76  84DB               	bsf	plusw2,2,c
 28505                           
 28506                           ; BSR set to: 13
 28507                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 28508  012C78  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28509  012C7C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28510  012C80  0E00               	movlw	0
 28511  012C82  8EDB               	bsf	plusw2,7,c
 28512                           
 28513                           ;usb_device.c: 2879: }
 28514  012C84  0012               	return	
 28515  012C86                     i2l6818:
 28516                           
 28517                           ; BSR set to: 13
 28518                           ;usb_device.c: 2880: else
 28519                           ;usb_device.c: 2881: {
 28520                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28521  012C86  0E04               	movlw	4
 28522  012C88  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28523                           
 28524                           ; BSR set to: 13
 28525                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 28526  012C8A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28527  012C8E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28528  012C92  AEDF               	btfss	indf2,7,c
 28529  012C94  D01B               	goto	i2l6828
 28530                           
 28531                           ; BSR set to: 13
 28532                           ;usb_device.c: 2888: {
 28533                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 28534  012C96  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28535  012C9A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28536  012C9E  0E7F               	movlw	127
 28537  012CA0  16DF               	andwf	indf2,f,c
 28538                           
 28539                           ; BSR set to: 13
 28540                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 28541  012CA2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28542  012CA6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28543  012CAA  0E00               	movlw	0
 28544  012CAC  8CDB               	bsf	plusw2,6,c
 28545                           
 28546                           ; BSR set to: 13
 28547                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28548  012CAE  0E00               	movlw	0
 28549  012CB0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28550  012CB2  0E05               	movlw	5
 28551  012CB4  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28552  012CB6  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28553  012CBA  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28554  012CBE  0E00               	movlw	0
 28555  012CC0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28556  012CC2  0E02               	movlw	2
 28557  012CC4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28558  012CC6  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28559                           
 28560                           ;usb_device.c: 2894: }
 28561  012CCA  D006               	goto	i2l6830
 28562  012CCC                     i2l6828:
 28563                           
 28564                           ;usb_device.c: 2895: else
 28565                           ;usb_device.c: 2896: {
 28566                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 28567  012CCC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28568  012CD0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28569  012CD4  0E00               	movlw	0
 28570  012CD6  8CDB               	bsf	plusw2,6,c
 28571  012CD8                     i2l6830:
 28572                           
 28573                           ;usb_device.c: 2899: }
 28574                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28575  012CD8  0E04               	movlw	4
 28576  012CDA  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28577                           
 28578                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 28579  012CDC  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 28580  012CDE  D006               	goto	i2l379
 28581  012CE0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28582  012CE4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28583  012CE8  AEDF               	btfss	indf2,7,c
 28584  012CEA  D030               	goto	i2l6844
 28585  012CEC                     i2l379:
 28586                           
 28587                           ;usb_device.c: 2910: {
 28588                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 28589  012CEC  010D               	movlb	13	; () banked
 28590  012CEE  BF34               	btfsc	52,7,b	;volatile
 28591  012CF0  D00B               	goto	i2l6838
 28592                           
 28593                           ; BSR set to: 13
 28594                           ;usb_device.c: 2912: {
 28595                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28596  012CF2  010D               	movlb	13	; () banked
 28597  012CF4  5134               	movf	52,w,b	;volatile
 28598  012CF6  0B0F               	andlw	15
 28599  012CF8  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28600  012CFA  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28601  012CFC  0D01               	mullw	1
 28602  012CFE  0E0D               	movlw	low _ep_data_out
 28603  012D00  24F3               	addwf	prodl,w,c
 28604  012D02  6ED9               	movwf	fsr2l,c
 28605  012D04  0E00               	movlw	high _ep_data_out
 28606  012D06  D00A               	goto	L13
 28607  012D08                     i2l6838:
 28608                           
 28609                           ; BSR set to: 13
 28610                           ;usb_device.c: 2915: else
 28611                           ;usb_device.c: 2916: {
 28612                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28613  012D08  010D               	movlb	13	; () banked
 28614  012D0A  5134               	movf	52,w,b	;volatile
 28615  012D0C  0B0F               	andlw	15
 28616  012D0E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28617  012D10  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28618  012D12  0D01               	mullw	1
 28619  012D14  0E0A               	movlw	low _ep_data_in
 28620  012D16  24F3               	addwf	prodl,w,c
 28621  012D18  6ED9               	movwf	fsr2l,c
 28622  012D1A  0E00               	movlw	high _ep_data_in
 28623  012D1C                     L13:
 28624  012D1C  20F4               	addwfc	prodh,w,c
 28625  012D1E  6EDA               	movwf	fsr2h,c
 28626  012D20  92DF               	bcf	indf2,1,c
 28627                           
 28628                           ; BSR set to: 13
 28629                           ;usb_device.c: 2918: }
 28630                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28631                           
 28632                           ; BSR set to: 13
 28633  012D22  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28634  012D26  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28635  012D2A  0E3B               	movlw	59
 28636  012D2C  16DF               	andwf	indf2,f,c
 28637                           
 28638                           ; BSR set to: 13
 28639                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28640  012D2E  0E00               	movlw	0
 28641  012D30  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28642  012D32  0E05               	movlw	5
 28643  012D34  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28644  012D36  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28645  012D3A  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28646  012D3E  0E00               	movlw	0
 28647  012D40  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28648  012D42  0E02               	movlw	2
 28649  012D44  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28650  012D46  EC70  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28651                           
 28652                           ;usb_device.c: 2924: }
 28653  012D4A  D006               	goto	i2l6846
 28654  012D4C                     i2l6844:
 28655                           
 28656                           ;usb_device.c: 2925: else
 28657                           ;usb_device.c: 2926: {
 28658                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28659  012D4C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28660  012D50  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28661  012D54  0E3B               	movlw	59
 28662  012D56  16DF               	andwf	indf2,f,c
 28663  012D58                     i2l6846:
 28664                           
 28665                           ;usb_device.c: 2929: }
 28666                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 28667  012D58  010D               	movlb	13	; () banked
 28668  012D5A  5134               	movf	52,w,b	;volatile
 28669  012D5C  0B0F               	andlw	15
 28670  012D5E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28671  012D60  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28672  012D62  0D01               	mullw	1
 28673  012D64  0E26               	movlw	38
 28674  012D66  24F3               	addwf	prodl,w,c
 28675  012D68  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 28676  012D6A  0E0F               	movlw	15
 28677  012D6C  20F4               	addwfc	prodh,w,c
 28678  012D6E  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 28679                           
 28680                           ; BSR set to: 13
 28681                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 28682  012D70  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 28683  012D74  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 28684  012D78  0EFE               	movlw	254
 28685  012D7A  16DF               	andwf	indf2,f,c
 28686                           
 28687                           ; BSR set to: 13
 28688  012D7C  0012               	return	
 28689  012D7E                     __end_of_USBStdFeatureReqHandler:
 28690                           	opt stack 0
 28691                           pclatu	equ	0xFFB
 28692                           pclath	equ	0xFFA
 28693                           tblptru	equ	0xFF8
 28694                           tblptrh	equ	0xFF7
 28695                           tblptrl	equ	0xFF6
 28696                           tablat	equ	0xFF5
 28697                           prodh	equ	0xFF4
 28698                           prodl	equ	0xFF3
 28699                           intcon	equ	0xFF2
 28700                           intcon2	equ	0xFF1
 28701                           postinc0	equ	0xFEE
 28702                           fsr0h	equ	0xFEA
 28703                           fsr0l	equ	0xFE9
 28704                           wreg	equ	0xFE8
 28705                           indf1	equ	0xFE7
 28706                           postinc1	equ	0xFE6
 28707                           postdec1	equ	0xFE5
 28708                           fsr1h	equ	0xFE2
 28709                           fsr1l	equ	0xFE1
 28710                           indf2	equ	0xFDF
 28711                           postinc2	equ	0xFDE
 28712                           postdec2	equ	0xFDD
 28713                           plusw2	equ	0xFDB
 28714                           fsr2h	equ	0xFDA
 28715                           fsr2l	equ	0xFD9
 28716                           status	equ	0xFD8
 28717                           
 28718 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28719 ;; Defined at:
 28720 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 28721 ;; Parameters:    Size  Location     Type
 28722 ;;  event           2   12[COMRAM] enum E8545
 28723 ;;  pdata           2   14[COMRAM] PTR void 
 28724 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 28725 ;;  size            2   16[COMRAM] unsigned int 
 28726 ;; Auto vars:     Size  Location     Type
 28727 ;;		None
 28728 ;; Return value:  Size  Location     Type
 28729 ;;                  1    wreg      unsigned char 
 28730 ;; Registers used:
 28731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28732 ;; Tracked objects:
 28733 ;;		On entry : 0/0
 28734 ;;		On exit  : 0/0
 28735 ;;		Unchanged: 0/0
 28736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28741 ;;Total ram usage:        8 bytes
 28742 ;; Hardware stack levels used:    1
 28743 ;; Hardware stack levels required when called:    3
 28744 ;; This function calls:
 28745 ;;		_CDCInitEP
 28746 ;;		_USBCheckCDCRequest
 28747 ;; This function is called by:
 28748 ;;		_USBDeviceTasks
 28749 ;;		_USBStdSetCfgHandler
 28750 ;;		_USBSuspend
 28751 ;;		_USBWakeFromSuspend
 28752 ;;		_USBCtrlTrfSetupHandler
 28753 ;;		_USBCheckStdRequest
 28754 ;;		_USBStdFeatureReqHandler
 28755 ;; This function uses a non-reentrant model
 28756 ;;
 28757                           
 28758                           	psect	text121
 28759  0170E0                     __ptext121:
 28760                           	opt stack 0
 28761  0170E0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28762                           	opt stack 15
 28763                           
 28764                           ;My_usb_cdc.c: 40: switch ((int) event) {
 28765                           
 28766                           ; BSR set to: 13
 28767                           ;incstack = 0
 28768  0170E0  D006               	goto	i2l6458
 28769  0170E2                     i2l6452:
 28770                           
 28771                           ;My_usb_cdc.c: 42: CDCInitEP();
 28772  0170E2  EC0D  F0B4         	call	_CDCInitEP	;wreg free
 28773                           
 28774                           ;My_usb_cdc.c: 43: break;
 28775  0170E6  0012               	return	
 28776  0170E8                     i2l6454:
 28777                           
 28778                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 28779  0170E8  ECF4  F0A9         	call	_USBCheckCDCRequest	;wreg free
 28780                           
 28781                           ;My_usb_cdc.c: 47: }
 28782                           
 28783                           ;My_usb_cdc.c: 46: break;
 28784  0170EC  0012               	return	
 28785  0170EE                     i2l6458:
 28786  0170EE  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28787  0170F2  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28788                           
 28789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28790                           ; Switch size 1, requested type "space"
 28791                           ; Number of cases is 1, Range of values is 0 to 0
 28792                           ; switch strategies available:
 28793                           ; Name         Instructions Cycles
 28794                           ; simple_byte            4     3 (average)
 28795                           ;	Chosen strategy is simple_byte
 28796  0170F6  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28797  0170F8  0A00               	xorlw	0	; case 0
 28798  0170FA  A4D8               	btfss	status,2,c
 28799  0170FC  0012               	return	
 28800                           
 28801                           ; Switch size 1, requested type "space"
 28802                           ; Number of cases is 2, Range of values is 1 to 3
 28803                           ; switch strategies available:
 28804                           ; Name         Instructions Cycles
 28805                           ; simple_byte            7     4 (average)
 28806                           ;	Chosen strategy is simple_byte
 28807  0170FE  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28808  017100  0A01               	xorlw	1	; case 1
 28809  017102  B4D8               	btfsc	status,2,c
 28810  017104  D7EE               	goto	i2l6452
 28811  017106  0A02               	xorlw	2	; case 3
 28812  017108  A4D8               	btfss	status,2,c
 28813  01710A  0012               	return	
 28814  01710C  D7ED               	goto	i2l6454
 28815  01710E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28816                           	opt stack 0
 28817                           pclatu	equ	0xFFB
 28818                           pclath	equ	0xFFA
 28819                           tblptru	equ	0xFF8
 28820                           tblptrh	equ	0xFF7
 28821                           tblptrl	equ	0xFF6
 28822                           tablat	equ	0xFF5
 28823                           prodh	equ	0xFF4
 28824                           prodl	equ	0xFF3
 28825                           intcon	equ	0xFF2
 28826                           intcon2	equ	0xFF1
 28827                           postinc0	equ	0xFEE
 28828                           fsr0h	equ	0xFEA
 28829                           fsr0l	equ	0xFE9
 28830                           wreg	equ	0xFE8
 28831                           indf1	equ	0xFE7
 28832                           postinc1	equ	0xFE6
 28833                           postdec1	equ	0xFE5
 28834                           fsr1h	equ	0xFE2
 28835                           fsr1l	equ	0xFE1
 28836                           indf2	equ	0xFDF
 28837                           postinc2	equ	0xFDE
 28838                           postdec2	equ	0xFDD
 28839                           plusw2	equ	0xFDB
 28840                           fsr2h	equ	0xFDA
 28841                           fsr2l	equ	0xFD9
 28842                           status	equ	0xFD8
 28843                           
 28844 ;; *************** function _USBCheckCDCRequest *****************
 28845 ;; Defined at:
 28846 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 28847 ;; Parameters:    Size  Location     Type
 28848 ;;		None
 28849 ;; Auto vars:     Size  Location     Type
 28850 ;;		None
 28851 ;; Return value:  Size  Location     Type
 28852 ;;		None               void
 28853 ;; Registers used:
 28854 ;;		wreg, status,2, status,0
 28855 ;; Tracked objects:
 28856 ;;		On entry : 0/0
 28857 ;;		On exit  : 0/0
 28858 ;;		Unchanged: 0/0
 28859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28864 ;;Total ram usage:        0 bytes
 28865 ;; Hardware stack levels used:    1
 28866 ;; This function calls:
 28867 ;;		Nothing
 28868 ;; This function is called by:
 28869 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28870 ;; This function uses a non-reentrant model
 28871 ;;
 28872                           
 28873                           	psect	text122
 28874  0153E8                     __ptext122:
 28875                           	opt stack 0
 28876  0153E8                     _USBCheckCDCRequest:
 28877                           	opt stack 17
 28878                           
 28879                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28880                           
 28881                           ;incstack = 0
 28882  0153E8  010D               	movlb	13	; () banked
 28883  0153EA  5130               	movf	48,w,b	;volatile
 28884  0153EC  0B1F               	andlw	31
 28885  0153EE  06E8               	decf	wreg,f,c
 28886  0153F0  A4D8               	btfss	status,2,c
 28887  0153F2  0012               	return	
 28888                           
 28889                           ; BSR set to: 13
 28890                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28891                           
 28892                           ; BSR set to: 13
 28893                           
 28894                           ; BSR set to: 13
 28895  0153F4  010D               	movlb	13	; () banked
 28896  0153F6  3930               	swapf	48,w,b	;volatile
 28897  0153F8  32E8               	rrcf	wreg,f,c
 28898  0153FA  0B03               	andlw	3
 28899  0153FC  06E8               	decf	wreg,f,c
 28900  0153FE  A4D8               	btfss	status,2,c
 28901  015400  0012               	return	
 28902                           
 28903                           ; BSR set to: 13
 28904                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 28905                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 28906                           
 28907                           ; BSR set to: 13
 28908                           
 28909                           ; BSR set to: 13
 28910  015402  010D               	movlb	13	; () banked
 28911  015404  5134               	movf	52,w,b	;volatile
 28912  015406  B4D8               	btfsc	status,2,c
 28913  015408  D042               	goto	i2l6332
 28914                           
 28915                           ; BSR set to: 13
 28916  01540A  010D               	movlb	13	; () banked
 28917  01540C  0534               	decf	52,w,b	;volatile
 28918  01540E  A4D8               	btfss	status,2,c
 28919  015410  0012               	return	
 28920  015412  D03D               	goto	i2l6332
 28921  015414                     i2l6308:
 28922                           
 28923                           ; BSR set to: 13
 28924                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28925  015414  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 28926  015416  0100               	movlb	0	; () banked
 28927  015418  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 28928  01541A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28929  01541C  0100               	movlb	0	; () banked
 28930  01541E  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28931                           
 28932                           ; BSR set to: 0
 28933                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 28934  015420  0E00               	movlw	0
 28935  015422  0100               	movlb	0	; () banked
 28936  015424  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28937  015426  0E08               	movlw	8
 28938  015428  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28939                           
 28940                           ; BSR set to: 0
 28941                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28942  01542A  0100               	movlb	0	; () banked
 28943  01542C  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28944                           
 28945                           ; BSR set to: 0
 28946                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 28947  01542E  0100               	movlb	0	; () banked
 28948  015430  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28949                           
 28950                           ;usb_device_cdc.c: 232: break;
 28951  015432  0012               	return	
 28952  015434                     i2l6316:
 28953                           
 28954                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28955  015434  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 28956  015436  0100               	movlb	0	; () banked
 28957  015438  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 28958  01543A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28959  01543C  0100               	movlb	0	; () banked
 28960  01543E  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28961                           
 28962                           ; BSR set to: 0
 28963                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 28964  015440  0100               	movlb	0	; () banked
 28965  015442  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28966                           
 28967                           ;usb_device_cdc.c: 237: break;
 28968  015444  0012               	return	
 28969  015446                     i2l436:
 28970                           
 28971                           ; BSR set to: 13
 28972                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 28973  015446  CD36 F005          	movff	3382,_outPipes+4	;volatile
 28974  01544A  CD37 F006          	movff	3383,_outPipes+5	;volatile
 28975                           
 28976                           ; BSR set to: 13
 28977                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 28978  01544E  0E85               	movlw	low _line_coding
 28979  015450  6E01               	movwf	_outPipes,c	;volatile
 28980  015452  0E01               	movlw	high _line_coding
 28981  015454  6E02               	movwf	_outPipes+1,c	;volatile
 28982                           
 28983                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 28984  015456  0E00               	movlw	0
 28985  015458  6E07               	movwf	_outPipes+6,c	;volatile
 28986  01545A  0E00               	movlw	0
 28987  01545C  6E08               	movwf	_outPipes+7,c	;volatile
 28988  01545E  0E00               	movlw	0
 28989  015460  6E09               	movwf	_outPipes+8,c	;volatile
 28990                           
 28991                           ; BSR set to: 13
 28992                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 28993  015462  8E04               	bsf	_outPipes+3,7,c	;volatile
 28994                           
 28995                           ;usb_device_cdc.c: 246: break;
 28996  015464  0012               	return	
 28997  015466                     i2l6324:
 28998                           
 28999                           ; BSR set to: 13
 29000                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29001  015466  0E85               	movlw	low _line_coding
 29002  015468  0100               	movlb	0	; () banked
 29003  01546A  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 29004  01546C  0E01               	movlw	high _line_coding
 29005  01546E  0100               	movlb	0	; () banked
 29006  015470  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29007                           
 29008                           ; BSR set to: 0
 29009  015472  0E00               	movlw	0
 29010  015474  0100               	movlb	0	; () banked
 29011  015476  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29012  015478  0E07               	movlw	7
 29013  01547A  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29014                           
 29015                           ; BSR set to: 0
 29016  01547C  0EC1               	movlw	193
 29017  01547E  0100               	movlb	0	; () banked
 29018  015480  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29019                           
 29020                           ;usb_device_cdc.c: 253: break;
 29021  015482  0012               	return	
 29022  015484                     i2l438:
 29023                           
 29024                           ; BSR set to: 13
 29025                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29026  015484  CD32 F124          	movff	3378,_control_signal_bitmap	;volatile
 29027                           
 29028                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 29029  015488  0100               	movlb	0	; () banked
 29030  01548A  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29031                           
 29032                           ; BSR set to: 0
 29033                           ;usb_device_cdc.c: 315: }
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;usb_device_cdc.c: 314: break;
 29037                           
 29038                           ;usb_device_cdc.c: 313: default:
 29039                           
 29040                           ;usb_device_cdc.c: 289: break;
 29041  01548C  0012               	return	
 29042  01548E                     i2l6332:
 29043  01548E  010D               	movlb	13	; () banked
 29044  015490  5131               	movf	49,w,b	;volatile
 29045                           
 29046                           ; Switch size 1, requested type "space"
 29047                           ; Number of cases is 5, Range of values is 0 to 34
 29048                           ; switch strategies available:
 29049                           ; Name         Instructions Cycles
 29050                           ; simple_byte           16     9 (average)
 29051                           ;	Chosen strategy is simple_byte
 29052  015492  0A00               	xorlw	0	; case 0
 29053  015494  B4D8               	btfsc	status,2,c
 29054  015496  D7BE               	goto	i2l6308
 29055  015498  0A01               	xorlw	1	; case 1
 29056  01549A  B4D8               	btfsc	status,2,c
 29057  01549C  D7CB               	goto	i2l6316
 29058  01549E  0A21               	xorlw	33	; case 32
 29059  0154A0  B4D8               	btfsc	status,2,c
 29060  0154A2  D7D1               	goto	i2l436
 29061  0154A4  0A01               	xorlw	1	; case 33
 29062  0154A6  B4D8               	btfsc	status,2,c
 29063  0154A8  D7DE               	goto	i2l6324
 29064  0154AA  0A03               	xorlw	3	; case 34
 29065  0154AC  A4D8               	btfss	status,2,c
 29066  0154AE  0012               	return	
 29067  0154B0  D7E9               	goto	i2l438
 29068  0154B2                     __end_of_USBCheckCDCRequest:
 29069                           	opt stack 0
 29070                           pclatu	equ	0xFFB
 29071                           pclath	equ	0xFFA
 29072                           tblptru	equ	0xFF8
 29073                           tblptrh	equ	0xFF7
 29074                           tblptrl	equ	0xFF6
 29075                           tablat	equ	0xFF5
 29076                           prodh	equ	0xFF4
 29077                           prodl	equ	0xFF3
 29078                           intcon	equ	0xFF2
 29079                           intcon2	equ	0xFF1
 29080                           postinc0	equ	0xFEE
 29081                           fsr0h	equ	0xFEA
 29082                           fsr0l	equ	0xFE9
 29083                           wreg	equ	0xFE8
 29084                           indf1	equ	0xFE7
 29085                           postinc1	equ	0xFE6
 29086                           postdec1	equ	0xFE5
 29087                           fsr1h	equ	0xFE2
 29088                           fsr1l	equ	0xFE1
 29089                           indf2	equ	0xFDF
 29090                           postinc2	equ	0xFDE
 29091                           postdec2	equ	0xFDD
 29092                           plusw2	equ	0xFDB
 29093                           fsr2h	equ	0xFDA
 29094                           fsr2l	equ	0xFD9
 29095                           status	equ	0xFD8
 29096                           
 29097 ;; *************** function _CDCInitEP *****************
 29098 ;; Defined at:
 29099 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 29100 ;; Parameters:    Size  Location     Type
 29101 ;;		None
 29102 ;; Auto vars:     Size  Location     Type
 29103 ;;		None
 29104 ;; Return value:  Size  Location     Type
 29105 ;;		None               void
 29106 ;; Registers used:
 29107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29108 ;; Tracked objects:
 29109 ;;		On entry : 0/0
 29110 ;;		On exit  : 0/0
 29111 ;;		Unchanged: 0/0
 29112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29117 ;;Total ram usage:        0 bytes
 29118 ;; Hardware stack levels used:    1
 29119 ;; Hardware stack levels required when called:    2
 29120 ;; This function calls:
 29121 ;;		_USBEnableEndpoint
 29122 ;;		i2_USBTransferOnePacket
 29123 ;; This function is called by:
 29124 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29125 ;; This function uses a non-reentrant model
 29126 ;;
 29127                           
 29128                           	psect	text123
 29129  01681A                     __ptext123:
 29130                           	opt stack 0
 29131  01681A                     _CDCInitEP:
 29132                           	opt stack 15
 29133                           
 29134                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 29135                           
 29136                           ;incstack = 0
 29137  01681A  0E00               	movlw	0
 29138  01681C  0101               	movlb	1	; () banked
 29139  01681E  6F85               	movwf	_line_coding& (0+255),b
 29140  016820  0E4B               	movlw	75
 29141  016822  6F86               	movwf	(_line_coding+1)& (0+255),b
 29142  016824  0E00               	movlw	0
 29143  016826  6F87               	movwf	(_line_coding+2)& (0+255),b
 29144  016828  0E00               	movlw	0
 29145  01682A  6F88               	movwf	(_line_coding+3)& (0+255),b
 29146                           
 29147                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 29148  01682C  0E00               	movlw	0
 29149  01682E  0101               	movlb	1	; () banked
 29150  016830  6F89               	movwf	(_line_coding+4)& (0+255),b
 29151                           
 29152                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 29153  016832  0E00               	movlw	0
 29154  016834  0101               	movlb	1	; () banked
 29155  016836  6F8A               	movwf	(_line_coding+5)& (0+255),b
 29156                           
 29157                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 29158  016838  0E08               	movlw	8
 29159  01683A  0101               	movlb	1	; () banked
 29160  01683C  6F8B               	movwf	(_line_coding+6)& (0+255),b
 29161                           
 29162                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 29163  01683E  0E00               	movlw	0
 29164  016840  0100               	movlb	0	; () banked
 29165  016842  6FF2               	movwf	_cdc_rx_len& (0+255),b
 29166                           
 29167                           ; BSR set to: 0
 29168                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 29169  016844  0E1A               	movlw	26
 29170  016846  6E35               	movwf	USBEnableEndpoint@options,c
 29171  016848  0E01               	movlw	1
 29172  01684A  EC16  F0B7         	call	_USBEnableEndpoint
 29173                           
 29174                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 29175  01684E  0E1E               	movlw	30
 29176  016850  6E35               	movwf	USBEnableEndpoint@options,c
 29177  016852  0E02               	movlw	2
 29178  016854  EC16  F0B7         	call	_USBEnableEndpoint
 29179                           
 29180                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 29181  016858  0E00               	movlw	0
 29182  01685A  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 29183  01685C  0E12               	movlw	low _cdc_data_rx
 29184  01685E  6E2E               	movwf	i2USBTransferOnePacket@data,c
 29185  016860  0E02               	movlw	high _cdc_data_rx
 29186  016862  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 29187  016864  0E40               	movlw	64
 29188  016866  6E30               	movwf	i2USBTransferOnePacket@len,c
 29189  016868  0E02               	movlw	2
 29190  01686A  EC59  F0AD         	call	i2_USBTransferOnePacket
 29191  01686E  C02D  F0F0         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 29192  016872  C02E  F0F1         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 29193                           
 29194                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 29195  016876  0E00               	movlw	0
 29196  016878  0101               	movlb	1	; () banked
 29197  01687A  6F17               	movwf	_CDCDataInHandle& (0+255),b
 29198  01687C  0E00               	movlw	0
 29199  01687E  0101               	movlb	1	; () banked
 29200  016880  6F18               	movwf	(_CDCDataInHandle+1)& (0+255),b
 29201                           
 29202                           ; BSR set to: 1
 29203                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 29204  016882  0E00               	movlw	0
 29205  016884  6E1F               	movwf	_cdc_trf_state,c
 29206                           
 29207                           ; BSR set to: 1
 29208  016886  0012               	return		;funcret
 29209  016888                     __end_of_CDCInitEP:
 29210                           	opt stack 0
 29211                           pclatu	equ	0xFFB
 29212                           pclath	equ	0xFFA
 29213                           tblptru	equ	0xFF8
 29214                           tblptrh	equ	0xFF7
 29215                           tblptrl	equ	0xFF6
 29216                           tablat	equ	0xFF5
 29217                           prodh	equ	0xFF4
 29218                           prodl	equ	0xFF3
 29219                           intcon	equ	0xFF2
 29220                           intcon2	equ	0xFF1
 29221                           postinc0	equ	0xFEE
 29222                           fsr0h	equ	0xFEA
 29223                           fsr0l	equ	0xFE9
 29224                           wreg	equ	0xFE8
 29225                           indf1	equ	0xFE7
 29226                           postinc1	equ	0xFE6
 29227                           postdec1	equ	0xFE5
 29228                           fsr1h	equ	0xFE2
 29229                           fsr1l	equ	0xFE1
 29230                           indf2	equ	0xFDF
 29231                           postinc2	equ	0xFDE
 29232                           postdec2	equ	0xFDD
 29233                           plusw2	equ	0xFDB
 29234                           fsr2h	equ	0xFDA
 29235                           fsr2l	equ	0xFD9
 29236                           status	equ	0xFD8
 29237                           
 29238 ;; *************** function i2_USBTransferOnePacket *****************
 29239 ;; Defined at:
 29240 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 29241 ;; Parameters:    Size  Location     Type
 29242 ;;  ep              1    wreg     unsigned char 
 29243 ;;  dir             1    0[COMRAM] unsigned char 
 29244 ;;  data            2    1[COMRAM] PTR unsigned char 
 29245 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 29246 ;;  len             1    3[COMRAM] unsigned char 
 29247 ;; Auto vars:     Size  Location     Type
 29248 ;;  ep              1    4[COMRAM] unsigned char 
 29249 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 29250 ;;		 -> NULL(0), BDT(48), 
 29251 ;; Return value:  Size  Location     Type
 29252 ;;                  2    0[COMRAM] PTR void 
 29253 ;; Registers used:
 29254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29255 ;; Tracked objects:
 29256 ;;		On entry : 0/0
 29257 ;;		On exit  : 0/0
 29258 ;;		Unchanged: 0/0
 29259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29261 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29263 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29264 ;;Total ram usage:        7 bytes
 29265 ;; Hardware stack levels used:    1
 29266 ;; This function calls:
 29267 ;;		Nothing
 29268 ;; This function is called by:
 29269 ;;		_CDCInitEP
 29270 ;; This function uses a non-reentrant model
 29271 ;;
 29272                           
 29273                           	psect	text124
 29274  015AB2                     __ptext124:
 29275                           	opt stack 0
 29276  015AB2                     i2_USBTransferOnePacket:
 29277                           	opt stack 16
 29278                           
 29279                           ; BSR set to: 1
 29280                           ;incstack = 0
 29281                           ;i2USBTransferOnePacket@ep stored from wreg
 29282  015AB2  6E31               	movwf	i2USBTransferOnePacket@ep,c
 29283                           
 29284                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 29285                           ;usb_device.c: 1000: if(dir != 0)
 29286  015AB4  502D               	movf	i2USBTransferOnePacket@dir,w,c
 29287  015AB6  B4D8               	btfsc	status,2,c
 29288  015AB8  D007               	goto	i2l6268
 29289                           
 29290                           ;usb_device.c: 1001: {
 29291                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 29292  015ABA  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29293  015ABC  0D02               	mullw	2
 29294  015ABE  0EEA               	movlw	low _pBDTEntryIn
 29295  015AC0  24F3               	addwf	prodl,w,c
 29296  015AC2  6ED9               	movwf	fsr2l,c
 29297  015AC4  0E00               	movlw	high _pBDTEntryIn
 29298  015AC6  D006               	goto	L14
 29299  015AC8                     i2l6268:
 29300                           
 29301                           ;usb_device.c: 1005: else
 29302                           ;usb_device.c: 1006: {
 29303                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 29304  015AC8  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29305  015ACA  0D02               	mullw	2
 29306  015ACC  0E00               	movlw	low _pBDTEntryOut
 29307  015ACE  24F3               	addwf	prodl,w,c
 29308  015AD0  6ED9               	movwf	fsr2l,c
 29309  015AD2  0E01               	movlw	high _pBDTEntryOut
 29310  015AD4                     L14:
 29311  015AD4  20F4               	addwfc	prodh,w,c
 29312  015AD6  6EDA               	movwf	fsr2h,c
 29313  015AD8  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 29314  015ADC  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 29315                           
 29316                           ;usb_device.c: 1009: }
 29317                           ;usb_device.c: 1013: if(handle == 0)
 29318  015AE0  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29319  015AE2  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 29320  015AE4  A4D8               	btfss	status,2,c
 29321  015AE6  D005               	goto	i2l6276
 29322                           
 29323                           ;usb_device.c: 1014: {
 29324                           ;usb_device.c: 1015: return 0;
 29325  015AE8  0E00               	movlw	0
 29326  015AEA  6E2D               	movwf	?i2_USBTransferOnePacket,c
 29327  015AEC  0E00               	movlw	0
 29328  015AEE  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 29329  015AF0  0012               	return	
 29330  015AF2                     i2l6276:
 29331                           
 29332                           ;usb_device.c: 1016: }
 29333                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 29334  015AF2  EE20 F002          	lfsr	2,2
 29335  015AF6  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29336  015AF8  26D9               	addwf	fsr2l,f,c
 29337  015AFA  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 29338  015AFC  22DA               	addwfc	fsr2h,f,c
 29339  015AFE  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 29340  015B02  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 29341                           
 29342                           ;usb_device.c: 1030: handle->CNT = len;
 29343  015B06  EE20 F001          	lfsr	2,1
 29344  015B0A  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29345  015B0C  26D9               	addwf	fsr2l,f,c
 29346  015B0E  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 29347  015B10  22DA               	addwfc	fsr2h,f,c
 29348  015B12  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 29349                           
 29350                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 29351  015B16  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29352  015B1A  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29353  015B1E  0E40               	movlw	64
 29354  015B20  16DF               	andwf	indf2,f,c
 29355                           
 29356                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 29357  015B22  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29358  015B26  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29359  015B2A  0E00               	movlw	0
 29360  015B2C  86DB               	bsf	plusw2,3,c
 29361                           
 29362                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 29363  015B2E  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29364  015B32  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29365  015B36  0E00               	movlw	0
 29366  015B38  8EDB               	bsf	plusw2,7,c
 29367                           
 29368                           ;usb_device.c: 1036: if(dir != 0)
 29369  015B3A  502D               	movf	i2USBTransferOnePacket@dir,w,c
 29370  015B3C  B4D8               	btfsc	status,2,c
 29371  015B3E  D007               	goto	i2l6288
 29372                           
 29373                           ;usb_device.c: 1037: {
 29374                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 29375  015B40  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29376  015B42  0D02               	mullw	2
 29377  015B44  0EEA               	movlw	low _pBDTEntryIn
 29378  015B46  24F3               	addwf	prodl,w,c
 29379  015B48  6ED9               	movwf	fsr2l,c
 29380  015B4A  0E00               	movlw	high _pBDTEntryIn
 29381  015B4C  D006               	goto	L15
 29382  015B4E                     i2l6288:
 29383                           
 29384                           ;usb_device.c: 1041: else
 29385                           ;usb_device.c: 1042: {
 29386                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 29387  015B4E  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29388  015B50  0D02               	mullw	2
 29389  015B52  0E00               	movlw	low _pBDTEntryOut
 29390  015B54  24F3               	addwf	prodl,w,c
 29391  015B56  6ED9               	movwf	fsr2l,c
 29392  015B58  0E01               	movlw	high _pBDTEntryOut
 29393  015B5A                     L15:
 29394  015B5A  20F4               	addwfc	prodh,w,c
 29395  015B5C  6EDA               	movwf	fsr2h,c
 29396  015B5E  0E04               	movlw	4
 29397  015B60  1ADF               	xorwf	indf2,f,c
 29398                           
 29399                           ;usb_device.c: 1045: }
 29400                           ;usb_device.c: 1046: return (void*)handle;
 29401  015B62  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 29402  015B66  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 29403  015B6A  0012               	return	
 29404  015B6C                     __end_ofi2_USBTransferOnePacket:
 29405                           	opt stack 0
 29406                           pclatu	equ	0xFFB
 29407                           pclath	equ	0xFFA
 29408                           tblptru	equ	0xFF8
 29409                           tblptrh	equ	0xFF7
 29410                           tblptrl	equ	0xFF6
 29411                           tablat	equ	0xFF5
 29412                           prodh	equ	0xFF4
 29413                           prodl	equ	0xFF3
 29414                           intcon	equ	0xFF2
 29415                           intcon2	equ	0xFF1
 29416                           postinc0	equ	0xFEE
 29417                           fsr0h	equ	0xFEA
 29418                           fsr0l	equ	0xFE9
 29419                           wreg	equ	0xFE8
 29420                           indf1	equ	0xFE7
 29421                           postinc1	equ	0xFE6
 29422                           postdec1	equ	0xFE5
 29423                           fsr1h	equ	0xFE2
 29424                           fsr1l	equ	0xFE1
 29425                           indf2	equ	0xFDF
 29426                           postinc2	equ	0xFDE
 29427                           postdec2	equ	0xFDD
 29428                           plusw2	equ	0xFDB
 29429                           fsr2h	equ	0xFDA
 29430                           fsr2l	equ	0xFD9
 29431                           status	equ	0xFD8
 29432                           
 29433 ;; *************** function _USBEnableEndpoint *****************
 29434 ;; Defined at:
 29435 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 29436 ;; Parameters:    Size  Location     Type
 29437 ;;  ep              1    wreg     unsigned char 
 29438 ;;  options         1    8[COMRAM] unsigned char 
 29439 ;; Auto vars:     Size  Location     Type
 29440 ;;  ep              1   11[COMRAM] unsigned char 
 29441 ;;  p               2    9[COMRAM] PTR unsigned char 
 29442 ;;		 -> UEP0(1), 
 29443 ;; Return value:  Size  Location     Type
 29444 ;;		None               void
 29445 ;; Registers used:
 29446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29447 ;; Tracked objects:
 29448 ;;		On entry : 0/0
 29449 ;;		On exit  : 0/0
 29450 ;;		Unchanged: 0/0
 29451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29452 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29453 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29456 ;;Total ram usage:        4 bytes
 29457 ;; Hardware stack levels used:    1
 29458 ;; Hardware stack levels required when called:    1
 29459 ;; This function calls:
 29460 ;;		_USBConfigureEndpoint
 29461 ;; This function is called by:
 29462 ;;		_CDCInitEP
 29463 ;; This function uses a non-reentrant model
 29464 ;;
 29465                           
 29466                           	psect	text125
 29467  016E2C                     __ptext125:
 29468                           	opt stack 0
 29469  016E2C                     _USBEnableEndpoint:
 29470                           	opt stack 15
 29471                           
 29472                           ;incstack = 0
 29473                           ;USBEnableEndpoint@ep stored from wreg
 29474  016E2C  6E38               	movwf	USBEnableEndpoint@ep,c
 29475                           
 29476                           ;usb_device.c: 880: unsigned char* p;
 29477                           ;usb_device.c: 884: if(options & 0x04)
 29478  016E2E  A435               	btfss	USBEnableEndpoint@options,2,c
 29479  016E30  D005               	goto	i2l6220
 29480                           
 29481                           ;usb_device.c: 885: {
 29482                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 29483  016E32  0E00               	movlw	0
 29484  016E34  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29485  016E36  5038               	movf	USBEnableEndpoint@ep,w,c
 29486  016E38  EC8C  F0B0         	call	_USBConfigureEndpoint
 29487  016E3C                     i2l6220:
 29488                           
 29489                           ;usb_device.c: 887: }
 29490                           ;usb_device.c: 888: if(options & 0x02)
 29491  016E3C  A235               	btfss	USBEnableEndpoint@options,1,c
 29492  016E3E  D005               	goto	i2l6224
 29493                           
 29494                           ;usb_device.c: 889: {
 29495                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 29496  016E40  0E01               	movlw	1
 29497  016E42  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29498  016E44  5038               	movf	USBEnableEndpoint@ep,w,c
 29499  016E46  EC8C  F0B0         	call	_USBConfigureEndpoint
 29500  016E4A                     i2l6224:
 29501                           
 29502                           ;usb_device.c: 891: }
 29503                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 29504  016E4A  5038               	movf	USBEnableEndpoint@ep,w,c
 29505  016E4C  0D01               	mullw	1
 29506  016E4E  0E26               	movlw	38
 29507  016E50  24F3               	addwf	prodl,w,c
 29508  016E52  6E36               	movwf	USBEnableEndpoint@p,c
 29509  016E54  0E0F               	movlw	15
 29510  016E56  20F4               	addwfc	prodh,w,c
 29511  016E58  6E37               	movwf	USBEnableEndpoint@p+1,c
 29512                           
 29513                           ;usb_device.c: 901: *p = options;
 29514  016E5A  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 29515  016E5E  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 29516  016E62  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 29517  016E66  0012               	return		;funcret
 29518  016E68                     __end_of_USBEnableEndpoint:
 29519                           	opt stack 0
 29520                           pclatu	equ	0xFFB
 29521                           pclath	equ	0xFFA
 29522                           tblptru	equ	0xFF8
 29523                           tblptrh	equ	0xFF7
 29524                           tblptrl	equ	0xFF6
 29525                           tablat	equ	0xFF5
 29526                           prodh	equ	0xFF4
 29527                           prodl	equ	0xFF3
 29528                           intcon	equ	0xFF2
 29529                           intcon2	equ	0xFF1
 29530                           postinc0	equ	0xFEE
 29531                           fsr0h	equ	0xFEA
 29532                           fsr0l	equ	0xFE9
 29533                           wreg	equ	0xFE8
 29534                           indf1	equ	0xFE7
 29535                           postinc1	equ	0xFE6
 29536                           postdec1	equ	0xFE5
 29537                           fsr1h	equ	0xFE2
 29538                           fsr1l	equ	0xFE1
 29539                           indf2	equ	0xFDF
 29540                           postinc2	equ	0xFDE
 29541                           postdec2	equ	0xFDD
 29542                           plusw2	equ	0xFDB
 29543                           fsr2h	equ	0xFDA
 29544                           fsr2l	equ	0xFD9
 29545                           status	equ	0xFD8
 29546                           
 29547 ;; *************** function _USBConfigureEndpoint *****************
 29548 ;; Defined at:
 29549 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 29550 ;; Parameters:    Size  Location     Type
 29551 ;;  EPNum           1    wreg     unsigned char 
 29552 ;;  direction       1    0[COMRAM] unsigned char 
 29553 ;; Auto vars:     Size  Location     Type
 29554 ;;  EPNum           1    5[COMRAM] unsigned char 
 29555 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 29556 ;;		 -> BDT(48), 
 29557 ;; Return value:  Size  Location     Type
 29558 ;;		None               void
 29559 ;; Registers used:
 29560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29561 ;; Tracked objects:
 29562 ;;		On entry : 0/0
 29563 ;;		On exit  : 0/0
 29564 ;;		Unchanged: 0/0
 29565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29566 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29567 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29568 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29569 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29570 ;;Total ram usage:        8 bytes
 29571 ;; Hardware stack levels used:    1
 29572 ;; This function calls:
 29573 ;;		Nothing
 29574 ;; This function is called by:
 29575 ;;		_USBEnableEndpoint
 29576 ;; This function uses a non-reentrant model
 29577 ;;
 29578                           
 29579                           	psect	text126
 29580  016118                     __ptext126:
 29581                           	opt stack 0
 29582  016118                     _USBConfigureEndpoint:
 29583                           	opt stack 15
 29584                           
 29585                           ;incstack = 0
 29586                           ;USBConfigureEndpoint@EPNum stored from wreg
 29587  016118  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 29588                           
 29589                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 29590                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 29591  01611A  0E00               	movlw	0
 29592  01611C  6E33               	movwf	USBConfigureEndpoint@handle,c
 29593  01611E  0E0D               	movlw	13
 29594  016120  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 29595                           
 29596                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 29597  016122  502D               	movf	USBConfigureEndpoint@direction,w,c
 29598  016124  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 29599  016126  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 29600  016128  90D8               	bcf	status,0,c
 29601  01612A  362E               	rlcf	??_USBConfigureEndpoint,f,c
 29602  01612C  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 29603  01612E  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29604  016130  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 29605  016132  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 29606  016134  90D8               	bcf	status,0,c
 29607  016136  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29608  016138  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29609  01613A  90D8               	bcf	status,0,c
 29610  01613C  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29611  01613E  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29612  016140  502E               	movf	??_USBConfigureEndpoint,w,c
 29613  016142  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 29614  016144  502F               	movf	??_USBConfigureEndpoint+1,w,c
 29615  016146  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 29616  016148  90D8               	bcf	status,0,c
 29617  01614A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29618  01614C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29619  01614E  90D8               	bcf	status,0,c
 29620  016150  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29621  016152  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29622  016154  5030               	movf	??_USBConfigureEndpoint+2,w,c
 29623  016156  2633               	addwf	USBConfigureEndpoint@handle,f,c
 29624  016158  5031               	movf	??_USBConfigureEndpoint+3,w,c
 29625  01615A  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 29626                           
 29627                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 29628  01615C  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29629  016160  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29630  016164  9EDF               	bcf	indf2,7,c
 29631                           
 29632                           ;usb_device.c: 1557: if(direction == 0)
 29633  016166  502D               	movf	USBConfigureEndpoint@direction,w,c
 29634  016168  A4D8               	btfss	status,2,c
 29635  01616A  D007               	goto	i2l6210
 29636                           
 29637                           ;usb_device.c: 1558: {
 29638                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 29639  01616C  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29640  01616E  0D02               	mullw	2
 29641  016170  0E00               	movlw	low _pBDTEntryOut
 29642  016172  24F3               	addwf	prodl,w,c
 29643  016174  6ED9               	movwf	fsr2l,c
 29644  016176  0E01               	movlw	high _pBDTEntryOut
 29645  016178  D006               	goto	L16
 29646  01617A                     i2l6210:
 29647                           
 29648                           ;usb_device.c: 1561: else
 29649                           ;usb_device.c: 1562: {
 29650                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 29651  01617A  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29652  01617C  0D02               	mullw	2
 29653  01617E  0EEA               	movlw	low _pBDTEntryIn
 29654  016180  24F3               	addwf	prodl,w,c
 29655  016182  6ED9               	movwf	fsr2l,c
 29656  016184  0E00               	movlw	high _pBDTEntryIn
 29657  016186                     L16:
 29658  016186  20F4               	addwfc	prodh,w,c
 29659  016188  6EDA               	movwf	fsr2h,c
 29660  01618A  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 29661  01618E  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 29662                           
 29663                           ;usb_device.c: 1564: }
 29664                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 29665  016192  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29666  016196  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29667  01619A  9CDF               	bcf	indf2,6,c
 29668                           
 29669                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 29670  01619C  EE20 F004          	lfsr	2,4
 29671  0161A0  5033               	movf	USBConfigureEndpoint@handle,w,c
 29672  0161A2  26D9               	addwf	fsr2l,f,c
 29673  0161A4  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 29674  0161A6  22DA               	addwfc	fsr2h,f,c
 29675  0161A8  8CDF               	bsf	indf2,6,c
 29676  0161AA  0012               	return		;funcret
 29677  0161AC                     __end_of_USBConfigureEndpoint:
 29678                           	opt stack 0
 29679                           pclatu	equ	0xFFB
 29680                           pclath	equ	0xFFA
 29681                           tblptru	equ	0xFF8
 29682                           tblptrh	equ	0xFF7
 29683                           tblptrl	equ	0xFF6
 29684                           tablat	equ	0xFF5
 29685                           prodh	equ	0xFF4
 29686                           prodl	equ	0xFF3
 29687                           intcon	equ	0xFF2
 29688                           intcon2	equ	0xFF1
 29689                           postinc0	equ	0xFEE
 29690                           fsr0h	equ	0xFEA
 29691                           fsr0l	equ	0xFE9
 29692                           wreg	equ	0xFE8
 29693                           indf1	equ	0xFE7
 29694                           postinc1	equ	0xFE6
 29695                           postdec1	equ	0xFE5
 29696                           fsr1h	equ	0xFE2
 29697                           fsr1l	equ	0xFE1
 29698                           indf2	equ	0xFDF
 29699                           postinc2	equ	0xFDE
 29700                           postdec2	equ	0xFDD
 29701                           plusw2	equ	0xFDB
 29702                           fsr2h	equ	0xFDA
 29703                           fsr2l	equ	0xFD9
 29704                           status	equ	0xFD8
 29705                           
 29706 ;; *************** function _USBCtrlTrfOutHandler *****************
 29707 ;; Defined at:
 29708 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 29709 ;; Parameters:    Size  Location     Type
 29710 ;;		None
 29711 ;; Auto vars:     Size  Location     Type
 29712 ;;		None
 29713 ;; Return value:  Size  Location     Type
 29714 ;;		None               void
 29715 ;; Registers used:
 29716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29717 ;; Tracked objects:
 29718 ;;		On entry : 0/0
 29719 ;;		On exit  : 0/0
 29720 ;;		Unchanged: 0/0
 29721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29726 ;;Total ram usage:        0 bytes
 29727 ;; Hardware stack levels used:    1
 29728 ;; Hardware stack levels required when called:    2
 29729 ;; This function calls:
 29730 ;;		_USBCtrlTrfRxService
 29731 ;; This function is called by:
 29732 ;;		_USBCtrlEPService
 29733 ;; This function uses a non-reentrant model
 29734 ;;
 29735                           
 29736                           	psect	text127
 29737  016A7A                     __ptext127:
 29738                           	opt stack 0
 29739  016A7A                     _USBCtrlTrfOutHandler:
 29740                           	opt stack 15
 29741                           
 29742                           ;usb_device.c: 2543: if(controlTransferState == 2)
 29743                           
 29744                           ;incstack = 0
 29745  016A7A  0E02               	movlw	2
 29746  016A7C  1820               	xorwf	_controlTransferState,w,c	;volatile
 29747  016A7E  A4D8               	btfss	status,2,c
 29748  016A80  D003               	goto	i2l7410
 29749                           
 29750                           ;usb_device.c: 2544: {
 29751                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 29752  016A82  EC8D  F0A1         	call	_USBCtrlTrfRxService	;wreg free
 29753                           
 29754                           ;usb_device.c: 2546: }
 29755  016A86  0012               	return	
 29756  016A88                     i2l7410:
 29757                           
 29758                           ;usb_device.c: 2547: else
 29759                           ;usb_device.c: 2548: {
 29760                           ;usb_device.c: 2551: controlTransferState = 0;
 29761  016A88  0E00               	movlw	0
 29762  016A8A  6E20               	movwf	_controlTransferState,c	;volatile
 29763                           
 29764                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 29765  016A8C  5015               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29766  016A8E  A4D8               	btfss	status,2,c
 29767  016A90  D01F               	goto	i2l7418
 29768                           
 29769                           ;usb_device.c: 2559: {
 29770                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 29771  016A92  EE20 F001          	lfsr	2,1
 29772  016A96  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29773  016A98  26D9               	addwf	fsr2l,f,c
 29774  016A9A  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29775  016A9C  22DA               	addwfc	fsr2h,f,c
 29776  016A9E  0E08               	movlw	8
 29777  016AA0  6EDF               	movwf	indf2,c
 29778                           
 29779                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29780  016AA2  EE20 F002          	lfsr	2,2
 29781  016AA6  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29782  016AA8  26D9               	addwf	fsr2l,f,c
 29783  016AAA  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29784  016AAC  22DA               	addwfc	fsr2h,f,c
 29785  016AAE  0E30               	movlw	48
 29786  016AB0  6EDE               	movwf	postinc2,c
 29787  016AB2  0E0D               	movlw	13
 29788  016AB4  6EDD               	movwf	postdec2,c
 29789                           
 29790                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29791  016AB6  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29792  016ABA  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29793  016ABE  0E0C               	movlw	12
 29794  016AC0  6EDF               	movwf	indf2,c
 29795                           
 29796                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29797  016AC2  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29798  016AC6  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29799  016ACA  0E00               	movlw	0
 29800  016ACC  8EDB               	bsf	plusw2,7,c
 29801                           
 29802                           ;usb_device.c: 2564: }
 29803  016ACE  0012               	return	
 29804  016AD0                     i2l7418:
 29805                           
 29806                           ;usb_device.c: 2565: else
 29807                           ;usb_device.c: 2566: {
 29808                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 29809  016AD0  0E00               	movlw	0
 29810  016AD2  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29811  016AD4  0012               	return	
 29812  016AD6                     __end_of_USBCtrlTrfOutHandler:
 29813                           	opt stack 0
 29814                           pclatu	equ	0xFFB
 29815                           pclath	equ	0xFFA
 29816                           tblptru	equ	0xFF8
 29817                           tblptrh	equ	0xFF7
 29818                           tblptrl	equ	0xFF6
 29819                           tablat	equ	0xFF5
 29820                           prodh	equ	0xFF4
 29821                           prodl	equ	0xFF3
 29822                           intcon	equ	0xFF2
 29823                           intcon2	equ	0xFF1
 29824                           postinc0	equ	0xFEE
 29825                           fsr0h	equ	0xFEA
 29826                           fsr0l	equ	0xFE9
 29827                           wreg	equ	0xFE8
 29828                           indf1	equ	0xFE7
 29829                           postinc1	equ	0xFE6
 29830                           postdec1	equ	0xFE5
 29831                           fsr1h	equ	0xFE2
 29832                           fsr1l	equ	0xFE1
 29833                           indf2	equ	0xFDF
 29834                           postinc2	equ	0xFDE
 29835                           postdec2	equ	0xFDD
 29836                           plusw2	equ	0xFDB
 29837                           fsr2h	equ	0xFDA
 29838                           fsr2l	equ	0xFD9
 29839                           status	equ	0xFD8
 29840                           
 29841 ;; *************** function _USBCtrlTrfRxService *****************
 29842 ;; Defined at:
 29843 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 29844 ;; Parameters:    Size  Location     Type
 29845 ;;		None
 29846 ;; Auto vars:     Size  Location     Type
 29847 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29848 ;;  i               1    0[COMRAM] unsigned char 
 29849 ;; Return value:  Size  Location     Type
 29850 ;;		None               void
 29851 ;; Registers used:
 29852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29853 ;; Tracked objects:
 29854 ;;		On entry : 0/0
 29855 ;;		On exit  : 0/0
 29856 ;;		Unchanged: 0/0
 29857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29862 ;;Total ram usage:        2 bytes
 29863 ;; Hardware stack levels used:    1
 29864 ;; Hardware stack levels required when called:    1
 29865 ;; This function calls:
 29866 ;;		_USBCtrlEPAllowStatusStage
 29867 ;; This function is called by:
 29868 ;;		_USBCtrlTrfOutHandler
 29869 ;; This function uses a non-reentrant model
 29870 ;;
 29871                           
 29872                           	psect	text128
 29873  01431A                     __ptext128:
 29874                           	opt stack 0
 29875  01431A                     _USBCtrlTrfRxService:
 29876                           	opt stack 15
 29877                           
 29878                           ;usb_device.c: 1854: uint8_t byteToRead;
 29879                           ;usb_device.c: 1855: uint8_t i;
 29880                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29881                           
 29882                           ;incstack = 0
 29883  01431A  EE20 F001          	lfsr	2,1
 29884  01431E  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 29885  014320  26D9               	addwf	fsr2l,f,c
 29886  014322  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29887  014324  22DA               	addwfc	fsr2h,f,c
 29888  014326  50DF               	movf	indf2,w,c
 29889  014328  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29890                           
 29891                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 29892  01432A  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29893  01432C  5C05               	subwf	_outPipes+4,w,c	;volatile
 29894  01432E  0E00               	movlw	0
 29895  014330  5806               	subwfb	_outPipes+5,w,c	;volatile
 29896  014332  A0D8               	btfss	status,0,c
 29897                           
 29898                           ;usb_device.c: 1866: {
 29899                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 29900  014334  C005  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29901                           
 29902                           ;usb_device.c: 1868: }
 29903                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 29904  014338  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29905  01433A  5E05               	subwf	_outPipes+4,f,c	;volatile
 29906  01433C  0E00               	movlw	0
 29907  01433E  5A06               	subwfb	_outPipes+5,f,c	;volatile
 29908                           
 29909                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 29910  014340  0E00               	movlw	0
 29911  014342  6E2D               	movwf	USBCtrlTrfRxService@i,c
 29912  014344  D011               	goto	i2l7226
 29913  014346                     i2l7220:
 29914                           
 29915                           ;usb_device.c: 1875: {
 29916                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29917  014346  502D               	movf	USBCtrlTrfRxService@i,w,c
 29918  014348  0D01               	mullw	1
 29919  01434A  0E38               	movlw	56
 29920  01434C  24F3               	addwf	prodl,w,c
 29921  01434E  6ED9               	movwf	fsr2l,c
 29922  014350  0E0D               	movlw	13
 29923  014352  20F4               	addwfc	prodh,w,c
 29924  014354  6EDA               	movwf	fsr2h,c
 29925  014356  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 29926  01435A  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29927  01435E  CFDF FFE7          	movff	indf2,indf1
 29928  014362  4A01               	infsnz	_outPipes,f,c	;volatile
 29929  014364  2A02               	incf	_outPipes+1,f,c	;volatile
 29930  014366  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 29931  014368                     i2l7226:
 29932  014368  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29933  01436A  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 29934  01436C  A0D8               	btfss	status,0,c
 29935  01436E  D7EB               	goto	i2l7220
 29936                           
 29937                           ;usb_device.c: 1877: }
 29938                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 29939  014370  5005               	movf	_outPipes+4,w,c	;volatile
 29940  014372  1006               	iorwf	_outPipes+5,w,c	;volatile
 29941  014374  B4D8               	btfsc	status,2,c
 29942  014376  D032               	goto	i2l7242
 29943                           
 29944                           ;usb_device.c: 1882: {
 29945                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 29946  014378  EE20 F001          	lfsr	2,1
 29947  01437C  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29948  01437E  26D9               	addwf	fsr2l,f,c
 29949  014380  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29950  014382  22DA               	addwfc	fsr2h,f,c
 29951  014384  0E08               	movlw	8
 29952  014386  6EDF               	movwf	indf2,c
 29953                           
 29954                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29955  014388  EE20 F002          	lfsr	2,2
 29956  01438C  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29957  01438E  26D9               	addwf	fsr2l,f,c
 29958  014390  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29959  014392  22DA               	addwfc	fsr2h,f,c
 29960  014394  0E38               	movlw	56
 29961  014396  6EDE               	movwf	postinc2,c
 29962  014398  0E0D               	movlw	13
 29963  01439A  6EDD               	movwf	postdec2,c
 29964                           
 29965                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29966  01439C  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29967  0143A0  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29968  0143A4  BCDF               	btfsc	indf2,6,c
 29969  0143A6  D00D               	goto	i2l7238
 29970                           
 29971                           ;usb_device.c: 1886: {
 29972                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29973  0143A8  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29974  0143AC  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29975  0143B0  0E48               	movlw	72
 29976  0143B2  6EDF               	movwf	indf2,c
 29977                           
 29978                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29979  0143B4  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29980  0143B8  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29981  0143BC  0E00               	movlw	0
 29982  0143BE  8EDB               	bsf	plusw2,7,c
 29983                           
 29984                           ;usb_device.c: 1889: }
 29985  0143C0  0012               	return	
 29986  0143C2                     i2l7238:
 29987                           
 29988                           ;usb_device.c: 1890: else
 29989                           ;usb_device.c: 1891: {
 29990                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29991  0143C2  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29992  0143C6  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29993  0143CA  0E08               	movlw	8
 29994  0143CC  6EDF               	movwf	indf2,c
 29995                           
 29996                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29997  0143CE  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29998  0143D2  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29999  0143D6  0E00               	movlw	0
 30000  0143D8  8EDB               	bsf	plusw2,7,c
 30001                           
 30002                           ;usb_device.c: 1894: }
 30003                           ;usb_device.c: 1895: }
 30004  0143DA  0012               	return	
 30005  0143DC                     i2l7242:
 30006                           
 30007                           ;usb_device.c: 1896: else
 30008                           ;usb_device.c: 1897: {
 30009                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 30010  0143DC  EE20 F001          	lfsr	2,1
 30011  0143E0  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30012  0143E2  26D9               	addwf	fsr2l,f,c
 30013  0143E4  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30014  0143E6  22DA               	addwfc	fsr2h,f,c
 30015  0143E8  0E08               	movlw	8
 30016  0143EA  6EDF               	movwf	indf2,c
 30017                           
 30018                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30019  0143EC  EE20 F002          	lfsr	2,2
 30020  0143F0  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30021  0143F2  26D9               	addwf	fsr2l,f,c
 30022  0143F4  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30023  0143F6  22DA               	addwfc	fsr2h,f,c
 30024  0143F8  0E30               	movlw	48
 30025  0143FA  6EDE               	movwf	postinc2,c
 30026  0143FC  0E0D               	movlw	13
 30027  0143FE  6EDD               	movwf	postdec2,c
 30028                           
 30029                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 30030  014400  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30031  014404  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30032  014408  0E04               	movlw	4
 30033  01440A  6EDF               	movwf	indf2,c
 30034                           
 30035                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30036  01440C  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30037  014410  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30038  014414  0E00               	movlw	0
 30039  014416  8EDB               	bsf	plusw2,7,c
 30040                           
 30041                           ;usb_device.c: 1926: }
 30042                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 30043                           
 30044                           ;usb_device.c: 1915: {
 30045                           ;usb_device.c: 1921: outPipes[0].pFunc();
 30046  014418  9E04               	bcf	_outPipes+3,7,c	;volatile
 30047                           
 30048                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 30049  01441A  5019               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 30050  01441C  A4D8               	btfss	status,2,c
 30051  01441E  0012               	return	
 30052                           
 30053                           ;usb_device.c: 1942: {
 30054                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 30055  014420  ECBD  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 30056  014424  0012               	return	
 30057  014426                     __end_of_USBCtrlTrfRxService:
 30058                           	opt stack 0
 30059                           pclatu	equ	0xFFB
 30060                           pclath	equ	0xFFA
 30061                           tblptru	equ	0xFF8
 30062                           tblptrh	equ	0xFF7
 30063                           tblptrl	equ	0xFF6
 30064                           tablat	equ	0xFF5
 30065                           prodh	equ	0xFF4
 30066                           prodl	equ	0xFF3
 30067                           intcon	equ	0xFF2
 30068                           intcon2	equ	0xFF1
 30069                           postinc0	equ	0xFEE
 30070                           fsr0h	equ	0xFEA
 30071                           fsr0l	equ	0xFE9
 30072                           wreg	equ	0xFE8
 30073                           indf1	equ	0xFE7
 30074                           postinc1	equ	0xFE6
 30075                           postdec1	equ	0xFE5
 30076                           fsr1h	equ	0xFE2
 30077                           fsr1l	equ	0xFE1
 30078                           indf2	equ	0xFDF
 30079                           postinc2	equ	0xFDE
 30080                           postdec2	equ	0xFDD
 30081                           plusw2	equ	0xFDB
 30082                           fsr2h	equ	0xFDA
 30083                           fsr2l	equ	0xFD9
 30084                           status	equ	0xFD8
 30085                           
 30086 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 30087 ;; Defined at:
 30088 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 30089 ;; Parameters:    Size  Location     Type
 30090 ;;		None
 30091 ;; Auto vars:     Size  Location     Type
 30092 ;;		None
 30093 ;; Return value:  Size  Location     Type
 30094 ;;		None               void
 30095 ;; Registers used:
 30096 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30097 ;; Tracked objects:
 30098 ;;		On entry : 0/0
 30099 ;;		On exit  : 0/0
 30100 ;;		Unchanged: 0/0
 30101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30106 ;;Total ram usage:        0 bytes
 30107 ;; Hardware stack levels used:    1
 30108 ;; This function calls:
 30109 ;;		Nothing
 30110 ;; This function is called by:
 30111 ;;		_USBDeviceTasks
 30112 ;;		_USBCtrlEPServiceComplete
 30113 ;;		_USBCtrlTrfRxService
 30114 ;; This function uses a non-reentrant model
 30115 ;;
 30116                           
 30117                           	psect	text129
 30118  01557A                     __ptext129:
 30119                           	opt stack 0
 30120  01557A                     _USBCtrlEPAllowStatusStage:
 30121                           	opt stack 15
 30122                           
 30123                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 30124                           
 30125                           ;incstack = 0
 30126  01557A  501B               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 30127  01557C  A4D8               	btfss	status,2,c
 30128  01557E  0012               	return	
 30129                           
 30130                           ;usb_device.c: 1424: {
 30131                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 30132  015580  0E01               	movlw	1
 30133  015582  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 30134                           
 30135                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 30136  015584  501C               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 30137  015586  A4D8               	btfss	status,2,c
 30138  015588  0012               	return	
 30139                           
 30140                           ;usb_device.c: 1427: {
 30141                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 30142  01558A  0E01               	movlw	1
 30143  01558C  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 30144                           
 30145                           ;usb_device.c: 1432: if(controlTransferState == 2)
 30146  01558E  0E02               	movlw	2
 30147  015590  1820               	xorwf	_controlTransferState,w,c	;volatile
 30148  015592  A4D8               	btfss	status,2,c
 30149  015594  D016               	goto	i2l6626
 30150                           
 30151                           ;usb_device.c: 1433: {
 30152                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 30153  015596  0100               	movlb	0	; () banked
 30154  015598  EE20 F001          	lfsr	2,1
 30155  01559C  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 30156  01559E  26D9               	addwf	fsr2l,f,c
 30157  0155A0  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30158  0155A2  22DA               	addwfc	fsr2h,f,c
 30159  0155A4  0E00               	movlw	0
 30160  0155A6  6EDF               	movwf	indf2,c
 30161                           
 30162                           ; BSR set to: 0
 30163                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30164  0155A8  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30165  0155AC  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30166  0155B0  0E48               	movlw	72
 30167  0155B2  6EDF               	movwf	indf2,c
 30168                           
 30169                           ; BSR set to: 0
 30170                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30171  0155B4  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30172  0155B8  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30173  0155BC  0E00               	movlw	0
 30174  0155BE  8EDB               	bsf	plusw2,7,c
 30175                           
 30176                           ;usb_device.c: 1437: }
 30177  0155C0  0012               	return	
 30178  0155C2                     i2l6626:
 30179                           
 30180                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 30181  0155C2  0420               	decf	_controlTransferState,w,c	;volatile
 30182  0155C4  A4D8               	btfss	status,2,c
 30183  0155C6  0012               	return	
 30184                           
 30185                           ;usb_device.c: 1439: {
 30186                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 30187  0155C8  0E00               	movlw	0
 30188  0155CA  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30189                           
 30190                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 30191  0155CC  EE20 F001          	lfsr	2,1
 30192  0155D0  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 30193  0155D2  26D9               	addwf	fsr2l,f,c
 30194  0155D4  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30195  0155D6  22DA               	addwfc	fsr2h,f,c
 30196  0155D8  0E08               	movlw	8
 30197  0155DA  6EDF               	movwf	indf2,c
 30198                           
 30199                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 30200  0155DC  EE20 F002          	lfsr	2,2
 30201  0155E0  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 30202  0155E2  26D9               	addwf	fsr2l,f,c
 30203  0155E4  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30204  0155E6  22DA               	addwfc	fsr2h,f,c
 30205  0155E8  0E30               	movlw	48
 30206  0155EA  6EDE               	movwf	postinc2,c
 30207  0155EC  0E0D               	movlw	13
 30208  0155EE  6EDD               	movwf	postdec2,c
 30209                           
 30210                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 30211  0155F0  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30212  0155F4  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30213  0155F8  0E04               	movlw	4
 30214  0155FA  6EDF               	movwf	indf2,c
 30215                           
 30216                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 30217  0155FC  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30218  015600  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30219  015604  0E00               	movlw	0
 30220  015606  8EDB               	bsf	plusw2,7,c
 30221                           
 30222                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 30223  015608  0E01               	movlw	1
 30224  01560A  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30225                           
 30226                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 30227  01560C  EE20 F001          	lfsr	2,1
 30228  015610  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30229  015612  26D9               	addwf	fsr2l,f,c
 30230  015614  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30231  015616  22DA               	addwfc	fsr2h,f,c
 30232  015618  0E08               	movlw	8
 30233  01561A  6EDF               	movwf	indf2,c
 30234                           
 30235                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30236  01561C  EE20 F002          	lfsr	2,2
 30237  015620  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30238  015622  26D9               	addwf	fsr2l,f,c
 30239  015624  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30240  015626  22DA               	addwfc	fsr2h,f,c
 30241  015628  0E30               	movlw	48
 30242  01562A  6EDE               	movwf	postinc2,c
 30243  01562C  0E0D               	movlw	13
 30244  01562E  6EDD               	movwf	postdec2,c
 30245                           
 30246                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 30247  015630  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30248  015634  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30249  015638  0E80               	movlw	128
 30250  01563A  6EDF               	movwf	indf2,c
 30251  01563C  0012               	return	
 30252  01563E                     __end_of_USBCtrlEPAllowStatusStage:
 30253                           	opt stack 0
 30254                           pclatu	equ	0xFFB
 30255                           pclath	equ	0xFFA
 30256                           tblptru	equ	0xFF8
 30257                           tblptrh	equ	0xFF7
 30258                           tblptrl	equ	0xFF6
 30259                           tablat	equ	0xFF5
 30260                           prodh	equ	0xFF4
 30261                           prodl	equ	0xFF3
 30262                           intcon	equ	0xFF2
 30263                           intcon2	equ	0xFF1
 30264                           postinc0	equ	0xFEE
 30265                           fsr0h	equ	0xFEA
 30266                           fsr0l	equ	0xFE9
 30267                           wreg	equ	0xFE8
 30268                           indf1	equ	0xFE7
 30269                           postinc1	equ	0xFE6
 30270                           postdec1	equ	0xFE5
 30271                           fsr1h	equ	0xFE2
 30272                           fsr1l	equ	0xFE1
 30273                           indf2	equ	0xFDF
 30274                           postinc2	equ	0xFDE
 30275                           postdec2	equ	0xFDD
 30276                           plusw2	equ	0xFDB
 30277                           fsr2h	equ	0xFDA
 30278                           fsr2l	equ	0xFD9
 30279                           status	equ	0xFD8
 30280                           
 30281 ;; *************** function _USBCtrlTrfInHandler *****************
 30282 ;; Defined at:
 30283 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 30284 ;; Parameters:    Size  Location     Type
 30285 ;;		None
 30286 ;; Auto vars:     Size  Location     Type
 30287 ;;  lastDTS         1    1[COMRAM] unsigned char 
 30288 ;; Return value:  Size  Location     Type
 30289 ;;		None               void
 30290 ;; Registers used:
 30291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30292 ;; Tracked objects:
 30293 ;;		On entry : 0/0
 30294 ;;		On exit  : 0/0
 30295 ;;		Unchanged: 0/0
 30296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30301 ;;Total ram usage:        1 bytes
 30302 ;; Hardware stack levels used:    1
 30303 ;; Hardware stack levels required when called:    1
 30304 ;; This function calls:
 30305 ;;		_USBCtrlTrfTxService
 30306 ;; This function is called by:
 30307 ;;		_USBCtrlEPService
 30308 ;; This function uses a non-reentrant model
 30309 ;;
 30310                           
 30311                           	psect	text130
 30312  01587E                     __ptext130:
 30313                           	opt stack 0
 30314  01587E                     _USBCtrlTrfInHandler:
 30315                           	opt stack 16
 30316                           
 30317                           ;usb_device.c: 2597: uint8_t lastDTS;
 30318                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 30319                           
 30320                           ;incstack = 0
 30321  01587E  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30322  015882  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30323  015886  0E00               	movlw	0
 30324  015888  BCDF               	btfsc	indf2,6,c
 30325  01588A  0E01               	movlw	1
 30326  01588C  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 30327                           
 30328                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 30329  01588E  0E04               	movlw	4
 30330  015890  0100               	movlb	0	; () banked
 30331  015892  1BEA               	xorwf	_pBDTEntryIn& (0+255),f,b
 30332                           
 30333                           ; BSR set to: 0
 30334                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 30335  015894  0E08               	movlw	8
 30336  015896  181A               	xorwf	_USBDeviceState,w,c	;volatile
 30337  015898  A4D8               	btfss	status,2,c
 30338  01589A  D00D               	goto	i2l7434
 30339                           
 30340                           ; BSR set to: 0
 30341                           ;usb_device.c: 2608: {
 30342                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 30343  01589C  010D               	movlb	13	; () banked
 30344  01589E  5132               	movf	50,w,b	;volatile
 30345  0158A0  0B7F               	andlw	127
 30346  0158A2  010F               	movlb	15	; () banked
 30347  0158A4  6F38               	movwf	56,b	;volatile
 30348                           
 30349                           ; BSR set to: 15
 30350                           ;usb_device.c: 2610: if(UADDR != 0u)
 30351  0158A6  010F               	movlb	15	; () banked
 30352  0158A8  5138               	movf	56,w,b	;volatile
 30353  0158AA  B4D8               	btfsc	status,2,c
 30354  0158AC  D002               	goto	i2l7432
 30355                           
 30356                           ; BSR set to: 15
 30357                           ;usb_device.c: 2611: {
 30358                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 30359  0158AE  0E10               	movlw	16
 30360  0158B0  D001               	goto	L17
 30361  0158B2                     i2l7432:
 30362                           
 30363                           ; BSR set to: 15
 30364                           ;usb_device.c: 2614: else
 30365                           ;usb_device.c: 2615: {
 30366                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 30367  0158B2  0E04               	movlw	4
 30368  0158B4                     L17:
 30369  0158B4  6E1A               	movwf	_USBDeviceState,c	;volatile
 30370  0158B6                     i2l7434:
 30371                           
 30372                           ;usb_device.c: 2617: }
 30373                           ;usb_device.c: 2618: }
 30374                           ;usb_device.c: 2621: if(controlTransferState == 1)
 30375  0158B6  0420               	decf	_controlTransferState,w,c	;volatile
 30376  0158B8  A4D8               	btfss	status,2,c
 30377  0158BA  D03B               	goto	i2l331
 30378                           
 30379                           ;usb_device.c: 2622: {
 30380                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 30381  0158BC  0100               	movlb	0	; () banked
 30382  0158BE  EE20 F002          	lfsr	2,2
 30383  0158C2  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 30384  0158C4  26D9               	addwf	fsr2l,f,c
 30385  0158C6  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30386  0158C8  22DA               	addwfc	fsr2h,f,c
 30387  0158CA  0E38               	movlw	56
 30388  0158CC  6EDE               	movwf	postinc2,c
 30389  0158CE  0E0D               	movlw	13
 30390  0158D0  6EDD               	movwf	postdec2,c
 30391                           
 30392                           ; BSR set to: 0
 30393                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 30394  0158D2  ECCD  F0A5         	call	_USBCtrlTrfTxService	;wreg free
 30395                           
 30396                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 30397  0158D6  0E02               	movlw	2
 30398  0158D8  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 30399  0158DA  A4D8               	btfss	status,2,c
 30400  0158DC  D00D               	goto	i2l7446
 30401                           
 30402                           ;usb_device.c: 2631: {
 30403                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 30404  0158DE  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30405  0158E2  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30406  0158E6  0E04               	movlw	4
 30407  0158E8  6EDF               	movwf	indf2,c
 30408                           
 30409                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30410  0158EA  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30411  0158EE  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30412  0158F2  0E00               	movlw	0
 30413  0158F4  8EDB               	bsf	plusw2,7,c
 30414                           
 30415                           ;usb_device.c: 2636: }
 30416  0158F6  0012               	return	
 30417  0158F8                     i2l7446:
 30418                           
 30419                           ;usb_device.c: 2637: else
 30420                           ;usb_device.c: 2638: {
 30421                           ;usb_device.c: 2639: if(lastDTS == 0)
 30422  0158F8  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 30423  0158FA  A4D8               	btfss	status,2,c
 30424  0158FC  D00D               	goto	i2l7452
 30425                           
 30426                           ;usb_device.c: 2640: {
 30427                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30428  0158FE  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30429  015902  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30430  015906  0E48               	movlw	72
 30431  015908  6EDF               	movwf	indf2,c
 30432                           
 30433                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30434  01590A  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30435  01590E  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30436  015912  0E00               	movlw	0
 30437  015914  8EDB               	bsf	plusw2,7,c
 30438                           
 30439                           ;usb_device.c: 2643: }
 30440  015916  0012               	return	
 30441  015918                     i2l7452:
 30442                           
 30443                           ;usb_device.c: 2644: else
 30444                           ;usb_device.c: 2645: {
 30445                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30446  015918  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30447  01591C  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30448  015920  0E08               	movlw	8
 30449  015922  6EDF               	movwf	indf2,c
 30450                           
 30451                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30452  015924  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30453  015928  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30454  01592C  0E00               	movlw	0
 30455  01592E  8EDB               	bsf	plusw2,7,c
 30456                           
 30457                           ;usb_device.c: 2648: }
 30458                           ;usb_device.c: 2649: }
 30459                           ;usb_device.c: 2650: }
 30460  015930  0012               	return	
 30461  015932                     i2l331:
 30462                           
 30463                           ;usb_device.c: 2651: else
 30464                           ;usb_device.c: 2652: {
 30465                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 30466  015932  BE04               	btfsc	_outPipes+3,7,c	;volatile
 30467                           
 30468                           ;usb_device.c: 2661: }
 30469                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 30470                           
 30471                           ;usb_device.c: 2659: {
 30472                           ;usb_device.c: 2660: outPipes[0].pFunc();
 30473  015934  9E04               	bcf	_outPipes+3,7,c	;volatile
 30474                           
 30475                           ;usb_device.c: 2663: }
 30476                           ;usb_device.c: 2665: controlTransferState = 0;
 30477  015936  0E00               	movlw	0
 30478  015938  6E20               	movwf	_controlTransferState,c	;volatile
 30479  01593A  0012               	return	
 30480  01593C                     __end_of_USBCtrlTrfInHandler:
 30481                           	opt stack 0
 30482                           pclatu	equ	0xFFB
 30483                           pclath	equ	0xFFA
 30484                           tblptru	equ	0xFF8
 30485                           tblptrh	equ	0xFF7
 30486                           tblptrl	equ	0xFF6
 30487                           tablat	equ	0xFF5
 30488                           prodh	equ	0xFF4
 30489                           prodl	equ	0xFF3
 30490                           intcon	equ	0xFF2
 30491                           intcon2	equ	0xFF1
 30492                           postinc0	equ	0xFEE
 30493                           fsr0h	equ	0xFEA
 30494                           fsr0l	equ	0xFE9
 30495                           wreg	equ	0xFE8
 30496                           indf1	equ	0xFE7
 30497                           postinc1	equ	0xFE6
 30498                           postdec1	equ	0xFE5
 30499                           fsr1h	equ	0xFE2
 30500                           fsr1l	equ	0xFE1
 30501                           indf2	equ	0xFDF
 30502                           postinc2	equ	0xFDE
 30503                           postdec2	equ	0xFDD
 30504                           plusw2	equ	0xFDB
 30505                           fsr2h	equ	0xFDA
 30506                           fsr2l	equ	0xFD9
 30507                           status	equ	0xFD8
 30508                           
 30509 ;; *************** function _USBCtrlTrfTxService *****************
 30510 ;; Defined at:
 30511 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 30512 ;; Parameters:    Size  Location     Type
 30513 ;;		None
 30514 ;; Auto vars:     Size  Location     Type
 30515 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30516 ;; Return value:  Size  Location     Type
 30517 ;;		None               void
 30518 ;; Registers used:
 30519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30520 ;; Tracked objects:
 30521 ;;		On entry : 0/0
 30522 ;;		On exit  : 0/0
 30523 ;;		Unchanged: 0/0
 30524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30529 ;;Total ram usage:        1 bytes
 30530 ;; Hardware stack levels used:    1
 30531 ;; This function calls:
 30532 ;;		Nothing
 30533 ;; This function is called by:
 30534 ;;		_USBCtrlEPAllowDataStage
 30535 ;;		_USBCtrlTrfInHandler
 30536 ;; This function uses a non-reentrant model
 30537 ;;
 30538                           
 30539                           	psect	text131
 30540  014B9A                     __ptext131:
 30541                           	opt stack 0
 30542  014B9A                     _USBCtrlTrfTxService:
 30543                           	opt stack 14
 30544                           
 30545                           ;usb_device.c: 1773: uint8_t byteToSend;
 30546                           ;usb_device.c: 1777: byteToSend = 8;
 30547                           
 30548                           ;incstack = 0
 30549  014B9A  0E08               	movlw	8
 30550  014B9C  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 30551                           
 30552                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 30553  014B9E  0100               	movlb	0	; () banked
 30554  014BA0  51E9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30555  014BA2  E111               	bnz	i2l6478
 30556  014BA4  0E08               	movlw	8
 30557  014BA6  0100               	movlb	0	; () banked
 30558  014BA8  5DE8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30559  014BAA  B0D8               	btfsc	status,0,c
 30560  014BAC  D00C               	goto	i2l6478
 30561                           
 30562                           ; BSR set to: 0
 30563                           ;usb_device.c: 1779: {
 30564                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 30565  014BAE  C0E8  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30566                           
 30567                           ; BSR set to: 0
 30568                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 30569  014BB2  5027               	movf	_shortPacketStatus,w,c	;volatile
 30570  014BB4  A4D8               	btfss	status,2,c
 30571  014BB6  D002               	goto	i2l6474
 30572                           
 30573                           ; BSR set to: 0
 30574                           ;usb_device.c: 1788: {
 30575                           ;usb_device.c: 1789: shortPacketStatus = 1;
 30576  014BB8  0E01               	movlw	1
 30577  014BBA  D004               	goto	L18
 30578  014BBC                     i2l6474:
 30579                           
 30580                           ; BSR set to: 0
 30581                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 30582  014BBC  0427               	decf	_shortPacketStatus,w,c	;volatile
 30583  014BBE  A4D8               	btfss	status,2,c
 30584  014BC0  D002               	goto	i2l6478
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;usb_device.c: 1792: {
 30588                           ;usb_device.c: 1793: shortPacketStatus = 2;
 30589  014BC2  0E02               	movlw	2
 30590  014BC4                     L18:
 30591  014BC4  6E27               	movwf	_shortPacketStatus,c	;volatile
 30592  014BC6                     i2l6478:
 30593                           
 30594                           ; BSR set to: 0
 30595                           ;usb_device.c: 1794: }
 30596                           ;usb_device.c: 1795: }
 30597                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 30598  014BC6  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30599  014BC8  0100               	movlb	0	; () banked
 30600  014BCA  5FE8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30601  014BCC  0E00               	movlw	0
 30602  014BCE  5BE9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30603                           
 30604                           ; BSR set to: 0
 30605                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 30606  014BD0  0100               	movlb	0	; () banked
 30607  014BD2  EE20 F001          	lfsr	2,1
 30608  014BD6  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 30609  014BD8  26D9               	addwf	fsr2l,f,c
 30610  014BDA  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30611  014BDC  22DA               	addwfc	fsr2h,f,c
 30612  014BDE  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30613                           
 30614                           ; BSR set to: 0
 30615                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 30616  014BE2  0E38               	movlw	56
 30617  014BE4  0101               	movlb	1	; () banked
 30618  014BE6  6F1B               	movwf	_pDst& (0+255),b
 30619  014BE8  0E0D               	movlw	13
 30620  014BEA  0101               	movlb	1	; () banked
 30621  014BEC  6F1C               	movwf	(_pDst+1)& (0+255),b
 30622                           
 30623                           ; BSR set to: 1
 30624                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30625  014BEE  0100               	movlb	0	; () banked
 30626  014BF0  A1E7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30627  014BF2  D01E               	goto	i2l6496
 30628  014BF4  D03E               	goto	i2l6506
 30629  014BF6                     i2l6488:
 30630                           
 30631                           ;usb_device.c: 1812: {
 30632                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 30633  014BF6  C0E4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30634  014BFA  C0E5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30635  014BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 30636  014C00  6EF8               	movwf	tblptru,c
 30637  014C02  C11B  FFD9         	movff	_pDst,fsr2l
 30638  014C06  C11C  FFDA         	movff	_pDst+1,fsr2h
 30639  014C0A  0E0E               	movlw	(high __ramtop+-1)
 30640  014C0C  64F7               	cpfsgt	tblptrh,c
 30641  014C0E  D003               	bra	i2u614_47
 30642  014C10  0008               	tblrd		*
 30643  014C12  50F5               	movf	tablat,w,c
 30644  014C14  D005               	bra	i2u614_40
 30645  014C16                     i2u614_47:
 30646  014C16  CFF6 FFE1          	movff	tblptrl,fsr1l
 30647  014C1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 30648  014C1E  50E7               	movf	indf1,w,c
 30649  014C20                     i2u614_40:
 30650  014C20  6EDF               	movwf	indf2,c
 30651  014C22  0100               	movlb	0	; () banked
 30652  014C24  4BE4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30653  014C26  2BE5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30654                           
 30655                           ; BSR set to: 0
 30656  014C28  0101               	movlb	1	; () banked
 30657  014C2A  4B1B               	infsnz	_pDst& (0+255),f,b
 30658  014C2C  2B1C               	incf	(_pDst+1)& (0+255),f,b
 30659                           
 30660                           ; BSR set to: 1
 30661                           ;usb_device.c: 1814: byteToSend--;
 30662  014C2E  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30663  014C30                     i2l6496:
 30664  014C30  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30665  014C32  B4D8               	btfsc	status,2,c
 30666  014C34  0012               	return	
 30667  014C36  D7DF               	goto	i2l6488
 30668  014C38                     i2l6498:
 30669                           
 30670                           ;usb_device.c: 1820: {
 30671                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 30672  014C38  C0E4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30673  014C3C  C0E5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30674  014C40  0E00               	movlw	low (__mediumconst shr (0+16))
 30675  014C42  6EF8               	movwf	tblptru,c
 30676  014C44  C11B  FFD9         	movff	_pDst,fsr2l
 30677  014C48  C11C  FFDA         	movff	_pDst+1,fsr2h
 30678  014C4C  0E0E               	movlw	(high __ramtop+-1)
 30679  014C4E  64F7               	cpfsgt	tblptrh,c
 30680  014C50  D003               	bra	i2u616_47
 30681  014C52  0008               	tblrd		*
 30682  014C54  50F5               	movf	tablat,w,c
 30683  014C56  D005               	bra	i2u616_40
 30684  014C58                     i2u616_47:
 30685  014C58  CFF6 FFE1          	movff	tblptrl,fsr1l
 30686  014C5C  CFF7 FFE2          	movff	tblptrh,fsr1h
 30687  014C60  50E7               	movf	indf1,w,c
 30688  014C62                     i2u616_40:
 30689  014C62  6EDF               	movwf	indf2,c
 30690  014C64  0100               	movlb	0	; () banked
 30691  014C66  4BE4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30692  014C68  2BE5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30693                           
 30694                           ; BSR set to: 0
 30695  014C6A  0101               	movlb	1	; () banked
 30696  014C6C  4B1B               	infsnz	_pDst& (0+255),f,b
 30697  014C6E  2B1C               	incf	(_pDst+1)& (0+255),f,b
 30698                           
 30699                           ; BSR set to: 1
 30700                           ;usb_device.c: 1822: byteToSend--;
 30701  014C70  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30702  014C72                     i2l6506:
 30703  014C72  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30704  014C74  B4D8               	btfsc	status,2,c
 30705  014C76  0012               	return	
 30706  014C78  D7DF               	goto	i2l6498
 30707  014C7A                     __end_of_USBCtrlTrfTxService:
 30708                           	opt stack 0
 30709                           pclatu	equ	0xFFB
 30710                           pclath	equ	0xFFA
 30711                           tblptru	equ	0xFF8
 30712                           tblptrh	equ	0xFF7
 30713                           tblptrl	equ	0xFF6
 30714                           tablat	equ	0xFF5
 30715                           prodh	equ	0xFF4
 30716                           prodl	equ	0xFF3
 30717                           intcon	equ	0xFF2
 30718                           intcon2	equ	0xFF1
 30719                           postinc0	equ	0xFEE
 30720                           fsr0h	equ	0xFEA
 30721                           fsr0l	equ	0xFE9
 30722                           wreg	equ	0xFE8
 30723                           indf1	equ	0xFE7
 30724                           postinc1	equ	0xFE6
 30725                           postdec1	equ	0xFE5
 30726                           fsr1h	equ	0xFE2
 30727                           fsr1l	equ	0xFE1
 30728                           indf2	equ	0xFDF
 30729                           postinc2	equ	0xFDE
 30730                           postdec2	equ	0xFDD
 30731                           plusw2	equ	0xFDB
 30732                           fsr2h	equ	0xFDA
 30733                           fsr2l	equ	0xFD9
 30734                           status	equ	0xFD8
 30735                           
 30736 ;; *************** function _LED_indicator *****************
 30737 ;; Defined at:
 30738 ;;		line 158 in file "tasks.h"
 30739 ;; Parameters:    Size  Location     Type
 30740 ;;		None
 30741 ;; Auto vars:     Size  Location     Type
 30742 ;;  i               1   11[COMRAM] unsigned char 
 30743 ;; Return value:  Size  Location     Type
 30744 ;;		None               void
 30745 ;; Registers used:
 30746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30747 ;; Tracked objects:
 30748 ;;		On entry : 0/0
 30749 ;;		On exit  : 0/0
 30750 ;;		Unchanged: 0/0
 30751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30756 ;;Total ram usage:        4 bytes
 30757 ;; Hardware stack levels used:    1
 30758 ;; Hardware stack levels required when called:    1
 30759 ;; This function calls:
 30760 ;;		i2_LED_OUT
 30761 ;;		i2___awdiv
 30762 ;;		i2___lwdiv
 30763 ;; This function is called by:
 30764 ;;		_ISR
 30765 ;; This function uses a non-reentrant model
 30766 ;;
 30767                           
 30768                           	psect	text132
 30769  0140DC                     __ptext132:
 30770                           	opt stack 0
 30771  0140DC                     _LED_indicator:
 30772                           	opt stack 19
 30773                           
 30774                           ;tasks.h: 159: uint8_t i;
 30775                           ;tasks.h: 160: static uint8_t cnt[3];
 30776                           ;tasks.h: 161: static uint8_t cntf[3];
 30777                           ;tasks.h: 162: for (i = 0; i < 3; i++) {
 30778                           
 30779                           ;incstack = 0
 30780  0140DC  0E00               	movlw	0
 30781  0140DE  6E38               	movwf	LED_indicator@i,c
 30782  0140E0                     i2l9388:
 30783  0140E0  0E02               	movlw	2
 30784  0140E2  6438               	cpfsgt	LED_indicator@i,c
 30785  0140E4  D001               	goto	i2l9392
 30786  0140E6  0012               	return	
 30787  0140E8                     i2l9392:
 30788                           
 30789                           ;tasks.h: 164: if (port[i].flag.led_indicator_ON) {
 30790  0140E8  5038               	movf	LED_indicator@i,w,c
 30791  0140EA  0D17               	mullw	23
 30792  0140EC  0E16               	movlw	22
 30793  0140EE  26F3               	addwf	prodl,f,c
 30794  0140F0  0E00               	movlw	0
 30795  0140F2  22F4               	addwfc	prodh,f,c
 30796  0140F4  0E29               	movlw	low _port
 30797  0140F6  24F3               	addwf	prodl,w,c
 30798  0140F8  6ED9               	movwf	fsr2l,c
 30799  0140FA  0E01               	movlw	high _port
 30800  0140FC  20F4               	addwfc	prodh,w,c
 30801  0140FE  6EDA               	movwf	fsr2h,c
 30802  014100  0101               	movlb	1	; () banked
 30803  014102  A2DF               	btfss	indf2,1,c
 30804  014104  D07C               	goto	i2l9412
 30805                           
 30806                           ; BSR set to: 1
 30807                           ;tasks.h: 165: cnt[i]++;
 30808  014106  5038               	movf	LED_indicator@i,w,c
 30809  014108  0D01               	mullw	1
 30810  01410A  0E06               	movlw	low LED_indicator@cnt
 30811  01410C  24F3               	addwf	prodl,w,c
 30812  01410E  6ED9               	movwf	fsr2l,c
 30813  014110  0E01               	movlw	high LED_indicator@cnt
 30814  014112  20F4               	addwfc	prodh,w,c
 30815  014114  6EDA               	movwf	fsr2h,c
 30816  014116  2ADF               	incf	indf2,f,c
 30817                           
 30818                           ;tasks.h: 166: if (cnt[i] % 2 == 1) {
 30819  014118  5038               	movf	LED_indicator@i,w,c
 30820  01411A  0D01               	mullw	1
 30821  01411C  0E06               	movlw	low LED_indicator@cnt
 30822  01411E  24F3               	addwf	prodl,w,c
 30823  014120  6ED9               	movwf	fsr2l,c
 30824  014122  0E01               	movlw	high LED_indicator@cnt
 30825  014124  20F4               	addwfc	prodh,w,c
 30826  014126  6EDA               	movwf	fsr2h,c
 30827  014128  0101               	movlb	1	; () banked
 30828  01412A  A0DF               	btfss	indf2,0,c
 30829  01412C  D006               	goto	i2l9398
 30830                           
 30831                           ; BSR set to: 1
 30832                           ;tasks.h: 167: LED_OUT(i, 0);
 30833  01412E  0E00               	movlw	0
 30834  014130  6E2D               	movwf	i2LED_OUT@value,c
 30835  014132  5038               	movf	LED_indicator@i,w,c
 30836  014134  ECAC  F0B4         	call	i2_LED_OUT
 30837                           
 30838                           ;tasks.h: 168: } else {
 30839  014138  D062               	goto	i2l9412
 30840  01413A                     i2l9398:
 30841                           
 30842                           ;tasks.h: 169: if (cnt[i] / 2 <= port[i].current / 100) {
 30843  01413A  5038               	movf	LED_indicator@i,w,c
 30844  01413C  0D17               	mullw	23
 30845  01413E  0E06               	movlw	6
 30846  014140  26F3               	addwf	prodl,f,c
 30847  014142  0E00               	movlw	0
 30848  014144  22F4               	addwfc	prodh,f,c
 30849  014146  0E29               	movlw	low _port
 30850  014148  24F3               	addwf	prodl,w,c
 30851  01414A  6ED9               	movwf	fsr2l,c
 30852  01414C  0E01               	movlw	high _port
 30853  01414E  20F4               	addwfc	prodh,w,c
 30854  014150  6EDA               	movwf	fsr2h,c
 30855  014152  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30856  014156  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30857  01415A  0E00               	movlw	0
 30858  01415C  6E30               	movwf	i2___lwdiv@divisor+1,c
 30859  01415E  0E64               	movlw	100
 30860  014160  6E2F               	movwf	i2___lwdiv@divisor,c
 30861  014162  EC19  F0B6         	call	i2___lwdiv	;wreg free
 30862  014166  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30863  01416A  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30864  01416E  5038               	movf	LED_indicator@i,w,c
 30865  014170  0D01               	mullw	1
 30866  014172  0E06               	movlw	low LED_indicator@cnt
 30867  014174  24F3               	addwf	prodl,w,c
 30868  014176  6ED9               	movwf	fsr2l,c
 30869  014178  0E01               	movlw	high LED_indicator@cnt
 30870  01417A  20F4               	addwfc	prodh,w,c
 30871  01417C  6EDA               	movwf	fsr2h,c
 30872  01417E  50DF               	movf	indf2,w,c
 30873  014180  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30874  014182  5037               	movf	??_LED_indicator+2,w,c
 30875  014184  6E2D               	movwf	i2___awdiv@dividend,c
 30876  014186  6A2E               	clrf	i2___awdiv@dividend+1,c
 30877  014188  0E00               	movlw	0
 30878  01418A  6E30               	movwf	i2___awdiv@divisor+1,c
 30879  01418C  0E02               	movlw	2
 30880  01418E  6E2F               	movwf	i2___awdiv@divisor,c
 30881  014190  ECED  F0B1         	call	i2___awdiv	;wreg free
 30882  014194  502D               	movf	?i2___awdiv,w,c
 30883  014196  5C35               	subwf	??_LED_indicator,w,c
 30884  014198  502E               	movf	?i2___awdiv+1,w,c
 30885  01419A  5836               	subwfb	??_LED_indicator+1,w,c
 30886  01419C  A0D8               	btfss	status,0,c
 30887  01419E  D00C               	goto	i2l9404
 30888                           
 30889                           ;tasks.h: 170: LED_OUT(i, 1);
 30890  0141A0  0E01               	movlw	1
 30891  0141A2  6E2D               	movwf	i2LED_OUT@value,c
 30892  0141A4  5038               	movf	LED_indicator@i,w,c
 30893  0141A6  ECAC  F0B4         	call	i2_LED_OUT
 30894                           
 30895                           ;tasks.h: 171: cntf[i] = 0;
 30896  0141AA  5038               	movf	LED_indicator@i,w,c
 30897  0141AC  0D01               	mullw	1
 30898  0141AE  0E09               	movlw	low LED_indicator@cntf
 30899  0141B0  24F3               	addwf	prodl,w,c
 30900  0141B2  6ED9               	movwf	fsr2l,c
 30901  0141B4  0E01               	movlw	high LED_indicator@cntf
 30902  0141B6  D01F               	goto	L19
 30903  0141B8                     i2l9404:
 30904                           
 30905                           ;tasks.h: 173: cntf[i]++;
 30906  0141B8  5038               	movf	LED_indicator@i,w,c
 30907  0141BA  0D01               	mullw	1
 30908  0141BC  0E09               	movlw	low LED_indicator@cntf
 30909  0141BE  24F3               	addwf	prodl,w,c
 30910  0141C0  6ED9               	movwf	fsr2l,c
 30911  0141C2  0E01               	movlw	high LED_indicator@cntf
 30912  0141C4  20F4               	addwfc	prodh,w,c
 30913  0141C6  6EDA               	movwf	fsr2h,c
 30914  0141C8  2ADF               	incf	indf2,f,c
 30915                           
 30916                           ;tasks.h: 174: LED_OUT(i, 0);
 30917  0141CA  0E00               	movlw	0
 30918  0141CC  6E2D               	movwf	i2LED_OUT@value,c
 30919  0141CE  5038               	movf	LED_indicator@i,w,c
 30920  0141D0  ECAC  F0B4         	call	i2_LED_OUT
 30921                           
 30922                           ;tasks.h: 175: if (cntf[i] >= 2) {
 30923  0141D4  5038               	movf	LED_indicator@i,w,c
 30924  0141D6  0D01               	mullw	1
 30925  0141D8  0E09               	movlw	low LED_indicator@cntf
 30926  0141DA  24F3               	addwf	prodl,w,c
 30927  0141DC  6ED9               	movwf	fsr2l,c
 30928  0141DE  0E01               	movlw	high LED_indicator@cntf
 30929  0141E0  20F4               	addwfc	prodh,w,c
 30930  0141E2  6EDA               	movwf	fsr2h,c
 30931  0141E4  0E01               	movlw	1
 30932  0141E6  64DF               	cpfsgt	indf2,c
 30933  0141E8  D00A               	goto	i2l9412
 30934                           
 30935                           ;tasks.h: 176: cnt[i] = 0;
 30936  0141EA  5038               	movf	LED_indicator@i,w,c
 30937  0141EC  0D01               	mullw	1
 30938  0141EE  0E06               	movlw	low LED_indicator@cnt
 30939  0141F0  24F3               	addwf	prodl,w,c
 30940  0141F2  6ED9               	movwf	fsr2l,c
 30941  0141F4  0E01               	movlw	high LED_indicator@cnt
 30942  0141F6                     L19:
 30943  0141F6  20F4               	addwfc	prodh,w,c
 30944  0141F8  6EDA               	movwf	fsr2h,c
 30945  0141FA  0E00               	movlw	0
 30946  0141FC  6EDF               	movwf	indf2,c
 30947  0141FE                     i2l9412:
 30948  0141FE  2A38               	incf	LED_indicator@i,f,c
 30949  014200  D76F               	goto	i2l9388
 30950  014202                     __end_of_LED_indicator:
 30951                           	opt stack 0
 30952                           pclatu	equ	0xFFB
 30953                           pclath	equ	0xFFA
 30954                           tblptru	equ	0xFF8
 30955                           tblptrh	equ	0xFF7
 30956                           tblptrl	equ	0xFF6
 30957                           tablat	equ	0xFF5
 30958                           prodh	equ	0xFF4
 30959                           prodl	equ	0xFF3
 30960                           intcon	equ	0xFF2
 30961                           intcon2	equ	0xFF1
 30962                           postinc0	equ	0xFEE
 30963                           fsr0h	equ	0xFEA
 30964                           fsr0l	equ	0xFE9
 30965                           wreg	equ	0xFE8
 30966                           indf1	equ	0xFE7
 30967                           postinc1	equ	0xFE6
 30968                           postdec1	equ	0xFE5
 30969                           fsr1h	equ	0xFE2
 30970                           fsr1l	equ	0xFE1
 30971                           indf2	equ	0xFDF
 30972                           postinc2	equ	0xFDE
 30973                           postdec2	equ	0xFDD
 30974                           plusw2	equ	0xFDB
 30975                           fsr2h	equ	0xFDA
 30976                           fsr2l	equ	0xFD9
 30977                           status	equ	0xFD8
 30978                           
 30979 ;; *************** function i2___lwdiv *****************
 30980 ;; Defined at:
 30981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 30982 ;; Parameters:    Size  Location     Type
 30983 ;;  dividend        2    0[COMRAM] unsigned int 
 30984 ;;  divisor         2    2[COMRAM] unsigned int 
 30985 ;; Auto vars:     Size  Location     Type
 30986 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 30987 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 30988 ;; Return value:  Size  Location     Type
 30989 ;;                  2    0[COMRAM] unsigned int 
 30990 ;; Registers used:
 30991 ;;		wreg, status,2, status,0
 30992 ;; Tracked objects:
 30993 ;;		On entry : 0/0
 30994 ;;		On exit  : 0/0
 30995 ;;		Unchanged: 0/0
 30996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30998 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31000 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31001 ;;Total ram usage:        7 bytes
 31002 ;; Hardware stack levels used:    1
 31003 ;; This function calls:
 31004 ;;		Nothing
 31005 ;; This function is called by:
 31006 ;;		_LED_indicator
 31007 ;; This function uses a non-reentrant model
 31008 ;;
 31009                           
 31010                           	psect	text133
 31011  016C32                     __ptext133:
 31012                           	opt stack 0
 31013  016C32                     i2___lwdiv:
 31014                           	opt stack 19
 31015                           
 31016                           ;incstack = 0
 31017  016C32  0E00               	movlw	0
 31018  016C34  6E32               	movwf	i2___lwdiv@quotient+1,c
 31019  016C36  0E00               	movlw	0
 31020  016C38  6E31               	movwf	i2___lwdiv@quotient,c
 31021  016C3A  502F               	movf	i2___lwdiv@divisor,w,c
 31022  016C3C  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 31023  016C3E  B4D8               	btfsc	status,2,c
 31024  016C40  D01C               	goto	i2l2105
 31025  016C42  0E01               	movlw	1
 31026  016C44  6E33               	movwf	i2___lwdiv@counter,c
 31027  016C46  D004               	goto	i2l9274
 31028  016C48                     i2l9272:
 31029  016C48  90D8               	bcf	status,0,c
 31030  016C4A  362F               	rlcf	i2___lwdiv@divisor,f,c
 31031  016C4C  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 31032  016C4E  2A33               	incf	i2___lwdiv@counter,f,c
 31033  016C50                     i2l9274:
 31034  016C50  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 31035  016C52  D7FA               	goto	i2l9272
 31036  016C54                     i2l9276:
 31037  016C54  90D8               	bcf	status,0,c
 31038  016C56  3631               	rlcf	i2___lwdiv@quotient,f,c
 31039  016C58  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 31040  016C5A  502F               	movf	i2___lwdiv@divisor,w,c
 31041  016C5C  5C2D               	subwf	i2___lwdiv@dividend,w,c
 31042  016C5E  5030               	movf	i2___lwdiv@divisor+1,w,c
 31043  016C60  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 31044  016C62  A0D8               	btfss	status,0,c
 31045  016C64  D005               	goto	i2l9284
 31046  016C66  502F               	movf	i2___lwdiv@divisor,w,c
 31047  016C68  5E2D               	subwf	i2___lwdiv@dividend,f,c
 31048  016C6A  5030               	movf	i2___lwdiv@divisor+1,w,c
 31049  016C6C  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 31050  016C6E  8031               	bsf	i2___lwdiv@quotient,0,c
 31051  016C70                     i2l9284:
 31052  016C70  90D8               	bcf	status,0,c
 31053  016C72  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 31054  016C74  322F               	rrcf	i2___lwdiv@divisor,f,c
 31055  016C76  2E33               	decfsz	i2___lwdiv@counter,f,c
 31056  016C78  D7ED               	goto	i2l9276
 31057  016C7A                     i2l2105:
 31058  016C7A  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 31059  016C7E  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 31060  016C82  0012               	return		;funcret
 31061  016C84                     __end_ofi2___lwdiv:
 31062                           	opt stack 0
 31063                           pclatu	equ	0xFFB
 31064                           pclath	equ	0xFFA
 31065                           tblptru	equ	0xFF8
 31066                           tblptrh	equ	0xFF7
 31067                           tblptrl	equ	0xFF6
 31068                           tablat	equ	0xFF5
 31069                           prodh	equ	0xFF4
 31070                           prodl	equ	0xFF3
 31071                           intcon	equ	0xFF2
 31072                           intcon2	equ	0xFF1
 31073                           postinc0	equ	0xFEE
 31074                           fsr0h	equ	0xFEA
 31075                           fsr0l	equ	0xFE9
 31076                           wreg	equ	0xFE8
 31077                           indf1	equ	0xFE7
 31078                           postinc1	equ	0xFE6
 31079                           postdec1	equ	0xFE5
 31080                           fsr1h	equ	0xFE2
 31081                           fsr1l	equ	0xFE1
 31082                           indf2	equ	0xFDF
 31083                           postinc2	equ	0xFDE
 31084                           postdec2	equ	0xFDD
 31085                           plusw2	equ	0xFDB
 31086                           fsr2h	equ	0xFDA
 31087                           fsr2l	equ	0xFD9
 31088                           status	equ	0xFD8
 31089                           
 31090 ;; *************** function i2___awdiv *****************
 31091 ;; Defined at:
 31092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 31093 ;; Parameters:    Size  Location     Type
 31094 ;;  dividend        2    0[COMRAM] int 
 31095 ;;  divisor         2    2[COMRAM] int 
 31096 ;; Auto vars:     Size  Location     Type
 31097 ;;  __awdiv         2    6[COMRAM] int 
 31098 ;;  __awdiv         1    5[COMRAM] unsigned char 
 31099 ;;  __awdiv         1    4[COMRAM] unsigned char 
 31100 ;; Return value:  Size  Location     Type
 31101 ;;                  2    0[COMRAM] int 
 31102 ;; Registers used:
 31103 ;;		wreg, status,2, status,0
 31104 ;; Tracked objects:
 31105 ;;		On entry : 0/0
 31106 ;;		On exit  : 0/0
 31107 ;;		Unchanged: 0/0
 31108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31112 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31113 ;;Total ram usage:        8 bytes
 31114 ;; Hardware stack levels used:    1
 31115 ;; This function calls:
 31116 ;;		Nothing
 31117 ;; This function is called by:
 31118 ;;		_LED_indicator
 31119 ;; This function uses a non-reentrant model
 31120 ;;
 31121                           
 31122                           	psect	text134
 31123  0163DA                     __ptext134:
 31124                           	opt stack 0
 31125  0163DA                     i2___awdiv:
 31126                           	opt stack 19
 31127                           
 31128                           ;incstack = 0
 31129  0163DA  0E00               	movlw	0
 31130  0163DC  6E32               	movwf	i2___awdiv@sign,c
 31131  0163DE  AE30               	btfss	i2___awdiv@divisor+1,7,c
 31132  0163E0  D006               	goto	i2l9208
 31133  0163E2  6C2F               	negf	i2___awdiv@divisor,c
 31134  0163E4  1E30               	comf	i2___awdiv@divisor+1,f,c
 31135  0163E6  B0D8               	btfsc	status,0,c
 31136  0163E8  2A30               	incf	i2___awdiv@divisor+1,f,c
 31137  0163EA  0E01               	movlw	1
 31138  0163EC  6E32               	movwf	i2___awdiv@sign,c
 31139  0163EE                     i2l9208:
 31140  0163EE  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 31141  0163F0  D006               	goto	i2l9214
 31142  0163F2  6C2D               	negf	i2___awdiv@dividend,c
 31143  0163F4  1E2E               	comf	i2___awdiv@dividend+1,f,c
 31144  0163F6  B0D8               	btfsc	status,0,c
 31145  0163F8  2A2E               	incf	i2___awdiv@dividend+1,f,c
 31146  0163FA  0E01               	movlw	1
 31147  0163FC  1A32               	xorwf	i2___awdiv@sign,f,c
 31148  0163FE                     i2l9214:
 31149  0163FE  0E00               	movlw	0
 31150  016400  6E34               	movwf	i2___awdiv@quotient+1,c
 31151  016402  0E00               	movlw	0
 31152  016404  6E33               	movwf	i2___awdiv@quotient,c
 31153  016406  502F               	movf	i2___awdiv@divisor,w,c
 31154  016408  1030               	iorwf	i2___awdiv@divisor+1,w,c
 31155  01640A  B4D8               	btfsc	status,2,c
 31156  01640C  D01C               	goto	i2l9236
 31157  01640E  0E01               	movlw	1
 31158  016410  6E31               	movwf	i2___awdiv@counter,c
 31159  016412  D004               	goto	i2l9222
 31160  016414                     i2l9220:
 31161  016414  90D8               	bcf	status,0,c
 31162  016416  362F               	rlcf	i2___awdiv@divisor,f,c
 31163  016418  3630               	rlcf	i2___awdiv@divisor+1,f,c
 31164  01641A  2A31               	incf	i2___awdiv@counter,f,c
 31165  01641C                     i2l9222:
 31166  01641C  AE30               	btfss	i2___awdiv@divisor+1,7,c
 31167  01641E  D7FA               	goto	i2l9220
 31168  016420                     i2l9224:
 31169  016420  90D8               	bcf	status,0,c
 31170  016422  3633               	rlcf	i2___awdiv@quotient,f,c
 31171  016424  3634               	rlcf	i2___awdiv@quotient+1,f,c
 31172  016426  502F               	movf	i2___awdiv@divisor,w,c
 31173  016428  5C2D               	subwf	i2___awdiv@dividend,w,c
 31174  01642A  5030               	movf	i2___awdiv@divisor+1,w,c
 31175  01642C  582E               	subwfb	i2___awdiv@dividend+1,w,c
 31176  01642E  A0D8               	btfss	status,0,c
 31177  016430  D005               	goto	i2l9232
 31178  016432  502F               	movf	i2___awdiv@divisor,w,c
 31179  016434  5E2D               	subwf	i2___awdiv@dividend,f,c
 31180  016436  5030               	movf	i2___awdiv@divisor+1,w,c
 31181  016438  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 31182  01643A  8033               	bsf	i2___awdiv@quotient,0,c
 31183  01643C                     i2l9232:
 31184  01643C  90D8               	bcf	status,0,c
 31185  01643E  3230               	rrcf	i2___awdiv@divisor+1,f,c
 31186  016440  322F               	rrcf	i2___awdiv@divisor,f,c
 31187  016442  2E31               	decfsz	i2___awdiv@counter,f,c
 31188  016444  D7ED               	goto	i2l9224
 31189  016446                     i2l9236:
 31190  016446  5032               	movf	i2___awdiv@sign,w,c
 31191  016448  B4D8               	btfsc	status,2,c
 31192  01644A  D004               	goto	i2l9240
 31193  01644C  6C33               	negf	i2___awdiv@quotient,c
 31194  01644E  1E34               	comf	i2___awdiv@quotient+1,f,c
 31195  016450  B0D8               	btfsc	status,0,c
 31196  016452  2A34               	incf	i2___awdiv@quotient+1,f,c
 31197  016454                     i2l9240:
 31198  016454  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 31199  016458  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 31200  01645C  0012               	return	
 31201  01645E                     __end_ofi2___awdiv:
 31202                           	opt stack 0
 31203                           pclatu	equ	0xFFB
 31204                           pclath	equ	0xFFA
 31205                           tblptru	equ	0xFF8
 31206                           tblptrh	equ	0xFF7
 31207                           tblptrl	equ	0xFF6
 31208                           tablat	equ	0xFF5
 31209                           prodh	equ	0xFF4
 31210                           prodl	equ	0xFF3
 31211                           intcon	equ	0xFF2
 31212                           intcon2	equ	0xFF1
 31213                           postinc0	equ	0xFEE
 31214                           fsr0h	equ	0xFEA
 31215                           fsr0l	equ	0xFE9
 31216                           wreg	equ	0xFE8
 31217                           indf1	equ	0xFE7
 31218                           postinc1	equ	0xFE6
 31219                           postdec1	equ	0xFE5
 31220                           fsr1h	equ	0xFE2
 31221                           fsr1l	equ	0xFE1
 31222                           indf2	equ	0xFDF
 31223                           postinc2	equ	0xFDE
 31224                           postdec2	equ	0xFDD
 31225                           plusw2	equ	0xFDB
 31226                           fsr2h	equ	0xFDA
 31227                           fsr2l	equ	0xFD9
 31228                           status	equ	0xFD8
 31229                           
 31230 ;; *************** function i2_LED_OUT *****************
 31231 ;; Defined at:
 31232 ;;		line 142 in file "tasks.h"
 31233 ;; Parameters:    Size  Location     Type
 31234 ;;  b               1    wreg     unsigned char 
 31235 ;;  value           1    0[COMRAM] unsigned char 
 31236 ;; Auto vars:     Size  Location     Type
 31237 ;;  b               1    1[COMRAM] unsigned char 
 31238 ;; Return value:  Size  Location     Type
 31239 ;;		None               void
 31240 ;; Registers used:
 31241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31242 ;; Tracked objects:
 31243 ;;		On entry : 0/0
 31244 ;;		On exit  : 0/0
 31245 ;;		Unchanged: 0/0
 31246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31251 ;;Total ram usage:        2 bytes
 31252 ;; Hardware stack levels used:    1
 31253 ;; This function calls:
 31254 ;;		Nothing
 31255 ;; This function is called by:
 31256 ;;		_LED_indicator
 31257 ;; This function uses a non-reentrant model
 31258 ;;
 31259                           
 31260                           	psect	text135
 31261  016958                     __ptext135:
 31262                           	opt stack 0
 31263  016958                     i2_LED_OUT:
 31264                           	opt stack 19
 31265                           
 31266                           ;incstack = 0
 31267                           ;i2LED_OUT@b stored from wreg
 31268  016958  6E2E               	movwf	i2LED_OUT@b,c
 31269                           
 31270                           ;tasks.h: 143: port[b].flag.led_flag = value;
 31271  01695A  502E               	movf	i2LED_OUT@b,w,c
 31272  01695C  0D17               	mullw	23
 31273  01695E  0E16               	movlw	22
 31274  016960  26F3               	addwf	prodl,f,c
 31275  016962  0E00               	movlw	0
 31276  016964  22F4               	addwfc	prodh,f,c
 31277  016966  0E29               	movlw	low _port
 31278  016968  24F3               	addwf	prodl,w,c
 31279  01696A  6ED9               	movwf	fsr2l,c
 31280  01696C  0E01               	movlw	high _port
 31281  01696E  20F4               	addwfc	prodh,w,c
 31282  016970  6EDA               	movwf	fsr2h,c
 31283  016972  B02D               	btfsc	i2LED_OUT@value,0,c
 31284  016974  D003               	bra	i2u1034_45
 31285  016976  0101               	movlb	1	; () banked
 31286  016978  96DF               	bcf	indf2,3,c
 31287  01697A  D002               	bra	i2u1034_46
 31288  01697C                     i2u1034_45:
 31289  01697C  0101               	movlb	1	; () banked
 31290  01697E  86DF               	bsf	indf2,3,c
 31291  016980                     i2u1034_46:
 31292                           
 31293                           ;tasks.h: 144: switch (b) {
 31294  016980  D012               	goto	i2l9198
 31295  016982                     i2l1291:
 31296                           
 31297                           ;tasks.h: 146: LATB7 = value;
 31298  016982  A02D               	btfss	i2LED_OUT@value,0,c
 31299  016984  D002               	goto	i2u1035_40
 31300  016986  8E8A               	bsf	3978,7,c	;volatile
 31301  016988  0012               	return	
 31302  01698A                     i2u1035_40:
 31303  01698A  9E8A               	bcf	3978,7,c	;volatile
 31304                           
 31305                           ;tasks.h: 147: break;
 31306  01698C  0012               	return	
 31307  01698E                     i2l1293:
 31308                           
 31309                           ;tasks.h: 149: LATB6 = value;
 31310  01698E  A02D               	btfss	i2LED_OUT@value,0,c
 31311  016990  D002               	goto	i2u1037_40
 31312  016992  8C8A               	bsf	3978,6,c	;volatile
 31313  016994  0012               	return	
 31314  016996                     i2u1037_40:
 31315  016996  9C8A               	bcf	3978,6,c	;volatile
 31316                           
 31317                           ;tasks.h: 150: break;
 31318  016998  0012               	return	
 31319  01699A                     i2l1294:
 31320                           
 31321                           ;tasks.h: 152: LATC2 = value;
 31322  01699A  A02D               	btfss	i2LED_OUT@value,0,c
 31323  01699C  D002               	goto	i2u1039_40
 31324  01699E  848B               	bsf	3979,2,c	;volatile
 31325  0169A0  0012               	return	
 31326  0169A2                     i2u1039_40:
 31327  0169A2  948B               	bcf	3979,2,c	;volatile
 31328                           
 31329                           ;tasks.h: 154: }
 31330                           
 31331                           ;tasks.h: 153: break;
 31332  0169A4  0012               	return	
 31333  0169A6                     i2l9198:
 31334  0169A6  502E               	movf	i2LED_OUT@b,w,c
 31335                           
 31336                           ; Switch size 1, requested type "space"
 31337                           ; Number of cases is 3, Range of values is 0 to 2
 31338                           ; switch strategies available:
 31339                           ; Name         Instructions Cycles
 31340                           ; simple_byte           10     6 (average)
 31341                           ;	Chosen strategy is simple_byte
 31342  0169A8  0A00               	xorlw	0	; case 0
 31343  0169AA  B4D8               	btfsc	status,2,c
 31344  0169AC  D7EA               	goto	i2l1291
 31345  0169AE  0A01               	xorlw	1	; case 1
 31346  0169B0  B4D8               	btfsc	status,2,c
 31347  0169B2  D7ED               	goto	i2l1293
 31348  0169B4  0A03               	xorlw	3	; case 2
 31349  0169B6  A4D8               	btfss	status,2,c
 31350  0169B8  0012               	return	
 31351  0169BA  D7EF               	goto	i2l1294
 31352  0169BC                     __end_ofi2_LED_OUT:
 31353                           	opt stack 0
 31354                           pclatu	equ	0xFFB
 31355                           pclath	equ	0xFFA
 31356                           tblptru	equ	0xFF8
 31357                           tblptrh	equ	0xFF7
 31358                           tblptrl	equ	0xFF6
 31359                           tablat	equ	0xFF5
 31360                           prodh	equ	0xFF4
 31361                           prodl	equ	0xFF3
 31362                           intcon	equ	0xFF2
 31363                           intcon2	equ	0xFF1
 31364                           postinc0	equ	0xFEE
 31365                           fsr0h	equ	0xFEA
 31366                           fsr0l	equ	0xFE9
 31367                           wreg	equ	0xFE8
 31368                           indf1	equ	0xFE7
 31369                           postinc1	equ	0xFE6
 31370                           postdec1	equ	0xFE5
 31371                           fsr1h	equ	0xFE2
 31372                           fsr1l	equ	0xFE1
 31373                           indf2	equ	0xFDF
 31374                           postinc2	equ	0xFDE
 31375                           postdec2	equ	0xFDD
 31376                           plusw2	equ	0xFDB
 31377                           fsr2h	equ	0xFDA
 31378                           fsr2l	equ	0xFD9
 31379                           status	equ	0xFD8
 31380                           pclatu	equ	0xFFB
 31381                           pclath	equ	0xFFA
 31382                           tblptru	equ	0xFF8
 31383                           tblptrh	equ	0xFF7
 31384                           tblptrl	equ	0xFF6
 31385                           tablat	equ	0xFF5
 31386                           prodh	equ	0xFF4
 31387                           prodl	equ	0xFF3
 31388                           intcon	equ	0xFF2
 31389                           intcon2	equ	0xFF1
 31390                           postinc0	equ	0xFEE
 31391                           fsr0h	equ	0xFEA
 31392                           fsr0l	equ	0xFE9
 31393                           wreg	equ	0xFE8
 31394                           indf1	equ	0xFE7
 31395                           postinc1	equ	0xFE6
 31396                           postdec1	equ	0xFE5
 31397                           fsr1h	equ	0xFE2
 31398                           fsr1l	equ	0xFE1
 31399                           indf2	equ	0xFDF
 31400                           postinc2	equ	0xFDE
 31401                           postdec2	equ	0xFDD
 31402                           plusw2	equ	0xFDB
 31403                           fsr2h	equ	0xFDA
 31404                           fsr2l	equ	0xFD9
 31405                           status	equ	0xFD8
 31406                           
 31407                           	psect	rparam
 31408  0000                     pclatu	equ	0xFFB
 31409                           pclath	equ	0xFFA
 31410                           tblptru	equ	0xFF8
 31411                           tblptrh	equ	0xFF7
 31412                           tblptrl	equ	0xFF6
 31413                           tablat	equ	0xFF5
 31414                           prodh	equ	0xFF4
 31415                           prodl	equ	0xFF3
 31416                           intcon	equ	0xFF2
 31417                           intcon2	equ	0xFF1
 31418                           postinc0	equ	0xFEE
 31419                           fsr0h	equ	0xFEA
 31420                           fsr0l	equ	0xFE9
 31421                           wreg	equ	0xFE8
 31422                           indf1	equ	0xFE7
 31423                           postinc1	equ	0xFE6
 31424                           postdec1	equ	0xFE5
 31425                           fsr1h	equ	0xFE2
 31426                           fsr1l	equ	0xFE1
 31427                           indf2	equ	0xFDF
 31428                           postinc2	equ	0xFDE
 31429                           postdec2	equ	0xFDD
 31430                           plusw2	equ	0xFDB
 31431                           fsr2h	equ	0xFDA
 31432                           fsr2l	equ	0xFD9
 31433                           status	equ	0xFD8
 31434                           
 31435                           	psect	temp
 31436  000059                     btemp:
 31437                           	opt stack 0
 31438  000059                     	ds	1
 31439  0000                     int$flags	set	btemp
 31440                           pclatu	equ	0xFFB
 31441                           pclath	equ	0xFFA
 31442                           tblptru	equ	0xFF8
 31443                           tblptrh	equ	0xFF7
 31444                           tblptrl	equ	0xFF6
 31445                           tablat	equ	0xFF5
 31446                           prodh	equ	0xFF4
 31447                           prodl	equ	0xFF3
 31448                           intcon	equ	0xFF2
 31449                           intcon2	equ	0xFF1
 31450                           postinc0	equ	0xFEE
 31451                           fsr0h	equ	0xFEA
 31452                           fsr0l	equ	0xFE9
 31453                           wreg	equ	0xFE8
 31454                           indf1	equ	0xFE7
 31455                           postinc1	equ	0xFE6
 31456                           postdec1	equ	0xFE5
 31457                           fsr1h	equ	0xFE2
 31458                           fsr1l	equ	0xFE1
 31459                           indf2	equ	0xFDF
 31460                           postinc2	equ	0xFDE
 31461                           postdec2	equ	0xFDD
 31462                           plusw2	equ	0xFDB
 31463                           fsr2h	equ	0xFDA
 31464                           fsr2l	equ	0xFD9
 31465                           status	equ	0xFD8


Data Sizes:
    Strings     1291
    Constant    405
    Data        3
    BSS         2616
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    132     160
    BANK1           256      6     155
    BANK2           256      0     234
    BANK3           256      0     164
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK2[20]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_131(CODE[6]), STR_130(CODE[6]), STR_128(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[6]), STR_124(CODE[6]), STR_122(CODE[6]), STR_121(CODE[6]), 
		 -> STR_119(CODE[6]), STR_118(CODE[6]), STR_116(CODE[6]), STR_115(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_140(CODE[7]), normal_loop@p(CODE[6]), sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_134(CODE[26]), STR_133(CODE[32]), STR_5(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> normal_loop@str(BANK0[30]), print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    settings_loop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_get_data@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    display_char_puts@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_139(CODE[13]), STR_114(CODE[15]), STR_112(CODE[16]), STR_110(CODE[17]), 
		 -> STR_108(CODE[16]), STR_106(CODE[17]), STR_104(CODE[15]), STR_102(CODE[16]), 
		 -> STR_100(CODE[17]), STR_98(CODE[16]), STR_96(CODE[17]), STR_94(CODE[17]), 
		 -> settings_loop@str(BANK0[20]), 

    display_char_puts@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_138(CODE[15]), STR_132(CODE[17]), STR_129(CODE[17]), STR_126(CODE[17]), 
		 -> STR_123(CODE[17]), STR_120(CODE[17]), STR_117(CODE[17]), STR_113(CODE[9]), 
		 -> STR_111(CODE[9]), STR_109(CODE[9]), STR_107(CODE[9]), STR_105(CODE[9]), 
		 -> STR_103(CODE[9]), STR_101(CODE[9]), STR_99(CODE[9]), STR_97(CODE[9]), 
		 -> STR_95(CODE[9]), STR_93(CODE[9]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F9615.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_92(CODE[3]), STR_91(CODE[16]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[2]), STR_87(CODE[8]), STR_85(CODE[2]), STR_84(CODE[5]), 
		 -> STR_83(CODE[2]), STR_82(CODE[6]), STR_81(CODE[3]), STR_80(CODE[16]), 
		 -> STR_79(CODE[3]), STR_78(CODE[19]), STR_77(CODE[2]), STR_76(CODE[8]), 
		 -> STR_74(CODE[2]), STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[7]), 
		 -> STR_70(CODE[3]), STR_69(CODE[16]), STR_68(CODE[3]), STR_67(CODE[19]), 
		 -> STR_66(CODE[2]), STR_65(CODE[8]), STR_63(CODE[2]), STR_62(CODE[5]), 
		 -> STR_61(CODE[2]), STR_60(CODE[5]), STR_58(CODE[2]), STR_57(CODE[5]), 
		 -> STR_56(CODE[2]), STR_55(CODE[8]), STR_53(CODE[2]), STR_52(CODE[6]), 
		 -> STR_49(CODE[5]), STR_48(CODE[11]), STR_47(CODE[6]), STR_46(CODE[1]), 
		 -> STR_45(CODE[12]), STR_44(CODE[3]), STR_43(CODE[9]), STR_42(CODE[9]), 
		 -> STR_40(CODE[2]), STR_39(CODE[5]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[7]), STR_19(CODE[2]), STR_18(CODE[5]), STR_17(CODE[2]), 
		 -> STR_16(CODE[4]), STR_15(CODE[2]), STR_14(CODE[6]), STR_13(CODE[2]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[12]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), my_terminal_loop@op1(BANK2[20]), my_terminal_loop@op0(BANK2[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    my_utoa32@str	PTR unsigned char  size(2) Largest target is 10
		 -> display_LCD@str(BANK0[10]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> command_get_data@str(BANK0[10]), display_LCD@str(BANK0[10]), print_time_dec@str(COMRAM[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_137(CODE[13]), STR_136(CODE[17]), STR_38(CODE[16]), STR_37(CODE[12]), 
		 -> STR_27(CODE[2]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[4]), display_LCD@str(BANK0[10]), display_char(BANK2[40]), display_port@onoff(CODE[10]), 
		 -> display_port@port_char(CODE[120]), weekday_3char(CODE[28]), STR_1(CODE[3]), display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK1[4]), port(BANK1[69]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), tx_buf(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 568
		 -> STR_135(CODE[2]), normal_loop@str(BANK0[30]), STR_86(CODE[62]), STR_75(CODE[62]), 
		 -> STR_64(CODE[62]), STR_59(CODE[35]), STR_54(CODE[18]), STR_51(CODE[36]), 
		 -> STR_50(CODE[24]), STR_41(CODE[568]), STR_36(CODE[2]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), command_get_data@str(BANK0[10]), STR_32(CODE[2]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[3]), STR_28(CODE[2]), 
		 -> STR_6(CODE[8]), print_time@str(BANK0[30]), STR_4(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK2[8]), 

    S2787ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _integrating->i2___lldiv
    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _software_init->_RTCC_from_epoch
    _sleep_loop->_I2C_LCD_SetCursor
    _normal_loop->_settings_loop
    _settings_loop->_RTCC_adjust_time_dec
    _settings_loop->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _port_button_loop->_LED_OUT
    _port_button_loop->_OUT
    _display_LCD->_display_time_1602
    _my_utoa32->___llmod
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _Auto_cut->___wmul
    _my_terminal_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_time
    _ctmu_set_ratio->___lwdiv
    _command_time->_command_at_hand
    _my_atoi->___wmul
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwdiv
    ___wmul->_CTMU_read
    _RTCC_from_caltime->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _command_get_data->_ringbuf_put_num
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put_num->_ringbuf_put
    _my_utoa->___lwdiv
    ___llmod->___lldiv
    _bootload->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_ringbuf_put
    _ringbuf_put->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  545187
                          _RTCC_loop
                           _USB_loop
                           _bootload
                          _ctmu_loop
                      _hardware_init
                   _my_terminal_loop
                        _normal_loop
                         _sleep_loop
                      _software_init
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   40038
                                             53 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                     _ctmu_set_ratio
                  _display_char_puts
                        _display_now
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0    8271
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            _LED_OUT
                                _OUT
                        _display_now
                    _display_reserve
 ---------------------------------------------------------------------------------
 (2) _display_reserve                                      3     1      2     135
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                         31    31      0  178664
                                             98 BANK0     31    31      0
                           _Auto_cut
                     _RTCC_from_RTCC
                            ___lwdiv
                            ___lwmod
                        _display_LCD
                        _display_now
                   _port_button_loop
                    _ringbuf_put_str
                      _settings_loop
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _settings_loop                                       35    35      0   56306
                                             63 BANK0     35    35      0
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                  _display_char_puts
                        _display_now
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2605
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_char_puts                                    5     1      4    4010
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   23903
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   23903
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      4     0      4   11421
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _port_button_loop                                     1     1      0    2017
                                              2 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                        _display_now
 ---------------------------------------------------------------------------------
 (2) _display_now                                          1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_OUT                                              2     1      1     913
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   69508
                                             60 BANK0     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                            _my_utoa
                          _my_utoa32
 ---------------------------------------------------------------------------------
 (3) _my_utoa32                                           12     5      7    5377
                                             22 BANK0     12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   29074
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   14956
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         3     3      0    5731
                                             10 BANK0      3     3      0
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9296
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     602
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  275742
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   11     1     10  239720
                                            121 BANK0     11     1     10
                           _bootload
                   _command_get_data
                       _command_time
                     _ctmu_set_ratio
                            _my_atoi
                          _my_strcmp
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ctmu_set_ratio                                       1     1      0   15574
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8  126071
                                            112 BANK0      9     1      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4   13150
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    9242
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   65542
                                            105 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time                                          32    30      2   34609
                                             73 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    24     18   15607
                                             35 BANK0     38    20     18
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    8316
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   16157
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _epoch_to_caltime                                    16    12      4    9426
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _get_quot_rem                                         8     4      4    5856
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (4) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _command_get_data                                    18    14      4   55184
                                             50 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4   11408
                                             42 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   12810
                                             42 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _my_utoa                                              8     3      5   10265
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    2728
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1896
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    6398
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2534
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    3197
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4377
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8660
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    8660
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1526
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    4123
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _CTMU_read                                            9     7      2    3011
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    2875
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   15804
                                             42 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    5072
                                             35 BANK0      7     4      3
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2028
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7233
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    7233
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   30363
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                  _charge_time_count
                        _integrating
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _integrating                                         3     3      0     370
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (12) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _charge_time_count                                   3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                          i2_LED_OUT
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_OUT                                           2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       _ringbuf_num (ARG)
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_loop
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _command_get_data
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
         _ringbuf_put_num
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             _ringbuf_num (ARG)
         _ringbuf_put_str
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             _ringbuf_num (ARG)
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 ___lwdiv (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   ___lwmod (ARG)
                   ___wmul (ARG)
                     _ADC (ARG)
                     _ANALOG_IN (ARG)
                     _CTMU_read (ARG)
                       ___lldiv
                 ___lwmod (ARG)
                 _ringbuf_num (ARG)
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               _ringbuf_num (ARG)
         _month_length
           ___awmod
         _my_atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               _ringbuf_num (ARG)
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _my_atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _my_strcmp
       _ringbuf_put_str
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       _ringbuf_num (ARG)
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
     _ringbuf_put_str
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
   _normal_loop
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     ___lwmod
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
       _my_utoa32
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _display_now
     _port_button_loop
       _LED_OUT
       _OUT
       _display_now
     _ringbuf_put_str
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
     _settings_loop
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
       _display_char_puts
       _display_now
       _strcpy
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
       _isdigit (ARG)
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_OUT
     _OUT
     _display_now
     _display_reserve
   _software_init
     _LED_OUT
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display_char_puts
     _display_now

 _ISR (ROOT)
   _LED_indicator
     i2_LED_OUT
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _charge_time_count
   _integrating
     i2___lldiv
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      A4      12       64.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      EA      10       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      9B       7       60.5%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38A       8        0.0%
DATA                 0      0     B5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 12 20:32:21 2016

                         get_string_usb@s 006D                                _USB_SD_Ptr F987  
                            ?_display_LCD 002D                             ?_command_time 00D0  
                       _charge_time_count 6B86                  __end_of_port_button_loop 3A88  
                      __size_of_I2C_Start 0030                           _ringbuf_put_num 645E  
                            ?_display_dec 008B                           _ringbuf_put_str 68F4  
                           my_strcmp@str1 0060                             my_strcmp@str2 0062  
                            ?_display_now 002D                                        _d1 010C  
                            ___awdiv@sign 0065                                        _ms 020E  
                      __size_of_ANALOG_IN 002C                             _USBDeviceInit 37DA  
                     ___wmul@multiplicand 0078                        i2___lwdiv@dividend 002D  
                       ??_RTCC_from_epoch 0095                        __size_of_CDCInitEP 006E  
                      ?_charge_time_count 002D                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0039      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                                     l132 3850               __end_of_USBStdGetDscHandler 3D24  
                                     _ADC 7084                                       l193 6F40  
                                     l194 6F3E                                       l490 36BC  
                                     l539 73B4                                       l723 6E80  
                                     l495 3710                                       l920 73E4  
                                     l728 6CAE                                       l833 5698  
                                     l905 7074                                       l745 70A4  
                                     _BDT 000D00                                       l941 6F06  
                                     l870 262E                                       l766 6460  
                                     l871 2654                                       l872 2678  
                                     l873 269C                                       l929 6F76  
                                     l874 26C0                                       l875 26E4  
                                     l868 25E0                                       l869 2608  
                                     l993 5B6C                                       l999 50B0  
                                     _ISR 0008                                       _UIE 000F36  
                                     _UIR 000F62                                       _OUT 673A  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                           ?_display_port 002D                        caltime_to_epoch@ep 007B  
                      caltime_to_epoch@ct 0079                                _USBSuspend 71BE  
                       _RTCC_from_caltime 6FB8                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0041                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 3D24  
                              _TXSTA1bits 000FAD                            _USBDeviceState 001A  
                     ??_charge_time_count 002D                   _RTCC_adjust_time_cursor 6A1E  
                      ?_RTCC_from_caltime 0091                     ??_USBCtrlTrfRxService 002D  
                            _I2C_LCD_Putc 6EDA                              _I2C_LCD_Puts 623A  
                __size_ofi2_USBDeviceInit 0140                            ??_getsUSBUSART 006A  
                                    ?_ADC 0060                  USBEnableEndpoint@options 0035  
                 _RTCC_adjust_time_toggle 73EC                         ??_I2C_LCD_Command 0064  
                         __end_of_LED_OUT 673A                                      ?_ISR 002D  
                     command_operation@tx 00D9                    __end_of_get_string_usb 6D20  
                                    ?_OUT 0060                              _I2C_LCD_init 6B2E  
                        ?_command_at_hand 00C9                                      l1012 355C  
                                    l1100 6A56                                      l1102 6A64  
                                    l1041 6354                                      l1050 5702  
                                    l2105 6648                                      l2115 6A14  
                                    l2052 59E6                                      l1149 6D66  
                                    l2062 5FD4                                      l1094 6A2C  
                                    l1096 6A3A                                      l1089 73FC  
                                    l1098 6A48                                      l1530 040A  
                                    l1275 676A                                      l1291 66F8  
                                    l1277 6778                                      l1293 6706  
                                    l1278 6786                                      l1294 6714  
                                    l1483 0038                                      l1484 0118  
              USBConfigureEndpoint@handle 0033                                      l1469 3A48  
                                    l1494 01F8                                      l1566 32B8  
                                    l1592 523E                                      l1577 6028  
                                    l1659 1248                                      l1589 51CA  
                                    OUT@b 0061                        __CFG_WPFP$PAGE_127 000000  
                                    l7900 2708                                      l7920 27D2  
                                    l7912 2780                                      l7904 2730  
                                    l7924 27FC                                      l7916 27A8  
                                    l7908 2758                                      l7932 284E  
                                    l7928 2826                                      STR_1 FF8D  
                                    STR_2 FFD8                                      STR_3 FFD8  
                                    STR_5 FD6A                                      STR_6 FF5E  
                                    STR_7 FF2D                                      STR_8 FFF3  
                                    STR_9 FFF2                      command_at_hand@value 00CF  
                                    u8150 27BE                     ??_USBCtrlTrfTxService 002D  
                                    u8160 27E8                                      u8170 2812  
                                    u8180 283C                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 0117  
                     ??_RTCC_from_caltime 0095    USBStdFeatureReqHandler@current_ep_data 0044  
                                    _pDst 011B                                      _main 67AC  
                 __end_of_display_reserve 7440                  ??i2_USBTransferOnePacket 0031  
                button_timer_interrupt@bt 0083                             _software_init 4202  
                                    _port 0129                                      fsr0h 000FEA  
                                    fsr1h 000FE2                        i2___lwdiv@quotient 0031  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 020A  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                          __end_of_I2C_Send 73EC  
                         _USBDeviceAttach 6F12                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 745A  
                        __end_of_I2C_Stop 7454                                      pclat 000FFA  
                        __end_of_I2C_init 7426                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00F2  
                        __end_of_ADC_init 7340                             __CFG_IESO$OFF 000000  
                      __size_of_CTMU_init 0028                        __size_of_CTMU_read 00C2  
              RTCC_adjust_time_dec@i_3984 009D                __end_of_USBCheckStdRequest 470C  
                  ??_USBCtrlTrfOutHandler 002F                 __end_of_charge_time_count 6BDE  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0041  
                           _I2C_LCD_Clear 73BA                            ??_command_time 00D8  
                                   ??_ADC 0062                                     ADC@ch 0063  
                           ADC_init@p_ref 0060                                     ??_ISR 004B  
                  __size_of_I2C_IdleCheck 001E                                     ??_OUT 0061  
                ??_USBStdGetStatusHandler 002D                              print_time@tx 00A9  
                       _terminal_data_out 0028                            ?_USBDeviceInit 002D  
                    command_operation@op0 00DB                      command_operation@op1 00DD  
                    command_operation@op2 00DF                      command_operation@op3 00E1  
                      __size_ofi2_LED_OUT 0064                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10020 5D98                                     l10102 5810  
                                   l10040 5E04                                     l10032 5DE2  
                                   l10024 5DAC                                     l10016 5D88  
                                   l10104 581C                                     l10026 5DB8  
                                   l10202 2982                                     l10122 5874  
                                   l10114 5852                                     l10106 5822  
                                   l11002 57A6                                     l10028 5DBE  
                                   l10036 5DF0                                     l10052 4872  
                                   l10132 596A                                     l10134 597A  
                                   l10118 5860                                     l11102 2F74  
                                   l10144 59D4                                     l10136 5980  
                                   l10160 7384                                     l10240 5FC2  
                                   l10232 5F68                                     l10400 110E  
                                   l11200 24C4                                     l11104 2F8C  
                                   l10074 6664                                     l10234 5F78  
                                   l10250 692E                                     l10090 57DC  
                                   l10218 7236                                     l10410 1186  
                                   l10402 111A                                     l11210 2574  
                                   l11034 3B92                                     l11130 3064  
                                   l11122 3028                                     l12002 05A2  
                                   l10068 4D04                                     l10180 2890  
                                   l10156 5098                                     l10236 5F7E  
                                   l11300 1BA6                                     l10340 35CE  
                                   l10500 1404                                     l10412 1192  
                                   l10404 1120                                     l11204 2500  
                                   l12100 1F2E                                     l11220 7114  
                                   l11036 3B98                                     l11108 2FC0  
                                   l12004 05A8                                     l10078 668A  
                                   l10182 2896                                     l10246 68F6  
                                   l10342 35D2                                     l10502 1414  
                                   l10510 14C4                                     l11206 2538  
                                   l12110 1FDC                                     l11150 316C  
                                   l11134 30DA                                     l11126 3046  
                                   l11118 300E                                     l11070 2DC4  
                                   l12022 0698                                     l12030 06C0  
                                   l12014 0654                                     l10192 28FA  
                                   l11400 6E98                                     l10096 57F2  
                                   l10424 11F4                                     l10416 11A4  
                                   l10512 14E4                                     l12104 1F58  
                                   l11224 7118                                     l11216 6794  
                                   l11160 3224                                     l12024 06B0  
                                   l12032 06DC                                     l12008 05B2  
                                   l10186 28A0                                     l10194 28FE  
                                   l10522 65F8                                     l10610 700A  
                                   l11306 1C0C                                     l10346 35DA  
                                   l10434 126A                                     l10418 11BC  
                                   l10370 1002                                     l11170 22AA  
                                   l11234 7120                                     l11058 6A72  
                                   l11154 31D8                                     l11138 30F4  
                                   l11090 2E9A                                     l11082 2E76  
                                   l11074 2DE2                                     l11066 2DAA  
                                   l12042 06F2                                     l12018 065E  
                                   l12210 32C6                                     l10524 6604  
                                   l11412 6CB0                                     l10508 14AE  
                                   l10444 12AE                                     l10428 120C  
                                   l10372 1014                                     l10364 0FE4  
                                   l11180 235A                                     l12140 2156  
                                   l12132 20CE                                     l12124 207C  
                                   l12116 202A                                     l12108 1FD8  
                                   l11228 711C                                     l11244 6722  
                                   l11148 3164                                     l11156 31F0  
                                   l11260 4742                                     l12052 07AA  
                                   l12036 06E2                                     l10198 291E  
                                   l10534 663A                                     l10526 660A  
                                   l10606 6FF8                                     l10550 6A06  
                                   l10542 69D0                                     l10470 1364  
                                   l10446 12B4                                     l10390 10D6  
                                   l10382 1056                                     l11190 240A  
                                   l11174 22E6                                     l12142 2180  
                                   l12134 20D2                                     l12126 2080  
                                   l12118 202E                                     l11086 2E90  
                                   l11078 2E00                                     l11254 4714  
                                   l11350 6EAC                                     l12038 06E8  
                                   l10624 4DAA                                     l10616 4D76  
                                   l11520 70C8                                     l10544 69DC  
                                   l11336 1EE0                                     l10464 1322  
                                   l10392 10DC                                     l10376 101E  
                                   l11184 2396                                     l11168 229E  
                                   l11600 0BC0                                     l12152 21CE  
                                   l11096 2F00                                     l11272 47B6  
                                   l11352 6EB8                                     l12056 07EA  
                                   l12064 0812                                     l12048 07A0  
                                   l12072 0834                                     l12224 3360  
                                   l10802 385E                                     l10810 3872  
                                   l10546 69E2                                     l10650 6492  
                                   l10458 1300                                     l11194 2450  
                                   l11186 23CE                                     l11178 2322  
                                   l11610 0C50                                     l12146 21AA  
                                   l11098 2F08                                     l11266 4776  
                                   l12058 0802                                     l12066 082E  
                                   l10636 4E10                                     l11364 6E02  
                                   l10660 565A                                     l10468 135A  
                                   l10732 5CCA                                     l10740 5D22  
                                   l11612 0C68                                     l11604 0BFC  
                                   l11532 08B4                                     l12156 220E  
                                   l12148 21B2                                     l12164 2244  
                                   l12076 0858                                     l12236 3458  
                                   l12228 336A                                     l12332 428A  
                                   l10902 3696                                     l11382 6CEA  
                                   l11366 6E06                                     l12246 6058  
                                   l10814 3892                                     l10574 629A  
                                   l10646 6470                                     l11286 1A08  
                                   l10494 13E4                                     l10478 138A  
                                   l10486 13B2                                     l10726 5E90  
                                   l10718 5E1A                                     l11198 248C  
                                   l11622 0CF8                                     l11606 0C14  
                                   l11550 096E                                     l11534 08CC  
                                   l12254 519E                                     l12326 4262  
                                   l10920 36FA                                     l10904 36A0  
                                   l11384 6CEE                                     l11472 53C8  
                                   l11480 53E4                                     l10664 5664  
                                   l10824 3902                                     l10568 6268  
                                   l10576 62C2                                     l10584 6362  
                                   l10656 64D2                                     l10488 13BE  
                                   l10728 5E96                                     l10744 5D46  
                                   l11640 0DF4                                     l11632 0D88  
                                   l11616 0CA4                                     l11560 09EA  
                                   l11704 1532                                     l12192 3294  
                                   l12184 3272                                     l12336 4294  
                                   l10914 36C6                                     l11474 53DE  
                                   l10818 389C                                     l10586 6380  
                                   l10594 63C0                                     l10770 68DA  
                                   l10738 5D16                                     l11650 0E84  
                                   l11634 0DA0                                     l11626 0D34  
                                   l11618 0CBC                                     l11570 0A2C  
                                   l11554 0990                                     l11490 61F0  
                                   l11722 1698                                     l11706 1550  
                                   l11810 3A2C                                     l12274 520A  
                                   l12258 51A8                                     l12530 67B6  
                                   l10908 36B0                                     l10860 4920  
                                   l10692 56BA                                     l11660 0F14  
                                   l11644 0E30                                     l11628 0D4C  
                                   l11572 0A44                                     l11580 0AA0  
                                   l11548 096A                                     l10756 6B1C  
                                   l11732 170A                                     l11900 0290  
                                   l12284 5242                                     l12348 4314  
                                   l10934 373A                                     l10942 375E  
                                   l10926 3714                                     l10870 496A  
                                   l10862 492A                                     l10790 3830  
                                   l11662 0F2C                                     l11654 0EC0  
                                   l11638 0DDC                                     l11646 0E48  
                                   l11590 0B30                                     l11806 3A24  
                                   l11814 3A34                                     l11822 3A82  
                                   l11910 02C2                                     l12198 32A2  
                                   l10960 37AE                                     l10944 376A  
                                   l10952 378E                                     l11672 0FBC  
                                   l11656 0ED8                                     l11584 0ADC  
                                   l11576 0A80                                     l11680 3FB8  
                                   l11808 3A28                                     l11816 3A4C  
                                   l11904 02B2                                     l11840 005A  
                                   l10962 37B2                                     l10954 3798  
                                   l10874 499A                                     l10786 3826  
                                   l11666 0F68                                     l11594 0B6C  
                                   l11690 40B4                                     l11914 02FC  
                                   l11922 0324                                     l11906 02B8  
                                   l11850 00D8                                     l11842 0060  
                                   l10964 37D6                                     l10868 4962  
                                   l11668 0F80                                     l11588 0B18  
                                   l11692 40D6                                     l11676 3FAE  
                                   l11764 1996                                     l11932 0356  
                                   l11916 0314                                     l11860 013A  
                                   l11844 007E                                     l11828 0010  
                                   l12572 6816                                     l10878 49CC  
                                   l10894 735C                                     l11598 0BA8  
                                   l11766 19AE                                     l11774 19E8  
                                   l11790 3978                                     l11782 393E  
                                   l11926 0346                                     l11950 03E6  
                                   l11870 01B8                                     l11862 0140  
                                   l11846 009C                                     l11854 00F6  
                                   l10992 5718                                     l11936 0396  
                                   l11944 03BE                                     l11928 034C  
                                   l11864 015E                                     l11848 00BA  
                                   l12568 680E                                     l10986 7194  
                                   l10994 574E                                     l11698 14F8  
                                   l11786 3948                                     l11970 046C  
                                   l11962 043E                                     l11938 03AE  
                                   l11882 021E                                     l11866 017C  
                                   l11874 01D6                                     l10988 71A6  
                                   l11796 39C6                                     l11980 0514  
                                   l11956 0418                                     l11948 03E0  
                                   l11892 0268                                     l11884 0224  
                                   l11868 019A                                     l11990 0570  
                                   l11974 0476                                     l11894 0280  
                                   l11878 020E                                     l11984 051E  
                                   l11968 0466                                     l11888 022E  
                                   l11988 0558                                     l11996 0580  
                                   l11998 059C                 __end_of_RTCC_from_caltime 6FEE  
                                   ?_main 002D                   __size_of_put_string_usb 0040  
                          ??_get_quot_rem 007D                            ??_display_port 006A  
                         __end_of___awdiv 587E                                     _ADRES 000FC3  
                       ?_command_get_data 0092                                     STR_10 FF21  
                                   STR_11 FFDE                                     STR_12 FFC4  
                                   STR_20 FF7C                                     STR_21 FF5C  
                                   STR_13 FFF9                                     STR_30 FFF5  
                                   STR_14 FFA8                                     STR_22 FF75  
                                   STR_15 FDF4                                     STR_23 FE0C  
                                   STR_31 FFBA                                     STR_32 FFF5  
                                   STR_40 FFF7                                     STR_24 FFE3  
                                   STR_16 FFDC                                     STR_33 FFE3  
                                   STR_17 FE0E                                     STR_25 FFE6  
                                   STR_41 FAF4                                     STR_34 FFE6  
                                   STR_26 FFE9                                     STR_18 FFC9  
                                   STR_42 FF43                                     STR_50 FE10  
                                   STR_35 FFE9                                     STR_27 FF5C  
                                   STR_19 FFFD                                     STR_43 FF4C  
                                   STR_51 FD8F                                     STR_36 FF5C  
                                   STR_28 FFF5                                     STR_44 FFEF  
                                   STR_60 FFCE                                     STR_52 FFAE  
                         __end_of___awmod 5E0E                                     STR_53 FFC7  
                                   STR_61 FFFB                                     STR_29 FFE0  
                                   STR_45 FF15                                     STR_37 FF09  
                                   STR_46 FFDB                                     STR_62 FFBF  
                                   STR_70 FFD5                                     STR_38 FE91  
                                   STR_54 FE3B                                     STR_63 FFF7  
                                   STR_39 FFBF                                     STR_47 FFA2  
                                   STR_71 FF83                                     STR_55 FF66  
                                   STR_72 FFED                                     STR_56 FDF4  
                                   STR_80 FEB1                                     STR_48 FF38  
                                   STR_64 FD2C                                     STR_73 FFBF  
                                   STR_57 FFBF                                     STR_81 FFD5  
                                   STR_65 FE33                                     STR_49 FFD3  
                                   STR_74 FFF7                                     STR_58 FFF7  
                                   STR_66 FFED                                     STR_90 FFEC  
                                   STR_82 FFB4                                     STR_75 FD2C  
                                   STR_91 FEB1                                     STR_83 FFC7  
                                   STR_67 FE28                                     STR_59 FDB3  
                                   STR_84 FFBF                                     STR_92 FFD5  
                                   STR_76 FE33                                     STR_68 FFEC  
                                   STR_85 FFF7                                     STR_77 FFED  
                                   STR_93 FF55                                     STR_69 FEB1  
                                   STR_86 FD2C                                     STR_78 FE28  
                                   STR_94 FE5E                                     STR_79 FFEC  
                                   STR_95 FF55                                     STR_87 FE33  
                                   STR_96 FE5E                                     STR_88 FFED  
                                   STR_97 FF55                                     STR_89 FE28  
                                   STR_98 FEA1                                     STR_99 FF55  
       __size_of_USBCtrlEPServiceComplete 00F2                           __end_of___lldiv 59F8  
                                   u12030 11E6                                     u12300 628A  
                         ___awdiv@divisor 0062                                     u12037 11DC  
                                   u12310 62BC                                     u11600 4D52  
                         __end_of___llmod 5FE6                    __end_of_USBDeviceTasks 3E68  
                                   u11530 4CAE                                     u12307 6280  
                                   u11540 4CB0                                     u12317 62B2  
                                   u11550 4CE0                                     u12440 56F2  
                                   u14200 449C                                     u13400 6702  
                                   u11570 4CF6                                     u14210 449E  
                                   u13330 6774                                     u11580 4CF8  
                                   u12700 3686                                     u14220 44DC  
                                   u13420 6710                                     u13500 47D8  
                                   u12445 56E4                                     u13325 6764  
                                   u11590 4D50                                     u14230 44DE  
                                   u13350 6782                                     u13326 6768  
                                   _LATB2 007C52                                     u14135 3FE0  
                                   _LATA5 007C4D                                     u11568 4CE4  
                                   u12640 4910                                     u14240 451C  
                                   u14160 40A4                                     u13440 671E  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     u14250 451E  
                                   u11850 6920                                     u13370 6790  
                                   _LATB6 007C56                                     u13507 47CE  
                                   _LATB7 007C57                                     u12708 368A  
                                   u14180 445C                                     u11860 6950  
                                   u13460 54E6                                     u14190 445E  
                                   u13470 555A                                     u12648 4914  
                                   u14600 061C                                     u14520 04E0  
                                   u11857 6916                                     u11890 7080  
                                   u13490 47AA                 ?_USBCtrlEPServiceComplete 002D  
                                   u11867 6946                                     u13395 66F2  
                                   u13468 54EA                                     u13396 66F6  
                                   u11990 115A                                     u13478 555E  
                                   u15337 6F0C                                     u13497 47A0  
                                   u14618 0620                                     u14538 04E4  
                                   u13595 7330                                     u15347 6296  
                                   u13596 7332                                     u15357 73C8  
                                   u11997 1150                                     u15367 6F7C  
                                   u15377 719C                                     u15387 5684  
                                   u15397 568E                           __end_of___lwdiv 6652  
                         __end_of___lwmod 6A1E                                     i2l132 3ECE  
                                   i2l144 3D54                                     i2l218 45A0  
                                   i2l154 3DEE                                     i2l331 5932  
                                   i2l155 3E64                                     i2l156 3E00  
                                   i2l360 2B28                                     i2l281 5A06  
                                   i2l345 462A                                     i2l354 468E  
                                   i2l436 5446                                     i2l284 5A94  
                                   i2l285 5A16                                     i2l438 5484  
                                   i2l286 5A1C                                     i2l294 6D62  
                                   i2l379 2CEC                                     _UADDR 000F38  
                         ___awdiv@counter 0064                           ??_hardware_init 0069  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                        ??_command_get_data 0096  
                  __size_of_ctmu_sampling 0102                    __size_of_LED_indicator 0126  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 5F4C  
                                   _sd000 FAF0                                     _sd001 FA4A  
                                   _sd002 FA7E                      caltime_to_epoch@year 0081  
                              i2memset@p1 002D                           __end_of_dpowers F987  
                                   _colon 00F4                           ??_settings_loop 009F  
                         __end_of_isdigit 7240                        __size_of_RTCC_init 002E  
                         ?_get_string_usb 006D                        __size_of_RTCC_loop 0044  
                        ringbuf_delete@rb 0060                         __end_of_I2C_Start 7084  
                         __end_of_my_atoi 5EAE                                     tablat 000FF5  
                       __end_of_ANALOG_IN 713A                           __end_of_my_utoa 63DA  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 6888                          __end_of_USB_init 744A  
                        __end_of_USB_loop 6080                __size_of_ringbuf_backspace 008E  
                            ?_integrating 002D                                     status 000FD8  
                         __end_of_sprintf 14F2                         ?_my_terminal_loop 0192  
                        __end_ofi2_memset 7216                          __end_of_Delay_ms 71BE  
                      __size_ofi2___awdiv 0084                         month_length@month 0066  
                             CTMU_read@ch 0070                   __end_of_ringbuf_put_num 64E0  
                      __size_ofi2___lldiv 0082                   __end_of_ringbuf_put_str 6958  
                      ??_my_terminal_loop 0196                        __size_ofi2___lwdiv 0052  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00E2  
                            LED_OUT@value 0060                            ?_I2C_LCD_Clear 002D  
                         __initialization 6562                         i2___lldiv@divisor 0031  
                            __end_of_main 681A                         i2___lldiv@counter 0039  
                   _control_signal_bitmap 0124                          __end_of_Auto_cut 40DC  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@ep 008A  
                        RTCC_from_RTCC@ct 0088                RTCC_adjust_time_inc@i_3971 009D  
                ctmu_set_ratio@percentage 0083                       my_terminal_loop@op0 027A  
                     my_terminal_loop@op1 028E                       my_terminal_loop@op2 02A2  
                     my_terminal_loop@op3 02B6                       my_terminal_loop@buf 0400  
               __size_of_USBCtrlEPService 00CE                             print_time@str 00AB  
                                  ??_main 00E4                             __activetblptr 000003  
                         ?_USBDeviceTasks 002D                 ??_RTCC_adjust_time_cursor 0060  
                               ??_LED_OUT 0061                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0060                                    ISR@cnt 0121  
                       __end_of_CTMU_init 7290                         __end_of_CTMU_read 5700  
                  my_terminal_loop@i_4124 0466                              _cdc_mem_type 001E  
                                  _BCL1IF 007D0B                             _I2C_IdleCheck 7380  
                 __end_of_USBDeviceAttach 6F4A                          _CDCDataOutHandle 00F0  
                       _getsUSBUSART$1886 006B                          ___llmod@dividend 006D  
                                  STR_100 FE6F                                    STR_101 FF55  
                                  STR_110 FE6F                                    STR_102 FEC1  
                                  STR_111 FF55                                    STR_103 FF55  
                       _I2C_LCD_SetCursor 713A                                    STR_112 FEC1  
                                  STR_120 FE80                                    STR_104 FEE0  
                                  STR_113 FF55                                    STR_105 FF55  
                                  STR_121 FF9C                                    STR_130 FF9C  
                                  STR_106 FE5E                                    STR_114 FEE0  
                                  STR_122 FF8A                                    STR_131 FF8A  
                                  STR_107 FF55                                    STR_123 FE80  
                                  STR_115 FF90                                    STR_124 FF90  
                                  STR_108 FEA1                                    STR_132 FE80  
                                  STR_116 FF96                                    STR_140 FF6E  
                                  STR_125 FF96                                    STR_109 FF55  
                                  STR_117 FE80                                    STR_133 FDD6  
                                  STR_118 FF90                                    STR_126 FE80  
                                  STR_134 FDF6                                    STR_135 FDD4  
                                  STR_127 FF90                                    STR_119 FF96  
                                  STR_128 FF96                                    STR_136 FE4D  
                                  STR_129 FE80                                    STR_137 FEFC  
                                  STR_138 FED1                                    STR_139 FEEF  
                     display_time_1602@ep 0099                       display_time_1602@ct 0097  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 0178  
                                  i2l2105 6C7A                                    i2l2052 6550  
                                  i2l1291 6982                                    i2l1293 698E  
                                  i2l1294 699A                                    i2l1609 00B6  
                       __end_ofi2_LED_OUT 69BC                            __CFG_WDTEN$OFF 000000  
                                  i2l6210 617A                                    i2l6220 6E3C  
                                  i2l6224 6E4A                                    i2l7220 4346  
                                  i2l6324 5466                                    i2l6316 5434  
                                  i2l6308 5414                                    i2l6332 548E  
                                  i2l6506 4C72                                    i2l7242 43DC  
                                  i2l7226 4368                                    i2l7410 6A88  
                                  i2l6610 7204                                    i2l6276 5AF2  
                                  i2l6268 5AC8                                    i2l6452 70E2  
                                  i2l7260 4634                                    i2l7172 454A  
                                  i2l7238 43C2                                    i2l6454 70E8  
                                  i2l6710 3BE8                                    i2l6606 71F4  
                                  i2l6702 4B78                                    i2l7262 463A  
                                  i2l7432 58B2                                    i2l6288 5B4E  
                                  i2l7272 465C                                    i2l7264 4640  
                                  i2l7192 45C6                                    i2l8400 3D6A  
                                  i2l6474 4BBC                                    i2l7434 58B6  
                                  i2l6626 55C2                                    i2l7418 6AD0  
                                  i2l6458 70EE                                    i2l6802 2C00  
                                  i2l6730 3CFC                                    i2l6722 3C9A  
                                  i2l6714 3C00                                    i2l7274 4662  
                                  i2l7290 46C8                                    i2l8330 3EDC  
                                  i2l8314 3EAA                                    i2l9220 6414  
                                  i2l7452 5918                                    i2l6812 2C52  
                                  i2l6732 3D04                                    i2l6724 3CA2  
                                  i2l7276 4668                                    i2l6660 5F18  
                                  i2l9222 641C                                    i2l9214 63FE  
                                  i2l6478 4BC6                                    i2l7446 58F8  
                                  i2l6830 2CD8                                    i2l6814 2C6C  
                                  i2l7286 46AA                                    i2l7710 52A6  
                                  i2l8342 3F0E                                    i2l8318 3EB2  
                                  i2l8430 3DBC                                    i2l8414 3DA0  
                                  i2l9240 6454                                    i2l9232 643C  
                                  i2l9224 6420                                    i2l9208 63EE  
                                  i2l6488 4BF6                                    i2l6496 4C30  
                                  i2l6736 3D0C                                    i2l6680 4B02  
                                  i2l6656 5EFC                                    i2l8352 3F72  
                                  i2l8424 3DB0                                    i2l8408 3D7A  
                                  i2l6498 4C38                                    i2l6818 2C86  
                                  i2l7706 529E                                    i2l7722 5306  
                                  i2l8346 3F16                                    i2l8338 3EF0  
                                  i2l9250 6502                                    i2l9236 6446  
                                  i2l9404 41B8                                    i2l9412 41FE  
                                  i2l6844 2D4C                                    i2l6828 2CCC  
                                  i2l6748 5A3C                                    i2l6676 4AFA  
                                  i2l7724 530C                                    i2l8444 3DF8  
                                  i2l9252 650E                                    i2l6846 2D58  
                                  i2l6838 2D08                                    i2l6790 2B9E  
                                  i2l6758 5A7C                                    i2l6686 4B2E  
                                  i2l7718 52EC                                    i2l8438 3DE4  
                                  i2l9262 6542                                    i2l9254 6512  
                                  i2l9422 4E3C                                    i2l9272 6C48  
                                  i2l6776 2B24                                    i2l8464 3E44  
                                  i2l9274 6C50                                    i2l7690 6D5E  
                                  i2l7666 704C                                    i2l8466 3E60  
                                  i2l8458 3E26                                    i2l8386 3D4C  
                                  i2l8378 3D3C                                    i2l9442 6BDA  
                                  i2l9434 6B8A                                    i2l9418 4E34  
                                  i2l9284 6C70                                    i2l9276 6C54  
                                  i2l6796 2BE2                                    i2l7668 704E  
                                  i2l9428 4F04                                    i2l9198 69A6  
                                  i2l6798 2BE4                                    i2l9438 6B92  
                                  i2l9392 40E8                                    i2l9388 40E0  
                                  i2l9398 413A                                    i2l9904 0052  
                                  i2l9914 0072                                    i2l9924 0092  
                                  i2l9934 00AC                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                        ?_display_reserve 0060                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
         __size_ofi2_USBTransferOnePacket 00BA                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 73BA                             _ctmu_sampling 4426  
                           _LED_indicator 40DC                        epoch_to_caltime@ep 0083  
                      epoch_to_caltime@ct 0081                      get_string_usb@rx_len 0072  
                       _command_time$5383 00D8                         _shortPacketStatus 0027  
                     ??_I2C_LCD_SetCursor 0067                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                   __size_of_ctmu_set_ratio 00E6  
              __size_of_charge_time_count 0058                          ringbuf_put_num@i 008F  
                         USBDeviceTasks@i 004A                     caltime_to_epoch@epoch 0083  
             USBStdFeatureReqHandler@pUEP 0042                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0083                     caltime_to_epoch@month 0087  
                        __end_of_bootload 6DEC                                    ___lmul 6652  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 50B0  
                                  ___wmul 6F82                        ??_epoch_to_caltime 0085  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 3246              __end_of_RTCC_adjust_time_inc 2FE2  
                                  _d_to_x 7240                            settings_loop@i 00B7  
                          settings_loop@j 00BD                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 49D2                      ringbuf_put_num@value 008C  
                            ?_timer0_init 002D                                 ??___llmod 0075  
                       __end_of_RTCC_init 70E0                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_loop 6DAA  
                               ??___lwmod 0064                              ?_timer3_init 002D  
                            ?_normal_loop 002D                         _USBEnableEndpoint 6E2C  
         __size_of_USBStdGetStatusHandler 00BA                                    _ctmu_m 018C  
                                  _memset 6FEE                                    clear_0 656A  
                                  clear_1 657C                                    clear_2 6588  
                         put_string_usb@s 006C                                    clear_3 6594  
                                  clear_4 65A0                                    clear_5 65AC  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                      __size_of_display_LCD 0514  
                         ___awmod@counter 0064                        _ctmu_sampling_flag 0021  
                                  _x_to_d 7360                        ?_USBEnableEndpoint 0035  
                                  _rx_buf 02D2                __size_of_RTCC_from_caltime 0036  
                                  _usb_rx 02E2                                    _usb_tx 016E  
                       _command_operation 0878                                    _tx_buf 02DA  
                    __size_of_display_dec 0058                                    _strcpy 6EA2  
                    __size_of_display_now 0012                     display_port@port_char F98F  
                          i2___awdiv@sign 0032             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 0288                                 ??_isdigit 0060  
                      ?_command_operation 00D9                         __end_ofi2___awdiv 645E  
                               ?_I2C_Send 002D                      command_get_data@item 0094  
                            _CDCTxService 3662                                 ?_I2C_Stop 002D  
                       __end_ofi2___lldiv 6562                         __end_ofi2___lwdiv 6C84  
                            __mediumconst F95E                             _cut_time_flag 0022  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 7166  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                               ??_my_atoi 007E                                    tblptru 000FF8  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_my_utoa 0088  
                               ??_sprintf 0095                      __end_of_command_time 25AE  
                             _CtrlTrfData 000D38                           ??_software_init 0095  
                     display_reserve@time 0060                       ??_command_operation 00E3  
                    _controlTransferState 0020              my_terminal_loop@command_init 0127  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 65D0                              __pbssBIGRAMl 0469  
                            CTMU_read@sum 0071                             ?_millis_timer 002D  
                    __end_of_get_quot_rem 4FDC                      __end_of_display_port 557A  
                          ?_ctmu_sampling 002D                            ?_LED_indicator 002D  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 72DC                  __size_of_USBStallHandler 0046  
                      command_at_hand@max 00CE                        command_at_hand@min 00CD  
                        ?_ringbuf_put_num 008A                          ?_ringbuf_put_str 008A  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 0106                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 6E68                        i2___lldiv@dividend 002D  
                    sleep_loop@sleep_flag 0128                             __end_of_sd000 FAF4  
                           __end_of_sd001 FA7E                             __end_of_sd002 FAB2  
                            __pidataBANK1 745A          __size_of_USBCtrlEPAllowDataStage 009E  
               __end_of_command_operation 0FD6             __size_of_USBConfigureEndpoint 0094  
                       ?_port_button_loop 002D               __end_of_USBCtrlTrfInHandler 593C  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 6F4A  
                          _put_string_usb 6DEC                        ??_port_button_loop 0062  
                  i2_USBTransferOnePacket 5AB2                                 ?_USB_init 002D  
                               ?_USB_loop 002D                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$1934 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00F2                                ??_I2C_init 0060  
                               ?_Delay_ms 0060                                _cdc_tx_len 00F3  
                              ??_ADC_init 0060                caltime_to_epoch@month_3889 0082  
                ??_USBCtrlTrfSetupHandler 0047                    RTCC_adjust_time_dec@ep 0097  
                  RTCC_adjust_time_dec@ct 0095                          ?_USBDeviceAttach 002D  
                      command_get_data@tx 0092                    _USBStdGetStatusHandler 59F8  
                            sprintf@width 00A7                        i2___lldiv@quotient 0035  
                  RTCC_adjust_time_inc@ep 0097                    RTCC_adjust_time_inc@ct 0095  
                              __pbssBANK0 00E4                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                               ?_Auto_cut 002D                      display_now@pres_item 0060  
                          LED_indicator@i 0038                        __size_of_ctmu_loop 0010  
                          ??_millis_timer 002D                                 ISR@cnt_t1 0122  
                 __end_of_caltime_to_RTCC 5180                           _RTCC_to_caltime 5B6C  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00EA  
                    __size_of_integrating 00D8          __end_of_USBCtrlEPServiceComplete 461A  
                      display_char_puts@i 0064               __size_of_USBCheckCDCRequest 00CA  
                   __end_of_weekday_3char FACE                      USBCtrlTrfRxService@i 002D  
                                 ?___lmul 006D                                   ?___wmul 0076  
                                 ?_d_to_x 002D                            i2LED_OUT@value 002D  
                  __end_of_put_string_usb 6E2C                            command_time@tx 00D0  
                                 ?_memset 0060                      I2C_LCD_SetCursor@col 0069  
                          ___lmul@product 0075                                _device_dsc FACE  
                    I2C_LCD_SetCursor@row 0066                          _USBCtrlEPService 524E  
                                 ?_x_to_d 002D                              I2C_Send@data 0062  
                              _ep_data_in 000A                                   ?_strcpy 0060  
             __end_of_USBCtrlTrfRxService 4426                        _USBCheckStdRequest 461A  
                              ??_USB_init 0069                         _configDescriptor1 FA07  
                              ??_USB_loop 008A                        __size_of_my_utoa32 00C0  
                                 _LED_OUT 66C8                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                           ??_I2C_IdleCheck 0060  
                      __size_of_my_strcmp 00A4                   my_terminal_loop@command 0176  
                              ANALOG_IN@b 0060                                ??i2_memset 0033  
             __end_of_USBCtrlTrfTxService 4C7A                                ??_Delay_ms 0062  
                     _USBStdSetCfgHandler 4AB8                __size_of_I2C_LCD_SetCursor 002C  
                  I2C_LCD_SetCursor@F8672 0198                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 7454                   __end_of_RTCC_from_epoch 72FE  
                               ?_bootload 002D                      timer1_init@prescaler 0062  
                    _RTCC_adjust_time_dec 2FE2                                   _UIRbits 000F62  
                    _RTCC_adjust_time_inc 2D7E                                ??_Auto_cut 007C  
                        __CFG_CFGPLLEN$ON 000000                  ??_button_timer_interrupt 0086  
                           _cdc_trf_state 001F                           ??_ctmu_sampling 0088  
                         ??_LED_indicator 0035                 __size_of_command_get_data 04F2  
                           ?_month_length 0066                       epoch_to_caltime@day 0089  
                       RTCC_from_epoch@ep 0093                         RTCC_from_epoch@ct 0091  
                     epoch_to_caltime@num 008D                                 _I2C_Start 7054  
                                 _pCDCDst 010F                  __size_of_command_at_hand 006C  
                                 _pCDCSrc 0112                     __size_of_getsUSBUSART 00EA  
                               _ANALOG_IN 710E                                   __Hparam 0000  
                          _ctmu_set_ratio 49D2                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 681A                                   __Lparam 0000  
                            USB_loop@data 008C                                _ctmu_ratio 00F5  
                 __end_of_I2C_LCD_Command 6F82                         ringbuf_put_num@rb 008A  
                          display_LCD@str 009C                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 008A                      ??_USBCheckStdRequest 0047  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 57C0                           __size_of___lmul 0076  
                                 ___awmod 5D6C                                   ___lldiv 593C  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0036  
                                 ___llmod 5F4C                     ringbuf_put_num@digits 008E  
                                 ___lwdiv 65DA                           ?_put_string_usb 006C  
                       ??_USBStallHandler 002D                                   ___lwmod 69BC  
                         __size_of_d_to_x 0028                __size_of_command_operation 075E  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0020               epoch_to_caltime@month_cache 019A  
                                 __pcinit 6562                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FA4A  
                                 __ramtop 0F00                 __size_of_my_terminal_loop 036A  
                    __size_of_timer0_init 003A                                   _halfsec 00F7  
                    __size_of_timer1_init 0050                                   __ptext0 67AC  
                                 __ptext1 4202                                   __ptext2 5180  
                                 __ptext3 7436                                   __ptext4 3246  
                                 __ptext5 0000                                   __ptext6 6EA2  
                                 __ptext7 470C                                   __ptext8 73EC  
                                 __ptext9 2D7E                             I2C_LCD_Putc@c 0064  
                                 _inPipes 00E4                      __size_of_timer3_init 002C  
                    __size_of_normal_loop 0230                         __end_of_ctmu_loop 7436  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
                       port_button_loop@i 0062               _USBDeferOUTDataStagePackets 0018  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                        _time_change_flag 002A                          _caltime_to_epoch 2876  
                         __size_of_strcpy 0038                              __size_of_ISR 00EA  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers F95F                              ??_USBSuspend 0041  
                 __size_of_RTCC_from_RTCC 0022                     __size_of_command_time 034C  
                                 _isdigit 7216                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0469                                 _T5CONbits 000F22  
                   __end_of_hardware_init 5CC8                                   _my_atoi 5E0E  
                         i2_USBDeviceInit 3E68                          i2USBDeviceInit@i 0035  
                                 _my_utoa 6352                        __end_of_USB_CD_Ptr F98F  
                                 _sprintf 0FD6           __size_of_USBCtrlTrfSetupHandler 008A  
                 __end_of_RTCC_to_caltime 5C22                     ?_RTCC_adjust_time_dec 0095  
                   ?_RTCC_adjust_time_inc 0095                     __size_of_get_quot_rem 00D4  
                   __size_of_display_port 00C8                      end_of_initialization 65D0  
                            _getsUSBUSART 48E8                                ??_bootload 006A  
                               _CTMU_init 7268                                 _CTMU_read 563E  
                   __end_of_settings_loop 0878                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr F98D                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 0012                            ??_month_length 0067  
                          display_dec@dec 0096                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 008C           _dummy_encapsulated_cmd_response 02CA  
                  _terminal_data_out_flag 0029                    __end_of_ctmu_set_ratio 4AB8  
                             sleep_loop@i 006A                                 i2u1034_45 697C  
                         _pres_print_item 00F8                                 i2u1034_46 6980  
                               i2u1035_40 698A                                 i2u1037_40 6996  
                ?_USBStdFeatureReqHandler 002D                                 i2u1039_40 69A2  
                               i2u1075_40 6BB8                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                                 i2_LED_OUT 6958  
                       __end_of_my_utoa32 57C0                     ??_USBStdSetCfgHandler 0041  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002D  
                    timer3_init@prescaler 0061                         __end_of_my_strcmp 5D6C  
                              ?_CDCInitEP 002D                           ___lldiv@counter 006C  
                       ?_is_usb_available 002D                        __end_of_USBSuspend 71EA  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 5EAE  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_loop 5180  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                           _next_print_item 0125  
                            _command_time 2262                  _USBCtrlEPServiceComplete 4528  
              _USBStatusStageEnabledFlag1 001B                _USBStatusStageEnabledFlag2 001C  
                      USBEnableEndpoint@p 0036                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 70B2                      __end_of_millis_timer 72DC  
                               _RTCC_loop 6D66                              _display_char 0252  
                            _display_flag 0023                                _print_data 00F9  
               epoch_to_caltime@day_cache 011D                              _get_quot_rem 4F08  
                            _display_port 54B2                                _print_time 6080  
                              _print_port 00FA                            _ringbuf_delete 7290  
               __size_of_epoch_to_caltime 01EC                          __CFG_CPUDIV$OSC1 000000  
                     RTCC_from_caltime@ep 0093                       RTCC_from_caltime@ct 0091  
                      _BothEP0OutUOWNsSet 0015                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                 i2___awdiv 63DA  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0032  
                       i2___lwdiv@divisor 002F                                 i2___lldiv 64E0  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002D  
                               i2___lwdiv 6C32                         i2___lwdiv@counter 0033  
                        ?_RTCC_from_epoch 0091                                ?_CTMU_init 002D  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                                 Auto_cut@i 007E  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 4E30                       command_at_hand@hand 00CB  
                         ?_ctmu_set_ratio 002D                          __CFG_IOL1WAY$OFF 000000  
                      i2___awdiv@dividend 002D                                ?i2_LED_OUT 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0109                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 62C8  
                           ??_display_LCD 009C                  __size_of_display_reserve 000A  
                          ringbuf_pop@ret 006E                             ??_display_dec 008C  
                 ?i2_USBTransferOnePacket 002D                             ??_display_now 0060  
                   __end_of_USBDeviceInit 3938                            __end_of___lmul 66C8  
                       ??_command_at_hand 00D0                  ?_RTCC_adjust_time_cursor 002D  
                          __end_of___wmul 6FB8                              integrating@i 003C  
                          __end_of_d_to_x 7268                  ?_RTCC_adjust_time_toggle 002D  
                 __end_ofi2_USBDeviceInit 3FA8                    __end_of_ringbuf_delete 72B6  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 7022  
                              ?_RTCC_init 002D                                ?_RTCC_loop 002D  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0123  
                          __end_of_x_to_d 7380                     epoch_to_caltime@month 008C  
                          __end_of_strcpy 6EDA                       start_initialization 6562  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ADC 70B2  
                      i2___awdiv@quotient 0033                               __end_of_ISR 00F2  
           USBCtrlTrfRxService@byteToRead 002E                               __end_of_OUT 67AC  
                       __size_of_USB_init 000A                         __size_of_USB_loop 009A  
                           ?_I2C_LCD_Putc 002D                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0099                    ??_RTCC_adjust_time_inc 0099  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0212  
                             _cdc_data_tx 0364                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 61AC  
                      my_terminal_loop@rx 0194                        my_terminal_loop@tx 0192  
                       __size_of_Delay_ms 002C                                ?i2___lldiv 002D  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_loop 0150  
                              ?i2___lwdiv 002D           __end_of_USBStdFeatureReqHandler 2D7E  
       __end_of_USBCtrlEPAllowStatusStage 563E                          _command_get_data 1A06  
                   __end_of_software_init 431A                  __end_of_USBCtrlEPService 531C  
                         ___llmod@divisor 0071                     my_terminal_loop@ascii 0467  
                       __size_of_Auto_cut 0134                               ??_I2C_Start 0063  
                         ___llmod@counter 0075                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0039  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 73D4  
                  _pBDTEntryEP0OutCurrent 0010                              _ctmu_value_m 0119  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 5B6C                       ringbuf_put_num@temp 0090  
                                ??___lmul 0075                               ?_sleep_loop 002D  
                                ??___wmul 007A                            USB_loop@rx_len 008A  
                     _USBStdGetDscHandler 3BD6                                  ??_d_to_x 0068  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 0198  
                                ??_memset 0066                       command_get_data@str 0096  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 25AE                          _my_terminal_loop 1EF8  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcpy 0064                      __end_of_month_length 4D58  
                          _RTCC_from_RTCC 72FE                       __end_of_display_LCD 1A06  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 5AB2  
                             ?_print_time 00A9                                  ?_LED_OUT 0060  
                     __end_of_display_dec 6B2E                       __end_of_display_now 7414  
                             __pbssCOMRAM 0001                         command_at_hand@tx 00C9  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0192              __size_of_USBCtrlTrfInHandler 00BE  
                           __pcstackBANK4 0400                            ??_I2C_LCD_Putc 0064  
                          ??_I2C_LCD_Puts 0066                                  LED_OUT@b 0061  
                          ??_I2C_LCD_init 0067                     _command_get_data$5385 00A0  
                             _caltime_now 017E                      __end_of_ringbuf_init 6C32  
                    ?_USBStdGetDscHandler 002D                              _isdigit$4789 0061  
                                ?_USB_ISR 002D                       settings_loop@i_4441 00B8  
                     settings_loop@i_4450 00BA                       settings_loop@i_4460 00BC  
                     settings_loop@i_4445 00B9                       settings_loop@i_4455 00BB  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
                     settings_loop@j_4454 00BE                       settings_loop@j_4459 00BF  
                   display_char_puts@str0 0060                     display_char_puts@str1 0062  
                          normal_loop@str 00C2                __end_of_USBWakeFromSuspend 7054  
                           ??_integrating 003A                               sprintf@flag 00A5  
                   RTCC_adjust_time_dec@i 009E                         command_get_data@i 0095  
                       __size_of_bootload 0042                               sprintf@prec 0099  
                         _USBStallHandler 6D20                              _pBDTEntryOut 0100  
                   RTCC_adjust_time_inc@i 009E                __end_of_USBCheckCDCRequest 54B2  
                __end_of_caltime_to_epoch 2AFE                               ??i2_LED_OUT 002E  
                         millis_timer@cnt 011F                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 6A7A                         settings_loop@strp 00C0  
                               _edit_flag 00F6                           _settings_select 00FB  
                               __pintcode 0008           __end_of_RTCC_adjust_time_toggle 7402  
                           __pmediumconst F95E                         _display_char_puts 470C  
                                ?___awdiv 0060                                 __ptext101 72B6  
                               __ptext110 6D20                                 __ptext102 4E30  
                               __ptext111 524E                                 __ptext103 64E0  
                               __ptext120 2AFE                                 __ptext112 62C8  
                               __ptext104 6B86                                 __ptext121 70E0  
                               __ptext113 4528                                 __ptext105 7454  
                               __ptext130 587E                                 __ptext122 53E8  
                               __ptext114 5EAE                                 __ptext106 3D24  
                               __ptext131 4B9A                                 __ptext123 681A  
                               __ptext115 461A                                 __ptext107 3E68  
                               __ptext132 40DC                                 __ptext124 5AB2  
                               __ptext116 4AB8                                 __ptext108 7022  
                               __ptext133 6C32                                 __ptext125 6E2C  
                               __ptext117 71EA                                 __ptext109 71BE  
                               __ptext134 63DA                                 __ptext126 6118  
                               __ptext118 59F8                                 __ptext135 6958  
                               __ptext127 6A7A                                 __ptext119 3BD6  
                               __ptext128 431A                                 __ptext129 557A  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                        charge_time_count@i 002F  
                                ?___llmod 006D                                  ?___lwdiv 007C  
                   _is_usb_available$2010 0060                      __end_ofnormal_loop@p FAF0  
                                ?___lwmod 0060                           I2C_LCD_Putc@ans 0065  
                      ?_display_char_puts 0060                    __end_of_RTCC_from_RTCC 7320  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 0115                               ??_RTCC_init 0060  
                             ??_RTCC_loop 008C                           command_time@op0 00D2  
                         command_time@op1 00D4                           command_time@op2 00D6  
                    _USBTransferOnePacket 4D58                         ??_display_reserve 0062  
                               _epoch_now 00FC                               I2C_Start@rw 0062  
                                ?_isdigit 002D                          _epoch_to_caltime 3476  
                                _I2C_Send 73D4                                  OUT@value 0060  
                                _I2C_Stop 744A                       ??_display_char_puts 0064  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_init 7414  
                        _display_LCD$5384 00A6                                 _ctmu_loop 7426  
                                ?_my_atoi 007C                                  _ADC_init 7320  
                   __end_of_I2C_IdleCheck 739E                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 6AD6                                  ?_my_utoa 0083  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002D  
                             _ep_data_out 000D                     _my_terminal_loop$5382 0464  
                        ___lwdiv@quotient 0081               command_operation@percentage 00E3  
                             ??i2___awdiv 0031                                  ?_sprintf 0083  
                             ??i2___lldiv 0035              __size_of_USBCtrlTrfRxService 010C  
                              my_atoi@ret 0082             USBConfigureEndpoint@direction 002D  
                              my_atoi@str 007C                               ??i2___lwdiv 0031  
                     __size_of_sleep_loop 00CE                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 4528  
                   __end_of_LED_indicator 4202                              _millis_timer 72B6  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                         my_utoa32@digits 007C                       __size_of_print_time 0098  
               __end_of_display_char_puts 47FA                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u614_40 4C20  
                                i2u614_47 4C16                                  i2u616_40 4C62  
                                i2u616_47 4C58                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 0126                                  i2u643_40 3C5E  
                                i2u643_47 3C54                                  i2u644_40 3C94  
                                i2u644_47 3C8A                                  i2u646_40 3CF0  
                                i2u646_47 3CE6                 USBCtrlEPService@setup_cnt 0049  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 0086                       __end_of_integrating 4F08  
                                _RCONbits 000FD0                         _display_time_1602 3A88  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 0017                                 _my_utoa32 5700  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                                my_utoa32@d 007D  
                             _display_LCD 14F2                                my_utoa32@v 007E  
                           ??_timer3_init 0060                             ??_normal_loop 00C2  
                               _my_strcmp 5CC8                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 0097  
                             _display_dec 6AD6                      _USBConfigureEndpoint 6118  
                             _display_now 7402                           ?_RTCC_from_RTCC 0088  
                              my_utoa@str 0083          __size_of_USBStdFeatureReqHandler 0280  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0076                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                            software_init@i 0095  
          button_timer_interrupt@sw_value 0085                                  _USB_init 7440  
                                _USB_loop 5FE6                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002D                       ??_display_time_1602 009B  
                            _RemoteWakeup 0016                         i2___awdiv@divisor 002F  
                                i2_memset 71EA                          __size_of_LED_OUT 0072  
                                _Delay_ms 7192                         i2___awdiv@counter 0031  
                              ?_ctmu_loop 002D                         ??_ringbuf_put_num 008F  
                       ??_ringbuf_put_str 008E                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 6D66  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0083  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                  display_reserve@next_item 0062  
                        _port_button_loop 3938               ??_USBCtrlEPAllowStatusStage 002D  
             __end_of_USBStdSetCfgHandler 4B9A                          __size_of_USB_ISR 0006  
                                _Auto_cut 3FA8                      epoch_to_caltime@year 008B  
                 __size_of_get_string_usb 004C                         my_terminal_loop@i 0468  
                         _command_at_hand 6888                        __end_of_device_dsc FAE0  
                 ?_USBCtrlTrfSetupHandler 002D                 __end_of_display_time_1602 3BD6  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                    __end_of_I2C_LCD_Putc 6F12                      __end_of_I2C_LCD_Puts 62C8  
                                _SetupPkt 000D30                             _weekday_3char FAB2  
                  __size_of_hardware_init 00A6                      __end_of_I2C_LCD_init 6B86  
                              ?_my_utoa32 0076                     __size_of_month_length 00DE  
                              ?_my_strcmp 0060                        ringbuf_put_str@str 008C  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D0  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                __end_of_command_get_data 1EF8                    __size_of_settings_loop 0878  
                     __end_of_ringbuf_pop 53E8                       __end_of_ringbuf_num 48E8  
                     __end_of_ringbuf_put 50B0                       __end_of_putUSBUSART 7360  
                             _line_coding 0185                            ??_CDCTxService 0067  
                     __end_of_timer0_init 6EA2                     __size_of_ringbuf_init 0054  
                       display_port@onoff FAE0                       __end_of_timer1_init 6CD4  
                              sprintf@len 009F                       __end_of_timer3_init 7192  
                     __end_of_normal_loop 3476                                sprintf@val 00A1  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                              i2LED_OUT@b 002E                          settings_loop@str 00A3  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                          _settings_state 0026                      timer0_init@prescaler 0061  
                                __ptext10 2FE2                                  __ptext11 72DC  
                                __ptext20 6EDA                                  __ptext12 6A1E  
                                __ptext21 54B2                                  __ptext13 3938  
                                __ptext30 49D2                                  __ptext22 3FA8  
                                __ptext14 7402                                  __ptext31 2262  
                                __ptext23 673A                                  __ptext15 66C8  
                                __ptext40 3476                                  __ptext32 5CC8  
                                __ptext24 710E                                  __ptext16 14F2  
                                __ptext41 4F08                                  __ptext33 5E0E  
                                __ptext25 7084                                  __ptext17 5700  
                                __ptext50 5F4C                                  __ptext42 50B0  
                                __ptext34 6888                                  __ptext26 1EF8  
                                __ptext18 3A88                                  __ptext51 6DAA  
                                __ptext43 7240                                  __ptext35 6080  
                                __ptext27 7290                                  __ptext19 6AD6  
                                __ptext60 37DA                                  __ptext52 713A  
                                __ptext44 57C0                                  __ptext36 0FD6  
                                __ptext28 61AC                                  __ptext61 6FEE  
                                __ptext53 623A                                  __ptext45 1A06  
                                __ptext37 7216                                  __ptext29 0878  
                                __ptext70 73D4                                  __ptext62 6F12  
                                __ptext54 5C22                                  __ptext46 68F4  
                                __ptext38 6F82                                  __ptext71 7380  
                                __ptext63 70B2                                  __ptext55 7166  
                                __ptext47 645E                                  __ptext39 6FB8  
                                __ptext80 593C                                  __ptext72 7192  
                                __ptext64 7414                                  __ptext56 6C84  
                                __ptext48 6352                                  __ptext81 5FE6  
                                __ptext73 7268                                  __ptext65 6B2E  
                                __ptext57 6E68                                  __ptext49 69BC  
                                __ptext90 3662                                  __ptext82 4FDC  
                                __ptext74 7320                                  __ptext66 73BA  
                                __ptext58 6BDE                                  __ptext91 4D58  
                                __ptext83 531C                                  __ptext75 7426  
                                __ptext67 6F4A                                  __ptext59 7440  
                                __ptext92 6D66                                  __ptext84 47FA  
                                __ptext76 4426                                  __ptext68 744A  
                                __ptext93 72FE                                  __ptext85 6DEC  
                                __ptext77 25AE                                  __ptext69 7054  
                                __ptext94 2876                                  __ptext86 7340  
                                __ptext78 65DA                                  __ptext95 4C7A  
                                __ptext87 6CD4                                  __ptext79 563E  
                                __ptext96 5D6C                                  __ptext88 739E  
                                __ptext97 6652                                  __ptext89 48E8  
                                __ptext98 5B6C                                  __ptext99 7360  
                        __size_of_my_atoi 00A0                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 005C                          __size_of_my_utoa 0088  
        __size_of_RTCC_adjust_time_toggle 0016                                  _bootload 6DAA  
                        __size_of_sprintf 051C                     RTCC_loop@prev_halfsec 0014  
                              strcpy@from 0062                  __end_of_my_terminal_loop 2262  
                             _integrating 4E30            __end_of_USBCtrlTrfSetupHandler 6352  
                           __size_of_main 006E                         ?_USBCtrlEPService 002D  
                            _month_length 4C7A                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0047                __size_of_display_char_puts 00EE  
                __size_of_RTCC_from_epoch 0022                       _USBCtrlTrfInHandler 587E  
                          my_utoa32@value 0078                              ??_sleep_loop 006A  
                                _outPipes 0001                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 0083                      _USBCtrlTrfOutHandler 6A7A  
                                int$flags 0059                              _ringbuf_init 6BDE  
               _USBCtrlEPAllowStatusStage 557A             __end_ofdisplay_port@port_char FA07  
                               x_to_d@hex 0061                    ??_USBTransferOnePacket 0064  
               __end_ofdisplay_port@onoff FAEA                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0019                              ??_print_time 00AB  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 0085  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_loop 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                              Delay_ms@ms 0060                           display_dec@edit 008B  
                           _hardware_init 5C22                                  isdigit@c 0062  
                                memset@p1 0060                   __end_of_command_at_hand 68F4  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                         RTCC_to_caltime@ct 0062  
           __size_of_RTCC_adjust_time_dec 0264                              normal_loop@i 00E0  
           __size_of_RTCC_adjust_time_inc 0264                                  intlevel2 0000  
                            normal_loop@p FAEA                                 sprintf@ap 009D  
                               sprintf@cp 009B                        __end_of_sleep_loop 524E  
                               sprintf@sp 0083                    __size_of_USBDeviceInit 015E  
                           _settings_flag 0025                             _settings_loop 0000  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 710E  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         _USER_USB_CALLBACK_EVENT_HANDLER 70E0                          ___lwmod@dividend 0060  
            i2USBTransferOnePacket@handle 0032                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 0079  
                       _ringbuf_backspace 61AC                __size_of_display_time_1602 014E  
                __end_of_epoch_to_caltime 3662                  __size_of_RTCC_to_caltime 00B6  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 2876  
                      __end_of_print_time 6118                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007D                        ?_ringbuf_backspace 0068  
                         _display_reserve 7436                    ??_USBConfigureEndpoint 002E  
                                my_utoa@d 0088                     ?_USBCtrlTrfOutHandler 002D  
                                my_utoa@v 0089                               _ringbuf_pop 531C  
                             _ringbuf_num 47FA                               _ringbuf_put 4FDC  
                             ??_my_utoa32 007D                               _putUSBUSART 7340  
                             ??_my_strcmp 0064                       _USBCtrlTrfRxService 431A  
                             _timer0_init 6E68                        _USBWakeFromSuspend 7022  
                             _timer1_init 6C84                               _timer3_init 7166  
                             _normal_loop 3246                   _USBStdFeatureReqHandler 2AFE  
                      _USBCheckCDCRequest 53E8                       _USBCtrlTrfTxService 4B9A  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                  __size_of_software_init 0118                                  sprintf@c 00A6  
                                sprintf@f 0085                       ?_USBWakeFromSuspend 002D  
                        _is_usb_available 739E                          ___lldiv@quotient 0068  
                       caltime_to_RTCC@ct 0069                           ___lwmod@divisor 0062  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 0190                           ___lwmod@counter 0064  
                     ?_USBCheckCDCRequest 002D                            ?_hardware_init 002D  
               i2USBTransferOnePacket@dir 002D                              my_utoa32@str 0076  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 0024                    __size_of_I2C_LCD_Clear 001A  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0087  
                           ?_getsUSBUSART 0067                            ?_settings_loop 002D  
                ?_USBCtrlEPAllowDataStage 002D                            _get_string_usb 6CD4  
                    ?_USBCtrlTrfTxService 002D                             my_utoa@digits 0087  
               __end_of_ringbuf_backspace 623A              _USBStatusStageTimeoutCounter 001D  
                   __size_of_I2C_LCD_Putc 0038                     __size_of_I2C_LCD_Puts 008E  
                   __size_of_I2C_LCD_init 0058                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 37DA  
                            my_utoa@value 0085                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr F98D                          ??_RTCC_from_RTCC 008C  
