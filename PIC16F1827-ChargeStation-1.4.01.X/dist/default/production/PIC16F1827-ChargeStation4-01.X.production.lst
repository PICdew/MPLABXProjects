

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 12 02:25:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021C                     	;# 
   168  021D                     	;# 
   169  021E                     	;# 
   170  021F                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  0FE4                     	;# 
   212  0FE5                     	;# 
   213  0FE6                     	;# 
   214  0FE7                     	;# 
   215  0FE8                     	;# 
   216  0FE9                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222                           
   223                           	psect	idataBANK1
   224  0002                     __pidataBANK1:	
   225                           
   226                           ;initializer for LCD_SetCursor@F2883
   227  0002  3400               	retlw	0
   228  0003  3440               	retlw	64
   229  000B                     _INTCONbits	set	11
   230  0011                     _PIR1bits	set	17
   231  0018                     _T1CONbits	set	24
   232  0017                     _TMR1H	set	23
   233  0016                     _TMR1L	set	22
   234  0093                     _BCL1IF	set	147
   235  0063                     _RA3	set	99
   236  0064                     _RA4	set	100
   237  0065                     _RA5	set	101
   238  008B                     _SSP1IF	set	139
   239  008C                     _TXIF	set	140
   240  009B                     _ADRES	set	155
   241  009D                     _ADCON0bits	set	157
   242  009E                     _ADCON1bits	set	158
   243  0095                     _OPTION_REGbits	set	149
   244  0099                     _OSCCON	set	153
   245  0091                     _PIE1bits	set	145
   246  008C                     _TRISA	set	140
   247  008D                     _TRISB	set	141
   248  048C                     _TXIE	set	1164
   249  0117                     _FVRCON	set	279
   250  0866                     _LATA6	set	2150
   251  0867                     _LATA7	set	2151
   252  0868                     _LATB0	set	2152
   253  086B                     _LATB3	set	2155
   254  086D                     _LATB5	set	2157
   255  086E                     _LATB6	set	2158
   256  018C                     _ANSELA	set	396
   257  018D                     _ANSELB	set	397
   258  019D                     _RCSTA	set	413
   259  019C                     _SPBRGH	set	412
   260  019B                     _SPBRGL	set	411
   261  019A                     _TXREG	set	410
   262  019E                     _TXSTA	set	414
   263  0CFB                     _BRG16	set	3323
   264  0CEF                     _SPEN	set	3311
   265  0212                     _SSP1ADD	set	530
   266  0211                     _SSP1BUF	set	529
   267  0215                     _SSP1CON1	set	533
   268  0216                     _SSP1CON2	set	534
   269  0216                     _SSP1CON2bits	set	534
   270  0214                     _SSP1STAT	set	532
   271  020D                     _WPUB	set	525
   272                           
   273                           	psect	stringtext
   274  0800                     __pstringtext:	
   275  0800                     __stringdata:	
   276  0800                     STR_13:	
   277  0800  3452               	retlw	82	;'R'
   278  0801  3465               	retlw	101	;'e'
   279  0802  3473               	retlw	115	;'s'
   280  0803  3465               	retlw	101	;'e'
   281  0804  3474               	retlw	116	;'t'
   282  0805  3465               	retlw	101	;'e'
   283  0806  3464               	retlw	100	;'d'
   284  0807  3400               	retlw	0
   285  0808                     STR_2:	
   286  0808  3453               	retlw	83	;'S'
   287  0809  3474               	retlw	116	;'t'
   288  080A  3461               	retlw	97	;'a'
   289  080B  3474               	retlw	116	;'t'
   290  080C  3469               	retlw	105	;'i'
   291  080D  346F               	retlw	111	;'o'
   292  080E  346E               	retlw	110	;'n'
   293  080F  3400               	retlw	0
   294  0810                     STR_1:	
   295  0810  3443               	retlw	67	;'C'
   296  0811  3468               	retlw	104	;'h'
   297  0812  3461               	retlw	97	;'a'
   298  0813  3472               	retlw	114	;'r'
   299  0814  3467               	retlw	103	;'g'
   300  0815  3465               	retlw	101	;'e'
   301  0816  3400               	retlw	0
   302  0817                     STR_4:	
   303  0817  3443               	retlw	67	;'C'
   304  0818  3465               	retlw	101	;'e'
   305  0819  346E               	retlw	110	;'n'
   306  081A  3474               	retlw	116	;'t'
   307  081B  3465               	retlw	101	;'e'
   308  081C  3472               	retlw	114	;'r'
   309  081D  3400               	retlw	0
   310  081E                     STR_3:	
   311  081E  3452               	retlw	82	;'R'
   312  081F  3469               	retlw	105	;'i'
   313  0820  3467               	retlw	103	;'g'
   314  0821  3468               	retlw	104	;'h'
   315  0822  3474               	retlw	116	;'t'
   316  0823  3400               	retlw	0
   317  0824                     STR_5:	
   318  0824  344C               	retlw	76	;'L'
   319  0825  3465               	retlw	101	;'e'
   320  0826  3466               	retlw	102	;'f'
   321  0827  3474               	retlw	116	;'t'
   322  0828  3400               	retlw	0
   323  0829                     STR_9:	
   324  0829  346D               	retlw	109	;'m'
   325  082A  3441               	retlw	65	;'A'
   326  082B  3468               	retlw	104	;'h'
   327  082C  3400               	retlw	0
   328  082D                     __end_of__stringdata:	
   329                           
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  0211                     start_initialization:	
   334  0211                     __initialization:	
   335                           
   336                           ; Clear objects allocated to BANK0
   337  0211  3020               	movlw	low __pbssBANK0
   338  0212  0084               	movwf	4
   339  0213  3000               	movlw	high __pbssBANK0
   340  0214  0085               	movwf	5
   341  0215  301B               	movlw	27
   342  0216  318A  22EE  3182   	fcall	clear_ram0
   343                           
   344                           ; Clear objects allocated to BANK1
   345  0219  30BA               	movlw	low __pbssBANK1
   346  021A  0084               	movwf	4
   347  021B  3000               	movlw	high __pbssBANK1
   348  021C  0085               	movwf	5
   349  021D  3016               	movlw	22
   350  021E  318A  22EE  3182   	fcall	clear_ram0
   351                           
   352                           ; Clear objects allocated to BANK2
   353  0221  3057               	movlw	low __pbssBANK2
   354  0222  0084               	movwf	4
   355  0223  3001               	movlw	high __pbssBANK2
   356  0224  0085               	movwf	5
   357  0225  300C               	movlw	12
   358  0226  318A  22EE  3182   	fcall	clear_ram0
   359                           
   360                           ; Initialize objects allocated to BANK1
   361  0229  0021               	movlb	1	; select bank1
   362  022A  3180  2002  3182   	fcall	__pidataBANK1	;fetch initializer
   363  022D  00D0               	movwf	__pdataBANK1& (0+127)
   364  022E  3180  2003         	fcall	__pidataBANK1+1	;fetch initializer
   365  0230  00D1               	movwf	(__pdataBANK1+1)& (0+127)
   366  0231                     end_of_initialization:	
   367                           ;End of C runtime variable initialization code
   368                           
   369  0231                     __end_of__initialization:	
   370  0231  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   371  0232  0020               	movlb	0
   372  0233  3184  2C27         	ljmp	_main	;jump to C main() function
   373                           
   374                           	psect	bssBANK0
   375  0020                     __pbssBANK0:	
   376  0020                     _s:	
   377  0020                     	ds	6
   378  0026                     _v:	
   379  0026                     	ds	6
   380  002C                     _cnt0:	
   381  002C                     	ds	2
   382  002E                     _cnt1s:	
   383  002E                     	ds	2
   384  0030                     _print_content:	
   385  0030                     	ds	1
   386  0031                     _print_port:	
   387  0031                     	ds	1
   388  0032                     _sw_RA3:	
   389  0032                     	ds	3
   390  0035                     _sw_RA4:	
   391  0035                     	ds	3
   392  0038                     _sw_RA5:	
   393  0038                     	ds	3
   394                           
   395                           	psect	bssBANK1
   396  00BA                     __pbssBANK1:	
   397  00BA                     _ss:	
   398  00BA                     	ds	12
   399  00C6                     _cnt:	
   400  00C6                     	ds	3
   401  00C9                     _cntf:	
   402  00C9                     	ds	3
   403  00CC                     _tx_buf:	
   404  00CC                     	ds	4
   405                           
   406                           	psect	dataBANK1
   407  00D0                     __pdataBANK1:	
   408  00D0                     LCD_SetCursor@F2883:	
   409  00D0                     	ds	2
   410                           
   411                           	psect	bssBANK2
   412  0157                     __pbssBANK2:	
   413  0157                     _cut:	
   414  0157                     	ds	6
   415  015D                     _sp:	
   416  015D                     	ds	6
   417                           
   418                           	psect	clrtext
   419  0AEE                     clear_ram0:	
   420                           ;	Called with FSR0 containing the base address, and
   421                           ;	WREG with the size to clear
   422                           
   423  0AEE  0064               	clrwdt	;clear the watchdog before getting into this loop
   424  0AEF                     clrloop0:	
   425  0AEF  0180               	clrf	0	;clear RAM location pointed to by FSR
   426  0AF0  3101               	addfsr 0,1
   427  0AF1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   428  0AF2  2AEF               	goto	clrloop0	;have we reached the end yet?
   429  0AF3  3400               	retlw	0	;all done for this memory range, return
   430                           
   431                           	psect	cstackBANK2
   432  0120                     __pcstackBANK2:	
   433  0120                     main@ringbuf:	
   434                           
   435                           ; 50 bytes @ 0x0
   436  0120                     	ds	50
   437  0152                     main@data_0:	
   438                           
   439                           ; 1 bytes @ 0x32
   440  0152                     	ds	1
   441  0153                     main@data_1:	
   442                           
   443                           ; 1 bytes @ 0x33
   444  0153                     	ds	1
   445  0154                     main@data_2:	
   446                           
   447                           ; 1 bytes @ 0x34
   448  0154                     	ds	1
   449  0155                     main@data_3:	
   450                           
   451                           ; 1 bytes @ 0x35
   452  0155                     	ds	1
   453  0156                     main@i:	
   454                           
   455                           ; 1 bytes @ 0x36
   456  0156                     	ds	1
   457                           
   458                           	psect	cstackBANK1
   459  00A0                     __pcstackBANK1:	
   460  00A0                     ?_OUT:	
   461  00A0                     ?_LED:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  00A0                     ??_timer0_init:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  00A0                     ??_timer1_init:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  00A0                     ??_adc_init:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  00A0                     ?_ringbuf_init:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  00A0                     ??_I2C_IdleCheck:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  00A0                     ??_I2C_init:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  00A0                     ?_flag_clear:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  00A0                     ?_flag_read:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  00A0                     adc_init@p_ref:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  00A0                     ringbuf_init@internal_buf:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  00A0                     OUT@value:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  00A0                     LED@value:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  00A0                     flag_read@bit_and:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  00A0                     flag_clear@bit_and:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 1 bytes @ 0x0
   508  00A0                     	ds	1
   509  00A1                     ??_OUT:	
   510  00A1                     ??_LED:	
   511                           ; 0 bytes @ 0x1
   512                           
   513  00A1                     ??_flag_read:	
   514                           ; 0 bytes @ 0x1
   515                           
   516  00A1                     ??_flag_clear:	
   517                           ; 0 bytes @ 0x1
   518                           
   519  00A1                     timer0_init@prescaler:	
   520                           ; 0 bytes @ 0x1
   521                           
   522  00A1                     timer1_init@prescaler:	
   523                           ; 1 bytes @ 0x1
   524                           
   525  00A1                     ringbuf_init@bufsize:	
   526                           ; 1 bytes @ 0x1
   527                           
   528  00A1                     I2C_IdleCheck@mask:	
   529                           ; 1 bytes @ 0x1
   530                           
   531  00A1                     OUT@b:	
   532                           ; 1 bytes @ 0x1
   533                           
   534  00A1                     LED@b:	
   535                           ; 1 bytes @ 0x1
   536                           
   537  00A1                     flag_read@port:	
   538                           ; 1 bytes @ 0x1
   539                           
   540                           
   541                           ; 1 bytes @ 0x1
   542  00A1                     	ds	1
   543  00A2                     ??_ringbuf_init:	
   544  00A2                     ??_I2C_Stop:	
   545                           ; 0 bytes @ 0x2
   546                           
   547  00A2                     ??_I2C_Send:	
   548                           ; 0 bytes @ 0x2
   549                           
   550  00A2                     ??_I2C_Receive:	
   551                           ; 0 bytes @ 0x2
   552                           
   553  00A2                     ?_I2C_Start:	
   554                           ; 0 bytes @ 0x2
   555                           
   556  00A2                     ?_I2C_rStart:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  00A2                     I2C_Start@rw:	
   560                           ; 1 bytes @ 0x2
   561                           
   562  00A2                     I2C_Send@data:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  00A2                     flag_clear@port:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  00A2                     I2C_rStart@adrs:	
   569                           ; 1 bytes @ 0x2
   570                           
   571                           
   572                           ; 2 bytes @ 0x2
   573  00A2                     	ds	1
   574  00A3                     ??_I2C_Start:	
   575  00A3                     ringbuf_init@rb:	
   576                           ; 0 bytes @ 0x3
   577                           
   578  00A3                     I2C_Start@adrs:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  00A3                     I2C_Receive@ack:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586  00A3                     	ds	1
   587  00A4                     ??_LCD_Command:	
   588  00A4                     I2C_Receive@data:	
   589                           ; 0 bytes @ 0x4
   590                           
   591  00A4                     I2C_rStart@rw:	
   592                           ; 1 bytes @ 0x4
   593                           
   594                           
   595                           ; 2 bytes @ 0x4
   596  00A4                     	ds	1
   597  00A5                     LCD_Command@c:	
   598                           
   599                           ; 1 bytes @ 0x5
   600  00A5                     	ds	1
   601  00A6                     ??_I2C_rStart:	
   602  00A6                     ?_EEP_Read:	
   603                           ; 0 bytes @ 0x6
   604                           
   605  00A6                     LCD_Command@ans:	
   606                           ; 1 bytes @ 0x6
   607                           
   608  00A6                     EEP_Read@Reg_l:	
   609                           ; 1 bytes @ 0x6
   610                           
   611                           
   612                           ; 1 bytes @ 0x6
   613  00A6                     	ds	1
   614  00A7                     ??_LCD_Clear:	
   615  00A7                     ??_EEP_Read:	
   616                           ; 0 bytes @ 0x7
   617                           
   618                           
   619                           ; 0 bytes @ 0x7
   620  00A7                     	ds	1
   621  00A8                     EEP_Read@Reg_h:	
   622                           
   623                           ; 1 bytes @ 0x8
   624  00A8                     	ds	1
   625  00A9                     ??_LCD_init:	
   626  00A9                     EEP_Read@data:	
   627                           ; 0 bytes @ 0x9
   628                           
   629                           
   630                           ; 1 bytes @ 0x9
   631  00A9                     	ds	1
   632  00AA                     EEP_Read@ans:	
   633                           
   634                           ; 1 bytes @ 0xA
   635  00AA                     	ds	2
   636  00AC                     ??_main_init:	
   637  00AC                     ??_main:	
   638                           ; 0 bytes @ 0xC
   639                           
   640                           
   641                           ; 0 bytes @ 0xC
   642  00AC                     	ds	14
   643                           
   644                           	psect	cstackCOMMON
   645  0070                     __pcstackCOMMON:	
   646  0070                     ?_lchika:	
   647  0070                     ?_timer0_init:	
   648                           ; 0 bytes @ 0x0
   649                           
   650  0070                     ?_timer1_init:	
   651                           ; 0 bytes @ 0x0
   652                           
   653  0070                     ?_adc_init:	
   654                           ; 0 bytes @ 0x0
   655                           
   656  0070                     ?_button_timer_interrupt:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0070                     ??_ringbuf_pop:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0070                     ??_ringbuf_num:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_IdleCheck:	
   666                           ; 0 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_init:	
   669                           ; 0 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Stop:	
   672                           ; 0 bytes @ 0x0
   673                           
   674  0070                     ?_LCD_Command:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_LCD_Clear:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ?_LCD_Putc:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_LCD_init:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ?_isr:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_main_init:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ?i1_I2C_IdleCheck:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ??i1_I2C_IdleCheck:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?i1_I2C_Stop:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?i1_LCD_Command:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?i1_LCD_Clear:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?i1_OUT:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?i1_LED:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?_ringbuf_pop:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_ringbuf_num:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_I2C_Send:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_I2C_Receive:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?i1_I2C_Send:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_adc:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_main:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0070                     ?___awdiv:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0070                     ?___lwmod:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0070                     ?___almod:	
   741                           ; 2 bytes @ 0x0
   742                           
   743  0070                     ?___lldiv:	
   744                           ; 4 bytes @ 0x0
   745                           
   746  0070                     button_timer_interrupt@sw_value:	
   747                           ; 4 bytes @ 0x0
   748                           
   749  0070                     i1OUT@value:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     i1LED@value:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ___awdiv@divisor:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ___lwmod@divisor:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0070                     ___almod@divisor:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  0070                     ___lldiv@divisor:	
   765                           ; 4 bytes @ 0x0
   766                           
   767                           
   768                           ; 4 bytes @ 0x0
   769  0070                     	ds	1
   770  0071                     ??_button_timer_interrupt:	
   771  0071                     ??i1_OUT:	
   772                           ; 0 bytes @ 0x1
   773                           
   774  0071                     ??i1_LED:	
   775                           ; 0 bytes @ 0x1
   776                           
   777  0071                     ringbuf_num@rb:	
   778                           ; 0 bytes @ 0x1
   779                           
   780  0071                     i1I2C_IdleCheck@mask:	
   781                           ; 1 bytes @ 0x1
   782                           
   783  0071                     i1OUT@b:	
   784                           ; 1 bytes @ 0x1
   785                           
   786  0071                     i1LED@b:	
   787                           ; 1 bytes @ 0x1
   788                           
   789                           
   790                           ; 1 bytes @ 0x1
   791  0071                     	ds	1
   792  0072                     ??_adc:	
   793  0072                     ??i1_I2C_Stop:	
   794                           ; 0 bytes @ 0x2
   795                           
   796  0072                     ??i1_I2C_Send:	
   797                           ; 0 bytes @ 0x2
   798                           
   799  0072                     ?i1_I2C_Start:	
   800                           ; 0 bytes @ 0x2
   801                           
   802  0072                     ringbuf_pop@ret:	
   803                           ; 1 bytes @ 0x2
   804                           
   805  0072                     i1I2C_Start@rw:	
   806                           ; 1 bytes @ 0x2
   807                           
   808  0072                     i1I2C_Send@data:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0072                     ___awdiv@dividend:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0072                     ___lwmod@dividend:	
   815                           ; 2 bytes @ 0x2
   816                           
   817                           
   818                           ; 2 bytes @ 0x2
   819  0072                     	ds	1
   820  0073                     ??i1_I2C_Start:	
   821  0073                     adc@ch:	
   822                           ; 0 bytes @ 0x3
   823                           
   824  0073                     button_timer_interrupt@bt:	
   825                           ; 1 bytes @ 0x3
   826                           
   827  0073                     ringbuf_pop@rb:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  0073                     i1I2C_Start@adrs:	
   831                           ; 1 bytes @ 0x3
   832                           
   833                           
   834                           ; 1 bytes @ 0x3
   835  0073                     	ds	1
   836  0074                     ??_LCD_Putc:	
   837  0074                     ?_LCD_Puts:	
   838                           ; 0 bytes @ 0x4
   839                           
   840  0074                     ?_EEP_Write:	
   841                           ; 0 bytes @ 0x4
   842                           
   843  0074                     ??___awdiv:	
   844                           ; 0 bytes @ 0x4
   845                           
   846  0074                     ??___lwmod:	
   847                           ; 0 bytes @ 0x4
   848                           
   849  0074                     ??i1_LCD_Command:	
   850                           ; 0 bytes @ 0x4
   851                           
   852  0074                     ?___wmul:	
   853                           ; 0 bytes @ 0x4
   854                           
   855  0074                     EEP_Write@Reg_l:	
   856                           ; 2 bytes @ 0x4
   857                           
   858  0074                     LCD_Puts@s:	
   859                           ; 1 bytes @ 0x4
   860                           
   861  0074                     ___wmul@multiplier:	
   862                           ; 2 bytes @ 0x4
   863                           
   864  0074                     ___almod@dividend:	
   865                           ; 2 bytes @ 0x4
   866                           
   867  0074                     ___lldiv@dividend:	
   868                           ; 4 bytes @ 0x4
   869                           
   870                           
   871                           ; 4 bytes @ 0x4
   872  0074                     	ds	1
   873  0075                     LCD_Putc@c:	
   874  0075                     EEP_Write@data:	
   875                           ; 1 bytes @ 0x5
   876                           
   877  0075                     ___awdiv@counter:	
   878                           ; 1 bytes @ 0x5
   879                           
   880  0075                     ___lwmod@counter:	
   881                           ; 1 bytes @ 0x5
   882                           
   883  0075                     i1LCD_Command@c:	
   884                           ; 1 bytes @ 0x5
   885                           
   886                           
   887                           ; 1 bytes @ 0x5
   888  0075                     	ds	1
   889  0076                     ??_LCD_Puts:	
   890  0076                     ??_EEP_Write:	
   891                           ; 0 bytes @ 0x6
   892                           
   893  0076                     ?___lwdiv:	
   894                           ; 0 bytes @ 0x6
   895                           
   896  0076                     LCD_Putc@ans:	
   897                           ; 2 bytes @ 0x6
   898                           
   899  0076                     ___awdiv@sign:	
   900                           ; 1 bytes @ 0x6
   901                           
   902  0076                     i1LCD_Command@ans:	
   903                           ; 1 bytes @ 0x6
   904                           
   905  0076                     ___wmul@multiplicand:	
   906                           ; 1 bytes @ 0x6
   907                           
   908  0076                     ___lwdiv@divisor:	
   909                           ; 2 bytes @ 0x6
   910                           
   911                           
   912                           ; 2 bytes @ 0x6
   913  0076                     	ds	1
   914  0077                     ?_LCD_SetCursor:	
   915  0077                     ??i1_LCD_Clear:	
   916                           ; 0 bytes @ 0x7
   917                           
   918  0077                     LCD_SetCursor@row:	
   919                           ; 0 bytes @ 0x7
   920                           
   921  0077                     EEP_Write@Reg_h:	
   922                           ; 1 bytes @ 0x7
   923                           
   924  0077                     ___awdiv@quotient:	
   925                           ; 1 bytes @ 0x7
   926                           
   927                           
   928                           ; 2 bytes @ 0x7
   929  0077                     	ds	1
   930  0078                     ??_LCD_SetCursor:	
   931  0078                     ??___wmul:	
   932                           ; 0 bytes @ 0x8
   933                           
   934  0078                     ??___almod:	
   935                           ; 0 bytes @ 0x8
   936                           
   937  0078                     ??___lldiv:	
   938                           ; 0 bytes @ 0x8
   939                           
   940  0078                     EEP_Write@ans:	
   941                           ; 0 bytes @ 0x8
   942                           
   943  0078                     LCD_SetCursor@row_offsets:	
   944                           ; 1 bytes @ 0x8
   945                           
   946  0078                     LCD_Puts@ans:	
   947                           ; 2 bytes @ 0x8
   948                           
   949  0078                     ___wmul@product:	
   950                           ; 2 bytes @ 0x8
   951                           
   952  0078                     ___lwdiv@dividend:	
   953                           ; 2 bytes @ 0x8
   954                           
   955                           
   956                           ; 2 bytes @ 0x8
   957  0078                     	ds	1
   958  0079                     ___almod@counter:	
   959  0079                     ___lldiv@quotient:	
   960                           ; 1 bytes @ 0x9
   961                           
   962                           
   963                           ; 4 bytes @ 0x9
   964  0079                     	ds	1
   965  007A                     ??___lwdiv:	
   966  007A                     LCD_SetCursor@col:	
   967                           ; 0 bytes @ 0xA
   968                           
   969  007A                     ___almod@sign:	
   970                           ; 1 bytes @ 0xA
   971                           
   972                           
   973                           ; 1 bytes @ 0xA
   974  007A                     	ds	1
   975  007B                     ??___aldiv:	
   976  007B                     ___lwdiv@quotient:	
   977                           ; 0 bytes @ 0xB
   978                           
   979                           
   980                           ; 2 bytes @ 0xB
   981  007B                     	ds	2
   982  007D                     ___lldiv@counter:	
   983  007D                     ___lwdiv@counter:	
   984                           ; 1 bytes @ 0xD
   985                           
   986                           
   987                           ; 1 bytes @ 0xD
   988  007D                     	ds	1
   989                           
   990                           	psect	cstackBANK0
   991  003B                     __pcstackBANK0:	
   992  003B                     ??_lchika:	
   993  003B                     ?___aldiv:	
   994                           ; 0 bytes @ 0x0
   995                           
   996  003B                     ___aldiv@divisor:	
   997                           ; 4 bytes @ 0x0
   998                           
   999                           
  1000                           ; 4 bytes @ 0x0
  1001  003B                     	ds	4
  1002  003F                     lchika@i:	
  1003  003F                     ___aldiv@dividend:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x4
  1008  003F                     	ds	4
  1009  0043                     ___aldiv@counter:	
  1010                           
  1011                           ; 1 bytes @ 0x8
  1012  0043                     	ds	1
  1013  0044                     ___aldiv@sign:	
  1014                           
  1015                           ; 1 bytes @ 0x9
  1016  0044                     	ds	1
  1017  0045                     ___aldiv@quotient:	
  1018                           
  1019                           ; 4 bytes @ 0xA
  1020  0045                     	ds	4
  1021  0049                     ?_display:	
  1022  0049                     display@co:	
  1023                           ; 0 bytes @ 0xE
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0xE
  1027  0049                     	ds	1
  1028  004A                     ??_display:	
  1029                           
  1030                           ; 0 bytes @ 0xF
  1031  004A                     	ds	2
  1032  004C                     display@i:	
  1033                           
  1034                           ; 1 bytes @ 0x11
  1035  004C                     	ds	1
  1036  004D                     ??_isr:	
  1037                           
  1038                           ; 0 bytes @ 0x12
  1039  004D                     	ds	8
  1040  0055                     isr@i:	
  1041                           
  1042                           ; 1 bytes @ 0x1A
  1043  0055                     	ds	1
  1044                           
  1045                           	psect	maintext
  1046  0427                     __pmaintext:	
  1047 ;;
  1048 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  1049 ;;
  1050 ;; *************** function _main *****************
  1051 ;; Defined at:
  1052 ;;		line 307 in file "PIC16F1827-ChargeStation4-01.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  data_3          1   53[BANK2 ] unsigned char 
  1057 ;;  data_2          1   52[BANK2 ] unsigned char 
  1058 ;;  data_1          1   51[BANK2 ] unsigned char 
  1059 ;;  data_0          1   50[BANK2 ] unsigned char 
  1060 ;;  ringbuf        50    0[BANK2 ] unsigned char [50]
  1061 ;;  i               1   54[BANK2 ] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2  394[COMMON] int 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 17F/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1071 ;;      Params:         0       0       0       0       0       0
  1072 ;;      Locals:         0       0       0      55       0       0
  1073 ;;      Temps:          0       0      14       0       0       0
  1074 ;;      Totals:         0       0      14      55       0       0
  1075 ;;Total ram usage:       69 bytes
  1076 ;; Hardware stack levels required when called:   12
  1077 ;; This function calls:
  1078 ;;		_EEP_Read
  1079 ;;		_LED
  1080 ;;		_OUT
  1081 ;;		_flag_clear
  1082 ;;		_flag_read
  1083 ;;		_main_init
  1084 ;;		_ringbuf_init
  1085 ;; This function is called by:
  1086 ;;		Startup code after reset
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _main
  1092  0427                     _main:	
  1093                           
  1094                           ;PIC16F1827-ChargeStation4-01.c: 308: main_init();
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1098  0427  318D  2507  3184   	fcall	_main_init
  1099                           
  1100                           ;PIC16F1827-ChargeStation4-01.c: 310: OUT(0, 1);
  1101  042A  0021               	movlb	1	; select bank1
  1102  042B  01A0               	clrf	OUT@value^(0+128)
  1103  042C  0AA0               	incf	OUT@value^(0+128),f
  1104  042D  3000               	movlw	0
  1105  042E  318D  25F0  3184   	fcall	_OUT
  1106                           
  1107                           ;PIC16F1827-ChargeStation4-01.c: 311: OUT(1, 1);
  1108  0431  0021               	movlb	1	; select bank1
  1109  0432  01A0               	clrf	OUT@value^(0+128)
  1110  0433  0AA0               	incf	OUT@value^(0+128),f
  1111  0434  3001               	movlw	1
  1112  0435  318D  25F0  3184   	fcall	_OUT
  1113                           
  1114                           ;PIC16F1827-ChargeStation4-01.c: 312: OUT(2, 1);
  1115  0438  0021               	movlb	1	; select bank1
  1116  0439  01A0               	clrf	OUT@value^(0+128)
  1117  043A  0AA0               	incf	OUT@value^(0+128),f
  1118  043B  3002               	movlw	2
  1119  043C  318D  25F0  3184   	fcall	_OUT
  1120                           
  1121                           ;PIC16F1827-ChargeStation4-01.c: 313: LED(0, 1);
  1122  043F  0021               	movlb	1	; select bank1
  1123  0440  01A0               	clrf	LED@value^(0+128)
  1124  0441  0AA0               	incf	LED@value^(0+128),f
  1125  0442  3000               	movlw	0
  1126  0443  318D  2574  3184   	fcall	_LED
  1127                           
  1128                           ;PIC16F1827-ChargeStation4-01.c: 314: LED(1, 1);
  1129  0446  0021               	movlb	1	; select bank1
  1130  0447  01A0               	clrf	LED@value^(0+128)
  1131  0448  0AA0               	incf	LED@value^(0+128),f
  1132  0449  3001               	movlw	1
  1133  044A  318D  2574  3184   	fcall	_LED
  1134                           
  1135                           ;PIC16F1827-ChargeStation4-01.c: 315: LED(2, 1);
  1136  044D  0021               	movlb	1	; select bank1
  1137  044E  01A0               	clrf	LED@value^(0+128)
  1138  044F  0AA0               	incf	LED@value^(0+128),f
  1139  0450  3002               	movlw	2
  1140  0451  318D  2574  3184   	fcall	_LED
  1141                           
  1142                           ;PIC16F1827-ChargeStation4-01.c: 317: uint8_t ringbuf[50];
  1143                           ;PIC16F1827-ChargeStation4-01.c: 318: ringbuf_init(&tx_buf, ringbuf, sizeof (ringbuf));
  1144  0454  3020               	movlw	main@ringbuf& (0+255)
  1145  0455  0021               	movlb	1	; select bank1
  1146  0456  00AC               	movwf	??_main^(0+128)
  1147  0457  082C               	movf	??_main^(0+128),w
  1148  0458  00A0               	movwf	ringbuf_init@internal_buf^(0+128)
  1149  0459  3032               	movlw	50
  1150  045A  00AD               	movwf	(??_main+1)^(0+128)
  1151  045B  082D               	movf	(??_main+1)^(0+128),w
  1152  045C  00A1               	movwf	ringbuf_init@bufsize^(0+128)
  1153  045D  30CC               	movlw	_tx_buf& (0+255)
  1154  045E  318B  23FB  3184   	fcall	_ringbuf_init
  1155                           
  1156                           ;PIC16F1827-ChargeStation4-01.c: 320: uint8_t i;
  1157                           ;PIC16F1827-ChargeStation4-01.c: 321: for (i = 0; i < 3; i++) {
  1158  0461  0022               	movlb	2	; select bank2
  1159  0462  01D6               	clrf	main@i^(0+256)
  1160  0463  3003               	movlw	3
  1161  0464  0256               	subwf	main@i^(0+256),w
  1162  0465  1803               	btfsc	3,0
  1163  0466  2D07               	goto	l396
  1164  0467                     l3250:	
  1165                           
  1166                           ;PIC16F1827-ChargeStation4-01.c: 322: uint8_t data_0 = EEP_Read(i, 0);
  1167  0467  0021               	movlb	1	; select bank1
  1168  0468  01A6               	clrf	EEP_Read@Reg_l^(0+128)
  1169  0469  0022               	movlb	2	; select bank2
  1170  046A  0856               	movf	main@i^(0+256),w
  1171  046B  318E  26DB  3184   	fcall	_EEP_Read
  1172  046E  0021               	movlb	1	; select bank1
  1173  046F  00AC               	movwf	??_main^(0+128)
  1174  0470  082C               	movf	??_main^(0+128),w
  1175  0471  0022               	movlb	2	; select bank2
  1176  0472  00D2               	movwf	main@data_0^(0+256)
  1177                           
  1178                           ;PIC16F1827-ChargeStation4-01.c: 323: _delay((unsigned long)((1)*(32000000/4000.0)));
  1179  0473  300B               	movlw	11
  1180  0474  0021               	movlb	1	; select bank1
  1181  0475  00AD               	movwf	(??_main^(0+128)+1)
  1182  0476  3062               	movlw	98
  1183  0477  00AC               	movwf	??_main^(0+128)
  1184  0478                     u3847:	
  1185  0478  0BAC               	decfsz	??_main^(0+128),f
  1186  0479  2C78               	goto	u3847
  1187  047A  0BAD               	decfsz	(??_main^(0+128)+1),f
  1188  047B  2C78               	goto	u3847
  1189  047C  0000               	nop
  1190                           
  1191                           ;PIC16F1827-ChargeStation4-01.c: 324: uint8_t data_1 = EEP_Read(i, 1);
  1192  047D  0021               	movlb	1	; select bank1
  1193  047E  01A6               	clrf	EEP_Read@Reg_l^(0+128)
  1194  047F  0AA6               	incf	EEP_Read@Reg_l^(0+128),f
  1195  0480  0022               	movlb	2	; select bank2
  1196  0481  0856               	movf	main@i^(0+256),w
  1197  0482  318E  26DB  3184   	fcall	_EEP_Read
  1198  0485  0021               	movlb	1	; select bank1
  1199  0486  00AC               	movwf	??_main^(0+128)
  1200  0487  082C               	movf	??_main^(0+128),w
  1201  0488  0022               	movlb	2	; select bank2
  1202  0489  00D3               	movwf	main@data_1^(0+256)
  1203                           
  1204                           ;PIC16F1827-ChargeStation4-01.c: 325: _delay((unsigned long)((1)*(32000000/4000.0)));
  1205  048A  300B               	movlw	11
  1206  048B  0021               	movlb	1	; select bank1
  1207  048C  00AD               	movwf	(??_main^(0+128)+1)
  1208  048D  3062               	movlw	98
  1209  048E  00AC               	movwf	??_main^(0+128)
  1210  048F                     u3857:	
  1211  048F  0BAC               	decfsz	??_main^(0+128),f
  1212  0490  2C8F               	goto	u3857
  1213  0491  0BAD               	decfsz	(??_main^(0+128)+1),f
  1214  0492  2C8F               	goto	u3857
  1215  0493  0000               	nop
  1216                           
  1217                           ;PIC16F1827-ChargeStation4-01.c: 326: uint8_t data_2 = EEP_Read(i, 2);
  1218  0494  3002               	movlw	2
  1219  0495  0021               	movlb	1	; select bank1
  1220  0496  00AC               	movwf	??_main^(0+128)
  1221  0497  082C               	movf	??_main^(0+128),w
  1222  0498  00A6               	movwf	EEP_Read@Reg_l^(0+128)
  1223  0499  0022               	movlb	2	; select bank2
  1224  049A  0856               	movf	main@i^(0+256),w
  1225  049B  318E  26DB  3184   	fcall	_EEP_Read
  1226  049E  0021               	movlb	1	; select bank1
  1227  049F  00AD               	movwf	(??_main+1)^(0+128)
  1228  04A0  082D               	movf	(??_main+1)^(0+128),w
  1229  04A1  0022               	movlb	2	; select bank2
  1230  04A2  00D4               	movwf	main@data_2^(0+256)
  1231                           
  1232                           ;PIC16F1827-ChargeStation4-01.c: 327: _delay((unsigned long)((1)*(32000000/4000.0)));
  1233  04A3  300B               	movlw	11
  1234  04A4  0021               	movlb	1	; select bank1
  1235  04A5  00AD               	movwf	(??_main^(0+128)+1)
  1236  04A6  3062               	movlw	98
  1237  04A7  00AC               	movwf	??_main^(0+128)
  1238  04A8                     u3867:	
  1239  04A8  0BAC               	decfsz	??_main^(0+128),f
  1240  04A9  2CA8               	goto	u3867
  1241  04AA  0BAD               	decfsz	(??_main^(0+128)+1),f
  1242  04AB  2CA8               	goto	u3867
  1243  04AC  0000               	nop
  1244                           
  1245                           ;PIC16F1827-ChargeStation4-01.c: 328: uint8_t data_3 = EEP_Read(i, 3);
  1246  04AD  3003               	movlw	3
  1247  04AE  0021               	movlb	1	; select bank1
  1248  04AF  00AC               	movwf	??_main^(0+128)
  1249  04B0  082C               	movf	??_main^(0+128),w
  1250  04B1  00A6               	movwf	EEP_Read@Reg_l^(0+128)
  1251  04B2  0022               	movlb	2	; select bank2
  1252  04B3  0856               	movf	main@i^(0+256),w
  1253  04B4  318E  26DB  3184   	fcall	_EEP_Read
  1254  04B7  0021               	movlb	1	; select bank1
  1255  04B8  00AD               	movwf	(??_main+1)^(0+128)
  1256  04B9  082D               	movf	(??_main+1)^(0+128),w
  1257  04BA  0022               	movlb	2	; select bank2
  1258  04BB  00D5               	movwf	main@data_3^(0+256)
  1259                           
  1260                           ;PIC16F1827-ChargeStation4-01.c: 329: _delay((unsigned long)((1)*(32000000/4000.0)));
  1261  04BC  300B               	movlw	11
  1262  04BD  0021               	movlb	1	; select bank1
  1263  04BE  00AD               	movwf	(??_main^(0+128)+1)
  1264  04BF  3062               	movlw	98
  1265  04C0  00AC               	movwf	??_main^(0+128)
  1266  04C1                     u3877:	
  1267  04C1  0BAC               	decfsz	??_main^(0+128),f
  1268  04C2  2CC1               	goto	u3877
  1269  04C3  0BAD               	decfsz	(??_main^(0+128)+1),f
  1270  04C4  2CC1               	goto	u3877
  1271  04C5  0000               	nop
  1272                           
  1273                           ;PIC16F1827-ChargeStation4-01.c: 330: ss[i] = (0xFF000000 & (data_0 << 24)) +(0xFF0000 &
      +                           (data_1 << 16))+ (0xFF00 & (data_2 << 8))+ (0xFF & (data_3 << 0));
  1274  04C6  0022               	movlb	2	; select bank2
  1275  04C7  0855               	movf	main@data_3^(0+256),w
  1276  04C8  0021               	movlb	1	; select bank1
  1277  04C9  00AC               	movwf	??_main^(0+128)
  1278  04CA  01AD               	clrf	(??_main^(0+128)+1)
  1279  04CB  01AE               	clrf	(??_main^(0+128)+2)
  1280  04CC  01AF               	clrf	(??_main^(0+128)+3)
  1281  04CD  0022               	movlb	2	; select bank2
  1282  04CE  0854               	movf	main@data_2^(0+256),w
  1283  04CF  0021               	movlb	1	; select bank1
  1284  04D0  00B0               	movwf	(??_main+4)^(0+128)
  1285  04D1  01B1               	clrf	((??_main+4)^(0+128)+1)
  1286  04D2  0830               	movf	(??_main+4)^(0+128),w
  1287  04D3  00B1               	movwf	((??_main+4)^(0+128)+1)
  1288  04D4  01B0               	clrf	(??_main+4)^(0+128)
  1289  04D5  3000               	movlw	0
  1290  04D6  0530               	andwf	(??_main+4)^(0+128),w
  1291  04D7  00B3               	movwf	(??_main+7)^(0+128)
  1292  04D8  30FF               	movlw	255
  1293  04D9  0531               	andwf	(??_main+5)^(0+128),w
  1294  04DA  00B4               	movwf	(??_main+8)^(0+128)
  1295  04DB  0833               	movf	(??_main+7)^(0+128),w
  1296  04DC  00B5               	movwf	(??_main+9)^(0+128)
  1297  04DD  0834               	movf	(??_main+8)^(0+128),w
  1298  04DE  00B6               	movwf	((??_main+9)^(0+128)+1)
  1299  04DF  01B7               	clrf	((??_main+9)^(0+128)+2)
  1300  04E0  01B8               	clrf	((??_main+9)^(0+128)+3)
  1301  04E1  0835               	movf	(??_main+9)^(0+128),w
  1302  04E2  07AC               	addwf	??_main^(0+128),f
  1303  04E3  0836               	movf	(??_main+10)^(0+128),w
  1304  04E4  3DAD               	addwfc	(??_main^(0+128)+1),f
  1305  04E5  0837               	movf	(??_main+11)^(0+128),w
  1306  04E6  3DAE               	addwfc	(??_main^(0+128)+2),f
  1307  04E7  0838               	movf	(??_main+12)^(0+128),w
  1308  04E8  3DAF               	addwfc	(??_main^(0+128)+3),f
  1309  04E9  0022               	movlb	2	; select bank2
  1310  04EA  0856               	movf	main@i^(0+256),w
  1311  04EB  0021               	movlb	1	; select bank1
  1312  04EC  00B9               	movwf	(??_main+13)^(0+128)
  1313  04ED  3001               	movlw	1
  1314  04EE                     u3735:	
  1315  04EE  35B9               	lslf	(??_main+13)^(0+128),f
  1316  04EF  3EFF               	addlw	-1
  1317  04F0  1D03               	skipz
  1318  04F1  2CEE               	goto	u3735
  1319  04F2  3539               	lslf	(??_main+13)^(0+128),w
  1320  04F3  3EBA               	addlw	_ss& (0+255)
  1321  04F4  0086               	movwf	6
  1322  04F5  0187               	clrf	7
  1323  04F6  082C               	movf	??_main^(0+128),w
  1324  04F7  3FC0               	movwi [0]fsr1
  1325  04F8  082D               	movf	(??_main+1)^(0+128),w
  1326  04F9  3FC1               	movwi [1]fsr1
  1327  04FA  082E               	movf	(??_main+2)^(0+128),w
  1328  04FB  3FC2               	movwi [2]fsr1
  1329  04FC  082F               	movf	(??_main+3)^(0+128),w
  1330  04FD  3FC3               	movwi [3]fsr1
  1331  04FE  3001               	movlw	1
  1332  04FF  00AC               	movwf	??_main^(0+128)
  1333  0500  082C               	movf	??_main^(0+128),w
  1334  0501  0022               	movlb	2	; select bank2
  1335  0502  07D6               	addwf	main@i^(0+256),f
  1336  0503  3003               	movlw	3
  1337  0504  0256               	subwf	main@i^(0+256),w
  1338  0505  1C03               	skipc
  1339  0506  2C67               	goto	l3250
  1340  0507                     l396:	
  1341                           
  1342                           ;PIC16F1827-ChargeStation4-01.c: 331: }
  1343                           ;PIC16F1827-ChargeStation4-01.c: 333: INTCONbits.GIE = 1;
  1344  0507  178B               	bsf	11,7	;volatile
  1345  0508                     l3268:	
  1346                           ;PIC16F1827-ChargeStation4-01.c: 334: while (1) {
  1347                           
  1348                           
  1349                           ;PIC16F1827-ChargeStation4-01.c: 335: for (i = 0; i < 3; i++) {
  1350  0508  01D6               	clrf	main@i^(0+256)
  1351  0509                     L1:	
  1352  0509  3003               	movlw	3
  1353  050A  0256               	subwf	main@i^(0+256),w
  1354  050B  1803               	btfsc	3,0
  1355  050C  2D08               	goto	l3268
  1356                           
  1357                           ;PIC16F1827-ChargeStation4-01.c: 336: if (flag_read(i, 0x10)) {
  1358  050D  3010               	movlw	16
  1359  050E  0021               	movlb	1	; select bank1
  1360  050F  00AC               	movwf	??_main^(0+128)
  1361  0510  082C               	movf	??_main^(0+128),w
  1362  0511  00A0               	movwf	flag_read@bit_and^(0+128)
  1363  0512  0022               	movlb	2	; select bank2
  1364  0513  0856               	movf	main@i^(0+256),w
  1365  0514  318C  24C7  3184   	fcall	_flag_read
  1366  0517  3A00               	xorlw	0
  1367  0518  1903               	skipnz
  1368  0519  2D33               	goto	l3280
  1369                           
  1370                           ;PIC16F1827-ChargeStation4-01.c: 337: OUT(i, 1);
  1371  051A  0021               	movlb	1	; select bank1
  1372  051B  01A0               	clrf	OUT@value^(0+128)
  1373  051C  0AA0               	incf	OUT@value^(0+128),f
  1374  051D  0022               	movlb	2	; select bank2
  1375  051E  0856               	movf	main@i^(0+256),w
  1376  051F  318D  25F0  3184   	fcall	_OUT
  1377                           
  1378                           ;PIC16F1827-ChargeStation4-01.c: 338: LED(i, 1);
  1379  0522  0021               	movlb	1	; select bank1
  1380  0523  01A0               	clrf	LED@value^(0+128)
  1381  0524  0AA0               	incf	LED@value^(0+128),f
  1382  0525  0022               	movlb	2	; select bank2
  1383  0526  0856               	movf	main@i^(0+256),w
  1384  0527  318D  2574  3184   	fcall	_LED
  1385                           
  1386                           ;PIC16F1827-ChargeStation4-01.c: 339: cut[i] = 0;
  1387  052A  0022               	movlb	2	; select bank2
  1388  052B  3556               	lslf	main@i^(0+256),w
  1389  052C  3E57               	addlw	_cut& (0+255)
  1390  052D  0086               	movwf	6
  1391  052E  3001               	movlw	1	; select bank2/3
  1392  052F  0087               	movwf	7
  1393  0530  3000               	movlw	0
  1394  0531  3FC0               	movwi [0]fsr1
  1395  0532  3FC1               	movwi [1]fsr1
  1396  0533                     l3280:	
  1397                           
  1398                           ;PIC16F1827-ChargeStation4-01.c: 340: }
  1399                           ;PIC16F1827-ChargeStation4-01.c: 341: if (flag_read(i, 0x10)) {
  1400  0533  3010               	movlw	16
  1401  0534  0021               	movlb	1	; select bank1
  1402  0535  00AC               	movwf	??_main^(0+128)
  1403  0536  082C               	movf	??_main^(0+128),w
  1404  0537  00A0               	movwf	flag_read@bit_and^(0+128)
  1405  0538  0022               	movlb	2	; select bank2
  1406  0539  0856               	movf	main@i^(0+256),w
  1407  053A  318C  24C7  3184   	fcall	_flag_read
  1408  053D  3A00               	xorlw	0
  1409  053E  1903               	skipnz
  1410  053F  2D63               	goto	l3292
  1411                           
  1412                           ;PIC16F1827-ChargeStation4-01.c: 342: print_port = i;
  1413  0540  0022               	movlb	2	; select bank2
  1414  0541  0856               	movf	main@i^(0+256),w
  1415  0542  0021               	movlb	1	; select bank1
  1416  0543  00AC               	movwf	??_main^(0+128)
  1417  0544  082C               	movf	??_main^(0+128),w
  1418  0545  0020               	movlb	0	; select bank0
  1419  0546  00B1               	movwf	_print_port
  1420                           
  1421                           ;PIC16F1827-ChargeStation4-01.c: 343: if (print_content == 2) print_content = 1;
  1422  0547  0830               	movf	_print_content,w
  1423  0548  3A02               	xorlw	2
  1424  0549  1D03               	skipz
  1425  054A  2D4E               	goto	l3286
  1426  054B  01B0               	clrf	_print_content
  1427  054C  0AB0               	incf	_print_content,f
  1428  054D  2D54               	goto	l3288
  1429  054E                     l3286:	
  1430                           
  1431                           ;PIC16F1827-ChargeStation4-01.c: 344: else print_content++;
  1432  054E  3001               	movlw	1
  1433  054F  0021               	movlb	1	; select bank1
  1434  0550  00AC               	movwf	??_main^(0+128)
  1435  0551  082C               	movf	??_main^(0+128),w
  1436  0552  0020               	movlb	0	; select bank0
  1437  0553  07B0               	addwf	_print_content,f
  1438  0554                     l3288:	
  1439                           
  1440                           ;PIC16F1827-ChargeStation4-01.c: 345: LED(i, 1);
  1441  0554  0021               	movlb	1	; select bank1
  1442  0555  01A0               	clrf	LED@value^(0+128)
  1443  0556  0AA0               	incf	LED@value^(0+128),f
  1444  0557  0022               	movlb	2	; select bank2
  1445  0558  0856               	movf	main@i^(0+256),w
  1446  0559  318D  2574  3184   	fcall	_LED
  1447                           
  1448                           ;PIC16F1827-ChargeStation4-01.c: 346: flag_clear(i, 0x00);
  1449  055C  0021               	movlb	1	; select bank1
  1450  055D  01A0               	clrf	flag_clear@bit_and^(0+128)
  1451  055E  0022               	movlb	2	; select bank2
  1452  055F  0856               	movf	main@i^(0+256),w
  1453  0560  318D  252A  3184   	fcall	_flag_clear
  1454  0563                     l3292:	
  1455                           
  1456                           ;PIC16F1827-ChargeStation4-01.c: 347: }
  1457                           ;PIC16F1827-ChargeStation4-01.c: 348: if (flag_read(i, 0x40)) {
  1458  0563  3040               	movlw	64
  1459  0564  0021               	movlb	1	; select bank1
  1460  0565  00AC               	movwf	??_main^(0+128)
  1461  0566  082C               	movf	??_main^(0+128),w
  1462  0567  00A0               	movwf	flag_read@bit_and^(0+128)
  1463  0568  0022               	movlb	2	; select bank2
  1464  0569  0856               	movf	main@i^(0+256),w
  1465  056A  318C  24C7  3184   	fcall	_flag_read
  1466  056D  3A00               	xorlw	0
  1467  056E  1903               	skipnz
  1468  056F  2D87               	goto	l3302
  1469                           
  1470                           ;PIC16F1827-ChargeStation4-01.c: 349: print_port = i;
  1471  0570  0022               	movlb	2	; select bank2
  1472  0571  0856               	movf	main@i^(0+256),w
  1473  0572  0021               	movlb	1	; select bank1
  1474  0573  00AC               	movwf	??_main^(0+128)
  1475  0574  082C               	movf	??_main^(0+128),w
  1476  0575  0020               	movlb	0	; select bank0
  1477  0576  00B1               	movwf	_print_port
  1478                           
  1479                           ;PIC16F1827-ChargeStation4-01.c: 350: print_content = 0;
  1480  0577  01B0               	clrf	_print_content
  1481                           
  1482                           ;PIC16F1827-ChargeStation4-01.c: 351: LED(i, 1);
  1483  0578  0021               	movlb	1	; select bank1
  1484  0579  01A0               	clrf	LED@value^(0+128)
  1485  057A  0AA0               	incf	LED@value^(0+128),f
  1486  057B  0022               	movlb	2	; select bank2
  1487  057C  0856               	movf	main@i^(0+256),w
  1488  057D  318D  2574  3184   	fcall	_LED
  1489                           
  1490                           ;PIC16F1827-ChargeStation4-01.c: 352: flag_clear(i, 0x00);
  1491  0580  0021               	movlb	1	; select bank1
  1492  0581  01A0               	clrf	flag_clear@bit_and^(0+128)
  1493  0582  0022               	movlb	2	; select bank2
  1494  0583  0856               	movf	main@i^(0+256),w
  1495  0584  318D  252A  3184   	fcall	_flag_clear
  1496  0587                     l3302:	
  1497                           
  1498                           ;PIC16F1827-ChargeStation4-01.c: 353: }
  1499                           ;PIC16F1827-ChargeStation4-01.c: 354: if (flag_read(i, 0x80)) {
  1500  0587  3080               	movlw	128
  1501  0588  0021               	movlb	1	; select bank1
  1502  0589  00AC               	movwf	??_main^(0+128)
  1503  058A  082C               	movf	??_main^(0+128),w
  1504  058B  00A0               	movwf	flag_read@bit_and^(0+128)
  1505  058C  0022               	movlb	2	; select bank2
  1506  058D  0856               	movf	main@i^(0+256),w
  1507  058E  318C  24C7  3184   	fcall	_flag_read
  1508  0591  3A00               	xorlw	0
  1509  0592  1903               	skipnz
  1510  0593  2DBE               	goto	l3312
  1511                           
  1512                           ;PIC16F1827-ChargeStation4-01.c: 355: ss[i] = 0;
  1513  0594  0022               	movlb	2	; select bank2
  1514  0595  0856               	movf	main@i^(0+256),w
  1515  0596  0021               	movlb	1	; select bank1
  1516  0597  00AC               	movwf	??_main^(0+128)
  1517  0598  3001               	movlw	1
  1518  0599                     u3815:	
  1519  0599  35AC               	lslf	??_main^(0+128),f
  1520  059A  3EFF               	addlw	-1
  1521  059B  1D03               	skipz
  1522  059C  2D99               	goto	u3815
  1523  059D  352C               	lslf	??_main^(0+128),w
  1524  059E  3EBA               	addlw	_ss& (0+255)
  1525  059F  0086               	movwf	6
  1526  05A0  0187               	clrf	7
  1527  05A1  3000               	movlw	0
  1528  05A2  3FC0               	movwi [0]fsr1
  1529  05A3  3000               	movlw	0
  1530  05A4  3FC1               	movwi [1]fsr1
  1531  05A5  3FC2               	movwi [2]fsr1
  1532  05A6  3FC3               	movwi [3]fsr1
  1533                           
  1534                           ;PIC16F1827-ChargeStation4-01.c: 356: print_content = 3;
  1535  05A7  3003               	movlw	3
  1536  05A8  00AC               	movwf	??_main^(0+128)
  1537  05A9  082C               	movf	??_main^(0+128),w
  1538  05AA  0020               	movlb	0	; select bank0
  1539  05AB  00B0               	movwf	_print_content
  1540                           
  1541                           ;PIC16F1827-ChargeStation4-01.c: 357: LED(i, 1);
  1542  05AC  0021               	movlb	1	; select bank1
  1543  05AD  01A0               	clrf	LED@value^(0+128)
  1544  05AE  0AA0               	incf	LED@value^(0+128),f
  1545  05AF  0022               	movlb	2	; select bank2
  1546  05B0  0856               	movf	main@i^(0+256),w
  1547  05B1  318D  2574  3184   	fcall	_LED
  1548                           
  1549                           ;PIC16F1827-ChargeStation4-01.c: 358: flag_clear(i, 0x08);
  1550  05B4  3008               	movlw	8
  1551  05B5  0021               	movlb	1	; select bank1
  1552  05B6  00AC               	movwf	??_main^(0+128)
  1553  05B7  082C               	movf	??_main^(0+128),w
  1554  05B8  00A0               	movwf	flag_clear@bit_and^(0+128)
  1555  05B9  0022               	movlb	2	; select bank2
  1556  05BA  0856               	movf	main@i^(0+256),w
  1557  05BB  318D  252A  3184   	fcall	_flag_clear
  1558  05BE                     l3312:	
  1559                           
  1560                           ;PIC16F1827-ChargeStation4-01.c: 359: }
  1561                           ;PIC16F1827-ChargeStation4-01.c: 360: if (flag_read(i, 0x08)) {
  1562  05BE  3008               	movlw	8
  1563  05BF  0021               	movlb	1	; select bank1
  1564  05C0  00AC               	movwf	??_main^(0+128)
  1565  05C1  082C               	movf	??_main^(0+128),w
  1566  05C2  00A0               	movwf	flag_read@bit_and^(0+128)
  1567  05C3  0022               	movlb	2	; select bank2
  1568  05C4  0856               	movf	main@i^(0+256),w
  1569  05C5  318C  24C7  3184   	fcall	_flag_read
  1570  05C8  3A00               	xorlw	0
  1571  05C9  1903               	skipnz
  1572  05CA  2DDC               	goto	l3320
  1573                           
  1574                           ;PIC16F1827-ChargeStation4-01.c: 361: print_content = 0;
  1575  05CB  0020               	movlb	0	; select bank0
  1576  05CC  01B0               	clrf	_print_content
  1577                           
  1578                           ;PIC16F1827-ChargeStation4-01.c: 362: LED(i, 1);
  1579  05CD  0021               	movlb	1	; select bank1
  1580  05CE  01A0               	clrf	LED@value^(0+128)
  1581  05CF  0AA0               	incf	LED@value^(0+128),f
  1582  05D0  0022               	movlb	2	; select bank2
  1583  05D1  0856               	movf	main@i^(0+256),w
  1584  05D2  318D  2574  3184   	fcall	_LED
  1585                           
  1586                           ;PIC16F1827-ChargeStation4-01.c: 363: flag_clear(i, 0x00);
  1587  05D5  0021               	movlb	1	; select bank1
  1588  05D6  01A0               	clrf	flag_clear@bit_and^(0+128)
  1589  05D7  0022               	movlb	2	; select bank2
  1590  05D8  0856               	movf	main@i^(0+256),w
  1591  05D9  318D  252A  3184   	fcall	_flag_clear
  1592  05DC                     l3320:	
  1593  05DC  3001               	movlw	1
  1594  05DD  0021               	movlb	1	; select bank1
  1595  05DE  00AC               	movwf	??_main^(0+128)
  1596  05DF  082C               	movf	??_main^(0+128),w
  1597  05E0  0022               	movlb	2	; select bank2
  1598  05E1  07D6               	addwf	main@i^(0+256),f
  1599  05E2  2D09               	goto	L1
  1600  05E3                     __end_of_main:	
  1601                           ;PIC16F1827-ChargeStation4-01.c: 364: }
  1602                           ;PIC16F1827-ChargeStation4-01.c: 365: }
  1603                           ;PIC16F1827-ChargeStation4-01.c: 366: }
  1604                           ;PIC16F1827-ChargeStation4-01.c: 367: return 0;
  1605                           ;	Return value of _main is never used
  1606                           
  1607                           
  1608                           	psect	text1
  1609  0BFB                     __ptext1:	
  1610 ;; *************** function _ringbuf_init *****************
  1611 ;; Defined at:
  1612 ;;		line 113 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  rb              1    wreg     PTR struct ringbuf
  1615 ;;		 -> tx_buf(4), 
  1616 ;;  internal_buf    1    0[BANK1 ] PTR unsigned char 
  1617 ;;		 -> main@ringbuf(50), 
  1618 ;;  bufsize         1    1[BANK1 ] unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  rb              1    3[BANK1 ] PTR struct ringbuf
  1621 ;;		 -> tx_buf(4), 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;		None               void
  1624 ;; Registers used:
  1625 ;;		wreg, fsr1l, fsr1h, status,2
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1631 ;;      Params:         0       0       2       0       0       0
  1632 ;;      Locals:         0       0       1       0       0       0
  1633 ;;      Temps:          0       0       1       0       0       0
  1634 ;;      Totals:         0       0       4       0       0       0
  1635 ;;Total ram usage:        4 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    6
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _ringbuf_init
  1647  0BFB                     _ringbuf_init:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2]
  1651                           ;ringbuf_init@rb stored from wreg
  1652  0BFB  0021               	movlb	1	; select bank1
  1653  0BFC  00A3               	movwf	ringbuf_init@rb^(0+128)
  1654                           
  1655                           ;My_header_16F.h: 114: rb->buf = internal_buf;
  1656  0BFD  0820               	movf	ringbuf_init@internal_buf^(0+128),w
  1657  0BFE  00A2               	movwf	??_ringbuf_init^(0+128)
  1658  0BFF  0823               	movf	ringbuf_init@rb^(0+128),w
  1659  0C00  0086               	movwf	6
  1660  0C01  0187               	clrf	7
  1661  0C02  0822               	movf	??_ringbuf_init^(0+128),w
  1662  0C03  0081               	movwf	1
  1663                           
  1664                           ;My_header_16F.h: 115: rb->size = bufsize;
  1665  0C04  0821               	movf	ringbuf_init@bufsize^(0+128),w
  1666  0C05  00A2               	movwf	??_ringbuf_init^(0+128)
  1667  0C06  0A23               	incf	ringbuf_init@rb^(0+128),w
  1668  0C07  0086               	movwf	6
  1669  0C08  0187               	clrf	7
  1670  0C09  0822               	movf	??_ringbuf_init^(0+128),w
  1671  0C0A  0081               	movwf	1
  1672                           
  1673                           ;My_header_16F.h: 116: rb->head = 0;
  1674  0C0B  0823               	movf	ringbuf_init@rb^(0+128),w
  1675  0C0C  3E02               	addlw	2
  1676  0C0D  0086               	movwf	6
  1677  0C0E  0187               	clrf	7
  1678  0C0F  0181               	clrf	1
  1679                           
  1680                           ;My_header_16F.h: 117: rb->tail = 0;
  1681  0C10  0823               	movf	ringbuf_init@rb^(0+128),w
  1682  0C11  3E03               	addlw	3
  1683  0C12  0086               	movwf	6
  1684  0C13  0187               	clrf	7
  1685  0C14  0181               	clrf	1
  1686  0C15  0008               	return
  1687  0C16                     __end_of_ringbuf_init:	
  1688                           
  1689                           	psect	text2
  1690  0D07                     __ptext2:	
  1691 ;; *************** function _main_init *****************
  1692 ;; Defined at:
  1693 ;;		line 288 in file "PIC16F1827-ChargeStation4-01.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;		None               void
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1707 ;;      Params:         0       0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:   11
  1714 ;; This function calls:
  1715 ;;		_I2C_init
  1716 ;;		_LCD_init
  1717 ;;		_adc_init
  1718 ;;		_timer0_init
  1719 ;;		_timer1_init
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _main_init
  1727  0D07                     _main_init:	
  1728                           
  1729                           ;PIC16F1827-ChargeStation4-01.c: 289: OSCCON = 0x70;
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
  1733  0D07  3070               	movlw	112
  1734  0D08  0021               	movlb	1	; select bank1
  1735  0D09  0099               	movwf	25	;volatile
  1736                           
  1737                           ;PIC16F1827-ChargeStation4-01.c: 290: TRISA = 0x3F;
  1738  0D0A  303F               	movlw	63
  1739  0D0B  008C               	movwf	12	;volatile
  1740                           
  1741                           ;PIC16F1827-ChargeStation4-01.c: 291: TRISB = 0x12;
  1742  0D0C  3012               	movlw	18
  1743  0D0D  008D               	movwf	13	;volatile
  1744                           
  1745                           ;PIC16F1827-ChargeStation4-01.c: 292: ANSELA = 0x07;
  1746  0D0E  3007               	movlw	7
  1747  0D0F  0023               	movlb	3	; select bank3
  1748  0D10  008C               	movwf	12	;volatile
  1749                           
  1750                           ;PIC16F1827-ChargeStation4-01.c: 293: ANSELB = 0x00;
  1751  0D11  018D               	clrf	13	;volatile
  1752                           
  1753                           ;PIC16F1827-ChargeStation4-01.c: 294: WPUB = 0b00010010;
  1754  0D12  3012               	movlw	18
  1755  0D13  0024               	movlb	4	; select bank4
  1756  0D14  008D               	movwf	13	;volatile
  1757                           
  1758                           ;PIC16F1827-ChargeStation4-01.c: 295: OPTION_REGbits.nWPUEN = 0;
  1759  0D15  0021               	movlb	1	; select bank1
  1760  0D16  1395               	bcf	21,7	;volatile
  1761                           
  1762                           ;PIC16F1827-ChargeStation4-01.c: 297: adc_init(3);
  1763  0D17  3003               	movlw	3
  1764  0D18  318B  236A  318D   	fcall	_adc_init
  1765                           
  1766                           ;PIC16F1827-ChargeStation4-01.c: 298: timer0_init(4);
  1767  0D1B  3004               	movlw	4
  1768  0D1C  318B  237F  318D   	fcall	_timer0_init
  1769                           
  1770                           ;PIC16F1827-ChargeStation4-01.c: 299: timer1_init(2);
  1771  0D1F  3002               	movlw	2
  1772  0D20  318B  2394  318D   	fcall	_timer1_init
  1773                           
  1774                           ;PIC16F1827-ChargeStation4-01.c: 301: I2C_init();
  1775  0D23  318A  22FF  318D   	fcall	_I2C_init
  1776                           
  1777                           ;PIC16F1827-ChargeStation4-01.c: 302: LCD_init();
  1778  0D26  318F  2718         	fcall	_LCD_init
  1779                           
  1780                           ;PIC16F1827-ChargeStation4-01.c: 304: INTCONbits.PEIE = 1;
  1781  0D28  170B               	bsf	11,6	;volatile
  1782  0D29  0008               	return
  1783  0D2A                     __end_of_main_init:	
  1784                           
  1785                           	psect	text3
  1786  0B94                     __ptext3:	
  1787 ;; *************** function _timer1_init *****************
  1788 ;; Defined at:
  1789 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  prescaler       1    wreg     unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;		None               void
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1803 ;;      Params:         0       0       0       0       0       0
  1804 ;;      Locals:         0       0       1       0       0       0
  1805 ;;      Temps:          0       0       1       0       0       0
  1806 ;;      Totals:         0       0       2       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    6
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main_init
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _timer1_init
  1819  0B94                     _timer1_init:	
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1823                           ;timer1_init@prescaler stored from wreg
  1824  0B94  0021               	movlb	1	; select bank1
  1825  0B95  00A1               	movwf	timer1_init@prescaler^(0+128)
  1826                           
  1827                           ;My_header_16F.h: 30: T1CONbits.TMR1ON = 1;
  1828  0B96  0020               	movlb	0	; select bank0
  1829  0B97  1418               	bsf	24,0	;volatile
  1830                           
  1831                           ;My_header_16F.h: 31: T1CONbits.TMR1CS = 0;
  1832  0B98  303F               	movlw	-193
  1833  0B99  0598               	andwf	24,f	;volatile
  1834                           
  1835                           ;My_header_16F.h: 32: T1CONbits.T1CKPS = prescaler;
  1836  0B9A  0021               	movlb	1	; select bank1
  1837  0B9B  0821               	movf	timer1_init@prescaler^(0+128),w
  1838  0B9C  00A0               	movwf	??_timer1_init^(0+128)
  1839  0B9D  0EA0               	swapf	??_timer1_init^(0+128),f
  1840  0B9E  0020               	movlb	0	; select bank0
  1841  0B9F  0818               	movf	24,w	;volatile
  1842  0BA0  0021               	movlb	1	; select bank1
  1843  0BA1  0620               	xorwf	??_timer1_init^(0+128),w
  1844  0BA2  39CF               	andlw	-49
  1845  0BA3  0620               	xorwf	??_timer1_init^(0+128),w
  1846  0BA4  0020               	movlb	0	; select bank0
  1847  0BA5  0098               	movwf	24	;volatile
  1848                           
  1849                           ;My_header_16F.h: 33: TMR1H = 0x00;
  1850  0BA6  0197               	clrf	23	;volatile
  1851                           
  1852                           ;My_header_16F.h: 34: TMR1L = 0x00;
  1853  0BA7  0196               	clrf	22	;volatile
  1854                           
  1855                           ;My_header_16F.h: 35: PIE1bits.TMR1IE = 1;
  1856  0BA8  0021               	movlb	1	; select bank1
  1857  0BA9  1411               	bsf	17,0	;volatile
  1858                           
  1859                           ;My_header_16F.h: 36: INTCONbits.PEIE = 1;
  1860  0BAA  170B               	bsf	11,6	;volatile
  1861  0BAB  0008               	return
  1862  0BAC                     __end_of_timer1_init:	
  1863                           
  1864                           	psect	text4
  1865  0B7F                     __ptext4:	
  1866 ;; *************** function _timer0_init *****************
  1867 ;; Defined at:
  1868 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  prescaler       1    wreg     unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1882 ;;      Params:         0       0       0       0       0       0
  1883 ;;      Locals:         0       0       1       0       0       0
  1884 ;;      Temps:          0       0       1       0       0       0
  1885 ;;      Totals:         0       0       2       0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    6
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_main_init
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _timer0_init
  1898  0B7F                     _timer0_init:	
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  1902                           ;timer0_init@prescaler stored from wreg
  1903  0B7F  0021               	movlb	1	; select bank1
  1904  0B80  00A1               	movwf	timer0_init@prescaler^(0+128)
  1905                           
  1906                           ;My_header_16F.h: 16: if (prescaler == 0) {
  1907  0B81  08A1               	movf	timer0_init@prescaler^(0+128),f
  1908  0B82  1D03               	skipz
  1909  0B83  2B86               	goto	l99
  1910                           
  1911                           ;My_header_16F.h: 17: OPTION_REGbits.PSA = 1;
  1912  0B84  1595               	bsf	21,3	;volatile
  1913                           
  1914                           ;My_header_16F.h: 18: } else {
  1915  0B85  2B8F               	goto	l2860
  1916  0B86                     l99:	
  1917                           
  1918                           ;My_header_16F.h: 19: OPTION_REGbits.PSA = 0;
  1919  0B86  1195               	bcf	21,3	;volatile
  1920                           
  1921                           ;My_header_16F.h: 20: OPTION_REGbits.PS = prescaler - 1;
  1922  0B87  30FF               	movlw	255
  1923  0B88  0721               	addwf	timer0_init@prescaler^(0+128),w
  1924  0B89  00A0               	movwf	??_timer0_init^(0+128)
  1925  0B8A  0815               	movf	21,w	;volatile
  1926  0B8B  0620               	xorwf	??_timer0_init^(0+128),w
  1927  0B8C  39F8               	andlw	-8
  1928  0B8D  0620               	xorwf	??_timer0_init^(0+128),w
  1929  0B8E  0095               	movwf	21	;volatile
  1930  0B8F                     l2860:	
  1931                           
  1932                           ;My_header_16F.h: 21: }
  1933                           ;My_header_16F.h: 22: OPTION_REGbits.TMR0CS = 0;
  1934  0B8F  1295               	bcf	21,5	;volatile
  1935                           
  1936                           ;My_header_16F.h: 23: OPTION_REGbits.TMR0SE = 0;
  1937  0B90  1215               	bcf	21,4	;volatile
  1938                           
  1939                           ;My_header_16F.h: 24: INTCONbits.TMR0IE = 1;
  1940  0B91  168B               	bsf	11,5	;volatile
  1941                           
  1942                           ;My_header_16F.h: 25: INTCONbits.PEIE = 1;
  1943  0B92  170B               	bsf	11,6	;volatile
  1944  0B93  0008               	return
  1945  0B94                     __end_of_timer0_init:	
  1946                           
  1947                           	psect	text5
  1948  0B6A                     __ptext5:	
  1949 ;; *************** function _adc_init *****************
  1950 ;; Defined at:
  1951 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  p_ref           1    wreg     unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  p_ref           1    0[BANK1 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1965 ;;      Params:         0       0       0       0       0       0
  1966 ;;      Locals:         0       0       1       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0
  1968 ;;      Totals:         0       0       1       0       0       0
  1969 ;;Total ram usage:        1 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    6
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_main_init
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _adc_init
  1981  0B6A                     _adc_init:	
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1985                           ;adc_init@p_ref stored from wreg
  1986  0B6A  0021               	movlb	1	; select bank1
  1987  0B6B  00A0               	movwf	adc_init@p_ref^(0+128)
  1988                           
  1989                           ;My_header_16F.h: 44: ADCON1bits.ADFM = 1;
  1990  0B6C  179E               	bsf	30,7	;volatile
  1991                           
  1992                           ;My_header_16F.h: 45: ADCON1bits.ADCS = 6;
  1993  0B6D  081E               	movf	30,w	;volatile
  1994  0B6E  398F               	andlw	-113
  1995  0B6F  3860               	iorlw	96
  1996  0B70  009E               	movwf	30	;volatile
  1997                           
  1998                           ;My_header_16F.h: 46: ADCON1bits.ADNREF = 0;
  1999  0B71  111E               	bcf	30,2	;volatile
  2000                           
  2001                           ;My_header_16F.h: 47: ADCON1bits.ADPREF = p_ref;
  2002  0B72  081E               	movf	30,w	;volatile
  2003  0B73  0620               	xorwf	adc_init@p_ref^(0+128),w
  2004  0B74  39FC               	andlw	-4
  2005  0B75  0620               	xorwf	adc_init@p_ref^(0+128),w
  2006  0B76  009E               	movwf	30	;volatile
  2007                           
  2008                           ;My_header_16F.h: 48: if (p_ref == 3) FVRCON = 0x83;
  2009  0B77  0820               	movf	adc_init@p_ref^(0+128),w
  2010  0B78  3A03               	xorlw	3
  2011  0B79  1D03               	skipz
  2012  0B7A  0008               	return
  2013  0B7B  3083               	movlw	131
  2014  0B7C  0022               	movlb	2	; select bank2
  2015  0B7D  0097               	movwf	23	;volatile
  2016  0B7E  0008               	return
  2017  0B7F                     __end_of_adc_init:	
  2018                           
  2019                           	psect	text6
  2020  0F18                     __ptext6:	
  2021 ;; *************** function _LCD_init *****************
  2022 ;; Defined at:
  2023 ;;		line 337 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;		None               void
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2037 ;;      Params:         0       0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0
  2039 ;;      Temps:          0       0       3       0       0       0
  2040 ;;      Totals:         0       0       3       0       0       0
  2041 ;;Total ram usage:        3 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:   10
  2044 ;; This function calls:
  2045 ;;		_LCD_Clear
  2046 ;;		_LCD_Command
  2047 ;; This function is called by:
  2048 ;;		_main_init
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _LCD_init
  2054  0F18                     _LCD_init:	
  2055                           
  2056                           ;My_header_16F.h: 338: _delay((unsigned long)((40)*(32000000/4000.0)));
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2060  0F18  3002               	movlw	2
  2061  0F19  0021               	movlb	1	; select bank1
  2062  0F1A  00AB               	movwf	(??_LCD_init^(0+128)+2)
  2063  0F1B  30A0               	movlw	160
  2064  0F1C  00AA               	movwf	(??_LCD_init^(0+128)+1)
  2065  0F1D  3092               	movlw	146
  2066  0F1E  00A9               	movwf	??_LCD_init^(0+128)
  2067  0F1F                     u3887:	
  2068  0F1F  0BA9               	decfsz	??_LCD_init^(0+128),f
  2069  0F20  2F1F               	goto	u3887
  2070  0F21  0BAA               	decfsz	(??_LCD_init^(0+128)+1),f
  2071  0F22  2F1F               	goto	u3887
  2072  0F23  0BAB               	decfsz	(??_LCD_init^(0+128)+2),f
  2073  0F24  2F1F               	goto	u3887
  2074  0F25  0000               	nop
  2075                           
  2076                           ;My_header_16F.h: 339: LCD_Command(0x38);
  2077  0F26  3038               	movlw	56
  2078  0F27  318C  24E7  318F   	fcall	_LCD_Command
  2079                           
  2080                           ;My_header_16F.h: 340: LCD_Command(0x39);
  2081  0F2A  3039               	movlw	57
  2082  0F2B  318C  24E7  318F   	fcall	_LCD_Command
  2083                           
  2084                           ;My_header_16F.h: 341: LCD_Command(0x14);
  2085  0F2E  3014               	movlw	20
  2086  0F2F  318C  24E7  318F   	fcall	_LCD_Command
  2087                           
  2088                           ;My_header_16F.h: 342: LCD_Command(0x70);
  2089  0F32  3070               	movlw	112
  2090  0F33  318C  24E7  318F   	fcall	_LCD_Command
  2091                           
  2092                           ;My_header_16F.h: 343: LCD_Command(0x56);
  2093  0F36  3056               	movlw	86
  2094  0F37  318C  24E7  318F   	fcall	_LCD_Command
  2095                           
  2096                           ;My_header_16F.h: 344: LCD_Command(0x6C);
  2097  0F3A  306C               	movlw	108
  2098  0F3B  318C  24E7  318F   	fcall	_LCD_Command
  2099                           
  2100                           ;My_header_16F.h: 345: _delay((unsigned long)((200)*(32000000/4000.0)));
  2101  0F3E  3009               	movlw	9
  2102  0F3F  0021               	movlb	1	; select bank1
  2103  0F40  00AB               	movwf	(??_LCD_init^(0+128)+2)
  2104  0F41  301E               	movlw	30
  2105  0F42  00AA               	movwf	(??_LCD_init^(0+128)+1)
  2106  0F43  30EB               	movlw	235
  2107  0F44  00A9               	movwf	??_LCD_init^(0+128)
  2108  0F45                     u3897:	
  2109  0F45  0BA9               	decfsz	??_LCD_init^(0+128),f
  2110  0F46  2F45               	goto	u3897
  2111  0F47  0BAA               	decfsz	(??_LCD_init^(0+128)+1),f
  2112  0F48  2F45               	goto	u3897
  2113  0F49  0BAB               	decfsz	(??_LCD_init^(0+128)+2),f
  2114  0F4A  2F45               	goto	u3897
  2115  0F4B  0000               	nop
  2116                           
  2117                           ;My_header_16F.h: 346: LCD_Command(0x38);
  2118  0F4C  3038               	movlw	56
  2119  0F4D  318C  24E7  318F   	fcall	_LCD_Command
  2120                           
  2121                           ;My_header_16F.h: 347: LCD_Command(0x0C);
  2122  0F50  300C               	movlw	12
  2123  0F51  318C  24E7  318F   	fcall	_LCD_Command
  2124                           
  2125                           ;My_header_16F.h: 348: LCD_Command(0x06);
  2126  0F54  3006               	movlw	6
  2127  0F55  318C  24E7  318F   	fcall	_LCD_Command
  2128                           
  2129                           ;My_header_16F.h: 349: LCD_Clear();
  2130  0F58  318B  2327         	fcall	_LCD_Clear
  2131  0F5A  0008               	return
  2132  0F5B                     __end_of_LCD_init:	
  2133                           
  2134                           	psect	text7
  2135  0B27                     __ptext7:	
  2136 ;; *************** function _LCD_Clear *****************
  2137 ;; Defined at:
  2138 ;;		line 280 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;		None               void
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0, pclath, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2152 ;;      Params:         0       0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0
  2154 ;;      Temps:          0       0       2       0       0       0
  2155 ;;      Totals:         0       0       2       0       0       0
  2156 ;;Total ram usage:        2 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    9
  2159 ;; This function calls:
  2160 ;;		_LCD_Command
  2161 ;; This function is called by:
  2162 ;;		_LCD_init
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _LCD_Clear
  2168  0B27                     _LCD_Clear:	
  2169                           
  2170                           ;My_header_16F.h: 281: LCD_Command(0x01);
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2174  0B27  3001               	movlw	1
  2175  0B28  318C  24E7  318B   	fcall	_LCD_Command
  2176                           
  2177                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  2178  0B2B  300C               	movlw	12
  2179  0B2C  0021               	movlb	1	; select bank1
  2180  0B2D  00A8               	movwf	(??_LCD_Clear^(0+128)+1)
  2181  0B2E  306C               	movlw	108
  2182  0B2F  00A7               	movwf	??_LCD_Clear^(0+128)
  2183  0B30                     u3907:	
  2184  0B30  0BA7               	decfsz	??_LCD_Clear^(0+128),f
  2185  0B31  2B30               	goto	u3907
  2186  0B32  0BA8               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2187  0B33  2B30               	goto	u3907
  2188  0B34  0000               	nop
  2189  0B35  0008               	return
  2190  0B36                     __end_of_LCD_Clear:	
  2191                           
  2192                           	psect	text8
  2193  0CE7                     __ptext8:	
  2194 ;; *************** function _LCD_Command *****************
  2195 ;; Defined at:
  2196 ;;		line 267 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  c               1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  c               1    5[BANK1 ] unsigned char 
  2201 ;;  ans             1    6[BANK1 ] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2211 ;;      Params:         0       0       0       0       0       0
  2212 ;;      Locals:         0       0       2       0       0       0
  2213 ;;      Temps:          0       0       1       0       0       0
  2214 ;;      Totals:         0       0       3       0       0       0
  2215 ;;Total ram usage:        3 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    8
  2218 ;; This function calls:
  2219 ;;		_I2C_Send
  2220 ;;		_I2C_Start
  2221 ;;		_I2C_Stop
  2222 ;; This function is called by:
  2223 ;;		_LCD_Clear
  2224 ;;		_LCD_init
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _LCD_Command
  2230  0CE7                     _LCD_Command:	
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2234                           ;LCD_Command@c stored from wreg
  2235  0CE7  0021               	movlb	1	; select bank1
  2236  0CE8  00A5               	movwf	LCD_Command@c^(0+128)
  2237                           
  2238                           ;My_header_16F.h: 268: uint8_t ans;
  2239                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  2240  0CE9  01A2               	clrf	I2C_Start@rw^(0+128)
  2241  0CEA  303E               	movlw	62
  2242  0CEB  318C  244E  318C   	fcall	_I2C_Start
  2243  0CEE  0021               	movlb	1	; select bank1
  2244  0CEF  00A4               	movwf	??_LCD_Command^(0+128)
  2245  0CF0  0824               	movf	??_LCD_Command^(0+128),w
  2246  0CF1  00A6               	movwf	LCD_Command@ans^(0+128)
  2247                           
  2248                           ;My_header_16F.h: 271: if (ans == 0) {
  2249  0CF2  08A6               	movf	LCD_Command@ans^(0+128),f
  2250  0CF3  1D03               	skipz
  2251  0CF4  2CFE               	goto	l210
  2252                           
  2253                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  2254  0CF5  3080               	movlw	128
  2255  0CF6  318B  2358  318C   	fcall	_I2C_Send
  2256                           
  2257                           ;My_header_16F.h: 274: I2C_Send(c);
  2258  0CF9  0021               	movlb	1	; select bank1
  2259  0CFA  0825               	movf	LCD_Command@c^(0+128),w
  2260  0CFB  318B  2358  318C   	fcall	_I2C_Send
  2261  0CFE                     l210:	
  2262                           
  2263                           ;My_header_16F.h: 275: }
  2264                           ;My_header_16F.h: 276: I2C_Stop();
  2265  0CFE  318A  22E8  318C   	fcall	_I2C_Stop
  2266                           
  2267                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2268  0D01  3045               	movlw	69
  2269  0D02  0021               	movlb	1	; select bank1
  2270  0D03  00A4               	movwf	??_LCD_Command^(0+128)
  2271  0D04                     u3917:	
  2272  0D04  0BA4               	decfsz	??_LCD_Command^(0+128),f
  2273  0D05  2D04               	goto	u3917
  2274  0D06  0008               	return
  2275  0D07                     __end_of_LCD_Command:	
  2276                           
  2277                           	psect	text9
  2278  0AFF                     __ptext9:	
  2279 ;; *************** function _I2C_init *****************
  2280 ;; Defined at:
  2281 ;;		line 203 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;		None               void
  2288 ;; Registers used:
  2289 ;;		wreg
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2295 ;;      Params:         0       0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0
  2298 ;;      Totals:         0       0       0       0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    6
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_main_init
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _I2C_init
  2311  0AFF                     _I2C_init:	
  2312                           
  2313                           ;My_header_16F.h: 204: SSP1STAT = 0b10000000;
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _I2C_init: [wreg]
  2317  0AFF  3080               	movlw	128
  2318  0B00  0024               	movlb	4	; select bank4
  2319  0B01  0094               	movwf	20	;volatile
  2320                           
  2321                           ;My_header_16F.h: 205: SSP1CON1 = 0b00101000;
  2322  0B02  3028               	movlw	40
  2323  0B03  0095               	movwf	21	;volatile
  2324                           
  2325                           ;My_header_16F.h: 206: SSP1ADD = 0x13;
  2326  0B04  3013               	movlw	19
  2327  0B05  0092               	movwf	18	;volatile
  2328                           
  2329                           ;My_header_16F.h: 209: SSP1IF = 0;
  2330  0B06  0020               	movlb	0	; select bank0
  2331  0B07  1191               	bcf	17,3	;volatile
  2332                           
  2333                           ;My_header_16F.h: 210: BCL1IF = 0;
  2334  0B08  1192               	bcf	18,3	;volatile
  2335  0B09  0008               	return
  2336  0B0A                     __end_of_I2C_init:	
  2337                           
  2338                           	psect	text10
  2339  0CC7                     __ptext10:	
  2340 ;; *************** function _flag_read *****************
  2341 ;; Defined at:
  2342 ;;		line 259 in file "PIC16F1827-ChargeStation4-01.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  port            1    wreg     unsigned char 
  2345 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  port            1    1[BANK1 ] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      unsigned char 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2357 ;;      Params:         0       0       1       0       0       0
  2358 ;;      Locals:         0       0       1       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0
  2360 ;;      Totals:         0       0       2       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    6
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _flag_read
  2373  0CC7                     _flag_read:	
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _flag_read: [wreg-fsr0h+status,2+status,0]
  2377                           ;flag_read@port stored from wreg
  2378  0CC7  0021               	movlb	1	; select bank1
  2379  0CC8  00A1               	movwf	flag_read@port^(0+128)
  2380                           
  2381                           ;PIC16F1827-ChargeStation4-01.c: 260: switch (port) {
  2382  0CC9  2CDB               	goto	l3022
  2383  0CCA                     l3004:	
  2384                           ;PIC16F1827-ChargeStation4-01.c: 261: case 2:
  2385                           
  2386                           
  2387                           ;PIC16F1827-ChargeStation4-01.c: 262: return (sw_RA3.flags) & bit_and;
  2388  0CCA  0020               	movlb	0	; select bank0
  2389  0CCB  0834               	movf	_sw_RA3+2,w
  2390  0CCC  0021               	movlb	1	; select bank1
  2391  0CCD  0520               	andwf	flag_read@bit_and^(0+128),w
  2392  0CCE  0008               	return
  2393  0CCF                     l3008:	
  2394                           ;PIC16F1827-ChargeStation4-01.c: 263: case 1:
  2395                           
  2396                           
  2397                           ;PIC16F1827-ChargeStation4-01.c: 264: return (sw_RA4.flags) & bit_and;
  2398  0CCF  0020               	movlb	0	; select bank0
  2399  0CD0  0837               	movf	_sw_RA4+2,w
  2400  0CD1  0021               	movlb	1	; select bank1
  2401  0CD2  0520               	andwf	flag_read@bit_and^(0+128),w
  2402  0CD3  0008               	return
  2403  0CD4                     l3012:	
  2404                           ;PIC16F1827-ChargeStation4-01.c: 265: case 0:
  2405                           
  2406                           
  2407                           ;PIC16F1827-ChargeStation4-01.c: 266: return (sw_RA5.flags) & bit_and;
  2408  0CD4  0020               	movlb	0	; select bank0
  2409  0CD5  083A               	movf	_sw_RA5+2,w
  2410  0CD6  0021               	movlb	1	; select bank1
  2411  0CD7  0520               	andwf	flag_read@bit_and^(0+128),w
  2412  0CD8  0008               	return
  2413  0CD9                     l3016:	
  2414                           ;PIC16F1827-ChargeStation4-01.c: 267: default:
  2415                           
  2416                           
  2417                           ;PIC16F1827-ChargeStation4-01.c: 268: return 0;
  2418  0CD9  3000               	movlw	0
  2419                           
  2420                           ;PIC16F1827-ChargeStation4-01.c: 269: }
  2421  0CDA  0008               	return
  2422  0CDB                     l3022:	
  2423  0CDB  0821               	movf	flag_read@port^(0+128),w
  2424                           
  2425                           ; Switch size 1, requested type "space"
  2426                           ; Number of cases is 3, Range of values is 0 to 2
  2427                           ; switch strategies available:
  2428                           ; Name         Instructions Cycles
  2429                           ; simple_byte           10     6 (average)
  2430                           ; direct_byte           12     6 (fixed)
  2431                           ; jumptable            260     6 (fixed)
  2432                           ;	Chosen strategy is simple_byte
  2433  0CDC  3A00               	xorlw	0	; case 0
  2434  0CDD  1903               	skipnz
  2435  0CDE  2CD4               	goto	l3012
  2436  0CDF  3A01               	xorlw	1	; case 1
  2437  0CE0  1903               	skipnz
  2438  0CE1  2CCF               	goto	l3008
  2439  0CE2  3A03               	xorlw	3	; case 2
  2440  0CE3  1903               	skipnz
  2441  0CE4  2CCA               	goto	l3004
  2442  0CE5  2CD9               	goto	l3016
  2443  0CE6  0008               	return
  2444  0CE7                     __end_of_flag_read:	
  2445                           
  2446                           	psect	text11
  2447  0D2A                     __ptext11:	
  2448 ;; *************** function _flag_clear *****************
  2449 ;; Defined at:
  2450 ;;		line 272 in file "PIC16F1827-ChargeStation4-01.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  port            1    wreg     unsigned char 
  2453 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  port            1    2[BANK1 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;		None               void
  2458 ;; Registers used:
  2459 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2465 ;;      Params:         0       0       1       0       0       0
  2466 ;;      Locals:         0       0       1       0       0       0
  2467 ;;      Temps:          0       0       1       0       0       0
  2468 ;;      Totals:         0       0       3       0       0       0
  2469 ;;Total ram usage:        3 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    6
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _flag_clear
  2481  0D2A                     _flag_clear:	
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _flag_clear: [wreg-fsr0h+status,2+status,0]
  2485                           ;flag_clear@port stored from wreg
  2486  0D2A  0021               	movlb	1	; select bank1
  2487  0D2B  00A2               	movwf	flag_clear@port^(0+128)
  2488                           
  2489                           ;PIC16F1827-ChargeStation4-01.c: 273: switch (port) {
  2490  0D2C  2D41               	goto	l3034
  2491  0D2D                     l3026:	
  2492                           ;PIC16F1827-ChargeStation4-01.c: 274: case 2:
  2493                           
  2494                           
  2495                           ;PIC16F1827-ChargeStation4-01.c: 275: sw_RA3.flags &= bit_and;
  2496  0D2D  0820               	movf	flag_clear@bit_and^(0+128),w
  2497  0D2E  00A1               	movwf	??_flag_clear^(0+128)
  2498  0D2F  0821               	movf	??_flag_clear^(0+128),w
  2499  0D30  0020               	movlb	0	; select bank0
  2500  0D31  05B4               	andwf	_sw_RA3+2,f
  2501                           
  2502                           ;PIC16F1827-ChargeStation4-01.c: 276: break;
  2503  0D32  0008               	return
  2504  0D33                     l3028:	
  2505                           ;PIC16F1827-ChargeStation4-01.c: 277: case 1:
  2506                           
  2507                           
  2508                           ;PIC16F1827-ChargeStation4-01.c: 278: sw_RA4.flags &= bit_and;
  2509  0D33  0021               	movlb	1	; select bank1
  2510  0D34  0820               	movf	flag_clear@bit_and^(0+128),w
  2511  0D35  00A1               	movwf	??_flag_clear^(0+128)
  2512  0D36  0821               	movf	??_flag_clear^(0+128),w
  2513  0D37  0020               	movlb	0	; select bank0
  2514  0D38  05B7               	andwf	_sw_RA4+2,f
  2515                           
  2516                           ;PIC16F1827-ChargeStation4-01.c: 279: break;
  2517  0D39  0008               	return
  2518  0D3A                     l3030:	
  2519                           ;PIC16F1827-ChargeStation4-01.c: 280: case 0:
  2520                           
  2521                           
  2522                           ;PIC16F1827-ChargeStation4-01.c: 281: sw_RA5.flags &= bit_and;
  2523  0D3A  0021               	movlb	1	; select bank1
  2524  0D3B  0820               	movf	flag_clear@bit_and^(0+128),w
  2525  0D3C  00A1               	movwf	??_flag_clear^(0+128)
  2526  0D3D  0821               	movf	??_flag_clear^(0+128),w
  2527  0D3E  0020               	movlb	0	; select bank0
  2528  0D3F  05BA               	andwf	_sw_RA5+2,f
  2529                           
  2530                           ;PIC16F1827-ChargeStation4-01.c: 285: }
  2531                           
  2532                           ;PIC16F1827-ChargeStation4-01.c: 284: break;
  2533                           
  2534                           ;PIC16F1827-ChargeStation4-01.c: 283: default:
  2535                           
  2536                           ;PIC16F1827-ChargeStation4-01.c: 282: break;
  2537  0D40  0008               	return
  2538  0D41                     l3034:	
  2539  0D41  0021               	movlb	1	; select bank1
  2540  0D42  0822               	movf	flag_clear@port^(0+128),w
  2541                           
  2542                           ; Switch size 1, requested type "space"
  2543                           ; Number of cases is 3, Range of values is 0 to 2
  2544                           ; switch strategies available:
  2545                           ; Name         Instructions Cycles
  2546                           ; simple_byte           10     6 (average)
  2547                           ; direct_byte           12     6 (fixed)
  2548                           ; jumptable            260     6 (fixed)
  2549                           ;	Chosen strategy is simple_byte
  2550  0D43  3A00               	xorlw	0	; case 0
  2551  0D44  1903               	skipnz
  2552  0D45  2D3A               	goto	l3030
  2553  0D46  3A01               	xorlw	1	; case 1
  2554  0D47  1903               	skipnz
  2555  0D48  2D33               	goto	l3028
  2556  0D49  3A03               	xorlw	3	; case 2
  2557  0D4A  1903               	skipnz
  2558  0D4B  2D2D               	goto	l3026
  2559  0D4C  2D4D               	goto	l389
  2560  0D4D                     l389:	
  2561  0D4D  0008               	return
  2562  0D4E                     __end_of_flag_clear:	
  2563                           
  2564                           	psect	text12
  2565  0DF0                     __ptext12:	
  2566 ;; *************** function _OUT *****************
  2567 ;; Defined at:
  2568 ;;		line 215 in file "PIC16F1827-ChargeStation4-01.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  b               1    wreg     unsigned char 
  2571 ;;  value           1    0[BANK1 ] unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  b               1    1[BANK1 ] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;		None               void
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2583 ;;      Params:         0       0       1       0       0       0
  2584 ;;      Locals:         0       0       1       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0
  2586 ;;      Totals:         0       0       2       0       0       0
  2587 ;;Total ram usage:        2 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    6
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           
  2598                           ;psect for function _OUT
  2599  0DF0                     _OUT:	
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _OUT: [wreg-fsr0h+status,2+status,0]
  2603                           ;OUT@b stored from wreg
  2604  0DF0  0021               	movlb	1	; select bank1
  2605  0DF1  00A1               	movwf	OUT@b^(0+128)
  2606                           
  2607                           ;PIC16F1827-ChargeStation4-01.c: 216: switch (b) {
  2608  0DF2  2E0E               	goto	l2994
  2609  0DF3                     l351:	
  2610                           ;PIC16F1827-ChargeStation4-01.c: 217: case 0:
  2611                           
  2612                           
  2613                           ;PIC16F1827-ChargeStation4-01.c: 218: if (value) {
  2614  0DF3  0820               	movf	OUT@value^(0+128),w
  2615  0DF4  1903               	btfsc	3,2
  2616  0DF5  2DF9               	goto	l352
  2617                           
  2618                           ;PIC16F1827-ChargeStation4-01.c: 219: LATB0 = 0;
  2619  0DF6  0022               	movlb	2	; select bank2
  2620  0DF7  100D               	bcf	13,0	;volatile
  2621                           
  2622                           ;PIC16F1827-ChargeStation4-01.c: 220: } else {
  2623  0DF8  0008               	return
  2624  0DF9                     l352:	
  2625                           
  2626                           ;PIC16F1827-ChargeStation4-01.c: 221: LATB0 = 1;
  2627  0DF9  0022               	movlb	2	; select bank2
  2628  0DFA  140D               	bsf	13,0	;volatile
  2629                           
  2630                           ;PIC16F1827-ChargeStation4-01.c: 222: }
  2631                           ;PIC16F1827-ChargeStation4-01.c: 223: break;
  2632  0DFB  0008               	return
  2633  0DFC                     l355:	
  2634                           ;PIC16F1827-ChargeStation4-01.c: 224: case 1:
  2635                           
  2636                           
  2637                           ;PIC16F1827-ChargeStation4-01.c: 225: if (value) {
  2638  0DFC  0820               	movf	OUT@value^(0+128),w
  2639  0DFD  1903               	btfsc	3,2
  2640  0DFE  2E02               	goto	l356
  2641                           
  2642                           ;PIC16F1827-ChargeStation4-01.c: 226: LATB3 = 0;
  2643  0DFF  0022               	movlb	2	; select bank2
  2644  0E00  118D               	bcf	13,3	;volatile
  2645                           
  2646                           ;PIC16F1827-ChargeStation4-01.c: 227: } else {
  2647  0E01  0008               	return
  2648  0E02                     l356:	
  2649                           
  2650                           ;PIC16F1827-ChargeStation4-01.c: 228: LATB3 = 1;
  2651  0E02  0022               	movlb	2	; select bank2
  2652  0E03  158D               	bsf	13,3	;volatile
  2653                           
  2654                           ;PIC16F1827-ChargeStation4-01.c: 229: }
  2655                           ;PIC16F1827-ChargeStation4-01.c: 230: break;
  2656  0E04  0008               	return
  2657  0E05                     l358:	
  2658                           ;PIC16F1827-ChargeStation4-01.c: 231: case 2:
  2659                           
  2660                           
  2661                           ;PIC16F1827-ChargeStation4-01.c: 232: if (value) {
  2662  0E05  0820               	movf	OUT@value^(0+128),w
  2663  0E06  1903               	btfsc	3,2
  2664  0E07  2E0B               	goto	l359
  2665                           
  2666                           ;PIC16F1827-ChargeStation4-01.c: 233: LATB6 = 0;
  2667  0E08  0022               	movlb	2	; select bank2
  2668  0E09  130D               	bcf	13,6	;volatile
  2669                           
  2670                           ;PIC16F1827-ChargeStation4-01.c: 234: } else {
  2671  0E0A  0008               	return
  2672  0E0B                     l359:	
  2673                           
  2674                           ;PIC16F1827-ChargeStation4-01.c: 235: LATB6 = 1;
  2675  0E0B  0022               	movlb	2	; select bank2
  2676  0E0C  170D               	bsf	13,6	;volatile
  2677                           
  2678                           ;PIC16F1827-ChargeStation4-01.c: 240: }
  2679                           
  2680                           ;PIC16F1827-ChargeStation4-01.c: 239: break;
  2681                           
  2682                           ;PIC16F1827-ChargeStation4-01.c: 238: default:
  2683                           
  2684                           ;PIC16F1827-ChargeStation4-01.c: 236: }
  2685                           ;PIC16F1827-ChargeStation4-01.c: 237: break;
  2686  0E0D  0008               	return
  2687  0E0E                     l2994:	
  2688  0E0E  0021               	movlb	1	; select bank1
  2689  0E0F  0821               	movf	OUT@b^(0+128),w
  2690                           
  2691                           ; Switch size 1, requested type "space"
  2692                           ; Number of cases is 3, Range of values is 0 to 2
  2693                           ; switch strategies available:
  2694                           ; Name         Instructions Cycles
  2695                           ; simple_byte           10     6 (average)
  2696                           ; direct_byte           12     6 (fixed)
  2697                           ; jumptable            260     6 (fixed)
  2698                           ;	Chosen strategy is simple_byte
  2699  0E10  3A00               	xorlw	0	; case 0
  2700  0E11  1903               	skipnz
  2701  0E12  2DF3               	goto	l351
  2702  0E13  3A01               	xorlw	1	; case 1
  2703  0E14  1903               	skipnz
  2704  0E15  2DFC               	goto	l355
  2705  0E16  3A03               	xorlw	3	; case 2
  2706  0E17  1903               	skipnz
  2707  0E18  2E05               	goto	l358
  2708  0E19  2E1A               	goto	l362
  2709  0E1A                     l362:	
  2710  0E1A  0008               	return
  2711  0E1B                     __end_of_OUT:	
  2712                           
  2713                           	psect	text13
  2714  0D74                     __ptext13:	
  2715 ;; *************** function _LED *****************
  2716 ;; Defined at:
  2717 ;;		line 243 in file "PIC16F1827-ChargeStation4-01.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  b               1    wreg     unsigned char 
  2720 ;;  value           1    0[BANK1 ] unsigned char 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  b               1    1[BANK1 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;		None               void
  2725 ;; Registers used:
  2726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2732 ;;      Params:         0       0       1       0       0       0
  2733 ;;      Locals:         0       0       1       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0
  2735 ;;      Totals:         0       0       2       0       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    6
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _LED
  2748  0D74                     _LED:	
  2749                           
  2750                           ;incstack = 0
  2751                           ; Regs used in _LED: [wreg-fsr0h+status,2+status,0]
  2752                           ;LED@b stored from wreg
  2753  0D74  0021               	movlb	1	; select bank1
  2754  0D75  00A1               	movwf	LED@b^(0+128)
  2755                           
  2756                           ;PIC16F1827-ChargeStation4-01.c: 244: switch (b) {
  2757  0D76  2D8F               	goto	l3000
  2758  0D77                     l366:	
  2759                           ;PIC16F1827-ChargeStation4-01.c: 245: case 0:
  2760                           
  2761                           
  2762                           ;PIC16F1827-ChargeStation4-01.c: 246: LATB5 = value;
  2763  0D77  1C20               	btfss	LED@value^(0+128),0
  2764  0D78  2D7C               	goto	u3290
  2765  0D79  0022               	movlb	2	; select bank2
  2766  0D7A  168D               	bsf	13,5	;volatile
  2767  0D7B  0008               	return
  2768  0D7C                     u3290:	
  2769  0D7C  0022               	movlb	2	; select bank2
  2770  0D7D  128D               	bcf	13,5	;volatile
  2771                           
  2772                           ;PIC16F1827-ChargeStation4-01.c: 247: break;
  2773  0D7E  0008               	return
  2774  0D7F                     l368:	
  2775                           ;PIC16F1827-ChargeStation4-01.c: 248: case 1:
  2776                           
  2777                           
  2778                           ;PIC16F1827-ChargeStation4-01.c: 249: LATA6 = value;
  2779  0D7F  1C20               	btfss	LED@value^(0+128),0
  2780  0D80  2D84               	goto	u3310
  2781  0D81  0022               	movlb	2	; select bank2
  2782  0D82  170C               	bsf	12,6	;volatile
  2783  0D83  0008               	return
  2784  0D84                     u3310:	
  2785  0D84  0022               	movlb	2	; select bank2
  2786  0D85  130C               	bcf	12,6	;volatile
  2787                           
  2788                           ;PIC16F1827-ChargeStation4-01.c: 250: break;
  2789  0D86  0008               	return
  2790  0D87                     l369:	
  2791                           ;PIC16F1827-ChargeStation4-01.c: 251: case 2:
  2792                           
  2793                           
  2794                           ;PIC16F1827-ChargeStation4-01.c: 252: LATA7 = value;
  2795  0D87  1C20               	btfss	LED@value^(0+128),0
  2796  0D88  2D8C               	goto	u3330
  2797  0D89  0022               	movlb	2	; select bank2
  2798  0D8A  178C               	bsf	12,7	;volatile
  2799  0D8B  0008               	return
  2800  0D8C                     u3330:	
  2801  0D8C  0022               	movlb	2	; select bank2
  2802  0D8D  138C               	bcf	12,7	;volatile
  2803                           
  2804                           ;PIC16F1827-ChargeStation4-01.c: 256: }
  2805                           
  2806                           ;PIC16F1827-ChargeStation4-01.c: 255: break;
  2807                           
  2808                           ;PIC16F1827-ChargeStation4-01.c: 254: default:
  2809                           
  2810                           ;PIC16F1827-ChargeStation4-01.c: 253: break;
  2811  0D8E  0008               	return
  2812  0D8F                     l3000:	
  2813  0D8F  0021               	movlb	1	; select bank1
  2814  0D90  0821               	movf	LED@b^(0+128),w
  2815                           
  2816                           ; Switch size 1, requested type "space"
  2817                           ; Number of cases is 3, Range of values is 0 to 2
  2818                           ; switch strategies available:
  2819                           ; Name         Instructions Cycles
  2820                           ; simple_byte           10     6 (average)
  2821                           ; direct_byte           12     6 (fixed)
  2822                           ; jumptable            260     6 (fixed)
  2823                           ;	Chosen strategy is simple_byte
  2824  0D91  3A00               	xorlw	0	; case 0
  2825  0D92  1903               	skipnz
  2826  0D93  2D77               	goto	l366
  2827  0D94  3A01               	xorlw	1	; case 1
  2828  0D95  1903               	skipnz
  2829  0D96  2D7F               	goto	l368
  2830  0D97  3A03               	xorlw	3	; case 2
  2831  0D98  1903               	skipnz
  2832  0D99  2D87               	goto	l369
  2833  0D9A  2D9B               	goto	l371
  2834  0D9B                     l371:	
  2835  0D9B  0008               	return
  2836  0D9C                     __end_of_LED:	
  2837                           
  2838                           	psect	text14
  2839  0EDB                     __ptext14:	
  2840 ;; *************** function _EEP_Read *****************
  2841 ;; Defined at:
  2842 ;;		line 435 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  Reg_h           1    wreg     unsigned char 
  2845 ;;  Reg_l           1    6[BANK1 ] unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  Reg_h           1    8[BANK1 ] unsigned char 
  2848 ;;  ans             1   10[BANK1 ] unsigned char 
  2849 ;;  data            1    9[BANK1 ] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      unsigned char 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2859 ;;      Params:         0       0       1       0       0       0
  2860 ;;      Locals:         0       0       3       0       0       0
  2861 ;;      Temps:          0       0       1       0       0       0
  2862 ;;      Totals:         0       0       5       0       0       0
  2863 ;;Total ram usage:        5 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    8
  2866 ;; This function calls:
  2867 ;;		_I2C_Receive
  2868 ;;		_I2C_Send
  2869 ;;		_I2C_Start
  2870 ;;		_I2C_Stop
  2871 ;;		_I2C_rStart
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _EEP_Read
  2879  0EDB                     _EEP_Read:	
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in _EEP_Read: [wreg+status,2+status,0+pclath+cstack]
  2883                           ;EEP_Read@Reg_h stored from wreg
  2884  0EDB  0021               	movlb	1	; select bank1
  2885  0EDC  00A8               	movwf	EEP_Read@Reg_h^(0+128)
  2886                           
  2887                           ;My_header_16F.h: 436: uint8_t ans;
  2888                           ;My_header_16F.h: 437: uint8_t data;
  2889                           ;My_header_16F.h: 439: ans = I2C_Start(0x50, 0);
  2890  0EDD  01A2               	clrf	I2C_Start@rw^(0+128)
  2891  0EDE  3050               	movlw	80
  2892  0EDF  318C  244E  318E   	fcall	_I2C_Start
  2893  0EE2  0021               	movlb	1	; select bank1
  2894  0EE3  00A7               	movwf	??_EEP_Read^(0+128)
  2895  0EE4  0827               	movf	??_EEP_Read^(0+128),w
  2896  0EE5  00AA               	movwf	EEP_Read@ans^(0+128)
  2897                           
  2898                           ;My_header_16F.h: 440: if (ans == 0) {
  2899  0EE6  08AA               	movf	EEP_Read@ans^(0+128),f
  2900  0EE7  1D03               	skipz
  2901  0EE8  2EF2               	goto	l264
  2902                           
  2903                           ;My_header_16F.h: 441: I2C_Send(Reg_h);
  2904  0EE9  0828               	movf	EEP_Read@Reg_h^(0+128),w
  2905  0EEA  318B  2358  318E   	fcall	_I2C_Send
  2906                           
  2907                           ;My_header_16F.h: 442: I2C_Send(Reg_l);
  2908  0EED  0021               	movlb	1	; select bank1
  2909  0EEE  0826               	movf	EEP_Read@Reg_l^(0+128),w
  2910  0EEF  318B  2358  318E   	fcall	_I2C_Send
  2911  0EF2                     l264:	
  2912                           
  2913                           ;My_header_16F.h: 443: }
  2914                           ;My_header_16F.h: 444: ans = I2C_rStart(0x50, 1);
  2915  0EF2  3050               	movlw	80
  2916  0EF3  0021               	movlb	1	; select bank1
  2917  0EF4  00A2               	movwf	I2C_rStart@adrs^(0+128)
  2918  0EF5  3000               	movlw	0
  2919  0EF6  00A3               	movwf	(I2C_rStart@adrs^(0+128)+1)
  2920  0EF7  3001               	movlw	1
  2921  0EF8  00A4               	movwf	I2C_rStart@rw^(0+128)
  2922  0EF9  3000               	movlw	0
  2923  0EFA  00A5               	movwf	(I2C_rStart@rw^(0+128)+1)
  2924  0EFB  318B  23C6  318E   	fcall	_I2C_rStart
  2925  0EFE  0021               	movlb	1	; select bank1
  2926  0EFF  00A7               	movwf	??_EEP_Read^(0+128)
  2927  0F00  0827               	movf	??_EEP_Read^(0+128),w
  2928  0F01  00AA               	movwf	EEP_Read@ans^(0+128)
  2929                           
  2930                           ;My_header_16F.h: 445: if (ans == 0) {
  2931  0F02  08AA               	movf	EEP_Read@ans^(0+128),f
  2932  0F03  1D03               	skipz
  2933  0F04  2F0D               	goto	l265
  2934                           
  2935                           ;My_header_16F.h: 446: data = I2C_Receive(1);
  2936  0F05  3001               	movlw	1
  2937  0F06  318C  24A7  318E   	fcall	_I2C_Receive
  2938  0F09  0021               	movlb	1	; select bank1
  2939  0F0A  00A7               	movwf	??_EEP_Read^(0+128)
  2940  0F0B  0827               	movf	??_EEP_Read^(0+128),w
  2941  0F0C  00A9               	movwf	EEP_Read@data^(0+128)
  2942  0F0D                     l265:	
  2943                           
  2944                           ;My_header_16F.h: 447: }
  2945                           ;My_header_16F.h: 448: I2C_Stop();
  2946  0F0D  318A  22E8  318E   	fcall	_I2C_Stop
  2947                           
  2948                           ;My_header_16F.h: 449: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2949  0F10  3045               	movlw	69
  2950  0F11  0021               	movlb	1	; select bank1
  2951  0F12  00A7               	movwf	??_EEP_Read^(0+128)
  2952  0F13                     u3927:	
  2953  0F13  0BA7               	decfsz	??_EEP_Read^(0+128),f
  2954  0F14  2F13               	goto	u3927
  2955                           
  2956                           ;My_header_16F.h: 450: return data;
  2957  0F15  0021               	movlb	1	; select bank1
  2958  0F16  0829               	movf	EEP_Read@data^(0+128),w
  2959  0F17  0008               	return
  2960  0F18                     __end_of_EEP_Read:	
  2961                           
  2962                           	psect	text15
  2963  0BC6                     __ptext15:	
  2964 ;; *************** function _I2C_rStart *****************
  2965 ;; Defined at:
  2966 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  adrs            2    2[BANK1 ] int 
  2969 ;;  rw              2    4[BANK1 ] int 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      unsigned char 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2981 ;;      Params:         0       0       4       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0
  2984 ;;      Totals:         0       0       4       0       0       0
  2985 ;;Total ram usage:        4 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    7
  2988 ;; This function calls:
  2989 ;;		_I2C_IdleCheck
  2990 ;; This function is called by:
  2991 ;;		_EEP_Read
  2992 ;;		_RTC_Read
  2993 ;;		_TM_Read
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _I2C_rStart
  2999  0BC6                     _I2C_rStart:	
  3000                           
  3001                           ;My_header_16F.h: 227: I2C_IdleCheck(0x5);
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  3005  0BC6  3005               	movlw	5
  3006  0BC7  318B  2318  318B   	fcall	_I2C_IdleCheck
  3007                           
  3008                           ;My_header_16F.h: 228: SSP1CON2bits.RSEN = 1;
  3009  0BCA  0024               	movlb	4	; select bank4
  3010  0BCB  1496               	bsf	22,1	;volatile
  3011                           
  3012                           ;My_header_16F.h: 230: I2C_IdleCheck(0x5);
  3013  0BCC  3005               	movlw	5
  3014  0BCD  318B  2318  318B   	fcall	_I2C_IdleCheck
  3015                           
  3016                           ;My_header_16F.h: 231: SSP1IF = 0;
  3017  0BD0  0020               	movlb	0	; select bank0
  3018  0BD1  1191               	bcf	17,3	;volatile
  3019                           
  3020                           ;My_header_16F.h: 232: SSP1BUF = (char) ((adrs << 1) + rw);
  3021  0BD2  0021               	movlb	1	; select bank1
  3022  0BD3  3522               	lslf	I2C_rStart@adrs^(0+128),w
  3023  0BD4  0724               	addwf	I2C_rStart@rw^(0+128),w
  3024  0BD5  0024               	movlb	4	; select bank4
  3025  0BD6  0091               	movwf	17	;volatile
  3026  0BD7                     l192:	
  3027                           ;My_header_16F.h: 233: while (!SSP1IF);
  3028                           
  3029  0BD7  0020               	movlb	0	; select bank0
  3030  0BD8  1D91               	btfss	17,3	;volatile
  3031  0BD9  2BD7               	goto	l192
  3032                           
  3033                           ;My_header_16F.h: 234: return SSP1CON2bits.ACKSTAT;
  3034  0BDA  0024               	movlb	4	; select bank4
  3035  0BDB  0E16               	swapf	22,w	;volatile
  3036  0BDC  0C89               	rrf	9,f
  3037  0BDD  0C89               	rrf	9,f
  3038  0BDE  3901               	andlw	1
  3039  0BDF  0008               	return
  3040  0BE0                     __end_of_I2C_rStart:	
  3041                           
  3042                           	psect	text16
  3043  0AE8                     __ptext16:	
  3044 ;; *************** function _I2C_Stop *****************
  3045 ;; Defined at:
  3046 ;;		line 237 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;		None               void
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0, pclath, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3060 ;;      Params:         0       0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    7
  3067 ;; This function calls:
  3068 ;;		_I2C_IdleCheck
  3069 ;; This function is called by:
  3070 ;;		_LCD_Command
  3071 ;;		_EEP_Read
  3072 ;;		_LCD_CreateChar
  3073 ;;		_RTC_Write
  3074 ;;		_RTC_Read
  3075 ;;		_TM_init
  3076 ;;		_TM_Read
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _I2C_Stop
  3082  0AE8                     _I2C_Stop:	
  3083                           
  3084                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3088  0AE8  3005               	movlw	5
  3089  0AE9  318B  2318         	fcall	_I2C_IdleCheck
  3090                           
  3091                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  3092  0AEB  0024               	movlb	4	; select bank4
  3093  0AEC  1516               	bsf	22,2	;volatile
  3094  0AED  0008               	return
  3095  0AEE                     __end_of_I2C_Stop:	
  3096                           
  3097                           	psect	text17
  3098  0C4E                     __ptext17:	
  3099 ;; *************** function _I2C_Start *****************
  3100 ;; Defined at:
  3101 ;;		line 213 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  adrs            1    wreg     unsigned char 
  3104 ;;  rw              1    2[BANK1 ] unsigned char 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  adrs            1    3[BANK1 ] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      unsigned char 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0, pclath, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3116 ;;      Params:         0       0       1       0       0       0
  3117 ;;      Locals:         0       0       1       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0
  3119 ;;      Totals:         0       0       2       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    7
  3123 ;; This function calls:
  3124 ;;		_I2C_IdleCheck
  3125 ;; This function is called by:
  3126 ;;		_LCD_Command
  3127 ;;		_EEP_Read
  3128 ;;		_LCD_CreateChar
  3129 ;;		_RTC_Write
  3130 ;;		_RTC_Read
  3131 ;;		_TM_init
  3132 ;;		_TM_Read
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _I2C_Start
  3138  0C4E                     _I2C_Start:	
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3142                           ;I2C_Start@adrs stored from wreg
  3143  0C4E  0021               	movlb	1	; select bank1
  3144  0C4F  00A3               	movwf	I2C_Start@adrs^(0+128)
  3145                           
  3146                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  3147  0C50  3005               	movlw	5
  3148  0C51  318B  2318  318C   	fcall	_I2C_IdleCheck
  3149                           
  3150                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  3151  0C54  0024               	movlb	4	; select bank4
  3152  0C55  1416               	bsf	22,0	;volatile
  3153                           
  3154                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  3155  0C56  3005               	movlw	5
  3156  0C57  318B  2318  318C   	fcall	_I2C_IdleCheck
  3157                           
  3158                           ;My_header_16F.h: 219: SSP1IF = 0;
  3159  0C5A  0020               	movlb	0	; select bank0
  3160  0C5B  1191               	bcf	17,3	;volatile
  3161                           
  3162                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3163  0C5C  0021               	movlb	1	; select bank1
  3164  0C5D  3523               	lslf	I2C_Start@adrs^(0+128),w
  3165  0C5E  0722               	addwf	I2C_Start@rw^(0+128),w
  3166  0C5F  0024               	movlb	4	; select bank4
  3167  0C60  0091               	movwf	17	;volatile
  3168  0C61                     l186:	
  3169                           ;My_header_16F.h: 221: while (!SSP1IF);
  3170                           
  3171  0C61  0020               	movlb	0	; select bank0
  3172  0C62  1D91               	btfss	17,3	;volatile
  3173  0C63  2C61               	goto	l186
  3174                           
  3175                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  3176  0C64  0024               	movlb	4	; select bank4
  3177  0C65  0E16               	swapf	22,w	;volatile
  3178  0C66  0C89               	rrf	9,f
  3179  0C67  0C89               	rrf	9,f
  3180  0C68  3901               	andlw	1
  3181  0C69  0008               	return
  3182  0C6A                     __end_of_I2C_Start:	
  3183                           
  3184                           	psect	text18
  3185  0B58                     __ptext18:	
  3186 ;; *************** function _I2C_Send *****************
  3187 ;; Defined at:
  3188 ;;		line 243 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  data            1    wreg     unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  data            1    2[BANK1 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      unsigned char 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3202 ;;      Params:         0       0       0       0       0       0
  3203 ;;      Locals:         0       0       1       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0
  3205 ;;      Totals:         0       0       1       0       0       0
  3206 ;;Total ram usage:        1 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    7
  3209 ;; This function calls:
  3210 ;;		_I2C_IdleCheck
  3211 ;; This function is called by:
  3212 ;;		_LCD_Command
  3213 ;;		_EEP_Read
  3214 ;;		_LCD_CreateChar
  3215 ;;		_RTC_Write
  3216 ;;		_RTC_Read
  3217 ;;		_TM_init
  3218 ;;		_TM_Read
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _I2C_Send
  3224  0B58                     _I2C_Send:	
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3228                           ;I2C_Send@data stored from wreg
  3229  0B58  0021               	movlb	1	; select bank1
  3230  0B59  00A2               	movwf	I2C_Send@data^(0+128)
  3231                           
  3232                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  3233  0B5A  3005               	movlw	5
  3234  0B5B  318B  2318  318B   	fcall	_I2C_IdleCheck
  3235                           
  3236                           ;My_header_16F.h: 245: SSP1IF = 0;
  3237  0B5E  0020               	movlb	0	; select bank0
  3238  0B5F  1191               	bcf	17,3	;volatile
  3239                           
  3240                           ;My_header_16F.h: 246: SSP1BUF = data;
  3241  0B60  0021               	movlb	1	; select bank1
  3242  0B61  0822               	movf	I2C_Send@data^(0+128),w
  3243  0B62  0024               	movlb	4	; select bank4
  3244  0B63  0091               	movwf	17	;volatile
  3245  0B64                     l201:	
  3246                           ;My_header_16F.h: 247: while (!SSP1IF);
  3247                           
  3248  0B64  0020               	movlb	0	; select bank0
  3249  0B65  1D91               	btfss	17,3	;volatile
  3250  0B66  2B64               	goto	l201
  3251                           
  3252                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  3253                           ;	Return value of _I2C_Send is never used
  3254  0B67  0024               	movlb	4	; select bank4
  3255  0B68  0816               	movf	22,w	;volatile
  3256  0B69  0008               	return
  3257  0B6A                     __end_of_I2C_Send:	
  3258                           
  3259                           	psect	text19
  3260  0CA7                     __ptext19:	
  3261 ;; *************** function _I2C_Receive *****************
  3262 ;; Defined at:
  3263 ;;		line 251 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  ack             1    wreg     unsigned char 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  ack             1    3[BANK1 ] unsigned char 
  3268 ;;  data            1    4[BANK1 ] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3278 ;;      Params:         0       0       0       0       0       0
  3279 ;;      Locals:         0       0       2       0       0       0
  3280 ;;      Temps:          0       0       1       0       0       0
  3281 ;;      Totals:         0       0       3       0       0       0
  3282 ;;Total ram usage:        3 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    7
  3285 ;; This function calls:
  3286 ;;		_I2C_IdleCheck
  3287 ;; This function is called by:
  3288 ;;		_EEP_Read
  3289 ;;		_RTC_Read
  3290 ;;		_TM_Read
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _I2C_Receive
  3296  0CA7                     _I2C_Receive:	
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  3300                           ;I2C_Receive@ack stored from wreg
  3301  0CA7  0021               	movlb	1	; select bank1
  3302  0CA8  00A3               	movwf	I2C_Receive@ack^(0+128)
  3303                           
  3304                           ;My_header_16F.h: 252: uint8_t data;
  3305                           ;My_header_16F.h: 254: I2C_IdleCheck(0x5);
  3306  0CA9  3005               	movlw	5
  3307  0CAA  318B  2318  318C   	fcall	_I2C_IdleCheck
  3308                           
  3309                           ;My_header_16F.h: 255: SSP1CON2bits.RCEN = 1;
  3310  0CAD  0024               	movlb	4	; select bank4
  3311  0CAE  1596               	bsf	22,3	;volatile
  3312                           
  3313                           ;My_header_16F.h: 256: I2C_IdleCheck(0x4);
  3314  0CAF  3004               	movlw	4
  3315  0CB0  318B  2318  318C   	fcall	_I2C_IdleCheck
  3316                           
  3317                           ;My_header_16F.h: 257: data = SSP1BUF;
  3318  0CB3  0024               	movlb	4	; select bank4
  3319  0CB4  0811               	movf	17,w	;volatile
  3320  0CB5  0021               	movlb	1	; select bank1
  3321  0CB6  00A2               	movwf	??_I2C_Receive^(0+128)
  3322  0CB7  0822               	movf	??_I2C_Receive^(0+128),w
  3323  0CB8  00A4               	movwf	I2C_Receive@data^(0+128)
  3324                           
  3325                           ;My_header_16F.h: 258: I2C_IdleCheck(0x5);
  3326  0CB9  3005               	movlw	5
  3327  0CBA  318B  2318         	fcall	_I2C_IdleCheck
  3328                           
  3329                           ;My_header_16F.h: 259: SSP1CON2bits.ACKDT = ack;
  3330  0CBC  0021               	movlb	1	; select bank1
  3331  0CBD  0823               	movf	I2C_Receive@ack^(0+128),w
  3332  0CBE  0024               	movlb	4	; select bank4
  3333  0CBF  1D03               	skipz
  3334  0CC0  1696               	bsf	22,5	;volatile
  3335  0CC1  1903               	skipnz
  3336  0CC2  1296               	bcf	22,5	;volatile
  3337                           
  3338                           ;My_header_16F.h: 260: SSP1CON2bits.ACKEN = 1;
  3339  0CC3  1616               	bsf	22,4	;volatile
  3340                           
  3341                           ;My_header_16F.h: 261: return data;
  3342  0CC4  0021               	movlb	1	; select bank1
  3343  0CC5  0824               	movf	I2C_Receive@data^(0+128),w
  3344  0CC6  0008               	return
  3345  0CC7                     __end_of_I2C_Receive:	
  3346                           
  3347                           	psect	text20
  3348  0B18                     __ptext20:	
  3349 ;; *************** function _I2C_IdleCheck *****************
  3350 ;; Defined at:
  3351 ;;		line 199 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  mask            1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  mask            1    1[BANK1 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3365 ;;      Params:         0       0       0       0       0       0
  3366 ;;      Locals:         0       0       1       0       0       0
  3367 ;;      Temps:          0       0       1       0       0       0
  3368 ;;      Totals:         0       0       2       0       0       0
  3369 ;;Total ram usage:        2 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    6
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_I2C_Start
  3376 ;;		_I2C_rStart
  3377 ;;		_I2C_Stop
  3378 ;;		_I2C_Send
  3379 ;;		_I2C_Receive
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _I2C_IdleCheck
  3385  0B18                     _I2C_IdleCheck:	
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3389                           ;I2C_IdleCheck@mask stored from wreg
  3390  0B18  0021               	movlb	1	; select bank1
  3391  0B19  00A1               	movwf	I2C_IdleCheck@mask^(0+128)
  3392  0B1A                     l2814:	
  3393                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3394                           
  3395  0B1A  0821               	movf	I2C_IdleCheck@mask^(0+128),w
  3396  0B1B  0024               	movlb	4	; select bank4
  3397  0B1C  0514               	andwf	20,w	;volatile
  3398  0B1D  0021               	movlb	1	; select bank1
  3399  0B1E  00A0               	movwf	??_I2C_IdleCheck^(0+128)
  3400  0B1F  0024               	movlb	4	; select bank4
  3401  0B20  0816               	movf	22,w	;volatile
  3402  0B21  391F               	andlw	31
  3403  0B22  0021               	movlb	1	; select bank1
  3404  0B23  0420               	iorwf	??_I2C_IdleCheck^(0+128),w
  3405  0B24  1903               	btfsc	3,2
  3406  0B25  0008               	return
  3407  0B26  2B1A               	goto	l2814
  3408  0B27                     __end_of_I2C_IdleCheck:	
  3409                           
  3410                           	psect	intentry
  3411  0004                     __pintentry:	
  3412 ;; *************** function _isr *****************
  3413 ;; Defined at:
  3414 ;;		line 62 in file "PIC16F1827-ChargeStation4-01.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  i               1   26[BANK0 ] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3428 ;;      Params:         0       0       0       0       0       0
  3429 ;;      Locals:         0       1       0       0       0       0
  3430 ;;      Temps:          0       8       0       0       0       0
  3431 ;;      Totals:         0       9       0       0       0       0
  3432 ;;Total ram usage:        9 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    5
  3435 ;; This function calls:
  3436 ;;		_EEP_Write
  3437 ;;		___lldiv
  3438 ;;		___wmul
  3439 ;;		_adc
  3440 ;;		_button_timer_interrupt
  3441 ;;		_display
  3442 ;;		_lchika
  3443 ;;		_ringbuf_num
  3444 ;;		_ringbuf_pop
  3445 ;;		i1_OUT
  3446 ;; This function is called by:
  3447 ;;		Interrupt level 1
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451  0004                     _isr:	
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3455  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3456  0005  3180               	pagesel	$
  3457  0006  0020               	movlb	0	; select bank0
  3458  0007  087F               	movf	127,w
  3459  0008  00D4               	movwf	??_isr+7
  3460                           
  3461                           ;PIC16F1827-ChargeStation4-01.c: 63: uint8_t i;
  3462                           ;PIC16F1827-ChargeStation4-01.c: 64: if (PIR1bits.RCIF == 1) {
  3463  0009  1A91               	btfsc	17,5	;volatile
  3464                           
  3465                           ;PIC16F1827-ChargeStation4-01.c: 65: PIR1bits.RCIF = 0;
  3466  000A  1291               	bcf	17,5	;volatile
  3467                           
  3468                           ;PIC16F1827-ChargeStation4-01.c: 66: }
  3469                           ;PIC16F1827-ChargeStation4-01.c: 67: if (PIR1bits.TXIF & PIE1bits.TXIE) {
  3470  000B  0021               	movlb	1	; select bank1
  3471  000C  0E11               	swapf	17,w	;volatile
  3472  000D  3901               	andlw	1
  3473  000E  0020               	movlb	0	; select bank0
  3474  000F  00CD               	movwf	??_isr
  3475  0010  0E11               	swapf	17,w	;volatile
  3476  0011  3901               	andlw	1
  3477  0012  054D               	andwf	??_isr,w
  3478  0013  1903               	btfsc	3,2
  3479  0014  2825               	goto	i1l298
  3480                           
  3481                           ;PIC16F1827-ChargeStation4-01.c: 68: if (ringbuf_num(&tx_buf)) {
  3482  0015  30CC               	movlw	_tx_buf& (0+255)
  3483  0016  318D  25C5  3180   	fcall	_ringbuf_num
  3484  0019  3A00               	xorlw	0
  3485  001A  1903               	skipnz
  3486  001B  2823               	goto	i1l299
  3487                           
  3488                           ;PIC16F1827-ChargeStation4-01.c: 69: TXREG = ringbuf_pop(&tx_buf);
  3489  001C  30CC               	movlw	_tx_buf& (0+255)
  3490  001D  318E  261B  3180   	fcall	_ringbuf_pop
  3491  0020  0023               	movlb	3	; select bank3
  3492  0021  009A               	movwf	26	;volatile
  3493                           
  3494                           ;PIC16F1827-ChargeStation4-01.c: 70: } else {
  3495  0022  2825               	goto	i1l298
  3496  0023                     i1l299:	
  3497                           
  3498                           ;PIC16F1827-ChargeStation4-01.c: 71: PIE1bits.TXIE = 0;
  3499  0023  0021               	movlb	1	; select bank1
  3500  0024  1211               	bcf	17,4	;volatile
  3501  0025                     i1l298:	
  3502                           
  3503                           ;PIC16F1827-ChargeStation4-01.c: 72: }
  3504                           ;PIC16F1827-ChargeStation4-01.c: 73: }
  3505                           ;PIC16F1827-ChargeStation4-01.c: 74: if (PIR1bits.TMR1IF == 1) {
  3506  0025  0020               	movlb	0	; select bank0
  3507  0026  1C11               	btfss	17,0	;volatile
  3508  0027  28B5               	goto	i1l301
  3509                           
  3510                           ;PIC16F1827-ChargeStation4-01.c: 75: PIR1bits.TMR1IF = 0;
  3511  0028  1011               	bcf	17,0	;volatile
  3512                           
  3513                           ;PIC16F1827-ChargeStation4-01.c: 76: button_timer_interrupt(&sw_RA3, !RA3);
  3514  0029  1003               	clrc
  3515  002A  1D8C               	btfss	12,3	;volatile
  3516  002B  1403               	setc
  3517  002C  3000               	movlw	0
  3518  002D  1803               	btfsc	3,0
  3519  002E  3001               	movlw	1
  3520  002F  00F0               	movwf	button_timer_interrupt@sw_value
  3521  0030  3032               	movlw	_sw_RA3& (0+255)
  3522  0031  3185  25E3  3180   	fcall	_button_timer_interrupt
  3523                           
  3524                           ;PIC16F1827-ChargeStation4-01.c: 77: button_timer_interrupt(&sw_RA4, !RA4);
  3525  0034  1003               	clrc
  3526  0035  0020               	movlb	0	; select bank0
  3527  0036  1E0C               	btfss	12,4	;volatile
  3528  0037  1403               	setc
  3529  0038  3000               	movlw	0
  3530  0039  1803               	btfsc	3,0
  3531  003A  3001               	movlw	1
  3532  003B  00F0               	movwf	button_timer_interrupt@sw_value
  3533  003C  3035               	movlw	_sw_RA4& (0+255)
  3534  003D  3185  25E3  3180   	fcall	_button_timer_interrupt
  3535                           
  3536                           ;PIC16F1827-ChargeStation4-01.c: 78: button_timer_interrupt(&sw_RA5, !RA5);
  3537  0040  1003               	clrc
  3538  0041  0020               	movlb	0	; select bank0
  3539  0042  1E8C               	btfss	12,5	;volatile
  3540  0043  1403               	setc
  3541  0044  3000               	movlw	0
  3542  0045  1803               	btfsc	3,0
  3543  0046  3001               	movlw	1
  3544  0047  00F0               	movwf	button_timer_interrupt@sw_value
  3545  0048  3038               	movlw	_sw_RA5& (0+255)
  3546  0049  3185  25E3  3180   	fcall	_button_timer_interrupt
  3547                           
  3548                           ;PIC16F1827-ChargeStation4-01.c: 80: for (i = 0; i < 3; i++) {
  3549  004C  0020               	movlb	0	; select bank0
  3550  004D  01D5               	clrf	isr@i
  3551  004E  3003               	movlw	3
  3552  004F  0255               	subwf	isr@i,w
  3553  0050  1803               	btfsc	3,0
  3554  0051  28B5               	goto	i1l301
  3555  0052                     i1l3170:	
  3556                           
  3557                           ;PIC16F1827-ChargeStation4-01.c: 81: v[i] = 2 * adc(2 - i) * 3 / 4;
  3558  0052  0355               	decf	isr@i,w
  3559  0053  3AFF               	xorlw	255
  3560  0054  3E02               	addlw	2
  3561  0055  318B  23E0  3180   	fcall	_adc
  3562  0058  3570               	lslf	?_adc,w
  3563  0059  00F4               	movwf	___wmul@multiplier
  3564  005A  0D71               	rlf	?_adc+1,w
  3565  005B  00F5               	movwf	___wmul@multiplier+1
  3566  005C  3003               	movlw	3
  3567  005D  00F6               	movwf	___wmul@multiplicand
  3568  005E  3000               	movlw	0
  3569  005F  00F7               	movwf	___wmul@multiplicand+1
  3570  0060  318C  246A  3180   	fcall	___wmul
  3571  0063  0874               	movf	?___wmul,w
  3572  0064  0020               	movlb	0	; select bank0
  3573  0065  00CD               	movwf	??_isr
  3574  0066  0875               	movf	?___wmul+1,w
  3575  0067  00CE               	movwf	??_isr+1
  3576  0068  36CE               	lsrf	??_isr+1,f
  3577  0069  0CCD               	rrf	??_isr,f
  3578  006A  36CE               	lsrf	??_isr+1,f
  3579  006B  0CCD               	rrf	??_isr,f
  3580  006C  3555               	lslf	isr@i,w
  3581  006D  3E26               	addlw	_v& (0+255)
  3582  006E  0086               	movwf	6
  3583  006F  0187               	clrf	7
  3584  0070  084D               	movf	??_isr,w
  3585  0071  3FC0               	movwi [0]fsr1
  3586  0072  084E               	movf	??_isr+1,w
  3587  0073  3FC1               	movwi [1]fsr1
  3588                           
  3589                           ;PIC16F1827-ChargeStation4-01.c: 83: if (v[i] < 50) {
  3590  0074  3555               	lslf	isr@i,w
  3591  0075  3E26               	addlw	_v& (0+255)
  3592  0076  0086               	movwf	6
  3593  0077  0187               	clrf	7
  3594  0078  3F40               	moviw [0]fsr1
  3595  0079  00CD               	movwf	??_isr
  3596  007A  3F41               	moviw [1]fsr1
  3597  007B  00CE               	movwf	??_isr+1
  3598  007C  3000               	movlw	0
  3599  007D  024E               	subwf	??_isr+1,w
  3600  007E  3032               	movlw	50
  3601  007F  1903               	skipnz
  3602  0080  024D               	subwf	??_isr,w
  3603  0081  1803               	skipnc
  3604  0082  28A3               	goto	i1l3178
  3605                           
  3606                           ;PIC16F1827-ChargeStation4-01.c: 84: cut[i]++;
  3607  0083  3555               	lslf	isr@i,w
  3608  0084  3E57               	addlw	_cut& (0+255)
  3609  0085  0086               	movwf	6
  3610  0086  3001               	movlw	1	; select bank2/3
  3611  0087  0087               	movwf	7
  3612  0088  3001               	movlw	1
  3613  0089  0781               	addwf	1,f
  3614  008A  3141               	addfsr 1,1
  3615  008B  1803               	skipnc
  3616  008C  0A81               	incf	1,f
  3617                           
  3618                           ;PIC16F1827-ChargeStation4-01.c: 85: if (cut[i] >= 30 * 6) {
  3619  008D  3555               	lslf	isr@i,w
  3620  008E  3E57               	addlw	_cut& (0+255)
  3621  008F  0086               	movwf	6
  3622  0090  3001               	movlw	1	; select bank2/3
  3623  0091  0087               	movwf	7
  3624  0092  3F40               	moviw [0]fsr1
  3625  0093  00CD               	movwf	??_isr
  3626  0094  3F41               	moviw [1]fsr1
  3627  0095  00CE               	movwf	??_isr+1
  3628  0096  3000               	movlw	0
  3629  0097  024E               	subwf	??_isr+1,w
  3630  0098  30B4               	movlw	180
  3631  0099  1903               	skipnz
  3632  009A  024D               	subwf	??_isr,w
  3633  009B  1C03               	skipc
  3634  009C  28AC               	goto	i1l3180
  3635                           
  3636                           ;PIC16F1827-ChargeStation4-01.c: 86: OUT(i, 0);
  3637  009D  01F0               	clrf	i1OUT@value
  3638  009E  0855               	movf	isr@i,w
  3639  009F  318D  259C  3180   	fcall	i1_OUT
  3640                           
  3641                           ;PIC16F1827-ChargeStation4-01.c: 87: }
  3642                           ;PIC16F1827-ChargeStation4-01.c: 88: } else {
  3643  00A2  28AC               	goto	i1l3180
  3644  00A3                     i1l3178:	
  3645                           
  3646                           ;PIC16F1827-ChargeStation4-01.c: 89: cut[i] = 0;
  3647  00A3  0020               	movlb	0	; select bank0
  3648  00A4  3555               	lslf	isr@i,w
  3649  00A5  3E57               	addlw	_cut& (0+255)
  3650  00A6  0086               	movwf	6
  3651  00A7  3001               	movlw	1	; select bank2/3
  3652  00A8  0087               	movwf	7
  3653  00A9  3000               	movlw	0
  3654  00AA  3FC0               	movwi [0]fsr1
  3655  00AB  3FC1               	movwi [1]fsr1
  3656  00AC                     i1l3180:	
  3657  00AC  3001               	movlw	1
  3658  00AD  0020               	movlb	0	; select bank0
  3659  00AE  00CD               	movwf	??_isr
  3660  00AF  084D               	movf	??_isr,w
  3661  00B0  07D5               	addwf	isr@i,f
  3662  00B1  3003               	movlw	3
  3663  00B2  0255               	subwf	isr@i,w
  3664  00B3  1C03               	skipc
  3665  00B4  2852               	goto	i1l3170
  3666  00B5                     i1l301:	
  3667                           
  3668                           ;PIC16F1827-ChargeStation4-01.c: 90: }
  3669                           ;PIC16F1827-ChargeStation4-01.c: 91: }
  3670                           ;PIC16F1827-ChargeStation4-01.c: 92: }
  3671                           ;PIC16F1827-ChargeStation4-01.c: 93: if (INTCONbits.TMR0IF == 1) {
  3672  00B5  1D0B               	btfss	11,2	;volatile
  3673  00B6  2A0B               	goto	i1l313
  3674                           
  3675                           ;PIC16F1827-ChargeStation4-01.c: 94: INTCONbits.TMR0IF = 0;
  3676  00B7  110B               	bcf	11,2	;volatile
  3677                           
  3678                           ;PIC16F1827-ChargeStation4-01.c: 95: cnt0++;
  3679  00B8  3001               	movlw	1
  3680  00B9  07AC               	addwf	_cnt0,f
  3681  00BA  3000               	movlw	0
  3682  00BB  3DAD               	addwfc	_cnt0+1,f
  3683                           
  3684                           ;PIC16F1827-ChargeStation4-01.c: 96: if (cnt0 == 400) {
  3685  00BC  3001               	movlw	1
  3686  00BD  062D               	xorwf	_cnt0+1,w
  3687  00BE  1D03               	skipz
  3688  00BF  28C2               	goto	u358_25
  3689  00C0  3090               	movlw	144
  3690  00C1  062C               	xorwf	_cnt0,w
  3691  00C2                     u358_25:	
  3692  00C2  1D03               	skipz
  3693  00C3  28D2               	goto	i1l3194
  3694                           
  3695                           ;PIC16F1827-ChargeStation4-01.c: 97: cnt0 = 0;
  3696  00C4  01AC               	clrf	_cnt0
  3697  00C5  01AD               	clrf	_cnt0+1
  3698                           
  3699                           ;PIC16F1827-ChargeStation4-01.c: 98: lchika();
  3700  00C6  3187  271E  3180   	fcall	_lchika
  3701                           
  3702                           ;PIC16F1827-ChargeStation4-01.c: 99: display(print_port, print_content);
  3703  00C9  0020               	movlb	0	; select bank0
  3704  00CA  0830               	movf	_print_content,w
  3705  00CB  00CD               	movwf	??_isr
  3706  00CC  084D               	movf	??_isr,w
  3707  00CD  00C9               	movwf	display@co
  3708  00CE  0831               	movf	_print_port,w
  3709  00CF  3182  2235  3180   	fcall	_display
  3710  00D2                     i1l3194:	
  3711                           
  3712                           ;PIC16F1827-ChargeStation4-01.c: 100: }
  3713                           ;PIC16F1827-ChargeStation4-01.c: 101: cnt1s++;
  3714  00D2  3001               	movlw	1
  3715  00D3  0020               	movlb	0	; select bank0
  3716  00D4  07AE               	addwf	_cnt1s,f
  3717  00D5  3000               	movlw	0
  3718  00D6  3DAF               	addwfc	_cnt1s+1,f
  3719                           
  3720                           ;PIC16F1827-ChargeStation4-01.c: 103: if (cnt1s == 1953) {
  3721  00D7  3007               	movlw	7
  3722  00D8  062F               	xorwf	_cnt1s+1,w
  3723  00D9  1D03               	skipz
  3724  00DA  28DD               	goto	u359_25
  3725  00DB  30A1               	movlw	161
  3726  00DC  062E               	xorwf	_cnt1s,w
  3727  00DD                     u359_25:	
  3728  00DD  1D03               	skipz
  3729  00DE  2A0B               	goto	i1l313
  3730                           
  3731                           ;PIC16F1827-ChargeStation4-01.c: 104: cnt1s = 0;
  3732  00DF  01AE               	clrf	_cnt1s
  3733  00E0  01AF               	clrf	_cnt1s+1
  3734                           
  3735                           ;PIC16F1827-ChargeStation4-01.c: 105: for (i = 0; i < 3; i++) {
  3736  00E1  01D5               	clrf	isr@i
  3737  00E2  3003               	movlw	3
  3738  00E3  0255               	subwf	isr@i,w
  3739  00E4  1803               	btfsc	3,0
  3740  00E5  2A0B               	goto	i1l313
  3741  00E6                     i1l3204:	
  3742                           
  3743                           ;PIC16F1827-ChargeStation4-01.c: 106: ss[i] += v[i];
  3744  00E6  3555               	lslf	isr@i,w
  3745  00E7  3E26               	addlw	_v& (0+255)
  3746  00E8  0086               	movwf	6
  3747  00E9  0187               	clrf	7
  3748  00EA  3F40               	moviw [0]fsr1
  3749  00EB  00CD               	movwf	??_isr
  3750  00EC  3F41               	moviw [1]fsr1
  3751  00ED  00CE               	movwf	??_isr+1
  3752  00EE  084D               	movf	??_isr,w
  3753  00EF  00CF               	movwf	??_isr+2
  3754  00F0  084E               	movf	??_isr+1,w
  3755  00F1  00D0               	movwf	??_isr+3
  3756  00F2  01D1               	clrf	??_isr+4
  3757  00F3  01D2               	clrf	??_isr+5
  3758  00F4  0855               	movf	isr@i,w
  3759  00F5  00D3               	movwf	??_isr+6
  3760  00F6  3001               	movlw	1
  3761  00F7                     u361_25:	
  3762  00F7  35D3               	lslf	??_isr+6,f
  3763  00F8  3EFF               	addlw	-1
  3764  00F9  1D03               	skipz
  3765  00FA  28F7               	goto	u361_25
  3766  00FB  3553               	lslf	??_isr+6,w
  3767  00FC  3EBA               	addlw	_ss& (0+255)
  3768  00FD  0086               	movwf	6
  3769  00FE  0187               	clrf	7
  3770  00FF  084F               	movf	??_isr+2,w
  3771  0100  0781               	addwf	1,f
  3772  0101  3141               	addfsr 1,1
  3773  0102  0850               	movf	??_isr+3,w
  3774  0103  3D81               	addwfc	1,f
  3775  0104  3141               	addfsr 1,1
  3776  0105  0851               	movf	??_isr+4,w
  3777  0106  3D81               	addwfc	1,f
  3778  0107  3141               	addfsr 1,1
  3779  0108  0852               	movf	??_isr+5,w
  3780  0109  3D81               	addwfc	1,f
  3781                           
  3782                           ;PIC16F1827-ChargeStation4-01.c: 107: s[i] = ss[i] / 3600;
  3783  010A  3000               	movlw	0
  3784  010B  00F3               	movwf	___lldiv@divisor+3
  3785  010C  3000               	movlw	0
  3786  010D  00F2               	movwf	___lldiv@divisor+2
  3787  010E  300E               	movlw	14
  3788  010F  00F1               	movwf	___lldiv@divisor+1
  3789  0110  3010               	movlw	16
  3790  0111  00F0               	movwf	___lldiv@divisor
  3791  0112  0855               	movf	isr@i,w
  3792  0113  00CD               	movwf	??_isr
  3793  0114  3001               	movlw	1
  3794  0115                     u362_25:	
  3795  0115  35CD               	lslf	??_isr,f
  3796  0116  3EFF               	addlw	-1
  3797  0117  1D03               	skipz
  3798  0118  2915               	goto	u362_25
  3799  0119  354D               	lslf	??_isr,w
  3800  011A  3EBA               	addlw	_ss& (0+255)
  3801  011B  0086               	movwf	6
  3802  011C  0187               	clrf	7
  3803  011D  3F40               	moviw [0]fsr1
  3804  011E  00F4               	movwf	___lldiv@dividend
  3805  011F  3F41               	moviw [1]fsr1
  3806  0120  00F5               	movwf	___lldiv@dividend+1
  3807  0121  3F42               	moviw [2]fsr1
  3808  0122  00F6               	movwf	___lldiv@dividend+2
  3809  0123  3F43               	moviw [3]fsr1
  3810  0124  00F7               	movwf	___lldiv@dividend+3
  3811  0125  318F  275B  3180   	fcall	___lldiv
  3812  0128  0020               	movlb	0	; select bank0
  3813  0129  3555               	lslf	isr@i,w
  3814  012A  3E20               	addlw	_s& (0+255)
  3815  012B  0086               	movwf	6
  3816  012C  0187               	clrf	7
  3817  012D  0870               	movf	?___lldiv,w
  3818  012E  3FC0               	movwi [0]fsr1
  3819  012F  0871               	movf	?___lldiv+1,w
  3820  0130  3FC1               	movwi [1]fsr1
  3821                           
  3822                           ;PIC16F1827-ChargeStation4-01.c: 108: if (s[i] != sp[i]) {
  3823  0131  3555               	lslf	isr@i,w
  3824  0132  3E5D               	addlw	_sp& (0+255)
  3825  0133  0086               	movwf	6
  3826  0134  3001               	movlw	1	; select bank2/3
  3827  0135  0087               	movwf	7
  3828  0136  3F40               	moviw [0]fsr1
  3829  0137  00CD               	movwf	??_isr
  3830  0138  3F41               	moviw [1]fsr1
  3831  0139  00CE               	movwf	??_isr+1
  3832  013A  3555               	lslf	isr@i,w
  3833  013B  3E20               	addlw	_s& (0+255)
  3834  013C  0086               	movwf	6
  3835  013D  0187               	clrf	7
  3836  013E  3F40               	moviw [0]fsr1
  3837  013F  064D               	xorwf	??_isr,w
  3838  0140  1D03               	skipz
  3839  0141  2944               	goto	u363_25
  3840  0142  3F41               	moviw [1]fsr1
  3841  0143  064E               	xorwf	??_isr+1,w
  3842  0144                     u363_25:	
  3843  0144  1903               	skipnz
  3844  0145  2A03               	goto	i1l3224
  3845                           
  3846                           ;PIC16F1827-ChargeStation4-01.c: 109: EEP_Write(i, 0, (ss[i]) >> 24);
  3847  0146  01F4               	clrf	EEP_Write@Reg_l
  3848  0147  0855               	movf	isr@i,w
  3849  0148  00CD               	movwf	??_isr
  3850  0149  3001               	movlw	1
  3851  014A                     u364_25:	
  3852  014A  35CD               	lslf	??_isr,f
  3853  014B  3EFF               	addlw	-1
  3854  014C  1D03               	skipz
  3855  014D  294A               	goto	u364_25
  3856  014E  354D               	lslf	??_isr,w
  3857  014F  3EBA               	addlw	_ss& (0+255)
  3858  0150  0086               	movwf	6
  3859  0151  0187               	clrf	7
  3860  0152  3F40               	moviw [0]fsr1
  3861  0153  00CE               	movwf	??_isr+1
  3862  0154  3F41               	moviw [1]fsr1
  3863  0155  00CF               	movwf	??_isr+2
  3864  0156  3F42               	moviw [2]fsr1
  3865  0157  00D0               	movwf	??_isr+3
  3866  0158  3F43               	moviw [3]fsr1
  3867  0159  00D1               	movwf	??_isr+4
  3868  015A  3018               	movlw	24
  3869  015B                     u365_25:	
  3870  015B  36D1               	lsrf	??_isr+4,f
  3871  015C  0CD0               	rrf	??_isr+3,f
  3872  015D  0CCF               	rrf	??_isr+2,f
  3873  015E  0CCE               	rrf	??_isr+1,f
  3874  015F  0B89               	decfsz	9,f
  3875  0160  295B               	goto	u365_25
  3876  0161  084E               	movf	??_isr+1,w
  3877  0162  00D2               	movwf	??_isr+5
  3878  0163  0852               	movf	??_isr+5,w
  3879  0164  00F5               	movwf	EEP_Write@data
  3880  0165  0855               	movf	isr@i,w
  3881  0166  318C  2487  3180   	fcall	_EEP_Write
  3882                           
  3883                           ;PIC16F1827-ChargeStation4-01.c: 110: _delay((unsigned long)((1)*(32000000/4000.0)));
  3884  0169  300B               	movlw	11
  3885  016A  0020               	movlb	0	; select bank0
  3886  016B  00CE               	movwf	??_isr+1
  3887  016C  3062               	movlw	98
  3888  016D  00CD               	movwf	??_isr
  3889  016E                     u393_27:	
  3890  016E  0BCD               	decfsz	??_isr,f
  3891  016F  296E               	goto	u393_27
  3892  0170  0BCE               	decfsz	??_isr+1,f
  3893  0171  296E               	goto	u393_27
  3894  0172  0000               	nop
  3895                           
  3896                           ;PIC16F1827-ChargeStation4-01.c: 111: EEP_Write(i, 1, (ss[i]) >> 16);
  3897  0173  01F4               	clrf	EEP_Write@Reg_l
  3898  0174  0AF4               	incf	EEP_Write@Reg_l,f
  3899  0175  0020               	movlb	0	; select bank0
  3900  0176  0855               	movf	isr@i,w
  3901  0177  00CD               	movwf	??_isr
  3902  0178  3001               	movlw	1
  3903  0179                     u366_25:	
  3904  0179  35CD               	lslf	??_isr,f
  3905  017A  3EFF               	addlw	-1
  3906  017B  1D03               	skipz
  3907  017C  2979               	goto	u366_25
  3908  017D  354D               	lslf	??_isr,w
  3909  017E  3EBA               	addlw	_ss& (0+255)
  3910  017F  0086               	movwf	6
  3911  0180  0187               	clrf	7
  3912  0181  3F40               	moviw [0]fsr1
  3913  0182  00CE               	movwf	??_isr+1
  3914  0183  3F41               	moviw [1]fsr1
  3915  0184  00CF               	movwf	??_isr+2
  3916  0185  3F42               	moviw [2]fsr1
  3917  0186  00D0               	movwf	??_isr+3
  3918  0187  3F43               	moviw [3]fsr1
  3919  0188  00D1               	movwf	??_isr+4
  3920  0189  3010               	movlw	16
  3921  018A                     u367_25:	
  3922  018A  36D1               	lsrf	??_isr+4,f
  3923  018B  0CD0               	rrf	??_isr+3,f
  3924  018C  0CCF               	rrf	??_isr+2,f
  3925  018D  0CCE               	rrf	??_isr+1,f
  3926  018E  0B89               	decfsz	9,f
  3927  018F  298A               	goto	u367_25
  3928  0190  084E               	movf	??_isr+1,w
  3929  0191  00D2               	movwf	??_isr+5
  3930  0192  0852               	movf	??_isr+5,w
  3931  0193  00F5               	movwf	EEP_Write@data
  3932  0194  0855               	movf	isr@i,w
  3933  0195  318C  2487  3180   	fcall	_EEP_Write
  3934                           
  3935                           ;PIC16F1827-ChargeStation4-01.c: 112: _delay((unsigned long)((1)*(32000000/4000.0)));
  3936  0198  300B               	movlw	11
  3937  0199  0020               	movlb	0	; select bank0
  3938  019A  00CE               	movwf	??_isr+1
  3939  019B  3062               	movlw	98
  3940  019C  00CD               	movwf	??_isr
  3941  019D                     u394_27:	
  3942  019D  0BCD               	decfsz	??_isr,f
  3943  019E  299D               	goto	u394_27
  3944  019F  0BCE               	decfsz	??_isr+1,f
  3945  01A0  299D               	goto	u394_27
  3946  01A1  0000               	nop
  3947                           
  3948                           ;PIC16F1827-ChargeStation4-01.c: 113: EEP_Write(i, 2, (ss[i]) >> 8);
  3949  01A2  3002               	movlw	2
  3950  01A3  0020               	movlb	0	; select bank0
  3951  01A4  00CD               	movwf	??_isr
  3952  01A5  084D               	movf	??_isr,w
  3953  01A6  00F4               	movwf	EEP_Write@Reg_l
  3954  01A7  0855               	movf	isr@i,w
  3955  01A8  00CE               	movwf	??_isr+1
  3956  01A9  3001               	movlw	1
  3957  01AA                     u368_25:	
  3958  01AA  35CE               	lslf	??_isr+1,f
  3959  01AB  3EFF               	addlw	-1
  3960  01AC  1D03               	skipz
  3961  01AD  29AA               	goto	u368_25
  3962  01AE  354E               	lslf	??_isr+1,w
  3963  01AF  3EBA               	addlw	_ss& (0+255)
  3964  01B0  0086               	movwf	6
  3965  01B1  0187               	clrf	7
  3966  01B2  3F40               	moviw [0]fsr1
  3967  01B3  00CF               	movwf	??_isr+2
  3968  01B4  3F41               	moviw [1]fsr1
  3969  01B5  00D0               	movwf	??_isr+3
  3970  01B6  3F42               	moviw [2]fsr1
  3971  01B7  00D1               	movwf	??_isr+4
  3972  01B8  3F43               	moviw [3]fsr1
  3973  01B9  00D2               	movwf	??_isr+5
  3974  01BA  3008               	movlw	8
  3975  01BB                     u369_25:	
  3976  01BB  36D2               	lsrf	??_isr+5,f
  3977  01BC  0CD1               	rrf	??_isr+4,f
  3978  01BD  0CD0               	rrf	??_isr+3,f
  3979  01BE  0CCF               	rrf	??_isr+2,f
  3980  01BF  0B89               	decfsz	9,f
  3981  01C0  29BB               	goto	u369_25
  3982  01C1  084F               	movf	??_isr+2,w
  3983  01C2  00D3               	movwf	??_isr+6
  3984  01C3  0853               	movf	??_isr+6,w
  3985  01C4  00F5               	movwf	EEP_Write@data
  3986  01C5  0855               	movf	isr@i,w
  3987  01C6  318C  2487  3180   	fcall	_EEP_Write
  3988                           
  3989                           ;PIC16F1827-ChargeStation4-01.c: 114: _delay((unsigned long)((1)*(32000000/4000.0)));
  3990  01C9  300B               	movlw	11
  3991  01CA  0020               	movlb	0	; select bank0
  3992  01CB  00CE               	movwf	??_isr+1
  3993  01CC  3062               	movlw	98
  3994  01CD  00CD               	movwf	??_isr
  3995  01CE                     u395_27:	
  3996  01CE  0BCD               	decfsz	??_isr,f
  3997  01CF  29CE               	goto	u395_27
  3998  01D0  0BCE               	decfsz	??_isr+1,f
  3999  01D1  29CE               	goto	u395_27
  4000  01D2  0000               	nop
  4001                           
  4002                           ;PIC16F1827-ChargeStation4-01.c: 115: EEP_Write(i, 3, (ss[i]) >> 0);
  4003  01D3  3003               	movlw	3
  4004  01D4  0020               	movlb	0	; select bank0
  4005  01D5  00CD               	movwf	??_isr
  4006  01D6  084D               	movf	??_isr,w
  4007  01D7  00F4               	movwf	EEP_Write@Reg_l
  4008  01D8  0855               	movf	isr@i,w
  4009  01D9  00CE               	movwf	??_isr+1
  4010  01DA  3001               	movlw	1
  4011  01DB                     u370_25:	
  4012  01DB  35CE               	lslf	??_isr+1,f
  4013  01DC  3EFF               	addlw	-1
  4014  01DD  1D03               	skipz
  4015  01DE  29DB               	goto	u370_25
  4016  01DF  354E               	lslf	??_isr+1,w
  4017  01E0  3EBA               	addlw	_ss& (0+255)
  4018  01E1  0086               	movwf	6
  4019  01E2  0187               	clrf	7
  4020  01E3  0801               	movf	1,w
  4021  01E4  00CF               	movwf	??_isr+2
  4022  01E5  084F               	movf	??_isr+2,w
  4023  01E6  00F5               	movwf	EEP_Write@data
  4024  01E7  0855               	movf	isr@i,w
  4025  01E8  318C  2487  3180   	fcall	_EEP_Write
  4026                           
  4027                           ;PIC16F1827-ChargeStation4-01.c: 116: _delay((unsigned long)((1)*(32000000/4000.0)));
  4028  01EB  300B               	movlw	11
  4029  01EC  0020               	movlb	0	; select bank0
  4030  01ED  00CE               	movwf	??_isr+1
  4031  01EE  3062               	movlw	98
  4032  01EF  00CD               	movwf	??_isr
  4033  01F0                     u396_27:	
  4034  01F0  0BCD               	decfsz	??_isr,f
  4035  01F1  29F0               	goto	u396_27
  4036  01F2  0BCE               	decfsz	??_isr+1,f
  4037  01F3  29F0               	goto	u396_27
  4038  01F4  0000               	nop
  4039                           
  4040                           ;PIC16F1827-ChargeStation4-01.c: 117: sp[i] = s[i];
  4041  01F5  0020               	movlb	0	; select bank0
  4042  01F6  3555               	lslf	isr@i,w
  4043  01F7  3E20               	addlw	_s& (0+255)
  4044  01F8  0086               	movwf	6
  4045  01F9  0187               	clrf	7
  4046  01FA  3555               	lslf	isr@i,w
  4047  01FB  3E5D               	addlw	_sp& (0+255)
  4048  01FC  0084               	movwf	4
  4049  01FD  3001               	movlw	1	; select bank2/3
  4050  01FE  0085               	movwf	5
  4051  01FF  3F40               	moviw [0]fsr1
  4052  0200  3F80               	movwi [0]fsr0
  4053  0201  3F41               	moviw [1]fsr1
  4054  0202  3F81               	movwi [1]fsr0
  4055  0203                     i1l3224:	
  4056  0203  3001               	movlw	1
  4057  0204  00CD               	movwf	??_isr
  4058  0205  084D               	movf	??_isr,w
  4059  0206  07D5               	addwf	isr@i,f
  4060  0207  3003               	movlw	3
  4061  0208  0255               	subwf	isr@i,w
  4062  0209  1C03               	skipc
  4063  020A  28E6               	goto	i1l3204
  4064  020B                     i1l313:	
  4065  020B  0854               	movf	??_isr+7,w
  4066  020C  00FF               	movwf	127
  4067  020D  107E               	bcf	126,0	;clear compiler interrupt flag
  4068  020E  0009               	retfie
  4069  020F                     __end_of_isr:	
  4070                           
  4071                           	psect	text22
  4072  0D9C                     __ptext22:	
  4073 ;; *************** function i1_OUT *****************
  4074 ;; Defined at:
  4075 ;;		line 215 in file "PIC16F1827-ChargeStation4-01.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  b               1    wreg     unsigned char 
  4078 ;;  value           1    0[COMMON] unsigned char 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  b               1    1[COMMON] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;		None               void
  4083 ;; Registers used:
  4084 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4090 ;;      Params:         1       0       0       0       0       0
  4091 ;;      Locals:         1       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0
  4093 ;;      Totals:         2       0       0       0       0       0
  4094 ;;Total ram usage:        2 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_isr
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           
  4104                           ;psect for function i1_OUT
  4105  0D9C                     i1_OUT:	
  4106                           
  4107                           ;incstack = 0
  4108                           ; Regs used in i1_OUT: [wreg-fsr0h+status,2+status,0]
  4109                           ;i1OUT@b stored from wreg
  4110  0D9C  00F1               	movwf	i1OUT@b
  4111                           
  4112                           ;PIC16F1827-ChargeStation4-01.c: 216: switch (b) {
  4113  0D9D  2DB9               	goto	i1l2542
  4114  0D9E                     i1l351:	
  4115                           ;PIC16F1827-ChargeStation4-01.c: 217: case 0:
  4116                           
  4117                           
  4118                           ;PIC16F1827-ChargeStation4-01.c: 218: if (value) {
  4119  0D9E  0870               	movf	i1OUT@value,w
  4120  0D9F  1903               	btfsc	3,2
  4121  0DA0  2DA4               	goto	i1l352
  4122                           
  4123                           ;PIC16F1827-ChargeStation4-01.c: 219: LATB0 = 0;
  4124  0DA1  0022               	movlb	2	; select bank2
  4125  0DA2  100D               	bcf	13,0	;volatile
  4126                           
  4127                           ;PIC16F1827-ChargeStation4-01.c: 220: } else {
  4128  0DA3  0008               	return
  4129  0DA4                     i1l352:	
  4130                           
  4131                           ;PIC16F1827-ChargeStation4-01.c: 221: LATB0 = 1;
  4132  0DA4  0022               	movlb	2	; select bank2
  4133  0DA5  140D               	bsf	13,0	;volatile
  4134                           
  4135                           ;PIC16F1827-ChargeStation4-01.c: 222: }
  4136                           ;PIC16F1827-ChargeStation4-01.c: 223: break;
  4137  0DA6  0008               	return
  4138  0DA7                     i1l355:	
  4139                           ;PIC16F1827-ChargeStation4-01.c: 224: case 1:
  4140                           
  4141                           
  4142                           ;PIC16F1827-ChargeStation4-01.c: 225: if (value) {
  4143  0DA7  0870               	movf	i1OUT@value,w
  4144  0DA8  1903               	btfsc	3,2
  4145  0DA9  2DAD               	goto	i1l356
  4146                           
  4147                           ;PIC16F1827-ChargeStation4-01.c: 226: LATB3 = 0;
  4148  0DAA  0022               	movlb	2	; select bank2
  4149  0DAB  118D               	bcf	13,3	;volatile
  4150                           
  4151                           ;PIC16F1827-ChargeStation4-01.c: 227: } else {
  4152  0DAC  0008               	return
  4153  0DAD                     i1l356:	
  4154                           
  4155                           ;PIC16F1827-ChargeStation4-01.c: 228: LATB3 = 1;
  4156  0DAD  0022               	movlb	2	; select bank2
  4157  0DAE  158D               	bsf	13,3	;volatile
  4158                           
  4159                           ;PIC16F1827-ChargeStation4-01.c: 229: }
  4160                           ;PIC16F1827-ChargeStation4-01.c: 230: break;
  4161  0DAF  0008               	return
  4162  0DB0                     i1l358:	
  4163                           ;PIC16F1827-ChargeStation4-01.c: 231: case 2:
  4164                           
  4165                           
  4166                           ;PIC16F1827-ChargeStation4-01.c: 232: if (value) {
  4167  0DB0  0870               	movf	i1OUT@value,w
  4168  0DB1  1903               	btfsc	3,2
  4169  0DB2  2DB6               	goto	i1l359
  4170                           
  4171                           ;PIC16F1827-ChargeStation4-01.c: 233: LATB6 = 0;
  4172  0DB3  0022               	movlb	2	; select bank2
  4173  0DB4  130D               	bcf	13,6	;volatile
  4174                           
  4175                           ;PIC16F1827-ChargeStation4-01.c: 234: } else {
  4176  0DB5  0008               	return
  4177  0DB6                     i1l359:	
  4178                           
  4179                           ;PIC16F1827-ChargeStation4-01.c: 235: LATB6 = 1;
  4180  0DB6  0022               	movlb	2	; select bank2
  4181  0DB7  170D               	bsf	13,6	;volatile
  4182                           
  4183                           ;PIC16F1827-ChargeStation4-01.c: 240: }
  4184                           
  4185                           ;PIC16F1827-ChargeStation4-01.c: 239: break;
  4186                           
  4187                           ;PIC16F1827-ChargeStation4-01.c: 238: default:
  4188                           
  4189                           ;PIC16F1827-ChargeStation4-01.c: 236: }
  4190                           ;PIC16F1827-ChargeStation4-01.c: 237: break;
  4191  0DB8  0008               	return
  4192  0DB9                     i1l2542:	
  4193  0DB9  0871               	movf	i1OUT@b,w
  4194                           
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 3, Range of values is 0 to 2
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte           10     6 (average)
  4200                           ; direct_byte           12     6 (fixed)
  4201                           ; jumptable            260     6 (fixed)
  4202                           ;	Chosen strategy is simple_byte
  4203  0DBA  3A00               	xorlw	0	; case 0
  4204  0DBB  1903               	skipnz
  4205  0DBC  2D9E               	goto	i1l351
  4206  0DBD  3A01               	xorlw	1	; case 1
  4207  0DBE  1903               	skipnz
  4208  0DBF  2DA7               	goto	i1l355
  4209  0DC0  3A03               	xorlw	3	; case 2
  4210  0DC1  1903               	skipnz
  4211  0DC2  2DB0               	goto	i1l358
  4212  0DC3  2DC4               	goto	i1l362
  4213  0DC4                     i1l362:	
  4214  0DC4  0008               	return
  4215  0DC5                     __end_ofi1_OUT:	
  4216                           
  4217                           	psect	text23
  4218  0E1B                     __ptext23:	
  4219 ;; *************** function _ringbuf_pop *****************
  4220 ;; Defined at:
  4221 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  rb              1    wreg     PTR struct ringbuf
  4224 ;;		 -> tx_buf(4), 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  rb              1    3[COMMON] PTR struct ringbuf
  4227 ;;		 -> tx_buf(4), 
  4228 ;;  ret             1    2[COMMON] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      unsigned char 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4238 ;;      Params:         0       0       0       0       0       0
  4239 ;;      Locals:         2       0       0       0       0       0
  4240 ;;      Temps:          2       0       0       0       0       0
  4241 ;;      Totals:         4       0       0       0       0       0
  4242 ;;Total ram usage:        4 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_isr
  4248 ;;		_interrupt_TXIF
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _ringbuf_pop
  4254  0E1B                     _ringbuf_pop:	
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  4258                           ;ringbuf_pop@rb stored from wreg
  4259  0E1B  00F3               	movwf	ringbuf_pop@rb
  4260                           
  4261                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  4262  0E1C  0873               	movf	ringbuf_pop@rb,w
  4263  0E1D  0086               	movwf	6
  4264  0E1E  0187               	clrf	7
  4265  0E1F  0873               	movf	ringbuf_pop@rb,w
  4266  0E20  3E03               	addlw	3
  4267  0E21  0084               	movwf	4
  4268  0E22  0185               	clrf	5
  4269  0E23  0800               	movf	0,w
  4270  0E24  0701               	addwf	1,w
  4271  0E25  00F0               	movwf	??_ringbuf_pop
  4272  0E26  0870               	movf	??_ringbuf_pop,w
  4273  0E27  0086               	movwf	6
  4274  0E28  3001               	movlw	1	; select bank2/3
  4275  0E29  0087               	movwf	7
  4276  0E2A  0801               	movf	1,w
  4277  0E2B  00F1               	movwf	??_ringbuf_pop+1
  4278  0E2C  0871               	movf	??_ringbuf_pop+1,w
  4279  0E2D  00F2               	movwf	ringbuf_pop@ret
  4280                           
  4281                           ;My_header_16F.h: 130: rb->tail++;
  4282  0E2E  3001               	movlw	1
  4283  0E2F  00F0               	movwf	??_ringbuf_pop
  4284  0E30  0873               	movf	ringbuf_pop@rb,w
  4285  0E31  3E03               	addlw	3
  4286  0E32  0086               	movwf	6
  4287  0E33  0187               	clrf	7
  4288  0E34  0870               	movf	??_ringbuf_pop,w
  4289  0E35  0781               	addwf	1,f
  4290                           
  4291                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  4292  0E36  0873               	movf	ringbuf_pop@rb,w
  4293  0E37  3E03               	addlw	3
  4294  0E38  0086               	movwf	6
  4295  0E39  0187               	clrf	7
  4296  0E3A  0A73               	incf	ringbuf_pop@rb,w
  4297  0E3B  0084               	movwf	4
  4298  0E3C  0185               	clrf	5
  4299  0E3D  0800               	movf	0,w
  4300  0E3E  0201               	subwf	1,w
  4301  0E3F  1C03               	skipc
  4302  0E40  2E46               	goto	i1l2964
  4303                           
  4304                           ;My_header_16F.h: 132: rb->tail = 0;
  4305  0E41  0873               	movf	ringbuf_pop@rb,w
  4306  0E42  3E03               	addlw	3
  4307  0E43  0086               	movwf	6
  4308  0E44  0187               	clrf	7
  4309  0E45  0181               	clrf	1
  4310  0E46                     i1l2964:	
  4311                           
  4312                           ;My_header_16F.h: 133: }
  4313                           ;My_header_16F.h: 134: return ret;
  4314  0E46  0872               	movf	ringbuf_pop@ret,w
  4315  0E47  0008               	return
  4316  0E48                     __end_of_ringbuf_pop:	
  4317                           
  4318                           	psect	text24
  4319  0DC5                     __ptext24:	
  4320 ;; *************** function _ringbuf_num *****************
  4321 ;; Defined at:
  4322 ;;		line 137 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  rb              1    wreg     PTR struct ringbuf
  4325 ;;		 -> tx_buf(4), 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  rb              1    1[COMMON] PTR struct ringbuf
  4328 ;;		 -> tx_buf(4), 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      unsigned char 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4338 ;;      Params:         0       0       0       0       0       0
  4339 ;;      Locals:         1       0       0       0       0       0
  4340 ;;      Temps:          1       0       0       0       0       0
  4341 ;;      Totals:         2       0       0       0       0       0
  4342 ;;Total ram usage:        2 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_isr
  4348 ;;		_interrupt_TXIF
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _ringbuf_num
  4354  0DC5                     _ringbuf_num:	
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  4358                           ;ringbuf_num@rb stored from wreg
  4359  0DC5  00F1               	movwf	ringbuf_num@rb
  4360                           
  4361                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  4362  0DC6  0871               	movf	ringbuf_num@rb,w
  4363  0DC7  3E02               	addlw	2
  4364  0DC8  0086               	movwf	6
  4365  0DC9  0187               	clrf	7
  4366  0DCA  0871               	movf	ringbuf_num@rb,w
  4367  0DCB  3E03               	addlw	3
  4368  0DCC  0084               	movwf	4
  4369  0DCD  0185               	clrf	5
  4370  0DCE  0800               	movf	0,w
  4371  0DCF  0201               	subwf	1,w
  4372  0DD0  1C03               	skipc
  4373  0DD1  2DDE               	goto	i1l2306
  4374                           
  4375                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  4376  0DD2  0871               	movf	ringbuf_num@rb,w
  4377  0DD3  3E02               	addlw	2
  4378  0DD4  0086               	movwf	6
  4379  0DD5  0187               	clrf	7
  4380  0DD6  0871               	movf	ringbuf_num@rb,w
  4381  0DD7  3E03               	addlw	3
  4382  0DD8  0084               	movwf	4
  4383  0DD9  0185               	clrf	5
  4384  0DDA  0300               	decf	0,w
  4385  0DDB  3AFF               	xorlw	255
  4386  0DDC  0701               	addwf	1,w
  4387                           
  4388                           ;My_header_16F.h: 140: } else {
  4389  0DDD  0008               	return
  4390  0DDE                     i1l2306:	
  4391                           
  4392                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  4393  0DDE  0871               	movf	ringbuf_num@rb,w
  4394  0DDF  3E02               	addlw	2
  4395  0DE0  0086               	movwf	6
  4396  0DE1  0187               	clrf	7
  4397  0DE2  0A71               	incf	ringbuf_num@rb,w
  4398  0DE3  0084               	movwf	4
  4399  0DE4  0185               	clrf	5
  4400  0DE5  0800               	movf	0,w
  4401  0DE6  00F0               	movwf	??_ringbuf_num
  4402  0DE7  0871               	movf	ringbuf_num@rb,w
  4403  0DE8  3E03               	addlw	3
  4404  0DE9  0084               	movwf	4
  4405  0DEA  0185               	clrf	5
  4406  0DEB  0300               	decf	0,w
  4407  0DEC  3AFF               	xorlw	255
  4408  0DED  0770               	addwf	??_ringbuf_num,w
  4409  0DEE  0701               	addwf	1,w
  4410  0DEF  0008               	return
  4411  0DF0                     __end_of_ringbuf_num:	
  4412                           
  4413                           	psect	text25
  4414  071E                     __ptext25:	
  4415 ;; *************** function _lchika *****************
  4416 ;; Defined at:
  4417 ;;		line 124 in file "PIC16F1827-ChargeStation4-01.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  i               1    4[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4431 ;;      Params:         0       0       0       0       0       0
  4432 ;;      Locals:         0       1       0       0       0       0
  4433 ;;      Temps:          0       4       0       0       0       0
  4434 ;;      Totals:         0       5       0       0       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    1
  4438 ;; This function calls:
  4439 ;;		___awdiv
  4440 ;;		___lwdiv
  4441 ;;		i1_LED
  4442 ;; This function is called by:
  4443 ;;		_isr
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _lchika
  4449  071E                     _lchika:	
  4450                           
  4451                           ;PIC16F1827-ChargeStation4-01.c: 125: uint8_t i;
  4452                           ;PIC16F1827-ChargeStation4-01.c: 126: for (i = 0; i < 3; i++) {
  4453                           
  4454                           ;incstack = 0
  4455                           ; Regs used in _lchika: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4456  071E  0020               	movlb	0	; select bank0
  4457  071F  01BF               	clrf	lchika@i
  4458  0720                     L3:	
  4459  0720  3003               	movlw	3
  4460  0721  023F               	subwf	lchika@i,w
  4461  0722  1803               	btfsc	3,0
  4462  0723  0008               	return
  4463                           
  4464                           ;PIC16F1827-ChargeStation4-01.c: 127: cnt[i]++;
  4465  0724  3001               	movlw	1
  4466  0725  00BB               	movwf	??_lchika
  4467  0726  083F               	movf	lchika@i,w
  4468  0727  3EC6               	addlw	_cnt& (0+255)
  4469  0728  0086               	movwf	6
  4470  0729  0187               	clrf	7
  4471  072A  083B               	movf	??_lchika,w
  4472  072B  0781               	addwf	1,f
  4473                           
  4474                           ;PIC16F1827-ChargeStation4-01.c: 129: if (cnt[i] % 2 == 1) {
  4475  072C  083F               	movf	lchika@i,w
  4476  072D  3EC6               	addlw	_cnt& (0+255)
  4477  072E  0086               	movwf	6
  4478  072F  0187               	clrf	7
  4479  0730  1C01               	btfss	1,0
  4480  0731  2F38               	goto	i1l2356
  4481                           
  4482                           ;PIC16F1827-ChargeStation4-01.c: 130: LED(i, 0);
  4483  0732  01F0               	clrf	i1LED@value
  4484  0733  083F               	movf	lchika@i,w
  4485  0734  318D  254E  3187   	fcall	i1_LED
  4486                           
  4487                           ;PIC16F1827-ChargeStation4-01.c: 131: } else {
  4488  0737  2F8D               	goto	i1l2370
  4489  0738                     i1l2356:	
  4490                           
  4491                           ;PIC16F1827-ChargeStation4-01.c: 132: if (cnt[i] / 2 <= v[i] / 100) {
  4492  0738  3064               	movlw	100
  4493  0739  00F6               	movwf	___lwdiv@divisor
  4494  073A  3000               	movlw	0
  4495  073B  00F7               	movwf	___lwdiv@divisor+1
  4496  073C  0020               	movlb	0	; select bank0
  4497  073D  353F               	lslf	lchika@i,w
  4498  073E  3E26               	addlw	_v& (0+255)
  4499  073F  0086               	movwf	6
  4500  0740  0187               	clrf	7
  4501  0741  3F40               	moviw [0]fsr1
  4502  0742  00F8               	movwf	___lwdiv@dividend
  4503  0743  3F41               	moviw [1]fsr1
  4504  0744  00F9               	movwf	___lwdiv@dividend+1
  4505  0745  318E  26A5  3187   	fcall	___lwdiv
  4506  0748  0876               	movf	?___lwdiv,w
  4507  0749  0020               	movlb	0	; select bank0
  4508  074A  00BB               	movwf	??_lchika
  4509  074B  0877               	movf	?___lwdiv+1,w
  4510  074C  00BC               	movwf	??_lchika+1
  4511  074D  3002               	movlw	2
  4512  074E  00F0               	movwf	___awdiv@divisor
  4513  074F  3000               	movlw	0
  4514  0750  00F1               	movwf	___awdiv@divisor+1
  4515  0751  083F               	movf	lchika@i,w
  4516  0752  3EC6               	addlw	_cnt& (0+255)
  4517  0753  0086               	movwf	6
  4518  0754  0187               	clrf	7
  4519  0755  0801               	movf	1,w
  4520  0756  00BD               	movwf	??_lchika+2
  4521  0757  01BE               	clrf	??_lchika+3
  4522  0758  083D               	movf	??_lchika+2,w
  4523  0759  00F2               	movwf	___awdiv@dividend
  4524  075A  083E               	movf	??_lchika+3,w
  4525  075B  00F3               	movwf	___awdiv@dividend+1
  4526  075C  318F  27AD  3187   	fcall	___awdiv
  4527  075F  0871               	movf	?___awdiv+1,w
  4528  0760  0020               	movlb	0	; select bank0
  4529  0761  023C               	subwf	??_lchika+1,w
  4530  0762  1D03               	skipz
  4531  0763  2F66               	goto	u243_25
  4532  0764  0870               	movf	?___awdiv,w
  4533  0765  023B               	subwf	??_lchika,w
  4534  0766                     u243_25:	
  4535  0766  1C03               	skipc
  4536  0767  2F72               	goto	i1l2362
  4537                           
  4538                           ;PIC16F1827-ChargeStation4-01.c: 133: LED(i, 1);
  4539  0768  01F0               	clrf	i1LED@value
  4540  0769  0AF0               	incf	i1LED@value,f
  4541  076A  083F               	movf	lchika@i,w
  4542  076B  318D  254E  3187   	fcall	i1_LED
  4543                           
  4544                           ;PIC16F1827-ChargeStation4-01.c: 134: cntf[i] = 0;
  4545  076E  0020               	movlb	0	; select bank0
  4546  076F  083F               	movf	lchika@i,w
  4547  0770  3EC9               	addlw	_cntf& (0+255)
  4548  0771  2F8A               	goto	L2
  4549  0772                     i1l2362:	
  4550                           ;PIC16F1827-ChargeStation4-01.c: 135: } else {
  4551                           
  4552                           
  4553                           ;PIC16F1827-ChargeStation4-01.c: 136: cntf[i]++;
  4554  0772  3001               	movlw	1
  4555  0773  00BB               	movwf	??_lchika
  4556  0774  083F               	movf	lchika@i,w
  4557  0775  3EC9               	addlw	_cntf& (0+255)
  4558  0776  0086               	movwf	6
  4559  0777  0187               	clrf	7
  4560  0778  083B               	movf	??_lchika,w
  4561  0779  0781               	addwf	1,f
  4562                           
  4563                           ;PIC16F1827-ChargeStation4-01.c: 137: LED(i, 0);
  4564  077A  01F0               	clrf	i1LED@value
  4565  077B  083F               	movf	lchika@i,w
  4566  077C  318D  254E  3187   	fcall	i1_LED
  4567                           
  4568                           ;PIC16F1827-ChargeStation4-01.c: 138: if (cntf[i] >= 2) {
  4569  077F  0020               	movlb	0	; select bank0
  4570  0780  083F               	movf	lchika@i,w
  4571  0781  3EC9               	addlw	_cntf& (0+255)
  4572  0782  0086               	movwf	6
  4573  0783  0187               	clrf	7
  4574  0784  3002               	movlw	2
  4575  0785  0201               	subwf	1,w
  4576  0786  1C03               	skipc
  4577  0787  2F8D               	goto	i1l2370
  4578                           
  4579                           ;PIC16F1827-ChargeStation4-01.c: 139: cnt[i] = 0;
  4580  0788  083F               	movf	lchika@i,w
  4581  0789  3EC6               	addlw	_cnt& (0+255)
  4582  078A                     L2:	
  4583  078A  0086               	movwf	6
  4584  078B  0187               	clrf	7
  4585  078C  0181               	clrf	1
  4586  078D                     i1l2370:	
  4587  078D  3001               	movlw	1
  4588  078E  0020               	movlb	0	; select bank0
  4589  078F  00BB               	movwf	??_lchika
  4590  0790  083B               	movf	??_lchika,w
  4591  0791  07BF               	addwf	lchika@i,f
  4592  0792  2F20               	goto	L3
  4593  0793                     __end_of_lchika:	
  4594                           
  4595                           	psect	text26
  4596  0D4E                     __ptext26:	
  4597 ;; *************** function i1_LED *****************
  4598 ;; Defined at:
  4599 ;;		line 243 in file "PIC16F1827-ChargeStation4-01.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  b               1    wreg     unsigned char 
  4602 ;;  value           1    0[COMMON] unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  b               1    1[COMMON] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;		None               void
  4607 ;; Registers used:
  4608 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4614 ;;      Params:         1       0       0       0       0       0
  4615 ;;      Locals:         1       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0
  4617 ;;      Totals:         2       0       0       0       0       0
  4618 ;;Total ram usage:        2 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_lchika
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function i1_LED
  4629  0D4E                     i1_LED:	
  4630                           
  4631                           ;incstack = 0
  4632                           ; Regs used in i1_LED: [wreg-fsr0h+status,2+status,0]
  4633                           ;i1LED@b stored from wreg
  4634  0D4E  00F1               	movwf	i1LED@b
  4635                           
  4636                           ;PIC16F1827-ChargeStation4-01.c: 244: switch (b) {
  4637  0D4F  2D68               	goto	i1l2224
  4638  0D50                     i1l366:	
  4639                           ;PIC16F1827-ChargeStation4-01.c: 245: case 0:
  4640                           
  4641                           
  4642                           ;PIC16F1827-ChargeStation4-01.c: 246: LATB5 = value;
  4643  0D50  1C70               	btfss	i1LED@value,0
  4644  0D51  2D55               	goto	u215_20
  4645  0D52  0022               	movlb	2	; select bank2
  4646  0D53  168D               	bsf	13,5	;volatile
  4647  0D54  0008               	return
  4648  0D55                     u215_20:	
  4649  0D55  0022               	movlb	2	; select bank2
  4650  0D56  128D               	bcf	13,5	;volatile
  4651                           
  4652                           ;PIC16F1827-ChargeStation4-01.c: 247: break;
  4653  0D57  0008               	return
  4654  0D58                     i1l368:	
  4655                           ;PIC16F1827-ChargeStation4-01.c: 248: case 1:
  4656                           
  4657                           
  4658                           ;PIC16F1827-ChargeStation4-01.c: 249: LATA6 = value;
  4659  0D58  1C70               	btfss	i1LED@value,0
  4660  0D59  2D5D               	goto	u217_20
  4661  0D5A  0022               	movlb	2	; select bank2
  4662  0D5B  170C               	bsf	12,6	;volatile
  4663  0D5C  0008               	return
  4664  0D5D                     u217_20:	
  4665  0D5D  0022               	movlb	2	; select bank2
  4666  0D5E  130C               	bcf	12,6	;volatile
  4667                           
  4668                           ;PIC16F1827-ChargeStation4-01.c: 250: break;
  4669  0D5F  0008               	return
  4670  0D60                     i1l369:	
  4671                           ;PIC16F1827-ChargeStation4-01.c: 251: case 2:
  4672                           
  4673                           
  4674                           ;PIC16F1827-ChargeStation4-01.c: 252: LATA7 = value;
  4675  0D60  1C70               	btfss	i1LED@value,0
  4676  0D61  2D65               	goto	u219_20
  4677  0D62  0022               	movlb	2	; select bank2
  4678  0D63  178C               	bsf	12,7	;volatile
  4679  0D64  0008               	return
  4680  0D65                     u219_20:	
  4681  0D65  0022               	movlb	2	; select bank2
  4682  0D66  138C               	bcf	12,7	;volatile
  4683                           
  4684                           ;PIC16F1827-ChargeStation4-01.c: 256: }
  4685                           
  4686                           ;PIC16F1827-ChargeStation4-01.c: 255: break;
  4687                           
  4688                           ;PIC16F1827-ChargeStation4-01.c: 254: default:
  4689                           
  4690                           ;PIC16F1827-ChargeStation4-01.c: 253: break;
  4691  0D67  0008               	return
  4692  0D68                     i1l2224:	
  4693  0D68  0871               	movf	i1LED@b,w
  4694                           
  4695                           ; Switch size 1, requested type "space"
  4696                           ; Number of cases is 3, Range of values is 0 to 2
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte           10     6 (average)
  4700                           ; direct_byte           12     6 (fixed)
  4701                           ; jumptable            260     6 (fixed)
  4702                           ;	Chosen strategy is simple_byte
  4703  0D69  3A00               	xorlw	0	; case 0
  4704  0D6A  1903               	skipnz
  4705  0D6B  2D50               	goto	i1l366
  4706  0D6C  3A01               	xorlw	1	; case 1
  4707  0D6D  1903               	skipnz
  4708  0D6E  2D58               	goto	i1l368
  4709  0D6F  3A03               	xorlw	3	; case 2
  4710  0D70  1903               	skipnz
  4711  0D71  2D60               	goto	i1l369
  4712  0D72  2D73               	goto	i1l371
  4713  0D73                     i1l371:	
  4714  0D73  0008               	return
  4715  0D74                     __end_ofi1_LED:	
  4716                           
  4717                           	psect	text27
  4718  0FAD                     __ptext27:	
  4719 ;; *************** function ___awdiv *****************
  4720 ;; Defined at:
  4721 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  divisor         2    0[COMMON] int 
  4724 ;;  dividend        2    2[COMMON] int 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  quotient        2    7[COMMON] int 
  4727 ;;  sign            1    6[COMMON] unsigned char 
  4728 ;;  counter         1    5[COMMON] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  2    0[COMMON] int 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4738 ;;      Params:         4       0       0       0       0       0
  4739 ;;      Locals:         4       0       0       0       0       0
  4740 ;;      Temps:          1       0       0       0       0       0
  4741 ;;      Totals:         9       0       0       0       0       0
  4742 ;;Total ram usage:        9 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_lchika
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function ___awdiv
  4753  0FAD                     ___awdiv:	
  4754                           
  4755                           ;incstack = 0
  4756                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4757  0FAD  01F6               	clrf	___awdiv@sign
  4758  0FAE  1FF1               	btfss	___awdiv@divisor+1,7
  4759  0FAF  2FB7               	goto	i1l2132
  4760  0FB0  09F0               	comf	___awdiv@divisor,f
  4761  0FB1  09F1               	comf	___awdiv@divisor+1,f
  4762  0FB2  0AF0               	incf	___awdiv@divisor,f
  4763  0FB3  1903               	skipnz
  4764  0FB4  0AF1               	incf	___awdiv@divisor+1,f
  4765  0FB5  01F6               	clrf	___awdiv@sign
  4766  0FB6  0AF6               	incf	___awdiv@sign,f
  4767  0FB7                     i1l2132:	
  4768  0FB7  1FF3               	btfss	___awdiv@dividend+1,7
  4769  0FB8  2FC2               	goto	i1l2138
  4770  0FB9  09F2               	comf	___awdiv@dividend,f
  4771  0FBA  09F3               	comf	___awdiv@dividend+1,f
  4772  0FBB  0AF2               	incf	___awdiv@dividend,f
  4773  0FBC  1903               	skipnz
  4774  0FBD  0AF3               	incf	___awdiv@dividend+1,f
  4775  0FBE  3001               	movlw	1
  4776  0FBF  00F4               	movwf	??___awdiv
  4777  0FC0  0874               	movf	??___awdiv,w
  4778  0FC1  06F6               	xorwf	___awdiv@sign,f
  4779  0FC2                     i1l2138:	
  4780  0FC2  01F7               	clrf	___awdiv@quotient
  4781  0FC3  01F8               	clrf	___awdiv@quotient+1
  4782  0FC4  0871               	movf	___awdiv@divisor+1,w
  4783  0FC5  0470               	iorwf	___awdiv@divisor,w
  4784  0FC6  1903               	skipnz
  4785  0FC7  2FF1               	goto	i1l2160
  4786  0FC8  01F5               	clrf	___awdiv@counter
  4787  0FC9  0AF5               	incf	___awdiv@counter,f
  4788  0FCA                     i1l2148:	
  4789  0FCA  1BF1               	btfsc	___awdiv@divisor+1,7
  4790  0FCB  2FD6               	goto	i1l2150
  4791  0FCC  3001               	movlw	1
  4792  0FCD                     u195_25:	
  4793  0FCD  35F0               	lslf	___awdiv@divisor,f
  4794  0FCE  0DF1               	rlf	___awdiv@divisor+1,f
  4795  0FCF  0B89               	decfsz	9,f
  4796  0FD0  2FCD               	goto	u195_25
  4797  0FD1  3001               	movlw	1
  4798  0FD2  00F4               	movwf	??___awdiv
  4799  0FD3  0874               	movf	??___awdiv,w
  4800  0FD4  07F5               	addwf	___awdiv@counter,f
  4801  0FD5  2FCA               	goto	i1l2148
  4802  0FD6                     i1l2150:	
  4803  0FD6  3001               	movlw	1
  4804  0FD7                     u197_25:	
  4805  0FD7  35F7               	lslf	___awdiv@quotient,f
  4806  0FD8  0DF8               	rlf	___awdiv@quotient+1,f
  4807  0FD9  0B89               	decfsz	9,f
  4808  0FDA  2FD7               	goto	u197_25
  4809  0FDB  0871               	movf	___awdiv@divisor+1,w
  4810  0FDC  0273               	subwf	___awdiv@dividend+1,w
  4811  0FDD  1D03               	skipz
  4812  0FDE  2FE1               	goto	u198_25
  4813  0FDF  0870               	movf	___awdiv@divisor,w
  4814  0FE0  0272               	subwf	___awdiv@dividend,w
  4815  0FE1                     u198_25:	
  4816  0FE1  1C03               	skipc
  4817  0FE2  2FE8               	goto	i1l2156
  4818  0FE3  0870               	movf	___awdiv@divisor,w
  4819  0FE4  02F2               	subwf	___awdiv@dividend,f
  4820  0FE5  0871               	movf	___awdiv@divisor+1,w
  4821  0FE6  3BF3               	subwfb	___awdiv@dividend+1,f
  4822  0FE7  1477               	bsf	___awdiv@quotient,0
  4823  0FE8                     i1l2156:	
  4824  0FE8  3001               	movlw	1
  4825  0FE9                     u199_25:	
  4826  0FE9  36F1               	lsrf	___awdiv@divisor+1,f
  4827  0FEA  0CF0               	rrf	___awdiv@divisor,f
  4828  0FEB  0B89               	decfsz	9,f
  4829  0FEC  2FE9               	goto	u199_25
  4830  0FED  3001               	movlw	1
  4831  0FEE  02F5               	subwf	___awdiv@counter,f
  4832  0FEF  1D03               	btfss	3,2
  4833  0FF0  2FD6               	goto	i1l2150
  4834  0FF1                     i1l2160:	
  4835  0FF1  0876               	movf	___awdiv@sign,w
  4836  0FF2  1903               	btfsc	3,2
  4837  0FF3  2FF9               	goto	i1l2164
  4838  0FF4  09F7               	comf	___awdiv@quotient,f
  4839  0FF5  09F8               	comf	___awdiv@quotient+1,f
  4840  0FF6  0AF7               	incf	___awdiv@quotient,f
  4841  0FF7  1903               	skipnz
  4842  0FF8  0AF8               	incf	___awdiv@quotient+1,f
  4843  0FF9                     i1l2164:	
  4844  0FF9  0878               	movf	___awdiv@quotient+1,w
  4845  0FFA  01F1               	clrf	?___awdiv+1
  4846  0FFB  07F1               	addwf	?___awdiv+1,f
  4847  0FFC  0877               	movf	___awdiv@quotient,w
  4848  0FFD  01F0               	clrf	?___awdiv
  4849  0FFE  07F0               	addwf	?___awdiv,f
  4850  0FFF  0008               	return
  4851  1000                     __end_of___awdiv:	
  4852                           
  4853                           	psect	text28
  4854  0235                     __ptext28:	
  4855 ;; *************** function _display *****************
  4856 ;; Defined at:
  4857 ;;		line 146 in file "PIC16F1827-ChargeStation4-01.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  i               1    wreg     unsigned char 
  4860 ;;  co              1   14[BANK0 ] unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  i               1   17[BANK0 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4872 ;;      Params:         0       1       0       0       0       0
  4873 ;;      Locals:         0       1       0       0       0       0
  4874 ;;      Temps:          0       2       0       0       0       0
  4875 ;;      Totals:         0       4       0       0       0       0
  4876 ;;Total ram usage:        4 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    4
  4879 ;; This function calls:
  4880 ;;		_LCD_Putc
  4881 ;;		_LCD_Puts
  4882 ;;		_LCD_SetCursor
  4883 ;;		___aldiv
  4884 ;;		___almod
  4885 ;;		___lwdiv
  4886 ;;		___lwmod
  4887 ;;		i1_LCD_Clear
  4888 ;; This function is called by:
  4889 ;;		_isr
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _display
  4895  0235                     _display:	
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4899                           ;display@i stored from wreg
  4900  0235  0020               	movlb	0	; select bank0
  4901  0236  00CC               	movwf	display@i
  4902                           
  4903                           ;PIC16F1827-ChargeStation4-01.c: 147: LCD_Clear();
  4904  0237  318B  230A  3182   	fcall	i1_LCD_Clear
  4905                           
  4906                           ;PIC16F1827-ChargeStation4-01.c: 148: LCD_SetCursor(0, 0);
  4907  023A  01F7               	clrf	LCD_SetCursor@row
  4908  023B  3000               	movlw	0
  4909  023C  318B  2346  3182   	fcall	_LCD_SetCursor
  4910                           
  4911                           ;PIC16F1827-ChargeStation4-01.c: 149: switch (co) {
  4912  023F  2C17               	goto	i1l2434
  4913  0240                     i1l2378:	
  4914                           ;PIC16F1827-ChargeStation4-01.c: 150: case 0:
  4915                           
  4916                           
  4917                           ;PIC16F1827-ChargeStation4-01.c: 151: LCD_SetCursor(0, 0);
  4918  0240  01F7               	clrf	LCD_SetCursor@row
  4919  0241  3000               	movlw	0
  4920  0242  318B  2346  3182   	fcall	_LCD_SetCursor
  4921                           
  4922                           ;PIC16F1827-ChargeStation4-01.c: 152: LCD_Puts("Charge");
  4923  0245  3010               	movlw	low (STR_1| (0+32768))
  4924  0246  00F4               	movwf	LCD_Puts@s
  4925  0247  3088               	movlw	high (STR_1| (0+32768))
  4926  0248  00F5               	movwf	LCD_Puts@s+1
  4927  0249  318E  2676  3182   	fcall	_LCD_Puts
  4928                           
  4929                           ;PIC16F1827-ChargeStation4-01.c: 153: LCD_SetCursor(0, 1);
  4930  024C  01F7               	clrf	LCD_SetCursor@row
  4931  024D  0AF7               	incf	LCD_SetCursor@row,f
  4932  024E  3000               	movlw	0
  4933  024F  318B  2346  3182   	fcall	_LCD_SetCursor
  4934                           
  4935                           ;PIC16F1827-ChargeStation4-01.c: 154: LCD_Puts("Station");
  4936  0252  3008               	movlw	low (STR_2| (0+32768))
  4937  0253  00F4               	movwf	LCD_Puts@s
  4938  0254  3088               	movlw	high (STR_2| (0+32768))
  4939  0255  00F5               	movwf	LCD_Puts@s+1
  4940  0256  318E  2676         	fcall	_LCD_Puts
  4941                           
  4942                           ;PIC16F1827-ChargeStation4-01.c: 155: break;
  4943  0258  0008               	return
  4944  0259                     i1l2384:	
  4945                           ;PIC16F1827-ChargeStation4-01.c: 158: case 0:
  4946                           
  4947                           ;PIC16F1827-ChargeStation4-01.c: 157: switch (i) {
  4948                           
  4949                           ;PIC16F1827-ChargeStation4-01.c: 156: case 1:
  4950                           
  4951                           
  4952                           ;PIC16F1827-ChargeStation4-01.c: 159: LCD_Puts("Right");
  4953  0259  301E               	movlw	low (STR_3| (0+32768))
  4954  025A  00F4               	movwf	LCD_Puts@s
  4955  025B  3088               	movlw	high (STR_3| (0+32768))
  4956  025C  00F5               	movwf	LCD_Puts@s+1
  4957  025D  318E  2676  3182   	fcall	_LCD_Puts
  4958                           
  4959                           ;PIC16F1827-ChargeStation4-01.c: 160: break;
  4960  0260  2A7D               	goto	i1l2394
  4961  0261                     i1l2386:	
  4962                           ;PIC16F1827-ChargeStation4-01.c: 161: case 1:
  4963                           
  4964                           
  4965                           ;PIC16F1827-ChargeStation4-01.c: 162: LCD_Puts("Center");
  4966  0261  3017               	movlw	low (STR_4| (0+32768))
  4967  0262  00F4               	movwf	LCD_Puts@s
  4968  0263  3088               	movlw	high (STR_4| (0+32768))
  4969  0264  00F5               	movwf	LCD_Puts@s+1
  4970  0265  318E  2676  3182   	fcall	_LCD_Puts
  4971                           
  4972                           ;PIC16F1827-ChargeStation4-01.c: 163: break;
  4973  0268  2A7D               	goto	i1l2394
  4974  0269                     i1l2388:	
  4975                           ;PIC16F1827-ChargeStation4-01.c: 164: case 2:
  4976                           
  4977                           
  4978                           ;PIC16F1827-ChargeStation4-01.c: 165: LCD_Puts("Left");
  4979  0269  3024               	movlw	low (STR_5| (0+32768))
  4980  026A  00F4               	movwf	LCD_Puts@s
  4981  026B  3088               	movlw	high (STR_5| (0+32768))
  4982  026C  00F5               	movwf	LCD_Puts@s+1
  4983  026D  318E  2676  3182   	fcall	_LCD_Puts
  4984                           
  4985                           ;PIC16F1827-ChargeStation4-01.c: 167: }
  4986                           
  4987                           ;PIC16F1827-ChargeStation4-01.c: 166: break;
  4988  0270  2A7D               	goto	i1l2394
  4989  0271                     i1l2392:	
  4990  0271  0020               	movlb	0	; select bank0
  4991  0272  084C               	movf	display@i,w
  4992                           
  4993                           ; Switch size 1, requested type "space"
  4994                           ; Number of cases is 3, Range of values is 0 to 2
  4995                           ; switch strategies available:
  4996                           ; Name         Instructions Cycles
  4997                           ; simple_byte           10     6 (average)
  4998                           ; direct_byte           12     6 (fixed)
  4999                           ; jumptable            260     6 (fixed)
  5000                           ;	Chosen strategy is simple_byte
  5001  0273  3A00               	xorlw	0	; case 0
  5002  0274  1903               	skipnz
  5003  0275  2A59               	goto	i1l2384
  5004  0276  3A01               	xorlw	1	; case 1
  5005  0277  1903               	skipnz
  5006  0278  2A61               	goto	i1l2386
  5007  0279  3A03               	xorlw	3	; case 2
  5008  027A  1903               	skipnz
  5009  027B  2A69               	goto	i1l2388
  5010  027C  2A7D               	goto	i1l2394
  5011  027D                     i1l2394:	
  5012                           
  5013                           ;PIC16F1827-ChargeStation4-01.c: 168: LCD_SetCursor(0, 1);
  5014  027D  01F7               	clrf	LCD_SetCursor@row
  5015  027E  0AF7               	incf	LCD_SetCursor@row,f
  5016  027F  3000               	movlw	0
  5017  0280  318B  2346  3182   	fcall	_LCD_SetCursor
  5018                           
  5019                           ;PIC16F1827-ChargeStation4-01.c: 169: LCD_Putc((v[i] % 10000) / 1000 + '0');
  5020  0283  30E8               	movlw	232
  5021  0284  00F6               	movwf	___lwdiv@divisor
  5022  0285  3003               	movlw	3
  5023  0286  00F7               	movwf	___lwdiv@divisor+1
  5024  0287  0020               	movlb	0	; select bank0
  5025  0288  354C               	lslf	display@i,w
  5026  0289  3E26               	addlw	_v& (0+255)
  5027  028A  0086               	movwf	6
  5028  028B  0187               	clrf	7
  5029  028C  3F40               	moviw [0]fsr1
  5030  028D  00F2               	movwf	___lwmod@dividend
  5031  028E  3F41               	moviw [1]fsr1
  5032  028F  00F3               	movwf	___lwmod@dividend+1
  5033  0290  3010               	movlw	16
  5034  0291  00F0               	movwf	___lwmod@divisor
  5035  0292  3027               	movlw	39
  5036  0293  00F1               	movwf	___lwmod@divisor+1
  5037  0294  318E  2648  3182   	fcall	___lwmod
  5038  0297  0871               	movf	?___lwmod+1,w
  5039  0298  01F9               	clrf	___lwdiv@dividend+1
  5040  0299  07F9               	addwf	___lwdiv@dividend+1,f
  5041  029A  0870               	movf	?___lwmod,w
  5042  029B  01F8               	clrf	___lwdiv@dividend
  5043  029C  07F8               	addwf	___lwdiv@dividend,f
  5044  029D  318E  26A5  3182   	fcall	___lwdiv
  5045  02A0  0876               	movf	?___lwdiv,w
  5046  02A1  3E30               	addlw	48
  5047  02A2  318C  2416  3182   	fcall	_LCD_Putc
  5048                           
  5049                           ;PIC16F1827-ChargeStation4-01.c: 170: LCD_Putc('.');
  5050  02A5  302E               	movlw	46
  5051  02A6  318C  2416  3182   	fcall	_LCD_Putc
  5052                           
  5053                           ;PIC16F1827-ChargeStation4-01.c: 171: LCD_Putc((v[i] % 1000) / 100 + '0');
  5054  02A9  3064               	movlw	100
  5055  02AA  00F6               	movwf	___lwdiv@divisor
  5056  02AB  3000               	movlw	0
  5057  02AC  00F7               	movwf	___lwdiv@divisor+1
  5058  02AD  0020               	movlb	0	; select bank0
  5059  02AE  354C               	lslf	display@i,w
  5060  02AF  3E26               	addlw	_v& (0+255)
  5061  02B0  0086               	movwf	6
  5062  02B1  0187               	clrf	7
  5063  02B2  3F40               	moviw [0]fsr1
  5064  02B3  00F2               	movwf	___lwmod@dividend
  5065  02B4  3F41               	moviw [1]fsr1
  5066  02B5  00F3               	movwf	___lwmod@dividend+1
  5067  02B6  30E8               	movlw	232
  5068  02B7  00F0               	movwf	___lwmod@divisor
  5069  02B8  3003               	movlw	3
  5070  02B9  00F1               	movwf	___lwmod@divisor+1
  5071  02BA  318E  2648  3182   	fcall	___lwmod
  5072  02BD  0871               	movf	?___lwmod+1,w
  5073  02BE  01F9               	clrf	___lwdiv@dividend+1
  5074  02BF  07F9               	addwf	___lwdiv@dividend+1,f
  5075  02C0  0870               	movf	?___lwmod,w
  5076  02C1  01F8               	clrf	___lwdiv@dividend
  5077  02C2  07F8               	addwf	___lwdiv@dividend,f
  5078  02C3  318E  26A5  3182   	fcall	___lwdiv
  5079  02C6  0876               	movf	?___lwdiv,w
  5080  02C7  3E30               	addlw	48
  5081  02C8  318C  2416  3182   	fcall	_LCD_Putc
  5082                           
  5083                           ;PIC16F1827-ChargeStation4-01.c: 172: LCD_Putc((v[i] % 100) / 10 + '0');
  5084  02CB  300A               	movlw	10
  5085  02CC  00F6               	movwf	___lwdiv@divisor
  5086  02CD  3000               	movlw	0
  5087  02CE  00F7               	movwf	___lwdiv@divisor+1
  5088  02CF  0020               	movlb	0	; select bank0
  5089  02D0  354C               	lslf	display@i,w
  5090  02D1  3E26               	addlw	_v& (0+255)
  5091  02D2  0086               	movwf	6
  5092  02D3  0187               	clrf	7
  5093  02D4  3F40               	moviw [0]fsr1
  5094  02D5  00F2               	movwf	___lwmod@dividend
  5095  02D6  3F41               	moviw [1]fsr1
  5096  02D7  00F3               	movwf	___lwmod@dividend+1
  5097  02D8  3064               	movlw	100
  5098  02D9  00F0               	movwf	___lwmod@divisor
  5099  02DA  3000               	movlw	0
  5100  02DB  00F1               	movwf	___lwmod@divisor+1
  5101  02DC  318E  2648  3182   	fcall	___lwmod
  5102  02DF  0871               	movf	?___lwmod+1,w
  5103  02E0  01F9               	clrf	___lwdiv@dividend+1
  5104  02E1  07F9               	addwf	___lwdiv@dividend+1,f
  5105  02E2  0870               	movf	?___lwmod,w
  5106  02E3  01F8               	clrf	___lwdiv@dividend
  5107  02E4  07F8               	addwf	___lwdiv@dividend,f
  5108  02E5  318E  26A5  3182   	fcall	___lwdiv
  5109  02E8  0876               	movf	?___lwdiv,w
  5110  02E9  3E30               	addlw	48
  5111  02EA  318C  2416  3182   	fcall	_LCD_Putc
  5112                           
  5113                           ;PIC16F1827-ChargeStation4-01.c: 173: LCD_Putc((v[i] % 10) / 1 + '0');
  5114  02ED  300A               	movlw	10
  5115  02EE  00F0               	movwf	___lwmod@divisor
  5116  02EF  3000               	movlw	0
  5117  02F0  00F1               	movwf	___lwmod@divisor+1
  5118  02F1  0020               	movlb	0	; select bank0
  5119  02F2  354C               	lslf	display@i,w
  5120  02F3  3E26               	addlw	_v& (0+255)
  5121  02F4  0086               	movwf	6
  5122  02F5  0187               	clrf	7
  5123  02F6  3F40               	moviw [0]fsr1
  5124  02F7  00F2               	movwf	___lwmod@dividend
  5125  02F8  3F41               	moviw [1]fsr1
  5126  02F9  00F3               	movwf	___lwmod@dividend+1
  5127  02FA  318E  2648  3182   	fcall	___lwmod
  5128  02FD  0870               	movf	?___lwmod,w
  5129  02FE  3E30               	addlw	48
  5130  02FF  318C  2416  3182   	fcall	_LCD_Putc
  5131                           
  5132                           ;PIC16F1827-ChargeStation4-01.c: 174: LCD_Putc('A');
  5133  0302  3041               	movlw	65
  5134  0303  318C  2416         	fcall	_LCD_Putc
  5135                           
  5136                           ;PIC16F1827-ChargeStation4-01.c: 175: break;
  5137  0305  0008               	return
  5138  0306                     i1l2404:	
  5139                           ;PIC16F1827-ChargeStation4-01.c: 178: case 0:
  5140                           
  5141                           ;PIC16F1827-ChargeStation4-01.c: 177: switch (i) {
  5142                           
  5143                           ;PIC16F1827-ChargeStation4-01.c: 176: case 2:
  5144                           
  5145                           
  5146                           ;PIC16F1827-ChargeStation4-01.c: 179: LCD_Puts("Right");
  5147  0306  301E               	movlw	low (STR_3| (0+32768))
  5148  0307  00F4               	movwf	LCD_Puts@s
  5149  0308  3088               	movlw	high (STR_3| (0+32768))
  5150  0309  00F5               	movwf	LCD_Puts@s+1
  5151  030A  318E  2676  3182   	fcall	_LCD_Puts
  5152                           
  5153                           ;PIC16F1827-ChargeStation4-01.c: 180: break;
  5154  030D  2B2A               	goto	i1l2414
  5155  030E                     i1l2406:	
  5156                           ;PIC16F1827-ChargeStation4-01.c: 181: case 1:
  5157                           
  5158                           
  5159                           ;PIC16F1827-ChargeStation4-01.c: 182: LCD_Puts("Center");
  5160  030E  3017               	movlw	low (STR_4| (0+32768))
  5161  030F  00F4               	movwf	LCD_Puts@s
  5162  0310  3088               	movlw	high (STR_4| (0+32768))
  5163  0311  00F5               	movwf	LCD_Puts@s+1
  5164  0312  318E  2676  3182   	fcall	_LCD_Puts
  5165                           
  5166                           ;PIC16F1827-ChargeStation4-01.c: 183: break;
  5167  0315  2B2A               	goto	i1l2414
  5168  0316                     i1l2408:	
  5169                           ;PIC16F1827-ChargeStation4-01.c: 184: case 2:
  5170                           
  5171                           
  5172                           ;PIC16F1827-ChargeStation4-01.c: 185: LCD_Puts("Left");
  5173  0316  3024               	movlw	low (STR_5| (0+32768))
  5174  0317  00F4               	movwf	LCD_Puts@s
  5175  0318  3088               	movlw	high (STR_5| (0+32768))
  5176  0319  00F5               	movwf	LCD_Puts@s+1
  5177  031A  318E  2676  3182   	fcall	_LCD_Puts
  5178                           
  5179                           ;PIC16F1827-ChargeStation4-01.c: 187: }
  5180                           
  5181                           ;PIC16F1827-ChargeStation4-01.c: 186: break;
  5182  031D  2B2A               	goto	i1l2414
  5183  031E                     i1l2412:	
  5184  031E  0020               	movlb	0	; select bank0
  5185  031F  084C               	movf	display@i,w
  5186                           
  5187                           ; Switch size 1, requested type "space"
  5188                           ; Number of cases is 3, Range of values is 0 to 2
  5189                           ; switch strategies available:
  5190                           ; Name         Instructions Cycles
  5191                           ; simple_byte           10     6 (average)
  5192                           ; direct_byte           12     6 (fixed)
  5193                           ; jumptable            260     6 (fixed)
  5194                           ;	Chosen strategy is simple_byte
  5195  0320  3A00               	xorlw	0	; case 0
  5196  0321  1903               	skipnz
  5197  0322  2B06               	goto	i1l2404
  5198  0323  3A01               	xorlw	1	; case 1
  5199  0324  1903               	skipnz
  5200  0325  2B0E               	goto	i1l2406
  5201  0326  3A03               	xorlw	3	; case 2
  5202  0327  1903               	skipnz
  5203  0328  2B16               	goto	i1l2408
  5204  0329  2B2A               	goto	i1l2414
  5205  032A                     i1l2414:	
  5206                           
  5207                           ;PIC16F1827-ChargeStation4-01.c: 188: LCD_SetCursor(0, 1);
  5208  032A  01F7               	clrf	LCD_SetCursor@row
  5209  032B  0AF7               	incf	LCD_SetCursor@row,f
  5210  032C  3000               	movlw	0
  5211  032D  318B  2346  3182   	fcall	_LCD_SetCursor
  5212                           
  5213                           ;PIC16F1827-ChargeStation4-01.c: 189: LCD_Putc((s[i] % 100000) / 10000 + '0');
  5214  0330  3000               	movlw	0
  5215  0331  0020               	movlb	0	; select bank0
  5216  0332  00BE               	movwf	___aldiv@divisor+3
  5217  0333  3000               	movlw	0
  5218  0334  00BD               	movwf	___aldiv@divisor+2
  5219  0335  3027               	movlw	39
  5220  0336  00BC               	movwf	___aldiv@divisor+1
  5221  0337  3010               	movlw	16
  5222  0338  00BB               	movwf	___aldiv@divisor
  5223  0339  354C               	lslf	display@i,w
  5224  033A  3E20               	addlw	_s& (0+255)
  5225  033B  0086               	movwf	6
  5226  033C  0187               	clrf	7
  5227  033D  3F40               	moviw [0]fsr1
  5228  033E  00CA               	movwf	??_display
  5229  033F  3F41               	moviw [1]fsr1
  5230  0340  00CB               	movwf	??_display+1
  5231  0341  084A               	movf	??_display,w
  5232  0342  00F4               	movwf	___almod@dividend
  5233  0343  084B               	movf	??_display+1,w
  5234  0344  00F5               	movwf	___almod@dividend+1
  5235  0345  01F6               	clrf	___almod@dividend+2
  5236  0346  01F7               	clrf	___almod@dividend+3
  5237  0347  3000               	movlw	0
  5238  0348  00F3               	movwf	___almod@divisor+3
  5239  0349  3001               	movlw	1
  5240  034A  00F2               	movwf	___almod@divisor+2
  5241  034B  3086               	movlw	134
  5242  034C  00F1               	movwf	___almod@divisor+1
  5243  034D  30A0               	movlw	160
  5244  034E  00F0               	movwf	___almod@divisor
  5245  034F  3187  2793  3182   	fcall	___almod
  5246  0352  0873               	movf	?___almod+3,w
  5247  0353  0020               	movlb	0	; select bank0
  5248  0354  00C2               	movwf	___aldiv@dividend+3
  5249  0355  0872               	movf	?___almod+2,w
  5250  0356  00C1               	movwf	___aldiv@dividend+2
  5251  0357  0871               	movf	?___almod+1,w
  5252  0358  00C0               	movwf	___aldiv@dividend+1
  5253  0359  0870               	movf	?___almod,w
  5254  035A  00BF               	movwf	___aldiv@dividend
  5255  035B  3186  269C  3182   	fcall	___aldiv
  5256  035E  0020               	movlb	0	; select bank0
  5257  035F  083B               	movf	?___aldiv,w
  5258  0360  3E30               	addlw	48
  5259  0361  318C  2416  3182   	fcall	_LCD_Putc
  5260                           
  5261                           ;PIC16F1827-ChargeStation4-01.c: 190: LCD_Putc((s[i] % 10000) / 1000 + '0');
  5262  0364  30E8               	movlw	232
  5263  0365  00F6               	movwf	___lwdiv@divisor
  5264  0366  3003               	movlw	3
  5265  0367  00F7               	movwf	___lwdiv@divisor+1
  5266  0368  0020               	movlb	0	; select bank0
  5267  0369  354C               	lslf	display@i,w
  5268  036A  3E20               	addlw	_s& (0+255)
  5269  036B  0086               	movwf	6
  5270  036C  0187               	clrf	7
  5271  036D  3F40               	moviw [0]fsr1
  5272  036E  00F2               	movwf	___lwmod@dividend
  5273  036F  3F41               	moviw [1]fsr1
  5274  0370  00F3               	movwf	___lwmod@dividend+1
  5275  0371  3010               	movlw	16
  5276  0372  00F0               	movwf	___lwmod@divisor
  5277  0373  3027               	movlw	39
  5278  0374  00F1               	movwf	___lwmod@divisor+1
  5279  0375  318E  2648  3182   	fcall	___lwmod
  5280  0378  0871               	movf	?___lwmod+1,w
  5281  0379  01F9               	clrf	___lwdiv@dividend+1
  5282  037A  07F9               	addwf	___lwdiv@dividend+1,f
  5283  037B  0870               	movf	?___lwmod,w
  5284  037C  01F8               	clrf	___lwdiv@dividend
  5285  037D  07F8               	addwf	___lwdiv@dividend,f
  5286  037E  318E  26A5  3182   	fcall	___lwdiv
  5287  0381  0876               	movf	?___lwdiv,w
  5288  0382  3E30               	addlw	48
  5289  0383  318C  2416  3182   	fcall	_LCD_Putc
  5290                           
  5291                           ;PIC16F1827-ChargeStation4-01.c: 191: LCD_Putc((s[i] % 1000) / 100 + '0');
  5292  0386  3064               	movlw	100
  5293  0387  00F6               	movwf	___lwdiv@divisor
  5294  0388  3000               	movlw	0
  5295  0389  00F7               	movwf	___lwdiv@divisor+1
  5296  038A  0020               	movlb	0	; select bank0
  5297  038B  354C               	lslf	display@i,w
  5298  038C  3E20               	addlw	_s& (0+255)
  5299  038D  0086               	movwf	6
  5300  038E  0187               	clrf	7
  5301  038F  3F40               	moviw [0]fsr1
  5302  0390  00F2               	movwf	___lwmod@dividend
  5303  0391  3F41               	moviw [1]fsr1
  5304  0392  00F3               	movwf	___lwmod@dividend+1
  5305  0393  30E8               	movlw	232
  5306  0394  00F0               	movwf	___lwmod@divisor
  5307  0395  3003               	movlw	3
  5308  0396  00F1               	movwf	___lwmod@divisor+1
  5309  0397  318E  2648  3182   	fcall	___lwmod
  5310  039A  0871               	movf	?___lwmod+1,w
  5311  039B  01F9               	clrf	___lwdiv@dividend+1
  5312  039C  07F9               	addwf	___lwdiv@dividend+1,f
  5313  039D  0870               	movf	?___lwmod,w
  5314  039E  01F8               	clrf	___lwdiv@dividend
  5315  039F  07F8               	addwf	___lwdiv@dividend,f
  5316  03A0  318E  26A5  3182   	fcall	___lwdiv
  5317  03A3  0876               	movf	?___lwdiv,w
  5318  03A4  3E30               	addlw	48
  5319  03A5  318C  2416  3182   	fcall	_LCD_Putc
  5320                           
  5321                           ;PIC16F1827-ChargeStation4-01.c: 192: LCD_Putc((s[i] % 100) / 10 + '0');
  5322  03A8  300A               	movlw	10
  5323  03A9  00F6               	movwf	___lwdiv@divisor
  5324  03AA  3000               	movlw	0
  5325  03AB  00F7               	movwf	___lwdiv@divisor+1
  5326  03AC  0020               	movlb	0	; select bank0
  5327  03AD  354C               	lslf	display@i,w
  5328  03AE  3E20               	addlw	_s& (0+255)
  5329  03AF  0086               	movwf	6
  5330  03B0  0187               	clrf	7
  5331  03B1  3F40               	moviw [0]fsr1
  5332  03B2  00F2               	movwf	___lwmod@dividend
  5333  03B3  3F41               	moviw [1]fsr1
  5334  03B4  00F3               	movwf	___lwmod@dividend+1
  5335  03B5  3064               	movlw	100
  5336  03B6  00F0               	movwf	___lwmod@divisor
  5337  03B7  3000               	movlw	0
  5338  03B8  00F1               	movwf	___lwmod@divisor+1
  5339  03B9  318E  2648  3182   	fcall	___lwmod
  5340  03BC  0871               	movf	?___lwmod+1,w
  5341  03BD  01F9               	clrf	___lwdiv@dividend+1
  5342  03BE  07F9               	addwf	___lwdiv@dividend+1,f
  5343  03BF  0870               	movf	?___lwmod,w
  5344  03C0  01F8               	clrf	___lwdiv@dividend
  5345  03C1  07F8               	addwf	___lwdiv@dividend,f
  5346  03C2  318E  26A5  3182   	fcall	___lwdiv
  5347  03C5  0876               	movf	?___lwdiv,w
  5348  03C6  3E30               	addlw	48
  5349  03C7  318C  2416  3182   	fcall	_LCD_Putc
  5350                           
  5351                           ;PIC16F1827-ChargeStation4-01.c: 193: LCD_Putc((s[i] % 10) / 1 + '0');
  5352  03CA  300A               	movlw	10
  5353  03CB  00F0               	movwf	___lwmod@divisor
  5354  03CC  3000               	movlw	0
  5355  03CD  00F1               	movwf	___lwmod@divisor+1
  5356  03CE  0020               	movlb	0	; select bank0
  5357  03CF  354C               	lslf	display@i,w
  5358  03D0  3E20               	addlw	_s& (0+255)
  5359  03D1  0086               	movwf	6
  5360  03D2  0187               	clrf	7
  5361  03D3  3F40               	moviw [0]fsr1
  5362  03D4  00F2               	movwf	___lwmod@dividend
  5363  03D5  3F41               	moviw [1]fsr1
  5364  03D6  00F3               	movwf	___lwmod@dividend+1
  5365  03D7  318E  2648  3182   	fcall	___lwmod
  5366  03DA  0870               	movf	?___lwmod,w
  5367  03DB  3E30               	addlw	48
  5368  03DC  318C  2416  3182   	fcall	_LCD_Putc
  5369                           
  5370                           ;PIC16F1827-ChargeStation4-01.c: 194: LCD_Puts("mAh");
  5371  03DF  3029               	movlw	low (STR_9| (0+32768))
  5372  03E0  00F4               	movwf	LCD_Puts@s
  5373  03E1  3088               	movlw	high (STR_9| (0+32768))
  5374  03E2  00F5               	movwf	LCD_Puts@s+1
  5375  03E3  318E  2676         	fcall	_LCD_Puts
  5376                           
  5377                           ;PIC16F1827-ChargeStation4-01.c: 195: break;
  5378  03E5  0008               	return
  5379  03E6                     i1l2418:	
  5380                           ;PIC16F1827-ChargeStation4-01.c: 198: case 0:
  5381                           
  5382                           ;PIC16F1827-ChargeStation4-01.c: 197: switch (i) {
  5383                           
  5384                           ;PIC16F1827-ChargeStation4-01.c: 196: case 3:
  5385                           
  5386                           
  5387                           ;PIC16F1827-ChargeStation4-01.c: 199: LCD_Puts("Right");
  5388  03E6  301E               	movlw	low (STR_3| (0+32768))
  5389  03E7  00F4               	movwf	LCD_Puts@s
  5390  03E8  3088               	movlw	high (STR_3| (0+32768))
  5391  03E9  00F5               	movwf	LCD_Puts@s+1
  5392  03EA  318E  2676  3182   	fcall	_LCD_Puts
  5393                           
  5394                           ;PIC16F1827-ChargeStation4-01.c: 200: break;
  5395  03ED  2C0A               	goto	i1l2428
  5396  03EE                     i1l2420:	
  5397                           ;PIC16F1827-ChargeStation4-01.c: 201: case 1:
  5398                           
  5399                           
  5400                           ;PIC16F1827-ChargeStation4-01.c: 202: LCD_Puts("Center");
  5401  03EE  3017               	movlw	low (STR_4| (0+32768))
  5402  03EF  00F4               	movwf	LCD_Puts@s
  5403  03F0  3088               	movlw	high (STR_4| (0+32768))
  5404  03F1  00F5               	movwf	LCD_Puts@s+1
  5405  03F2  318E  2676  3182   	fcall	_LCD_Puts
  5406                           
  5407                           ;PIC16F1827-ChargeStation4-01.c: 203: break;
  5408  03F5  2C0A               	goto	i1l2428
  5409  03F6                     i1l2422:	
  5410                           ;PIC16F1827-ChargeStation4-01.c: 204: case 2:
  5411                           
  5412                           
  5413                           ;PIC16F1827-ChargeStation4-01.c: 205: LCD_Puts("Left");
  5414  03F6  3024               	movlw	low (STR_5| (0+32768))
  5415  03F7  00F4               	movwf	LCD_Puts@s
  5416  03F8  3088               	movlw	high (STR_5| (0+32768))
  5417  03F9  00F5               	movwf	LCD_Puts@s+1
  5418  03FA  318E  2676  3182   	fcall	_LCD_Puts
  5419                           
  5420                           ;PIC16F1827-ChargeStation4-01.c: 207: }
  5421                           
  5422                           ;PIC16F1827-ChargeStation4-01.c: 206: break;
  5423  03FD  2C0A               	goto	i1l2428
  5424  03FE                     i1l2426:	
  5425  03FE  0020               	movlb	0	; select bank0
  5426  03FF  084C               	movf	display@i,w
  5427                           
  5428                           ; Switch size 1, requested type "space"
  5429                           ; Number of cases is 3, Range of values is 0 to 2
  5430                           ; switch strategies available:
  5431                           ; Name         Instructions Cycles
  5432                           ; simple_byte           10     6 (average)
  5433                           ; direct_byte           12     6 (fixed)
  5434                           ; jumptable            260     6 (fixed)
  5435                           ;	Chosen strategy is simple_byte
  5436  0400  3A00               	xorlw	0	; case 0
  5437  0401  1903               	skipnz
  5438  0402  2BE6               	goto	i1l2418
  5439  0403  3A01               	xorlw	1	; case 1
  5440  0404  1903               	skipnz
  5441  0405  2BEE               	goto	i1l2420
  5442  0406  3A03               	xorlw	3	; case 2
  5443  0407  1903               	skipnz
  5444  0408  2BF6               	goto	i1l2422
  5445  0409  2C0A               	goto	i1l2428
  5446  040A                     i1l2428:	
  5447                           
  5448                           ;PIC16F1827-ChargeStation4-01.c: 208: LCD_SetCursor(0, 1);
  5449  040A  01F7               	clrf	LCD_SetCursor@row
  5450  040B  0AF7               	incf	LCD_SetCursor@row,f
  5451  040C  3000               	movlw	0
  5452  040D  318B  2346  3182   	fcall	_LCD_SetCursor
  5453                           
  5454                           ;PIC16F1827-ChargeStation4-01.c: 209: LCD_Puts("Reseted");
  5455  0410  3000               	movlw	low (STR_13| (0+32768))
  5456  0411  00F4               	movwf	LCD_Puts@s
  5457  0412  3088               	movlw	high (STR_13| (0+32768))
  5458  0413  00F5               	movwf	LCD_Puts@s+1
  5459  0414  318E  2676         	fcall	_LCD_Puts
  5460                           
  5461                           ;PIC16F1827-ChargeStation4-01.c: 212: }
  5462                           
  5463                           ;PIC16F1827-ChargeStation4-01.c: 210: break;
  5464  0416  0008               	return
  5465  0417                     i1l2434:	
  5466  0417  0020               	movlb	0	; select bank0
  5467  0418  0849               	movf	display@co,w
  5468                           
  5469                           ; Switch size 1, requested type "space"
  5470                           ; Number of cases is 4, Range of values is 0 to 3
  5471                           ; switch strategies available:
  5472                           ; Name         Instructions Cycles
  5473                           ; simple_byte           13     7 (average)
  5474                           ; direct_byte           14     6 (fixed)
  5475                           ; jumptable            260     6 (fixed)
  5476                           ;	Chosen strategy is simple_byte
  5477  0419  3A00               	xorlw	0	; case 0
  5478  041A  1903               	skipnz
  5479  041B  2A40               	goto	i1l2378
  5480  041C  3A01               	xorlw	1	; case 1
  5481  041D  1903               	skipnz
  5482  041E  2A71               	goto	i1l2392
  5483  041F  3A03               	xorlw	3	; case 2
  5484  0420  1903               	skipnz
  5485  0421  2B1E               	goto	i1l2412
  5486  0422  3A01               	xorlw	1	; case 3
  5487  0423  1903               	skipnz
  5488  0424  2BFE               	goto	i1l2426
  5489  0425  2C26               	goto	i1l347
  5490  0426                     i1l347:	
  5491  0426  0008               	return
  5492  0427                     __end_of_display:	
  5493                           
  5494                           	psect	text29
  5495  0B0A                     __ptext29:	
  5496 ;; *************** function i1_LCD_Clear *****************
  5497 ;; Defined at:
  5498 ;;		line 280 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;		None               void
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0, pclath, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5512 ;;      Params:         0       0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0
  5514 ;;      Temps:          2       0       0       0       0       0
  5515 ;;      Totals:         2       0       0       0       0       0
  5516 ;;Total ram usage:        2 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    3
  5519 ;; This function calls:
  5520 ;;		i1_LCD_Command
  5521 ;; This function is called by:
  5522 ;;		_display
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function i1_LCD_Clear
  5528  0B0A                     i1_LCD_Clear:	
  5529                           
  5530                           ;My_header_16F.h: 281: LCD_Command(0x01);
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5534  0B0A  3001               	movlw	1
  5535  0B0B  318C  2432  318B   	fcall	i1_LCD_Command
  5536                           
  5537                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  5538  0B0E  300C               	movlw	12
  5539  0B0F  00F8               	movwf	??i1_LCD_Clear+1
  5540  0B10  306C               	movlw	108
  5541  0B11  00F7               	movwf	??i1_LCD_Clear
  5542  0B12                     u397_27:	
  5543  0B12  0BF7               	decfsz	??i1_LCD_Clear,f
  5544  0B13  2B12               	goto	u397_27
  5545  0B14  0BF8               	decfsz	??i1_LCD_Clear+1,f
  5546  0B15  2B12               	goto	u397_27
  5547  0B16  0000               	nop
  5548  0B17  0008               	return
  5549  0B18                     __end_ofi1_LCD_Clear:	
  5550                           
  5551                           	psect	text30
  5552  0E48                     __ptext30:	
  5553 ;; *************** function ___lwmod *****************
  5554 ;; Defined at:
  5555 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  divisor         2    0[COMMON] unsigned int 
  5558 ;;  dividend        2    2[COMMON] unsigned int 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  counter         1    5[COMMON] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  2    0[COMMON] unsigned int 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5570 ;;      Params:         4       0       0       0       0       0
  5571 ;;      Locals:         1       0       0       0       0       0
  5572 ;;      Temps:          1       0       0       0       0       0
  5573 ;;      Totals:         6       0       0       0       0       0
  5574 ;;Total ram usage:        6 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_display
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function ___lwmod
  5585  0E48                     ___lwmod:	
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5589  0E48  0871               	movf	___lwmod@divisor+1,w
  5590  0E49  0470               	iorwf	___lwmod@divisor,w
  5591  0E4A  1903               	skipnz
  5592  0E4B  2E6F               	goto	i1l2212
  5593  0E4C  01F5               	clrf	___lwmod@counter
  5594  0E4D  0AF5               	incf	___lwmod@counter,f
  5595  0E4E                     i1l2202:	
  5596  0E4E  1BF1               	btfsc	___lwmod@divisor+1,7
  5597  0E4F  2E5A               	goto	i1l2204
  5598  0E50  3001               	movlw	1
  5599  0E51                     u210_25:	
  5600  0E51  35F0               	lslf	___lwmod@divisor,f
  5601  0E52  0DF1               	rlf	___lwmod@divisor+1,f
  5602  0E53  0B89               	decfsz	9,f
  5603  0E54  2E51               	goto	u210_25
  5604  0E55  3001               	movlw	1
  5605  0E56  00F4               	movwf	??___lwmod
  5606  0E57  0874               	movf	??___lwmod,w
  5607  0E58  07F5               	addwf	___lwmod@counter,f
  5608  0E59  2E4E               	goto	i1l2202
  5609  0E5A                     i1l2204:	
  5610  0E5A  0871               	movf	___lwmod@divisor+1,w
  5611  0E5B  0273               	subwf	___lwmod@dividend+1,w
  5612  0E5C  1D03               	skipz
  5613  0E5D  2E60               	goto	u212_25
  5614  0E5E  0870               	movf	___lwmod@divisor,w
  5615  0E5F  0272               	subwf	___lwmod@dividend,w
  5616  0E60                     u212_25:	
  5617  0E60  1C03               	skipc
  5618  0E61  2E66               	goto	i1l2208
  5619  0E62  0870               	movf	___lwmod@divisor,w
  5620  0E63  02F2               	subwf	___lwmod@dividend,f
  5621  0E64  0871               	movf	___lwmod@divisor+1,w
  5622  0E65  3BF3               	subwfb	___lwmod@dividend+1,f
  5623  0E66                     i1l2208:	
  5624  0E66  3001               	movlw	1
  5625  0E67                     u213_25:	
  5626  0E67  36F1               	lsrf	___lwmod@divisor+1,f
  5627  0E68  0CF0               	rrf	___lwmod@divisor,f
  5628  0E69  0B89               	decfsz	9,f
  5629  0E6A  2E67               	goto	u213_25
  5630  0E6B  3001               	movlw	1
  5631  0E6C  02F5               	subwf	___lwmod@counter,f
  5632  0E6D  1D03               	btfss	3,2
  5633  0E6E  2E5A               	goto	i1l2204
  5634  0E6F                     i1l2212:	
  5635  0E6F  0873               	movf	___lwmod@dividend+1,w
  5636  0E70  01F1               	clrf	?___lwmod+1
  5637  0E71  07F1               	addwf	?___lwmod+1,f
  5638  0E72  0872               	movf	___lwmod@dividend,w
  5639  0E73  01F0               	clrf	?___lwmod
  5640  0E74  07F0               	addwf	?___lwmod,f
  5641  0E75  0008               	return
  5642  0E76                     __end_of___lwmod:	
  5643                           
  5644                           	psect	text31
  5645  0EA5                     __ptext31:	
  5646 ;; *************** function ___lwdiv *****************
  5647 ;; Defined at:
  5648 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  divisor         2    6[COMMON] unsigned int 
  5651 ;;  dividend        2    8[COMMON] unsigned int 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  quotient        2   11[COMMON] unsigned int 
  5654 ;;  counter         1   13[COMMON] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  2    6[COMMON] unsigned int 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5664 ;;      Params:         4       0       0       0       0       0
  5665 ;;      Locals:         3       0       0       0       0       0
  5666 ;;      Temps:          1       0       0       0       0       0
  5667 ;;      Totals:         8       0       0       0       0       0
  5668 ;;Total ram usage:        8 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_lchika
  5674 ;;		_display
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function ___lwdiv
  5680  0EA5                     ___lwdiv:	
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5684  0EA5  01FB               	clrf	___lwdiv@quotient
  5685  0EA6  01FC               	clrf	___lwdiv@quotient+1
  5686  0EA7  0877               	movf	___lwdiv@divisor+1,w
  5687  0EA8  0476               	iorwf	___lwdiv@divisor,w
  5688  0EA9  1903               	skipnz
  5689  0EAA  2ED4               	goto	i1l2190
  5690  0EAB  01FD               	clrf	___lwdiv@counter
  5691  0EAC  0AFD               	incf	___lwdiv@counter,f
  5692  0EAD                     i1l2178:	
  5693  0EAD  1BF7               	btfsc	___lwdiv@divisor+1,7
  5694  0EAE  2EB9               	goto	i1l2180
  5695  0EAF  3001               	movlw	1
  5696  0EB0                     u203_25:	
  5697  0EB0  35F6               	lslf	___lwdiv@divisor,f
  5698  0EB1  0DF7               	rlf	___lwdiv@divisor+1,f
  5699  0EB2  0B89               	decfsz	9,f
  5700  0EB3  2EB0               	goto	u203_25
  5701  0EB4  3001               	movlw	1
  5702  0EB5  00FA               	movwf	??___lwdiv
  5703  0EB6  087A               	movf	??___lwdiv,w
  5704  0EB7  07FD               	addwf	___lwdiv@counter,f
  5705  0EB8  2EAD               	goto	i1l2178
  5706  0EB9                     i1l2180:	
  5707  0EB9  3001               	movlw	1
  5708  0EBA                     u205_25:	
  5709  0EBA  35FB               	lslf	___lwdiv@quotient,f
  5710  0EBB  0DFC               	rlf	___lwdiv@quotient+1,f
  5711  0EBC  0B89               	decfsz	9,f
  5712  0EBD  2EBA               	goto	u205_25
  5713  0EBE  0877               	movf	___lwdiv@divisor+1,w
  5714  0EBF  0279               	subwf	___lwdiv@dividend+1,w
  5715  0EC0  1D03               	skipz
  5716  0EC1  2EC4               	goto	u206_25
  5717  0EC2  0876               	movf	___lwdiv@divisor,w
  5718  0EC3  0278               	subwf	___lwdiv@dividend,w
  5719  0EC4                     u206_25:	
  5720  0EC4  1C03               	skipc
  5721  0EC5  2ECB               	goto	i1l2186
  5722  0EC6  0876               	movf	___lwdiv@divisor,w
  5723  0EC7  02F8               	subwf	___lwdiv@dividend,f
  5724  0EC8  0877               	movf	___lwdiv@divisor+1,w
  5725  0EC9  3BF9               	subwfb	___lwdiv@dividend+1,f
  5726  0ECA  147B               	bsf	___lwdiv@quotient,0
  5727  0ECB                     i1l2186:	
  5728  0ECB  3001               	movlw	1
  5729  0ECC                     u207_25:	
  5730  0ECC  36F7               	lsrf	___lwdiv@divisor+1,f
  5731  0ECD  0CF6               	rrf	___lwdiv@divisor,f
  5732  0ECE  0B89               	decfsz	9,f
  5733  0ECF  2ECC               	goto	u207_25
  5734  0ED0  3001               	movlw	1
  5735  0ED1  02FD               	subwf	___lwdiv@counter,f
  5736  0ED2  1D03               	btfss	3,2
  5737  0ED3  2EB9               	goto	i1l2180
  5738  0ED4                     i1l2190:	
  5739  0ED4  087C               	movf	___lwdiv@quotient+1,w
  5740  0ED5  01F7               	clrf	?___lwdiv+1
  5741  0ED6  07F7               	addwf	?___lwdiv+1,f
  5742  0ED7  087B               	movf	___lwdiv@quotient,w
  5743  0ED8  01F6               	clrf	?___lwdiv
  5744  0ED9  07F6               	addwf	?___lwdiv,f
  5745  0EDA  0008               	return
  5746  0EDB                     __end_of___lwdiv:	
  5747                           
  5748                           	psect	text32
  5749  0793                     __ptext32:	
  5750 ;; *************** function ___almod *****************
  5751 ;; Defined at:
  5752 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\almod.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  divisor         4    0[COMMON] long 
  5755 ;;  dividend        4    4[COMMON] long 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  sign            1   10[COMMON] unsigned char 
  5758 ;;  counter         1    9[COMMON] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  4    0[COMMON] long 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5768 ;;      Params:         8       0       0       0       0       0
  5769 ;;      Locals:         2       0       0       0       0       0
  5770 ;;      Temps:          1       0       0       0       0       0
  5771 ;;      Totals:        11       0       0       0       0       0
  5772 ;;Total ram usage:       11 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_display
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function ___almod
  5783  0793                     ___almod:	
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in ___almod: [wreg+status,2+status,0]
  5787  0793  01FA               	clrf	___almod@sign
  5788  0794  1FF7               	btfss	___almod@dividend+3,7
  5789  0795  2FA3               	goto	i1l561
  5790  0796  09F4               	comf	___almod@dividend,f
  5791  0797  09F5               	comf	___almod@dividend+1,f
  5792  0798  09F6               	comf	___almod@dividend+2,f
  5793  0799  09F7               	comf	___almod@dividend+3,f
  5794  079A  0AF4               	incf	___almod@dividend,f
  5795  079B  1903               	skipnz
  5796  079C  0AF5               	incf	___almod@dividend+1,f
  5797  079D  1903               	skipnz
  5798  079E  0AF6               	incf	___almod@dividend+2,f
  5799  079F  1903               	skipnz
  5800  07A0  0AF7               	incf	___almod@dividend+3,f
  5801  07A1  01FA               	clrf	___almod@sign
  5802  07A2  0AFA               	incf	___almod@sign,f
  5803  07A3                     i1l561:	
  5804  07A3  1FF3               	btfss	___almod@divisor+3,7
  5805  07A4  2FB0               	goto	i1l2100
  5806  07A5  09F0               	comf	___almod@divisor,f
  5807  07A6  09F1               	comf	___almod@divisor+1,f
  5808  07A7  09F2               	comf	___almod@divisor+2,f
  5809  07A8  09F3               	comf	___almod@divisor+3,f
  5810  07A9  0AF0               	incf	___almod@divisor,f
  5811  07AA  1903               	skipnz
  5812  07AB  0AF1               	incf	___almod@divisor+1,f
  5813  07AC  1903               	skipnz
  5814  07AD  0AF2               	incf	___almod@divisor+2,f
  5815  07AE  1903               	skipnz
  5816  07AF  0AF3               	incf	___almod@divisor+3,f
  5817  07B0                     i1l2100:	
  5818  07B0  0873               	movf	___almod@divisor+3,w
  5819  07B1  0472               	iorwf	___almod@divisor+2,w
  5820  07B2  0471               	iorwf	___almod@divisor+1,w
  5821  07B3  0470               	iorwf	___almod@divisor,w
  5822  07B4  1903               	skipnz
  5823  07B5  2FE9               	goto	i1l2116
  5824  07B6  01F9               	clrf	___almod@counter
  5825  07B7  0AF9               	incf	___almod@counter,f
  5826  07B8                     i1l2106:	
  5827  07B8  1BF3               	btfsc	___almod@divisor+3,7
  5828  07B9  2FC6               	goto	i1l2108
  5829  07BA  3001               	movlw	1
  5830  07BB                     u186_25:	
  5831  07BB  35F0               	lslf	___almod@divisor,f
  5832  07BC  0DF1               	rlf	___almod@divisor+1,f
  5833  07BD  0DF2               	rlf	___almod@divisor+2,f
  5834  07BE  0DF3               	rlf	___almod@divisor+3,f
  5835  07BF  0B89               	decfsz	9,f
  5836  07C0  2FBB               	goto	u186_25
  5837  07C1  3001               	movlw	1
  5838  07C2  00F8               	movwf	??___almod
  5839  07C3  0878               	movf	??___almod,w
  5840  07C4  07F9               	addwf	___almod@counter,f
  5841  07C5  2FB8               	goto	i1l2106
  5842  07C6                     i1l2108:	
  5843  07C6  0873               	movf	___almod@divisor+3,w
  5844  07C7  0277               	subwf	___almod@dividend+3,w
  5845  07C8  1D03               	skipz
  5846  07C9  2FD4               	goto	u188_25
  5847  07CA  0872               	movf	___almod@divisor+2,w
  5848  07CB  0276               	subwf	___almod@dividend+2,w
  5849  07CC  1D03               	skipz
  5850  07CD  2FD4               	goto	u188_25
  5851  07CE  0871               	movf	___almod@divisor+1,w
  5852  07CF  0275               	subwf	___almod@dividend+1,w
  5853  07D0  1D03               	skipz
  5854  07D1  2FD4               	goto	u188_25
  5855  07D2  0870               	movf	___almod@divisor,w
  5856  07D3  0274               	subwf	___almod@dividend,w
  5857  07D4                     u188_25:	
  5858  07D4  1C03               	skipc
  5859  07D5  2FDE               	goto	i1l2112
  5860  07D6  0870               	movf	___almod@divisor,w
  5861  07D7  02F4               	subwf	___almod@dividend,f
  5862  07D8  0871               	movf	___almod@divisor+1,w
  5863  07D9  3BF5               	subwfb	___almod@dividend+1,f
  5864  07DA  0872               	movf	___almod@divisor+2,w
  5865  07DB  3BF6               	subwfb	___almod@dividend+2,f
  5866  07DC  0873               	movf	___almod@divisor+3,w
  5867  07DD  3BF7               	subwfb	___almod@dividend+3,f
  5868  07DE                     i1l2112:	
  5869  07DE  3001               	movlw	1
  5870  07DF                     u189_25:	
  5871  07DF  36F3               	lsrf	___almod@divisor+3,f
  5872  07E0  0CF2               	rrf	___almod@divisor+2,f
  5873  07E1  0CF1               	rrf	___almod@divisor+1,f
  5874  07E2  0CF0               	rrf	___almod@divisor,f
  5875  07E3  0B89               	decfsz	9,f
  5876  07E4  2FDF               	goto	u189_25
  5877  07E5  3001               	movlw	1
  5878  07E6  02F9               	subwf	___almod@counter,f
  5879  07E7  1D03               	btfss	3,2
  5880  07E8  2FC6               	goto	i1l2108
  5881  07E9                     i1l2116:	
  5882  07E9  087A               	movf	___almod@sign,w
  5883  07EA  1903               	btfsc	3,2
  5884  07EB  2FF7               	goto	i1l2120
  5885  07EC  09F4               	comf	___almod@dividend,f
  5886  07ED  09F5               	comf	___almod@dividend+1,f
  5887  07EE  09F6               	comf	___almod@dividend+2,f
  5888  07EF  09F7               	comf	___almod@dividend+3,f
  5889  07F0  0AF4               	incf	___almod@dividend,f
  5890  07F1  1903               	skipnz
  5891  07F2  0AF5               	incf	___almod@dividend+1,f
  5892  07F3  1903               	skipnz
  5893  07F4  0AF6               	incf	___almod@dividend+2,f
  5894  07F5  1903               	skipnz
  5895  07F6  0AF7               	incf	___almod@dividend+3,f
  5896  07F7                     i1l2120:	
  5897  07F7  0877               	movf	___almod@dividend+3,w
  5898  07F8  00F3               	movwf	?___almod+3
  5899  07F9  0876               	movf	___almod@dividend+2,w
  5900  07FA  00F2               	movwf	?___almod+2
  5901  07FB  0875               	movf	___almod@dividend+1,w
  5902  07FC  00F1               	movwf	?___almod+1
  5903  07FD  0874               	movf	___almod@dividend,w
  5904  07FE  00F0               	movwf	?___almod
  5905  07FF  0008               	return
  5906  0800                     __end_of___almod:	
  5907                           
  5908                           	psect	text33
  5909  069C                     __ptext33:	
  5910 ;; *************** function ___aldiv *****************
  5911 ;; Defined at:
  5912 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  divisor         4    0[BANK0 ] long 
  5915 ;;  dividend        4    4[BANK0 ] long 
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  quotient        4   10[BANK0 ] long 
  5918 ;;  sign            1    9[BANK0 ] unsigned char 
  5919 ;;  counter         1    8[BANK0 ] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  4    0[BANK0 ] long 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5929 ;;      Params:         0       8       0       0       0       0
  5930 ;;      Locals:         0       6       0       0       0       0
  5931 ;;      Temps:          1       0       0       0       0       0
  5932 ;;      Totals:         1      14       0       0       0       0
  5933 ;;Total ram usage:       15 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_display
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           
  5943                           ;psect for function ___aldiv
  5944  069C                     ___aldiv:	
  5945                           
  5946                           ;incstack = 0
  5947                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5948  069C  0020               	movlb	0	; select bank0
  5949  069D  01C4               	clrf	___aldiv@sign
  5950  069E  1FBE               	btfss	___aldiv@divisor+3,7
  5951  069F  2EAD               	goto	i1l548
  5952  06A0  09BB               	comf	___aldiv@divisor,f
  5953  06A1  09BC               	comf	___aldiv@divisor+1,f
  5954  06A2  09BD               	comf	___aldiv@divisor+2,f
  5955  06A3  09BE               	comf	___aldiv@divisor+3,f
  5956  06A4  0ABB               	incf	___aldiv@divisor,f
  5957  06A5  1903               	skipnz
  5958  06A6  0ABC               	incf	___aldiv@divisor+1,f
  5959  06A7  1903               	skipnz
  5960  06A8  0ABD               	incf	___aldiv@divisor+2,f
  5961  06A9  1903               	skipnz
  5962  06AA  0ABE               	incf	___aldiv@divisor+3,f
  5963  06AB  01C4               	clrf	___aldiv@sign
  5964  06AC  0AC4               	incf	___aldiv@sign,f
  5965  06AD                     i1l548:	
  5966  06AD  1FC2               	btfss	___aldiv@dividend+3,7
  5967  06AE  2EBE               	goto	i1l2062
  5968  06AF  09BF               	comf	___aldiv@dividend,f
  5969  06B0  09C0               	comf	___aldiv@dividend+1,f
  5970  06B1  09C1               	comf	___aldiv@dividend+2,f
  5971  06B2  09C2               	comf	___aldiv@dividend+3,f
  5972  06B3  0ABF               	incf	___aldiv@dividend,f
  5973  06B4  1903               	skipnz
  5974  06B5  0AC0               	incf	___aldiv@dividend+1,f
  5975  06B6  1903               	skipnz
  5976  06B7  0AC1               	incf	___aldiv@dividend+2,f
  5977  06B8  1903               	skipnz
  5978  06B9  0AC2               	incf	___aldiv@dividend+3,f
  5979  06BA  3001               	movlw	1
  5980  06BB  00FB               	movwf	??___aldiv
  5981  06BC  087B               	movf	??___aldiv,w
  5982  06BD  06C4               	xorwf	___aldiv@sign,f
  5983  06BE                     i1l2062:	
  5984  06BE  3000               	movlw	0
  5985  06BF  00C8               	movwf	___aldiv@quotient+3
  5986  06C0  3000               	movlw	0
  5987  06C1  00C7               	movwf	___aldiv@quotient+2
  5988  06C2  3000               	movlw	0
  5989  06C3  00C6               	movwf	___aldiv@quotient+1
  5990  06C4  3000               	movlw	0
  5991  06C5  00C5               	movwf	___aldiv@quotient
  5992  06C6  083E               	movf	___aldiv@divisor+3,w
  5993  06C7  043D               	iorwf	___aldiv@divisor+2,w
  5994  06C8  043C               	iorwf	___aldiv@divisor+1,w
  5995  06C9  043B               	iorwf	___aldiv@divisor,w
  5996  06CA  1903               	skipnz
  5997  06CB  2F07               	goto	i1l2084
  5998  06CC  01C3               	clrf	___aldiv@counter
  5999  06CD  0AC3               	incf	___aldiv@counter,f
  6000  06CE                     i1l2070:	
  6001  06CE  1BBE               	btfsc	___aldiv@divisor+3,7
  6002  06CF  2EDC               	goto	i1l2072
  6003  06D0  3001               	movlw	1
  6004  06D1                     u176_25:	
  6005  06D1  35BB               	lslf	___aldiv@divisor,f
  6006  06D2  0DBC               	rlf	___aldiv@divisor+1,f
  6007  06D3  0DBD               	rlf	___aldiv@divisor+2,f
  6008  06D4  0DBE               	rlf	___aldiv@divisor+3,f
  6009  06D5  0B89               	decfsz	9,f
  6010  06D6  2ED1               	goto	u176_25
  6011  06D7  3001               	movlw	1
  6012  06D8  00FB               	movwf	??___aldiv
  6013  06D9  087B               	movf	??___aldiv,w
  6014  06DA  07C3               	addwf	___aldiv@counter,f
  6015  06DB  2ECE               	goto	i1l2070
  6016  06DC                     i1l2072:	
  6017  06DC  3001               	movlw	1
  6018  06DD                     u178_25:	
  6019  06DD  35C5               	lslf	___aldiv@quotient,f
  6020  06DE  0DC6               	rlf	___aldiv@quotient+1,f
  6021  06DF  0DC7               	rlf	___aldiv@quotient+2,f
  6022  06E0  0DC8               	rlf	___aldiv@quotient+3,f
  6023  06E1  0B89               	decfsz	9,f
  6024  06E2  2EDD               	goto	u178_25
  6025  06E3  083E               	movf	___aldiv@divisor+3,w
  6026  06E4  0242               	subwf	___aldiv@dividend+3,w
  6027  06E5  1D03               	skipz
  6028  06E6  2EF1               	goto	u179_25
  6029  06E7  083D               	movf	___aldiv@divisor+2,w
  6030  06E8  0241               	subwf	___aldiv@dividend+2,w
  6031  06E9  1D03               	skipz
  6032  06EA  2EF1               	goto	u179_25
  6033  06EB  083C               	movf	___aldiv@divisor+1,w
  6034  06EC  0240               	subwf	___aldiv@dividend+1,w
  6035  06ED  1D03               	skipz
  6036  06EE  2EF1               	goto	u179_25
  6037  06EF  083B               	movf	___aldiv@divisor,w
  6038  06F0  023F               	subwf	___aldiv@dividend,w
  6039  06F1                     u179_25:	
  6040  06F1  1C03               	skipc
  6041  06F2  2EFC               	goto	i1l2080
  6042  06F3  083B               	movf	___aldiv@divisor,w
  6043  06F4  02BF               	subwf	___aldiv@dividend,f
  6044  06F5  083C               	movf	___aldiv@divisor+1,w
  6045  06F6  3BC0               	subwfb	___aldiv@dividend+1,f
  6046  06F7  083D               	movf	___aldiv@divisor+2,w
  6047  06F8  3BC1               	subwfb	___aldiv@dividend+2,f
  6048  06F9  083E               	movf	___aldiv@divisor+3,w
  6049  06FA  3BC2               	subwfb	___aldiv@dividend+3,f
  6050  06FB  1445               	bsf	___aldiv@quotient,0
  6051  06FC                     i1l2080:	
  6052  06FC  3001               	movlw	1
  6053  06FD                     u180_25:	
  6054  06FD  36BE               	lsrf	___aldiv@divisor+3,f
  6055  06FE  0CBD               	rrf	___aldiv@divisor+2,f
  6056  06FF  0CBC               	rrf	___aldiv@divisor+1,f
  6057  0700  0CBB               	rrf	___aldiv@divisor,f
  6058  0701  0B89               	decfsz	9,f
  6059  0702  2EFD               	goto	u180_25
  6060  0703  3001               	movlw	1
  6061  0704  02C3               	subwf	___aldiv@counter,f
  6062  0705  1D03               	btfss	3,2
  6063  0706  2EDC               	goto	i1l2072
  6064  0707                     i1l2084:	
  6065  0707  0844               	movf	___aldiv@sign,w
  6066  0708  1903               	btfsc	3,2
  6067  0709  2F15               	goto	i1l2088
  6068  070A  09C5               	comf	___aldiv@quotient,f
  6069  070B  09C6               	comf	___aldiv@quotient+1,f
  6070  070C  09C7               	comf	___aldiv@quotient+2,f
  6071  070D  09C8               	comf	___aldiv@quotient+3,f
  6072  070E  0AC5               	incf	___aldiv@quotient,f
  6073  070F  1903               	skipnz
  6074  0710  0AC6               	incf	___aldiv@quotient+1,f
  6075  0711  1903               	skipnz
  6076  0712  0AC7               	incf	___aldiv@quotient+2,f
  6077  0713  1903               	skipnz
  6078  0714  0AC8               	incf	___aldiv@quotient+3,f
  6079  0715                     i1l2088:	
  6080  0715  0848               	movf	___aldiv@quotient+3,w
  6081  0716  00BE               	movwf	?___aldiv+3
  6082  0717  0847               	movf	___aldiv@quotient+2,w
  6083  0718  00BD               	movwf	?___aldiv+2
  6084  0719  0846               	movf	___aldiv@quotient+1,w
  6085  071A  00BC               	movwf	?___aldiv+1
  6086  071B  0845               	movf	___aldiv@quotient,w
  6087  071C  00BB               	movwf	?___aldiv
  6088  071D  0008               	return
  6089  071E                     __end_of___aldiv:	
  6090                           
  6091                           	psect	text34
  6092  0B46                     __ptext34:	
  6093 ;; *************** function _LCD_SetCursor *****************
  6094 ;; Defined at:
  6095 ;;		line 285 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  col             1    wreg     unsigned char 
  6098 ;;  row             1    7[COMMON] unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  col             1   10[COMMON] unsigned char 
  6101 ;;  row_offsets     2    8[COMMON] unsigned char [2]
  6102 ;; Return value:  Size  Location     Type
  6103 ;;		None               void
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6111 ;;      Params:         1       0       0       0       0       0
  6112 ;;      Locals:         3       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0
  6114 ;;      Totals:         4       0       0       0       0       0
  6115 ;;Total ram usage:        4 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    3
  6118 ;; This function calls:
  6119 ;;		i1_LCD_Command
  6120 ;; This function is called by:
  6121 ;;		_display
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _LCD_SetCursor
  6127  0B46                     _LCD_SetCursor:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6131                           ;LCD_SetCursor@col stored from wreg
  6132  0B46  00FA               	movwf	LCD_SetCursor@col
  6133                           
  6134                           ;My_header_16F.h: 286: uint8_t row_offsets[] = {0x00, 0x40};
  6135  0B47  0021               	movlb	1	; select bank1
  6136  0B48  0851               	movf	(LCD_SetCursor@F2883+1)^(0+128),w
  6137  0B49  01F9               	clrf	LCD_SetCursor@row_offsets+1
  6138  0B4A  07F9               	addwf	LCD_SetCursor@row_offsets+1,f
  6139  0B4B  0850               	movf	LCD_SetCursor@F2883^(0+128),w
  6140  0B4C  01F8               	clrf	LCD_SetCursor@row_offsets
  6141  0B4D  07F8               	addwf	LCD_SetCursor@row_offsets,f
  6142                           
  6143                           ;My_header_16F.h: 288: LCD_Command(0x80 | (col + row_offsets[row]));
  6144  0B4E  0877               	movf	LCD_SetCursor@row,w
  6145  0B4F  3E78               	addlw	LCD_SetCursor@row_offsets& (0+255)
  6146  0B50  0086               	movwf	6
  6147  0B51  0187               	clrf	7
  6148  0B52  0801               	movf	1,w
  6149  0B53  077A               	addwf	LCD_SetCursor@col,w
  6150  0B54  3880               	iorlw	128
  6151  0B55  318C  2432         	fcall	i1_LCD_Command
  6152  0B57  0008               	return
  6153  0B58                     __end_of_LCD_SetCursor:	
  6154                           
  6155                           	psect	text35
  6156  0C32                     __ptext35:	
  6157 ;; *************** function i1_LCD_Command *****************
  6158 ;; Defined at:
  6159 ;;		line 267 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  c               1    wreg     unsigned char 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  c               1    5[COMMON] unsigned char 
  6164 ;;  LCD_Command     1    6[COMMON] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;		None               void
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, pclath, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6174 ;;      Params:         0       0       0       0       0       0
  6175 ;;      Locals:         2       0       0       0       0       0
  6176 ;;      Temps:          1       0       0       0       0       0
  6177 ;;      Totals:         3       0       0       0       0       0
  6178 ;;Total ram usage:        3 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    2
  6181 ;; This function calls:
  6182 ;;		i1_I2C_Send
  6183 ;;		i1_I2C_Start
  6184 ;;		i1_I2C_Stop
  6185 ;; This function is called by:
  6186 ;;		_LCD_SetCursor
  6187 ;;		i1_LCD_Clear
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function i1_LCD_Command
  6193  0C32                     i1_LCD_Command:	
  6194                           
  6195                           ;incstack = 0
  6196                           ; Regs used in i1_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  6197                           ;i1LCD_Command@c stored from wreg
  6198  0C32  00F5               	movwf	i1LCD_Command@c
  6199                           
  6200                           ;My_header_16F.h: 268: uint8_t ans;
  6201                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  6202  0C33  01F2               	clrf	i1I2C_Start@rw
  6203  0C34  303E               	movlw	62
  6204  0C35  318B  23AC  318C   	fcall	i1_I2C_Start
  6205  0C38  00F4               	movwf	??i1_LCD_Command
  6206  0C39  0874               	movf	??i1_LCD_Command,w
  6207  0C3A  00F6               	movwf	i1LCD_Command@ans
  6208                           
  6209                           ;My_header_16F.h: 271: if (ans == 0) {
  6210  0C3B  08F6               	movf	i1LCD_Command@ans,f
  6211  0C3C  1D03               	skipz
  6212  0C3D  2C46               	goto	i1l210
  6213                           
  6214                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  6215  0C3E  3080               	movlw	128
  6216  0C3F  318B  2336  318C   	fcall	i1_I2C_Send
  6217                           
  6218                           ;My_header_16F.h: 274: I2C_Send(c);
  6219  0C42  0875               	movf	i1LCD_Command@c,w
  6220  0C43  318B  2336  318C   	fcall	i1_I2C_Send
  6221  0C46                     i1l210:	
  6222                           
  6223                           ;My_header_16F.h: 275: }
  6224                           ;My_header_16F.h: 276: I2C_Stop();
  6225  0C46  318A  22E2  318C   	fcall	i1_I2C_Stop
  6226                           
  6227                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6228  0C49  3045               	movlw	69
  6229  0C4A  00F4               	movwf	??i1_LCD_Command
  6230  0C4B                     u398_27:	
  6231  0C4B  0BF4               	decfsz	??i1_LCD_Command,f
  6232  0C4C  2C4B               	goto	u398_27
  6233  0C4D  0008               	return
  6234  0C4E                     __end_ofi1_LCD_Command:	
  6235                           
  6236                           	psect	text36
  6237  0E76                     __ptext36:	
  6238 ;; *************** function _LCD_Puts *****************
  6239 ;; Defined at:
  6240 ;;		line 304 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  s               2    4[COMMON] PTR const unsigned char 
  6243 ;;		 -> STR_13(8), STR_12(5), STR_11(7), STR_10(6), 
  6244 ;;		 -> STR_9(4), STR_8(5), STR_7(7), STR_6(6), 
  6245 ;;		 -> STR_5(5), STR_4(7), STR_3(6), STR_2(8), 
  6246 ;;		 -> STR_1(7), 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  ans             2    8[COMMON] int 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6258 ;;      Params:         2       0       0       0       0       0
  6259 ;;      Locals:         2       0       0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0
  6261 ;;      Totals:         6       0       0       0       0       0
  6262 ;;Total ram usage:        6 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    2
  6265 ;; This function calls:
  6266 ;;		i1_I2C_Send
  6267 ;;		i1_I2C_Start
  6268 ;;		i1_I2C_Stop
  6269 ;; This function is called by:
  6270 ;;		_display
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _LCD_Puts
  6276  0E76                     _LCD_Puts:	
  6277                           
  6278                           ;My_header_16F.h: 305: int ans;
  6279                           ;My_header_16F.h: 307: ans = I2C_Start(0x3E, 0);
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6283  0E76  01F2               	clrf	i1I2C_Start@rw
  6284  0E77  303E               	movlw	62
  6285  0E78  318B  23AC  318E   	fcall	i1_I2C_Start
  6286  0E7B  00F6               	movwf	??_LCD_Puts
  6287  0E7C  01F7               	clrf	??_LCD_Puts+1
  6288  0E7D  0876               	movf	??_LCD_Puts,w
  6289  0E7E  00F8               	movwf	LCD_Puts@ans
  6290  0E7F  0877               	movf	??_LCD_Puts+1,w
  6291  0E80  00F9               	movwf	LCD_Puts@ans+1
  6292                           
  6293                           ;My_header_16F.h: 308: if (ans == 0) {
  6294  0E81  0879               	movf	LCD_Puts@ans+1,w
  6295  0E82  0478               	iorwf	LCD_Puts@ans,w
  6296  0E83  1D03               	skipz
  6297  0E84  2EA2               	goto	i1l2028
  6298                           
  6299                           ;My_header_16F.h: 309: I2C_Send(0b01000000);
  6300  0E85  3040               	movlw	64
  6301  0E86  318B  2336  318E   	fcall	i1_I2C_Send
  6302  0E89                     i1l2026:	
  6303                           ;My_header_16F.h: 310: while (*s) {
  6304                           
  6305  0E89  0874               	movf	LCD_Puts@s,w
  6306  0E8A  0084               	movwf	4
  6307  0E8B  0875               	movf	LCD_Puts@s+1,w
  6308  0E8C  0085               	movwf	5
  6309  0E8D  0800               	movf	0,w	;code access
  6310  0E8E  3800               	iorlw	0
  6311  0E8F  1903               	btfsc	3,2
  6312  0E90  2EA2               	goto	i1l2028
  6313                           
  6314                           ;My_header_16F.h: 311: I2C_Send(*s++);
  6315  0E91  0874               	movf	LCD_Puts@s,w
  6316  0E92  0084               	movwf	4
  6317  0E93  0875               	movf	LCD_Puts@s+1,w
  6318  0E94  0085               	movwf	5
  6319  0E95  0800               	movf	0,w	;code access
  6320  0E96  318B  2336  318E   	fcall	i1_I2C_Send
  6321  0E99  3001               	movlw	1
  6322  0E9A  07F4               	addwf	LCD_Puts@s,f
  6323  0E9B  3000               	movlw	0
  6324  0E9C  3DF5               	addwfc	LCD_Puts@s+1,f
  6325                           
  6326                           ;My_header_16F.h: 312: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6327  0E9D  3045               	movlw	69
  6328  0E9E  00F6               	movwf	??_LCD_Puts
  6329  0E9F                     u399_27:	
  6330  0E9F  0BF6               	decfsz	??_LCD_Puts,f
  6331  0EA0  2E9F               	goto	u399_27
  6332  0EA1  2E89               	goto	i1l2026
  6333  0EA2                     i1l2028:	
  6334                           
  6335                           ;My_header_16F.h: 313: }
  6336                           ;My_header_16F.h: 314: }
  6337                           ;My_header_16F.h: 315: I2C_Stop();
  6338  0EA2  318A  22E2         	fcall	i1_I2C_Stop
  6339  0EA4  0008               	return
  6340  0EA5                     __end_of_LCD_Puts:	
  6341                           
  6342                           	psect	text37
  6343  0C16                     __ptext37:	
  6344 ;; *************** function _LCD_Putc *****************
  6345 ;; Defined at:
  6346 ;;		line 291 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  c               1    wreg     unsigned char 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  c               1    5[COMMON] unsigned char 
  6351 ;;  ans             1    6[COMMON] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;		None               void
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, pclath, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6361 ;;      Params:         0       0       0       0       0       0
  6362 ;;      Locals:         2       0       0       0       0       0
  6363 ;;      Temps:          1       0       0       0       0       0
  6364 ;;      Totals:         3       0       0       0       0       0
  6365 ;;Total ram usage:        3 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    2
  6368 ;; This function calls:
  6369 ;;		i1_I2C_Send
  6370 ;;		i1_I2C_Start
  6371 ;;		i1_I2C_Stop
  6372 ;; This function is called by:
  6373 ;;		_display
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function _LCD_Putc
  6379  0C16                     _LCD_Putc:	
  6380                           
  6381                           ;incstack = 0
  6382                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  6383                           ;LCD_Putc@c stored from wreg
  6384  0C16  00F5               	movwf	LCD_Putc@c
  6385                           
  6386                           ;My_header_16F.h: 292: uint8_t ans;
  6387                           ;My_header_16F.h: 294: ans = I2C_Start(0x3E, 0);
  6388  0C17  01F2               	clrf	i1I2C_Start@rw
  6389  0C18  303E               	movlw	62
  6390  0C19  318B  23AC  318C   	fcall	i1_I2C_Start
  6391  0C1C  00F4               	movwf	??_LCD_Putc
  6392  0C1D  0874               	movf	??_LCD_Putc,w
  6393  0C1E  00F6               	movwf	LCD_Putc@ans
  6394                           
  6395                           ;My_header_16F.h: 295: if (ans == 0) {
  6396  0C1F  08F6               	movf	LCD_Putc@ans,f
  6397  0C20  1D03               	skipz
  6398  0C21  2C2A               	goto	i1l222
  6399                           
  6400                           ;My_header_16F.h: 297: I2C_Send(0b11000000);
  6401  0C22  30C0               	movlw	192
  6402  0C23  318B  2336  318C   	fcall	i1_I2C_Send
  6403                           
  6404                           ;My_header_16F.h: 298: I2C_Send(c);
  6405  0C26  0875               	movf	LCD_Putc@c,w
  6406  0C27  318B  2336  318C   	fcall	i1_I2C_Send
  6407  0C2A                     i1l222:	
  6408                           
  6409                           ;My_header_16F.h: 299: }
  6410                           ;My_header_16F.h: 300: I2C_Stop();
  6411  0C2A  318A  22E2  318C   	fcall	i1_I2C_Stop
  6412                           
  6413                           ;My_header_16F.h: 301: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6414  0C2D  3045               	movlw	69
  6415  0C2E  00F4               	movwf	??_LCD_Putc
  6416  0C2F                     u400_27:	
  6417  0C2F  0BF4               	decfsz	??_LCD_Putc,f
  6418  0C30  2C2F               	goto	u400_27
  6419  0C31  0008               	return
  6420  0C32                     __end_of_LCD_Putc:	
  6421                           
  6422                           	psect	text38
  6423  05E3                     __ptext38:	
  6424 ;; *************** function _button_timer_interrupt *****************
  6425 ;; Defined at:
  6426 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  bt              1    wreg     PTR struct button
  6429 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6430 ;;  sw_value        1    0[COMMON] unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  bt              1    3[COMMON] PTR struct button
  6433 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;		None               void
  6436 ;; Registers used:
  6437 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6443 ;;      Params:         1       0       0       0       0       0
  6444 ;;      Locals:         1       0       0       0       0       0
  6445 ;;      Temps:          2       0       0       0       0       0
  6446 ;;      Totals:         4       0       0       0       0       0
  6447 ;;Total ram usage:        4 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_isr
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function _button_timer_interrupt
  6458  05E3                     _button_timer_interrupt:	
  6459                           
  6460                           ;incstack = 0
  6461                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6462                           ;button_timer_interrupt@bt stored from wreg
  6463  05E3  00F3               	movwf	button_timer_interrupt@bt
  6464                           
  6465                           ;My_header_16F.h: 88: if (sw_value) {
  6466  05E4  0870               	movf	button_timer_interrupt@sw_value,w
  6467  05E5  1903               	btfsc	3,2
  6468  05E6  2E3E               	goto	i1l2254
  6469                           
  6470                           ;My_header_16F.h: 89: if (bt->cnt_sw < 150 + 1) bt->cnt_sw++;
  6471  05E7  0873               	movf	button_timer_interrupt@bt,w
  6472  05E8  0086               	movwf	6
  6473  05E9  0187               	clrf	7
  6474  05EA  3F40               	moviw [0]fsr1
  6475  05EB  00F1               	movwf	??_button_timer_interrupt
  6476  05EC  3F41               	moviw [1]fsr1
  6477  05ED  00F2               	movwf	??_button_timer_interrupt+1
  6478  05EE  3000               	movlw	0
  6479  05EF  0272               	subwf	??_button_timer_interrupt+1,w
  6480  05F0  3097               	movlw	151
  6481  05F1  1903               	skipnz
  6482  05F2  0271               	subwf	??_button_timer_interrupt,w
  6483  05F3  1803               	skipnc
  6484  05F4  2DFD               	goto	i1l2244
  6485  05F5  0873               	movf	button_timer_interrupt@bt,w
  6486  05F6  0086               	movwf	6
  6487  05F7  0187               	clrf	7
  6488  05F8  3001               	movlw	1
  6489  05F9  0781               	addwf	1,f
  6490  05FA  3141               	addfsr 1,1
  6491  05FB  1803               	skipnc
  6492  05FC  0A81               	incf	1,f
  6493  05FD                     i1l2244:	
  6494                           
  6495                           ;My_header_16F.h: 90: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  6496  05FD  0873               	movf	button_timer_interrupt@bt,w
  6497  05FE  0086               	movwf	6
  6498  05FF  0187               	clrf	7
  6499  0600  3F40               	moviw [0]fsr1
  6500  0601  3A96               	xorlw	150
  6501  0602  1D03               	skipz
  6502  0603  2E06               	goto	u224_25
  6503  0604  3F41               	moviw [1]fsr1
  6504  0605  3A00               	xorlw	0
  6505  0606                     u224_25:	
  6506  0606  1D03               	skipz
  6507  0607  2E0D               	goto	i1l119
  6508  0608  0873               	movf	button_timer_interrupt@bt,w
  6509  0609  3E02               	addlw	2
  6510  060A  0086               	movwf	6
  6511  060B  0187               	clrf	7
  6512  060C  1781               	bsf	1,7
  6513  060D                     i1l119:	
  6514                           
  6515                           ;My_header_16F.h: 91: if (bt->cnt_sw == 75)bt->flag.long_holding_2 = 1;
  6516  060D  0873               	movf	button_timer_interrupt@bt,w
  6517  060E  0086               	movwf	6
  6518  060F  0187               	clrf	7
  6519  0610  3F40               	moviw [0]fsr1
  6520  0611  3A4B               	xorlw	75
  6521  0612  1D03               	skipz
  6522  0613  2E16               	goto	u225_25
  6523  0614  3F41               	moviw [1]fsr1
  6524  0615  3A00               	xorlw	0
  6525  0616                     u225_25:	
  6526  0616  1D03               	skipz
  6527  0617  2E1D               	goto	i1l120
  6528  0618  0873               	movf	button_timer_interrupt@bt,w
  6529  0619  3E02               	addlw	2
  6530  061A  0086               	movwf	6
  6531  061B  0187               	clrf	7
  6532  061C  1701               	bsf	1,6
  6533  061D                     i1l120:	
  6534                           
  6535                           ;My_header_16F.h: 92: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  6536  061D  0873               	movf	button_timer_interrupt@bt,w
  6537  061E  0086               	movwf	6
  6538  061F  0187               	clrf	7
  6539  0620  3F40               	moviw [0]fsr1
  6540  0621  3A1E               	xorlw	30
  6541  0622  1D03               	skipz
  6542  0623  2E26               	goto	u226_25
  6543  0624  3F41               	moviw [1]fsr1
  6544  0625  3A00               	xorlw	0
  6545  0626                     u226_25:	
  6546  0626  1D03               	skipz
  6547  0627  2E2D               	goto	i1l121
  6548  0628  0873               	movf	button_timer_interrupt@bt,w
  6549  0629  3E02               	addlw	2
  6550  062A  0086               	movwf	6
  6551  062B  0187               	clrf	7
  6552  062C  1681               	bsf	1,5
  6553  062D                     i1l121:	
  6554                           
  6555                           ;My_header_16F.h: 93: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  6556  062D  0873               	movf	button_timer_interrupt@bt,w
  6557  062E  0086               	movwf	6
  6558  062F  0187               	clrf	7
  6559  0630  3F40               	moviw [0]fsr1
  6560  0631  3A02               	xorlw	2
  6561  0632  1D03               	skipz
  6562  0633  2E36               	goto	u227_25
  6563  0634  3F41               	moviw [1]fsr1
  6564  0635  3A00               	xorlw	0
  6565  0636                     u227_25:	
  6566  0636  1D03               	skipz
  6567  0637  0008               	return
  6568  0638  0873               	movf	button_timer_interrupt@bt,w
  6569  0639  3E02               	addlw	2
  6570  063A  0086               	movwf	6
  6571  063B  0187               	clrf	7
  6572  063C  1601               	bsf	1,4
  6573                           
  6574                           ;My_header_16F.h: 94: } else {
  6575  063D  0008               	return
  6576  063E                     i1l2254:	
  6577                           
  6578                           ;My_header_16F.h: 95: if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  6579  063E  0873               	movf	button_timer_interrupt@bt,w
  6580  063F  0086               	movwf	6
  6581  0640  0187               	clrf	7
  6582  0641  3F40               	moviw [0]fsr1
  6583  0642  00F1               	movwf	??_button_timer_interrupt
  6584  0643  3F41               	moviw [1]fsr1
  6585  0644  00F2               	movwf	??_button_timer_interrupt+1
  6586  0645  3000               	movlw	0
  6587  0646  0272               	subwf	??_button_timer_interrupt+1,w
  6588  0647  3096               	movlw	150
  6589  0648  1903               	skipnz
  6590  0649  0271               	subwf	??_button_timer_interrupt,w
  6591  064A  1C03               	skipc
  6592  064B  2E52               	goto	i1l2258
  6593  064C  0873               	movf	button_timer_interrupt@bt,w
  6594  064D  3E02               	addlw	2
  6595  064E  0086               	movwf	6
  6596  064F  0187               	clrf	7
  6597  0650  1581               	bsf	1,3
  6598  0651  2E8D               	goto	i1l125
  6599  0652                     i1l2258:	
  6600                           
  6601                           ;My_header_16F.h: 96: else if (bt->cnt_sw >= 75)bt->flag.long_hold_2 = 1;
  6602  0652  0873               	movf	button_timer_interrupt@bt,w
  6603  0653  0086               	movwf	6
  6604  0654  0187               	clrf	7
  6605  0655  3F40               	moviw [0]fsr1
  6606  0656  00F1               	movwf	??_button_timer_interrupt
  6607  0657  3F41               	moviw [1]fsr1
  6608  0658  00F2               	movwf	??_button_timer_interrupt+1
  6609  0659  3000               	movlw	0
  6610  065A  0272               	subwf	??_button_timer_interrupt+1,w
  6611  065B  304B               	movlw	75
  6612  065C  1903               	skipnz
  6613  065D  0271               	subwf	??_button_timer_interrupt,w
  6614  065E  1C03               	skipc
  6615  065F  2E66               	goto	i1l2262
  6616  0660  0873               	movf	button_timer_interrupt@bt,w
  6617  0661  3E02               	addlw	2
  6618  0662  0086               	movwf	6
  6619  0663  0187               	clrf	7
  6620  0664  1501               	bsf	1,2
  6621  0665  2E8D               	goto	i1l125
  6622  0666                     i1l2262:	
  6623                           
  6624                           ;My_header_16F.h: 97: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  6625  0666  0873               	movf	button_timer_interrupt@bt,w
  6626  0667  0086               	movwf	6
  6627  0668  0187               	clrf	7
  6628  0669  3F40               	moviw [0]fsr1
  6629  066A  00F1               	movwf	??_button_timer_interrupt
  6630  066B  3F41               	moviw [1]fsr1
  6631  066C  00F2               	movwf	??_button_timer_interrupt+1
  6632  066D  3000               	movlw	0
  6633  066E  0272               	subwf	??_button_timer_interrupt+1,w
  6634  066F  301E               	movlw	30
  6635  0670  1903               	skipnz
  6636  0671  0271               	subwf	??_button_timer_interrupt,w
  6637  0672  1C03               	skipc
  6638  0673  2E7A               	goto	i1l2266
  6639  0674  0873               	movf	button_timer_interrupt@bt,w
  6640  0675  3E02               	addlw	2
  6641  0676  0086               	movwf	6
  6642  0677  0187               	clrf	7
  6643  0678  1481               	bsf	1,1
  6644  0679  2E8D               	goto	i1l125
  6645  067A                     i1l2266:	
  6646                           
  6647                           ;My_header_16F.h: 98: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  6648  067A  0873               	movf	button_timer_interrupt@bt,w
  6649  067B  0086               	movwf	6
  6650  067C  0187               	clrf	7
  6651  067D  3F40               	moviw [0]fsr1
  6652  067E  00F1               	movwf	??_button_timer_interrupt
  6653  067F  3F41               	moviw [1]fsr1
  6654  0680  00F2               	movwf	??_button_timer_interrupt+1
  6655  0681  3000               	movlw	0
  6656  0682  0272               	subwf	??_button_timer_interrupt+1,w
  6657  0683  3002               	movlw	2
  6658  0684  1903               	skipnz
  6659  0685  0271               	subwf	??_button_timer_interrupt,w
  6660  0686  1C03               	skipc
  6661  0687  2E8D               	goto	i1l125
  6662  0688  0873               	movf	button_timer_interrupt@bt,w
  6663  0689  3E02               	addlw	2
  6664  068A  0086               	movwf	6
  6665  068B  0187               	clrf	7
  6666  068C  1401               	bsf	1,0
  6667  068D                     i1l125:	
  6668                           
  6669                           ;My_header_16F.h: 99: bt->cnt_sw = 0;
  6670  068D  0873               	movf	button_timer_interrupt@bt,w
  6671  068E  0086               	movwf	6
  6672  068F  0187               	clrf	7
  6673  0690  3000               	movlw	0
  6674  0691  3FC0               	movwi [0]fsr1
  6675  0692  3FC1               	movwi [1]fsr1
  6676                           
  6677                           ;My_header_16F.h: 100: bt->flags &= 0x0F;
  6678  0693  300F               	movlw	15
  6679  0694  00F1               	movwf	??_button_timer_interrupt
  6680  0695  0873               	movf	button_timer_interrupt@bt,w
  6681  0696  3E02               	addlw	2
  6682  0697  0086               	movwf	6
  6683  0698  0187               	clrf	7
  6684  0699  0871               	movf	??_button_timer_interrupt,w
  6685  069A  0581               	andwf	1,f
  6686  069B  0008               	return
  6687  069C                     __end_of_button_timer_interrupt:	
  6688                           
  6689                           	psect	text39
  6690  0BE0                     __ptext39:	
  6691 ;; *************** function _adc *****************
  6692 ;; Defined at:
  6693 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  ch              1    wreg     unsigned char 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  ch              1    3[COMMON] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  2    0[COMMON] unsigned int 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6707 ;;      Params:         2       0       0       0       0       0
  6708 ;;      Locals:         1       0       0       0       0       0
  6709 ;;      Temps:          1       0       0       0       0       0
  6710 ;;      Totals:         4       0       0       0       0       0
  6711 ;;Total ram usage:        4 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_isr
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           
  6721                           ;psect for function _adc
  6722  0BE0                     _adc:	
  6723                           
  6724                           ;incstack = 0
  6725                           ; Regs used in _adc: [wreg+status,2+status,0]
  6726                           ;adc@ch stored from wreg
  6727  0BE0  00F3               	movwf	adc@ch
  6728                           
  6729                           ;My_header_16F.h: 52: ADCON0bits.ADON = 1;
  6730  0BE1  0021               	movlb	1	; select bank1
  6731  0BE2  141D               	bsf	29,0	;volatile
  6732                           
  6733                           ;My_header_16F.h: 53: ADCON0bits.CHS = ch;
  6734  0BE3  0873               	movf	adc@ch,w
  6735  0BE4  00F2               	movwf	??_adc
  6736  0BE5  0DF2               	rlf	??_adc,f
  6737  0BE6  0DF2               	rlf	??_adc,f
  6738  0BE7  081D               	movf	29,w	;volatile
  6739  0BE8  0672               	xorwf	??_adc,w
  6740  0BE9  3983               	andlw	-125
  6741  0BEA  0672               	xorwf	??_adc,w
  6742  0BEB  009D               	movwf	29	;volatile
  6743                           
  6744                           ;My_header_16F.h: 54: _delay((unsigned long)((20)*(32000000/4000000.0)));
  6745  0BEC  3035               	movlw	53
  6746  0BED  00F2               	movwf	??_adc
  6747  0BEE                     u401_27:	
  6748  0BEE  0BF2               	decfsz	??_adc,f
  6749  0BEF  2BEE               	goto	u401_27
  6750                           
  6751                           ;My_header_16F.h: 55: ADCON0bits.GO_nDONE = 1;
  6752  0BF0  0021               	movlb	1	; select bank1
  6753  0BF1  149D               	bsf	29,1	;volatile
  6754  0BF2                     i1l111:	
  6755                           ;My_header_16F.h: 56: while (ADCON0bits.GO_nDONE);
  6756                           
  6757  0BF2  189D               	btfsc	29,1	;volatile
  6758  0BF3  2BF2               	goto	i1l111
  6759                           
  6760                           ;My_header_16F.h: 57: return ADRES;
  6761  0BF4  081C               	movf	28,w	;volatile
  6762  0BF5  01F1               	clrf	?_adc+1
  6763  0BF6  07F1               	addwf	?_adc+1,f
  6764  0BF7  081B               	movf	27,w	;volatile
  6765  0BF8  01F0               	clrf	?_adc
  6766  0BF9  07F0               	addwf	?_adc,f
  6767  0BFA  0008               	return
  6768  0BFB                     __end_of_adc:	
  6769                           
  6770                           	psect	text40
  6771  0C6A                     __ptext40:	
  6772 ;; *************** function ___wmul *****************
  6773 ;; Defined at:
  6774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  multiplier      2    4[COMMON] unsigned int 
  6777 ;;  multiplicand    2    6[COMMON] unsigned int 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  product         2    8[COMMON] unsigned int 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  2    4[COMMON] unsigned int 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6789 ;;      Params:         4       0       0       0       0       0
  6790 ;;      Locals:         2       0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0
  6792 ;;      Totals:         6       0       0       0       0       0
  6793 ;;Total ram usage:        6 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_isr
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function ___wmul
  6804  0C6A                     ___wmul:	
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6808  0C6A  01F8               	clrf	___wmul@product
  6809  0C6B  01F9               	clrf	___wmul@product+1
  6810  0C6C                     i1l2498:	
  6811  0C6C  1C74               	btfss	___wmul@multiplier,0
  6812  0C6D  2C72               	goto	i1l493
  6813  0C6E  0876               	movf	___wmul@multiplicand,w
  6814  0C6F  07F8               	addwf	___wmul@product,f
  6815  0C70  0877               	movf	___wmul@multiplicand+1,w
  6816  0C71  3DF9               	addwfc	___wmul@product+1,f
  6817  0C72                     i1l493:	
  6818  0C72  3001               	movlw	1
  6819  0C73                     u253_25:	
  6820  0C73  35F6               	lslf	___wmul@multiplicand,f
  6821  0C74  0DF7               	rlf	___wmul@multiplicand+1,f
  6822  0C75  0B89               	decfsz	9,f
  6823  0C76  2C73               	goto	u253_25
  6824  0C77  3001               	movlw	1
  6825  0C78                     u254_25:	
  6826  0C78  36F5               	lsrf	___wmul@multiplier+1,f
  6827  0C79  0CF4               	rrf	___wmul@multiplier,f
  6828  0C7A  0B89               	decfsz	9,f
  6829  0C7B  2C78               	goto	u254_25
  6830  0C7C  0875               	movf	___wmul@multiplier+1,w
  6831  0C7D  0474               	iorwf	___wmul@multiplier,w
  6832  0C7E  1D03               	skipz
  6833  0C7F  2C6C               	goto	i1l2498
  6834  0C80  0879               	movf	___wmul@product+1,w
  6835  0C81  01F5               	clrf	?___wmul+1
  6836  0C82  07F5               	addwf	?___wmul+1,f
  6837  0C83  0878               	movf	___wmul@product,w
  6838  0C84  01F4               	clrf	?___wmul
  6839  0C85  07F4               	addwf	?___wmul,f
  6840  0C86  0008               	return
  6841  0C87                     __end_of___wmul:	
  6842                           
  6843                           	psect	text41
  6844  0F5B                     __ptext41:	
  6845 ;; *************** function ___lldiv *****************
  6846 ;; Defined at:
  6847 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  divisor         4    0[COMMON] unsigned long 
  6850 ;;  dividend        4    4[COMMON] unsigned long 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  quotient        4    9[COMMON] unsigned long 
  6853 ;;  counter         1   13[COMMON] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4    0[COMMON] unsigned long 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6863 ;;      Params:         8       0       0       0       0       0
  6864 ;;      Locals:         5       0       0       0       0       0
  6865 ;;      Temps:          1       0       0       0       0       0
  6866 ;;      Totals:        14       0       0       0       0       0
  6867 ;;Total ram usage:       14 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_isr
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           
  6877                           ;psect for function ___lldiv
  6878  0F5B                     ___lldiv:	
  6879                           
  6880                           ;incstack = 0
  6881                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6882  0F5B  3000               	movlw	0
  6883  0F5C  00FC               	movwf	___lldiv@quotient+3
  6884  0F5D  3000               	movlw	0
  6885  0F5E  00FB               	movwf	___lldiv@quotient+2
  6886  0F5F  3000               	movlw	0
  6887  0F60  00FA               	movwf	___lldiv@quotient+1
  6888  0F61  3000               	movlw	0
  6889  0F62  00F9               	movwf	___lldiv@quotient
  6890  0F63  0873               	movf	___lldiv@divisor+3,w
  6891  0F64  0472               	iorwf	___lldiv@divisor+2,w
  6892  0F65  0471               	iorwf	___lldiv@divisor+1,w
  6893  0F66  0470               	iorwf	___lldiv@divisor,w
  6894  0F67  1903               	skipnz
  6895  0F68  2FA4               	goto	i1l2528
  6896  0F69  01FD               	clrf	___lldiv@counter
  6897  0F6A  0AFD               	incf	___lldiv@counter,f
  6898  0F6B                     i1l2514:	
  6899  0F6B  1BF3               	btfsc	___lldiv@divisor+3,7
  6900  0F6C  2F79               	goto	i1l2516
  6901  0F6D  3001               	movlw	1
  6902  0F6E                     u257_25:	
  6903  0F6E  35F0               	lslf	___lldiv@divisor,f
  6904  0F6F  0DF1               	rlf	___lldiv@divisor+1,f
  6905  0F70  0DF2               	rlf	___lldiv@divisor+2,f
  6906  0F71  0DF3               	rlf	___lldiv@divisor+3,f
  6907  0F72  0B89               	decfsz	9,f
  6908  0F73  2F6E               	goto	u257_25
  6909  0F74  3001               	movlw	1
  6910  0F75  00F8               	movwf	??___lldiv
  6911  0F76  0878               	movf	??___lldiv,w
  6912  0F77  07FD               	addwf	___lldiv@counter,f
  6913  0F78  2F6B               	goto	i1l2514
  6914  0F79                     i1l2516:	
  6915  0F79  3001               	movlw	1
  6916  0F7A                     u259_25:	
  6917  0F7A  35F9               	lslf	___lldiv@quotient,f
  6918  0F7B  0DFA               	rlf	___lldiv@quotient+1,f
  6919  0F7C  0DFB               	rlf	___lldiv@quotient+2,f
  6920  0F7D  0DFC               	rlf	___lldiv@quotient+3,f
  6921  0F7E  0B89               	decfsz	9,f
  6922  0F7F  2F7A               	goto	u259_25
  6923  0F80  0873               	movf	___lldiv@divisor+3,w
  6924  0F81  0277               	subwf	___lldiv@dividend+3,w
  6925  0F82  1D03               	skipz
  6926  0F83  2F8E               	goto	u260_25
  6927  0F84  0872               	movf	___lldiv@divisor+2,w
  6928  0F85  0276               	subwf	___lldiv@dividend+2,w
  6929  0F86  1D03               	skipz
  6930  0F87  2F8E               	goto	u260_25
  6931  0F88  0871               	movf	___lldiv@divisor+1,w
  6932  0F89  0275               	subwf	___lldiv@dividend+1,w
  6933  0F8A  1D03               	skipz
  6934  0F8B  2F8E               	goto	u260_25
  6935  0F8C  0870               	movf	___lldiv@divisor,w
  6936  0F8D  0274               	subwf	___lldiv@dividend,w
  6937  0F8E                     u260_25:	
  6938  0F8E  1C03               	skipc
  6939  0F8F  2F99               	goto	i1l2524
  6940  0F90  0870               	movf	___lldiv@divisor,w
  6941  0F91  02F4               	subwf	___lldiv@dividend,f
  6942  0F92  0871               	movf	___lldiv@divisor+1,w
  6943  0F93  3BF5               	subwfb	___lldiv@dividend+1,f
  6944  0F94  0872               	movf	___lldiv@divisor+2,w
  6945  0F95  3BF6               	subwfb	___lldiv@dividend+2,f
  6946  0F96  0873               	movf	___lldiv@divisor+3,w
  6947  0F97  3BF7               	subwfb	___lldiv@dividend+3,f
  6948  0F98  1479               	bsf	___lldiv@quotient,0
  6949  0F99                     i1l2524:	
  6950  0F99  3001               	movlw	1
  6951  0F9A                     u261_25:	
  6952  0F9A  36F3               	lsrf	___lldiv@divisor+3,f
  6953  0F9B  0CF2               	rrf	___lldiv@divisor+2,f
  6954  0F9C  0CF1               	rrf	___lldiv@divisor+1,f
  6955  0F9D  0CF0               	rrf	___lldiv@divisor,f
  6956  0F9E  0B89               	decfsz	9,f
  6957  0F9F  2F9A               	goto	u261_25
  6958  0FA0  3001               	movlw	1
  6959  0FA1  02FD               	subwf	___lldiv@counter,f
  6960  0FA2  1D03               	btfss	3,2
  6961  0FA3  2F79               	goto	i1l2516
  6962  0FA4                     i1l2528:	
  6963  0FA4  087C               	movf	___lldiv@quotient+3,w
  6964  0FA5  00F3               	movwf	?___lldiv+3
  6965  0FA6  087B               	movf	___lldiv@quotient+2,w
  6966  0FA7  00F2               	movwf	?___lldiv+2
  6967  0FA8  087A               	movf	___lldiv@quotient+1,w
  6968  0FA9  00F1               	movwf	?___lldiv+1
  6969  0FAA  0879               	movf	___lldiv@quotient,w
  6970  0FAB  00F0               	movwf	?___lldiv
  6971  0FAC  0008               	return
  6972  0FAD                     __end_of___lldiv:	
  6973                           
  6974                           	psect	text42
  6975  0C87                     __ptext42:	
  6976 ;; *************** function _EEP_Write *****************
  6977 ;; Defined at:
  6978 ;;		line 422 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  Reg_h           1    wreg     unsigned char 
  6981 ;;  Reg_l           1    4[COMMON] unsigned char 
  6982 ;;  data            1    5[COMMON] unsigned char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  Reg_h           1    7[COMMON] unsigned char 
  6985 ;;  ans             1    8[COMMON] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, pclath, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6995 ;;      Params:         2       0       0       0       0       0
  6996 ;;      Locals:         2       0       0       0       0       0
  6997 ;;      Temps:          1       0       0       0       0       0
  6998 ;;      Totals:         5       0       0       0       0       0
  6999 ;;Total ram usage:        5 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    2
  7002 ;; This function calls:
  7003 ;;		i1_I2C_Send
  7004 ;;		i1_I2C_Start
  7005 ;;		i1_I2C_Stop
  7006 ;; This function is called by:
  7007 ;;		_isr
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function _EEP_Write
  7013  0C87                     _EEP_Write:	
  7014                           
  7015                           ;incstack = 0
  7016                           ; Regs used in _EEP_Write: [wreg+status,2+status,0+pclath+cstack]
  7017                           ;EEP_Write@Reg_h stored from wreg
  7018  0C87  00F7               	movwf	EEP_Write@Reg_h
  7019                           
  7020                           ;My_header_16F.h: 423: uint8_t ans;
  7021                           ;My_header_16F.h: 424: ans = I2C_Start(0x50, 0);
  7022  0C88  01F2               	clrf	i1I2C_Start@rw
  7023  0C89  3050               	movlw	80
  7024  0C8A  318B  23AC  318C   	fcall	i1_I2C_Start
  7025  0C8D  00F6               	movwf	??_EEP_Write
  7026  0C8E  0876               	movf	??_EEP_Write,w
  7027  0C8F  00F8               	movwf	EEP_Write@ans
  7028                           
  7029                           ;My_header_16F.h: 425: if (ans == 0) {
  7030  0C90  08F8               	movf	EEP_Write@ans,f
  7031  0C91  1D03               	skipz
  7032  0C92  2C9F               	goto	i1l260
  7033                           
  7034                           ;My_header_16F.h: 427: I2C_Send(Reg_h);
  7035  0C93  0877               	movf	EEP_Write@Reg_h,w
  7036  0C94  318B  2336  318C   	fcall	i1_I2C_Send
  7037                           
  7038                           ;My_header_16F.h: 428: I2C_Send(Reg_l);
  7039  0C97  0874               	movf	EEP_Write@Reg_l,w
  7040  0C98  318B  2336  318C   	fcall	i1_I2C_Send
  7041                           
  7042                           ;My_header_16F.h: 429: I2C_Send(data);
  7043  0C9B  0875               	movf	EEP_Write@data,w
  7044  0C9C  318B  2336  318C   	fcall	i1_I2C_Send
  7045  0C9F                     i1l260:	
  7046                           
  7047                           ;My_header_16F.h: 430: }
  7048                           ;My_header_16F.h: 431: I2C_Stop();
  7049  0C9F  318A  22E2  318C   	fcall	i1_I2C_Stop
  7050                           
  7051                           ;My_header_16F.h: 432: _delay((unsigned long)((26)*(32000000/4000000.0)));
  7052  0CA2  3045               	movlw	69
  7053  0CA3  00F6               	movwf	??_EEP_Write
  7054  0CA4                     u402_27:	
  7055  0CA4  0BF6               	decfsz	??_EEP_Write,f
  7056  0CA5  2CA4               	goto	u402_27
  7057  0CA6  0008               	return
  7058  0CA7                     __end_of_EEP_Write:	
  7059                           
  7060                           	psect	text43
  7061  0AE2                     __ptext43:	
  7062 ;; *************** function i1_I2C_Stop *****************
  7063 ;; Defined at:
  7064 ;;		line 237 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;		None               void
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0, pclath, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7078 ;;      Params:         0       0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0
  7081 ;;      Totals:         0       0       0       0       0       0
  7082 ;;Total ram usage:        0 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    1
  7085 ;; This function calls:
  7086 ;;		i1_I2C_IdleCheck
  7087 ;; This function is called by:
  7088 ;;		_LCD_Putc
  7089 ;;		_LCD_Puts
  7090 ;;		_EEP_Write
  7091 ;;		i1_LCD_Command
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           
  7096                           ;psect for function i1_I2C_Stop
  7097  0AE2                     i1_I2C_Stop:	
  7098                           
  7099                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  7100                           
  7101                           ;incstack = 0
  7102                           ; Regs used in i1_I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  7103  0AE2  3005               	movlw	5
  7104  0AE3  318A  22F4         	fcall	i1_I2C_IdleCheck
  7105                           
  7106                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  7107  0AE5  0024               	movlb	4	; select bank4
  7108  0AE6  1516               	bsf	22,2	;volatile
  7109  0AE7  0008               	return
  7110  0AE8                     __end_ofi1_I2C_Stop:	
  7111                           
  7112                           	psect	text44
  7113  0BAC                     __ptext44:	
  7114 ;; *************** function i1_I2C_Start *****************
  7115 ;; Defined at:
  7116 ;;		line 213 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  adrs            1    wreg     unsigned char 
  7119 ;;  rw              1    2[COMMON] unsigned char 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  adrs            1    3[COMMON] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      unsigned char 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0, pclath, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7131 ;;      Params:         1       0       0       0       0       0
  7132 ;;      Locals:         1       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0
  7134 ;;      Totals:         2       0       0       0       0       0
  7135 ;;Total ram usage:        2 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    1
  7138 ;; This function calls:
  7139 ;;		i1_I2C_IdleCheck
  7140 ;; This function is called by:
  7141 ;;		_LCD_Putc
  7142 ;;		_LCD_Puts
  7143 ;;		_EEP_Write
  7144 ;;		i1_LCD_Command
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           
  7149                           ;psect for function i1_I2C_Start
  7150  0BAC                     i1_I2C_Start:	
  7151                           
  7152                           ;incstack = 0
  7153                           ; Regs used in i1_I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7154                           ;i1I2C_Start@adrs stored from wreg
  7155  0BAC  00F3               	movwf	i1I2C_Start@adrs
  7156                           
  7157                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  7158  0BAD  3005               	movlw	5
  7159  0BAE  318A  22F4  318B   	fcall	i1_I2C_IdleCheck
  7160                           
  7161                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  7162  0BB1  0024               	movlb	4	; select bank4
  7163  0BB2  1416               	bsf	22,0	;volatile
  7164                           
  7165                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  7166  0BB3  3005               	movlw	5
  7167  0BB4  318A  22F4  318B   	fcall	i1_I2C_IdleCheck
  7168                           
  7169                           ;My_header_16F.h: 219: SSP1IF = 0;
  7170  0BB7  0020               	movlb	0	; select bank0
  7171  0BB8  1191               	bcf	17,3	;volatile
  7172                           
  7173                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  7174  0BB9  3573               	lslf	i1I2C_Start@adrs,w
  7175  0BBA  0772               	addwf	i1I2C_Start@rw,w
  7176  0BBB  0024               	movlb	4	; select bank4
  7177  0BBC  0091               	movwf	17	;volatile
  7178  0BBD                     i1l186:	
  7179                           ;My_header_16F.h: 221: while (!SSP1IF);
  7180                           
  7181  0BBD  0020               	movlb	0	; select bank0
  7182  0BBE  1D91               	btfss	17,3	;volatile
  7183  0BBF  2BBD               	goto	i1l186
  7184                           
  7185                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  7186  0BC0  0024               	movlb	4	; select bank4
  7187  0BC1  0E16               	swapf	22,w	;volatile
  7188  0BC2  0C89               	rrf	9,f
  7189  0BC3  0C89               	rrf	9,f
  7190  0BC4  3901               	andlw	1
  7191  0BC5  0008               	return
  7192  0BC6                     __end_ofi1_I2C_Start:	
  7193                           
  7194                           	psect	text45
  7195  0B36                     __ptext45:	
  7196 ;; *************** function i1_I2C_Send *****************
  7197 ;; Defined at:
  7198 ;;		line 243 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  data            1    wreg     unsigned char 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  data            1    2[COMMON] unsigned char 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      unsigned char 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0, pclath, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7212 ;;      Params:         0       0       0       0       0       0
  7213 ;;      Locals:         1       0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0
  7215 ;;      Totals:         1       0       0       0       0       0
  7216 ;;Total ram usage:        1 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    1
  7219 ;; This function calls:
  7220 ;;		i1_I2C_IdleCheck
  7221 ;; This function is called by:
  7222 ;;		_LCD_Putc
  7223 ;;		_LCD_Puts
  7224 ;;		_EEP_Write
  7225 ;;		i1_LCD_Command
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           
  7230                           ;psect for function i1_I2C_Send
  7231  0B36                     i1_I2C_Send:	
  7232                           
  7233                           ;incstack = 0
  7234                           ; Regs used in i1_I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  7235                           ;i1I2C_Send@data stored from wreg
  7236  0B36  00F2               	movwf	i1I2C_Send@data
  7237                           
  7238                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  7239  0B37  3005               	movlw	5
  7240  0B38  318A  22F4  318B   	fcall	i1_I2C_IdleCheck
  7241                           
  7242                           ;My_header_16F.h: 245: SSP1IF = 0;
  7243  0B3B  0020               	movlb	0	; select bank0
  7244  0B3C  1191               	bcf	17,3	;volatile
  7245                           
  7246                           ;My_header_16F.h: 246: SSP1BUF = data;
  7247  0B3D  0872               	movf	i1I2C_Send@data,w
  7248  0B3E  0024               	movlb	4	; select bank4
  7249  0B3F  0091               	movwf	17	;volatile
  7250  0B40                     i1l201:	
  7251                           ;My_header_16F.h: 247: while (!SSP1IF);
  7252                           
  7253  0B40  0020               	movlb	0	; select bank0
  7254  0B41  1D91               	btfss	17,3	;volatile
  7255  0B42  2B40               	goto	i1l201
  7256                           
  7257                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  7258                           ;	Return value of i1_I2C_Send is never used
  7259  0B43  0024               	movlb	4	; select bank4
  7260  0B44  0816               	movf	22,w	;volatile
  7261  0B45  0008               	return
  7262  0B46                     __end_ofi1_I2C_Send:	
  7263                           
  7264                           	psect	text46
  7265  0AF4                     __ptext46:	
  7266 ;; *************** function i1_I2C_IdleCheck *****************
  7267 ;; Defined at:
  7268 ;;		line 199 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  mask            1    wreg     unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  mask            1    1[COMMON] unsigned char 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;		None               void
  7275 ;; Registers used:
  7276 ;;		wreg, status,2, status,0
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7282 ;;      Params:         0       0       0       0       0       0
  7283 ;;      Locals:         1       0       0       0       0       0
  7284 ;;      Temps:          1       0       0       0       0       0
  7285 ;;      Totals:         2       0       0       0       0       0
  7286 ;;Total ram usage:        2 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		i1_I2C_Start
  7292 ;;		i1_I2C_Stop
  7293 ;;		i1_I2C_Send
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function i1_I2C_IdleCheck
  7299  0AF4                     i1_I2C_IdleCheck:	
  7300                           
  7301                           ;incstack = 0
  7302                           ; Regs used in i1_I2C_IdleCheck: [wreg+status,2+status,0]
  7303                           ;i1I2C_IdleCheck@mask stored from wreg
  7304  0AF4  00F1               	movwf	i1I2C_IdleCheck@mask
  7305  0AF5                     i1l1888:	
  7306                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  7307                           
  7308  0AF5  0871               	movf	i1I2C_IdleCheck@mask,w
  7309  0AF6  0024               	movlb	4	; select bank4
  7310  0AF7  0514               	andwf	20,w	;volatile
  7311  0AF8  00F0               	movwf	??i1_I2C_IdleCheck
  7312  0AF9  0816               	movf	22,w	;volatile
  7313  0AFA  391F               	andlw	31
  7314  0AFB  0470               	iorwf	??i1_I2C_IdleCheck,w
  7315  0AFC  1903               	btfsc	3,2
  7316  0AFD  0008               	return
  7317  0AFE  2AF5               	goto	i1l1888
  7318  0AFF                     __end_ofi1_I2C_IdleCheck:	
  7319  007E                     btemp	set	126	;btemp
  7320  007E                     pic14e$flags	set	126
  7321  007E                     wtemp	set	126
  7322  007E                     wtemp0	set	126
  7323  0080                     wtemp1	set	128
  7324  0082                     wtemp2	set	130
  7325  0084                     wtemp3	set	132
  7326  0086                     wtemp4	set	134
  7327  0088                     wtemp5	set	136
  7328  007F                     wtemp6	set	127
  7329  007E                     ttemp	set	126
  7330  007E                     ttemp0	set	126
  7331  0081                     ttemp1	set	129
  7332  0084                     ttemp2	set	132
  7333  0087                     ttemp3	set	135
  7334  007F                     ttemp4	set	127
  7335  007E                     ltemp	set	126
  7336  007E                     ltemp0	set	126
  7337  0082                     ltemp1	set	130
  7338  0086                     ltemp2	set	134
  7339  0080                     ltemp3	set	128


Data Sizes:
    Strings     45
    Constant    0
    Data        2
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      54
    BANK1            80     26      50
    BANK2            80     55      67
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[8]), 
		 -> STR_1(CODE[7]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_RA5(BANK0[3]), sw_RA4(BANK0[3]), sw_RA3(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lldiv
    _lchika->___lwdiv
    _display->___lwdiv
    i1_LCD_Clear->i1_LCD_Command
    ___lwdiv->___lwmod
    ___aldiv->___almod
    _LCD_SetCursor->i1_LCD_Command
    i1_LCD_Command->i1_I2C_Start
    _LCD_Puts->i1_I2C_Start
    _LCD_Putc->i1_I2C_Start
    ___wmul->_adc
    _EEP_Write->i1_I2C_Start
    i1_I2C_Stop->i1_I2C_IdleCheck
    i1_I2C_Start->i1_I2C_IdleCheck
    i1_I2C_Send->i1_I2C_IdleCheck

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_display
    _display->___aldiv

Critical Paths under _main in BANK1

    _main_init->_LCD_init
    _LCD_init->_LCD_Clear
    _LCD_Clear->_LCD_Command
    _LCD_Command->_I2C_Start
    _EEP_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0    9454
                                             12 BANK1     14    14      0
                                              0 BANK2     55    55      0
                           _EEP_Read
                                _LED
                                _OUT
                         _flag_clear
                          _flag_read
                          _main_init
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     463
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2527
                           _I2C_init
                           _LCD_init
                           _adc_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             3     3      0    2372
                                              9 BANK1      3     3      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            2     2      0    1186
                                              7 BANK1      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0    1186
                                              4 BANK1      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_read                                            2     1      1     644
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _flag_clear                                           3     2      1     540
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     609
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1    1163
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEP_Read                                             5     4      1    2514
                                              6 BANK1      5     4      1
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     717
                                              2 BANK1      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1028
                                              2 BANK1      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK1      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      96
                                              2 BANK1      3     3      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  9     9      0   13752
                                             18 BANK0      9     9      0
                          _EEP_Write
                            ___lldiv
                             ___wmul
                                _adc
             _button_timer_interrupt
                            _display
                             _lchika
                        _ringbuf_num
                        _ringbuf_pop
                              i1_OUT
 ---------------------------------------------------------------------------------
 (8) i1_OUT                                                2     1      1     114
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          4     4      0     358
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          2     2      0     280
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _lchika                                               5     5      0    2340
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___lwdiv
                              i1_LED
 ---------------------------------------------------------------------------------
 (9) i1_LED                                                2     1      1     166
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     478
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) _display                                              4     3      1    7224
                                             14 BANK0      4     3      1
                           _LCD_Putc
                           _LCD_Puts
                      _LCD_SetCursor
                            ___aldiv
                            ___almod
                            ___lwdiv
                            ___lwmod
                        i1_LCD_Clear
 ---------------------------------------------------------------------------------
 (9) i1_LCD_Clear                                          2     2      0     281
                                              7 COMMON     2     2      0
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4    1583
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4    1408
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___almod                                             11     3      8     474
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (9) ___aldiv                                             15     7      8     478
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _LCD_SetCursor                                        4     3      1     883
                                              7 COMMON     4     3      1
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i1_LCD_Command                                       3     3      0     281
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Puts                                             6     4      2    1461
                                              4 COMMON     6     4      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Putc                                             3     3      0     281
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               4     3      1     918
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _adc                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     270
                                              4 COMMON     6     2      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     340
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (8) _EEP_Write                                            5     3      2    1037
                                              4 COMMON     5     3      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Stop                                          0     0      0      22
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Start                                         2     1      1     170
                                              2 COMMON     2     1      1
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Send                                          1     1      0      44
                                              2 COMMON     1     1      0
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i1_I2C_IdleCheck                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _LED
   _OUT
   _flag_clear
   _flag_read
   _main_init
     _I2C_init
     _LCD_init
       _LCD_Clear
         _LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _adc_init
     _timer0_init
     _timer1_init
   _ringbuf_init

 _isr (ROOT)
   _EEP_Write
     i1_I2C_Send
       i1_I2C_IdleCheck
     i1_I2C_Start
       i1_I2C_IdleCheck
     i1_I2C_Stop
       i1_I2C_IdleCheck
   ___lldiv
   ___wmul
     _adc (ARG)
   _adc
   _button_timer_interrupt
   _display
     _LCD_Putc
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_Puts
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_SetCursor
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
     ___aldiv
       ___almod (ARG)
     ___almod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     i1_LCD_Clear
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
   _lchika
     ___awdiv
     ___lwdiv
       ___lwmod (ARG)
     i1_LED
   _ringbuf_num
   _ringbuf_pop
   i1_OUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1A      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     37      43      10       83.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      B9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 12 02:25:49 2015

                              _s 0020                                _v 0026               __size_of_I2C_Start 001C  
                    __CFG_CP$OFF 0000                     ?_LCD_Command 0070                               l99 0B86  
                   ___awdiv@sign 0076                               _sp 015D                               _ss 00BA  
            ___wmul@multiplicand 0076                    _LCD_SetCursor 0B46                      ?i1_I2C_Send 0070  
                    ?i1_I2C_Stop 0070                              l201 0B64                              l210 0CFE  
                            l351 0DF3                              l192 0BD7                              l264 0EF2  
                            l352 0DF9                              l265 0F0D                              l186 0C61  
                            l362 0E1A                              l371 0D9B                              l355 0DFC  
                            l356 0E02                              l366 0D77                              l358 0E05  
                            l359 0E0B                              l368 0D7F                              l369 0D87  
                            l396 0507                              l389 0D4D                              _RA3 0063  
                            _RA4 0064                              _LED 0D74                              _RA5 0065  
                   __CFG_CPD$OFF 0000                              _OUT 0DF0                              _adc 0BE0  
                            _cnt 00C6                              _cut 0157                              _isr 0004  
            __size_of_I2C_rStart 001A             __size_of_I2C_Receive 0020                     __CFG_BORV$LO 0000  
                            wreg 0009                flag_clear@bit_and 00A0                     __CFG_LVP$OFF 0000  
                           LED@b 00A1                             ?_LED 00A0                             ?_OUT 00A0  
                   ?i1_I2C_Start 0072                             ?_adc 0070                             l3000 0D8F  
                           l3012 0CD4                             l3004 0CCA                             l3030 0D3A  
                           l3022 0CDB                             l3016 0CD9                             l3008 0CCF  
                           l3026 0D2D                             l3034 0D41                             l3028 0D33  
                           l3302 0587                             l3320 05DC                             l3312 05BE  
                           l3250 0467                             l3280 0533                             l3292 0563  
                           l3268 0508                             l2814 0B1A                             l3286 054E  
                           l3288 0554                             OUT@b 00A1                             l2860 0B8F  
                           l2994 0E0E                             ?_isr 0070                             STR_1 0810  
                           STR_2 0808                             STR_3 081E                             STR_4 0817  
                           STR_5 0824                             STR_6 081E                             STR_7 0817  
                           STR_8 0824                             STR_9 0829                             u3310 0D84  
                           u3330 0D8C                             u3290 0D7C                             u3815 0599  
                           u3735 04EE                             u3907 0B30                             u3917 0D04  
                           u3927 0F13                             u3847 0478                             u3857 048F  
                           u3867 04A8                             u3877 04C1                             u3887 0F1F  
                           u3897 0F45                             _SPEN 0CEF                             _TXIE 048C  
                           _TXIF 008C                             _WPUB 020D               __size_of_EEP_Write 0020  
                   __CFG_WRT$OFF 0000                             _cnt0 002C                             _cntf 00C9  
                           _main 0427         button_timer_interrupt@bt 0073               __size_of_LCD_Clear 000F  
                    main@ringbuf 0120                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                 __end_of_I2C_Send 0B6A                             btemp 007E  
                           isr@i 0055                 __end_of_I2C_Stop 0AEE                             ltemp 007E  
               __end_of_I2C_init 0B0A                             start 020F                             ttemp 007E  
                           wtemp 007E                    __CFG_IESO$OFF 0000                            ??_LED 00A1  
               __end_of_EEP_Read 0F18           __size_of_I2C_IdleCheck 000F                            ??_OUT 00A1  
                          ??_adc 0072                ??i1_I2C_IdleCheck 0070                            ??_isr 004D  
                  __CFG_PLLEN$ON 0000                 __end_of_LCD_Putc 0C32                 __end_of_LCD_Puts 0EA5  
                 ?_LCD_SetCursor 0077                 __end_of_LCD_init 0F5B                     ?i1_LCD_Clear 0070  
                __end_of___aldiv 071E                  __end_of___almod 0800                            ?_main 0070  
                __end_of___awdiv 1000                            _ADRES 009B                            STR_10 081E  
                          STR_11 0817                            STR_12 0824                            STR_13 0800  
                    LCD_Putc@ans 0076                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                __end_of___lldiv 0FAD                  ___awdiv@divisor 0070                            _LATB0 0868  
                          _LATB3 086B                            _LATA6 0866                            _LATB5 086D  
                          _LATA7 0867                            _LATB6 086E                  __end_of___lwdiv 0EDB  
                          i1l111 0BF2                            i1l120 061D                            i1l201 0B40  
                          i1l121 062D                            i1l210 0C46                            i1l125 068D  
                          i1l301 00B5                            i1l222 0C2A                            i1l119 060D  
                          i1l313 020B                            i1l260 0C9F                            i1l351 0D9E  
                          i1l352 0DA4                  __end_of___lwmod 0E76                            i1l186 0BBD  
                          i1l362 0DC4                            i1l347 0426                            i1l371 0D73  
                          i1l355 0DA7                            i1l356 0DAD                            i1l366 0D50  
                          i1l358 0DB0                            i1l359 0DB6                            i1l368 0D58  
                          i1l561 07A3                            i1l369 0D60                            i1l298 0025  
                          i1l299 0023                            i1l548 06AD                            i1l493 0C72  
                ___awdiv@counter 0075                            i1_LED 0D4E                      LCD_Puts@ans 0078  
                          _RCSTA 019D                            i1_OUT 0D9C                            _TMR1H 0017  
                          _TMR1L 0016                            _TRISA 008C                            _TRISB 008D  
                          _TXREG 019A                            _TXSTA 019E                   __CFG_FCMEN$OFF 0000  
                __end_of_display 0427                            adc@ch 0073                            _cnt1s 002E  
                          main@i 0156                __end_of_I2C_Start 0C6A                   __CFG_BOREN$OFF 0000  
                   LCD_Command@c 00A5                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
            __size_ofi1_I2C_Send 0010              __size_ofi1_I2C_Stop 0006                   __CFG_MCLRE$OFF 0000  
                __initialization 0211                     __end_of_main 05E3              ringbuf_init@bufsize 00A1  
              __end_of_EEP_Write 0CA7                           ??_main 00AC                __end_of_LCD_Clear 0B36  
                         ?i1_LED 0070                           ?i1_OUT 0070                           _BCL1IF 0093  
                  _I2C_IdleCheck 0B18                 ___awdiv@dividend 0072                           i1LED@b 0071  
                         _ANSELA 018C                           _ANSELB 018D              i1I2C_IdleCheck@mask 0071  
               __end_of_adc_init 0B7F                           i1l2100 07B0                           i1l2120 07F7  
                         i1l2112 07DE                           i1l2026 0E89                           i1l2106 07B8  
                         i1l2202 0E4E                           i1l2028 0EA2                           i1l2108 07C6  
                         i1l2116 07E9                           i1l2204 0E5A                           i1l2212 0E6F  
                         i1l2132 0FB7                           i1l2070 06CE                           i1l2062 06BE  
                         i1l2150 0FD6                           i1l2080 06FC                           i1l2072 06DC  
                         i1l2208 0E66                           i1l2160 0FF1                           i1l2224 0D68  
                         i1l2138 0FC2                           i1l2306 0DDE                           i1l2244 05FD  
                         i1l2084 0707                           i1l2180 0EB9                           i1l2420 03EE  
                         i1l2404 0306                           i1l2412 031E                           i1l2164 0FF9  
                         i1l2156 0FE8                           i1l2148 0FCA                           i1l3204 00E6  
                         i1l2262 0666                           i1l2254 063E                           i1l2190 0ED4  
                         i1l2422 03F6                           i1l2406 030E                           i1l2414 032A  
                         i1l2088 0715                           i1l2408 0316                           i1l3224 0203  
                         i1l2514 0F6B                           i1l2266 067A                           i1l2258 0652  
                         i1l2186 0ECB                           i1l2178 0EAD                           i1l2418 03E6  
                         i1l2426 03FE                           i1l2434 0417                           i1l2362 0772  
                         i1l2370 078D                           i1l3170 0052                           i1l2524 0F99  
                         i1l2516 0F79                           i1l2428 040A                           i1l2356 0738  
                         i1l3180 00AC                           i1l2542 0DB9                           i1l2528 0FA4  
                         i1l2384 0259                           i1l2392 0271                           i1l2386 0261  
                         i1l2394 027D                           i1l2378 0240                           i1l3194 00D2  
                         i1l3178 00A3                           i1l2388 0269                           u210_25 0E51  
                         i1l2498 0C6C                           i1OUT@b 0071                           u203_25 0EB0  
                         i1l1888 0AF5                           i1l2964 0E46                           u212_25 0E60  
                         u205_25 0EBA                           u213_25 0E67                           u206_25 0EC4  
                         u215_20 0D55                           u207_25 0ECC                           u224_25 0606  
                         u400_27 0C2F                           u217_20 0D5D                           u225_25 0616  
                         u401_27 0BEE                           u226_25 0626                           u402_27 0CA4  
                         u219_20 0D65                           _FVRCON 0117                           u227_25 0636  
                         u243_25 0766                           u260_25 0F8E                           u180_25 06FD  
                         u261_25 0F9A                           u253_25 0C73                           u254_25 0C78  
                         u176_25 06D1                           u257_25 0F6E                           u361_25 00F7  
                         u178_25 06DD                           u186_25 07BB                           u370_25 01DB  
                         u362_25 0115                           u259_25 0F7A                           u179_25 06F1  
                         u195_25 0FCD                           u363_25 0144                           u188_25 07D4  
                         u364_25 014A                           u189_25 07DF                           u197_25 0FD7  
                         u365_25 015B                           u198_25 0FE1                           u366_25 0179  
                         u358_25 00C2                           u199_25 0FE9                           u367_25 018A  
                         u359_25 00DD                           u368_25 01AA                           u369_25 01BB  
         __size_ofi1_LCD_Command 001C                           u393_27 016E                           _OSCCON 0099  
                         u394_27 019D                           u395_27 01CE                           u396_27 01F0  
                         u397_27 0B12                           u398_27 0C4B                           u399_27 0E9F  
                         _SPBRGH 019C                           _SPBRGL 019B                           _SSP1IF 008B  
                 i1LCD_Command@c 0075                     ??_I2C_rStart 00A6                   __CFG_PWRTE$OFF 0000  
                   ?_ringbuf_pop 0070                     ?_ringbuf_num 0070                        ??___aldiv 007B  
                      ??___almod 0078                           ___wmul 0C6A                        ??___awdiv 0074  
                ??_LCD_SetCursor 0078                        ??___lldiv 0078                     ?_timer0_init 0070  
                   ?_timer1_init 0070                        ??___lwdiv 007A                        ??___lwmod 0074  
                         _lchika 071E                 ___awdiv@quotient 0077                           _sw_RA3 0032  
                         _sw_RA4 0035                           _sw_RA5 0038                           _tx_buf 00CC  
           __size_of_LCD_Command 0020                        ??_display 004A                        ?_I2C_Send 0070  
                      ?_I2C_Stop 0070                    i1I2C_Start@rw 0072                        ?_I2C_init 0070  
             __end_of_I2C_rStart 0BE0                   ?_I2C_IdleCheck 0070                        ?_EEP_Read 00A6  
           __size_ofi1_I2C_Start 001A          __end_of__initialization 0231                        ?_LCD_Putc 0070  
                      ?_LCD_Puts 0074                        ?_LCD_init 0070                    __end_ofi1_LED 0D74  
                  __end_ofi1_OUT 0DC5                   __pcstackCOMMON 0070                        LCD_Putc@c 0075  
                   __pidataBANK1 0002                        LCD_Puts@s 0074                    i1_LCD_Command 0C32  
                   ??i1_I2C_Send 0072                     ??i1_I2C_Stop 0072                          ??i1_LED 0071  
                        ??i1_OUT 0071               __size_of_flag_read 0020                   _OPTION_REGbits 0095  
                     ??_I2C_Send 00A2             __size_ofi1_LCD_Clear 000E                       ??_I2C_Stop 00A2  
                     ??_I2C_init 00A0               __size_of_main_init 0023                       __pbssBANK0 0020  
                     ??_EEP_Read 00A7                       __pbssBANK1 00BA                       __pbssBANK2 0157  
                i1_I2C_IdleCheck 0AF4                       ??_LCD_Putc 0074                       ??_LCD_Puts 0076  
                     ??_LCD_init 00A9               __end_ofi1_I2C_Send 0B46               __end_ofi1_I2C_Stop 0AE8  
                     __pmaintext 0427                          ?___wmul 0074                       __pintentry 0004  
                        ?_lchika 0070                   ?i1_LCD_Command 0070                       _flag_clear 0D2A  
                  ??_I2C_Receive 00A2                     I2C_Send@data 00A2                        ?_adc_init 0070  
                ??_I2C_IdleCheck 00A0                          _SSP1ADD 0212                          _SSP1BUF 0211  
           timer1_init@prescaler 00A1         ??_button_timer_interrupt 0071                        _I2C_Start 0C4E  
                 I2C_Receive@ack 00A3                __end_of_flag_read 0CE7                          ___aldiv 069C  
                        ___almod 0793                    ?_ringbuf_init 00A0                          ___awdiv 0FAD  
                        ___lldiv 0F5B                  __size_of___wmul 001D                          ___lwdiv 0EA5  
                        ___lwmod 0E48             __size_of_ringbuf_pop 002D             __size_of_ringbuf_num 002B  
                __CFG_STVREN$OFF 0000         LCD_SetCursor@row_offsets 0078                  __size_of_lchika 0075  
              __end_of_main_init 0D2A             __size_of_timer0_init 0015                       ??_adc_init 00A0  
           __size_of_timer1_init 0018                          __ptext1 0BFB                          __ptext2 0D07  
                        __ptext3 0B94                          __ptext4 0B7F                          __ptext5 0B6A  
                        __ptext6 0F18                          __ptext7 0B27                          __ptext8 0CE7  
                        __ptext9 0AFF                          _display 0235                     __size_of_LED 0028  
                      _T1CONbits 0018                     __size_of_OUT 002B                   i1I2C_Send@data 0072  
                   __size_of_adc 001B                     __size_of_isr 020B                        _EEP_Write 0C87  
               ___aldiv@dividend 003F                        _LCD_Clear 0B27              __end_of_I2C_Receive 0CC7  
        __end_ofi1_I2C_IdleCheck 0AFF                          clrloop0 0AEF                          lchika@i 003F  
           end_of_initialization 0231                 LCD_SetCursor@col 007A                 LCD_SetCursor@row 0077  
                 LCD_Command@ans 00A6                       ?_I2C_Start 00A2                  ___lldiv@divisor 0070  
                   I2C_rStart@rw 00A4                  ___lldiv@counter 007D                   ??_ringbuf_init 00A2  
               ___aldiv@quotient 0045                  ??i1_LCD_Command 0074                     __pstringtext 0800  
                    ?_flag_clear 00A0                       _print_port 0031                 __CFG_FOSC$INTOSC 0000  
                     ?_EEP_Write 0074                       ?_LCD_Clear 0070                __size_of_I2C_Send 0012  
              __size_of_I2C_Stop 0006                __size_of_I2C_init 000B                       main@data_0 0152  
                     main@data_1 0153                       main@data_2 0154                       main@data_3 0155  
__size_of_button_timer_interrupt 00B9                __size_of_EEP_Read 003D                __size_of_LCD_Putc 001C  
              __size_of_LCD_Puts 002F                __size_of_LCD_init 0043                   ringbuf_init@rb 00A3  
                 ringbuf_pop@ret 0072                    ??_LCD_Command 00A4                   __end_of___wmul 0C87  
          __end_of_LCD_SetCursor 0B58                   __end_of_lchika 0793                      _I2C_Receive 0CA7  
            start_initialization 0211                      __end_of_LED 0D9C                      __end_of_OUT 0E1B  
                    __end_of_adc 0BFB                      __end_of_isr 020F                 ?i1_I2C_IdleCheck 0070  
                  ??i1_I2C_Start 0073              __size_of_flag_clear 0024                      ??_I2C_Start 00A3  
                       ??___wmul 0078                      __pdataBANK1 00D0                         ??_lchika 003B  
         _button_timer_interrupt 05E3                    ??i1_LCD_Clear 0077              __end_of_LCD_Command 0D07  
              __size_of_adc_init 0015                      ??_EEP_Write 0076                        ___latbits 0001  
                       LED@value 00A0                    __pcstackBANK0 003B                    __pcstackBANK1 00A0  
                  __pcstackBANK2 0120                   flag_clear@port 00A2                      ??_LCD_Clear 00A7  
            __end_of__stringdata 082D             __end_of_ringbuf_init 0C16                    adc_init@p_ref 00A0  
            __end_ofi1_I2C_Start 0BC6                 ___lwdiv@dividend 0078                         ?___aldiv 003B  
                       ?___almod 0070                         ?___awdiv 0070                        _flag_read 0CC7  
                       ?___lldiv 0070                         ?___lwdiv 0076                         ?___lwmod 0070  
               ___almod@dividend 0074                         ?_display 0049                   __size_ofi1_LED 0026  
                      _main_init 0D07                   __size_ofi1_OUT 0029                      I2C_Start@rw 00A2  
                       _I2C_Send 0B58                         OUT@value 00A0                         _I2C_Stop 0AE8  
                       _I2C_init 0AFF            __end_of_I2C_IdleCheck 0B27              __end_ofi1_LCD_Clear 0B18  
               ___lwdiv@quotient 007B                         _EEP_Read 0EDB                  ___aldiv@divisor 003B  
       ringbuf_init@internal_buf 00A0                  ___aldiv@counter 0043                   ___wmul@product 0078  
                       _LCD_Putc 0C16                         _LCD_Puts 0E76                         _LCD_init 0F18  
                      clear_ram0 0AEE                         _PIE1bits 0091                         _PIR1bits 0011  
                  ??_ringbuf_pop 0070                    ??_ringbuf_num 0070                         _SSP1CON1 0215  
                       _SSP1CON2 0216                    ??_timer0_init 00A0                    ??_timer1_init 00A0  
                     ?_flag_read 00A0                         _SSP1STAT 0214                      _LCD_Command 0CE7  
                   ??_flag_clear 00A1                 i1LCD_Command@ans 0076                       _ADCON0bits 009D  
                     _ADCON1bits 009E                      __stringdata 0800                ___wmul@multiplier 0074  
 button_timer_interrupt@sw_value 0070                       ?_main_init 0070                        display@co 0049  
                  ringbuf_pop@rb 0073                    ringbuf_num@rb 0071                    I2C_Start@adrs 00A3  
                    i1_I2C_Start 0BAC               LCD_SetCursor@F2883 00D0                  I2C_Receive@data 00A4  
             __end_of_flag_clear 0D4E                       _I2C_rStart 0BC6                 __size_of___aldiv 0082  
               __size_of___almod 006D            __end_ofi1_LCD_Command 0C4E                 __size_of___awdiv 0053  
              I2C_IdleCheck@mask 00A1                 __size_of___lldiv 0052                 __size_of___lwdiv 0036  
               __size_of___lwmod 002E                         _adc_init 0B6A                      i1_LCD_Clear 0B0A  
                   ?_I2C_Receive 0070              __end_of_ringbuf_pop 0E48              __end_of_ringbuf_num 0DF0  
               flag_read@bit_and 00A0                       i1LED@value 0070              __end_of_timer0_init 0B94  
          __size_of_ringbuf_init 001B              __end_of_timer1_init 0BAC                 __size_of_display 01F2  
                ___lwdiv@divisor 0076                  ___lwdiv@counter 007D             timer0_init@prescaler 00A1  
                       __ptext10 0CC7                         __ptext11 0D2A                         __ptext20 0B18  
                       __ptext12 0DF0                         __ptext13 0D74                         __ptext30 0E48  
                       __ptext22 0D9C                         __ptext14 0EDB                         __ptext31 0EA5  
                       __ptext23 0E1B                         __ptext15 0BC6                         __ptext40 0C6A  
                       __ptext32 0793                         __ptext24 0DC5                         __ptext16 0AE8  
                       __ptext41 0F5B                         __ptext33 069C                         __ptext25 071E  
                       __ptext17 0C4E                         __ptext42 0C87                         __ptext34 0B46  
                       __ptext26 0D4E                         __ptext18 0B58                         __ptext43 0AE2  
                       __ptext35 0C32                         __ptext27 0FAD                         __ptext19 0CA7  
                       __ptext44 0BAC                         __ptext36 0E76                         __ptext28 0235  
                       __ptext45 0B36                         __ptext37 0C16                         __ptext29 0B0A  
                       __ptext46 0AF4                         __ptext38 05E3                         __ptext39 0BE0  
                   _SSP1CON2bits 0216                  ___almod@divisor 0070                  ___almod@counter 0079  
                  EEP_Read@Reg_h 00A8                    EEP_Read@Reg_l 00A6                   I2C_rStart@adrs 00A2  
                  __size_of_main 01BC                    flag_read@port 00A1          ?_button_timer_interrupt 0070  
                    ??_flag_read 00A1                     _ringbuf_init 0BFB                         display@i 004C  
                     i1_I2C_Send 0B36                       i1OUT@value 0070                       i1_I2C_Stop 0AE2  
                    ??_main_init 00AC                       _INTCONbits 000B                      pic14e$flags 007E  
                       intlevel1 0000                 ___lwmod@dividend 0072           __size_of_LCD_SetCursor 0012  
               ___lldiv@dividend 0074                  i1I2C_Start@adrs 0073                __CFG_CLKOUTEN$OFF 0000  
                    ?_I2C_rStart 00A2         __size_ofi1_I2C_IdleCheck 000B                     EEP_Read@data 00A9  
                  _print_content 0030   __end_of_button_timer_interrupt 069C                      _ringbuf_pop 0E1B  
                    _ringbuf_num 0DC5                      _timer0_init 0B7F                      _timer1_init 0B94  
               ___lldiv@quotient 0079                  ___lwmod@divisor 0070                  ___lwmod@counter 0075  
                    EEP_Read@ans 00AA                     ___aldiv@sign 0044                   EEP_Write@Reg_h 0077  
                 EEP_Write@Reg_l 0074                     ___almod@sign 007A                    EEP_Write@data 0075  
                   EEP_Write@ans 0078  
