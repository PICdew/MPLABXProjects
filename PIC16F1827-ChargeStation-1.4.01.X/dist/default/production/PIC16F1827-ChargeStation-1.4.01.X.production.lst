

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:44:52 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021C                     	;# 
   168  021D                     	;# 
   169  021E                     	;# 
   170  021F                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  0FE4                     	;# 
   212  0FE5                     	;# 
   213  0FE6                     	;# 
   214  0FE7                     	;# 
   215  0FE8                     	;# 
   216  0FE9                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222                           
   223                           	psect	idataBANK0
   224  0002                     __pidataBANK0:	
   225                           
   226                           ;initializer for LCD_SetCursor@F2888
   227  0002  3400               	retlw	0
   228  0003  3440               	retlw	64
   229  000B                     _INTCONbits	set	11
   230  0011                     _PIR1bits	set	17
   231  0018                     _T1CONbits	set	24
   232  0017                     _TMR1H	set	23
   233  0016                     _TMR1L	set	22
   234  0093                     _BCL1IF	set	147
   235  0063                     _RA3	set	99
   236  0064                     _RA4	set	100
   237  0065                     _RA5	set	101
   238  008B                     _SSP1IF	set	139
   239  008C                     _TXIF	set	140
   240  009B                     _ADRES	set	155
   241  009D                     _ADCON0bits	set	157
   242  009E                     _ADCON1bits	set	158
   243  0095                     _OPTION_REGbits	set	149
   244  0099                     _OSCCON	set	153
   245  0091                     _PIE1bits	set	145
   246  008C                     _TRISA	set	140
   247  008D                     _TRISB	set	141
   248  048C                     _TXIE	set	1164
   249  0117                     _FVRCON	set	279
   250  0866                     _LATA6	set	2150
   251  0867                     _LATA7	set	2151
   252  0868                     _LATB0	set	2152
   253  086B                     _LATB3	set	2155
   254  086D                     _LATB5	set	2157
   255  086E                     _LATB6	set	2158
   256  018C                     _ANSELA	set	396
   257  018D                     _ANSELB	set	397
   258  019D                     _RCSTA	set	413
   259  019C                     _SPBRGH	set	412
   260  019B                     _SPBRGL	set	411
   261  019A                     _TXREG	set	410
   262  019E                     _TXSTA	set	414
   263  0CFB                     _BRG16	set	3323
   264  0CEF                     _SPEN	set	3311
   265  0212                     _SSP1ADD	set	530
   266  0211                     _SSP1BUF	set	529
   267  0215                     _SSP1CON1	set	533
   268  0216                     _SSP1CON2	set	534
   269  0216                     _SSP1CON2bits	set	534
   270  0214                     _SSP1STAT	set	532
   271  020D                     _WPUB	set	525
   272                           
   273                           	psect	stringtext
   274  0800                     __pstringtext:	
   275  0800                     STR_13:	
   276  0800  3452               	retlw	82	;'R'
   277  0801  3465               	retlw	101	;'e'
   278  0802  3473               	retlw	115	;'s'
   279  0803  3465               	retlw	101	;'e'
   280  0804  3474               	retlw	116	;'t'
   281  0805  3465               	retlw	101	;'e'
   282  0806  3464               	retlw	100	;'d'
   283  0807  3400               	retlw	0
   284  0808                     STR_2:	
   285  0808  3453               	retlw	83	;'S'
   286  0809  3474               	retlw	116	;'t'
   287  080A  3461               	retlw	97	;'a'
   288  080B  3474               	retlw	116	;'t'
   289  080C  3469               	retlw	105	;'i'
   290  080D  346F               	retlw	111	;'o'
   291  080E  346E               	retlw	110	;'n'
   292  080F  3400               	retlw	0
   293  0810                     STR_1:	
   294  0810  3443               	retlw	67	;'C'
   295  0811  3468               	retlw	104	;'h'
   296  0812  3461               	retlw	97	;'a'
   297  0813  3472               	retlw	114	;'r'
   298  0814  3467               	retlw	103	;'g'
   299  0815  3465               	retlw	101	;'e'
   300  0816  3400               	retlw	0
   301  0817                     STR_4:	
   302  0817  3443               	retlw	67	;'C'
   303  0818  3465               	retlw	101	;'e'
   304  0819  346E               	retlw	110	;'n'
   305  081A  3474               	retlw	116	;'t'
   306  081B  3465               	retlw	101	;'e'
   307  081C  3472               	retlw	114	;'r'
   308  081D  3400               	retlw	0
   309  081E                     STR_3:	
   310  081E  3452               	retlw	82	;'R'
   311  081F  3469               	retlw	105	;'i'
   312  0820  3467               	retlw	103	;'g'
   313  0821  3468               	retlw	104	;'h'
   314  0822  3474               	retlw	116	;'t'
   315  0823  3400               	retlw	0
   316  0824                     STR_5:	
   317  0824  344C               	retlw	76	;'L'
   318  0825  3465               	retlw	101	;'e'
   319  0826  3466               	retlw	102	;'f'
   320  0827  3474               	retlw	116	;'t'
   321  0828  3400               	retlw	0
   322  0829                     STR_9:	
   323  0829  346D               	retlw	109	;'m'
   324  082A  3441               	retlw	65	;'A'
   325  082B  3468               	retlw	104	;'h'
   326  082C  3400               	retlw	0
   327  0817                     
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  0211                     start_initialization:	
   332  0211                     __initialization:	
   333                           
   334                           ; Clear objects allocated to BANK0
   335  0211  3020               	movlw	low __pbssBANK0
   336  0212  0084               	movwf	4
   337  0213  3000               	movlw	high __pbssBANK0
   338  0214  0085               	movwf	5
   339  0215  3027               	movlw	39
   340  0216  318A  22AD  3182   	fcall	clear_ram0
   341                           
   342                           ; Clear objects allocated to BANK1
   343  0219  30CA               	movlw	low __pbssBANK1
   344  021A  0084               	movwf	4
   345  021B  3000               	movlw	high __pbssBANK1
   346  021C  0085               	movwf	5
   347  021D  300C               	movlw	12
   348  021E  318A  22AD  3182   	fcall	clear_ram0
   349                           
   350                           ; Clear objects allocated to BANK2
   351  0221  3057               	movlw	low __pbssBANK2
   352  0222  0084               	movwf	4
   353  0223  3001               	movlw	high __pbssBANK2
   354  0224  0085               	movwf	5
   355  0225  300A               	movlw	10
   356  0226  318A  22AD  3182   	fcall	clear_ram0
   357                           
   358                           ; Initialize objects allocated to BANK0
   359  0229  3180  2002  3182   	fcall	__pidataBANK0	;fetch initializer
   360  022C  00E2               	movwf	__pdataBANK0& (0+127)
   361  022D  3180  2003         	fcall	__pidataBANK0+1	;fetch initializer
   362  022F  00E3               	movwf	(__pdataBANK0+1)& (0+127)
   363  0230                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366  0230                     __end_of__initialization:	
   367  0230  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   368  0231  0020               	movlb	0
   369  0232  3182  2A34         	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssBANK0
   372  0020                     __pbssBANK0:	
   373  0020                     _ss:	
   374  0020                     	ds	12
   375  002C                     _s:	
   376  002C                     	ds	6
   377  0032                     _v:	
   378  0032                     	ds	6
   379  0038                     _cnt0:	
   380  0038                     	ds	2
   381  003A                     _cnt1s:	
   382  003A                     	ds	2
   383  003C                     _print_content:	
   384  003C                     	ds	1
   385  003D                     _print_port:	
   386  003D                     	ds	1
   387  003E                     _sw_RA3:	
   388  003E                     	ds	3
   389  0041                     _sw_RA4:	
   390  0041                     	ds	3
   391  0044                     _sw_RA5:	
   392  0044                     	ds	3
   393                           
   394                           	psect	dataBANK0
   395  0062                     __pdataBANK0:	
   396  0062                     LCD_SetCursor@F2888:	
   397  0062                     	ds	2
   398                           
   399                           	psect	bssBANK1
   400  00CA                     __pbssBANK1:	
   401  00CA                     _sp:	
   402  00CA                     	ds	6
   403  00D0                     _cnt:	
   404  00D0                     	ds	3
   405  00D3                     _cntf:	
   406  00D3                     	ds	3
   407                           
   408                           	psect	bssBANK2
   409  0157                     __pbssBANK2:	
   410  0157                     _cut:	
   411  0157                     	ds	6
   412  015D                     _tx_buf:	
   413  015D                     	ds	4
   414                           
   415                           	psect	clrtext
   416  0AAD                     clear_ram0:	
   417                           ;	Called with FSR0 containing the base address, and
   418                           ;	WREG with the size to clear
   419                           
   420  0AAD  0064               	clrwdt	;clear the watchdog before getting into this loop
   421  0AAE                     clrloop0:	
   422  0AAE  0180               	clrf	0	;clear RAM location pointed to by FSR
   423  0AAF  3101               	addfsr 0,1
   424  0AB0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   425  0AB1  2AAE               	goto	clrloop0	;have we reached the end yet?
   426  0AB2  3400               	retlw	0	;all done for this memory range, return
   427                           
   428                           	psect	cstackBANK2
   429  0120                     __pcstackBANK2:	
   430  0120                     main@ringbuf:	
   431                           
   432                           ; 50 bytes @ 0x0
   433  0120                     	ds	50
   434  0152                     main@data_0:	
   435                           
   436                           ; 1 bytes @ 0x32
   437  0152                     	ds	1
   438  0153                     main@data_1:	
   439                           
   440                           ; 1 bytes @ 0x33
   441  0153                     	ds	1
   442  0154                     main@data_2:	
   443                           
   444                           ; 1 bytes @ 0x34
   445  0154                     	ds	1
   446  0155                     main@data_3:	
   447                           
   448                           ; 1 bytes @ 0x35
   449  0155                     	ds	1
   450  0156                     main@i:	
   451                           
   452                           ; 1 bytes @ 0x36
   453  0156                     	ds	1
   454                           
   455                           	psect	cstackBANK1
   456  00A0                     __pcstackBANK1:	
   457  00A0                     ?_OUT:	
   458  00A0                     ?_LED:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  00A0                     ??_timer0_init:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  00A0                     ??_timer1_init:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  00A0                     ??_adc_init:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  00A0                     ?_ringbuf_init:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  00A0                     ??_I2C_IdleCheck:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  00A0                     ??_I2C_init:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  00A0                     ?_flag_clear:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  00A0                     ?_flag_read:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  00A0                     adc_init@p_ref:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  00A0                     ringbuf_init@internal_buf:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  00A0                     OUT@value:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  00A0                     LED@value:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  00A0                     flag_read@bit_and:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  00A0                     flag_clear@bit_and:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 1 bytes @ 0x0
   505  00A0                     	ds	1
   506  00A1                     ??_OUT:	
   507  00A1                     ??_LED:	
   508                           ; 0 bytes @ 0x1
   509                           
   510  00A1                     ??_flag_read:	
   511                           ; 0 bytes @ 0x1
   512                           
   513  00A1                     ??_flag_clear:	
   514                           ; 0 bytes @ 0x1
   515                           
   516  00A1                     timer0_init@prescaler:	
   517                           ; 0 bytes @ 0x1
   518                           
   519  00A1                     timer1_init@prescaler:	
   520                           ; 1 bytes @ 0x1
   521                           
   522  00A1                     ringbuf_init@bufsize:	
   523                           ; 1 bytes @ 0x1
   524                           
   525  00A1                     I2C_IdleCheck@mask:	
   526                           ; 1 bytes @ 0x1
   527                           
   528  00A1                     OUT@b:	
   529                           ; 1 bytes @ 0x1
   530                           
   531  00A1                     LED@b:	
   532                           ; 1 bytes @ 0x1
   533                           
   534  00A1                     flag_read@port:	
   535                           ; 1 bytes @ 0x1
   536                           
   537                           
   538                           ; 1 bytes @ 0x1
   539  00A1                     	ds	1
   540  00A2                     ??_ringbuf_init:	
   541  00A2                     ??_I2C_Stop:	
   542                           ; 0 bytes @ 0x2
   543                           
   544  00A2                     ??_I2C_Send:	
   545                           ; 0 bytes @ 0x2
   546                           
   547  00A2                     ??_I2C_Receive:	
   548                           ; 0 bytes @ 0x2
   549                           
   550  00A2                     ?_I2C_Start:	
   551                           ; 0 bytes @ 0x2
   552                           
   553  00A2                     ?_I2C_rStart:	
   554                           ; 1 bytes @ 0x2
   555                           
   556  00A2                     I2C_Start@rw:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  00A2                     I2C_Send@data:	
   560                           ; 1 bytes @ 0x2
   561                           
   562  00A2                     flag_clear@port:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  00A2                     I2C_rStart@adrs:	
   566                           ; 1 bytes @ 0x2
   567                           
   568                           
   569                           ; 2 bytes @ 0x2
   570  00A2                     	ds	1
   571  00A3                     ??_I2C_Start:	
   572  00A3                     ringbuf_init@rb:	
   573                           ; 0 bytes @ 0x3
   574                           
   575  00A3                     I2C_Start@adrs:	
   576                           ; 1 bytes @ 0x3
   577                           
   578  00A3                     I2C_Receive@ack:	
   579                           ; 1 bytes @ 0x3
   580                           
   581                           
   582                           ; 1 bytes @ 0x3
   583  00A3                     	ds	1
   584  00A4                     ??_LCD_Command:	
   585  00A4                     I2C_Receive@data:	
   586                           ; 0 bytes @ 0x4
   587                           
   588  00A4                     I2C_rStart@rw:	
   589                           ; 1 bytes @ 0x4
   590                           
   591                           
   592                           ; 2 bytes @ 0x4
   593  00A4                     	ds	1
   594  00A5                     LCD_Command@c:	
   595                           
   596                           ; 1 bytes @ 0x5
   597  00A5                     	ds	1
   598  00A6                     ??_I2C_rStart:	
   599  00A6                     ?_EEP_Read:	
   600                           ; 0 bytes @ 0x6
   601                           
   602  00A6                     LCD_Command@ans:	
   603                           ; 1 bytes @ 0x6
   604                           
   605  00A6                     EEP_Read@Reg_l:	
   606                           ; 1 bytes @ 0x6
   607                           
   608                           
   609                           ; 1 bytes @ 0x6
   610  00A6                     	ds	1
   611  00A7                     ??_LCD_Clear:	
   612  00A7                     ??_EEP_Read:	
   613                           ; 0 bytes @ 0x7
   614                           
   615                           
   616                           ; 0 bytes @ 0x7
   617  00A7                     	ds	1
   618  00A8                     EEP_Read@Reg_h:	
   619                           
   620                           ; 1 bytes @ 0x8
   621  00A8                     	ds	1
   622  00A9                     ??_LCD_init:	
   623  00A9                     EEP_Read@data:	
   624                           ; 0 bytes @ 0x9
   625                           
   626                           
   627                           ; 1 bytes @ 0x9
   628  00A9                     	ds	1
   629  00AA                     EEP_Read@ans:	
   630                           
   631                           ; 1 bytes @ 0xA
   632  00AA                     	ds	2
   633  00AC                     ??_main_init:	
   634  00AC                     ??_main:	
   635                           ; 0 bytes @ 0xC
   636                           
   637                           
   638                           ; 0 bytes @ 0xC
   639  00AC                     	ds	30
   640                           
   641                           	psect	cstackCOMMON
   642  0070                     __pcstackCOMMON:	
   643  0070                     ?_lchika:	
   644  0070                     ?_timer0_init:	
   645                           ; 0 bytes @ 0x0
   646                           
   647  0070                     ?_timer1_init:	
   648                           ; 0 bytes @ 0x0
   649                           
   650  0070                     ?_adc_init:	
   651                           ; 0 bytes @ 0x0
   652                           
   653  0070                     ?_button_timer_interrupt:	
   654                           ; 0 bytes @ 0x0
   655                           
   656  0070                     ??_ringbuf_pop:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0070                     ??_ringbuf_num:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0070                     ?_I2C_IdleCheck:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_init:	
   666                           ; 0 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_Stop:	
   669                           ; 0 bytes @ 0x0
   670                           
   671  0070                     ?_LCD_Command:	
   672                           ; 0 bytes @ 0x0
   673                           
   674  0070                     ?_LCD_Clear:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_LCD_Putc:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ?_LCD_init:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_isr:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ?_main_init:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?i1_I2C_IdleCheck:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ??i1_I2C_IdleCheck:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?i1_I2C_Stop:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?i1_LCD_Command:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?i1_LCD_Clear:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?i1_OUT:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?i1_LED:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_ringbuf_pop:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?_ringbuf_num:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_I2C_Send:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_I2C_Receive:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?i1_I2C_Send:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_adc:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_main:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0070                     ?___awdiv:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0070                     ?___lwmod:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0070                     ?___almod:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0070                     ?___lldiv:	
   741                           ; 4 bytes @ 0x0
   742                           
   743  0070                     button_timer_interrupt@sw_value:	
   744                           ; 4 bytes @ 0x0
   745                           
   746  0070                     i1OUT@value:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     i1LED@value:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ___awdiv@divisor:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ___lwmod@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758  0070                     ___almod@divisor:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0070                     ___lldiv@divisor:	
   762                           ; 4 bytes @ 0x0
   763                           
   764                           
   765                           ; 4 bytes @ 0x0
   766  0070                     	ds	1
   767  0071                     ??_button_timer_interrupt:	
   768  0071                     ??i1_OUT:	
   769                           ; 0 bytes @ 0x1
   770                           
   771  0071                     ??i1_LED:	
   772                           ; 0 bytes @ 0x1
   773                           
   774  0071                     ringbuf_num@rb:	
   775                           ; 0 bytes @ 0x1
   776                           
   777  0071                     i1I2C_IdleCheck@mask:	
   778                           ; 1 bytes @ 0x1
   779                           
   780  0071                     i1OUT@b:	
   781                           ; 1 bytes @ 0x1
   782                           
   783  0071                     i1LED@b:	
   784                           ; 1 bytes @ 0x1
   785                           
   786                           
   787                           ; 1 bytes @ 0x1
   788  0071                     	ds	1
   789  0072                     ??_adc:	
   790  0072                     ??i1_I2C_Stop:	
   791                           ; 0 bytes @ 0x2
   792                           
   793  0072                     ??i1_I2C_Send:	
   794                           ; 0 bytes @ 0x2
   795                           
   796  0072                     ?i1_I2C_Start:	
   797                           ; 0 bytes @ 0x2
   798                           
   799  0072                     ringbuf_pop@ret:	
   800                           ; 1 bytes @ 0x2
   801                           
   802  0072                     i1I2C_Start@rw:	
   803                           ; 1 bytes @ 0x2
   804                           
   805  0072                     i1I2C_Send@data:	
   806                           ; 1 bytes @ 0x2
   807                           
   808  0072                     ___awdiv@dividend:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0072                     ___lwmod@dividend:	
   812                           ; 2 bytes @ 0x2
   813                           
   814                           
   815                           ; 2 bytes @ 0x2
   816  0072                     	ds	1
   817  0073                     ??i1_I2C_Start:	
   818  0073                     adc@ch:	
   819                           ; 0 bytes @ 0x3
   820                           
   821  0073                     button_timer_interrupt@bt:	
   822                           ; 1 bytes @ 0x3
   823                           
   824  0073                     ringbuf_pop@rb:	
   825                           ; 1 bytes @ 0x3
   826                           
   827  0073                     i1I2C_Start@adrs:	
   828                           ; 1 bytes @ 0x3
   829                           
   830                           
   831                           ; 1 bytes @ 0x3
   832  0073                     	ds	1
   833  0074                     ??_LCD_Putc:	
   834  0074                     ?_LCD_Puts:	
   835                           ; 0 bytes @ 0x4
   836                           
   837  0074                     ?_EEP_Write:	
   838                           ; 0 bytes @ 0x4
   839                           
   840  0074                     ??___awdiv:	
   841                           ; 0 bytes @ 0x4
   842                           
   843  0074                     ??___lwmod:	
   844                           ; 0 bytes @ 0x4
   845                           
   846  0074                     ??i1_LCD_Command:	
   847                           ; 0 bytes @ 0x4
   848                           
   849  0074                     ?___wmul:	
   850                           ; 0 bytes @ 0x4
   851                           
   852  0074                     EEP_Write@Reg_l:	
   853                           ; 2 bytes @ 0x4
   854                           
   855  0074                     LCD_Puts@s:	
   856                           ; 1 bytes @ 0x4
   857                           
   858  0074                     ___wmul@multiplier:	
   859                           ; 2 bytes @ 0x4
   860                           
   861  0074                     ___almod@dividend:	
   862                           ; 2 bytes @ 0x4
   863                           
   864  0074                     ___lldiv@dividend:	
   865                           ; 4 bytes @ 0x4
   866                           
   867                           
   868                           ; 4 bytes @ 0x4
   869  0074                     	ds	1
   870  0075                     LCD_Putc@c:	
   871  0075                     EEP_Write@data:	
   872                           ; 1 bytes @ 0x5
   873                           
   874  0075                     ___awdiv@counter:	
   875                           ; 1 bytes @ 0x5
   876                           
   877  0075                     ___lwmod@counter:	
   878                           ; 1 bytes @ 0x5
   879                           
   880  0075                     i1LCD_Command@c:	
   881                           ; 1 bytes @ 0x5
   882                           
   883                           
   884                           ; 1 bytes @ 0x5
   885  0075                     	ds	1
   886  0076                     ??_LCD_Puts:	
   887  0076                     ??_EEP_Write:	
   888                           ; 0 bytes @ 0x6
   889                           
   890  0076                     ?___lwdiv:	
   891                           ; 0 bytes @ 0x6
   892                           
   893  0076                     LCD_Putc@ans:	
   894                           ; 2 bytes @ 0x6
   895                           
   896  0076                     ___awdiv@sign:	
   897                           ; 1 bytes @ 0x6
   898                           
   899  0076                     i1LCD_Command@ans:	
   900                           ; 1 bytes @ 0x6
   901                           
   902  0076                     ___wmul@multiplicand:	
   903                           ; 1 bytes @ 0x6
   904                           
   905  0076                     ___lwdiv@divisor:	
   906                           ; 2 bytes @ 0x6
   907                           
   908                           
   909                           ; 2 bytes @ 0x6
   910  0076                     	ds	1
   911  0077                     ?_LCD_SetCursor:	
   912  0077                     ??i1_LCD_Clear:	
   913                           ; 0 bytes @ 0x7
   914                           
   915  0077                     LCD_SetCursor@row:	
   916                           ; 0 bytes @ 0x7
   917                           
   918  0077                     EEP_Write@Reg_h:	
   919                           ; 1 bytes @ 0x7
   920                           
   921  0077                     ___awdiv@quotient:	
   922                           ; 1 bytes @ 0x7
   923                           
   924                           
   925                           ; 2 bytes @ 0x7
   926  0077                     	ds	1
   927  0078                     ??_LCD_SetCursor:	
   928  0078                     ??___wmul:	
   929                           ; 0 bytes @ 0x8
   930                           
   931  0078                     ??___almod:	
   932                           ; 0 bytes @ 0x8
   933                           
   934  0078                     ??___lldiv:	
   935                           ; 0 bytes @ 0x8
   936                           
   937  0078                     EEP_Write@ans:	
   938                           ; 0 bytes @ 0x8
   939                           
   940  0078                     LCD_SetCursor@row_offsets:	
   941                           ; 1 bytes @ 0x8
   942                           
   943  0078                     LCD_Puts@ans:	
   944                           ; 2 bytes @ 0x8
   945                           
   946  0078                     ___wmul@product:	
   947                           ; 2 bytes @ 0x8
   948                           
   949  0078                     ___lwdiv@dividend:	
   950                           ; 2 bytes @ 0x8
   951                           
   952                           
   953                           ; 2 bytes @ 0x8
   954  0078                     	ds	1
   955  0079                     ___almod@counter:	
   956  0079                     ___lldiv@quotient:	
   957                           ; 1 bytes @ 0x9
   958                           
   959                           
   960                           ; 4 bytes @ 0x9
   961  0079                     	ds	1
   962  007A                     ??___lwdiv:	
   963  007A                     LCD_SetCursor@col:	
   964                           ; 0 bytes @ 0xA
   965                           
   966  007A                     ___almod@sign:	
   967                           ; 1 bytes @ 0xA
   968                           
   969                           
   970                           ; 1 bytes @ 0xA
   971  007A                     	ds	1
   972  007B                     ??___aldiv:	
   973  007B                     ___lwdiv@quotient:	
   974                           ; 0 bytes @ 0xB
   975                           
   976                           
   977                           ; 2 bytes @ 0xB
   978  007B                     	ds	2
   979  007D                     ___lldiv@counter:	
   980  007D                     ___lwdiv@counter:	
   981                           ; 1 bytes @ 0xD
   982                           
   983                           
   984                           ; 1 bytes @ 0xD
   985  007D                     	ds	1
   986                           
   987                           	psect	cstackBANK0
   988  0047                     __pcstackBANK0:	
   989  0047                     ??_lchika:	
   990  0047                     ?___aldiv:	
   991                           ; 0 bytes @ 0x0
   992                           
   993  0047                     ___aldiv@divisor:	
   994                           ; 4 bytes @ 0x0
   995                           
   996                           
   997                           ; 4 bytes @ 0x0
   998  0047                     	ds	4
   999  004B                     lchika@i:	
  1000  004B                     ___aldiv@dividend:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x4
  1005  004B                     	ds	4
  1006  004F                     ___aldiv@counter:	
  1007                           
  1008                           ; 1 bytes @ 0x8
  1009  004F                     	ds	1
  1010  0050                     ___aldiv@sign:	
  1011                           
  1012                           ; 1 bytes @ 0x9
  1013  0050                     	ds	1
  1014  0051                     ___aldiv@quotient:	
  1015                           
  1016                           ; 4 bytes @ 0xA
  1017  0051                     	ds	4
  1018  0055                     ?_display:	
  1019  0055                     display@co:	
  1020                           ; 0 bytes @ 0xE
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xE
  1024  0055                     	ds	1
  1025  0056                     ??_display:	
  1026                           
  1027                           ; 0 bytes @ 0xF
  1028  0056                     	ds	2
  1029  0058                     display@i:	
  1030                           
  1031                           ; 1 bytes @ 0x11
  1032  0058                     	ds	1
  1033  0059                     ??_isr:	
  1034                           
  1035                           ; 0 bytes @ 0x12
  1036  0059                     	ds	8
  1037  0061                     isr@i:	
  1038                           
  1039                           ; 1 bytes @ 0x1A
  1040  0061                     	ds	1
  1041                           
  1042                           	psect	maintext
  1043  0234                     __pmaintext:	
  1044 ;;
  1045 ;;Main: autosize = 0, tempsize = 30, incstack = 0, save=0
  1046 ;;
  1047 ;; *************** function _main *****************
  1048 ;; Defined at:
  1049 ;;		line 307 in file "PIC16F1827-ChargeStation4-01.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  data_3          1   53[BANK2 ] unsigned char 
  1054 ;;  data_2          1   52[BANK2 ] unsigned char 
  1055 ;;  data_1          1   51[BANK2 ] unsigned char 
  1056 ;;  data_0          1   50[BANK2 ] unsigned char 
  1057 ;;  ringbuf        50    0[BANK2 ] unsigned char [50]
  1058 ;;  i               1   54[BANK2 ] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2  398[None  ] int 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : B1F/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1068 ;;      Params:         0       0       0       0       0       0
  1069 ;;      Locals:         0       0       0      55       0       0
  1070 ;;      Temps:          0       0      30       0       0       0
  1071 ;;      Totals:         0       0      30      55       0       0
  1072 ;;Total ram usage:       85 bytes
  1073 ;; Hardware stack levels required when called:   12
  1074 ;; This function calls:
  1075 ;;		_EEP_Read
  1076 ;;		_LED
  1077 ;;		_OUT
  1078 ;;		_flag_clear
  1079 ;;		_flag_read
  1080 ;;		_main_init
  1081 ;;		_ringbuf_init
  1082 ;; This function is called by:
  1083 ;;		Startup code after reset
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _main
  1089  0234                     _main:	
  1090                           
  1091                           ;PIC16F1827-ChargeStation4-01.c: 308: main_init();
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1095  0234  318C  24C4  3182   	fcall	_main_init
  1096                           
  1097                           ;PIC16F1827-ChargeStation4-01.c: 310: OUT(0, 1);
  1098  0237  0021               	movlb	1	; select bank1
  1099  0238  01A0               	clrf	OUT@value^(0+128)
  1100  0239  0AA0               	incf	OUT@value^(0+128),f
  1101  023A  3000               	movlw	0
  1102  023B  318D  25AE  3182   	fcall	_OUT
  1103                           
  1104                           ;PIC16F1827-ChargeStation4-01.c: 311: OUT(1, 1);
  1105  023E  0021               	movlb	1	; select bank1
  1106  023F  01A0               	clrf	OUT@value^(0+128)
  1107  0240  0AA0               	incf	OUT@value^(0+128),f
  1108  0241  3001               	movlw	1
  1109  0242  318D  25AE  3182   	fcall	_OUT
  1110                           
  1111                           ;PIC16F1827-ChargeStation4-01.c: 312: OUT(2, 1);
  1112  0245  0021               	movlb	1	; select bank1
  1113  0246  01A0               	clrf	OUT@value^(0+128)
  1114  0247  0AA0               	incf	OUT@value^(0+128),f
  1115  0248  3002               	movlw	2
  1116  0249  318D  25AE  3182   	fcall	_OUT
  1117                           
  1118                           ;PIC16F1827-ChargeStation4-01.c: 313: LED(0, 1);
  1119  024C  0021               	movlb	1	; select bank1
  1120  024D  01A0               	clrf	LED@value^(0+128)
  1121  024E  0AA0               	incf	LED@value^(0+128),f
  1122  024F  3000               	movlw	0
  1123  0250  318D  2531  3182   	fcall	_LED
  1124                           
  1125                           ;PIC16F1827-ChargeStation4-01.c: 314: LED(1, 1);
  1126  0253  0021               	movlb	1	; select bank1
  1127  0254  01A0               	clrf	LED@value^(0+128)
  1128  0255  0AA0               	incf	LED@value^(0+128),f
  1129  0256  3001               	movlw	1
  1130  0257  318D  2531  3182   	fcall	_LED
  1131                           
  1132                           ;PIC16F1827-ChargeStation4-01.c: 315: LED(2, 1);
  1133  025A  0021               	movlb	1	; select bank1
  1134  025B  01A0               	clrf	LED@value^(0+128)
  1135  025C  0AA0               	incf	LED@value^(0+128),f
  1136  025D  3002               	movlw	2
  1137  025E  318D  2531  3182   	fcall	_LED
  1138                           
  1139                           ;PIC16F1827-ChargeStation4-01.c: 317: uint8_t ringbuf[50];
  1140                           ;PIC16F1827-ChargeStation4-01.c: 318: ringbuf_init(&tx_buf, ringbuf, sizeof (ringbuf));
  1141  0261  3020               	movlw	(low (main@ringbuf| (0+256)))& (0+255)
  1142  0262  0021               	movlb	1	; select bank1
  1143  0263  00AC               	movwf	??_main^(0+128)
  1144  0264  082C               	movf	??_main^(0+128),w
  1145  0265  00A0               	movwf	ringbuf_init@internal_buf^(0+128)
  1146  0266  3032               	movlw	50
  1147  0267  00AD               	movwf	(??_main+1)^(0+128)
  1148  0268  082D               	movf	(??_main+1)^(0+128),w
  1149  0269  00A1               	movwf	ringbuf_init@bufsize^(0+128)
  1150  026A  305D               	movlw	(low (_tx_buf| (0+256)))& (0+255)
  1151  026B  318C  2425  3182   	fcall	_ringbuf_init
  1152                           
  1153                           ;PIC16F1827-ChargeStation4-01.c: 320: uint8_t i;
  1154                           ;PIC16F1827-ChargeStation4-01.c: 321: for (i = 0; i < 3; i++) {
  1155  026E  0022               	movlb	2	; select bank2
  1156  026F  01D6               	clrf	main@i^(0+256)
  1157  0270  3003               	movlw	3
  1158  0271  0256               	subwf	main@i^(0+256),w
  1159  0272  1803               	btfsc	3,0
  1160  0273  2B60               	goto	l400
  1161  0274                     l3197:	
  1162                           
  1163                           ;PIC16F1827-ChargeStation4-01.c: 322: uint8_t data_0 = EEP_Read(i, 0);
  1164  0274  0021               	movlb	1	; select bank1
  1165  0275  01A6               	clrf	EEP_Read@Reg_l^(0+128)
  1166  0276  0022               	movlb	2	; select bank2
  1167  0277  0856               	movf	main@i^(0+256),w
  1168  0278  318E  2670  3182   	fcall	_EEP_Read
  1169  027B  0021               	movlb	1	; select bank1
  1170  027C  00AC               	movwf	??_main^(0+128)
  1171  027D  082C               	movf	??_main^(0+128),w
  1172  027E  0022               	movlb	2	; select bank2
  1173  027F  00D2               	movwf	main@data_0^(0+256)
  1174                           
  1175                           ;PIC16F1827-ChargeStation4-01.c: 323: _delay((unsigned long)((1)*(32000000/4000.0)));
  1176  0280  300B               	movlw	11
  1177  0281  0021               	movlb	1	; select bank1
  1178  0282  00AD               	movwf	(??_main^(0+128)+1)
  1179  0283  3062               	movlw	98
  1180  0284  00AC               	movwf	??_main^(0+128)
  1181  0285                     u3647:	
  1182  0285  0BAC               	decfsz	??_main^(0+128),f
  1183  0286  2A85               	goto	u3647
  1184  0287  0BAD               	decfsz	(??_main^(0+128)+1),f
  1185  0288  2A85               	goto	u3647
  1186  0289  0000               	nop
  1187                           
  1188                           ;PIC16F1827-ChargeStation4-01.c: 324: uint8_t data_1 = EEP_Read(i, 1);
  1189  028A  0021               	movlb	1	; select bank1
  1190  028B  01A6               	clrf	EEP_Read@Reg_l^(0+128)
  1191  028C  0AA6               	incf	EEP_Read@Reg_l^(0+128),f
  1192  028D  0022               	movlb	2	; select bank2
  1193  028E  0856               	movf	main@i^(0+256),w
  1194  028F  318E  2670  3182   	fcall	_EEP_Read
  1195  0292  0021               	movlb	1	; select bank1
  1196  0293  00AC               	movwf	??_main^(0+128)
  1197  0294  082C               	movf	??_main^(0+128),w
  1198  0295  0022               	movlb	2	; select bank2
  1199  0296  00D3               	movwf	main@data_1^(0+256)
  1200                           
  1201                           ;PIC16F1827-ChargeStation4-01.c: 325: _delay((unsigned long)((1)*(32000000/4000.0)));
  1202  0297  300B               	movlw	11
  1203  0298  0021               	movlb	1	; select bank1
  1204  0299  00AD               	movwf	(??_main^(0+128)+1)
  1205  029A  3062               	movlw	98
  1206  029B  00AC               	movwf	??_main^(0+128)
  1207  029C                     u3657:	
  1208  029C  0BAC               	decfsz	??_main^(0+128),f
  1209  029D  2A9C               	goto	u3657
  1210  029E  0BAD               	decfsz	(??_main^(0+128)+1),f
  1211  029F  2A9C               	goto	u3657
  1212  02A0  0000               	nop
  1213                           
  1214                           ;PIC16F1827-ChargeStation4-01.c: 326: uint8_t data_2 = EEP_Read(i, 2);
  1215  02A1  3002               	movlw	2
  1216  02A2  0021               	movlb	1	; select bank1
  1217  02A3  00AC               	movwf	??_main^(0+128)
  1218  02A4  082C               	movf	??_main^(0+128),w
  1219  02A5  00A6               	movwf	EEP_Read@Reg_l^(0+128)
  1220  02A6  0022               	movlb	2	; select bank2
  1221  02A7  0856               	movf	main@i^(0+256),w
  1222  02A8  318E  2670  3182   	fcall	_EEP_Read
  1223  02AB  0021               	movlb	1	; select bank1
  1224  02AC  00AD               	movwf	(??_main+1)^(0+128)
  1225  02AD  082D               	movf	(??_main+1)^(0+128),w
  1226  02AE  0022               	movlb	2	; select bank2
  1227  02AF  00D4               	movwf	main@data_2^(0+256)
  1228                           
  1229                           ;PIC16F1827-ChargeStation4-01.c: 327: _delay((unsigned long)((1)*(32000000/4000.0)));
  1230  02B0  300B               	movlw	11
  1231  02B1  0021               	movlb	1	; select bank1
  1232  02B2  00AD               	movwf	(??_main^(0+128)+1)
  1233  02B3  3062               	movlw	98
  1234  02B4  00AC               	movwf	??_main^(0+128)
  1235  02B5                     u3667:	
  1236  02B5  0BAC               	decfsz	??_main^(0+128),f
  1237  02B6  2AB5               	goto	u3667
  1238  02B7  0BAD               	decfsz	(??_main^(0+128)+1),f
  1239  02B8  2AB5               	goto	u3667
  1240  02B9  0000               	nop
  1241                           
  1242                           ;PIC16F1827-ChargeStation4-01.c: 328: uint8_t data_3 = EEP_Read(i, 3);
  1243  02BA  3003               	movlw	3
  1244  02BB  0021               	movlb	1	; select bank1
  1245  02BC  00AC               	movwf	??_main^(0+128)
  1246  02BD  082C               	movf	??_main^(0+128),w
  1247  02BE  00A6               	movwf	EEP_Read@Reg_l^(0+128)
  1248  02BF  0022               	movlb	2	; select bank2
  1249  02C0  0856               	movf	main@i^(0+256),w
  1250  02C1  318E  2670  3182   	fcall	_EEP_Read
  1251  02C4  0021               	movlb	1	; select bank1
  1252  02C5  00AD               	movwf	(??_main+1)^(0+128)
  1253  02C6  082D               	movf	(??_main+1)^(0+128),w
  1254  02C7  0022               	movlb	2	; select bank2
  1255  02C8  00D5               	movwf	main@data_3^(0+256)
  1256                           
  1257                           ;PIC16F1827-ChargeStation4-01.c: 329: _delay((unsigned long)((1)*(32000000/4000.0)));
  1258  02C9  300B               	movlw	11
  1259  02CA  0021               	movlb	1	; select bank1
  1260  02CB  00AD               	movwf	(??_main^(0+128)+1)
  1261  02CC  3062               	movlw	98
  1262  02CD  00AC               	movwf	??_main^(0+128)
  1263  02CE                     u3677:	
  1264  02CE  0BAC               	decfsz	??_main^(0+128),f
  1265  02CF  2ACE               	goto	u3677
  1266  02D0  0BAD               	decfsz	(??_main^(0+128)+1),f
  1267  02D1  2ACE               	goto	u3677
  1268  02D2  0000               	nop
  1269                           
  1270                           ;PIC16F1827-ChargeStation4-01.c: 330: ss[i] = (0xFF000000 & ((uint32_t) data_0 << 24)) +
      +                          (0xFF0000 & ((uint32_t) data_1 << 16))+ (0xFF00 & (data_2 << 8))+ (0xFF & (data_3 << 0))
      +                          ;
  1271  02D3  0022               	movlb	2	; select bank2
  1272  02D4  0855               	movf	main@data_3^(0+256),w
  1273  02D5  0021               	movlb	1	; select bank1
  1274  02D6  00AC               	movwf	??_main^(0+128)
  1275  02D7  01AD               	clrf	(??_main^(0+128)+1)
  1276  02D8  01AE               	clrf	(??_main^(0+128)+2)
  1277  02D9  01AF               	clrf	(??_main^(0+128)+3)
  1278  02DA  0022               	movlb	2	; select bank2
  1279  02DB  0854               	movf	main@data_2^(0+256),w
  1280  02DC  0021               	movlb	1	; select bank1
  1281  02DD  00B0               	movwf	(??_main+4)^(0+128)
  1282  02DE  01B1               	clrf	((??_main+4)^(0+128)+1)
  1283  02DF  0830               	movf	(??_main+4)^(0+128),w
  1284  02E0  00B1               	movwf	((??_main+4)^(0+128)+1)
  1285  02E1  01B0               	clrf	(??_main+4)^(0+128)
  1286  02E2  3000               	movlw	0
  1287  02E3  0530               	andwf	(??_main+4)^(0+128),w
  1288  02E4  00B3               	movwf	(??_main+7)^(0+128)
  1289  02E5  30FF               	movlw	255
  1290  02E6  0531               	andwf	(??_main+5)^(0+128),w
  1291  02E7  00B4               	movwf	(??_main+8)^(0+128)
  1292  02E8  0833               	movf	(??_main+7)^(0+128),w
  1293  02E9  00B5               	movwf	(??_main+9)^(0+128)
  1294  02EA  0834               	movf	(??_main+8)^(0+128),w
  1295  02EB  00B6               	movwf	((??_main+9)^(0+128)+1)
  1296  02EC  01B7               	clrf	((??_main+9)^(0+128)+2)
  1297  02ED  01B8               	clrf	((??_main+9)^(0+128)+3)
  1298  02EE  3000               	movlw	0
  1299  02EF  00B9               	movwf	(??_main+13)^(0+128)
  1300  02F0  3000               	movlw	0
  1301  02F1  00BA               	movwf	((??_main+13)^(0+128)+1)
  1302  02F2  30FF               	movlw	255
  1303  02F3  00BB               	movwf	((??_main+13)^(0+128)+2)
  1304  02F4  3000               	movlw	0
  1305  02F5  00BC               	movwf	((??_main+13)^(0+128)+3)
  1306  02F6  0022               	movlb	2	; select bank2
  1307  02F7  0853               	movf	main@data_1^(0+256),w
  1308  02F8  0021               	movlb	1	; select bank1
  1309  02F9  00BD               	movwf	(??_main+17)^(0+128)
  1310  02FA  01BE               	clrf	((??_main+17)^(0+128)+1)
  1311  02FB  01BF               	clrf	((??_main+17)^(0+128)+2)
  1312  02FC  01C0               	clrf	((??_main+17)^(0+128)+3)
  1313  02FD  3010               	movlw	16
  1314  02FE                     u3515:	
  1315  02FE  35BD               	lslf	(??_main+17)^(0+128),f
  1316  02FF  0DBE               	rlf	((??_main+17)^(0+128)+1),f
  1317  0300  0DBF               	rlf	((??_main+17)^(0+128)+2),f
  1318  0301  0DC0               	rlf	((??_main+17)^(0+128)+3),f
  1319  0302  0B89               	decfsz	9,f
  1320  0303  2AFE               	goto	u3515
  1321  0304  083D               	movf	(??_main+17)^(0+128),w
  1322  0305  05B9               	andwf	(??_main+13)^(0+128),f
  1323  0306  083E               	movf	(??_main+18)^(0+128),w
  1324  0307  05BA               	andwf	((??_main+13)^(0+128)+1),f
  1325  0308  083F               	movf	(??_main+19)^(0+128),w
  1326  0309  05BB               	andwf	((??_main+13)^(0+128)+2),f
  1327  030A  0840               	movf	(??_main+20)^(0+128),w
  1328  030B  05BC               	andwf	((??_main+13)^(0+128)+3),f
  1329  030C  3000               	movlw	0
  1330  030D  00C1               	movwf	(??_main+21)^(0+128)
  1331  030E  3000               	movlw	0
  1332  030F  00C2               	movwf	((??_main+21)^(0+128)+1)
  1333  0310  3000               	movlw	0
  1334  0311  00C3               	movwf	((??_main+21)^(0+128)+2)
  1335  0312  30FF               	movlw	255
  1336  0313  00C4               	movwf	((??_main+21)^(0+128)+3)
  1337  0314  0022               	movlb	2	; select bank2
  1338  0315  0852               	movf	main@data_0^(0+256),w
  1339  0316  0021               	movlb	1	; select bank1
  1340  0317  00C5               	movwf	(??_main+25)^(0+128)
  1341  0318  01C6               	clrf	((??_main+25)^(0+128)+1)
  1342  0319  01C7               	clrf	((??_main+25)^(0+128)+2)
  1343  031A  01C8               	clrf	((??_main+25)^(0+128)+3)
  1344  031B  3018               	movlw	24
  1345  031C                     u3525:	
  1346  031C  35C5               	lslf	(??_main+25)^(0+128),f
  1347  031D  0DC6               	rlf	((??_main+25)^(0+128)+1),f
  1348  031E  0DC7               	rlf	((??_main+25)^(0+128)+2),f
  1349  031F  0DC8               	rlf	((??_main+25)^(0+128)+3),f
  1350  0320  0B89               	decfsz	9,f
  1351  0321  2B1C               	goto	u3525
  1352  0322  0845               	movf	(??_main+25)^(0+128),w
  1353  0323  05C1               	andwf	(??_main+21)^(0+128),f
  1354  0324  0846               	movf	(??_main+26)^(0+128),w
  1355  0325  05C2               	andwf	((??_main+21)^(0+128)+1),f
  1356  0326  0847               	movf	(??_main+27)^(0+128),w
  1357  0327  05C3               	andwf	((??_main+21)^(0+128)+2),f
  1358  0328  0848               	movf	(??_main+28)^(0+128),w
  1359  0329  05C4               	andwf	((??_main+21)^(0+128)+3),f
  1360  032A  0841               	movf	(??_main+21)^(0+128),w
  1361  032B  07B9               	addwf	(??_main+13)^(0+128),f
  1362  032C  0842               	movf	(??_main+22)^(0+128),w
  1363  032D  3DBA               	addwfc	((??_main+13)^(0+128)+1),f
  1364  032E  0843               	movf	(??_main+23)^(0+128),w
  1365  032F  3DBB               	addwfc	((??_main+13)^(0+128)+2),f
  1366  0330  0844               	movf	(??_main+24)^(0+128),w
  1367  0331  3DBC               	addwfc	((??_main+13)^(0+128)+3),f
  1368  0332  0839               	movf	(??_main+13)^(0+128),w
  1369  0333  07B5               	addwf	(??_main+9)^(0+128),f
  1370  0334  083A               	movf	(??_main+14)^(0+128),w
  1371  0335  3DB6               	addwfc	((??_main+9)^(0+128)+1),f
  1372  0336  083B               	movf	(??_main+15)^(0+128),w
  1373  0337  3DB7               	addwfc	((??_main+9)^(0+128)+2),f
  1374  0338  083C               	movf	(??_main+16)^(0+128),w
  1375  0339  3DB8               	addwfc	((??_main+9)^(0+128)+3),f
  1376  033A  0835               	movf	(??_main+9)^(0+128),w
  1377  033B  07AC               	addwf	??_main^(0+128),f
  1378  033C  0836               	movf	(??_main+10)^(0+128),w
  1379  033D  3DAD               	addwfc	(??_main^(0+128)+1),f
  1380  033E  0837               	movf	(??_main+11)^(0+128),w
  1381  033F  3DAE               	addwfc	(??_main^(0+128)+2),f
  1382  0340  0838               	movf	(??_main+12)^(0+128),w
  1383  0341  3DAF               	addwfc	(??_main^(0+128)+3),f
  1384  0342  0022               	movlb	2	; select bank2
  1385  0343  0856               	movf	main@i^(0+256),w
  1386  0344  0021               	movlb	1	; select bank1
  1387  0345  00C9               	movwf	(??_main+29)^(0+128)
  1388  0346  3001               	movlw	1
  1389  0347                     u3535:	
  1390  0347  35C9               	lslf	(??_main+29)^(0+128),f
  1391  0348  3EFF               	addlw	-1
  1392  0349  1D03               	skipz
  1393  034A  2B47               	goto	u3535
  1394  034B  3549               	lslf	(??_main+29)^(0+128),w
  1395  034C  3E20               	addlw	(low (_ss| 0))& (0+255)
  1396  034D  0086               	movwf	6
  1397  034E  0187               	clrf	7
  1398  034F  082C               	movf	??_main^(0+128),w
  1399  0350  3FC0               	movwi [0]fsr1
  1400  0351  082D               	movf	(??_main+1)^(0+128),w
  1401  0352  3FC1               	movwi [1]fsr1
  1402  0353  082E               	movf	(??_main+2)^(0+128),w
  1403  0354  3FC2               	movwi [2]fsr1
  1404  0355  082F               	movf	(??_main+3)^(0+128),w
  1405  0356  3FC3               	movwi [3]fsr1
  1406  0357  3001               	movlw	1
  1407  0358  00AC               	movwf	??_main^(0+128)
  1408  0359  082C               	movf	??_main^(0+128),w
  1409  035A  0022               	movlb	2	; select bank2
  1410  035B  07D6               	addwf	main@i^(0+256),f
  1411  035C  3003               	movlw	3
  1412  035D  0256               	subwf	main@i^(0+256),w
  1413  035E  1C03               	skipc
  1414  035F  2A74               	goto	l3197
  1415  0360                     l400:	
  1416                           
  1417                           ;PIC16F1827-ChargeStation4-01.c: 331: }
  1418                           ;PIC16F1827-ChargeStation4-01.c: 333: INTCONbits.GIE = 1;
  1419  0360  178B               	bsf	11,7	;volatile
  1420  0361                     l3215:	
  1421                           ;PIC16F1827-ChargeStation4-01.c: 334: while (1) {
  1422                           
  1423                           
  1424                           ;PIC16F1827-ChargeStation4-01.c: 335: for (i = 0; i < 3; i++) {
  1425  0361  01D6               	clrf	main@i^(0+256)
  1426  0362                     L1:	
  1427  0362  3003               	movlw	3
  1428  0363  0256               	subwf	main@i^(0+256),w
  1429  0364  1803               	btfsc	3,0
  1430  0365  2B61               	goto	l3215
  1431                           
  1432                           ;PIC16F1827-ChargeStation4-01.c: 336: if (flag_read(i, 0x10)) {
  1433  0366  3010               	movlw	16
  1434  0367  0021               	movlb	1	; select bank1
  1435  0368  00AC               	movwf	??_main^(0+128)
  1436  0369  082C               	movf	??_main^(0+128),w
  1437  036A  00A0               	movwf	flag_read@bit_and^(0+128)
  1438  036B  0022               	movlb	2	; select bank2
  1439  036C  0856               	movf	main@i^(0+256),w
  1440  036D  318C  2484  3182   	fcall	_flag_read
  1441  0370  3A00               	xorlw	0
  1442  0371  1903               	skipnz
  1443  0372  2B8C               	goto	l3227
  1444                           
  1445                           ;PIC16F1827-ChargeStation4-01.c: 337: OUT(i, 1);
  1446  0373  0021               	movlb	1	; select bank1
  1447  0374  01A0               	clrf	OUT@value^(0+128)
  1448  0375  0AA0               	incf	OUT@value^(0+128),f
  1449  0376  0022               	movlb	2	; select bank2
  1450  0377  0856               	movf	main@i^(0+256),w
  1451  0378  318D  25AE  3182   	fcall	_OUT
  1452                           
  1453                           ;PIC16F1827-ChargeStation4-01.c: 338: LED(i, 1);
  1454  037B  0021               	movlb	1	; select bank1
  1455  037C  01A0               	clrf	LED@value^(0+128)
  1456  037D  0AA0               	incf	LED@value^(0+128),f
  1457  037E  0022               	movlb	2	; select bank2
  1458  037F  0856               	movf	main@i^(0+256),w
  1459  0380  318D  2531  3182   	fcall	_LED
  1460                           
  1461                           ;PIC16F1827-ChargeStation4-01.c: 339: cut[i] = 0;
  1462  0383  0022               	movlb	2	; select bank2
  1463  0384  3556               	lslf	main@i^(0+256),w
  1464  0385  3E57               	addlw	(low (_cut| (0+256)))& (0+255)
  1465  0386  0086               	movwf	6
  1466  0387  3001               	movlw	1	; select bank2/3
  1467  0388  0087               	movwf	7
  1468  0389  3000               	movlw	0
  1469  038A  3FC0               	movwi [0]fsr1
  1470  038B  3FC1               	movwi [1]fsr1
  1471  038C                     l3227:	
  1472                           
  1473                           ;PIC16F1827-ChargeStation4-01.c: 340: }
  1474                           ;PIC16F1827-ChargeStation4-01.c: 341: if (flag_read(i, 0x10)) {
  1475  038C  3010               	movlw	16
  1476  038D  0021               	movlb	1	; select bank1
  1477  038E  00AC               	movwf	??_main^(0+128)
  1478  038F  082C               	movf	??_main^(0+128),w
  1479  0390  00A0               	movwf	flag_read@bit_and^(0+128)
  1480  0391  0022               	movlb	2	; select bank2
  1481  0392  0856               	movf	main@i^(0+256),w
  1482  0393  318C  2484  3182   	fcall	_flag_read
  1483  0396  3A00               	xorlw	0
  1484  0397  1903               	skipnz
  1485  0398  2BBC               	goto	l3241
  1486                           
  1487                           ;PIC16F1827-ChargeStation4-01.c: 342: print_port = i;
  1488  0399  0022               	movlb	2	; select bank2
  1489  039A  0856               	movf	main@i^(0+256),w
  1490  039B  0021               	movlb	1	; select bank1
  1491  039C  00AC               	movwf	??_main^(0+128)
  1492  039D  082C               	movf	??_main^(0+128),w
  1493  039E  0020               	movlb	0	; select bank0
  1494  039F  00BD               	movwf	_print_port
  1495                           
  1496                           ;PIC16F1827-ChargeStation4-01.c: 343: if (print_content == 2) print_content = 1;
  1497  03A0  3002               	movlw	2
  1498  03A1  063C               	xorwf	_print_content,w
  1499  03A2  1D03               	btfss	3,2
  1500  03A3  2BA7               	goto	l3235
  1501  03A4  01BC               	clrf	_print_content
  1502  03A5  0ABC               	incf	_print_content,f
  1503  03A6  2BAD               	goto	l3237
  1504  03A7                     l3235:	
  1505                           
  1506                           ;PIC16F1827-ChargeStation4-01.c: 344: else print_content++;
  1507  03A7  3001               	movlw	1
  1508  03A8  0021               	movlb	1	; select bank1
  1509  03A9  00AC               	movwf	??_main^(0+128)
  1510  03AA  082C               	movf	??_main^(0+128),w
  1511  03AB  0020               	movlb	0	; select bank0
  1512  03AC  07BC               	addwf	_print_content,f
  1513  03AD                     l3237:	
  1514                           
  1515                           ;PIC16F1827-ChargeStation4-01.c: 345: LED(i, 1);
  1516  03AD  0021               	movlb	1	; select bank1
  1517  03AE  01A0               	clrf	LED@value^(0+128)
  1518  03AF  0AA0               	incf	LED@value^(0+128),f
  1519  03B0  0022               	movlb	2	; select bank2
  1520  03B1  0856               	movf	main@i^(0+256),w
  1521  03B2  318D  2531  3182   	fcall	_LED
  1522                           
  1523                           ;PIC16F1827-ChargeStation4-01.c: 346: flag_clear(i, 0x00);
  1524  03B5  0021               	movlb	1	; select bank1
  1525  03B6  01A0               	clrf	flag_clear@bit_and^(0+128)
  1526  03B7  0022               	movlb	2	; select bank2
  1527  03B8  0856               	movf	main@i^(0+256),w
  1528  03B9  318C  24E7  3182   	fcall	_flag_clear
  1529  03BC                     l3241:	
  1530                           
  1531                           ;PIC16F1827-ChargeStation4-01.c: 347: }
  1532                           ;PIC16F1827-ChargeStation4-01.c: 348: if (flag_read(i, 0x40)) {
  1533  03BC  3040               	movlw	64
  1534  03BD  0021               	movlb	1	; select bank1
  1535  03BE  00AC               	movwf	??_main^(0+128)
  1536  03BF  082C               	movf	??_main^(0+128),w
  1537  03C0  00A0               	movwf	flag_read@bit_and^(0+128)
  1538  03C1  0022               	movlb	2	; select bank2
  1539  03C2  0856               	movf	main@i^(0+256),w
  1540  03C3  318C  2484  3182   	fcall	_flag_read
  1541  03C6  3A00               	xorlw	0
  1542  03C7  1903               	skipnz
  1543  03C8  2BE0               	goto	l3251
  1544                           
  1545                           ;PIC16F1827-ChargeStation4-01.c: 349: print_port = i;
  1546  03C9  0022               	movlb	2	; select bank2
  1547  03CA  0856               	movf	main@i^(0+256),w
  1548  03CB  0021               	movlb	1	; select bank1
  1549  03CC  00AC               	movwf	??_main^(0+128)
  1550  03CD  082C               	movf	??_main^(0+128),w
  1551  03CE  0020               	movlb	0	; select bank0
  1552  03CF  00BD               	movwf	_print_port
  1553                           
  1554                           ;PIC16F1827-ChargeStation4-01.c: 350: print_content = 0;
  1555  03D0  01BC               	clrf	_print_content
  1556                           
  1557                           ;PIC16F1827-ChargeStation4-01.c: 351: LED(i, 1);
  1558  03D1  0021               	movlb	1	; select bank1
  1559  03D2  01A0               	clrf	LED@value^(0+128)
  1560  03D3  0AA0               	incf	LED@value^(0+128),f
  1561  03D4  0022               	movlb	2	; select bank2
  1562  03D5  0856               	movf	main@i^(0+256),w
  1563  03D6  318D  2531  3182   	fcall	_LED
  1564                           
  1565                           ;PIC16F1827-ChargeStation4-01.c: 352: flag_clear(i, 0x00);
  1566  03D9  0021               	movlb	1	; select bank1
  1567  03DA  01A0               	clrf	flag_clear@bit_and^(0+128)
  1568  03DB  0022               	movlb	2	; select bank2
  1569  03DC  0856               	movf	main@i^(0+256),w
  1570  03DD  318C  24E7  3182   	fcall	_flag_clear
  1571  03E0                     l3251:	
  1572                           
  1573                           ;PIC16F1827-ChargeStation4-01.c: 353: }
  1574                           ;PIC16F1827-ChargeStation4-01.c: 354: if (flag_read(i, 0x80)) {
  1575  03E0  3080               	movlw	128
  1576  03E1  0021               	movlb	1	; select bank1
  1577  03E2  00AC               	movwf	??_main^(0+128)
  1578  03E3  082C               	movf	??_main^(0+128),w
  1579  03E4  00A0               	movwf	flag_read@bit_and^(0+128)
  1580  03E5  0022               	movlb	2	; select bank2
  1581  03E6  0856               	movf	main@i^(0+256),w
  1582  03E7  318C  2484  3182   	fcall	_flag_read
  1583  03EA  3A00               	xorlw	0
  1584  03EB  1903               	skipnz
  1585  03EC  2C17               	goto	l3261
  1586                           
  1587                           ;PIC16F1827-ChargeStation4-01.c: 355: ss[i] = 0;
  1588  03ED  0022               	movlb	2	; select bank2
  1589  03EE  0856               	movf	main@i^(0+256),w
  1590  03EF  0021               	movlb	1	; select bank1
  1591  03F0  00AC               	movwf	??_main^(0+128)
  1592  03F1  3001               	movlw	1
  1593  03F2                     u3615:	
  1594  03F2  35AC               	lslf	??_main^(0+128),f
  1595  03F3  3EFF               	addlw	-1
  1596  03F4  1D03               	skipz
  1597  03F5  2BF2               	goto	u3615
  1598  03F6  352C               	lslf	??_main^(0+128),w
  1599  03F7  3E20               	addlw	(low (_ss| 0))& (0+255)
  1600  03F8  0086               	movwf	6
  1601  03F9  0187               	clrf	7
  1602  03FA  3000               	movlw	0
  1603  03FB  3FC0               	movwi [0]fsr1
  1604  03FC  3000               	movlw	0
  1605  03FD  3FC1               	movwi [1]fsr1
  1606  03FE  3FC2               	movwi [2]fsr1
  1607  03FF  3FC3               	movwi [3]fsr1
  1608                           
  1609                           ;PIC16F1827-ChargeStation4-01.c: 356: print_content = 3;
  1610  0400  3003               	movlw	3
  1611  0401  00AC               	movwf	??_main^(0+128)
  1612  0402  082C               	movf	??_main^(0+128),w
  1613  0403  0020               	movlb	0	; select bank0
  1614  0404  00BC               	movwf	_print_content
  1615                           
  1616                           ;PIC16F1827-ChargeStation4-01.c: 357: LED(i, 1);
  1617  0405  0021               	movlb	1	; select bank1
  1618  0406  01A0               	clrf	LED@value^(0+128)
  1619  0407  0AA0               	incf	LED@value^(0+128),f
  1620  0408  0022               	movlb	2	; select bank2
  1621  0409  0856               	movf	main@i^(0+256),w
  1622  040A  318D  2531  3182   	fcall	_LED
  1623                           
  1624                           ;PIC16F1827-ChargeStation4-01.c: 358: flag_clear(i, 0x08);
  1625  040D  3008               	movlw	8
  1626  040E  0021               	movlb	1	; select bank1
  1627  040F  00AC               	movwf	??_main^(0+128)
  1628  0410  082C               	movf	??_main^(0+128),w
  1629  0411  00A0               	movwf	flag_clear@bit_and^(0+128)
  1630  0412  0022               	movlb	2	; select bank2
  1631  0413  0856               	movf	main@i^(0+256),w
  1632  0414  318C  24E7  3182   	fcall	_flag_clear
  1633  0417                     l3261:	
  1634                           
  1635                           ;PIC16F1827-ChargeStation4-01.c: 359: }
  1636                           ;PIC16F1827-ChargeStation4-01.c: 360: if (flag_read(i, 0x08)) {
  1637  0417  3008               	movlw	8
  1638  0418  0021               	movlb	1	; select bank1
  1639  0419  00AC               	movwf	??_main^(0+128)
  1640  041A  082C               	movf	??_main^(0+128),w
  1641  041B  00A0               	movwf	flag_read@bit_and^(0+128)
  1642  041C  0022               	movlb	2	; select bank2
  1643  041D  0856               	movf	main@i^(0+256),w
  1644  041E  318C  2484  3182   	fcall	_flag_read
  1645  0421  3A00               	xorlw	0
  1646  0422  1903               	skipnz
  1647  0423  2C35               	goto	l3269
  1648                           
  1649                           ;PIC16F1827-ChargeStation4-01.c: 361: print_content = 0;
  1650  0424  0020               	movlb	0	; select bank0
  1651  0425  01BC               	clrf	_print_content
  1652                           
  1653                           ;PIC16F1827-ChargeStation4-01.c: 362: LED(i, 1);
  1654  0426  0021               	movlb	1	; select bank1
  1655  0427  01A0               	clrf	LED@value^(0+128)
  1656  0428  0AA0               	incf	LED@value^(0+128),f
  1657  0429  0022               	movlb	2	; select bank2
  1658  042A  0856               	movf	main@i^(0+256),w
  1659  042B  318D  2531  3182   	fcall	_LED
  1660                           
  1661                           ;PIC16F1827-ChargeStation4-01.c: 363: flag_clear(i, 0x00);
  1662  042E  0021               	movlb	1	; select bank1
  1663  042F  01A0               	clrf	flag_clear@bit_and^(0+128)
  1664  0430  0022               	movlb	2	; select bank2
  1665  0431  0856               	movf	main@i^(0+256),w
  1666  0432  318C  24E7  3182   	fcall	_flag_clear
  1667  0435                     l3269:	
  1668  0435  3001               	movlw	1
  1669  0436  0021               	movlb	1	; select bank1
  1670  0437  00AC               	movwf	??_main^(0+128)
  1671  0438  082C               	movf	??_main^(0+128),w
  1672  0439  0022               	movlb	2	; select bank2
  1673  043A  07D6               	addwf	main@i^(0+256),f
  1674  043B  2B62               	goto	L1
  1675  043C                     __end_of_main:	
  1676                           ;PIC16F1827-ChargeStation4-01.c: 364: }
  1677                           ;PIC16F1827-ChargeStation4-01.c: 365: }
  1678                           ;PIC16F1827-ChargeStation4-01.c: 366: }
  1679                           ;PIC16F1827-ChargeStation4-01.c: 367: return 0;
  1680                           ;	Return value of _main is never used
  1681                           
  1682                           
  1683                           	psect	text1
  1684  0C25                     __ptext1:	
  1685 ;; *************** function _ringbuf_init *****************
  1686 ;; Defined at:
  1687 ;;		line 113 in file "My_header_16F.h"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  rb              1    wreg     PTR struct ringbuf
  1690 ;;		 -> tx_buf(4), 
  1691 ;;  internal_buf    1    0[BANK1 ] PTR unsigned char 
  1692 ;;		 -> main@ringbuf(50), 
  1693 ;;  bufsize         1    1[BANK1 ] unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  rb              1    3[BANK1 ] PTR struct ringbuf
  1696 ;;		 -> tx_buf(4), 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;		None               void
  1699 ;; Registers used:
  1700 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1706 ;;      Params:         0       0       2       0       0       0
  1707 ;;      Locals:         0       0       1       0       0       0
  1708 ;;      Temps:          0       0       1       0       0       0
  1709 ;;      Totals:         0       0       4       0       0       0
  1710 ;;Total ram usage:        4 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    6
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _ringbuf_init
  1722  0C25                     _ringbuf_init:	
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  1726                           ;ringbuf_init@rb stored from wreg
  1727  0C25  0021               	movlb	1	; select bank1
  1728  0C26  00A3               	movwf	ringbuf_init@rb^(0+128)
  1729                           
  1730                           ;My_header_16F.h: 114: rb->buf = internal_buf;
  1731  0C27  0820               	movf	ringbuf_init@internal_buf^(0+128),w
  1732  0C28  00A2               	movwf	??_ringbuf_init^(0+128)
  1733  0C29  0823               	movf	ringbuf_init@rb^(0+128),w
  1734  0C2A  0086               	movwf	6
  1735  0C2B  3001               	movlw	1	; select bank2/3
  1736  0C2C  0087               	movwf	7
  1737  0C2D  0822               	movf	??_ringbuf_init^(0+128),w
  1738  0C2E  0081               	movwf	1
  1739                           
  1740                           ;My_header_16F.h: 115: rb->size = bufsize;
  1741  0C2F  0821               	movf	ringbuf_init@bufsize^(0+128),w
  1742  0C30  00A2               	movwf	??_ringbuf_init^(0+128)
  1743  0C31  0A23               	incf	ringbuf_init@rb^(0+128),w
  1744  0C32  0086               	movwf	6
  1745  0C33  3001               	movlw	1	; select bank2/3
  1746  0C34  0087               	movwf	7
  1747  0C35  0822               	movf	??_ringbuf_init^(0+128),w
  1748  0C36  0081               	movwf	1
  1749                           
  1750                           ;My_header_16F.h: 116: rb->head = 0;
  1751  0C37  0823               	movf	ringbuf_init@rb^(0+128),w
  1752  0C38  3E02               	addlw	2
  1753  0C39  0086               	movwf	6
  1754  0C3A  3001               	movlw	1	; select bank2/3
  1755  0C3B  0087               	movwf	7
  1756  0C3C  0181               	clrf	1
  1757                           
  1758                           ;My_header_16F.h: 117: rb->tail = 0;
  1759  0C3D  0823               	movf	ringbuf_init@rb^(0+128),w
  1760  0C3E  3E03               	addlw	3
  1761  0C3F  0086               	movwf	6
  1762  0C40  3001               	movlw	1	; select bank2/3
  1763  0C41  0087               	movwf	7
  1764  0C42  0181               	clrf	1
  1765  0C43  0008               	return
  1766  0C44                     __end_of_ringbuf_init:	
  1767                           
  1768                           	psect	text2
  1769  0CC4                     __ptext2:	
  1770 ;; *************** function _main_init *****************
  1771 ;; Defined at:
  1772 ;;		line 288 in file "PIC16F1827-ChargeStation4-01.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1786 ;;      Params:         0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:   11
  1793 ;; This function calls:
  1794 ;;		_I2C_init
  1795 ;;		_LCD_init
  1796 ;;		_adc_init
  1797 ;;		_timer0_init
  1798 ;;		_timer1_init
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _main_init
  1806  0CC4                     _main_init:	
  1807                           
  1808                           ;PIC16F1827-ChargeStation4-01.c: 289: OSCCON = 0x70;
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
  1812  0CC4  3070               	movlw	112
  1813  0CC5  0021               	movlb	1	; select bank1
  1814  0CC6  0099               	movwf	25	;volatile
  1815                           
  1816                           ;PIC16F1827-ChargeStation4-01.c: 290: TRISA = 0x3F;
  1817  0CC7  303F               	movlw	63
  1818  0CC8  008C               	movwf	12	;volatile
  1819                           
  1820                           ;PIC16F1827-ChargeStation4-01.c: 291: TRISB = 0x12;
  1821  0CC9  3012               	movlw	18
  1822  0CCA  008D               	movwf	13	;volatile
  1823                           
  1824                           ;PIC16F1827-ChargeStation4-01.c: 292: ANSELA = 0x07;
  1825  0CCB  3007               	movlw	7
  1826  0CCC  0023               	movlb	3	; select bank3
  1827  0CCD  008C               	movwf	12	;volatile
  1828                           
  1829                           ;PIC16F1827-ChargeStation4-01.c: 293: ANSELB = 0x00;
  1830  0CCE  018D               	clrf	13	;volatile
  1831                           
  1832                           ;PIC16F1827-ChargeStation4-01.c: 294: WPUB = 0b00010010;
  1833  0CCF  3012               	movlw	18
  1834  0CD0  0024               	movlb	4	; select bank4
  1835  0CD1  008D               	movwf	13	;volatile
  1836                           
  1837                           ;PIC16F1827-ChargeStation4-01.c: 295: OPTION_REGbits.nWPUEN = 0;
  1838  0CD2  0021               	movlb	1	; select bank1
  1839  0CD3  1395               	bcf	21,7	;volatile
  1840                           
  1841                           ;PIC16F1827-ChargeStation4-01.c: 297: adc_init(3);
  1842  0CD4  3003               	movlw	3
  1843  0CD5  318B  2327  318C   	fcall	_adc_init
  1844                           
  1845                           ;PIC16F1827-ChargeStation4-01.c: 298: timer0_init(4);
  1846  0CD8  3004               	movlw	4
  1847  0CD9  318B  233C  318C   	fcall	_timer0_init
  1848                           
  1849                           ;PIC16F1827-ChargeStation4-01.c: 299: timer1_init(2);
  1850  0CDC  3002               	movlw	2
  1851  0CDD  318B  2351  318C   	fcall	_timer1_init
  1852                           
  1853                           ;PIC16F1827-ChargeStation4-01.c: 301: I2C_init();
  1854  0CE0  318A  22BE  318C   	fcall	_I2C_init
  1855                           
  1856                           ;PIC16F1827-ChargeStation4-01.c: 302: LCD_init();
  1857  0CE3  318E  26AD         	fcall	_LCD_init
  1858                           
  1859                           ;PIC16F1827-ChargeStation4-01.c: 304: INTCONbits.PEIE = 1;
  1860  0CE5  170B               	bsf	11,6	;volatile
  1861  0CE6  0008               	return
  1862  0CE7                     __end_of_main_init:	
  1863                           
  1864                           	psect	text3
  1865  0B51                     __ptext3:	
  1866 ;; *************** function _timer1_init *****************
  1867 ;; Defined at:
  1868 ;;		line 29 in file "My_header_16F.h"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  prescaler       1    wreg     unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1882 ;;      Params:         0       0       0       0       0       0
  1883 ;;      Locals:         0       0       1       0       0       0
  1884 ;;      Temps:          0       0       1       0       0       0
  1885 ;;      Totals:         0       0       2       0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    6
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_main_init
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _timer1_init
  1898  0B51                     _timer1_init:	
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1902                           ;timer1_init@prescaler stored from wreg
  1903  0B51  0021               	movlb	1	; select bank1
  1904  0B52  00A1               	movwf	timer1_init@prescaler^(0+128)
  1905                           
  1906                           ;My_header_16F.h: 30: T1CONbits.TMR1ON = 1;
  1907  0B53  0020               	movlb	0	; select bank0
  1908  0B54  1418               	bsf	24,0	;volatile
  1909                           
  1910                           ;My_header_16F.h: 31: T1CONbits.TMR1CS = 0;
  1911  0B55  303F               	movlw	-193
  1912  0B56  0598               	andwf	24,f	;volatile
  1913                           
  1914                           ;My_header_16F.h: 32: T1CONbits.T1CKPS = prescaler;
  1915  0B57  0021               	movlb	1	; select bank1
  1916  0B58  0821               	movf	timer1_init@prescaler^(0+128),w
  1917  0B59  00A0               	movwf	??_timer1_init^(0+128)
  1918  0B5A  0EA0               	swapf	??_timer1_init^(0+128),f
  1919  0B5B  0020               	movlb	0	; select bank0
  1920  0B5C  0818               	movf	24,w	;volatile
  1921  0B5D  0021               	movlb	1	; select bank1
  1922  0B5E  0620               	xorwf	??_timer1_init^(0+128),w
  1923  0B5F  39CF               	andlw	-49
  1924  0B60  0620               	xorwf	??_timer1_init^(0+128),w
  1925  0B61  0020               	movlb	0	; select bank0
  1926  0B62  0098               	movwf	24	;volatile
  1927                           
  1928                           ;My_header_16F.h: 33: TMR1H = 0x00;
  1929  0B63  0197               	clrf	23	;volatile
  1930                           
  1931                           ;My_header_16F.h: 34: TMR1L = 0x00;
  1932  0B64  0196               	clrf	22	;volatile
  1933                           
  1934                           ;My_header_16F.h: 35: PIE1bits.TMR1IE = 1;
  1935  0B65  0021               	movlb	1	; select bank1
  1936  0B66  1411               	bsf	17,0	;volatile
  1937                           
  1938                           ;My_header_16F.h: 36: INTCONbits.PEIE = 1;
  1939  0B67  170B               	bsf	11,6	;volatile
  1940  0B68  0008               	return
  1941  0B69                     __end_of_timer1_init:	
  1942                           
  1943                           	psect	text4
  1944  0B3C                     __ptext4:	
  1945 ;; *************** function _timer0_init *****************
  1946 ;; Defined at:
  1947 ;;		line 15 in file "My_header_16F.h"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  prescaler       1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;		None               void
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1961 ;;      Params:         0       0       0       0       0       0
  1962 ;;      Locals:         0       0       1       0       0       0
  1963 ;;      Temps:          0       0       1       0       0       0
  1964 ;;      Totals:         0       0       2       0       0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    6
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_main_init
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _timer0_init
  1977  0B3C                     _timer0_init:	
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  1981                           ;timer0_init@prescaler stored from wreg
  1982  0B3C  0021               	movlb	1	; select bank1
  1983  0B3D  00A1               	movwf	timer0_init@prescaler^(0+128)
  1984                           
  1985                           ;My_header_16F.h: 16: if (prescaler == 0) {
  1986  0B3E  0821               	movf	timer0_init@prescaler^(0+128),w
  1987  0B3F  1D03               	btfss	3,2
  1988  0B40  2B43               	goto	l99
  1989                           
  1990                           ;My_header_16F.h: 17: OPTION_REGbits.PSA = 1;
  1991  0B41  1595               	bsf	21,3	;volatile
  1992                           
  1993                           ;My_header_16F.h: 18: } else {
  1994  0B42  2B4C               	goto	l2915
  1995  0B43                     l99:	
  1996                           
  1997                           ;My_header_16F.h: 19: OPTION_REGbits.PSA = 0;
  1998  0B43  1195               	bcf	21,3	;volatile
  1999                           
  2000                           ;My_header_16F.h: 20: OPTION_REGbits.PS = prescaler - 1;
  2001  0B44  30FF               	movlw	255
  2002  0B45  0721               	addwf	timer0_init@prescaler^(0+128),w
  2003  0B46  00A0               	movwf	??_timer0_init^(0+128)
  2004  0B47  0815               	movf	21,w	;volatile
  2005  0B48  0620               	xorwf	??_timer0_init^(0+128),w
  2006  0B49  39F8               	andlw	-8
  2007  0B4A  0620               	xorwf	??_timer0_init^(0+128),w
  2008  0B4B  0095               	movwf	21	;volatile
  2009  0B4C                     l2915:	
  2010                           
  2011                           ;My_header_16F.h: 21: }
  2012                           ;My_header_16F.h: 22: OPTION_REGbits.TMR0CS = 0;
  2013  0B4C  1295               	bcf	21,5	;volatile
  2014                           
  2015                           ;My_header_16F.h: 23: OPTION_REGbits.TMR0SE = 0;
  2016  0B4D  1215               	bcf	21,4	;volatile
  2017                           
  2018                           ;My_header_16F.h: 24: INTCONbits.TMR0IE = 1;
  2019  0B4E  168B               	bsf	11,5	;volatile
  2020                           
  2021                           ;My_header_16F.h: 25: INTCONbits.PEIE = 1;
  2022  0B4F  170B               	bsf	11,6	;volatile
  2023  0B50  0008               	return
  2024  0B51                     __end_of_timer0_init:	
  2025                           
  2026                           	psect	text5
  2027  0B27                     __ptext5:	
  2028 ;; *************** function _adc_init *****************
  2029 ;; Defined at:
  2030 ;;		line 43 in file "My_header_16F.h"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  p_ref           1    wreg     unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  p_ref           1    0[BANK1 ] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;		None               void
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2044 ;;      Params:         0       0       0       0       0       0
  2045 ;;      Locals:         0       0       1       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0
  2047 ;;      Totals:         0       0       1       0       0       0
  2048 ;;Total ram usage:        1 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    6
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_main_init
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _adc_init
  2060  0B27                     _adc_init:	
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2064                           ;adc_init@p_ref stored from wreg
  2065  0B27  0021               	movlb	1	; select bank1
  2066  0B28  00A0               	movwf	adc_init@p_ref^(0+128)
  2067                           
  2068                           ;My_header_16F.h: 44: ADCON1bits.ADFM = 1;
  2069  0B29  179E               	bsf	30,7	;volatile
  2070                           
  2071                           ;My_header_16F.h: 45: ADCON1bits.ADCS = 6;
  2072  0B2A  081E               	movf	30,w	;volatile
  2073  0B2B  398F               	andlw	-113
  2074  0B2C  3860               	iorlw	96
  2075  0B2D  009E               	movwf	30	;volatile
  2076                           
  2077                           ;My_header_16F.h: 46: ADCON1bits.ADNREF = 0;
  2078  0B2E  111E               	bcf	30,2	;volatile
  2079                           
  2080                           ;My_header_16F.h: 47: ADCON1bits.ADPREF = p_ref;
  2081  0B2F  081E               	movf	30,w	;volatile
  2082  0B30  0620               	xorwf	adc_init@p_ref^(0+128),w
  2083  0B31  39FC               	andlw	-4
  2084  0B32  0620               	xorwf	adc_init@p_ref^(0+128),w
  2085  0B33  009E               	movwf	30	;volatile
  2086                           
  2087                           ;My_header_16F.h: 48: if (p_ref == 3) FVRCON = 0x83;
  2088  0B34  3003               	movlw	3
  2089  0B35  0620               	xorwf	adc_init@p_ref^(0+128),w
  2090  0B36  1D03               	btfss	3,2
  2091  0B37  0008               	return
  2092  0B38  3083               	movlw	131
  2093  0B39  0022               	movlb	2	; select bank2
  2094  0B3A  0097               	movwf	23	;volatile
  2095  0B3B  0008               	return
  2096  0B3C                     __end_of_adc_init:	
  2097                           
  2098                           	psect	text6
  2099  0EAD                     __ptext6:	
  2100 ;; *************** function _LCD_init *****************
  2101 ;; Defined at:
  2102 ;;		line 337 in file "My_header_16F.h"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2116 ;;      Params:         0       0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0
  2118 ;;      Temps:          0       0       3       0       0       0
  2119 ;;      Totals:         0       0       3       0       0       0
  2120 ;;Total ram usage:        3 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:   10
  2123 ;; This function calls:
  2124 ;;		_LCD_Clear
  2125 ;;		_LCD_Command
  2126 ;; This function is called by:
  2127 ;;		_main_init
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _LCD_init
  2133  0EAD                     _LCD_init:	
  2134                           
  2135                           ;My_header_16F.h: 338: _delay((unsigned long)((40)*(32000000/4000.0)));
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2139  0EAD  3002               	movlw	2
  2140  0EAE  0021               	movlb	1	; select bank1
  2141  0EAF  00AB               	movwf	(??_LCD_init^(0+128)+2)
  2142  0EB0  30A0               	movlw	160
  2143  0EB1  00AA               	movwf	(??_LCD_init^(0+128)+1)
  2144  0EB2  3092               	movlw	146
  2145  0EB3  00A9               	movwf	??_LCD_init^(0+128)
  2146  0EB4                     u3687:	
  2147  0EB4  0BA9               	decfsz	??_LCD_init^(0+128),f
  2148  0EB5  2EB4               	goto	u3687
  2149  0EB6  0BAA               	decfsz	(??_LCD_init^(0+128)+1),f
  2150  0EB7  2EB4               	goto	u3687
  2151  0EB8  0BAB               	decfsz	(??_LCD_init^(0+128)+2),f
  2152  0EB9  2EB4               	goto	u3687
  2153  0EBA  0000               	nop
  2154                           
  2155                           ;My_header_16F.h: 339: LCD_Command(0x38);
  2156  0EBB  3038               	movlw	56
  2157  0EBC  318C  24A4  318E   	fcall	_LCD_Command
  2158                           
  2159                           ;My_header_16F.h: 340: LCD_Command(0x39);
  2160  0EBF  3039               	movlw	57
  2161  0EC0  318C  24A4  318E   	fcall	_LCD_Command
  2162                           
  2163                           ;My_header_16F.h: 341: LCD_Command(0x14);
  2164  0EC3  3014               	movlw	20
  2165  0EC4  318C  24A4  318E   	fcall	_LCD_Command
  2166                           
  2167                           ;My_header_16F.h: 342: LCD_Command(0x70);
  2168  0EC7  3070               	movlw	112
  2169  0EC8  318C  24A4  318E   	fcall	_LCD_Command
  2170                           
  2171                           ;My_header_16F.h: 343: LCD_Command(0x56);
  2172  0ECB  3056               	movlw	86
  2173  0ECC  318C  24A4  318E   	fcall	_LCD_Command
  2174                           
  2175                           ;My_header_16F.h: 344: LCD_Command(0x6C);
  2176  0ECF  306C               	movlw	108
  2177  0ED0  318C  24A4  318E   	fcall	_LCD_Command
  2178                           
  2179                           ;My_header_16F.h: 345: _delay((unsigned long)((200)*(32000000/4000.0)));
  2180  0ED3  3009               	movlw	9
  2181  0ED4  0021               	movlb	1	; select bank1
  2182  0ED5  00AB               	movwf	(??_LCD_init^(0+128)+2)
  2183  0ED6  301E               	movlw	30
  2184  0ED7  00AA               	movwf	(??_LCD_init^(0+128)+1)
  2185  0ED8  30EB               	movlw	235
  2186  0ED9  00A9               	movwf	??_LCD_init^(0+128)
  2187  0EDA                     u3697:	
  2188  0EDA  0BA9               	decfsz	??_LCD_init^(0+128),f
  2189  0EDB  2EDA               	goto	u3697
  2190  0EDC  0BAA               	decfsz	(??_LCD_init^(0+128)+1),f
  2191  0EDD  2EDA               	goto	u3697
  2192  0EDE  0BAB               	decfsz	(??_LCD_init^(0+128)+2),f
  2193  0EDF  2EDA               	goto	u3697
  2194  0EE0  0000               	nop
  2195                           
  2196                           ;My_header_16F.h: 346: LCD_Command(0x38);
  2197  0EE1  3038               	movlw	56
  2198  0EE2  318C  24A4  318E   	fcall	_LCD_Command
  2199                           
  2200                           ;My_header_16F.h: 347: LCD_Command(0x0C);
  2201  0EE5  300C               	movlw	12
  2202  0EE6  318C  24A4  318E   	fcall	_LCD_Command
  2203                           
  2204                           ;My_header_16F.h: 348: LCD_Command(0x06);
  2205  0EE9  3006               	movlw	6
  2206  0EEA  318C  24A4  318E   	fcall	_LCD_Command
  2207                           
  2208                           ;My_header_16F.h: 349: LCD_Clear();
  2209  0EED  318A  22E6         	fcall	_LCD_Clear
  2210  0EEF  0008               	return
  2211  0EF0                     __end_of_LCD_init:	
  2212                           
  2213                           	psect	text7
  2214  0AE6                     __ptext7:	
  2215 ;; *************** function _LCD_Clear *****************
  2216 ;; Defined at:
  2217 ;;		line 280 in file "My_header_16F.h"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;		None               void
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2231 ;;      Params:         0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0
  2233 ;;      Temps:          0       0       2       0       0       0
  2234 ;;      Totals:         0       0       2       0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    9
  2238 ;; This function calls:
  2239 ;;		_LCD_Command
  2240 ;; This function is called by:
  2241 ;;		_LCD_init
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _LCD_Clear
  2247  0AE6                     _LCD_Clear:	
  2248                           
  2249                           ;My_header_16F.h: 281: LCD_Command(0x01);
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2253  0AE6  3001               	movlw	1
  2254  0AE7  318C  24A4  318A   	fcall	_LCD_Command
  2255                           
  2256                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  2257  0AEA  300C               	movlw	12
  2258  0AEB  0021               	movlb	1	; select bank1
  2259  0AEC  00A8               	movwf	(??_LCD_Clear^(0+128)+1)
  2260  0AED  306C               	movlw	108
  2261  0AEE  00A7               	movwf	??_LCD_Clear^(0+128)
  2262  0AEF                     u3707:	
  2263  0AEF  0BA7               	decfsz	??_LCD_Clear^(0+128),f
  2264  0AF0  2AEF               	goto	u3707
  2265  0AF1  0BA8               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2266  0AF2  2AEF               	goto	u3707
  2267  0AF3  0000               	nop
  2268  0AF4  0008               	return
  2269  0AF5                     __end_of_LCD_Clear:	
  2270                           
  2271                           	psect	text8
  2272  0CA4                     __ptext8:	
  2273 ;; *************** function _LCD_Command *****************
  2274 ;; Defined at:
  2275 ;;		line 267 in file "My_header_16F.h"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  c               1    wreg     unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  c               1    5[BANK1 ] unsigned char 
  2280 ;;  ans             1    6[BANK1 ] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;		None               void
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2290 ;;      Params:         0       0       0       0       0       0
  2291 ;;      Locals:         0       0       2       0       0       0
  2292 ;;      Temps:          0       0       1       0       0       0
  2293 ;;      Totals:         0       0       3       0       0       0
  2294 ;;Total ram usage:        3 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    8
  2297 ;; This function calls:
  2298 ;;		_I2C_Send
  2299 ;;		_I2C_Start
  2300 ;;		_I2C_Stop
  2301 ;; This function is called by:
  2302 ;;		_LCD_Clear
  2303 ;;		_LCD_init
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _LCD_Command
  2309  0CA4                     _LCD_Command:	
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2313                           ;LCD_Command@c stored from wreg
  2314  0CA4  0021               	movlb	1	; select bank1
  2315  0CA5  00A5               	movwf	LCD_Command@c^(0+128)
  2316                           
  2317                           ;My_header_16F.h: 268: uint8_t ans;
  2318                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  2319  0CA6  01A2               	clrf	I2C_Start@rw^(0+128)
  2320  0CA7  303E               	movlw	62
  2321  0CA8  318C  2409  318C   	fcall	_I2C_Start
  2322  0CAB  0021               	movlb	1	; select bank1
  2323  0CAC  00A4               	movwf	??_LCD_Command^(0+128)
  2324  0CAD  0824               	movf	??_LCD_Command^(0+128),w
  2325  0CAE  00A6               	movwf	LCD_Command@ans^(0+128)
  2326                           
  2327                           ;My_header_16F.h: 271: if (ans == 0) {
  2328  0CAF  0826               	movf	LCD_Command@ans^(0+128),w
  2329  0CB0  1D03               	btfss	3,2
  2330  0CB1  2CBB               	goto	l210
  2331                           
  2332                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  2333  0CB2  3080               	movlw	128
  2334  0CB3  318B  2315  318C   	fcall	_I2C_Send
  2335                           
  2336                           ;My_header_16F.h: 274: I2C_Send(c);
  2337  0CB6  0021               	movlb	1	; select bank1
  2338  0CB7  0825               	movf	LCD_Command@c^(0+128),w
  2339  0CB8  318B  2315  318C   	fcall	_I2C_Send
  2340  0CBB                     l210:	
  2341                           
  2342                           ;My_header_16F.h: 275: }
  2343                           ;My_header_16F.h: 276: I2C_Stop();
  2344  0CBB  318A  22A7  318C   	fcall	_I2C_Stop
  2345                           
  2346                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2347  0CBE  3045               	movlw	69
  2348  0CBF  0021               	movlb	1	; select bank1
  2349  0CC0  00A4               	movwf	??_LCD_Command^(0+128)
  2350  0CC1                     u3717:	
  2351  0CC1  0BA4               	decfsz	??_LCD_Command^(0+128),f
  2352  0CC2  2CC1               	goto	u3717
  2353  0CC3  0008               	return
  2354  0CC4                     __end_of_LCD_Command:	
  2355                           
  2356                           	psect	text9
  2357  0ABE                     __ptext9:	
  2358 ;; *************** function _I2C_init *****************
  2359 ;; Defined at:
  2360 ;;		line 203 in file "My_header_16F.h"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2374 ;;      Params:         0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    6
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_main_init
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _I2C_init
  2390  0ABE                     _I2C_init:	
  2391                           
  2392                           ;My_header_16F.h: 204: SSP1STAT = 0b10000000;
  2393                           
  2394                           ;incstack = 0
  2395                           ; Regs used in _I2C_init: [wreg]
  2396  0ABE  3080               	movlw	128
  2397  0ABF  0024               	movlb	4	; select bank4
  2398  0AC0  0094               	movwf	20	;volatile
  2399                           
  2400                           ;My_header_16F.h: 205: SSP1CON1 = 0b00101000;
  2401  0AC1  3028               	movlw	40
  2402  0AC2  0095               	movwf	21	;volatile
  2403                           
  2404                           ;My_header_16F.h: 206: SSP1ADD = 0x13;
  2405  0AC3  3013               	movlw	19
  2406  0AC4  0092               	movwf	18	;volatile
  2407                           
  2408                           ;My_header_16F.h: 209: SSP1IF = 0;
  2409  0AC5  0020               	movlb	0	; select bank0
  2410  0AC6  1191               	bcf	17,3	;volatile
  2411                           
  2412                           ;My_header_16F.h: 210: BCL1IF = 0;
  2413  0AC7  1192               	bcf	18,3	;volatile
  2414  0AC8  0008               	return
  2415  0AC9                     __end_of_I2C_init:	
  2416                           
  2417                           	psect	text10
  2418  0C84                     __ptext10:	
  2419 ;; *************** function _flag_read *****************
  2420 ;; Defined at:
  2421 ;;		line 259 in file "PIC16F1827-ChargeStation4-01.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  port            1    wreg     unsigned char 
  2424 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  port            1    1[BANK1 ] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      unsigned char 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2436 ;;      Params:         0       0       1       0       0       0
  2437 ;;      Locals:         0       0       1       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0
  2439 ;;      Totals:         0       0       2       0       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    6
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _flag_read
  2452  0C84                     _flag_read:	
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _flag_read: [wreg-fsr0h+status,2+status,0]
  2456                           ;flag_read@port stored from wreg
  2457  0C84  0021               	movlb	1	; select bank1
  2458  0C85  00A1               	movwf	flag_read@port^(0+128)
  2459                           
  2460                           ;PIC16F1827-ChargeStation4-01.c: 260: switch (port) {
  2461  0C86  2C98               	goto	l3061
  2462  0C87                     l3043:	
  2463                           ;PIC16F1827-ChargeStation4-01.c: 261: case 2:
  2464                           
  2465                           
  2466                           ;PIC16F1827-ChargeStation4-01.c: 262: return (sw_RA3.flags) & bit_and;
  2467  0C87  0020               	movlb	0	; select bank0
  2468  0C88  0840               	movf	_sw_RA3+2,w
  2469  0C89  0021               	movlb	1	; select bank1
  2470  0C8A  0520               	andwf	flag_read@bit_and^(0+128),w
  2471  0C8B  0008               	return
  2472  0C8C                     l3047:	
  2473                           ;PIC16F1827-ChargeStation4-01.c: 263: case 1:
  2474                           
  2475                           
  2476                           ;PIC16F1827-ChargeStation4-01.c: 264: return (sw_RA4.flags) & bit_and;
  2477  0C8C  0020               	movlb	0	; select bank0
  2478  0C8D  0843               	movf	_sw_RA4+2,w
  2479  0C8E  0021               	movlb	1	; select bank1
  2480  0C8F  0520               	andwf	flag_read@bit_and^(0+128),w
  2481  0C90  0008               	return
  2482  0C91                     l3051:	
  2483                           ;PIC16F1827-ChargeStation4-01.c: 265: case 0:
  2484                           
  2485                           
  2486                           ;PIC16F1827-ChargeStation4-01.c: 266: return (sw_RA5.flags) & bit_and;
  2487  0C91  0020               	movlb	0	; select bank0
  2488  0C92  0846               	movf	_sw_RA5+2,w
  2489  0C93  0021               	movlb	1	; select bank1
  2490  0C94  0520               	andwf	flag_read@bit_and^(0+128),w
  2491  0C95  0008               	return
  2492  0C96                     l3055:	
  2493                           ;PIC16F1827-ChargeStation4-01.c: 267: default:
  2494                           
  2495                           
  2496                           ;PIC16F1827-ChargeStation4-01.c: 268: return 0;
  2497  0C96  3000               	movlw	0
  2498                           
  2499                           ;PIC16F1827-ChargeStation4-01.c: 269: }
  2500  0C97  0008               	return
  2501  0C98                     l3061:	
  2502  0C98  0821               	movf	flag_read@port^(0+128),w
  2503                           
  2504                           ; Switch size 1, requested type "space"
  2505                           ; Number of cases is 3, Range of values is 0 to 2
  2506                           ; switch strategies available:
  2507                           ; Name         Instructions Cycles
  2508                           ; simple_byte           10     6 (average)
  2509                           ; direct_byte           12     6 (fixed)
  2510                           ; jumptable            260     6 (fixed)
  2511                           ;	Chosen strategy is simple_byte
  2512  0C99  3A00               	xorlw	0	; case 0
  2513  0C9A  1903               	skipnz
  2514  0C9B  2C91               	goto	l3051
  2515  0C9C  3A01               	xorlw	1	; case 1
  2516  0C9D  1903               	skipnz
  2517  0C9E  2C8C               	goto	l3047
  2518  0C9F  3A03               	xorlw	3	; case 2
  2519  0CA0  1903               	skipnz
  2520  0CA1  2C87               	goto	l3043
  2521  0CA2  2C96               	goto	l3055
  2522  0CA3  0008               	return
  2523  0CA4                     __end_of_flag_read:	
  2524                           
  2525                           	psect	text11
  2526  0CE7                     __ptext11:	
  2527 ;; *************** function _flag_clear *****************
  2528 ;; Defined at:
  2529 ;;		line 272 in file "PIC16F1827-ChargeStation4-01.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  port            1    wreg     unsigned char 
  2532 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  port            1    2[BANK1 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2544 ;;      Params:         0       0       1       0       0       0
  2545 ;;      Locals:         0       0       1       0       0       0
  2546 ;;      Temps:          0       0       1       0       0       0
  2547 ;;      Totals:         0       0       3       0       0       0
  2548 ;;Total ram usage:        3 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    6
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _flag_clear
  2560  0CE7                     _flag_clear:	
  2561                           
  2562                           ;incstack = 0
  2563                           ; Regs used in _flag_clear: [wreg-fsr0h+status,2+status,0]
  2564                           ;flag_clear@port stored from wreg
  2565  0CE7  0021               	movlb	1	; select bank1
  2566  0CE8  00A2               	movwf	flag_clear@port^(0+128)
  2567                           
  2568                           ;PIC16F1827-ChargeStation4-01.c: 273: switch (port) {
  2569  0CE9  2CFE               	goto	l3073
  2570  0CEA                     l3065:	
  2571                           ;PIC16F1827-ChargeStation4-01.c: 274: case 2:
  2572                           
  2573                           
  2574                           ;PIC16F1827-ChargeStation4-01.c: 275: sw_RA3.flags &= bit_and;
  2575  0CEA  0820               	movf	flag_clear@bit_and^(0+128),w
  2576  0CEB  00A1               	movwf	??_flag_clear^(0+128)
  2577  0CEC  0821               	movf	??_flag_clear^(0+128),w
  2578  0CED  0020               	movlb	0	; select bank0
  2579  0CEE  05C0               	andwf	_sw_RA3+2,f
  2580                           
  2581                           ;PIC16F1827-ChargeStation4-01.c: 276: break;
  2582  0CEF  0008               	return
  2583  0CF0                     l3067:	
  2584                           ;PIC16F1827-ChargeStation4-01.c: 277: case 1:
  2585                           
  2586                           
  2587                           ;PIC16F1827-ChargeStation4-01.c: 278: sw_RA4.flags &= bit_and;
  2588  0CF0  0021               	movlb	1	; select bank1
  2589  0CF1  0820               	movf	flag_clear@bit_and^(0+128),w
  2590  0CF2  00A1               	movwf	??_flag_clear^(0+128)
  2591  0CF3  0821               	movf	??_flag_clear^(0+128),w
  2592  0CF4  0020               	movlb	0	; select bank0
  2593  0CF5  05C3               	andwf	_sw_RA4+2,f
  2594                           
  2595                           ;PIC16F1827-ChargeStation4-01.c: 279: break;
  2596  0CF6  0008               	return
  2597  0CF7                     l3069:	
  2598                           ;PIC16F1827-ChargeStation4-01.c: 280: case 0:
  2599                           
  2600                           
  2601                           ;PIC16F1827-ChargeStation4-01.c: 281: sw_RA5.flags &= bit_and;
  2602  0CF7  0021               	movlb	1	; select bank1
  2603  0CF8  0820               	movf	flag_clear@bit_and^(0+128),w
  2604  0CF9  00A1               	movwf	??_flag_clear^(0+128)
  2605  0CFA  0821               	movf	??_flag_clear^(0+128),w
  2606  0CFB  0020               	movlb	0	; select bank0
  2607  0CFC  05C6               	andwf	_sw_RA5+2,f
  2608                           
  2609                           ;PIC16F1827-ChargeStation4-01.c: 285: }
  2610                           
  2611                           ;PIC16F1827-ChargeStation4-01.c: 284: break;
  2612                           
  2613                           ;PIC16F1827-ChargeStation4-01.c: 283: default:
  2614                           
  2615                           ;PIC16F1827-ChargeStation4-01.c: 282: break;
  2616  0CFD  0008               	return
  2617  0CFE                     l3073:	
  2618  0CFE  0021               	movlb	1	; select bank1
  2619  0CFF  0822               	movf	flag_clear@port^(0+128),w
  2620                           
  2621                           ; Switch size 1, requested type "space"
  2622                           ; Number of cases is 3, Range of values is 0 to 2
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte           10     6 (average)
  2626                           ; direct_byte           12     6 (fixed)
  2627                           ; jumptable            260     6 (fixed)
  2628                           ;	Chosen strategy is simple_byte
  2629  0D00  3A00               	xorlw	0	; case 0
  2630  0D01  1903               	skipnz
  2631  0D02  2CF7               	goto	l3069
  2632  0D03  3A01               	xorlw	1	; case 1
  2633  0D04  1903               	skipnz
  2634  0D05  2CF0               	goto	l3067
  2635  0D06  3A03               	xorlw	3	; case 2
  2636  0D07  1903               	skipnz
  2637  0D08  2CEA               	goto	l3065
  2638  0D09  2D0A               	goto	l393
  2639  0D0A                     l393:	
  2640  0D0A  0008               	return
  2641  0D0B                     __end_of_flag_clear:	
  2642                           
  2643                           	psect	text12
  2644  0DAE                     __ptext12:	
  2645 ;; *************** function _OUT *****************
  2646 ;; Defined at:
  2647 ;;		line 215 in file "PIC16F1827-ChargeStation4-01.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  b               1    wreg     unsigned char 
  2650 ;;  value           1    0[BANK1 ] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  b               1    1[BANK1 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2662 ;;      Params:         0       0       1       0       0       0
  2663 ;;      Locals:         0       0       1       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0
  2665 ;;      Totals:         0       0       2       0       0       0
  2666 ;;Total ram usage:        2 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    6
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _OUT
  2678  0DAE                     _OUT:	
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _OUT: [wreg-fsr0h+status,2+status,0]
  2682                           ;OUT@b stored from wreg
  2683  0DAE  0021               	movlb	1	; select bank1
  2684  0DAF  00A1               	movwf	OUT@b^(0+128)
  2685                           
  2686                           ;PIC16F1827-ChargeStation4-01.c: 216: switch (b) {
  2687  0DB0  2DCE               	goto	l3033
  2688  0DB1                     l3019:	
  2689                           ;PIC16F1827-ChargeStation4-01.c: 217: case 0:
  2690                           
  2691                           
  2692                           ;PIC16F1827-ChargeStation4-01.c: 218: if (value) {
  2693  0DB1  0820               	movf	OUT@value^(0+128),w
  2694  0DB2  1903               	btfsc	3,2
  2695  0DB3  2DB7               	goto	l356
  2696                           
  2697                           ;PIC16F1827-ChargeStation4-01.c: 219: LATB0 = 0;
  2698  0DB4  0022               	movlb	2	; select bank2
  2699  0DB5  100D               	bcf	13,0	;volatile
  2700                           
  2701                           ;PIC16F1827-ChargeStation4-01.c: 220: } else {
  2702  0DB6  0008               	return
  2703  0DB7                     l356:	
  2704                           
  2705                           ;PIC16F1827-ChargeStation4-01.c: 221: LATB0 = 1;
  2706  0DB7  0022               	movlb	2	; select bank2
  2707  0DB8  140D               	bsf	13,0	;volatile
  2708                           
  2709                           ;PIC16F1827-ChargeStation4-01.c: 222: }
  2710                           ;PIC16F1827-ChargeStation4-01.c: 223: break;
  2711  0DB9  0008               	return
  2712  0DBA                     l3023:	
  2713                           ;PIC16F1827-ChargeStation4-01.c: 224: case 1:
  2714                           
  2715                           
  2716                           ;PIC16F1827-ChargeStation4-01.c: 225: if (value) {
  2717  0DBA  0021               	movlb	1	; select bank1
  2718  0DBB  0820               	movf	OUT@value^(0+128),w
  2719  0DBC  1903               	btfsc	3,2
  2720  0DBD  2DC1               	goto	l360
  2721                           
  2722                           ;PIC16F1827-ChargeStation4-01.c: 226: LATB3 = 0;
  2723  0DBE  0022               	movlb	2	; select bank2
  2724  0DBF  118D               	bcf	13,3	;volatile
  2725                           
  2726                           ;PIC16F1827-ChargeStation4-01.c: 227: } else {
  2727  0DC0  0008               	return
  2728  0DC1                     l360:	
  2729                           
  2730                           ;PIC16F1827-ChargeStation4-01.c: 228: LATB3 = 1;
  2731  0DC1  0022               	movlb	2	; select bank2
  2732  0DC2  158D               	bsf	13,3	;volatile
  2733                           
  2734                           ;PIC16F1827-ChargeStation4-01.c: 229: }
  2735                           ;PIC16F1827-ChargeStation4-01.c: 230: break;
  2736  0DC3  0008               	return
  2737  0DC4                     l3027:	
  2738                           ;PIC16F1827-ChargeStation4-01.c: 231: case 2:
  2739                           
  2740                           
  2741                           ;PIC16F1827-ChargeStation4-01.c: 232: if (value) {
  2742  0DC4  0021               	movlb	1	; select bank1
  2743  0DC5  0820               	movf	OUT@value^(0+128),w
  2744  0DC6  1903               	btfsc	3,2
  2745  0DC7  2DCB               	goto	l363
  2746                           
  2747                           ;PIC16F1827-ChargeStation4-01.c: 233: LATB6 = 0;
  2748  0DC8  0022               	movlb	2	; select bank2
  2749  0DC9  130D               	bcf	13,6	;volatile
  2750                           
  2751                           ;PIC16F1827-ChargeStation4-01.c: 234: } else {
  2752  0DCA  0008               	return
  2753  0DCB                     l363:	
  2754                           
  2755                           ;PIC16F1827-ChargeStation4-01.c: 235: LATB6 = 1;
  2756  0DCB  0022               	movlb	2	; select bank2
  2757  0DCC  170D               	bsf	13,6	;volatile
  2758                           
  2759                           ;PIC16F1827-ChargeStation4-01.c: 240: }
  2760                           
  2761                           ;PIC16F1827-ChargeStation4-01.c: 239: break;
  2762                           
  2763                           ;PIC16F1827-ChargeStation4-01.c: 238: default:
  2764                           
  2765                           ;PIC16F1827-ChargeStation4-01.c: 236: }
  2766                           ;PIC16F1827-ChargeStation4-01.c: 237: break;
  2767  0DCD  0008               	return
  2768  0DCE                     l3033:	
  2769  0DCE  0021               	movlb	1	; select bank1
  2770  0DCF  0821               	movf	OUT@b^(0+128),w
  2771                           
  2772                           ; Switch size 1, requested type "space"
  2773                           ; Number of cases is 3, Range of values is 0 to 2
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte           10     6 (average)
  2777                           ; direct_byte           12     6 (fixed)
  2778                           ; jumptable            260     6 (fixed)
  2779                           ;	Chosen strategy is simple_byte
  2780  0DD0  3A00               	xorlw	0	; case 0
  2781  0DD1  1903               	skipnz
  2782  0DD2  2DB1               	goto	l3019
  2783  0DD3  3A01               	xorlw	1	; case 1
  2784  0DD4  1903               	skipnz
  2785  0DD5  2DBA               	goto	l3023
  2786  0DD6  3A03               	xorlw	3	; case 2
  2787  0DD7  1903               	skipnz
  2788  0DD8  2DC4               	goto	l3027
  2789  0DD9  2DDA               	goto	l366
  2790  0DDA                     l366:	
  2791  0DDA  0008               	return
  2792  0DDB                     __end_of_OUT:	
  2793                           
  2794                           	psect	text13
  2795  0D31                     __ptext13:	
  2796 ;; *************** function _LED *****************
  2797 ;; Defined at:
  2798 ;;		line 243 in file "PIC16F1827-ChargeStation4-01.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  b               1    wreg     unsigned char 
  2801 ;;  value           1    0[BANK1 ] unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  b               1    1[BANK1 ] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;		None               void
  2806 ;; Registers used:
  2807 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2813 ;;      Params:         0       0       1       0       0       0
  2814 ;;      Locals:         0       0       1       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0
  2816 ;;      Totals:         0       0       2       0       0       0
  2817 ;;Total ram usage:        2 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    6
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _LED
  2829  0D31                     _LED:	
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in _LED: [wreg-fsr0h+status,2+status,0]
  2833                           ;LED@b stored from wreg
  2834  0D31  0021               	movlb	1	; select bank1
  2835  0D32  00A1               	movwf	LED@b^(0+128)
  2836                           
  2837                           ;PIC16F1827-ChargeStation4-01.c: 244: switch (b) {
  2838  0D33  2D4C               	goto	l3039
  2839  0D34                     l370:	
  2840                           ;PIC16F1827-ChargeStation4-01.c: 245: case 0:
  2841                           
  2842                           
  2843                           ;PIC16F1827-ChargeStation4-01.c: 246: LATB5 = value;
  2844  0D34  1C20               	btfss	LED@value^(0+128),0
  2845  0D35  2D39               	goto	u3330
  2846  0D36  0022               	movlb	2	; select bank2
  2847  0D37  168D               	bsf	13,5	;volatile
  2848  0D38  0008               	return
  2849  0D39                     u3330:	
  2850  0D39  0022               	movlb	2	; select bank2
  2851  0D3A  128D               	bcf	13,5	;volatile
  2852                           
  2853                           ;PIC16F1827-ChargeStation4-01.c: 247: break;
  2854  0D3B  0008               	return
  2855  0D3C                     l372:	
  2856                           ;PIC16F1827-ChargeStation4-01.c: 248: case 1:
  2857                           
  2858                           
  2859                           ;PIC16F1827-ChargeStation4-01.c: 249: LATA6 = value;
  2860  0D3C  1C20               	btfss	LED@value^(0+128),0
  2861  0D3D  2D41               	goto	u3350
  2862  0D3E  0022               	movlb	2	; select bank2
  2863  0D3F  170C               	bsf	12,6	;volatile
  2864  0D40  0008               	return
  2865  0D41                     u3350:	
  2866  0D41  0022               	movlb	2	; select bank2
  2867  0D42  130C               	bcf	12,6	;volatile
  2868                           
  2869                           ;PIC16F1827-ChargeStation4-01.c: 250: break;
  2870  0D43  0008               	return
  2871  0D44                     l373:	
  2872                           ;PIC16F1827-ChargeStation4-01.c: 251: case 2:
  2873                           
  2874                           
  2875                           ;PIC16F1827-ChargeStation4-01.c: 252: LATA7 = value;
  2876  0D44  1C20               	btfss	LED@value^(0+128),0
  2877  0D45  2D49               	goto	u3370
  2878  0D46  0022               	movlb	2	; select bank2
  2879  0D47  178C               	bsf	12,7	;volatile
  2880  0D48  0008               	return
  2881  0D49                     u3370:	
  2882  0D49  0022               	movlb	2	; select bank2
  2883  0D4A  138C               	bcf	12,7	;volatile
  2884                           
  2885                           ;PIC16F1827-ChargeStation4-01.c: 256: }
  2886                           
  2887                           ;PIC16F1827-ChargeStation4-01.c: 255: break;
  2888                           
  2889                           ;PIC16F1827-ChargeStation4-01.c: 254: default:
  2890                           
  2891                           ;PIC16F1827-ChargeStation4-01.c: 253: break;
  2892  0D4B  0008               	return
  2893  0D4C                     l3039:	
  2894  0D4C  0021               	movlb	1	; select bank1
  2895  0D4D  0821               	movf	LED@b^(0+128),w
  2896                           
  2897                           ; Switch size 1, requested type "space"
  2898                           ; Number of cases is 3, Range of values is 0 to 2
  2899                           ; switch strategies available:
  2900                           ; Name         Instructions Cycles
  2901                           ; simple_byte           10     6 (average)
  2902                           ; direct_byte           12     6 (fixed)
  2903                           ; jumptable            260     6 (fixed)
  2904                           ;	Chosen strategy is simple_byte
  2905  0D4E  3A00               	xorlw	0	; case 0
  2906  0D4F  1903               	skipnz
  2907  0D50  2D34               	goto	l370
  2908  0D51  3A01               	xorlw	1	; case 1
  2909  0D52  1903               	skipnz
  2910  0D53  2D3C               	goto	l372
  2911  0D54  3A03               	xorlw	3	; case 2
  2912  0D55  1903               	skipnz
  2913  0D56  2D44               	goto	l373
  2914  0D57  2D58               	goto	l375
  2915  0D58                     l375:	
  2916  0D58  0008               	return
  2917  0D59                     __end_of_LED:	
  2918                           
  2919                           	psect	text14
  2920  0E70                     __ptext14:	
  2921 ;; *************** function _EEP_Read *****************
  2922 ;; Defined at:
  2923 ;;		line 435 in file "My_header_16F.h"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  Reg_h           1    wreg     unsigned char 
  2926 ;;  Reg_l           1    6[BANK1 ] unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  Reg_h           1    8[BANK1 ] unsigned char 
  2929 ;;  ans             1   10[BANK1 ] unsigned char 
  2930 ;;  data            1    9[BANK1 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      unsigned char 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2940 ;;      Params:         0       0       1       0       0       0
  2941 ;;      Locals:         0       0       3       0       0       0
  2942 ;;      Temps:          0       0       1       0       0       0
  2943 ;;      Totals:         0       0       5       0       0       0
  2944 ;;Total ram usage:        5 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    8
  2947 ;; This function calls:
  2948 ;;		_I2C_Receive
  2949 ;;		_I2C_Send
  2950 ;;		_I2C_Start
  2951 ;;		_I2C_Stop
  2952 ;;		_I2C_rStart
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function _EEP_Read
  2960  0E70                     _EEP_Read:	
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in _EEP_Read: [wreg+status,2+status,0+pclath+cstack]
  2964                           ;EEP_Read@Reg_h stored from wreg
  2965  0E70  0021               	movlb	1	; select bank1
  2966  0E71  00A8               	movwf	EEP_Read@Reg_h^(0+128)
  2967                           
  2968                           ;My_header_16F.h: 436: uint8_t ans;
  2969                           ;My_header_16F.h: 437: uint8_t data;
  2970                           ;My_header_16F.h: 439: ans = I2C_Start(0x50, 0);
  2971  0E72  01A2               	clrf	I2C_Start@rw^(0+128)
  2972  0E73  3050               	movlw	80
  2973  0E74  318C  2409  318E   	fcall	_I2C_Start
  2974  0E77  0021               	movlb	1	; select bank1
  2975  0E78  00A7               	movwf	??_EEP_Read^(0+128)
  2976  0E79  0827               	movf	??_EEP_Read^(0+128),w
  2977  0E7A  00AA               	movwf	EEP_Read@ans^(0+128)
  2978                           
  2979                           ;My_header_16F.h: 440: if (ans == 0) {
  2980  0E7B  082A               	movf	EEP_Read@ans^(0+128),w
  2981  0E7C  1D03               	btfss	3,2
  2982  0E7D  2E87               	goto	l264
  2983                           
  2984                           ;My_header_16F.h: 441: I2C_Send(Reg_h);
  2985  0E7E  0828               	movf	EEP_Read@Reg_h^(0+128),w
  2986  0E7F  318B  2315  318E   	fcall	_I2C_Send
  2987                           
  2988                           ;My_header_16F.h: 442: I2C_Send(Reg_l);
  2989  0E82  0021               	movlb	1	; select bank1
  2990  0E83  0826               	movf	EEP_Read@Reg_l^(0+128),w
  2991  0E84  318B  2315  318E   	fcall	_I2C_Send
  2992  0E87                     l264:	
  2993                           
  2994                           ;My_header_16F.h: 443: }
  2995                           ;My_header_16F.h: 444: ans = I2C_rStart(0x50, 1);
  2996  0E87  3050               	movlw	80
  2997  0E88  0021               	movlb	1	; select bank1
  2998  0E89  00A2               	movwf	I2C_rStart@adrs^(0+128)
  2999  0E8A  3000               	movlw	0
  3000  0E8B  00A3               	movwf	(I2C_rStart@adrs^(0+128)+1)
  3001  0E8C  3001               	movlw	1
  3002  0E8D  00A4               	movwf	I2C_rStart@rw^(0+128)
  3003  0E8E  3000               	movlw	0
  3004  0E8F  00A5               	movwf	(I2C_rStart@rw^(0+128)+1)
  3005  0E90  318B  239C  318E   	fcall	_I2C_rStart
  3006  0E93  0021               	movlb	1	; select bank1
  3007  0E94  00A7               	movwf	??_EEP_Read^(0+128)
  3008  0E95  0827               	movf	??_EEP_Read^(0+128),w
  3009  0E96  00AA               	movwf	EEP_Read@ans^(0+128)
  3010                           
  3011                           ;My_header_16F.h: 445: if (ans == 0) {
  3012  0E97  082A               	movf	EEP_Read@ans^(0+128),w
  3013  0E98  1D03               	btfss	3,2
  3014  0E99  2EA2               	goto	l265
  3015                           
  3016                           ;My_header_16F.h: 446: data = I2C_Receive(1);
  3017  0E9A  3001               	movlw	1
  3018  0E9B  318C  2464  318E   	fcall	_I2C_Receive
  3019  0E9E  0021               	movlb	1	; select bank1
  3020  0E9F  00A7               	movwf	??_EEP_Read^(0+128)
  3021  0EA0  0827               	movf	??_EEP_Read^(0+128),w
  3022  0EA1  00A9               	movwf	EEP_Read@data^(0+128)
  3023  0EA2                     l265:	
  3024                           
  3025                           ;My_header_16F.h: 447: }
  3026                           ;My_header_16F.h: 448: I2C_Stop();
  3027  0EA2  318A  22A7  318E   	fcall	_I2C_Stop
  3028                           
  3029                           ;My_header_16F.h: 449: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3030  0EA5  3045               	movlw	69
  3031  0EA6  0021               	movlb	1	; select bank1
  3032  0EA7  00A7               	movwf	??_EEP_Read^(0+128)
  3033  0EA8                     u3727:	
  3034  0EA8  0BA7               	decfsz	??_EEP_Read^(0+128),f
  3035  0EA9  2EA8               	goto	u3727
  3036                           
  3037                           ;My_header_16F.h: 450: return data;
  3038  0EAA  0021               	movlb	1	; select bank1
  3039  0EAB  0829               	movf	EEP_Read@data^(0+128),w
  3040  0EAC  0008               	return
  3041  0EAD                     __end_of_EEP_Read:	
  3042                           
  3043                           	psect	text15
  3044  0B9C                     __ptext15:	
  3045 ;; *************** function _I2C_rStart *****************
  3046 ;; Defined at:
  3047 ;;		line 225 in file "My_header_16F.h"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  adrs            2    2[BANK1 ] int 
  3050 ;;  rw              2    4[BANK1 ] int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      unsigned char 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, pclath, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3062 ;;      Params:         0       0       4       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0
  3065 ;;      Totals:         0       0       4       0       0       0
  3066 ;;Total ram usage:        4 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    7
  3069 ;; This function calls:
  3070 ;;		_I2C_IdleCheck
  3071 ;; This function is called by:
  3072 ;;		_EEP_Read
  3073 ;;		_RTC_Read
  3074 ;;		_TM_Read
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _I2C_rStart
  3080  0B9C                     _I2C_rStart:	
  3081                           
  3082                           ;My_header_16F.h: 227: I2C_IdleCheck(0x5);
  3083                           
  3084                           ;incstack = 0
  3085                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  3086  0B9C  3005               	movlw	5
  3087  0B9D  318A  22D7  318B   	fcall	_I2C_IdleCheck
  3088                           
  3089                           ;My_header_16F.h: 228: SSP1CON2bits.RSEN = 1;
  3090  0BA0  0024               	movlb	4	; select bank4
  3091  0BA1  1496               	bsf	22,1	;volatile
  3092                           
  3093                           ;My_header_16F.h: 230: I2C_IdleCheck(0x5);
  3094  0BA2  3005               	movlw	5
  3095  0BA3  318A  22D7  318B   	fcall	_I2C_IdleCheck
  3096                           
  3097                           ;My_header_16F.h: 231: SSP1IF = 0;
  3098  0BA6  0020               	movlb	0	; select bank0
  3099  0BA7  1191               	bcf	17,3	;volatile
  3100                           
  3101                           ;My_header_16F.h: 232: SSP1BUF = (char) ((adrs << 1) + rw);
  3102  0BA8  0021               	movlb	1	; select bank1
  3103  0BA9  3522               	lslf	I2C_rStart@adrs^(0+128),w
  3104  0BAA  0724               	addwf	I2C_rStart@rw^(0+128),w
  3105  0BAB  0024               	movlb	4	; select bank4
  3106  0BAC  0091               	movwf	17	;volatile
  3107  0BAD                     l192:	
  3108                           ;My_header_16F.h: 233: while (!SSP1IF);
  3109                           
  3110  0BAD  0020               	movlb	0	; select bank0
  3111  0BAE  1D91               	btfss	17,3	;volatile
  3112  0BAF  2BAD               	goto	l192
  3113                           
  3114                           ;My_header_16F.h: 234: return SSP1CON2bits.ACKSTAT;
  3115  0BB0  0024               	movlb	4	; select bank4
  3116  0BB1  0E16               	swapf	22,w	;volatile
  3117  0BB2  0C89               	rrf	9,f
  3118  0BB3  0C89               	rrf	9,f
  3119  0BB4  3901               	andlw	1
  3120  0BB5  0008               	return
  3121  0BB6                     __end_of_I2C_rStart:	
  3122                           
  3123                           	psect	text16
  3124  0AA7                     __ptext16:	
  3125 ;; *************** function _I2C_Stop *****************
  3126 ;; Defined at:
  3127 ;;		line 237 in file "My_header_16F.h"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;		None               void
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3141 ;;      Params:         0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    7
  3148 ;; This function calls:
  3149 ;;		_I2C_IdleCheck
  3150 ;; This function is called by:
  3151 ;;		_LCD_Command
  3152 ;;		_EEP_Read
  3153 ;;		_LCD_CreateChar
  3154 ;;		_RTC_Write
  3155 ;;		_RTC_Read
  3156 ;;		_TM_init
  3157 ;;		_TM_Read
  3158 ;;		_EEP_Writes
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function _I2C_Stop
  3164  0AA7                     _I2C_Stop:	
  3165                           
  3166                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3170  0AA7  3005               	movlw	5
  3171  0AA8  318A  22D7         	fcall	_I2C_IdleCheck
  3172                           
  3173                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  3174  0AAA  0024               	movlb	4	; select bank4
  3175  0AAB  1516               	bsf	22,2	;volatile
  3176  0AAC  0008               	return
  3177  0AAD                     __end_of_I2C_Stop:	
  3178                           
  3179                           	psect	text17
  3180  0C09                     __ptext17:	
  3181 ;; *************** function _I2C_Start *****************
  3182 ;; Defined at:
  3183 ;;		line 213 in file "My_header_16F.h"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  adrs            1    wreg     unsigned char 
  3186 ;;  rw              1    2[BANK1 ] unsigned char 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  adrs            1    3[BANK1 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, pclath, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3198 ;;      Params:         0       0       1       0       0       0
  3199 ;;      Locals:         0       0       1       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0
  3201 ;;      Totals:         0       0       2       0       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    7
  3205 ;; This function calls:
  3206 ;;		_I2C_IdleCheck
  3207 ;; This function is called by:
  3208 ;;		_LCD_Command
  3209 ;;		_EEP_Read
  3210 ;;		_LCD_CreateChar
  3211 ;;		_RTC_Write
  3212 ;;		_RTC_Read
  3213 ;;		_TM_init
  3214 ;;		_TM_Read
  3215 ;;		_EEP_Writes
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _I2C_Start
  3221  0C09                     _I2C_Start:	
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3225                           ;I2C_Start@adrs stored from wreg
  3226  0C09  0021               	movlb	1	; select bank1
  3227  0C0A  00A3               	movwf	I2C_Start@adrs^(0+128)
  3228                           
  3229                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  3230  0C0B  3005               	movlw	5
  3231  0C0C  318A  22D7  318C   	fcall	_I2C_IdleCheck
  3232                           
  3233                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  3234  0C0F  0024               	movlb	4	; select bank4
  3235  0C10  1416               	bsf	22,0	;volatile
  3236                           
  3237                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  3238  0C11  3005               	movlw	5
  3239  0C12  318A  22D7  318C   	fcall	_I2C_IdleCheck
  3240                           
  3241                           ;My_header_16F.h: 219: SSP1IF = 0;
  3242  0C15  0020               	movlb	0	; select bank0
  3243  0C16  1191               	bcf	17,3	;volatile
  3244                           
  3245                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3246  0C17  0021               	movlb	1	; select bank1
  3247  0C18  3523               	lslf	I2C_Start@adrs^(0+128),w
  3248  0C19  0722               	addwf	I2C_Start@rw^(0+128),w
  3249  0C1A  0024               	movlb	4	; select bank4
  3250  0C1B  0091               	movwf	17	;volatile
  3251  0C1C                     l186:	
  3252                           ;My_header_16F.h: 221: while (!SSP1IF);
  3253                           
  3254  0C1C  0020               	movlb	0	; select bank0
  3255  0C1D  1D91               	btfss	17,3	;volatile
  3256  0C1E  2C1C               	goto	l186
  3257                           
  3258                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  3259  0C1F  0024               	movlb	4	; select bank4
  3260  0C20  0E16               	swapf	22,w	;volatile
  3261  0C21  0C89               	rrf	9,f
  3262  0C22  0C89               	rrf	9,f
  3263  0C23  3901               	andlw	1
  3264  0C24  0008               	return
  3265  0C25                     __end_of_I2C_Start:	
  3266                           
  3267                           	psect	text18
  3268  0B15                     __ptext18:	
  3269 ;; *************** function _I2C_Send *****************
  3270 ;; Defined at:
  3271 ;;		line 243 in file "My_header_16F.h"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  data            1    wreg     unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  data            1    2[BANK1 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3285 ;;      Params:         0       0       0       0       0       0
  3286 ;;      Locals:         0       0       1       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0
  3288 ;;      Totals:         0       0       1       0       0       0
  3289 ;;Total ram usage:        1 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    7
  3292 ;; This function calls:
  3293 ;;		_I2C_IdleCheck
  3294 ;; This function is called by:
  3295 ;;		_LCD_Command
  3296 ;;		_EEP_Read
  3297 ;;		_LCD_CreateChar
  3298 ;;		_RTC_Write
  3299 ;;		_RTC_Read
  3300 ;;		_TM_init
  3301 ;;		_TM_Read
  3302 ;;		_EEP_Writes
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           
  3307                           ;psect for function _I2C_Send
  3308  0B15                     _I2C_Send:	
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3312                           ;I2C_Send@data stored from wreg
  3313  0B15  0021               	movlb	1	; select bank1
  3314  0B16  00A2               	movwf	I2C_Send@data^(0+128)
  3315                           
  3316                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  3317  0B17  3005               	movlw	5
  3318  0B18  318A  22D7  318B   	fcall	_I2C_IdleCheck
  3319                           
  3320                           ;My_header_16F.h: 245: SSP1IF = 0;
  3321  0B1B  0020               	movlb	0	; select bank0
  3322  0B1C  1191               	bcf	17,3	;volatile
  3323                           
  3324                           ;My_header_16F.h: 246: SSP1BUF = data;
  3325  0B1D  0021               	movlb	1	; select bank1
  3326  0B1E  0822               	movf	I2C_Send@data^(0+128),w
  3327  0B1F  0024               	movlb	4	; select bank4
  3328  0B20  0091               	movwf	17	;volatile
  3329  0B21                     l201:	
  3330                           ;My_header_16F.h: 247: while (!SSP1IF);
  3331                           
  3332  0B21  0020               	movlb	0	; select bank0
  3333  0B22  1D91               	btfss	17,3	;volatile
  3334  0B23  2B21               	goto	l201
  3335                           
  3336                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  3337                           ;	Return value of _I2C_Send is never used
  3338  0B24  0024               	movlb	4	; select bank4
  3339  0B25  0816               	movf	22,w	;volatile
  3340  0B26  0008               	return
  3341  0B27                     __end_of_I2C_Send:	
  3342                           
  3343                           	psect	text19
  3344  0C64                     __ptext19:	
  3345 ;; *************** function _I2C_Receive *****************
  3346 ;; Defined at:
  3347 ;;		line 251 in file "My_header_16F.h"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  ack             1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  ack             1    3[BANK1 ] unsigned char 
  3352 ;;  data            1    4[BANK1 ] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3362 ;;      Params:         0       0       0       0       0       0
  3363 ;;      Locals:         0       0       2       0       0       0
  3364 ;;      Temps:          0       0       1       0       0       0
  3365 ;;      Totals:         0       0       3       0       0       0
  3366 ;;Total ram usage:        3 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    7
  3369 ;; This function calls:
  3370 ;;		_I2C_IdleCheck
  3371 ;; This function is called by:
  3372 ;;		_EEP_Read
  3373 ;;		_RTC_Read
  3374 ;;		_TM_Read
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           
  3379                           ;psect for function _I2C_Receive
  3380  0C64                     _I2C_Receive:	
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  3384                           ;I2C_Receive@ack stored from wreg
  3385  0C64  0021               	movlb	1	; select bank1
  3386  0C65  00A3               	movwf	I2C_Receive@ack^(0+128)
  3387                           
  3388                           ;My_header_16F.h: 252: uint8_t data;
  3389                           ;My_header_16F.h: 254: I2C_IdleCheck(0x5);
  3390  0C66  3005               	movlw	5
  3391  0C67  318A  22D7  318C   	fcall	_I2C_IdleCheck
  3392                           
  3393                           ;My_header_16F.h: 255: SSP1CON2bits.RCEN = 1;
  3394  0C6A  0024               	movlb	4	; select bank4
  3395  0C6B  1596               	bsf	22,3	;volatile
  3396                           
  3397                           ;My_header_16F.h: 256: I2C_IdleCheck(0x4);
  3398  0C6C  3004               	movlw	4
  3399  0C6D  318A  22D7  318C   	fcall	_I2C_IdleCheck
  3400                           
  3401                           ;My_header_16F.h: 257: data = SSP1BUF;
  3402  0C70  0024               	movlb	4	; select bank4
  3403  0C71  0811               	movf	17,w	;volatile
  3404  0C72  0021               	movlb	1	; select bank1
  3405  0C73  00A2               	movwf	??_I2C_Receive^(0+128)
  3406  0C74  0822               	movf	??_I2C_Receive^(0+128),w
  3407  0C75  00A4               	movwf	I2C_Receive@data^(0+128)
  3408                           
  3409                           ;My_header_16F.h: 258: I2C_IdleCheck(0x5);
  3410  0C76  3005               	movlw	5
  3411  0C77  318A  22D7         	fcall	_I2C_IdleCheck
  3412                           
  3413                           ;My_header_16F.h: 259: SSP1CON2bits.ACKDT = ack;
  3414  0C79  0021               	movlb	1	; select bank1
  3415  0C7A  0823               	movf	I2C_Receive@ack^(0+128),w
  3416  0C7B  0024               	movlb	4	; select bank4
  3417  0C7C  1D03               	skipz
  3418  0C7D  1696               	bsf	22,5	;volatile
  3419  0C7E  1903               	skipnz
  3420  0C7F  1296               	bcf	22,5	;volatile
  3421                           
  3422                           ;My_header_16F.h: 260: SSP1CON2bits.ACKEN = 1;
  3423  0C80  1616               	bsf	22,4	;volatile
  3424                           
  3425                           ;My_header_16F.h: 261: return data;
  3426  0C81  0021               	movlb	1	; select bank1
  3427  0C82  0824               	movf	I2C_Receive@data^(0+128),w
  3428  0C83  0008               	return
  3429  0C84                     __end_of_I2C_Receive:	
  3430                           
  3431                           	psect	text20
  3432  0AD7                     __ptext20:	
  3433 ;; *************** function _I2C_IdleCheck *****************
  3434 ;; Defined at:
  3435 ;;		line 199 in file "My_header_16F.h"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  mask            1    wreg     unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  mask            1    1[BANK1 ] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3449 ;;      Params:         0       0       0       0       0       0
  3450 ;;      Locals:         0       0       1       0       0       0
  3451 ;;      Temps:          0       0       1       0       0       0
  3452 ;;      Totals:         0       0       2       0       0       0
  3453 ;;Total ram usage:        2 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    6
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_I2C_Start
  3460 ;;		_I2C_rStart
  3461 ;;		_I2C_Stop
  3462 ;;		_I2C_Send
  3463 ;;		_I2C_Receive
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _I2C_IdleCheck
  3469  0AD7                     _I2C_IdleCheck:	
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3473                           ;I2C_IdleCheck@mask stored from wreg
  3474  0AD7  0021               	movlb	1	; select bank1
  3475  0AD8  00A1               	movwf	I2C_IdleCheck@mask^(0+128)
  3476  0AD9                     l2869:	
  3477                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3478                           
  3479  0AD9  0821               	movf	I2C_IdleCheck@mask^(0+128),w
  3480  0ADA  0024               	movlb	4	; select bank4
  3481  0ADB  0514               	andwf	20,w	;volatile
  3482  0ADC  0021               	movlb	1	; select bank1
  3483  0ADD  00A0               	movwf	??_I2C_IdleCheck^(0+128)
  3484  0ADE  0024               	movlb	4	; select bank4
  3485  0ADF  0816               	movf	22,w	;volatile
  3486  0AE0  391F               	andlw	31
  3487  0AE1  0021               	movlb	1	; select bank1
  3488  0AE2  0420               	iorwf	??_I2C_IdleCheck^(0+128),w
  3489  0AE3  1903               	btfsc	3,2
  3490  0AE4  0008               	return
  3491  0AE5  2AD9               	goto	l2869
  3492  0AE6                     __end_of_I2C_IdleCheck:	
  3493                           
  3494                           	psect	intentry
  3495  0004                     __pintentry:	
  3496 ;; *************** function _isr *****************
  3497 ;; Defined at:
  3498 ;;		line 62 in file "PIC16F1827-ChargeStation4-01.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  i               1   26[BANK0 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3512 ;;      Params:         0       0       0       0       0       0
  3513 ;;      Locals:         0       1       0       0       0       0
  3514 ;;      Temps:          0       8       0       0       0       0
  3515 ;;      Totals:         0       9       0       0       0       0
  3516 ;;Total ram usage:        9 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    5
  3519 ;; This function calls:
  3520 ;;		_EEP_Write
  3521 ;;		___lldiv
  3522 ;;		___wmul
  3523 ;;		_adc
  3524 ;;		_button_timer_interrupt
  3525 ;;		_display
  3526 ;;		_lchika
  3527 ;;		_ringbuf_num
  3528 ;;		_ringbuf_pop
  3529 ;;		i1_OUT
  3530 ;; This function is called by:
  3531 ;;		Interrupt level 1
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535  0004                     _isr:	
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3539  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3540  0005  3180               	pagesel	$
  3541  0006  0020               	movlb	0	; select bank0
  3542  0007  087F               	movf	127,w
  3543  0008  00E0               	movwf	??_isr+7
  3544                           
  3545                           ;PIC16F1827-ChargeStation4-01.c: 63: uint8_t i;
  3546                           ;PIC16F1827-ChargeStation4-01.c: 64: if (PIR1bits.RCIF == 1) {
  3547  0009  1A91               	btfsc	17,5	;volatile
  3548                           
  3549                           ;PIC16F1827-ChargeStation4-01.c: 65: PIR1bits.RCIF = 0;
  3550  000A  1291               	bcf	17,5	;volatile
  3551                           
  3552                           ;PIC16F1827-ChargeStation4-01.c: 66: }
  3553                           ;PIC16F1827-ChargeStation4-01.c: 67: if (PIR1bits.TXIF & PIE1bits.TXIE) {
  3554  000B  0021               	movlb	1	; select bank1
  3555  000C  0E11               	swapf	17,w	;volatile
  3556  000D  3901               	andlw	1
  3557  000E  0020               	movlb	0	; select bank0
  3558  000F  00D9               	movwf	??_isr
  3559  0010  0E11               	swapf	17,w	;volatile
  3560  0011  3901               	andlw	1
  3561  0012  0559               	andwf	??_isr,w
  3562  0013  1903               	btfsc	3,2
  3563  0014  2825               	goto	i1l302
  3564                           
  3565                           ;PIC16F1827-ChargeStation4-01.c: 68: if (ringbuf_num(&tx_buf)) {
  3566  0015  305D               	movlw	(low (_tx_buf| (0+256)))& (0+255)
  3567  0016  3187  27CE  3180   	fcall	_ringbuf_num
  3568  0019  3A00               	xorlw	0
  3569  001A  1903               	skipnz
  3570  001B  2823               	goto	i1l303
  3571                           
  3572                           ;PIC16F1827-ChargeStation4-01.c: 69: TXREG = ringbuf_pop(&tx_buf);
  3573  001C  305D               	movlw	(low (_tx_buf| (0+256)))& (0+255)
  3574  001D  318E  2609  3180   	fcall	_ringbuf_pop
  3575  0020  0023               	movlb	3	; select bank3
  3576  0021  009A               	movwf	26	;volatile
  3577                           
  3578                           ;PIC16F1827-ChargeStation4-01.c: 70: } else {
  3579  0022  2825               	goto	i1l302
  3580  0023                     i1l303:	
  3581                           
  3582                           ;PIC16F1827-ChargeStation4-01.c: 71: PIE1bits.TXIE = 0;
  3583  0023  0021               	movlb	1	; select bank1
  3584  0024  1211               	bcf	17,4	;volatile
  3585  0025                     i1l302:	
  3586                           
  3587                           ;PIC16F1827-ChargeStation4-01.c: 72: }
  3588                           ;PIC16F1827-ChargeStation4-01.c: 73: }
  3589                           ;PIC16F1827-ChargeStation4-01.c: 74: if (PIR1bits.TMR1IF == 1) {
  3590  0025  0020               	movlb	0	; select bank0
  3591  0026  1C11               	btfss	17,0	;volatile
  3592  0027  28B5               	goto	i1l305
  3593                           
  3594                           ;PIC16F1827-ChargeStation4-01.c: 75: PIR1bits.TMR1IF = 0;
  3595  0028  1011               	bcf	17,0	;volatile
  3596                           
  3597                           ;PIC16F1827-ChargeStation4-01.c: 76: button_timer_interrupt(&sw_RA3, !RA3);
  3598  0029  1003               	clrc
  3599  002A  1D8C               	btfss	12,3	;volatile
  3600  002B  1403               	setc
  3601  002C  3000               	movlw	0
  3602  002D  1803               	btfsc	3,0
  3603  002E  3001               	movlw	1
  3604  002F  00F0               	movwf	button_timer_interrupt@sw_value
  3605  0030  303E               	movlw	(low (_sw_RA3| 0))& (0+255)
  3606  0031  3186  2622  3180   	fcall	_button_timer_interrupt
  3607                           
  3608                           ;PIC16F1827-ChargeStation4-01.c: 77: button_timer_interrupt(&sw_RA4, !RA4);
  3609  0034  1003               	clrc
  3610  0035  0020               	movlb	0	; select bank0
  3611  0036  1E0C               	btfss	12,4	;volatile
  3612  0037  1403               	setc
  3613  0038  3000               	movlw	0
  3614  0039  1803               	btfsc	3,0
  3615  003A  3001               	movlw	1
  3616  003B  00F0               	movwf	button_timer_interrupt@sw_value
  3617  003C  3041               	movlw	(low (_sw_RA4| 0))& (0+255)
  3618  003D  3186  2622  3180   	fcall	_button_timer_interrupt
  3619                           
  3620                           ;PIC16F1827-ChargeStation4-01.c: 78: button_timer_interrupt(&sw_RA5, !RA5);
  3621  0040  1003               	clrc
  3622  0041  0020               	movlb	0	; select bank0
  3623  0042  1E8C               	btfss	12,5	;volatile
  3624  0043  1403               	setc
  3625  0044  3000               	movlw	0
  3626  0045  1803               	btfsc	3,0
  3627  0046  3001               	movlw	1
  3628  0047  00F0               	movwf	button_timer_interrupt@sw_value
  3629  0048  3044               	movlw	(low (_sw_RA5| 0))& (0+255)
  3630  0049  3186  2622  3180   	fcall	_button_timer_interrupt
  3631                           
  3632                           ;PIC16F1827-ChargeStation4-01.c: 80: for (i = 0; i < 3; i++) {
  3633  004C  0020               	movlb	0	; select bank0
  3634  004D  01E1               	clrf	isr@i
  3635  004E  3003               	movlw	3
  3636  004F  0261               	subwf	isr@i,w
  3637  0050  1803               	btfsc	3,0
  3638  0051  28B5               	goto	i1l305
  3639  0052                     i1l2709:	
  3640                           
  3641                           ;PIC16F1827-ChargeStation4-01.c: 81: v[i] = 2 * adc(2 - i) * 3 / 4;
  3642  0052  0361               	decf	isr@i,w
  3643  0053  3AFF               	xorlw	255
  3644  0054  3E02               	addlw	2
  3645  0055  318B  2369  3180   	fcall	_adc
  3646  0058  3570               	lslf	?_adc,w
  3647  0059  00F4               	movwf	___wmul@multiplier
  3648  005A  0D71               	rlf	?_adc+1,w
  3649  005B  00F5               	movwf	___wmul@multiplier+1
  3650  005C  3003               	movlw	3
  3651  005D  00F6               	movwf	___wmul@multiplicand
  3652  005E  3000               	movlw	0
  3653  005F  00F7               	movwf	___wmul@multiplicand+1
  3654  0060  318B  23B6  3180   	fcall	___wmul
  3655  0063  0874               	movf	?___wmul,w
  3656  0064  0020               	movlb	0	; select bank0
  3657  0065  00D9               	movwf	??_isr
  3658  0066  0875               	movf	?___wmul+1,w
  3659  0067  00DA               	movwf	??_isr+1
  3660  0068  36DA               	lsrf	??_isr+1,f
  3661  0069  0CD9               	rrf	??_isr,f
  3662  006A  36DA               	lsrf	??_isr+1,f
  3663  006B  0CD9               	rrf	??_isr,f
  3664  006C  3561               	lslf	isr@i,w
  3665  006D  3E32               	addlw	(low (_v| 0))& (0+255)
  3666  006E  0086               	movwf	6
  3667  006F  0187               	clrf	7
  3668  0070  0859               	movf	??_isr,w
  3669  0071  3FC0               	movwi [0]fsr1
  3670  0072  085A               	movf	??_isr+1,w
  3671  0073  3FC1               	movwi [1]fsr1
  3672                           
  3673                           ;PIC16F1827-ChargeStation4-01.c: 83: if (v[i] < 50) {
  3674  0074  3561               	lslf	isr@i,w
  3675  0075  3E32               	addlw	(low (_v| 0))& (0+255)
  3676  0076  0086               	movwf	6
  3677  0077  0187               	clrf	7
  3678  0078  3F40               	moviw [0]fsr1
  3679  0079  00D9               	movwf	??_isr
  3680  007A  3F41               	moviw [1]fsr1
  3681  007B  00DA               	movwf	??_isr+1
  3682  007C  3000               	movlw	0
  3683  007D  025A               	subwf	??_isr+1,w
  3684  007E  3032               	movlw	50
  3685  007F  1903               	skipnz
  3686  0080  0259               	subwf	??_isr,w
  3687  0081  1803               	skipnc
  3688  0082  28A3               	goto	i1l2717
  3689                           
  3690                           ;PIC16F1827-ChargeStation4-01.c: 84: cut[i]++;
  3691  0083  3561               	lslf	isr@i,w
  3692  0084  3E57               	addlw	(low (_cut| (0+256)))& (0+255)
  3693  0085  0086               	movwf	6
  3694  0086  3001               	movlw	1	; select bank2/3
  3695  0087  0087               	movwf	7
  3696  0088  3001               	movlw	1
  3697  0089  0781               	addwf	1,f
  3698  008A  3141               	addfsr 1,1
  3699  008B  1803               	skipnc
  3700  008C  0A81               	incf	1,f
  3701                           
  3702                           ;PIC16F1827-ChargeStation4-01.c: 85: if (cut[i] >= 30 * 6) {
  3703  008D  3561               	lslf	isr@i,w
  3704  008E  3E57               	addlw	(low (_cut| (0+256)))& (0+255)
  3705  008F  0086               	movwf	6
  3706  0090  3001               	movlw	1	; select bank2/3
  3707  0091  0087               	movwf	7
  3708  0092  3F40               	moviw [0]fsr1
  3709  0093  00D9               	movwf	??_isr
  3710  0094  3F41               	moviw [1]fsr1
  3711  0095  00DA               	movwf	??_isr+1
  3712  0096  3000               	movlw	0
  3713  0097  025A               	subwf	??_isr+1,w
  3714  0098  30B4               	movlw	180
  3715  0099  1903               	skipnz
  3716  009A  0259               	subwf	??_isr,w
  3717  009B  1C03               	skipc
  3718  009C  28AC               	goto	i1l2719
  3719                           
  3720                           ;PIC16F1827-ChargeStation4-01.c: 86: OUT(i, 0);
  3721  009D  01F0               	clrf	i1OUT@value
  3722  009E  0861               	movf	isr@i,w
  3723  009F  318D  2559  3180   	fcall	i1_OUT
  3724                           
  3725                           ;PIC16F1827-ChargeStation4-01.c: 87: }
  3726                           ;PIC16F1827-ChargeStation4-01.c: 88: } else {
  3727  00A2  28AC               	goto	i1l2719
  3728  00A3                     i1l2717:	
  3729                           
  3730                           ;PIC16F1827-ChargeStation4-01.c: 89: cut[i] = 0;
  3731  00A3  0020               	movlb	0	; select bank0
  3732  00A4  3561               	lslf	isr@i,w
  3733  00A5  3E57               	addlw	(low (_cut| (0+256)))& (0+255)
  3734  00A6  0086               	movwf	6
  3735  00A7  3001               	movlw	1	; select bank2/3
  3736  00A8  0087               	movwf	7
  3737  00A9  3000               	movlw	0
  3738  00AA  3FC0               	movwi [0]fsr1
  3739  00AB  3FC1               	movwi [1]fsr1
  3740  00AC                     i1l2719:	
  3741  00AC  3001               	movlw	1
  3742  00AD  0020               	movlb	0	; select bank0
  3743  00AE  00D9               	movwf	??_isr
  3744  00AF  0859               	movf	??_isr,w
  3745  00B0  07E1               	addwf	isr@i,f
  3746  00B1  3003               	movlw	3
  3747  00B2  0261               	subwf	isr@i,w
  3748  00B3  1C03               	skipc
  3749  00B4  2852               	goto	i1l2709
  3750  00B5                     i1l305:	
  3751                           
  3752                           ;PIC16F1827-ChargeStation4-01.c: 90: }
  3753                           ;PIC16F1827-ChargeStation4-01.c: 91: }
  3754                           ;PIC16F1827-ChargeStation4-01.c: 92: }
  3755                           ;PIC16F1827-ChargeStation4-01.c: 93: if (INTCONbits.TMR0IF == 1) {
  3756  00B5  1D0B               	btfss	11,2	;volatile
  3757  00B6  2A0B               	goto	i1l317
  3758                           
  3759                           ;PIC16F1827-ChargeStation4-01.c: 94: INTCONbits.TMR0IF = 0;
  3760  00B7  110B               	bcf	11,2	;volatile
  3761                           
  3762                           ;PIC16F1827-ChargeStation4-01.c: 95: cnt0++;
  3763  00B8  3001               	movlw	1
  3764  00B9  07B8               	addwf	_cnt0,f
  3765  00BA  3000               	movlw	0
  3766  00BB  3DB9               	addwfc	_cnt0+1,f
  3767                           
  3768                           ;PIC16F1827-ChargeStation4-01.c: 96: if (cnt0 == 400) {
  3769  00BC  3090               	movlw	144
  3770  00BD  0638               	xorwf	_cnt0,w
  3771  00BE  1D03               	skipz
  3772  00BF  28D1               	goto	i1l2735
  3773  00C0  0339               	decf	_cnt0+1,w
  3774  00C1  1D03               	btfss	3,2
  3775  00C2  28D1               	goto	i1l2735
  3776                           
  3777                           ;PIC16F1827-ChargeStation4-01.c: 97: cnt0 = 0;
  3778  00C3  01B8               	clrf	_cnt0
  3779  00C4  01B9               	clrf	_cnt0+1
  3780                           
  3781                           ;PIC16F1827-ChargeStation4-01.c: 98: lchika();
  3782  00C5  3187  2759  3180   	fcall	_lchika
  3783                           
  3784                           ;PIC16F1827-ChargeStation4-01.c: 99: display(print_port, print_content);
  3785  00C8  0020               	movlb	0	; select bank0
  3786  00C9  083C               	movf	_print_content,w
  3787  00CA  00D9               	movwf	??_isr
  3788  00CB  0859               	movf	??_isr,w
  3789  00CC  00D5               	movwf	display@co
  3790  00CD  083D               	movf	_print_port,w
  3791  00CE  3184  243C  3180   	fcall	_display
  3792  00D1                     i1l2735:	
  3793                           
  3794                           ;PIC16F1827-ChargeStation4-01.c: 100: }
  3795                           ;PIC16F1827-ChargeStation4-01.c: 101: cnt1s++;
  3796  00D1  3001               	movlw	1
  3797  00D2  0020               	movlb	0	; select bank0
  3798  00D3  07BA               	addwf	_cnt1s,f
  3799  00D4  3000               	movlw	0
  3800  00D5  3DBB               	addwfc	_cnt1s+1,f
  3801                           
  3802                           ;PIC16F1827-ChargeStation4-01.c: 103: if (cnt1s == 1953) {
  3803  00D6  30A1               	movlw	161
  3804  00D7  063A               	xorwf	_cnt1s,w
  3805  00D8  3007               	movlw	7
  3806  00D9  1903               	skipnz
  3807  00DA  063B               	xorwf	_cnt1s+1,w
  3808  00DB  1D03               	btfss	3,2
  3809  00DC  2A0B               	goto	i1l317
  3810                           
  3811                           ;PIC16F1827-ChargeStation4-01.c: 104: cnt1s = 0;
  3812  00DD  01BA               	clrf	_cnt1s
  3813  00DE  01BB               	clrf	_cnt1s+1
  3814                           
  3815                           ;PIC16F1827-ChargeStation4-01.c: 105: for (i = 0; i < 3; i++) {
  3816  00DF  01E1               	clrf	isr@i
  3817  00E0  3003               	movlw	3
  3818  00E1  0261               	subwf	isr@i,w
  3819  00E2  1803               	btfsc	3,0
  3820  00E3  2A0B               	goto	i1l317
  3821  00E4                     i1l2745:	
  3822                           
  3823                           ;PIC16F1827-ChargeStation4-01.c: 106: ss[i] += v[i];
  3824  00E4  3561               	lslf	isr@i,w
  3825  00E5  3E32               	addlw	(low (_v| 0))& (0+255)
  3826  00E6  0086               	movwf	6
  3827  00E7  0187               	clrf	7
  3828  00E8  3F40               	moviw [0]fsr1
  3829  00E9  00D9               	movwf	??_isr
  3830  00EA  3F41               	moviw [1]fsr1
  3831  00EB  00DA               	movwf	??_isr+1
  3832  00EC  0859               	movf	??_isr,w
  3833  00ED  00DB               	movwf	??_isr+2
  3834  00EE  085A               	movf	??_isr+1,w
  3835  00EF  00DC               	movwf	??_isr+3
  3836  00F0  01DD               	clrf	??_isr+4
  3837  00F1  01DE               	clrf	??_isr+5
  3838  00F2  0861               	movf	isr@i,w
  3839  00F3  00DF               	movwf	??_isr+6
  3840  00F4  3001               	movlw	1
  3841  00F5                     u296_25:	
  3842  00F5  35DF               	lslf	??_isr+6,f
  3843  00F6  3EFF               	addlw	-1
  3844  00F7  1D03               	skipz
  3845  00F8  28F5               	goto	u296_25
  3846  00F9  355F               	lslf	??_isr+6,w
  3847  00FA  3E20               	addlw	(low (_ss| 0))& (0+255)
  3848  00FB  0086               	movwf	6
  3849  00FC  0187               	clrf	7
  3850  00FD  085B               	movf	??_isr+2,w
  3851  00FE  0781               	addwf	1,f
  3852  00FF  3141               	addfsr 1,1
  3853  0100  085C               	movf	??_isr+3,w
  3854  0101  3D81               	addwfc	1,f
  3855  0102  3141               	addfsr 1,1
  3856  0103  085D               	movf	??_isr+4,w
  3857  0104  3D81               	addwfc	1,f
  3858  0105  3141               	addfsr 1,1
  3859  0106  085E               	movf	??_isr+5,w
  3860  0107  3D81               	addwfc	1,f
  3861                           
  3862                           ;PIC16F1827-ChargeStation4-01.c: 107: s[i] = ss[i] / 3600;
  3863  0108  3000               	movlw	0
  3864  0109  00F3               	movwf	___lldiv@divisor+3
  3865  010A  3000               	movlw	0
  3866  010B  00F2               	movwf	___lldiv@divisor+2
  3867  010C  300E               	movlw	14
  3868  010D  00F1               	movwf	___lldiv@divisor+1
  3869  010E  3010               	movlw	16
  3870  010F  00F0               	movwf	___lldiv@divisor
  3871  0110  0861               	movf	isr@i,w
  3872  0111  00D9               	movwf	??_isr
  3873  0112  3001               	movlw	1
  3874  0113                     u297_25:	
  3875  0113  35D9               	lslf	??_isr,f
  3876  0114  3EFF               	addlw	-1
  3877  0115  1D03               	skipz
  3878  0116  2913               	goto	u297_25
  3879  0117  3559               	lslf	??_isr,w
  3880  0118  3E20               	addlw	(low (_ss| 0))& (0+255)
  3881  0119  0086               	movwf	6
  3882  011A  0187               	clrf	7
  3883  011B  3F40               	moviw [0]fsr1
  3884  011C  00F4               	movwf	___lldiv@dividend
  3885  011D  3F41               	moviw [1]fsr1
  3886  011E  00F5               	movwf	___lldiv@dividend+1
  3887  011F  3F42               	moviw [2]fsr1
  3888  0120  00F6               	movwf	___lldiv@dividend+2
  3889  0121  3F43               	moviw [3]fsr1
  3890  0122  00F7               	movwf	___lldiv@dividend+3
  3891  0123  318F  2741  3180   	fcall	___lldiv
  3892  0126  0020               	movlb	0	; select bank0
  3893  0127  3561               	lslf	isr@i,w
  3894  0128  3E2C               	addlw	(low (_s| 0))& (0+255)
  3895  0129  0086               	movwf	6
  3896  012A  0187               	clrf	7
  3897  012B  0870               	movf	?___lldiv,w
  3898  012C  3FC0               	movwi [0]fsr1
  3899  012D  0871               	movf	?___lldiv+1,w
  3900  012E  3FC1               	movwi [1]fsr1
  3901                           
  3902                           ;PIC16F1827-ChargeStation4-01.c: 108: if (s[i] != sp[i]) {
  3903  012F  3561               	lslf	isr@i,w
  3904  0130  3ECA               	addlw	(low (_sp| 0))& (0+255)
  3905  0131  0086               	movwf	6
  3906  0132  0187               	clrf	7
  3907  0133  3F40               	moviw [0]fsr1
  3908  0134  00D9               	movwf	??_isr
  3909  0135  3F41               	moviw [1]fsr1
  3910  0136  00DA               	movwf	??_isr+1
  3911  0137  3561               	lslf	isr@i,w
  3912  0138  3E2C               	addlw	(low (_s| 0))& (0+255)
  3913  0139  0086               	movwf	6
  3914  013A  0187               	clrf	7
  3915  013B  3F40               	moviw [0]fsr1
  3916  013C  00DB               	movwf	??_isr+2
  3917  013D  3F41               	moviw [1]fsr1
  3918  013E  00DC               	movwf	??_isr+3
  3919  013F  085A               	movf	??_isr+1,w
  3920  0140  065C               	xorwf	??_isr+3,w
  3921  0141  1D03               	skipz
  3922  0142  2945               	goto	u298_25
  3923  0143  0859               	movf	??_isr,w
  3924  0144  065B               	xorwf	??_isr+2,w
  3925  0145                     u298_25:	
  3926  0145  1903               	skipnz
  3927  0146  2A03               	goto	i1l2765
  3928                           
  3929                           ;PIC16F1827-ChargeStation4-01.c: 109: EEP_Write(i, 0, (ss[i]) >> 24);
  3930  0147  01F4               	clrf	EEP_Write@Reg_l
  3931  0148  0861               	movf	isr@i,w
  3932  0149  00D9               	movwf	??_isr
  3933  014A  3001               	movlw	1
  3934  014B                     u299_25:	
  3935  014B  35D9               	lslf	??_isr,f
  3936  014C  3EFF               	addlw	-1
  3937  014D  1D03               	skipz
  3938  014E  294B               	goto	u299_25
  3939  014F  3559               	lslf	??_isr,w
  3940  0150  3E20               	addlw	(low (_ss| 0))& (0+255)
  3941  0151  0086               	movwf	6
  3942  0152  0187               	clrf	7
  3943  0153  3F40               	moviw [0]fsr1
  3944  0154  00DA               	movwf	??_isr+1
  3945  0155  3F41               	moviw [1]fsr1
  3946  0156  00DB               	movwf	??_isr+2
  3947  0157  3F42               	moviw [2]fsr1
  3948  0158  00DC               	movwf	??_isr+3
  3949  0159  3F43               	moviw [3]fsr1
  3950  015A  00DD               	movwf	??_isr+4
  3951  015B  3018               	movlw	24
  3952  015C                     u300_25:	
  3953  015C  36DD               	lsrf	??_isr+4,f
  3954  015D  0CDC               	rrf	??_isr+3,f
  3955  015E  0CDB               	rrf	??_isr+2,f
  3956  015F  0CDA               	rrf	??_isr+1,f
  3957  0160  0B89               	decfsz	9,f
  3958  0161  295C               	goto	u300_25
  3959  0162  085A               	movf	??_isr+1,w
  3960  0163  00DE               	movwf	??_isr+5
  3961  0164  085E               	movf	??_isr+5,w
  3962  0165  00F5               	movwf	EEP_Write@data
  3963  0166  0861               	movf	isr@i,w
  3964  0167  318C  2444  3180   	fcall	_EEP_Write
  3965                           
  3966                           ;PIC16F1827-ChargeStation4-01.c: 110: _delay((unsigned long)((1)*(32000000/4000.0)));
  3967  016A  300B               	movlw	11
  3968  016B  0020               	movlb	0	; select bank0
  3969  016C  00DA               	movwf	??_isr+1
  3970  016D  3062               	movlw	98
  3971  016E  00D9               	movwf	??_isr
  3972  016F                     u373_27:	
  3973  016F  0BD9               	decfsz	??_isr,f
  3974  0170  296F               	goto	u373_27
  3975  0171  0BDA               	decfsz	??_isr+1,f
  3976  0172  296F               	goto	u373_27
  3977  0173  0000               	nop
  3978                           
  3979                           ;PIC16F1827-ChargeStation4-01.c: 111: EEP_Write(i, 1, (ss[i]) >> 16);
  3980  0174  01F4               	clrf	EEP_Write@Reg_l
  3981  0175  0AF4               	incf	EEP_Write@Reg_l,f
  3982  0176  0020               	movlb	0	; select bank0
  3983  0177  0861               	movf	isr@i,w
  3984  0178  00D9               	movwf	??_isr
  3985  0179  3001               	movlw	1
  3986  017A                     u301_25:	
  3987  017A  35D9               	lslf	??_isr,f
  3988  017B  3EFF               	addlw	-1
  3989  017C  1D03               	skipz
  3990  017D  297A               	goto	u301_25
  3991  017E  3559               	lslf	??_isr,w
  3992  017F  3E20               	addlw	(low (_ss| 0))& (0+255)
  3993  0180  0086               	movwf	6
  3994  0181  0187               	clrf	7
  3995  0182  3F40               	moviw [0]fsr1
  3996  0183  00DA               	movwf	??_isr+1
  3997  0184  3F41               	moviw [1]fsr1
  3998  0185  00DB               	movwf	??_isr+2
  3999  0186  3F42               	moviw [2]fsr1
  4000  0187  00DC               	movwf	??_isr+3
  4001  0188  3F43               	moviw [3]fsr1
  4002  0189  00DD               	movwf	??_isr+4
  4003  018A  3010               	movlw	16
  4004  018B                     u302_25:	
  4005  018B  36DD               	lsrf	??_isr+4,f
  4006  018C  0CDC               	rrf	??_isr+3,f
  4007  018D  0CDB               	rrf	??_isr+2,f
  4008  018E  0CDA               	rrf	??_isr+1,f
  4009  018F  0B89               	decfsz	9,f
  4010  0190  298B               	goto	u302_25
  4011  0191  085A               	movf	??_isr+1,w
  4012  0192  00DE               	movwf	??_isr+5
  4013  0193  085E               	movf	??_isr+5,w
  4014  0194  00F5               	movwf	EEP_Write@data
  4015  0195  0861               	movf	isr@i,w
  4016  0196  318C  2444  3180   	fcall	_EEP_Write
  4017                           
  4018                           ;PIC16F1827-ChargeStation4-01.c: 112: _delay((unsigned long)((1)*(32000000/4000.0)));
  4019  0199  300B               	movlw	11
  4020  019A  0020               	movlb	0	; select bank0
  4021  019B  00DA               	movwf	??_isr+1
  4022  019C  3062               	movlw	98
  4023  019D  00D9               	movwf	??_isr
  4024  019E                     u374_27:	
  4025  019E  0BD9               	decfsz	??_isr,f
  4026  019F  299E               	goto	u374_27
  4027  01A0  0BDA               	decfsz	??_isr+1,f
  4028  01A1  299E               	goto	u374_27
  4029  01A2  0000               	nop
  4030                           
  4031                           ;PIC16F1827-ChargeStation4-01.c: 113: EEP_Write(i, 2, (ss[i]) >> 8);
  4032  01A3  3002               	movlw	2
  4033  01A4  0020               	movlb	0	; select bank0
  4034  01A5  00D9               	movwf	??_isr
  4035  01A6  0859               	movf	??_isr,w
  4036  01A7  00F4               	movwf	EEP_Write@Reg_l
  4037  01A8  0861               	movf	isr@i,w
  4038  01A9  00DA               	movwf	??_isr+1
  4039  01AA  3001               	movlw	1
  4040  01AB                     u303_25:	
  4041  01AB  35DA               	lslf	??_isr+1,f
  4042  01AC  3EFF               	addlw	-1
  4043  01AD  1D03               	skipz
  4044  01AE  29AB               	goto	u303_25
  4045  01AF  355A               	lslf	??_isr+1,w
  4046  01B0  3E20               	addlw	(low (_ss| 0))& (0+255)
  4047  01B1  0086               	movwf	6
  4048  01B2  0187               	clrf	7
  4049  01B3  3F40               	moviw [0]fsr1
  4050  01B4  00DB               	movwf	??_isr+2
  4051  01B5  3F41               	moviw [1]fsr1
  4052  01B6  00DC               	movwf	??_isr+3
  4053  01B7  3F42               	moviw [2]fsr1
  4054  01B8  00DD               	movwf	??_isr+4
  4055  01B9  3F43               	moviw [3]fsr1
  4056  01BA  00DE               	movwf	??_isr+5
  4057  01BB  3008               	movlw	8
  4058  01BC                     u304_25:	
  4059  01BC  36DE               	lsrf	??_isr+5,f
  4060  01BD  0CDD               	rrf	??_isr+4,f
  4061  01BE  0CDC               	rrf	??_isr+3,f
  4062  01BF  0CDB               	rrf	??_isr+2,f
  4063  01C0  0B89               	decfsz	9,f
  4064  01C1  29BC               	goto	u304_25
  4065  01C2  085B               	movf	??_isr+2,w
  4066  01C3  00DF               	movwf	??_isr+6
  4067  01C4  085F               	movf	??_isr+6,w
  4068  01C5  00F5               	movwf	EEP_Write@data
  4069  01C6  0861               	movf	isr@i,w
  4070  01C7  318C  2444  3180   	fcall	_EEP_Write
  4071                           
  4072                           ;PIC16F1827-ChargeStation4-01.c: 114: _delay((unsigned long)((1)*(32000000/4000.0)));
  4073  01CA  300B               	movlw	11
  4074  01CB  0020               	movlb	0	; select bank0
  4075  01CC  00DA               	movwf	??_isr+1
  4076  01CD  3062               	movlw	98
  4077  01CE  00D9               	movwf	??_isr
  4078  01CF                     u375_27:	
  4079  01CF  0BD9               	decfsz	??_isr,f
  4080  01D0  29CF               	goto	u375_27
  4081  01D1  0BDA               	decfsz	??_isr+1,f
  4082  01D2  29CF               	goto	u375_27
  4083  01D3  0000               	nop
  4084                           
  4085                           ;PIC16F1827-ChargeStation4-01.c: 115: EEP_Write(i, 3, (ss[i]) >> 0);
  4086  01D4  3003               	movlw	3
  4087  01D5  0020               	movlb	0	; select bank0
  4088  01D6  00D9               	movwf	??_isr
  4089  01D7  0859               	movf	??_isr,w
  4090  01D8  00F4               	movwf	EEP_Write@Reg_l
  4091  01D9  0861               	movf	isr@i,w
  4092  01DA  00DA               	movwf	??_isr+1
  4093  01DB  3001               	movlw	1
  4094  01DC                     u305_25:	
  4095  01DC  35DA               	lslf	??_isr+1,f
  4096  01DD  3EFF               	addlw	-1
  4097  01DE  1D03               	skipz
  4098  01DF  29DC               	goto	u305_25
  4099  01E0  355A               	lslf	??_isr+1,w
  4100  01E1  3E20               	addlw	(low (_ss| 0))& (0+255)
  4101  01E2  0086               	movwf	6
  4102  01E3  0187               	clrf	7
  4103  01E4  0801               	movf	1,w
  4104  01E5  00DB               	movwf	??_isr+2
  4105  01E6  085B               	movf	??_isr+2,w
  4106  01E7  00F5               	movwf	EEP_Write@data
  4107  01E8  0861               	movf	isr@i,w
  4108  01E9  318C  2444  3180   	fcall	_EEP_Write
  4109                           
  4110                           ;PIC16F1827-ChargeStation4-01.c: 116: _delay((unsigned long)((1)*(32000000/4000.0)));
  4111  01EC  300B               	movlw	11
  4112  01ED  0020               	movlb	0	; select bank0
  4113  01EE  00DA               	movwf	??_isr+1
  4114  01EF  3062               	movlw	98
  4115  01F0  00D9               	movwf	??_isr
  4116  01F1                     u376_27:	
  4117  01F1  0BD9               	decfsz	??_isr,f
  4118  01F2  29F1               	goto	u376_27
  4119  01F3  0BDA               	decfsz	??_isr+1,f
  4120  01F4  29F1               	goto	u376_27
  4121  01F5  0000               	nop
  4122                           
  4123                           ;PIC16F1827-ChargeStation4-01.c: 117: sp[i] = s[i];
  4124  01F6  0020               	movlb	0	; select bank0
  4125  01F7  3561               	lslf	isr@i,w
  4126  01F8  3E2C               	addlw	(low (_s| 0))& (0+255)
  4127  01F9  0086               	movwf	6
  4128  01FA  0187               	clrf	7
  4129  01FB  3561               	lslf	isr@i,w
  4130  01FC  3ECA               	addlw	(low (_sp| 0))& (0+255)
  4131  01FD  0084               	movwf	4
  4132  01FE  0185               	clrf	5
  4133  01FF  3F40               	moviw [0]fsr1
  4134  0200  3F80               	movwi [0]fsr0
  4135  0201  3F41               	moviw [1]fsr1
  4136  0202  3F81               	movwi [1]fsr0
  4137  0203                     i1l2765:	
  4138  0203  3001               	movlw	1
  4139  0204  00D9               	movwf	??_isr
  4140  0205  0859               	movf	??_isr,w
  4141  0206  07E1               	addwf	isr@i,f
  4142  0207  3003               	movlw	3
  4143  0208  0261               	subwf	isr@i,w
  4144  0209  1C03               	skipc
  4145  020A  28E4               	goto	i1l2745
  4146  020B                     i1l317:	
  4147  020B  0860               	movf	??_isr+7,w
  4148  020C  00FF               	movwf	127
  4149  020D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4150  020E  0009               	retfie
  4151  020F                     __end_of_isr:	
  4152                           
  4153                           	psect	text22
  4154  0D59                     __ptext22:	
  4155 ;; *************** function i1_OUT *****************
  4156 ;; Defined at:
  4157 ;;		line 215 in file "PIC16F1827-ChargeStation4-01.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  b               1    wreg     unsigned char 
  4160 ;;  value           1    0[COMMON] unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  b               1    1[COMMON] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;		None               void
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4172 ;;      Params:         1       0       0       0       0       0
  4173 ;;      Locals:         1       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0
  4175 ;;      Totals:         2       0       0       0       0       0
  4176 ;;Total ram usage:        2 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_isr
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function i1_OUT
  4187  0D59                     i1_OUT:	
  4188                           
  4189                           ;incstack = 0
  4190                           ; Regs used in i1_OUT: [wreg-fsr0h+status,2+status,0]
  4191                           ;i1OUT@b stored from wreg
  4192  0D59  00F1               	movwf	i1OUT@b
  4193                           
  4194                           ;PIC16F1827-ChargeStation4-01.c: 216: switch (b) {
  4195  0D5A  2D76               	goto	i1l2585
  4196  0D5B                     i1l2571:	
  4197                           ;PIC16F1827-ChargeStation4-01.c: 217: case 0:
  4198                           
  4199                           
  4200                           ;PIC16F1827-ChargeStation4-01.c: 218: if (value) {
  4201  0D5B  0870               	movf	i1OUT@value,w
  4202  0D5C  1903               	btfsc	3,2
  4203  0D5D  2D61               	goto	i1l356
  4204                           
  4205                           ;PIC16F1827-ChargeStation4-01.c: 219: LATB0 = 0;
  4206  0D5E  0022               	movlb	2	; select bank2
  4207  0D5F  100D               	bcf	13,0	;volatile
  4208                           
  4209                           ;PIC16F1827-ChargeStation4-01.c: 220: } else {
  4210  0D60  0008               	return
  4211  0D61                     i1l356:	
  4212                           
  4213                           ;PIC16F1827-ChargeStation4-01.c: 221: LATB0 = 1;
  4214  0D61  0022               	movlb	2	; select bank2
  4215  0D62  140D               	bsf	13,0	;volatile
  4216                           
  4217                           ;PIC16F1827-ChargeStation4-01.c: 222: }
  4218                           ;PIC16F1827-ChargeStation4-01.c: 223: break;
  4219  0D63  0008               	return
  4220  0D64                     i1l2575:	
  4221                           ;PIC16F1827-ChargeStation4-01.c: 224: case 1:
  4222                           
  4223                           
  4224                           ;PIC16F1827-ChargeStation4-01.c: 225: if (value) {
  4225  0D64  0870               	movf	i1OUT@value,w
  4226  0D65  1903               	btfsc	3,2
  4227  0D66  2D6A               	goto	i1l360
  4228                           
  4229                           ;PIC16F1827-ChargeStation4-01.c: 226: LATB3 = 0;
  4230  0D67  0022               	movlb	2	; select bank2
  4231  0D68  118D               	bcf	13,3	;volatile
  4232                           
  4233                           ;PIC16F1827-ChargeStation4-01.c: 227: } else {
  4234  0D69  0008               	return
  4235  0D6A                     i1l360:	
  4236                           
  4237                           ;PIC16F1827-ChargeStation4-01.c: 228: LATB3 = 1;
  4238  0D6A  0022               	movlb	2	; select bank2
  4239  0D6B  158D               	bsf	13,3	;volatile
  4240                           
  4241                           ;PIC16F1827-ChargeStation4-01.c: 229: }
  4242                           ;PIC16F1827-ChargeStation4-01.c: 230: break;
  4243  0D6C  0008               	return
  4244  0D6D                     i1l2579:	
  4245                           ;PIC16F1827-ChargeStation4-01.c: 231: case 2:
  4246                           
  4247                           
  4248                           ;PIC16F1827-ChargeStation4-01.c: 232: if (value) {
  4249  0D6D  0870               	movf	i1OUT@value,w
  4250  0D6E  1903               	btfsc	3,2
  4251  0D6F  2D73               	goto	i1l363
  4252                           
  4253                           ;PIC16F1827-ChargeStation4-01.c: 233: LATB6 = 0;
  4254  0D70  0022               	movlb	2	; select bank2
  4255  0D71  130D               	bcf	13,6	;volatile
  4256                           
  4257                           ;PIC16F1827-ChargeStation4-01.c: 234: } else {
  4258  0D72  0008               	return
  4259  0D73                     i1l363:	
  4260                           
  4261                           ;PIC16F1827-ChargeStation4-01.c: 235: LATB6 = 1;
  4262  0D73  0022               	movlb	2	; select bank2
  4263  0D74  170D               	bsf	13,6	;volatile
  4264                           
  4265                           ;PIC16F1827-ChargeStation4-01.c: 240: }
  4266                           
  4267                           ;PIC16F1827-ChargeStation4-01.c: 239: break;
  4268                           
  4269                           ;PIC16F1827-ChargeStation4-01.c: 238: default:
  4270                           
  4271                           ;PIC16F1827-ChargeStation4-01.c: 236: }
  4272                           ;PIC16F1827-ChargeStation4-01.c: 237: break;
  4273  0D75  0008               	return
  4274  0D76                     i1l2585:	
  4275  0D76  0871               	movf	i1OUT@b,w
  4276                           
  4277                           ; Switch size 1, requested type "space"
  4278                           ; Number of cases is 3, Range of values is 0 to 2
  4279                           ; switch strategies available:
  4280                           ; Name         Instructions Cycles
  4281                           ; simple_byte           10     6 (average)
  4282                           ; direct_byte           12     6 (fixed)
  4283                           ; jumptable            260     6 (fixed)
  4284                           ;	Chosen strategy is simple_byte
  4285  0D77  3A00               	xorlw	0	; case 0
  4286  0D78  1903               	skipnz
  4287  0D79  2D5B               	goto	i1l2571
  4288  0D7A  3A01               	xorlw	1	; case 1
  4289  0D7B  1903               	skipnz
  4290  0D7C  2D64               	goto	i1l2575
  4291  0D7D  3A03               	xorlw	3	; case 2
  4292  0D7E  1903               	skipnz
  4293  0D7F  2D6D               	goto	i1l2579
  4294  0D80  2D81               	goto	i1l366
  4295  0D81                     i1l366:	
  4296  0D81  0008               	return
  4297  0D82                     __end_ofi1_OUT:	
  4298                           
  4299                           	psect	text23
  4300  0E09                     __ptext23:	
  4301 ;; *************** function _ringbuf_pop *****************
  4302 ;; Defined at:
  4303 ;;		line 128 in file "My_header_16F.h"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  rb              1    wreg     PTR struct ringbuf
  4306 ;;		 -> tx_buf(4), 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  rb              1    3[COMMON] PTR struct ringbuf
  4309 ;;		 -> tx_buf(4), 
  4310 ;;  ret             1    2[COMMON] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      unsigned char 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4320 ;;      Params:         0       0       0       0       0       0
  4321 ;;      Locals:         2       0       0       0       0       0
  4322 ;;      Temps:          2       0       0       0       0       0
  4323 ;;      Totals:         4       0       0       0       0       0
  4324 ;;Total ram usage:        4 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_isr
  4330 ;;		_interrupt_TXIF
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           
  4335                           ;psect for function _ringbuf_pop
  4336  0E09                     _ringbuf_pop:	
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  4340                           ;ringbuf_pop@rb stored from wreg
  4341  0E09  00F3               	movwf	ringbuf_pop@rb
  4342                           
  4343                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  4344  0E0A  0873               	movf	ringbuf_pop@rb,w
  4345  0E0B  0086               	movwf	6
  4346  0E0C  3001               	movlw	1	; select bank2/3
  4347  0E0D  0087               	movwf	7
  4348  0E0E  0873               	movf	ringbuf_pop@rb,w
  4349  0E0F  3E03               	addlw	3
  4350  0E10  0084               	movwf	4
  4351  0E11  3001               	movlw	1	; select bank2/3
  4352  0E12  0085               	movwf	5
  4353  0E13  0800               	movf	0,w
  4354  0E14  0701               	addwf	1,w
  4355  0E15  00F0               	movwf	??_ringbuf_pop
  4356  0E16  0870               	movf	??_ringbuf_pop,w
  4357  0E17  0086               	movwf	6
  4358  0E18  3001               	movlw	1	; select bank2/3
  4359  0E19  0087               	movwf	7
  4360  0E1A  0801               	movf	1,w
  4361  0E1B  00F1               	movwf	??_ringbuf_pop+1
  4362  0E1C  0871               	movf	??_ringbuf_pop+1,w
  4363  0E1D  00F2               	movwf	ringbuf_pop@ret
  4364                           
  4365                           ;My_header_16F.h: 130: rb->tail++;
  4366  0E1E  3001               	movlw	1
  4367  0E1F  00F0               	movwf	??_ringbuf_pop
  4368  0E20  0873               	movf	ringbuf_pop@rb,w
  4369  0E21  3E03               	addlw	3
  4370  0E22  0086               	movwf	6
  4371  0E23  3001               	movlw	1	; select bank2/3
  4372  0E24  0087               	movwf	7
  4373  0E25  0870               	movf	??_ringbuf_pop,w
  4374  0E26  0781               	addwf	1,f
  4375                           
  4376                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  4377  0E27  0873               	movf	ringbuf_pop@rb,w
  4378  0E28  3E03               	addlw	3
  4379  0E29  0086               	movwf	6
  4380  0E2A  3001               	movlw	1	; select bank2/3
  4381  0E2B  0087               	movwf	7
  4382  0E2C  0A73               	incf	ringbuf_pop@rb,w
  4383  0E2D  0084               	movwf	4
  4384  0E2E  3001               	movlw	1	; select bank2/3
  4385  0E2F  0085               	movwf	5
  4386  0E30  0800               	movf	0,w
  4387  0E31  0201               	subwf	1,w
  4388  0E32  1C03               	skipc
  4389  0E33  2E3A               	goto	i1l2323
  4390                           
  4391                           ;My_header_16F.h: 132: rb->tail = 0;
  4392  0E34  0873               	movf	ringbuf_pop@rb,w
  4393  0E35  3E03               	addlw	3
  4394  0E36  0086               	movwf	6
  4395  0E37  3001               	movlw	1	; select bank2/3
  4396  0E38  0087               	movwf	7
  4397  0E39  0181               	clrf	1
  4398  0E3A                     i1l2323:	
  4399                           
  4400                           ;My_header_16F.h: 133: }
  4401                           ;My_header_16F.h: 134: return ret;
  4402  0E3A  0872               	movf	ringbuf_pop@ret,w
  4403  0E3B  0008               	return
  4404  0E3C                     __end_of_ringbuf_pop:	
  4405                           
  4406                           	psect	text24
  4407  07CE                     __ptext24:	
  4408 ;; *************** function _ringbuf_num *****************
  4409 ;; Defined at:
  4410 ;;		line 137 in file "My_header_16F.h"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  rb              1    wreg     PTR struct ringbuf
  4413 ;;		 -> tx_buf(4), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  rb              1    1[COMMON] PTR struct ringbuf
  4416 ;;		 -> tx_buf(4), 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      unsigned char 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4426 ;;      Params:         0       0       0       0       0       0
  4427 ;;      Locals:         1       0       0       0       0       0
  4428 ;;      Temps:          1       0       0       0       0       0
  4429 ;;      Totals:         2       0       0       0       0       0
  4430 ;;Total ram usage:        2 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_isr
  4436 ;;		_interrupt_TXIF
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _ringbuf_num
  4442  07CE                     _ringbuf_num:	
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  4446                           ;ringbuf_num@rb stored from wreg
  4447  07CE  00F1               	movwf	ringbuf_num@rb
  4448                           
  4449                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  4450  07CF  0871               	movf	ringbuf_num@rb,w
  4451  07D0  3E02               	addlw	2
  4452  07D1  0086               	movwf	6
  4453  07D2  3001               	movlw	1	; select bank2/3
  4454  07D3  0087               	movwf	7
  4455  07D4  0871               	movf	ringbuf_num@rb,w
  4456  07D5  3E03               	addlw	3
  4457  07D6  0084               	movwf	4
  4458  07D7  3001               	movlw	1	; select bank2/3
  4459  07D8  0085               	movwf	5
  4460  07D9  0800               	movf	0,w
  4461  07DA  0201               	subwf	1,w
  4462  07DB  1C03               	skipc
  4463  07DC  2FEB               	goto	i1l2335
  4464                           
  4465                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  4466  07DD  0871               	movf	ringbuf_num@rb,w
  4467  07DE  3E02               	addlw	2
  4468  07DF  0086               	movwf	6
  4469  07E0  3001               	movlw	1	; select bank2/3
  4470  07E1  0087               	movwf	7
  4471  07E2  0871               	movf	ringbuf_num@rb,w
  4472  07E3  3E03               	addlw	3
  4473  07E4  0084               	movwf	4
  4474  07E5  3001               	movlw	1	; select bank2/3
  4475  07E6  0085               	movwf	5
  4476  07E7  0300               	decf	0,w
  4477  07E8  3AFF               	xorlw	255
  4478  07E9  0701               	addwf	1,w
  4479                           
  4480                           ;My_header_16F.h: 140: } else {
  4481  07EA  0008               	return
  4482  07EB                     i1l2335:	
  4483                           
  4484                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  4485  07EB  0871               	movf	ringbuf_num@rb,w
  4486  07EC  3E02               	addlw	2
  4487  07ED  0086               	movwf	6
  4488  07EE  3001               	movlw	1	; select bank2/3
  4489  07EF  0087               	movwf	7
  4490  07F0  0A71               	incf	ringbuf_num@rb,w
  4491  07F1  0084               	movwf	4
  4492  07F2  3001               	movlw	1	; select bank2/3
  4493  07F3  0085               	movwf	5
  4494  07F4  0800               	movf	0,w
  4495  07F5  00F0               	movwf	??_ringbuf_num
  4496  07F6  0871               	movf	ringbuf_num@rb,w
  4497  07F7  3E03               	addlw	3
  4498  07F8  0084               	movwf	4
  4499  07F9  3001               	movlw	1	; select bank2/3
  4500  07FA  0085               	movwf	5
  4501  07FB  0300               	decf	0,w
  4502  07FC  3AFF               	xorlw	255
  4503  07FD  0770               	addwf	??_ringbuf_num,w
  4504  07FE  0701               	addwf	1,w
  4505  07FF  0008               	return
  4506  0800                     __end_of_ringbuf_num:	
  4507                           
  4508                           	psect	text25
  4509  0759                     __ptext25:	
  4510 ;; *************** function _lchika *****************
  4511 ;; Defined at:
  4512 ;;		line 124 in file "PIC16F1827-ChargeStation4-01.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  i               1    4[BANK0 ] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;		None               void
  4519 ;; Registers used:
  4520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4526 ;;      Params:         0       0       0       0       0       0
  4527 ;;      Locals:         0       1       0       0       0       0
  4528 ;;      Temps:          0       4       0       0       0       0
  4529 ;;      Totals:         0       5       0       0       0       0
  4530 ;;Total ram usage:        5 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    1
  4533 ;; This function calls:
  4534 ;;		___awdiv
  4535 ;;		___lwdiv
  4536 ;;		i1_LED
  4537 ;; This function is called by:
  4538 ;;		_isr
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _lchika
  4544  0759                     _lchika:	
  4545                           
  4546                           ;PIC16F1827-ChargeStation4-01.c: 125: uint8_t i;
  4547                           ;PIC16F1827-ChargeStation4-01.c: 126: for (i = 0; i < 3; i++) {
  4548                           
  4549                           ;incstack = 0
  4550                           ; Regs used in _lchika: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4551  0759  0020               	movlb	0	; select bank0
  4552  075A  01CB               	clrf	lchika@i
  4553  075B                     L3:	
  4554  075B  3003               	movlw	3
  4555  075C  024B               	subwf	lchika@i,w
  4556  075D  1803               	btfsc	3,0
  4557  075E  0008               	return
  4558                           
  4559                           ;PIC16F1827-ChargeStation4-01.c: 127: cnt[i]++;
  4560  075F  3001               	movlw	1
  4561  0760  00C7               	movwf	??_lchika
  4562  0761  084B               	movf	lchika@i,w
  4563  0762  3ED0               	addlw	(low (_cnt| 0))& (0+255)
  4564  0763  0086               	movwf	6
  4565  0764  0187               	clrf	7
  4566  0765  0847               	movf	??_lchika,w
  4567  0766  0781               	addwf	1,f
  4568                           
  4569                           ;PIC16F1827-ChargeStation4-01.c: 129: if (cnt[i] % 2 == 1) {
  4570  0767  084B               	movf	lchika@i,w
  4571  0768  3ED0               	addlw	(low (_cnt| 0))& (0+255)
  4572  0769  0086               	movwf	6
  4573  076A  0187               	clrf	7
  4574  076B  1C01               	btfss	1,0
  4575  076C  2F73               	goto	i1l2391
  4576                           
  4577                           ;PIC16F1827-ChargeStation4-01.c: 130: LED(i, 0);
  4578  076D  01F0               	clrf	i1LED@value
  4579  076E  084B               	movf	lchika@i,w
  4580  076F  318D  250B  3187   	fcall	i1_LED
  4581                           
  4582                           ;PIC16F1827-ChargeStation4-01.c: 131: } else {
  4583  0772  2FC8               	goto	i1l2405
  4584  0773                     i1l2391:	
  4585                           
  4586                           ;PIC16F1827-ChargeStation4-01.c: 132: if (cnt[i] / 2 <= v[i] / 100) {
  4587  0773  3064               	movlw	100
  4588  0774  00F6               	movwf	___lwdiv@divisor
  4589  0775  3000               	movlw	0
  4590  0776  00F7               	movwf	___lwdiv@divisor+1
  4591  0777  0020               	movlb	0	; select bank0
  4592  0778  354B               	lslf	lchika@i,w
  4593  0779  3E32               	addlw	(low (_v| 0))& (0+255)
  4594  077A  0086               	movwf	6
  4595  077B  0187               	clrf	7
  4596  077C  3F40               	moviw [0]fsr1
  4597  077D  00F8               	movwf	___lwdiv@dividend
  4598  077E  3F41               	moviw [1]fsr1
  4599  077F  00F9               	movwf	___lwdiv@dividend+1
  4600  0780  318E  263C  3187   	fcall	___lwdiv
  4601  0783  0876               	movf	?___lwdiv,w
  4602  0784  0020               	movlb	0	; select bank0
  4603  0785  00C7               	movwf	??_lchika
  4604  0786  0877               	movf	?___lwdiv+1,w
  4605  0787  00C8               	movwf	??_lchika+1
  4606  0788  3002               	movlw	2
  4607  0789  00F0               	movwf	___awdiv@divisor
  4608  078A  3000               	movlw	0
  4609  078B  00F1               	movwf	___awdiv@divisor+1
  4610  078C  084B               	movf	lchika@i,w
  4611  078D  3ED0               	addlw	(low (_cnt| 0))& (0+255)
  4612  078E  0086               	movwf	6
  4613  078F  0187               	clrf	7
  4614  0790  0801               	movf	1,w
  4615  0791  00C9               	movwf	??_lchika+2
  4616  0792  01CA               	clrf	??_lchika+3
  4617  0793  0849               	movf	??_lchika+2,w
  4618  0794  00F2               	movwf	___awdiv@dividend
  4619  0795  084A               	movf	??_lchika+3,w
  4620  0796  00F3               	movwf	___awdiv@dividend+1
  4621  0797  318E  26F0  3187   	fcall	___awdiv
  4622  079A  0871               	movf	?___awdiv+1,w
  4623  079B  0020               	movlb	0	; select bank0
  4624  079C  0248               	subwf	??_lchika+1,w
  4625  079D  1D03               	skipz
  4626  079E  2FA1               	goto	u246_25
  4627  079F  0870               	movf	?___awdiv,w
  4628  07A0  0247               	subwf	??_lchika,w
  4629  07A1                     u246_25:	
  4630  07A1  1C03               	skipc
  4631  07A2  2FAD               	goto	i1l2397
  4632                           
  4633                           ;PIC16F1827-ChargeStation4-01.c: 133: LED(i, 1);
  4634  07A3  01F0               	clrf	i1LED@value
  4635  07A4  0AF0               	incf	i1LED@value,f
  4636  07A5  084B               	movf	lchika@i,w
  4637  07A6  318D  250B  3187   	fcall	i1_LED
  4638                           
  4639                           ;PIC16F1827-ChargeStation4-01.c: 134: cntf[i] = 0;
  4640  07A9  0020               	movlb	0	; select bank0
  4641  07AA  084B               	movf	lchika@i,w
  4642  07AB  3ED3               	addlw	(low (_cntf| 0))& (0+255)
  4643  07AC  2FC5               	goto	L2
  4644  07AD                     i1l2397:	
  4645                           ;PIC16F1827-ChargeStation4-01.c: 135: } else {
  4646                           
  4647                           
  4648                           ;PIC16F1827-ChargeStation4-01.c: 136: cntf[i]++;
  4649  07AD  3001               	movlw	1
  4650  07AE  00C7               	movwf	??_lchika
  4651  07AF  084B               	movf	lchika@i,w
  4652  07B0  3ED3               	addlw	(low (_cntf| 0))& (0+255)
  4653  07B1  0086               	movwf	6
  4654  07B2  0187               	clrf	7
  4655  07B3  0847               	movf	??_lchika,w
  4656  07B4  0781               	addwf	1,f
  4657                           
  4658                           ;PIC16F1827-ChargeStation4-01.c: 137: LED(i, 0);
  4659  07B5  01F0               	clrf	i1LED@value
  4660  07B6  084B               	movf	lchika@i,w
  4661  07B7  318D  250B  3187   	fcall	i1_LED
  4662                           
  4663                           ;PIC16F1827-ChargeStation4-01.c: 138: if (cntf[i] >= 2) {
  4664  07BA  0020               	movlb	0	; select bank0
  4665  07BB  084B               	movf	lchika@i,w
  4666  07BC  3ED3               	addlw	(low (_cntf| 0))& (0+255)
  4667  07BD  0086               	movwf	6
  4668  07BE  0187               	clrf	7
  4669  07BF  3002               	movlw	2
  4670  07C0  0201               	subwf	1,w
  4671  07C1  1C03               	skipc
  4672  07C2  2FC8               	goto	i1l2405
  4673                           
  4674                           ;PIC16F1827-ChargeStation4-01.c: 139: cnt[i] = 0;
  4675  07C3  084B               	movf	lchika@i,w
  4676  07C4  3ED0               	addlw	(low (_cnt| 0))& (0+255)
  4677  07C5                     L2:	
  4678  07C5  0086               	movwf	6
  4679  07C6  0187               	clrf	7
  4680  07C7  0181               	clrf	1
  4681  07C8                     i1l2405:	
  4682  07C8  3001               	movlw	1
  4683  07C9  0020               	movlb	0	; select bank0
  4684  07CA  00C7               	movwf	??_lchika
  4685  07CB  0847               	movf	??_lchika,w
  4686  07CC  07CB               	addwf	lchika@i,f
  4687  07CD  2F5B               	goto	L3
  4688  07CE                     __end_of_lchika:	
  4689                           
  4690                           	psect	text26
  4691  0D0B                     __ptext26:	
  4692 ;; *************** function i1_LED *****************
  4693 ;; Defined at:
  4694 ;;		line 243 in file "PIC16F1827-ChargeStation4-01.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  b               1    wreg     unsigned char 
  4697 ;;  value           1    0[COMMON] unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  b               1    1[COMMON] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;		None               void
  4702 ;; Registers used:
  4703 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4709 ;;      Params:         1       0       0       0       0       0
  4710 ;;      Locals:         1       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0
  4712 ;;      Totals:         2       0       0       0       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_lchika
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function i1_LED
  4724  0D0B                     i1_LED:	
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in i1_LED: [wreg-fsr0h+status,2+status,0]
  4728                           ;i1LED@b stored from wreg
  4729  0D0B  00F1               	movwf	i1LED@b
  4730                           
  4731                           ;PIC16F1827-ChargeStation4-01.c: 244: switch (b) {
  4732  0D0C  2D25               	goto	i1l2253
  4733  0D0D                     i1l370:	
  4734                           ;PIC16F1827-ChargeStation4-01.c: 245: case 0:
  4735                           
  4736                           
  4737                           ;PIC16F1827-ChargeStation4-01.c: 246: LATB5 = value;
  4738  0D0D  1C70               	btfss	i1LED@value,0
  4739  0D0E  2D12               	goto	u218_20
  4740  0D0F  0022               	movlb	2	; select bank2
  4741  0D10  168D               	bsf	13,5	;volatile
  4742  0D11  0008               	return
  4743  0D12                     u218_20:	
  4744  0D12  0022               	movlb	2	; select bank2
  4745  0D13  128D               	bcf	13,5	;volatile
  4746                           
  4747                           ;PIC16F1827-ChargeStation4-01.c: 247: break;
  4748  0D14  0008               	return
  4749  0D15                     i1l372:	
  4750                           ;PIC16F1827-ChargeStation4-01.c: 248: case 1:
  4751                           
  4752                           
  4753                           ;PIC16F1827-ChargeStation4-01.c: 249: LATA6 = value;
  4754  0D15  1C70               	btfss	i1LED@value,0
  4755  0D16  2D1A               	goto	u220_20
  4756  0D17  0022               	movlb	2	; select bank2
  4757  0D18  170C               	bsf	12,6	;volatile
  4758  0D19  0008               	return
  4759  0D1A                     u220_20:	
  4760  0D1A  0022               	movlb	2	; select bank2
  4761  0D1B  130C               	bcf	12,6	;volatile
  4762                           
  4763                           ;PIC16F1827-ChargeStation4-01.c: 250: break;
  4764  0D1C  0008               	return
  4765  0D1D                     i1l373:	
  4766                           ;PIC16F1827-ChargeStation4-01.c: 251: case 2:
  4767                           
  4768                           
  4769                           ;PIC16F1827-ChargeStation4-01.c: 252: LATA7 = value;
  4770  0D1D  1C70               	btfss	i1LED@value,0
  4771  0D1E  2D22               	goto	u222_20
  4772  0D1F  0022               	movlb	2	; select bank2
  4773  0D20  178C               	bsf	12,7	;volatile
  4774  0D21  0008               	return
  4775  0D22                     u222_20:	
  4776  0D22  0022               	movlb	2	; select bank2
  4777  0D23  138C               	bcf	12,7	;volatile
  4778                           
  4779                           ;PIC16F1827-ChargeStation4-01.c: 256: }
  4780                           
  4781                           ;PIC16F1827-ChargeStation4-01.c: 255: break;
  4782                           
  4783                           ;PIC16F1827-ChargeStation4-01.c: 254: default:
  4784                           
  4785                           ;PIC16F1827-ChargeStation4-01.c: 253: break;
  4786  0D24  0008               	return
  4787  0D25                     i1l2253:	
  4788  0D25  0871               	movf	i1LED@b,w
  4789                           
  4790                           ; Switch size 1, requested type "space"
  4791                           ; Number of cases is 3, Range of values is 0 to 2
  4792                           ; switch strategies available:
  4793                           ; Name         Instructions Cycles
  4794                           ; simple_byte           10     6 (average)
  4795                           ; direct_byte           12     6 (fixed)
  4796                           ; jumptable            260     6 (fixed)
  4797                           ;	Chosen strategy is simple_byte
  4798  0D26  3A00               	xorlw	0	; case 0
  4799  0D27  1903               	skipnz
  4800  0D28  2D0D               	goto	i1l370
  4801  0D29  3A01               	xorlw	1	; case 1
  4802  0D2A  1903               	skipnz
  4803  0D2B  2D15               	goto	i1l372
  4804  0D2C  3A03               	xorlw	3	; case 2
  4805  0D2D  1903               	skipnz
  4806  0D2E  2D1D               	goto	i1l373
  4807  0D2F  2D30               	goto	i1l375
  4808  0D30                     i1l375:	
  4809  0D30  0008               	return
  4810  0D31                     __end_ofi1_LED:	
  4811                           
  4812                           	psect	text27
  4813  0EF0                     __ptext27:	
  4814 ;; *************** function ___awdiv *****************
  4815 ;; Defined at:
  4816 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  divisor         2    0[COMMON] int 
  4819 ;;  dividend        2    2[COMMON] int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  quotient        2    7[COMMON] int 
  4822 ;;  sign            1    6[COMMON] unsigned char 
  4823 ;;  counter         1    5[COMMON] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  2    0[COMMON] int 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4833 ;;      Params:         4       0       0       0       0       0
  4834 ;;      Locals:         4       0       0       0       0       0
  4835 ;;      Temps:          1       0       0       0       0       0
  4836 ;;      Totals:         9       0       0       0       0       0
  4837 ;;Total ram usage:        9 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_lchika
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function ___awdiv
  4848  0EF0                     ___awdiv:	
  4849                           
  4850                           ;incstack = 0
  4851                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4852  0EF0  01F6               	clrf	___awdiv@sign
  4853  0EF1  1FF1               	btfss	___awdiv@divisor+1,7
  4854  0EF2  2EFA               	goto	i1l2161
  4855  0EF3  09F0               	comf	___awdiv@divisor,f
  4856  0EF4  09F1               	comf	___awdiv@divisor+1,f
  4857  0EF5  0AF0               	incf	___awdiv@divisor,f
  4858  0EF6  1903               	skipnz
  4859  0EF7  0AF1               	incf	___awdiv@divisor+1,f
  4860  0EF8  01F6               	clrf	___awdiv@sign
  4861  0EF9  0AF6               	incf	___awdiv@sign,f
  4862  0EFA                     i1l2161:	
  4863  0EFA  1FF3               	btfss	___awdiv@dividend+1,7
  4864  0EFB  2F05               	goto	i1l2167
  4865  0EFC  09F2               	comf	___awdiv@dividend,f
  4866  0EFD  09F3               	comf	___awdiv@dividend+1,f
  4867  0EFE  0AF2               	incf	___awdiv@dividend,f
  4868  0EFF  1903               	skipnz
  4869  0F00  0AF3               	incf	___awdiv@dividend+1,f
  4870  0F01  3001               	movlw	1
  4871  0F02  00F4               	movwf	??___awdiv
  4872  0F03  0874               	movf	??___awdiv,w
  4873  0F04  06F6               	xorwf	___awdiv@sign,f
  4874  0F05                     i1l2167:	
  4875  0F05  01F7               	clrf	___awdiv@quotient
  4876  0F06  01F8               	clrf	___awdiv@quotient+1
  4877  0F07  0870               	movf	___awdiv@divisor,w
  4878  0F08  0471               	iorwf	___awdiv@divisor+1,w
  4879  0F09  1903               	btfsc	3,2
  4880  0F0A  2F34               	goto	i1l2189
  4881  0F0B  01F5               	clrf	___awdiv@counter
  4882  0F0C  0AF5               	incf	___awdiv@counter,f
  4883  0F0D                     i1l2177:	
  4884  0F0D  1BF1               	btfsc	___awdiv@divisor+1,7
  4885  0F0E  2F19               	goto	i1l2179
  4886  0F0F  3001               	movlw	1
  4887  0F10                     u198_25:	
  4888  0F10  35F0               	lslf	___awdiv@divisor,f
  4889  0F11  0DF1               	rlf	___awdiv@divisor+1,f
  4890  0F12  0B89               	decfsz	9,f
  4891  0F13  2F10               	goto	u198_25
  4892  0F14  3001               	movlw	1
  4893  0F15  00F4               	movwf	??___awdiv
  4894  0F16  0874               	movf	??___awdiv,w
  4895  0F17  07F5               	addwf	___awdiv@counter,f
  4896  0F18  2F0D               	goto	i1l2177
  4897  0F19                     i1l2179:	
  4898  0F19  3001               	movlw	1
  4899  0F1A                     u200_25:	
  4900  0F1A  35F7               	lslf	___awdiv@quotient,f
  4901  0F1B  0DF8               	rlf	___awdiv@quotient+1,f
  4902  0F1C  0B89               	decfsz	9,f
  4903  0F1D  2F1A               	goto	u200_25
  4904  0F1E  0871               	movf	___awdiv@divisor+1,w
  4905  0F1F  0273               	subwf	___awdiv@dividend+1,w
  4906  0F20  1D03               	skipz
  4907  0F21  2F24               	goto	u201_25
  4908  0F22  0870               	movf	___awdiv@divisor,w
  4909  0F23  0272               	subwf	___awdiv@dividend,w
  4910  0F24                     u201_25:	
  4911  0F24  1C03               	skipc
  4912  0F25  2F2B               	goto	i1l2185
  4913  0F26  0870               	movf	___awdiv@divisor,w
  4914  0F27  02F2               	subwf	___awdiv@dividend,f
  4915  0F28  0871               	movf	___awdiv@divisor+1,w
  4916  0F29  3BF3               	subwfb	___awdiv@dividend+1,f
  4917  0F2A  1477               	bsf	___awdiv@quotient,0
  4918  0F2B                     i1l2185:	
  4919  0F2B  3001               	movlw	1
  4920  0F2C                     u202_25:	
  4921  0F2C  36F1               	lsrf	___awdiv@divisor+1,f
  4922  0F2D  0CF0               	rrf	___awdiv@divisor,f
  4923  0F2E  0B89               	decfsz	9,f
  4924  0F2F  2F2C               	goto	u202_25
  4925  0F30  3001               	movlw	1
  4926  0F31  02F5               	subwf	___awdiv@counter,f
  4927  0F32  1D03               	btfss	3,2
  4928  0F33  2F19               	goto	i1l2179
  4929  0F34                     i1l2189:	
  4930  0F34  0876               	movf	___awdiv@sign,w
  4931  0F35  1903               	btfsc	3,2
  4932  0F36  2F3C               	goto	i1l2193
  4933  0F37  09F7               	comf	___awdiv@quotient,f
  4934  0F38  09F8               	comf	___awdiv@quotient+1,f
  4935  0F39  0AF7               	incf	___awdiv@quotient,f
  4936  0F3A  1903               	skipnz
  4937  0F3B  0AF8               	incf	___awdiv@quotient+1,f
  4938  0F3C                     i1l2193:	
  4939  0F3C  0878               	movf	___awdiv@quotient+1,w
  4940  0F3D  00F1               	movwf	?___awdiv+1
  4941  0F3E  0877               	movf	___awdiv@quotient,w
  4942  0F3F  00F0               	movwf	?___awdiv
  4943  0F40  0008               	return
  4944  0F41                     __end_of___awdiv:	
  4945                           
  4946                           	psect	text28
  4947  043C                     __ptext28:	
  4948 ;; *************** function _display *****************
  4949 ;; Defined at:
  4950 ;;		line 146 in file "PIC16F1827-ChargeStation4-01.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  i               1    wreg     unsigned char 
  4953 ;;  co              1   14[BANK0 ] unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  i               1   17[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4965 ;;      Params:         0       1       0       0       0       0
  4966 ;;      Locals:         0       1       0       0       0       0
  4967 ;;      Temps:          0       2       0       0       0       0
  4968 ;;      Totals:         0       4       0       0       0       0
  4969 ;;Total ram usage:        4 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    4
  4972 ;; This function calls:
  4973 ;;		_LCD_Putc
  4974 ;;		_LCD_Puts
  4975 ;;		_LCD_SetCursor
  4976 ;;		___aldiv
  4977 ;;		___almod
  4978 ;;		___lwdiv
  4979 ;;		___lwmod
  4980 ;;		i1_LCD_Clear
  4981 ;; This function is called by:
  4982 ;;		_isr
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _display
  4988  043C                     _display:	
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in _display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4992                           ;display@i stored from wreg
  4993  043C  0020               	movlb	0	; select bank0
  4994  043D  00D8               	movwf	display@i
  4995                           
  4996                           ;PIC16F1827-ChargeStation4-01.c: 147: LCD_Clear();
  4997  043E  318A  22C9  3184   	fcall	i1_LCD_Clear
  4998                           
  4999                           ;PIC16F1827-ChargeStation4-01.c: 148: LCD_SetCursor(0, 0);
  5000  0441  01F7               	clrf	LCD_SetCursor@row
  5001  0442  3000               	movlw	0
  5002  0443  318B  2305  3184   	fcall	_LCD_SetCursor
  5003                           
  5004                           ;PIC16F1827-ChargeStation4-01.c: 149: switch (co) {
  5005  0446  2E12               	goto	i1l2469
  5006  0447                     i1l2413:	
  5007                           ;PIC16F1827-ChargeStation4-01.c: 150: case 0:
  5008                           
  5009                           
  5010                           ;PIC16F1827-ChargeStation4-01.c: 151: LCD_SetCursor(0, 0);
  5011  0447  01F7               	clrf	LCD_SetCursor@row
  5012  0448  3000               	movlw	0
  5013  0449  318B  2305  3184   	fcall	_LCD_SetCursor
  5014                           
  5015                           ;PIC16F1827-ChargeStation4-01.c: 152: LCD_Puts("Charge");
  5016  044C  3010               	movlw	low (STR_1| (0+32768))
  5017  044D  00F4               	movwf	LCD_Puts@s
  5018  044E  3088               	movlw	high (STR_1| (0+32768))
  5019  044F  00F5               	movwf	LCD_Puts@s+1
  5020  0450  318D  25DB  3184   	fcall	_LCD_Puts
  5021                           
  5022                           ;PIC16F1827-ChargeStation4-01.c: 153: LCD_SetCursor(0, 1);
  5023  0453  01F7               	clrf	LCD_SetCursor@row
  5024  0454  0AF7               	incf	LCD_SetCursor@row,f
  5025  0455  3000               	movlw	0
  5026  0456  318B  2305  3184   	fcall	_LCD_SetCursor
  5027                           
  5028                           ;PIC16F1827-ChargeStation4-01.c: 154: LCD_Puts("Station");
  5029  0459  3008               	movlw	low (STR_2| (0+32768))
  5030  045A  00F4               	movwf	LCD_Puts@s
  5031  045B  3088               	movlw	high (STR_2| (0+32768))
  5032  045C  00F5               	movwf	LCD_Puts@s+1
  5033  045D  318D  25DB         	fcall	_LCD_Puts
  5034                           
  5035                           ;PIC16F1827-ChargeStation4-01.c: 155: break;
  5036  045F  0008               	return
  5037  0460                     i1l2419:	
  5038                           ;PIC16F1827-ChargeStation4-01.c: 158: case 0:
  5039                           
  5040                           ;PIC16F1827-ChargeStation4-01.c: 157: switch (i) {
  5041                           
  5042                           ;PIC16F1827-ChargeStation4-01.c: 156: case 1:
  5043                           
  5044                           
  5045                           ;PIC16F1827-ChargeStation4-01.c: 159: LCD_Puts("Right");
  5046  0460  301E               	movlw	low (STR_3| (0+32768))
  5047  0461  00F4               	movwf	LCD_Puts@s
  5048  0462  3088               	movlw	high (STR_3| (0+32768))
  5049  0463  00F5               	movwf	LCD_Puts@s+1
  5050  0464  318D  25DB  3184   	fcall	_LCD_Puts
  5051                           
  5052                           ;PIC16F1827-ChargeStation4-01.c: 160: break;
  5053  0467  2C84               	goto	i1l2429
  5054  0468                     i1l2421:	
  5055                           ;PIC16F1827-ChargeStation4-01.c: 161: case 1:
  5056                           
  5057                           
  5058                           ;PIC16F1827-ChargeStation4-01.c: 162: LCD_Puts("Center");
  5059  0468  3017               	movlw	low (STR_4| (0+32768))
  5060  0469  00F4               	movwf	LCD_Puts@s
  5061  046A  3088               	movlw	high (STR_4| (0+32768))
  5062  046B  00F5               	movwf	LCD_Puts@s+1
  5063  046C  318D  25DB  3184   	fcall	_LCD_Puts
  5064                           
  5065                           ;PIC16F1827-ChargeStation4-01.c: 163: break;
  5066  046F  2C84               	goto	i1l2429
  5067  0470                     i1l2423:	
  5068                           ;PIC16F1827-ChargeStation4-01.c: 164: case 2:
  5069                           
  5070                           
  5071                           ;PIC16F1827-ChargeStation4-01.c: 165: LCD_Puts("Left");
  5072  0470  3024               	movlw	low (STR_5| (0+32768))
  5073  0471  00F4               	movwf	LCD_Puts@s
  5074  0472  3088               	movlw	high (STR_5| (0+32768))
  5075  0473  00F5               	movwf	LCD_Puts@s+1
  5076  0474  318D  25DB  3184   	fcall	_LCD_Puts
  5077                           
  5078                           ;PIC16F1827-ChargeStation4-01.c: 167: }
  5079                           
  5080                           ;PIC16F1827-ChargeStation4-01.c: 166: break;
  5081  0477  2C84               	goto	i1l2429
  5082  0478                     i1l2427:	
  5083  0478  0020               	movlb	0	; select bank0
  5084  0479  0858               	movf	display@i,w
  5085                           
  5086                           ; Switch size 1, requested type "space"
  5087                           ; Number of cases is 3, Range of values is 0 to 2
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; simple_byte           10     6 (average)
  5091                           ; direct_byte           12     6 (fixed)
  5092                           ; jumptable            260     6 (fixed)
  5093                           ;	Chosen strategy is simple_byte
  5094  047A  3A00               	xorlw	0	; case 0
  5095  047B  1903               	skipnz
  5096  047C  2C60               	goto	i1l2419
  5097  047D  3A01               	xorlw	1	; case 1
  5098  047E  1903               	skipnz
  5099  047F  2C68               	goto	i1l2421
  5100  0480  3A03               	xorlw	3	; case 2
  5101  0481  1903               	skipnz
  5102  0482  2C70               	goto	i1l2423
  5103  0483  2C84               	goto	i1l2429
  5104  0484                     i1l2429:	
  5105                           
  5106                           ;PIC16F1827-ChargeStation4-01.c: 168: LCD_SetCursor(0, 1);
  5107  0484  01F7               	clrf	LCD_SetCursor@row
  5108  0485  0AF7               	incf	LCD_SetCursor@row,f
  5109  0486  3000               	movlw	0
  5110  0487  318B  2305  3184   	fcall	_LCD_SetCursor
  5111                           
  5112                           ;PIC16F1827-ChargeStation4-01.c: 169: LCD_Putc((v[i] % 10000) / 1000 + '0');
  5113  048A  30E8               	movlw	232
  5114  048B  00F6               	movwf	___lwdiv@divisor
  5115  048C  3003               	movlw	3
  5116  048D  00F7               	movwf	___lwdiv@divisor+1
  5117  048E  0020               	movlb	0	; select bank0
  5118  048F  3558               	lslf	display@i,w
  5119  0490  3E32               	addlw	(low (_v| 0))& (0+255)
  5120  0491  0086               	movwf	6
  5121  0492  0187               	clrf	7
  5122  0493  3F40               	moviw [0]fsr1
  5123  0494  00F2               	movwf	___lwmod@dividend
  5124  0495  3F41               	moviw [1]fsr1
  5125  0496  00F3               	movwf	___lwmod@dividend+1
  5126  0497  3010               	movlw	16
  5127  0498  00F0               	movwf	___lwmod@divisor
  5128  0499  3027               	movlw	39
  5129  049A  00F1               	movwf	___lwmod@divisor+1
  5130  049B  318D  2582  3184   	fcall	___lwmod
  5131  049E  0871               	movf	?___lwmod+1,w
  5132  049F  00F9               	movwf	___lwdiv@dividend+1
  5133  04A0  0870               	movf	?___lwmod,w
  5134  04A1  00F8               	movwf	___lwdiv@dividend
  5135  04A2  318E  263C  3184   	fcall	___lwdiv
  5136  04A5  0876               	movf	?___lwdiv,w
  5137  04A6  3E30               	addlw	48
  5138  04A7  318B  23D1  3184   	fcall	_LCD_Putc
  5139                           
  5140                           ;PIC16F1827-ChargeStation4-01.c: 170: LCD_Putc('.');
  5141  04AA  302E               	movlw	46
  5142  04AB  318B  23D1  3184   	fcall	_LCD_Putc
  5143                           
  5144                           ;PIC16F1827-ChargeStation4-01.c: 171: LCD_Putc((v[i] % 1000) / 100 + '0');
  5145  04AE  3064               	movlw	100
  5146  04AF  00F6               	movwf	___lwdiv@divisor
  5147  04B0  3000               	movlw	0
  5148  04B1  00F7               	movwf	___lwdiv@divisor+1
  5149  04B2  0020               	movlb	0	; select bank0
  5150  04B3  3558               	lslf	display@i,w
  5151  04B4  3E32               	addlw	(low (_v| 0))& (0+255)
  5152  04B5  0086               	movwf	6
  5153  04B6  0187               	clrf	7
  5154  04B7  3F40               	moviw [0]fsr1
  5155  04B8  00F2               	movwf	___lwmod@dividend
  5156  04B9  3F41               	moviw [1]fsr1
  5157  04BA  00F3               	movwf	___lwmod@dividend+1
  5158  04BB  30E8               	movlw	232
  5159  04BC  00F0               	movwf	___lwmod@divisor
  5160  04BD  3003               	movlw	3
  5161  04BE  00F1               	movwf	___lwmod@divisor+1
  5162  04BF  318D  2582  3184   	fcall	___lwmod
  5163  04C2  0871               	movf	?___lwmod+1,w
  5164  04C3  00F9               	movwf	___lwdiv@dividend+1
  5165  04C4  0870               	movf	?___lwmod,w
  5166  04C5  00F8               	movwf	___lwdiv@dividend
  5167  04C6  318E  263C  3184   	fcall	___lwdiv
  5168  04C9  0876               	movf	?___lwdiv,w
  5169  04CA  3E30               	addlw	48
  5170  04CB  318B  23D1  3184   	fcall	_LCD_Putc
  5171                           
  5172                           ;PIC16F1827-ChargeStation4-01.c: 172: LCD_Putc((v[i] % 100) / 10 + '0');
  5173  04CE  300A               	movlw	10
  5174  04CF  00F6               	movwf	___lwdiv@divisor
  5175  04D0  3000               	movlw	0
  5176  04D1  00F7               	movwf	___lwdiv@divisor+1
  5177  04D2  0020               	movlb	0	; select bank0
  5178  04D3  3558               	lslf	display@i,w
  5179  04D4  3E32               	addlw	(low (_v| 0))& (0+255)
  5180  04D5  0086               	movwf	6
  5181  04D6  0187               	clrf	7
  5182  04D7  3F40               	moviw [0]fsr1
  5183  04D8  00F2               	movwf	___lwmod@dividend
  5184  04D9  3F41               	moviw [1]fsr1
  5185  04DA  00F3               	movwf	___lwmod@dividend+1
  5186  04DB  3064               	movlw	100
  5187  04DC  00F0               	movwf	___lwmod@divisor
  5188  04DD  3000               	movlw	0
  5189  04DE  00F1               	movwf	___lwmod@divisor+1
  5190  04DF  318D  2582  3184   	fcall	___lwmod
  5191  04E2  0871               	movf	?___lwmod+1,w
  5192  04E3  00F9               	movwf	___lwdiv@dividend+1
  5193  04E4  0870               	movf	?___lwmod,w
  5194  04E5  00F8               	movwf	___lwdiv@dividend
  5195  04E6  318E  263C  3184   	fcall	___lwdiv
  5196  04E9  0876               	movf	?___lwdiv,w
  5197  04EA  3E30               	addlw	48
  5198  04EB  318B  23D1  3184   	fcall	_LCD_Putc
  5199                           
  5200                           ;PIC16F1827-ChargeStation4-01.c: 173: LCD_Putc((v[i] % 10) / 1 + '0');
  5201  04EE  300A               	movlw	10
  5202  04EF  00F0               	movwf	___lwmod@divisor
  5203  04F0  3000               	movlw	0
  5204  04F1  00F1               	movwf	___lwmod@divisor+1
  5205  04F2  0020               	movlb	0	; select bank0
  5206  04F3  3558               	lslf	display@i,w
  5207  04F4  3E32               	addlw	(low (_v| 0))& (0+255)
  5208  04F5  0086               	movwf	6
  5209  04F6  0187               	clrf	7
  5210  04F7  3F40               	moviw [0]fsr1
  5211  04F8  00F2               	movwf	___lwmod@dividend
  5212  04F9  3F41               	moviw [1]fsr1
  5213  04FA  00F3               	movwf	___lwmod@dividend+1
  5214  04FB  318D  2582  3184   	fcall	___lwmod
  5215  04FE  0870               	movf	?___lwmod,w
  5216  04FF  3E30               	addlw	48
  5217  0500  318B  23D1  3184   	fcall	_LCD_Putc
  5218                           
  5219                           ;PIC16F1827-ChargeStation4-01.c: 174: LCD_Putc('A');
  5220  0503  3041               	movlw	65
  5221  0504  318B  23D1         	fcall	_LCD_Putc
  5222                           
  5223                           ;PIC16F1827-ChargeStation4-01.c: 175: break;
  5224  0506  0008               	return
  5225  0507                     i1l2439:	
  5226                           ;PIC16F1827-ChargeStation4-01.c: 178: case 0:
  5227                           
  5228                           ;PIC16F1827-ChargeStation4-01.c: 177: switch (i) {
  5229                           
  5230                           ;PIC16F1827-ChargeStation4-01.c: 176: case 2:
  5231                           
  5232                           
  5233                           ;PIC16F1827-ChargeStation4-01.c: 179: LCD_Puts("Right");
  5234  0507  301E               	movlw	low (STR_3| (0+32768))
  5235  0508  00F4               	movwf	LCD_Puts@s
  5236  0509  3088               	movlw	high (STR_3| (0+32768))
  5237  050A  00F5               	movwf	LCD_Puts@s+1
  5238  050B  318D  25DB  3184   	fcall	_LCD_Puts
  5239                           
  5240                           ;PIC16F1827-ChargeStation4-01.c: 180: break;
  5241  050E  2D2B               	goto	i1l2449
  5242  050F                     i1l2441:	
  5243                           ;PIC16F1827-ChargeStation4-01.c: 181: case 1:
  5244                           
  5245                           
  5246                           ;PIC16F1827-ChargeStation4-01.c: 182: LCD_Puts("Center");
  5247  050F  3017               	movlw	low (STR_4| (0+32768))
  5248  0510  00F4               	movwf	LCD_Puts@s
  5249  0511  3088               	movlw	high (STR_4| (0+32768))
  5250  0512  00F5               	movwf	LCD_Puts@s+1
  5251  0513  318D  25DB  3184   	fcall	_LCD_Puts
  5252                           
  5253                           ;PIC16F1827-ChargeStation4-01.c: 183: break;
  5254  0516  2D2B               	goto	i1l2449
  5255  0517                     i1l2443:	
  5256                           ;PIC16F1827-ChargeStation4-01.c: 184: case 2:
  5257                           
  5258                           
  5259                           ;PIC16F1827-ChargeStation4-01.c: 185: LCD_Puts("Left");
  5260  0517  3024               	movlw	low (STR_5| (0+32768))
  5261  0518  00F4               	movwf	LCD_Puts@s
  5262  0519  3088               	movlw	high (STR_5| (0+32768))
  5263  051A  00F5               	movwf	LCD_Puts@s+1
  5264  051B  318D  25DB  3184   	fcall	_LCD_Puts
  5265                           
  5266                           ;PIC16F1827-ChargeStation4-01.c: 187: }
  5267                           
  5268                           ;PIC16F1827-ChargeStation4-01.c: 186: break;
  5269  051E  2D2B               	goto	i1l2449
  5270  051F                     i1l2447:	
  5271  051F  0020               	movlb	0	; select bank0
  5272  0520  0858               	movf	display@i,w
  5273                           
  5274                           ; Switch size 1, requested type "space"
  5275                           ; Number of cases is 3, Range of values is 0 to 2
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte           10     6 (average)
  5279                           ; direct_byte           12     6 (fixed)
  5280                           ; jumptable            260     6 (fixed)
  5281                           ;	Chosen strategy is simple_byte
  5282  0521  3A00               	xorlw	0	; case 0
  5283  0522  1903               	skipnz
  5284  0523  2D07               	goto	i1l2439
  5285  0524  3A01               	xorlw	1	; case 1
  5286  0525  1903               	skipnz
  5287  0526  2D0F               	goto	i1l2441
  5288  0527  3A03               	xorlw	3	; case 2
  5289  0528  1903               	skipnz
  5290  0529  2D17               	goto	i1l2443
  5291  052A  2D2B               	goto	i1l2449
  5292  052B                     i1l2449:	
  5293                           
  5294                           ;PIC16F1827-ChargeStation4-01.c: 188: LCD_SetCursor(0, 1);
  5295  052B  01F7               	clrf	LCD_SetCursor@row
  5296  052C  0AF7               	incf	LCD_SetCursor@row,f
  5297  052D  3000               	movlw	0
  5298  052E  318B  2305  3184   	fcall	_LCD_SetCursor
  5299                           
  5300                           ;PIC16F1827-ChargeStation4-01.c: 189: LCD_Putc((s[i] % 100000) / 10000 + '0');
  5301  0531  3000               	movlw	0
  5302  0532  0020               	movlb	0	; select bank0
  5303  0533  00CA               	movwf	___aldiv@divisor+3
  5304  0534  3000               	movlw	0
  5305  0535  00C9               	movwf	___aldiv@divisor+2
  5306  0536  3027               	movlw	39
  5307  0537  00C8               	movwf	___aldiv@divisor+1
  5308  0538  3010               	movlw	16
  5309  0539  00C7               	movwf	___aldiv@divisor
  5310  053A  3558               	lslf	display@i,w
  5311  053B  3E2C               	addlw	(low (_s| 0))& (0+255)
  5312  053C  0086               	movwf	6
  5313  053D  0187               	clrf	7
  5314  053E  3F40               	moviw [0]fsr1
  5315  053F  00D6               	movwf	??_display
  5316  0540  3F41               	moviw [1]fsr1
  5317  0541  00D7               	movwf	??_display+1
  5318  0542  0856               	movf	??_display,w
  5319  0543  00F4               	movwf	___almod@dividend
  5320  0544  0857               	movf	??_display+1,w
  5321  0545  00F5               	movwf	___almod@dividend+1
  5322  0546  01F6               	clrf	___almod@dividend+2
  5323  0547  01F7               	clrf	___almod@dividend+3
  5324  0548  3000               	movlw	0
  5325  0549  00F3               	movwf	___almod@divisor+3
  5326  054A  3001               	movlw	1
  5327  054B  00F2               	movwf	___almod@divisor+2
  5328  054C  3086               	movlw	134
  5329  054D  00F1               	movwf	___almod@divisor+1
  5330  054E  30A0               	movlw	160
  5331  054F  00F0               	movwf	___almod@divisor
  5332  0550  318F  2793  3184   	fcall	___almod
  5333  0553  0873               	movf	?___almod+3,w
  5334  0554  0020               	movlb	0	; select bank0
  5335  0555  00CE               	movwf	___aldiv@dividend+3
  5336  0556  0872               	movf	?___almod+2,w
  5337  0557  00CD               	movwf	___aldiv@dividend+2
  5338  0558  0871               	movf	?___almod+1,w
  5339  0559  00CC               	movwf	___aldiv@dividend+1
  5340  055A  0870               	movf	?___almod,w
  5341  055B  00CB               	movwf	___aldiv@dividend
  5342  055C  3186  26D7  3184   	fcall	___aldiv
  5343  055F  0020               	movlb	0	; select bank0
  5344  0560  0847               	movf	?___aldiv,w
  5345  0561  3E30               	addlw	48
  5346  0562  318B  23D1  3184   	fcall	_LCD_Putc
  5347                           
  5348                           ;PIC16F1827-ChargeStation4-01.c: 190: LCD_Putc((s[i] % 10000) / 1000 + '0');
  5349  0565  30E8               	movlw	232
  5350  0566  00F6               	movwf	___lwdiv@divisor
  5351  0567  3003               	movlw	3
  5352  0568  00F7               	movwf	___lwdiv@divisor+1
  5353  0569  0020               	movlb	0	; select bank0
  5354  056A  3558               	lslf	display@i,w
  5355  056B  3E2C               	addlw	(low (_s| 0))& (0+255)
  5356  056C  0086               	movwf	6
  5357  056D  0187               	clrf	7
  5358  056E  3F40               	moviw [0]fsr1
  5359  056F  00F2               	movwf	___lwmod@dividend
  5360  0570  3F41               	moviw [1]fsr1
  5361  0571  00F3               	movwf	___lwmod@dividend+1
  5362  0572  3010               	movlw	16
  5363  0573  00F0               	movwf	___lwmod@divisor
  5364  0574  3027               	movlw	39
  5365  0575  00F1               	movwf	___lwmod@divisor+1
  5366  0576  318D  2582  3184   	fcall	___lwmod
  5367  0579  0871               	movf	?___lwmod+1,w
  5368  057A  00F9               	movwf	___lwdiv@dividend+1
  5369  057B  0870               	movf	?___lwmod,w
  5370  057C  00F8               	movwf	___lwdiv@dividend
  5371  057D  318E  263C  3184   	fcall	___lwdiv
  5372  0580  0876               	movf	?___lwdiv,w
  5373  0581  3E30               	addlw	48
  5374  0582  318B  23D1  3184   	fcall	_LCD_Putc
  5375                           
  5376                           ;PIC16F1827-ChargeStation4-01.c: 191: LCD_Putc((s[i] % 1000) / 100 + '0');
  5377  0585  3064               	movlw	100
  5378  0586  00F6               	movwf	___lwdiv@divisor
  5379  0587  3000               	movlw	0
  5380  0588  00F7               	movwf	___lwdiv@divisor+1
  5381  0589  0020               	movlb	0	; select bank0
  5382  058A  3558               	lslf	display@i,w
  5383  058B  3E2C               	addlw	(low (_s| 0))& (0+255)
  5384  058C  0086               	movwf	6
  5385  058D  0187               	clrf	7
  5386  058E  3F40               	moviw [0]fsr1
  5387  058F  00F2               	movwf	___lwmod@dividend
  5388  0590  3F41               	moviw [1]fsr1
  5389  0591  00F3               	movwf	___lwmod@dividend+1
  5390  0592  30E8               	movlw	232
  5391  0593  00F0               	movwf	___lwmod@divisor
  5392  0594  3003               	movlw	3
  5393  0595  00F1               	movwf	___lwmod@divisor+1
  5394  0596  318D  2582  3184   	fcall	___lwmod
  5395  0599  0871               	movf	?___lwmod+1,w
  5396  059A  00F9               	movwf	___lwdiv@dividend+1
  5397  059B  0870               	movf	?___lwmod,w
  5398  059C  00F8               	movwf	___lwdiv@dividend
  5399  059D  318E  263C  3184   	fcall	___lwdiv
  5400  05A0  0876               	movf	?___lwdiv,w
  5401  05A1  3E30               	addlw	48
  5402  05A2  318B  23D1  3184   	fcall	_LCD_Putc
  5403                           
  5404                           ;PIC16F1827-ChargeStation4-01.c: 192: LCD_Putc((s[i] % 100) / 10 + '0');
  5405  05A5  300A               	movlw	10
  5406  05A6  00F6               	movwf	___lwdiv@divisor
  5407  05A7  3000               	movlw	0
  5408  05A8  00F7               	movwf	___lwdiv@divisor+1
  5409  05A9  0020               	movlb	0	; select bank0
  5410  05AA  3558               	lslf	display@i,w
  5411  05AB  3E2C               	addlw	(low (_s| 0))& (0+255)
  5412  05AC  0086               	movwf	6
  5413  05AD  0187               	clrf	7
  5414  05AE  3F40               	moviw [0]fsr1
  5415  05AF  00F2               	movwf	___lwmod@dividend
  5416  05B0  3F41               	moviw [1]fsr1
  5417  05B1  00F3               	movwf	___lwmod@dividend+1
  5418  05B2  3064               	movlw	100
  5419  05B3  00F0               	movwf	___lwmod@divisor
  5420  05B4  3000               	movlw	0
  5421  05B5  00F1               	movwf	___lwmod@divisor+1
  5422  05B6  318D  2582  3184   	fcall	___lwmod
  5423  05B9  0871               	movf	?___lwmod+1,w
  5424  05BA  00F9               	movwf	___lwdiv@dividend+1
  5425  05BB  0870               	movf	?___lwmod,w
  5426  05BC  00F8               	movwf	___lwdiv@dividend
  5427  05BD  318E  263C  3184   	fcall	___lwdiv
  5428  05C0  0876               	movf	?___lwdiv,w
  5429  05C1  3E30               	addlw	48
  5430  05C2  318B  23D1  3184   	fcall	_LCD_Putc
  5431                           
  5432                           ;PIC16F1827-ChargeStation4-01.c: 193: LCD_Putc((s[i] % 10) / 1 + '0');
  5433  05C5  300A               	movlw	10
  5434  05C6  00F0               	movwf	___lwmod@divisor
  5435  05C7  3000               	movlw	0
  5436  05C8  00F1               	movwf	___lwmod@divisor+1
  5437  05C9  0020               	movlb	0	; select bank0
  5438  05CA  3558               	lslf	display@i,w
  5439  05CB  3E2C               	addlw	(low (_s| 0))& (0+255)
  5440  05CC  0086               	movwf	6
  5441  05CD  0187               	clrf	7
  5442  05CE  3F40               	moviw [0]fsr1
  5443  05CF  00F2               	movwf	___lwmod@dividend
  5444  05D0  3F41               	moviw [1]fsr1
  5445  05D1  00F3               	movwf	___lwmod@dividend+1
  5446  05D2  318D  2582  3184   	fcall	___lwmod
  5447  05D5  0870               	movf	?___lwmod,w
  5448  05D6  3E30               	addlw	48
  5449  05D7  318B  23D1  3184   	fcall	_LCD_Putc
  5450                           
  5451                           ;PIC16F1827-ChargeStation4-01.c: 194: LCD_Puts("mAh");
  5452  05DA  3029               	movlw	low (STR_9| (0+32768))
  5453  05DB  00F4               	movwf	LCD_Puts@s
  5454  05DC  3088               	movlw	high (STR_9| (0+32768))
  5455  05DD  00F5               	movwf	LCD_Puts@s+1
  5456  05DE  318D  25DB         	fcall	_LCD_Puts
  5457                           
  5458                           ;PIC16F1827-ChargeStation4-01.c: 195: break;
  5459  05E0  0008               	return
  5460  05E1                     i1l2453:	
  5461                           ;PIC16F1827-ChargeStation4-01.c: 198: case 0:
  5462                           
  5463                           ;PIC16F1827-ChargeStation4-01.c: 197: switch (i) {
  5464                           
  5465                           ;PIC16F1827-ChargeStation4-01.c: 196: case 3:
  5466                           
  5467                           
  5468                           ;PIC16F1827-ChargeStation4-01.c: 199: LCD_Puts("Right");
  5469  05E1  301E               	movlw	low (STR_3| (0+32768))
  5470  05E2  00F4               	movwf	LCD_Puts@s
  5471  05E3  3088               	movlw	high (STR_3| (0+32768))
  5472  05E4  00F5               	movwf	LCD_Puts@s+1
  5473  05E5  318D  25DB  3184   	fcall	_LCD_Puts
  5474                           
  5475                           ;PIC16F1827-ChargeStation4-01.c: 200: break;
  5476  05E8  2E05               	goto	i1l2463
  5477  05E9                     i1l2455:	
  5478                           ;PIC16F1827-ChargeStation4-01.c: 201: case 1:
  5479                           
  5480                           
  5481                           ;PIC16F1827-ChargeStation4-01.c: 202: LCD_Puts("Center");
  5482  05E9  3017               	movlw	low (STR_4| (0+32768))
  5483  05EA  00F4               	movwf	LCD_Puts@s
  5484  05EB  3088               	movlw	high (STR_4| (0+32768))
  5485  05EC  00F5               	movwf	LCD_Puts@s+1
  5486  05ED  318D  25DB  3184   	fcall	_LCD_Puts
  5487                           
  5488                           ;PIC16F1827-ChargeStation4-01.c: 203: break;
  5489  05F0  2E05               	goto	i1l2463
  5490  05F1                     i1l2457:	
  5491                           ;PIC16F1827-ChargeStation4-01.c: 204: case 2:
  5492                           
  5493                           
  5494                           ;PIC16F1827-ChargeStation4-01.c: 205: LCD_Puts("Left");
  5495  05F1  3024               	movlw	low (STR_5| (0+32768))
  5496  05F2  00F4               	movwf	LCD_Puts@s
  5497  05F3  3088               	movlw	high (STR_5| (0+32768))
  5498  05F4  00F5               	movwf	LCD_Puts@s+1
  5499  05F5  318D  25DB  3184   	fcall	_LCD_Puts
  5500                           
  5501                           ;PIC16F1827-ChargeStation4-01.c: 207: }
  5502                           
  5503                           ;PIC16F1827-ChargeStation4-01.c: 206: break;
  5504  05F8  2E05               	goto	i1l2463
  5505  05F9                     i1l2461:	
  5506  05F9  0020               	movlb	0	; select bank0
  5507  05FA  0858               	movf	display@i,w
  5508                           
  5509                           ; Switch size 1, requested type "space"
  5510                           ; Number of cases is 3, Range of values is 0 to 2
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte           10     6 (average)
  5514                           ; direct_byte           12     6 (fixed)
  5515                           ; jumptable            260     6 (fixed)
  5516                           ;	Chosen strategy is simple_byte
  5517  05FB  3A00               	xorlw	0	; case 0
  5518  05FC  1903               	skipnz
  5519  05FD  2DE1               	goto	i1l2453
  5520  05FE  3A01               	xorlw	1	; case 1
  5521  05FF  1903               	skipnz
  5522  0600  2DE9               	goto	i1l2455
  5523  0601  3A03               	xorlw	3	; case 2
  5524  0602  1903               	skipnz
  5525  0603  2DF1               	goto	i1l2457
  5526  0604  2E05               	goto	i1l2463
  5527  0605                     i1l2463:	
  5528                           
  5529                           ;PIC16F1827-ChargeStation4-01.c: 208: LCD_SetCursor(0, 1);
  5530  0605  01F7               	clrf	LCD_SetCursor@row
  5531  0606  0AF7               	incf	LCD_SetCursor@row,f
  5532  0607  3000               	movlw	0
  5533  0608  318B  2305  3184   	fcall	_LCD_SetCursor
  5534                           
  5535                           ;PIC16F1827-ChargeStation4-01.c: 209: LCD_Puts("Reseted");
  5536  060B  3000               	movlw	low (STR_13| (0+32768))
  5537  060C  00F4               	movwf	LCD_Puts@s
  5538  060D  3088               	movlw	high (STR_13| (0+32768))
  5539  060E  00F5               	movwf	LCD_Puts@s+1
  5540  060F  318D  25DB         	fcall	_LCD_Puts
  5541                           
  5542                           ;PIC16F1827-ChargeStation4-01.c: 212: }
  5543                           
  5544                           ;PIC16F1827-ChargeStation4-01.c: 210: break;
  5545  0611  0008               	return
  5546  0612                     i1l2469:	
  5547  0612  0020               	movlb	0	; select bank0
  5548  0613  0855               	movf	display@co,w
  5549                           
  5550                           ; Switch size 1, requested type "space"
  5551                           ; Number of cases is 4, Range of values is 0 to 3
  5552                           ; switch strategies available:
  5553                           ; Name         Instructions Cycles
  5554                           ; simple_byte           13     7 (average)
  5555                           ; direct_byte           14     6 (fixed)
  5556                           ; jumptable            260     6 (fixed)
  5557                           ;	Chosen strategy is simple_byte
  5558  0614  3A00               	xorlw	0	; case 0
  5559  0615  1903               	skipnz
  5560  0616  2C47               	goto	i1l2413
  5561  0617  3A01               	xorlw	1	; case 1
  5562  0618  1903               	skipnz
  5563  0619  2C78               	goto	i1l2427
  5564  061A  3A03               	xorlw	3	; case 2
  5565  061B  1903               	skipnz
  5566  061C  2D1F               	goto	i1l2447
  5567  061D  3A01               	xorlw	1	; case 3
  5568  061E  1903               	skipnz
  5569  061F  2DF9               	goto	i1l2461
  5570  0620  2E21               	goto	i1l351
  5571  0621                     i1l351:	
  5572  0621  0008               	return
  5573  0622                     __end_of_display:	
  5574                           
  5575                           	psect	text29
  5576  0AC9                     __ptext29:	
  5577 ;; *************** function i1_LCD_Clear *****************
  5578 ;; Defined at:
  5579 ;;		line 280 in file "My_header_16F.h"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5593 ;;      Params:         0       0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0
  5595 ;;      Temps:          2       0       0       0       0       0
  5596 ;;      Totals:         2       0       0       0       0       0
  5597 ;;Total ram usage:        2 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    3
  5600 ;; This function calls:
  5601 ;;		i1_LCD_Command
  5602 ;; This function is called by:
  5603 ;;		_display
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function i1_LCD_Clear
  5609  0AC9                     i1_LCD_Clear:	
  5610                           
  5611                           ;My_header_16F.h: 281: LCD_Command(0x01);
  5612                           
  5613                           ;incstack = 0
  5614                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5615  0AC9  3001               	movlw	1
  5616  0ACA  318B  23ED  318A   	fcall	i1_LCD_Command
  5617                           
  5618                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  5619  0ACD  300C               	movlw	12
  5620  0ACE  00F8               	movwf	??i1_LCD_Clear+1
  5621  0ACF  306C               	movlw	108
  5622  0AD0  00F7               	movwf	??i1_LCD_Clear
  5623  0AD1                     u377_27:	
  5624  0AD1  0BF7               	decfsz	??i1_LCD_Clear,f
  5625  0AD2  2AD1               	goto	u377_27
  5626  0AD3  0BF8               	decfsz	??i1_LCD_Clear+1,f
  5627  0AD4  2AD1               	goto	u377_27
  5628  0AD5  0000               	nop
  5629  0AD6  0008               	return
  5630  0AD7                     __end_ofi1_LCD_Clear:	
  5631                           
  5632                           	psect	text30
  5633  0D82                     __ptext30:	
  5634 ;; *************** function ___lwmod *****************
  5635 ;; Defined at:
  5636 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  divisor         2    0[COMMON] unsigned int 
  5639 ;;  dividend        2    2[COMMON] unsigned int 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  counter         1    5[COMMON] unsigned char 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  2    0[COMMON] unsigned int 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5651 ;;      Params:         4       0       0       0       0       0
  5652 ;;      Locals:         1       0       0       0       0       0
  5653 ;;      Temps:          1       0       0       0       0       0
  5654 ;;      Totals:         6       0       0       0       0       0
  5655 ;;Total ram usage:        6 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_display
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           
  5665                           ;psect for function ___lwmod
  5666  0D82                     ___lwmod:	
  5667                           
  5668                           ;incstack = 0
  5669                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5670  0D82  0870               	movf	___lwmod@divisor,w
  5671  0D83  0471               	iorwf	___lwmod@divisor+1,w
  5672  0D84  1903               	btfsc	3,2
  5673  0D85  2DA9               	goto	i1l2241
  5674  0D86  01F5               	clrf	___lwmod@counter
  5675  0D87  0AF5               	incf	___lwmod@counter,f
  5676  0D88                     i1l2231:	
  5677  0D88  1BF1               	btfsc	___lwmod@divisor+1,7
  5678  0D89  2D94               	goto	i1l2233
  5679  0D8A  3001               	movlw	1
  5680  0D8B                     u213_25:	
  5681  0D8B  35F0               	lslf	___lwmod@divisor,f
  5682  0D8C  0DF1               	rlf	___lwmod@divisor+1,f
  5683  0D8D  0B89               	decfsz	9,f
  5684  0D8E  2D8B               	goto	u213_25
  5685  0D8F  3001               	movlw	1
  5686  0D90  00F4               	movwf	??___lwmod
  5687  0D91  0874               	movf	??___lwmod,w
  5688  0D92  07F5               	addwf	___lwmod@counter,f
  5689  0D93  2D88               	goto	i1l2231
  5690  0D94                     i1l2233:	
  5691  0D94  0871               	movf	___lwmod@divisor+1,w
  5692  0D95  0273               	subwf	___lwmod@dividend+1,w
  5693  0D96  1D03               	skipz
  5694  0D97  2D9A               	goto	u215_25
  5695  0D98  0870               	movf	___lwmod@divisor,w
  5696  0D99  0272               	subwf	___lwmod@dividend,w
  5697  0D9A                     u215_25:	
  5698  0D9A  1C03               	skipc
  5699  0D9B  2DA0               	goto	i1l2237
  5700  0D9C  0870               	movf	___lwmod@divisor,w
  5701  0D9D  02F2               	subwf	___lwmod@dividend,f
  5702  0D9E  0871               	movf	___lwmod@divisor+1,w
  5703  0D9F  3BF3               	subwfb	___lwmod@dividend+1,f
  5704  0DA0                     i1l2237:	
  5705  0DA0  3001               	movlw	1
  5706  0DA1                     u216_25:	
  5707  0DA1  36F1               	lsrf	___lwmod@divisor+1,f
  5708  0DA2  0CF0               	rrf	___lwmod@divisor,f
  5709  0DA3  0B89               	decfsz	9,f
  5710  0DA4  2DA1               	goto	u216_25
  5711  0DA5  3001               	movlw	1
  5712  0DA6  02F5               	subwf	___lwmod@counter,f
  5713  0DA7  1D03               	btfss	3,2
  5714  0DA8  2D94               	goto	i1l2233
  5715  0DA9                     i1l2241:	
  5716  0DA9  0873               	movf	___lwmod@dividend+1,w
  5717  0DAA  00F1               	movwf	?___lwmod+1
  5718  0DAB  0872               	movf	___lwmod@dividend,w
  5719  0DAC  00F0               	movwf	?___lwmod
  5720  0DAD  0008               	return
  5721  0DAE                     __end_of___lwmod:	
  5722                           
  5723                           	psect	text31
  5724  0E3C                     __ptext31:	
  5725 ;; *************** function ___lwdiv *****************
  5726 ;; Defined at:
  5727 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  divisor         2    6[COMMON] unsigned int 
  5730 ;;  dividend        2    8[COMMON] unsigned int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  quotient        2   11[COMMON] unsigned int 
  5733 ;;  counter         1   13[COMMON] unsigned char 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  2    6[COMMON] unsigned int 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5743 ;;      Params:         4       0       0       0       0       0
  5744 ;;      Locals:         3       0       0       0       0       0
  5745 ;;      Temps:          1       0       0       0       0       0
  5746 ;;      Totals:         8       0       0       0       0       0
  5747 ;;Total ram usage:        8 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_lchika
  5753 ;;		_display
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function ___lwdiv
  5759  0E3C                     ___lwdiv:	
  5760                           
  5761                           ;incstack = 0
  5762                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5763  0E3C  01FB               	clrf	___lwdiv@quotient
  5764  0E3D  01FC               	clrf	___lwdiv@quotient+1
  5765  0E3E  0876               	movf	___lwdiv@divisor,w
  5766  0E3F  0477               	iorwf	___lwdiv@divisor+1,w
  5767  0E40  1903               	btfsc	3,2
  5768  0E41  2E6B               	goto	i1l2219
  5769  0E42  01FD               	clrf	___lwdiv@counter
  5770  0E43  0AFD               	incf	___lwdiv@counter,f
  5771  0E44                     i1l2207:	
  5772  0E44  1BF7               	btfsc	___lwdiv@divisor+1,7
  5773  0E45  2E50               	goto	i1l2209
  5774  0E46  3001               	movlw	1
  5775  0E47                     u206_25:	
  5776  0E47  35F6               	lslf	___lwdiv@divisor,f
  5777  0E48  0DF7               	rlf	___lwdiv@divisor+1,f
  5778  0E49  0B89               	decfsz	9,f
  5779  0E4A  2E47               	goto	u206_25
  5780  0E4B  3001               	movlw	1
  5781  0E4C  00FA               	movwf	??___lwdiv
  5782  0E4D  087A               	movf	??___lwdiv,w
  5783  0E4E  07FD               	addwf	___lwdiv@counter,f
  5784  0E4F  2E44               	goto	i1l2207
  5785  0E50                     i1l2209:	
  5786  0E50  3001               	movlw	1
  5787  0E51                     u208_25:	
  5788  0E51  35FB               	lslf	___lwdiv@quotient,f
  5789  0E52  0DFC               	rlf	___lwdiv@quotient+1,f
  5790  0E53  0B89               	decfsz	9,f
  5791  0E54  2E51               	goto	u208_25
  5792  0E55  0877               	movf	___lwdiv@divisor+1,w
  5793  0E56  0279               	subwf	___lwdiv@dividend+1,w
  5794  0E57  1D03               	skipz
  5795  0E58  2E5B               	goto	u209_25
  5796  0E59  0876               	movf	___lwdiv@divisor,w
  5797  0E5A  0278               	subwf	___lwdiv@dividend,w
  5798  0E5B                     u209_25:	
  5799  0E5B  1C03               	skipc
  5800  0E5C  2E62               	goto	i1l2215
  5801  0E5D  0876               	movf	___lwdiv@divisor,w
  5802  0E5E  02F8               	subwf	___lwdiv@dividend,f
  5803  0E5F  0877               	movf	___lwdiv@divisor+1,w
  5804  0E60  3BF9               	subwfb	___lwdiv@dividend+1,f
  5805  0E61  147B               	bsf	___lwdiv@quotient,0
  5806  0E62                     i1l2215:	
  5807  0E62  3001               	movlw	1
  5808  0E63                     u210_25:	
  5809  0E63  36F7               	lsrf	___lwdiv@divisor+1,f
  5810  0E64  0CF6               	rrf	___lwdiv@divisor,f
  5811  0E65  0B89               	decfsz	9,f
  5812  0E66  2E63               	goto	u210_25
  5813  0E67  3001               	movlw	1
  5814  0E68  02FD               	subwf	___lwdiv@counter,f
  5815  0E69  1D03               	btfss	3,2
  5816  0E6A  2E50               	goto	i1l2209
  5817  0E6B                     i1l2219:	
  5818  0E6B  087C               	movf	___lwdiv@quotient+1,w
  5819  0E6C  00F7               	movwf	?___lwdiv+1
  5820  0E6D  087B               	movf	___lwdiv@quotient,w
  5821  0E6E  00F6               	movwf	?___lwdiv
  5822  0E6F  0008               	return
  5823  0E70                     __end_of___lwdiv:	
  5824                           
  5825                           	psect	text32
  5826  0F93                     __ptext32:	
  5827 ;; *************** function ___almod *****************
  5828 ;; Defined at:
  5829 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  divisor         4    0[COMMON] long 
  5832 ;;  dividend        4    4[COMMON] long 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  sign            1   10[COMMON] unsigned char 
  5835 ;;  counter         1    9[COMMON] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  4    0[COMMON] long 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5845 ;;      Params:         8       0       0       0       0       0
  5846 ;;      Locals:         2       0       0       0       0       0
  5847 ;;      Temps:          1       0       0       0       0       0
  5848 ;;      Totals:        11       0       0       0       0       0
  5849 ;;Total ram usage:       11 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_display
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function ___almod
  5860  0F93                     ___almod:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in ___almod: [wreg+status,2+status,0]
  5864  0F93  01FA               	clrf	___almod@sign
  5865  0F94  1FF7               	btfss	___almod@dividend+3,7
  5866  0F95  2FA3               	goto	i1l565
  5867  0F96  09F4               	comf	___almod@dividend,f
  5868  0F97  09F5               	comf	___almod@dividend+1,f
  5869  0F98  09F6               	comf	___almod@dividend+2,f
  5870  0F99  09F7               	comf	___almod@dividend+3,f
  5871  0F9A  0AF4               	incf	___almod@dividend,f
  5872  0F9B  1903               	skipnz
  5873  0F9C  0AF5               	incf	___almod@dividend+1,f
  5874  0F9D  1903               	skipnz
  5875  0F9E  0AF6               	incf	___almod@dividend+2,f
  5876  0F9F  1903               	skipnz
  5877  0FA0  0AF7               	incf	___almod@dividend+3,f
  5878  0FA1  01FA               	clrf	___almod@sign
  5879  0FA2  0AFA               	incf	___almod@sign,f
  5880  0FA3                     i1l565:	
  5881  0FA3  1FF3               	btfss	___almod@divisor+3,7
  5882  0FA4  2FB0               	goto	i1l2129
  5883  0FA5  09F0               	comf	___almod@divisor,f
  5884  0FA6  09F1               	comf	___almod@divisor+1,f
  5885  0FA7  09F2               	comf	___almod@divisor+2,f
  5886  0FA8  09F3               	comf	___almod@divisor+3,f
  5887  0FA9  0AF0               	incf	___almod@divisor,f
  5888  0FAA  1903               	skipnz
  5889  0FAB  0AF1               	incf	___almod@divisor+1,f
  5890  0FAC  1903               	skipnz
  5891  0FAD  0AF2               	incf	___almod@divisor+2,f
  5892  0FAE  1903               	skipnz
  5893  0FAF  0AF3               	incf	___almod@divisor+3,f
  5894  0FB0                     i1l2129:	
  5895  0FB0  0873               	movf	___almod@divisor+3,w
  5896  0FB1  0472               	iorwf	___almod@divisor+2,w
  5897  0FB2  0471               	iorwf	___almod@divisor+1,w
  5898  0FB3  0470               	iorwf	___almod@divisor,w
  5899  0FB4  1903               	skipnz
  5900  0FB5  2FE9               	goto	i1l2145
  5901  0FB6  01F9               	clrf	___almod@counter
  5902  0FB7  0AF9               	incf	___almod@counter,f
  5903  0FB8                     i1l2135:	
  5904  0FB8  1BF3               	btfsc	___almod@divisor+3,7
  5905  0FB9  2FC6               	goto	i1l2137
  5906  0FBA  3001               	movlw	1
  5907  0FBB                     u189_25:	
  5908  0FBB  35F0               	lslf	___almod@divisor,f
  5909  0FBC  0DF1               	rlf	___almod@divisor+1,f
  5910  0FBD  0DF2               	rlf	___almod@divisor+2,f
  5911  0FBE  0DF3               	rlf	___almod@divisor+3,f
  5912  0FBF  0B89               	decfsz	9,f
  5913  0FC0  2FBB               	goto	u189_25
  5914  0FC1  3001               	movlw	1
  5915  0FC2  00F8               	movwf	??___almod
  5916  0FC3  0878               	movf	??___almod,w
  5917  0FC4  07F9               	addwf	___almod@counter,f
  5918  0FC5  2FB8               	goto	i1l2135
  5919  0FC6                     i1l2137:	
  5920  0FC6  0873               	movf	___almod@divisor+3,w
  5921  0FC7  0277               	subwf	___almod@dividend+3,w
  5922  0FC8  1D03               	skipz
  5923  0FC9  2FD4               	goto	u191_25
  5924  0FCA  0872               	movf	___almod@divisor+2,w
  5925  0FCB  0276               	subwf	___almod@dividend+2,w
  5926  0FCC  1D03               	skipz
  5927  0FCD  2FD4               	goto	u191_25
  5928  0FCE  0871               	movf	___almod@divisor+1,w
  5929  0FCF  0275               	subwf	___almod@dividend+1,w
  5930  0FD0  1D03               	skipz
  5931  0FD1  2FD4               	goto	u191_25
  5932  0FD2  0870               	movf	___almod@divisor,w
  5933  0FD3  0274               	subwf	___almod@dividend,w
  5934  0FD4                     u191_25:	
  5935  0FD4  1C03               	skipc
  5936  0FD5  2FDE               	goto	i1l2141
  5937  0FD6  0870               	movf	___almod@divisor,w
  5938  0FD7  02F4               	subwf	___almod@dividend,f
  5939  0FD8  0871               	movf	___almod@divisor+1,w
  5940  0FD9  3BF5               	subwfb	___almod@dividend+1,f
  5941  0FDA  0872               	movf	___almod@divisor+2,w
  5942  0FDB  3BF6               	subwfb	___almod@dividend+2,f
  5943  0FDC  0873               	movf	___almod@divisor+3,w
  5944  0FDD  3BF7               	subwfb	___almod@dividend+3,f
  5945  0FDE                     i1l2141:	
  5946  0FDE  3001               	movlw	1
  5947  0FDF                     u192_25:	
  5948  0FDF  36F3               	lsrf	___almod@divisor+3,f
  5949  0FE0  0CF2               	rrf	___almod@divisor+2,f
  5950  0FE1  0CF1               	rrf	___almod@divisor+1,f
  5951  0FE2  0CF0               	rrf	___almod@divisor,f
  5952  0FE3  0B89               	decfsz	9,f
  5953  0FE4  2FDF               	goto	u192_25
  5954  0FE5  3001               	movlw	1
  5955  0FE6  02F9               	subwf	___almod@counter,f
  5956  0FE7  1D03               	btfss	3,2
  5957  0FE8  2FC6               	goto	i1l2137
  5958  0FE9                     i1l2145:	
  5959  0FE9  087A               	movf	___almod@sign,w
  5960  0FEA  1903               	btfsc	3,2
  5961  0FEB  2FF7               	goto	i1l2149
  5962  0FEC  09F4               	comf	___almod@dividend,f
  5963  0FED  09F5               	comf	___almod@dividend+1,f
  5964  0FEE  09F6               	comf	___almod@dividend+2,f
  5965  0FEF  09F7               	comf	___almod@dividend+3,f
  5966  0FF0  0AF4               	incf	___almod@dividend,f
  5967  0FF1  1903               	skipnz
  5968  0FF2  0AF5               	incf	___almod@dividend+1,f
  5969  0FF3  1903               	skipnz
  5970  0FF4  0AF6               	incf	___almod@dividend+2,f
  5971  0FF5  1903               	skipnz
  5972  0FF6  0AF7               	incf	___almod@dividend+3,f
  5973  0FF7                     i1l2149:	
  5974  0FF7  0877               	movf	___almod@dividend+3,w
  5975  0FF8  00F3               	movwf	?___almod+3
  5976  0FF9  0876               	movf	___almod@dividend+2,w
  5977  0FFA  00F2               	movwf	?___almod+2
  5978  0FFB  0875               	movf	___almod@dividend+1,w
  5979  0FFC  00F1               	movwf	?___almod+1
  5980  0FFD  0874               	movf	___almod@dividend,w
  5981  0FFE  00F0               	movwf	?___almod
  5982  0FFF  0008               	return
  5983  1000                     __end_of___almod:	
  5984                           
  5985                           	psect	text33
  5986  06D7                     __ptext33:	
  5987 ;; *************** function ___aldiv *****************
  5988 ;; Defined at:
  5989 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  divisor         4    0[BANK0 ] long 
  5992 ;;  dividend        4    4[BANK0 ] long 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  quotient        4   10[BANK0 ] long 
  5995 ;;  sign            1    9[BANK0 ] unsigned char 
  5996 ;;  counter         1    8[BANK0 ] unsigned char 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  4    0[BANK0 ] long 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6006 ;;      Params:         0       8       0       0       0       0
  6007 ;;      Locals:         0       6       0       0       0       0
  6008 ;;      Temps:          1       0       0       0       0       0
  6009 ;;      Totals:         1      14       0       0       0       0
  6010 ;;Total ram usage:       15 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_display
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function ___aldiv
  6021  06D7                     ___aldiv:	
  6022                           
  6023                           ;incstack = 0
  6024                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6025  06D7  0020               	movlb	0	; select bank0
  6026  06D8  01D0               	clrf	___aldiv@sign
  6027  06D9  1FCA               	btfss	___aldiv@divisor+3,7
  6028  06DA  2EE8               	goto	i1l552
  6029  06DB  09C7               	comf	___aldiv@divisor,f
  6030  06DC  09C8               	comf	___aldiv@divisor+1,f
  6031  06DD  09C9               	comf	___aldiv@divisor+2,f
  6032  06DE  09CA               	comf	___aldiv@divisor+3,f
  6033  06DF  0AC7               	incf	___aldiv@divisor,f
  6034  06E0  1903               	skipnz
  6035  06E1  0AC8               	incf	___aldiv@divisor+1,f
  6036  06E2  1903               	skipnz
  6037  06E3  0AC9               	incf	___aldiv@divisor+2,f
  6038  06E4  1903               	skipnz
  6039  06E5  0ACA               	incf	___aldiv@divisor+3,f
  6040  06E6  01D0               	clrf	___aldiv@sign
  6041  06E7  0AD0               	incf	___aldiv@sign,f
  6042  06E8                     i1l552:	
  6043  06E8  1FCE               	btfss	___aldiv@dividend+3,7
  6044  06E9  2EF9               	goto	i1l2091
  6045  06EA  09CB               	comf	___aldiv@dividend,f
  6046  06EB  09CC               	comf	___aldiv@dividend+1,f
  6047  06EC  09CD               	comf	___aldiv@dividend+2,f
  6048  06ED  09CE               	comf	___aldiv@dividend+3,f
  6049  06EE  0ACB               	incf	___aldiv@dividend,f
  6050  06EF  1903               	skipnz
  6051  06F0  0ACC               	incf	___aldiv@dividend+1,f
  6052  06F1  1903               	skipnz
  6053  06F2  0ACD               	incf	___aldiv@dividend+2,f
  6054  06F3  1903               	skipnz
  6055  06F4  0ACE               	incf	___aldiv@dividend+3,f
  6056  06F5  3001               	movlw	1
  6057  06F6  00FB               	movwf	??___aldiv
  6058  06F7  087B               	movf	??___aldiv,w
  6059  06F8  06D0               	xorwf	___aldiv@sign,f
  6060  06F9                     i1l2091:	
  6061  06F9  3000               	movlw	0
  6062  06FA  00D4               	movwf	___aldiv@quotient+3
  6063  06FB  3000               	movlw	0
  6064  06FC  00D3               	movwf	___aldiv@quotient+2
  6065  06FD  3000               	movlw	0
  6066  06FE  00D2               	movwf	___aldiv@quotient+1
  6067  06FF  3000               	movlw	0
  6068  0700  00D1               	movwf	___aldiv@quotient
  6069  0701  084A               	movf	___aldiv@divisor+3,w
  6070  0702  0449               	iorwf	___aldiv@divisor+2,w
  6071  0703  0448               	iorwf	___aldiv@divisor+1,w
  6072  0704  0447               	iorwf	___aldiv@divisor,w
  6073  0705  1903               	skipnz
  6074  0706  2F42               	goto	i1l2113
  6075  0707  01CF               	clrf	___aldiv@counter
  6076  0708  0ACF               	incf	___aldiv@counter,f
  6077  0709                     i1l2099:	
  6078  0709  1BCA               	btfsc	___aldiv@divisor+3,7
  6079  070A  2F17               	goto	i1l2101
  6080  070B  3001               	movlw	1
  6081  070C                     u179_25:	
  6082  070C  35C7               	lslf	___aldiv@divisor,f
  6083  070D  0DC8               	rlf	___aldiv@divisor+1,f
  6084  070E  0DC9               	rlf	___aldiv@divisor+2,f
  6085  070F  0DCA               	rlf	___aldiv@divisor+3,f
  6086  0710  0B89               	decfsz	9,f
  6087  0711  2F0C               	goto	u179_25
  6088  0712  3001               	movlw	1
  6089  0713  00FB               	movwf	??___aldiv
  6090  0714  087B               	movf	??___aldiv,w
  6091  0715  07CF               	addwf	___aldiv@counter,f
  6092  0716  2F09               	goto	i1l2099
  6093  0717                     i1l2101:	
  6094  0717  3001               	movlw	1
  6095  0718                     u181_25:	
  6096  0718  35D1               	lslf	___aldiv@quotient,f
  6097  0719  0DD2               	rlf	___aldiv@quotient+1,f
  6098  071A  0DD3               	rlf	___aldiv@quotient+2,f
  6099  071B  0DD4               	rlf	___aldiv@quotient+3,f
  6100  071C  0B89               	decfsz	9,f
  6101  071D  2F18               	goto	u181_25
  6102  071E  084A               	movf	___aldiv@divisor+3,w
  6103  071F  024E               	subwf	___aldiv@dividend+3,w
  6104  0720  1D03               	skipz
  6105  0721  2F2C               	goto	u182_25
  6106  0722  0849               	movf	___aldiv@divisor+2,w
  6107  0723  024D               	subwf	___aldiv@dividend+2,w
  6108  0724  1D03               	skipz
  6109  0725  2F2C               	goto	u182_25
  6110  0726  0848               	movf	___aldiv@divisor+1,w
  6111  0727  024C               	subwf	___aldiv@dividend+1,w
  6112  0728  1D03               	skipz
  6113  0729  2F2C               	goto	u182_25
  6114  072A  0847               	movf	___aldiv@divisor,w
  6115  072B  024B               	subwf	___aldiv@dividend,w
  6116  072C                     u182_25:	
  6117  072C  1C03               	skipc
  6118  072D  2F37               	goto	i1l2109
  6119  072E  0847               	movf	___aldiv@divisor,w
  6120  072F  02CB               	subwf	___aldiv@dividend,f
  6121  0730  0848               	movf	___aldiv@divisor+1,w
  6122  0731  3BCC               	subwfb	___aldiv@dividend+1,f
  6123  0732  0849               	movf	___aldiv@divisor+2,w
  6124  0733  3BCD               	subwfb	___aldiv@dividend+2,f
  6125  0734  084A               	movf	___aldiv@divisor+3,w
  6126  0735  3BCE               	subwfb	___aldiv@dividend+3,f
  6127  0736  1451               	bsf	___aldiv@quotient,0
  6128  0737                     i1l2109:	
  6129  0737  3001               	movlw	1
  6130  0738                     u183_25:	
  6131  0738  36CA               	lsrf	___aldiv@divisor+3,f
  6132  0739  0CC9               	rrf	___aldiv@divisor+2,f
  6133  073A  0CC8               	rrf	___aldiv@divisor+1,f
  6134  073B  0CC7               	rrf	___aldiv@divisor,f
  6135  073C  0B89               	decfsz	9,f
  6136  073D  2F38               	goto	u183_25
  6137  073E  3001               	movlw	1
  6138  073F  02CF               	subwf	___aldiv@counter,f
  6139  0740  1D03               	btfss	3,2
  6140  0741  2F17               	goto	i1l2101
  6141  0742                     i1l2113:	
  6142  0742  0850               	movf	___aldiv@sign,w
  6143  0743  1903               	btfsc	3,2
  6144  0744  2F50               	goto	i1l2117
  6145  0745  09D1               	comf	___aldiv@quotient,f
  6146  0746  09D2               	comf	___aldiv@quotient+1,f
  6147  0747  09D3               	comf	___aldiv@quotient+2,f
  6148  0748  09D4               	comf	___aldiv@quotient+3,f
  6149  0749  0AD1               	incf	___aldiv@quotient,f
  6150  074A  1903               	skipnz
  6151  074B  0AD2               	incf	___aldiv@quotient+1,f
  6152  074C  1903               	skipnz
  6153  074D  0AD3               	incf	___aldiv@quotient+2,f
  6154  074E  1903               	skipnz
  6155  074F  0AD4               	incf	___aldiv@quotient+3,f
  6156  0750                     i1l2117:	
  6157  0750  0854               	movf	___aldiv@quotient+3,w
  6158  0751  00CA               	movwf	?___aldiv+3
  6159  0752  0853               	movf	___aldiv@quotient+2,w
  6160  0753  00C9               	movwf	?___aldiv+2
  6161  0754  0852               	movf	___aldiv@quotient+1,w
  6162  0755  00C8               	movwf	?___aldiv+1
  6163  0756  0851               	movf	___aldiv@quotient,w
  6164  0757  00C7               	movwf	?___aldiv
  6165  0758  0008               	return
  6166  0759                     __end_of___aldiv:	
  6167                           
  6168                           	psect	text34
  6169  0B05                     __ptext34:	
  6170 ;; *************** function _LCD_SetCursor *****************
  6171 ;; Defined at:
  6172 ;;		line 285 in file "My_header_16F.h"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  col             1    wreg     unsigned char 
  6175 ;;  row             1    7[COMMON] unsigned char 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  col             1   10[COMMON] unsigned char 
  6178 ;;  row_offsets     2    8[COMMON] unsigned char [2]
  6179 ;; Return value:  Size  Location     Type
  6180 ;;		None               void
  6181 ;; Registers used:
  6182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6188 ;;      Params:         1       0       0       0       0       0
  6189 ;;      Locals:         3       0       0       0       0       0
  6190 ;;      Temps:          0       0       0       0       0       0
  6191 ;;      Totals:         4       0       0       0       0       0
  6192 ;;Total ram usage:        4 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    3
  6195 ;; This function calls:
  6196 ;;		i1_LCD_Command
  6197 ;; This function is called by:
  6198 ;;		_display
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function _LCD_SetCursor
  6204  0B05                     _LCD_SetCursor:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6208                           ;LCD_SetCursor@col stored from wreg
  6209  0B05  00FA               	movwf	LCD_SetCursor@col
  6210                           
  6211                           ;My_header_16F.h: 286: uint8_t row_offsets[] = {0x00, 0x40};
  6212  0B06  0020               	movlb	0	; select bank0
  6213  0B07  0863               	movf	LCD_SetCursor@F2888+1,w
  6214  0B08  00F9               	movwf	LCD_SetCursor@row_offsets+1
  6215  0B09  0862               	movf	LCD_SetCursor@F2888,w
  6216  0B0A  00F8               	movwf	LCD_SetCursor@row_offsets
  6217                           
  6218                           ;My_header_16F.h: 288: LCD_Command(0x80 | (col + row_offsets[row]));
  6219  0B0B  0877               	movf	LCD_SetCursor@row,w
  6220  0B0C  3E78               	addlw	(low (LCD_SetCursor@row_offsets| 0))& (0+255)
  6221  0B0D  0086               	movwf	6
  6222  0B0E  0187               	clrf	7
  6223  0B0F  0801               	movf	1,w
  6224  0B10  077A               	addwf	LCD_SetCursor@col,w
  6225  0B11  3880               	iorlw	128
  6226  0B12  318B  23ED         	fcall	i1_LCD_Command
  6227  0B14  0008               	return
  6228  0B15                     __end_of_LCD_SetCursor:	
  6229                           
  6230                           	psect	text35
  6231  0BED                     __ptext35:	
  6232 ;; *************** function i1_LCD_Command *****************
  6233 ;; Defined at:
  6234 ;;		line 267 in file "My_header_16F.h"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  c               1    wreg     unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  c               1    5[COMMON] unsigned char 
  6239 ;;  LCD_Command     1    6[COMMON] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;		None               void
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0, pclath, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6249 ;;      Params:         0       0       0       0       0       0
  6250 ;;      Locals:         2       0       0       0       0       0
  6251 ;;      Temps:          1       0       0       0       0       0
  6252 ;;      Totals:         3       0       0       0       0       0
  6253 ;;Total ram usage:        3 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    2
  6256 ;; This function calls:
  6257 ;;		i1_I2C_Send
  6258 ;;		i1_I2C_Start
  6259 ;;		i1_I2C_Stop
  6260 ;; This function is called by:
  6261 ;;		_LCD_SetCursor
  6262 ;;		i1_LCD_Clear
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function i1_LCD_Command
  6268  0BED                     i1_LCD_Command:	
  6269                           
  6270                           ;incstack = 0
  6271                           ; Regs used in i1_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  6272                           ;i1LCD_Command@c stored from wreg
  6273  0BED  00F5               	movwf	i1LCD_Command@c
  6274                           
  6275                           ;My_header_16F.h: 268: uint8_t ans;
  6276                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  6277  0BEE  01F2               	clrf	i1I2C_Start@rw
  6278  0BEF  303E               	movlw	62
  6279  0BF0  318B  2382  318B   	fcall	i1_I2C_Start
  6280  0BF3  00F4               	movwf	??i1_LCD_Command
  6281  0BF4  0874               	movf	??i1_LCD_Command,w
  6282  0BF5  00F6               	movwf	i1LCD_Command@ans
  6283                           
  6284                           ;My_header_16F.h: 271: if (ans == 0) {
  6285  0BF6  0876               	movf	i1LCD_Command@ans,w
  6286  0BF7  1D03               	btfss	3,2
  6287  0BF8  2C01               	goto	i1l210
  6288                           
  6289                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  6290  0BF9  3080               	movlw	128
  6291  0BFA  318A  22F5  318B   	fcall	i1_I2C_Send
  6292                           
  6293                           ;My_header_16F.h: 274: I2C_Send(c);
  6294  0BFD  0875               	movf	i1LCD_Command@c,w
  6295  0BFE  318A  22F5  318B   	fcall	i1_I2C_Send
  6296  0C01                     i1l210:	
  6297                           
  6298                           ;My_header_16F.h: 275: }
  6299                           ;My_header_16F.h: 276: I2C_Stop();
  6300  0C01  318A  22A1  318B   	fcall	i1_I2C_Stop
  6301                           
  6302                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6303  0C04  3045               	movlw	69
  6304  0C05  00F4               	movwf	??i1_LCD_Command
  6305  0C06                     u378_27:	
  6306  0C06  0BF4               	decfsz	??i1_LCD_Command,f
  6307  0C07  2C06               	goto	u378_27
  6308  0C08  0008               	return
  6309  0C09                     __end_ofi1_LCD_Command:	
  6310                           
  6311                           	psect	text36
  6312  0DDB                     __ptext36:	
  6313 ;; *************** function _LCD_Puts *****************
  6314 ;; Defined at:
  6315 ;;		line 304 in file "My_header_16F.h"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  s               2    4[COMMON] PTR const unsigned char 
  6318 ;;		 -> STR_13(8), STR_12(5), STR_11(7), STR_10(6), 
  6319 ;;		 -> STR_9(4), STR_8(5), STR_7(7), STR_6(6), 
  6320 ;;		 -> STR_5(5), STR_4(7), STR_3(6), STR_2(8), 
  6321 ;;		 -> STR_1(7), 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  ans             2    8[COMMON] int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;		None               void
  6326 ;; Registers used:
  6327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6333 ;;      Params:         2       0       0       0       0       0
  6334 ;;      Locals:         2       0       0       0       0       0
  6335 ;;      Temps:          2       0       0       0       0       0
  6336 ;;      Totals:         6       0       0       0       0       0
  6337 ;;Total ram usage:        6 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    2
  6340 ;; This function calls:
  6341 ;;		i1_I2C_Send
  6342 ;;		i1_I2C_Start
  6343 ;;		i1_I2C_Stop
  6344 ;; This function is called by:
  6345 ;;		_display
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           
  6350                           ;psect for function _LCD_Puts
  6351  0DDB                     _LCD_Puts:	
  6352                           
  6353                           ;My_header_16F.h: 305: int ans;
  6354                           ;My_header_16F.h: 307: ans = I2C_Start(0x3E, 0);
  6355                           
  6356                           ;incstack = 0
  6357                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6358  0DDB  01F2               	clrf	i1I2C_Start@rw
  6359  0DDC  303E               	movlw	62
  6360  0DDD  318B  2382  318D   	fcall	i1_I2C_Start
  6361  0DE0  00F6               	movwf	??_LCD_Puts
  6362  0DE1  01F7               	clrf	??_LCD_Puts+1
  6363  0DE2  0876               	movf	??_LCD_Puts,w
  6364  0DE3  00F8               	movwf	LCD_Puts@ans
  6365  0DE4  0877               	movf	??_LCD_Puts+1,w
  6366  0DE5  00F9               	movwf	LCD_Puts@ans+1
  6367                           
  6368                           ;My_header_16F.h: 308: if (ans == 0) {
  6369  0DE6  0878               	movf	LCD_Puts@ans,w
  6370  0DE7  0479               	iorwf	LCD_Puts@ans+1,w
  6371  0DE8  1D03               	btfss	3,2
  6372  0DE9  2E06               	goto	i1l2057
  6373                           
  6374                           ;My_header_16F.h: 309: I2C_Send(0b01000000);
  6375  0DEA  3040               	movlw	64
  6376  0DEB  318A  22F5  318D   	fcall	i1_I2C_Send
  6377  0DEE                     i1l2055:	
  6378                           ;My_header_16F.h: 310: while (*s) {
  6379                           
  6380  0DEE  0874               	movf	LCD_Puts@s,w
  6381  0DEF  0084               	movwf	4
  6382  0DF0  0875               	movf	LCD_Puts@s+1,w
  6383  0DF1  0085               	movwf	5
  6384  0DF2  0012               	moviw fsr0++
  6385  0DF3  1903               	btfsc	3,2
  6386  0DF4  2E06               	goto	i1l2057
  6387                           
  6388                           ;My_header_16F.h: 311: I2C_Send(*s++);
  6389  0DF5  0874               	movf	LCD_Puts@s,w
  6390  0DF6  0084               	movwf	4
  6391  0DF7  0875               	movf	LCD_Puts@s+1,w
  6392  0DF8  0085               	movwf	5
  6393  0DF9  0800               	movf	0,w	;code access
  6394  0DFA  318A  22F5  318D   	fcall	i1_I2C_Send
  6395  0DFD  3001               	movlw	1
  6396  0DFE  07F4               	addwf	LCD_Puts@s,f
  6397  0DFF  3000               	movlw	0
  6398  0E00  3DF5               	addwfc	LCD_Puts@s+1,f
  6399                           
  6400                           ;My_header_16F.h: 312: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6401  0E01  3045               	movlw	69
  6402  0E02  00F6               	movwf	??_LCD_Puts
  6403  0E03                     u379_27:	
  6404  0E03  0BF6               	decfsz	??_LCD_Puts,f
  6405  0E04  2E03               	goto	u379_27
  6406  0E05  2DEE               	goto	i1l2055
  6407  0E06                     i1l2057:	
  6408                           
  6409                           ;My_header_16F.h: 313: }
  6410                           ;My_header_16F.h: 314: }
  6411                           ;My_header_16F.h: 315: I2C_Stop();
  6412  0E06  318A  22A1         	fcall	i1_I2C_Stop
  6413  0E08  0008               	return
  6414  0E09                     __end_of_LCD_Puts:	
  6415                           
  6416                           	psect	text37
  6417  0BD1                     __ptext37:	
  6418 ;; *************** function _LCD_Putc *****************
  6419 ;; Defined at:
  6420 ;;		line 291 in file "My_header_16F.h"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  c               1    wreg     unsigned char 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  c               1    5[COMMON] unsigned char 
  6425 ;;  ans             1    6[COMMON] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0, pclath, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6435 ;;      Params:         0       0       0       0       0       0
  6436 ;;      Locals:         2       0       0       0       0       0
  6437 ;;      Temps:          1       0       0       0       0       0
  6438 ;;      Totals:         3       0       0       0       0       0
  6439 ;;Total ram usage:        3 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    2
  6442 ;; This function calls:
  6443 ;;		i1_I2C_Send
  6444 ;;		i1_I2C_Start
  6445 ;;		i1_I2C_Stop
  6446 ;; This function is called by:
  6447 ;;		_display
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function _LCD_Putc
  6453  0BD1                     _LCD_Putc:	
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  6457                           ;LCD_Putc@c stored from wreg
  6458  0BD1  00F5               	movwf	LCD_Putc@c
  6459                           
  6460                           ;My_header_16F.h: 292: uint8_t ans;
  6461                           ;My_header_16F.h: 294: ans = I2C_Start(0x3E, 0);
  6462  0BD2  01F2               	clrf	i1I2C_Start@rw
  6463  0BD3  303E               	movlw	62
  6464  0BD4  318B  2382  318B   	fcall	i1_I2C_Start
  6465  0BD7  00F4               	movwf	??_LCD_Putc
  6466  0BD8  0874               	movf	??_LCD_Putc,w
  6467  0BD9  00F6               	movwf	LCD_Putc@ans
  6468                           
  6469                           ;My_header_16F.h: 295: if (ans == 0) {
  6470  0BDA  0876               	movf	LCD_Putc@ans,w
  6471  0BDB  1D03               	btfss	3,2
  6472  0BDC  2BE5               	goto	i1l222
  6473                           
  6474                           ;My_header_16F.h: 297: I2C_Send(0b11000000);
  6475  0BDD  30C0               	movlw	192
  6476  0BDE  318A  22F5  318B   	fcall	i1_I2C_Send
  6477                           
  6478                           ;My_header_16F.h: 298: I2C_Send(c);
  6479  0BE1  0875               	movf	LCD_Putc@c,w
  6480  0BE2  318A  22F5  318B   	fcall	i1_I2C_Send
  6481  0BE5                     i1l222:	
  6482                           
  6483                           ;My_header_16F.h: 299: }
  6484                           ;My_header_16F.h: 300: I2C_Stop();
  6485  0BE5  318A  22A1  318B   	fcall	i1_I2C_Stop
  6486                           
  6487                           ;My_header_16F.h: 301: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6488  0BE8  3045               	movlw	69
  6489  0BE9  00F4               	movwf	??_LCD_Putc
  6490  0BEA                     u380_27:	
  6491  0BEA  0BF4               	decfsz	??_LCD_Putc,f
  6492  0BEB  2BEA               	goto	u380_27
  6493  0BEC  0008               	return
  6494  0BED                     __end_of_LCD_Putc:	
  6495                           
  6496                           	psect	text38
  6497  0622                     __ptext38:	
  6498 ;; *************** function _button_timer_interrupt *****************
  6499 ;; Defined at:
  6500 ;;		line 87 in file "My_header_16F.h"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  bt              1    wreg     PTR struct button
  6503 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6504 ;;  sw_value        1    0[COMMON] unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  bt              1    3[COMMON] PTR struct button
  6507 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;		None               void
  6510 ;; Registers used:
  6511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6517 ;;      Params:         1       0       0       0       0       0
  6518 ;;      Locals:         1       0       0       0       0       0
  6519 ;;      Temps:          2       0       0       0       0       0
  6520 ;;      Totals:         4       0       0       0       0       0
  6521 ;;Total ram usage:        4 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_isr
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function _button_timer_interrupt
  6532  0622                     _button_timer_interrupt:	
  6533                           
  6534                           ;incstack = 0
  6535                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6536                           ;button_timer_interrupt@bt stored from wreg
  6537  0622  00F3               	movwf	button_timer_interrupt@bt
  6538                           
  6539                           ;My_header_16F.h: 88: if (sw_value) {
  6540  0623  0870               	movf	button_timer_interrupt@sw_value,w
  6541  0624  1903               	btfsc	3,2
  6542  0625  2E79               	goto	i1l2281
  6543                           
  6544                           ;My_header_16F.h: 89: if (bt->cnt_sw < 150 + 1) bt->cnt_sw++;
  6545  0626  0873               	movf	button_timer_interrupt@bt,w
  6546  0627  0086               	movwf	6
  6547  0628  0187               	clrf	7
  6548  0629  3F40               	moviw [0]fsr1
  6549  062A  00F1               	movwf	??_button_timer_interrupt
  6550  062B  3F41               	moviw [1]fsr1
  6551  062C  00F2               	movwf	??_button_timer_interrupt+1
  6552  062D  3000               	movlw	0
  6553  062E  0272               	subwf	??_button_timer_interrupt+1,w
  6554  062F  3097               	movlw	151
  6555  0630  1903               	skipnz
  6556  0631  0271               	subwf	??_button_timer_interrupt,w
  6557  0632  1803               	skipnc
  6558  0633  2E3C               	goto	i1l118
  6559  0634  0873               	movf	button_timer_interrupt@bt,w
  6560  0635  0086               	movwf	6
  6561  0636  0187               	clrf	7
  6562  0637  3001               	movlw	1
  6563  0638  0781               	addwf	1,f
  6564  0639  3141               	addfsr 1,1
  6565  063A  1803               	skipnc
  6566  063B  0A81               	incf	1,f
  6567  063C                     i1l118:	
  6568                           
  6569                           ;My_header_16F.h: 90: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  6570  063C  0873               	movf	button_timer_interrupt@bt,w
  6571  063D  0086               	movwf	6
  6572  063E  0187               	clrf	7
  6573  063F  0016               	moviw fsr1++
  6574  0640  3A96               	xorlw	150
  6575  0641  00F1               	movwf	??_button_timer_interrupt
  6576  0642  0016               	moviw fsr1++
  6577  0643  04F1               	iorwf	??_button_timer_interrupt,f
  6578  0644  1D03               	btfss	3,2
  6579  0645  2E4B               	goto	i1l119
  6580  0646  0873               	movf	button_timer_interrupt@bt,w
  6581  0647  3E02               	addlw	2
  6582  0648  0086               	movwf	6
  6583  0649  0187               	clrf	7
  6584  064A  1781               	bsf	1,7
  6585  064B                     i1l119:	
  6586                           
  6587                           ;My_header_16F.h: 91: if (bt->cnt_sw == 75)bt->flag.long_holding_2 = 1;
  6588  064B  0873               	movf	button_timer_interrupt@bt,w
  6589  064C  0086               	movwf	6
  6590  064D  0187               	clrf	7
  6591  064E  0016               	moviw fsr1++
  6592  064F  3A4B               	xorlw	75
  6593  0650  00F1               	movwf	??_button_timer_interrupt
  6594  0651  0016               	moviw fsr1++
  6595  0652  04F1               	iorwf	??_button_timer_interrupt,f
  6596  0653  1D03               	btfss	3,2
  6597  0654  2E5A               	goto	i1l120
  6598  0655  0873               	movf	button_timer_interrupt@bt,w
  6599  0656  3E02               	addlw	2
  6600  0657  0086               	movwf	6
  6601  0658  0187               	clrf	7
  6602  0659  1701               	bsf	1,6
  6603  065A                     i1l120:	
  6604                           
  6605                           ;My_header_16F.h: 92: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  6606  065A  0873               	movf	button_timer_interrupt@bt,w
  6607  065B  0086               	movwf	6
  6608  065C  0187               	clrf	7
  6609  065D  0016               	moviw fsr1++
  6610  065E  3A1E               	xorlw	30
  6611  065F  00F1               	movwf	??_button_timer_interrupt
  6612  0660  0016               	moviw fsr1++
  6613  0661  04F1               	iorwf	??_button_timer_interrupt,f
  6614  0662  1D03               	btfss	3,2
  6615  0663  2E69               	goto	i1l121
  6616  0664  0873               	movf	button_timer_interrupt@bt,w
  6617  0665  3E02               	addlw	2
  6618  0666  0086               	movwf	6
  6619  0667  0187               	clrf	7
  6620  0668  1681               	bsf	1,5
  6621  0669                     i1l121:	
  6622                           
  6623                           ;My_header_16F.h: 93: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  6624  0669  0873               	movf	button_timer_interrupt@bt,w
  6625  066A  0086               	movwf	6
  6626  066B  0187               	clrf	7
  6627  066C  0016               	moviw fsr1++
  6628  066D  3A02               	xorlw	2
  6629  066E  00F1               	movwf	??_button_timer_interrupt
  6630  066F  0016               	moviw fsr1++
  6631  0670  04F1               	iorwf	??_button_timer_interrupt,f
  6632  0671  1D03               	btfss	3,2
  6633  0672  0008               	return
  6634  0673  0873               	movf	button_timer_interrupt@bt,w
  6635  0674  3E02               	addlw	2
  6636  0675  0086               	movwf	6
  6637  0676  0187               	clrf	7
  6638  0677  1601               	bsf	1,4
  6639                           
  6640                           ;My_header_16F.h: 94: } else {
  6641  0678  0008               	return
  6642  0679                     i1l2281:	
  6643                           
  6644                           ;My_header_16F.h: 95: if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  6645  0679  0873               	movf	button_timer_interrupt@bt,w
  6646  067A  0086               	movwf	6
  6647  067B  0187               	clrf	7
  6648  067C  3F40               	moviw [0]fsr1
  6649  067D  00F1               	movwf	??_button_timer_interrupt
  6650  067E  3F41               	moviw [1]fsr1
  6651  067F  00F2               	movwf	??_button_timer_interrupt+1
  6652  0680  3000               	movlw	0
  6653  0681  0272               	subwf	??_button_timer_interrupt+1,w
  6654  0682  3096               	movlw	150
  6655  0683  1903               	skipnz
  6656  0684  0271               	subwf	??_button_timer_interrupt,w
  6657  0685  1C03               	skipc
  6658  0686  2E8D               	goto	i1l2285
  6659  0687  0873               	movf	button_timer_interrupt@bt,w
  6660  0688  3E02               	addlw	2
  6661  0689  0086               	movwf	6
  6662  068A  0187               	clrf	7
  6663  068B  1581               	bsf	1,3
  6664  068C  2EC8               	goto	i1l2297
  6665  068D                     i1l2285:	
  6666                           
  6667                           ;My_header_16F.h: 96: else if (bt->cnt_sw >= 75)bt->flag.long_hold_2 = 1;
  6668  068D  0873               	movf	button_timer_interrupt@bt,w
  6669  068E  0086               	movwf	6
  6670  068F  0187               	clrf	7
  6671  0690  3F40               	moviw [0]fsr1
  6672  0691  00F1               	movwf	??_button_timer_interrupt
  6673  0692  3F41               	moviw [1]fsr1
  6674  0693  00F2               	movwf	??_button_timer_interrupt+1
  6675  0694  3000               	movlw	0
  6676  0695  0272               	subwf	??_button_timer_interrupt+1,w
  6677  0696  304B               	movlw	75
  6678  0697  1903               	skipnz
  6679  0698  0271               	subwf	??_button_timer_interrupt,w
  6680  0699  1C03               	skipc
  6681  069A  2EA1               	goto	i1l2289
  6682  069B  0873               	movf	button_timer_interrupt@bt,w
  6683  069C  3E02               	addlw	2
  6684  069D  0086               	movwf	6
  6685  069E  0187               	clrf	7
  6686  069F  1501               	bsf	1,2
  6687  06A0  2EC8               	goto	i1l2297
  6688  06A1                     i1l2289:	
  6689                           
  6690                           ;My_header_16F.h: 97: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  6691  06A1  0873               	movf	button_timer_interrupt@bt,w
  6692  06A2  0086               	movwf	6
  6693  06A3  0187               	clrf	7
  6694  06A4  3F40               	moviw [0]fsr1
  6695  06A5  00F1               	movwf	??_button_timer_interrupt
  6696  06A6  3F41               	moviw [1]fsr1
  6697  06A7  00F2               	movwf	??_button_timer_interrupt+1
  6698  06A8  3000               	movlw	0
  6699  06A9  0272               	subwf	??_button_timer_interrupt+1,w
  6700  06AA  301E               	movlw	30
  6701  06AB  1903               	skipnz
  6702  06AC  0271               	subwf	??_button_timer_interrupt,w
  6703  06AD  1C03               	skipc
  6704  06AE  2EB5               	goto	i1l2293
  6705  06AF  0873               	movf	button_timer_interrupt@bt,w
  6706  06B0  3E02               	addlw	2
  6707  06B1  0086               	movwf	6
  6708  06B2  0187               	clrf	7
  6709  06B3  1481               	bsf	1,1
  6710  06B4  2EC8               	goto	i1l2297
  6711  06B5                     i1l2293:	
  6712                           
  6713                           ;My_header_16F.h: 98: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  6714  06B5  0873               	movf	button_timer_interrupt@bt,w
  6715  06B6  0086               	movwf	6
  6716  06B7  0187               	clrf	7
  6717  06B8  3F40               	moviw [0]fsr1
  6718  06B9  00F1               	movwf	??_button_timer_interrupt
  6719  06BA  3F41               	moviw [1]fsr1
  6720  06BB  00F2               	movwf	??_button_timer_interrupt+1
  6721  06BC  3000               	movlw	0
  6722  06BD  0272               	subwf	??_button_timer_interrupt+1,w
  6723  06BE  3002               	movlw	2
  6724  06BF  1903               	skipnz
  6725  06C0  0271               	subwf	??_button_timer_interrupt,w
  6726  06C1  1C03               	skipc
  6727  06C2  2EC8               	goto	i1l2297
  6728  06C3  0873               	movf	button_timer_interrupt@bt,w
  6729  06C4  3E02               	addlw	2
  6730  06C5  0086               	movwf	6
  6731  06C6  0187               	clrf	7
  6732  06C7  1401               	bsf	1,0
  6733  06C8                     i1l2297:	
  6734                           
  6735                           ;My_header_16F.h: 99: bt->cnt_sw = 0;
  6736  06C8  0873               	movf	button_timer_interrupt@bt,w
  6737  06C9  0086               	movwf	6
  6738  06CA  0187               	clrf	7
  6739  06CB  3000               	movlw	0
  6740  06CC  3FC0               	movwi [0]fsr1
  6741  06CD  3FC1               	movwi [1]fsr1
  6742                           
  6743                           ;My_header_16F.h: 100: bt->flags &= 0x0F;
  6744  06CE  300F               	movlw	15
  6745  06CF  00F1               	movwf	??_button_timer_interrupt
  6746  06D0  0873               	movf	button_timer_interrupt@bt,w
  6747  06D1  3E02               	addlw	2
  6748  06D2  0086               	movwf	6
  6749  06D3  0187               	clrf	7
  6750  06D4  0871               	movf	??_button_timer_interrupt,w
  6751  06D5  0581               	andwf	1,f
  6752  06D6  0008               	return
  6753  06D7                     __end_of_button_timer_interrupt:	
  6754                           
  6755                           	psect	text39
  6756  0B69                     __ptext39:	
  6757 ;; *************** function _adc *****************
  6758 ;; Defined at:
  6759 ;;		line 51 in file "My_header_16F.h"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  ch              1    wreg     unsigned char 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  ch              1    3[COMMON] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  2    0[COMMON] unsigned int 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6773 ;;      Params:         2       0       0       0       0       0
  6774 ;;      Locals:         1       0       0       0       0       0
  6775 ;;      Temps:          1       0       0       0       0       0
  6776 ;;      Totals:         4       0       0       0       0       0
  6777 ;;Total ram usage:        4 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_isr
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function _adc
  6788  0B69                     _adc:	
  6789                           
  6790                           ;incstack = 0
  6791                           ; Regs used in _adc: [wreg+status,2+status,0]
  6792                           ;adc@ch stored from wreg
  6793  0B69  00F3               	movwf	adc@ch
  6794                           
  6795                           ;My_header_16F.h: 52: ADCON0bits.ADON = 1;
  6796  0B6A  0021               	movlb	1	; select bank1
  6797  0B6B  141D               	bsf	29,0	;volatile
  6798                           
  6799                           ;My_header_16F.h: 53: ADCON0bits.CHS = ch;
  6800  0B6C  0873               	movf	adc@ch,w
  6801  0B6D  00F2               	movwf	??_adc
  6802  0B6E  0DF2               	rlf	??_adc,f
  6803  0B6F  0DF2               	rlf	??_adc,f
  6804  0B70  081D               	movf	29,w	;volatile
  6805  0B71  0672               	xorwf	??_adc,w
  6806  0B72  3983               	andlw	-125
  6807  0B73  0672               	xorwf	??_adc,w
  6808  0B74  009D               	movwf	29	;volatile
  6809                           
  6810                           ;My_header_16F.h: 54: _delay((unsigned long)((20)*(32000000/4000000.0)));
  6811  0B75  3035               	movlw	53
  6812  0B76  00F2               	movwf	??_adc
  6813  0B77                     u381_27:	
  6814  0B77  0BF2               	decfsz	??_adc,f
  6815  0B78  2B77               	goto	u381_27
  6816                           
  6817                           ;My_header_16F.h: 55: ADCON0bits.GO_nDONE = 1;
  6818  0B79  0021               	movlb	1	; select bank1
  6819  0B7A  149D               	bsf	29,1	;volatile
  6820  0B7B                     i1l111:	
  6821                           ;My_header_16F.h: 56: while (ADCON0bits.GO_nDONE);
  6822                           
  6823  0B7B  189D               	btfsc	29,1	;volatile
  6824  0B7C  2B7B               	goto	i1l111
  6825                           
  6826                           ;My_header_16F.h: 57: return ADRES;
  6827  0B7D  081C               	movf	28,w	;volatile
  6828  0B7E  00F1               	movwf	?_adc+1
  6829  0B7F  081B               	movf	27,w	;volatile
  6830  0B80  00F0               	movwf	?_adc
  6831  0B81  0008               	return
  6832  0B82                     __end_of_adc:	
  6833                           
  6834                           	psect	text40
  6835  0BB6                     __ptext40:	
  6836 ;; *************** function ___wmul *****************
  6837 ;; Defined at:
  6838 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  multiplier      2    4[COMMON] unsigned int 
  6841 ;;  multiplicand    2    6[COMMON] unsigned int 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  product         2    8[COMMON] unsigned int 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    4[COMMON] unsigned int 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6853 ;;      Params:         4       0       0       0       0       0
  6854 ;;      Locals:         2       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0
  6856 ;;      Totals:         6       0       0       0       0       0
  6857 ;;Total ram usage:        6 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; This function calls:
  6860 ;;		Nothing
  6861 ;; This function is called by:
  6862 ;;		_isr
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           
  6867                           ;psect for function ___wmul
  6868  0BB6                     ___wmul:	
  6869                           
  6870                           ;incstack = 0
  6871                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6872  0BB6  01F8               	clrf	___wmul@product
  6873  0BB7  01F9               	clrf	___wmul@product+1
  6874  0BB8                     i1l2533:	
  6875  0BB8  1C74               	btfss	___wmul@multiplier,0
  6876  0BB9  2BBE               	goto	i1l497
  6877  0BBA  0876               	movf	___wmul@multiplicand,w
  6878  0BBB  07F8               	addwf	___wmul@product,f
  6879  0BBC  0877               	movf	___wmul@multiplicand+1,w
  6880  0BBD  3DF9               	addwfc	___wmul@product+1,f
  6881  0BBE                     i1l497:	
  6882  0BBE  3001               	movlw	1
  6883  0BBF                     u256_25:	
  6884  0BBF  35F6               	lslf	___wmul@multiplicand,f
  6885  0BC0  0DF7               	rlf	___wmul@multiplicand+1,f
  6886  0BC1  0B89               	decfsz	9,f
  6887  0BC2  2BBF               	goto	u256_25
  6888  0BC3  3001               	movlw	1
  6889  0BC4                     u257_25:	
  6890  0BC4  36F5               	lsrf	___wmul@multiplier+1,f
  6891  0BC5  0CF4               	rrf	___wmul@multiplier,f
  6892  0BC6  0B89               	decfsz	9,f
  6893  0BC7  2BC4               	goto	u257_25
  6894  0BC8  0874               	movf	___wmul@multiplier,w
  6895  0BC9  0475               	iorwf	___wmul@multiplier+1,w
  6896  0BCA  1D03               	btfss	3,2
  6897  0BCB  2BB8               	goto	i1l2533
  6898  0BCC  0879               	movf	___wmul@product+1,w
  6899  0BCD  00F5               	movwf	?___wmul+1
  6900  0BCE  0878               	movf	___wmul@product,w
  6901  0BCF  00F4               	movwf	?___wmul
  6902  0BD0  0008               	return
  6903  0BD1                     __end_of___wmul:	
  6904                           
  6905                           	psect	text41
  6906  0F41                     __ptext41:	
  6907 ;; *************** function ___lldiv *****************
  6908 ;; Defined at:
  6909 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  divisor         4    0[COMMON] unsigned long 
  6912 ;;  dividend        4    4[COMMON] unsigned long 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  quotient        4    9[COMMON] unsigned long 
  6915 ;;  counter         1   13[COMMON] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  4    0[COMMON] unsigned long 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6925 ;;      Params:         8       0       0       0       0       0
  6926 ;;      Locals:         5       0       0       0       0       0
  6927 ;;      Temps:          1       0       0       0       0       0
  6928 ;;      Totals:        14       0       0       0       0       0
  6929 ;;Total ram usage:       14 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_isr
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           
  6939                           ;psect for function ___lldiv
  6940  0F41                     ___lldiv:	
  6941                           
  6942                           ;incstack = 0
  6943                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6944  0F41  3000               	movlw	0
  6945  0F42  00FC               	movwf	___lldiv@quotient+3
  6946  0F43  3000               	movlw	0
  6947  0F44  00FB               	movwf	___lldiv@quotient+2
  6948  0F45  3000               	movlw	0
  6949  0F46  00FA               	movwf	___lldiv@quotient+1
  6950  0F47  3000               	movlw	0
  6951  0F48  00F9               	movwf	___lldiv@quotient
  6952  0F49  0873               	movf	___lldiv@divisor+3,w
  6953  0F4A  0472               	iorwf	___lldiv@divisor+2,w
  6954  0F4B  0471               	iorwf	___lldiv@divisor+1,w
  6955  0F4C  0470               	iorwf	___lldiv@divisor,w
  6956  0F4D  1903               	skipnz
  6957  0F4E  2F8A               	goto	i1l2565
  6958  0F4F  01FD               	clrf	___lldiv@counter
  6959  0F50  0AFD               	incf	___lldiv@counter,f
  6960  0F51                     i1l2551:	
  6961  0F51  1BF3               	btfsc	___lldiv@divisor+3,7
  6962  0F52  2F5F               	goto	i1l2553
  6963  0F53  3001               	movlw	1
  6964  0F54                     u260_25:	
  6965  0F54  35F0               	lslf	___lldiv@divisor,f
  6966  0F55  0DF1               	rlf	___lldiv@divisor+1,f
  6967  0F56  0DF2               	rlf	___lldiv@divisor+2,f
  6968  0F57  0DF3               	rlf	___lldiv@divisor+3,f
  6969  0F58  0B89               	decfsz	9,f
  6970  0F59  2F54               	goto	u260_25
  6971  0F5A  3001               	movlw	1
  6972  0F5B  00F8               	movwf	??___lldiv
  6973  0F5C  0878               	movf	??___lldiv,w
  6974  0F5D  07FD               	addwf	___lldiv@counter,f
  6975  0F5E  2F51               	goto	i1l2551
  6976  0F5F                     i1l2553:	
  6977  0F5F  3001               	movlw	1
  6978  0F60                     u262_25:	
  6979  0F60  35F9               	lslf	___lldiv@quotient,f
  6980  0F61  0DFA               	rlf	___lldiv@quotient+1,f
  6981  0F62  0DFB               	rlf	___lldiv@quotient+2,f
  6982  0F63  0DFC               	rlf	___lldiv@quotient+3,f
  6983  0F64  0B89               	decfsz	9,f
  6984  0F65  2F60               	goto	u262_25
  6985  0F66  0873               	movf	___lldiv@divisor+3,w
  6986  0F67  0277               	subwf	___lldiv@dividend+3,w
  6987  0F68  1D03               	skipz
  6988  0F69  2F74               	goto	u263_25
  6989  0F6A  0872               	movf	___lldiv@divisor+2,w
  6990  0F6B  0276               	subwf	___lldiv@dividend+2,w
  6991  0F6C  1D03               	skipz
  6992  0F6D  2F74               	goto	u263_25
  6993  0F6E  0871               	movf	___lldiv@divisor+1,w
  6994  0F6F  0275               	subwf	___lldiv@dividend+1,w
  6995  0F70  1D03               	skipz
  6996  0F71  2F74               	goto	u263_25
  6997  0F72  0870               	movf	___lldiv@divisor,w
  6998  0F73  0274               	subwf	___lldiv@dividend,w
  6999  0F74                     u263_25:	
  7000  0F74  1C03               	skipc
  7001  0F75  2F7F               	goto	i1l2561
  7002  0F76  0870               	movf	___lldiv@divisor,w
  7003  0F77  02F4               	subwf	___lldiv@dividend,f
  7004  0F78  0871               	movf	___lldiv@divisor+1,w
  7005  0F79  3BF5               	subwfb	___lldiv@dividend+1,f
  7006  0F7A  0872               	movf	___lldiv@divisor+2,w
  7007  0F7B  3BF6               	subwfb	___lldiv@dividend+2,f
  7008  0F7C  0873               	movf	___lldiv@divisor+3,w
  7009  0F7D  3BF7               	subwfb	___lldiv@dividend+3,f
  7010  0F7E  1479               	bsf	___lldiv@quotient,0
  7011  0F7F                     i1l2561:	
  7012  0F7F  3001               	movlw	1
  7013  0F80                     u264_25:	
  7014  0F80  36F3               	lsrf	___lldiv@divisor+3,f
  7015  0F81  0CF2               	rrf	___lldiv@divisor+2,f
  7016  0F82  0CF1               	rrf	___lldiv@divisor+1,f
  7017  0F83  0CF0               	rrf	___lldiv@divisor,f
  7018  0F84  0B89               	decfsz	9,f
  7019  0F85  2F80               	goto	u264_25
  7020  0F86  3001               	movlw	1
  7021  0F87  02FD               	subwf	___lldiv@counter,f
  7022  0F88  1D03               	btfss	3,2
  7023  0F89  2F5F               	goto	i1l2553
  7024  0F8A                     i1l2565:	
  7025  0F8A  087C               	movf	___lldiv@quotient+3,w
  7026  0F8B  00F3               	movwf	?___lldiv+3
  7027  0F8C  087B               	movf	___lldiv@quotient+2,w
  7028  0F8D  00F2               	movwf	?___lldiv+2
  7029  0F8E  087A               	movf	___lldiv@quotient+1,w
  7030  0F8F  00F1               	movwf	?___lldiv+1
  7031  0F90  0879               	movf	___lldiv@quotient,w
  7032  0F91  00F0               	movwf	?___lldiv
  7033  0F92  0008               	return
  7034  0F93                     __end_of___lldiv:	
  7035                           
  7036                           	psect	text42
  7037  0C44                     __ptext42:	
  7038 ;; *************** function _EEP_Write *****************
  7039 ;; Defined at:
  7040 ;;		line 422 in file "My_header_16F.h"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  Reg_h           1    wreg     unsigned char 
  7043 ;;  Reg_l           1    4[COMMON] unsigned char 
  7044 ;;  data            1    5[COMMON] unsigned char 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  Reg_h           1    7[COMMON] unsigned char 
  7047 ;;  ans             1    8[COMMON] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0, pclath, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7057 ;;      Params:         2       0       0       0       0       0
  7058 ;;      Locals:         2       0       0       0       0       0
  7059 ;;      Temps:          1       0       0       0       0       0
  7060 ;;      Totals:         5       0       0       0       0       0
  7061 ;;Total ram usage:        5 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    2
  7064 ;; This function calls:
  7065 ;;		i1_I2C_Send
  7066 ;;		i1_I2C_Start
  7067 ;;		i1_I2C_Stop
  7068 ;; This function is called by:
  7069 ;;		_isr
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _EEP_Write
  7075  0C44                     _EEP_Write:	
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in _EEP_Write: [wreg+status,2+status,0+pclath+cstack]
  7079                           ;EEP_Write@Reg_h stored from wreg
  7080  0C44  00F7               	movwf	EEP_Write@Reg_h
  7081                           
  7082                           ;My_header_16F.h: 423: uint8_t ans;
  7083                           ;My_header_16F.h: 424: ans = I2C_Start(0x50, 0);
  7084  0C45  01F2               	clrf	i1I2C_Start@rw
  7085  0C46  3050               	movlw	80
  7086  0C47  318B  2382  318C   	fcall	i1_I2C_Start
  7087  0C4A  00F6               	movwf	??_EEP_Write
  7088  0C4B  0876               	movf	??_EEP_Write,w
  7089  0C4C  00F8               	movwf	EEP_Write@ans
  7090                           
  7091                           ;My_header_16F.h: 425: if (ans == 0) {
  7092  0C4D  0878               	movf	EEP_Write@ans,w
  7093  0C4E  1D03               	btfss	3,2
  7094  0C4F  2C5C               	goto	i1l260
  7095                           
  7096                           ;My_header_16F.h: 427: I2C_Send(Reg_h);
  7097  0C50  0877               	movf	EEP_Write@Reg_h,w
  7098  0C51  318A  22F5  318C   	fcall	i1_I2C_Send
  7099                           
  7100                           ;My_header_16F.h: 428: I2C_Send(Reg_l);
  7101  0C54  0874               	movf	EEP_Write@Reg_l,w
  7102  0C55  318A  22F5  318C   	fcall	i1_I2C_Send
  7103                           
  7104                           ;My_header_16F.h: 429: I2C_Send(data);
  7105  0C58  0875               	movf	EEP_Write@data,w
  7106  0C59  318A  22F5  318C   	fcall	i1_I2C_Send
  7107  0C5C                     i1l260:	
  7108                           
  7109                           ;My_header_16F.h: 430: }
  7110                           ;My_header_16F.h: 431: I2C_Stop();
  7111  0C5C  318A  22A1  318C   	fcall	i1_I2C_Stop
  7112                           
  7113                           ;My_header_16F.h: 432: _delay((unsigned long)((26)*(32000000/4000000.0)));
  7114  0C5F  3045               	movlw	69
  7115  0C60  00F6               	movwf	??_EEP_Write
  7116  0C61                     u382_27:	
  7117  0C61  0BF6               	decfsz	??_EEP_Write,f
  7118  0C62  2C61               	goto	u382_27
  7119  0C63  0008               	return
  7120  0C64                     __end_of_EEP_Write:	
  7121                           
  7122                           	psect	text43
  7123  0AA1                     __ptext43:	
  7124 ;; *************** function i1_I2C_Stop *****************
  7125 ;; Defined at:
  7126 ;;		line 237 in file "My_header_16F.h"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;		None               void
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0, pclath, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7140 ;;      Params:         0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0
  7143 ;;      Totals:         0       0       0       0       0       0
  7144 ;;Total ram usage:        0 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		i1_I2C_IdleCheck
  7149 ;; This function is called by:
  7150 ;;		_LCD_Putc
  7151 ;;		_LCD_Puts
  7152 ;;		_EEP_Write
  7153 ;;		i1_LCD_Command
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function i1_I2C_Stop
  7159  0AA1                     i1_I2C_Stop:	
  7160                           
  7161                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  7162                           
  7163                           ;incstack = 0
  7164                           ; Regs used in i1_I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  7165  0AA1  3005               	movlw	5
  7166  0AA2  318A  22B3         	fcall	i1_I2C_IdleCheck
  7167                           
  7168                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  7169  0AA4  0024               	movlb	4	; select bank4
  7170  0AA5  1516               	bsf	22,2	;volatile
  7171  0AA6  0008               	return
  7172  0AA7                     __end_ofi1_I2C_Stop:	
  7173                           
  7174                           	psect	text44
  7175  0B82                     __ptext44:	
  7176 ;; *************** function i1_I2C_Start *****************
  7177 ;; Defined at:
  7178 ;;		line 213 in file "My_header_16F.h"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  adrs            1    wreg     unsigned char 
  7181 ;;  rw              1    2[COMMON] unsigned char 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  adrs            1    3[COMMON] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  1    wreg      unsigned char 
  7186 ;; Registers used:
  7187 ;;		wreg, status,2, status,0, pclath, cstack
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7193 ;;      Params:         1       0       0       0       0       0
  7194 ;;      Locals:         1       0       0       0       0       0
  7195 ;;      Temps:          0       0       0       0       0       0
  7196 ;;      Totals:         2       0       0       0       0       0
  7197 ;;Total ram usage:        2 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    1
  7200 ;; This function calls:
  7201 ;;		i1_I2C_IdleCheck
  7202 ;; This function is called by:
  7203 ;;		_LCD_Putc
  7204 ;;		_LCD_Puts
  7205 ;;		_EEP_Write
  7206 ;;		i1_LCD_Command
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function i1_I2C_Start
  7212  0B82                     i1_I2C_Start:	
  7213                           
  7214                           ;incstack = 0
  7215                           ; Regs used in i1_I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7216                           ;i1I2C_Start@adrs stored from wreg
  7217  0B82  00F3               	movwf	i1I2C_Start@adrs
  7218                           
  7219                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  7220  0B83  3005               	movlw	5
  7221  0B84  318A  22B3  318B   	fcall	i1_I2C_IdleCheck
  7222                           
  7223                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  7224  0B87  0024               	movlb	4	; select bank4
  7225  0B88  1416               	bsf	22,0	;volatile
  7226                           
  7227                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  7228  0B89  3005               	movlw	5
  7229  0B8A  318A  22B3  318B   	fcall	i1_I2C_IdleCheck
  7230                           
  7231                           ;My_header_16F.h: 219: SSP1IF = 0;
  7232  0B8D  0020               	movlb	0	; select bank0
  7233  0B8E  1191               	bcf	17,3	;volatile
  7234                           
  7235                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  7236  0B8F  3573               	lslf	i1I2C_Start@adrs,w
  7237  0B90  0772               	addwf	i1I2C_Start@rw,w
  7238  0B91  0024               	movlb	4	; select bank4
  7239  0B92  0091               	movwf	17	;volatile
  7240  0B93                     i1l186:	
  7241                           ;My_header_16F.h: 221: while (!SSP1IF);
  7242                           
  7243  0B93  0020               	movlb	0	; select bank0
  7244  0B94  1D91               	btfss	17,3	;volatile
  7245  0B95  2B93               	goto	i1l186
  7246                           
  7247                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  7248  0B96  0024               	movlb	4	; select bank4
  7249  0B97  0E16               	swapf	22,w	;volatile
  7250  0B98  0C89               	rrf	9,f
  7251  0B99  0C89               	rrf	9,f
  7252  0B9A  3901               	andlw	1
  7253  0B9B  0008               	return
  7254  0B9C                     __end_ofi1_I2C_Start:	
  7255                           
  7256                           	psect	text45
  7257  0AF5                     __ptext45:	
  7258 ;; *************** function i1_I2C_Send *****************
  7259 ;; Defined at:
  7260 ;;		line 243 in file "My_header_16F.h"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  data            1    wreg     unsigned char 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  data            1    2[COMMON] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      unsigned char 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0, pclath, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7274 ;;      Params:         0       0       0       0       0       0
  7275 ;;      Locals:         1       0       0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0       0
  7277 ;;      Totals:         1       0       0       0       0       0
  7278 ;;Total ram usage:        1 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    1
  7281 ;; This function calls:
  7282 ;;		i1_I2C_IdleCheck
  7283 ;; This function is called by:
  7284 ;;		_LCD_Putc
  7285 ;;		_LCD_Puts
  7286 ;;		_EEP_Write
  7287 ;;		i1_LCD_Command
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function i1_I2C_Send
  7293  0AF5                     i1_I2C_Send:	
  7294                           
  7295                           ;incstack = 0
  7296                           ; Regs used in i1_I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  7297                           ;i1I2C_Send@data stored from wreg
  7298  0AF5  00F2               	movwf	i1I2C_Send@data
  7299                           
  7300                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  7301  0AF6  3005               	movlw	5
  7302  0AF7  318A  22B3  318A   	fcall	i1_I2C_IdleCheck
  7303                           
  7304                           ;My_header_16F.h: 245: SSP1IF = 0;
  7305  0AFA  0020               	movlb	0	; select bank0
  7306  0AFB  1191               	bcf	17,3	;volatile
  7307                           
  7308                           ;My_header_16F.h: 246: SSP1BUF = data;
  7309  0AFC  0872               	movf	i1I2C_Send@data,w
  7310  0AFD  0024               	movlb	4	; select bank4
  7311  0AFE  0091               	movwf	17	;volatile
  7312  0AFF                     i1l201:	
  7313                           ;My_header_16F.h: 247: while (!SSP1IF);
  7314                           
  7315  0AFF  0020               	movlb	0	; select bank0
  7316  0B00  1D91               	btfss	17,3	;volatile
  7317  0B01  2AFF               	goto	i1l201
  7318                           
  7319                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  7320                           ;	Return value of i1_I2C_Send is never used
  7321  0B02  0024               	movlb	4	; select bank4
  7322  0B03  0816               	movf	22,w	;volatile
  7323  0B04  0008               	return
  7324  0B05                     __end_ofi1_I2C_Send:	
  7325                           
  7326                           	psect	text46
  7327  0AB3                     __ptext46:	
  7328 ;; *************** function i1_I2C_IdleCheck *****************
  7329 ;; Defined at:
  7330 ;;		line 199 in file "My_header_16F.h"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  mask            1    wreg     unsigned char 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  mask            1    1[COMMON] unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;		None               void
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7344 ;;      Params:         0       0       0       0       0       0
  7345 ;;      Locals:         1       0       0       0       0       0
  7346 ;;      Temps:          1       0       0       0       0       0
  7347 ;;      Totals:         2       0       0       0       0       0
  7348 ;;Total ram usage:        2 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		i1_I2C_Start
  7354 ;;		i1_I2C_Stop
  7355 ;;		i1_I2C_Send
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           
  7360                           ;psect for function i1_I2C_IdleCheck
  7361  0AB3                     i1_I2C_IdleCheck:	
  7362                           
  7363                           ;incstack = 0
  7364                           ; Regs used in i1_I2C_IdleCheck: [wreg+status,2+status,0]
  7365                           ;i1I2C_IdleCheck@mask stored from wreg
  7366  0AB3  00F1               	movwf	i1I2C_IdleCheck@mask
  7367  0AB4                     i1l1919:	
  7368                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  7369                           
  7370  0AB4  0871               	movf	i1I2C_IdleCheck@mask,w
  7371  0AB5  0024               	movlb	4	; select bank4
  7372  0AB6  0514               	andwf	20,w	;volatile
  7373  0AB7  00F0               	movwf	??i1_I2C_IdleCheck
  7374  0AB8  0816               	movf	22,w	;volatile
  7375  0AB9  391F               	andlw	31
  7376  0ABA  0470               	iorwf	??i1_I2C_IdleCheck,w
  7377  0ABB  1903               	btfsc	3,2
  7378  0ABC  0008               	return
  7379  0ABD  2AB4               	goto	i1l1919
  7380  0ABE                     __end_ofi1_I2C_IdleCheck:	
  7381  007E                     btemp	set	126	;btemp
  7382  007E                     int$flags	set	126
  7383  007E                     wtemp	set	126
  7384  007E                     wtemp0	set	126
  7385  0080                     wtemp1	set	128
  7386  0082                     wtemp2	set	130
  7387  0084                     wtemp3	set	132
  7388  0086                     wtemp4	set	134
  7389  0088                     wtemp5	set	136
  7390  007F                     wtemp6	set	127
  7391  007E                     ttemp	set	126
  7392  007E                     ttemp0	set	126
  7393  0081                     ttemp1	set	129
  7394  0084                     ttemp2	set	132
  7395  0087                     ttemp3	set	135
  7396  007F                     ttemp4	set	127
  7397  007E                     ltemp	set	126
  7398  007E                     ltemp0	set	126
  7399  0082                     ltemp1	set	130
  7400  0086                     ltemp2	set	134
  7401  0080                     ltemp3	set	128


Data Sizes:
    Strings     45
    Constant    0
    Data        2
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      68
    BANK1            80     42      54
    BANK2            80     55      65
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[8]), 
		 -> STR_1(CODE[7]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_RA5(BANK0[3]), sw_RA4(BANK0[3]), sw_RA3(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lldiv
    _lchika->___lwdiv
    _display->___lwdiv
    i1_LCD_Clear->i1_LCD_Command
    ___lwdiv->___lwmod
    ___aldiv->___almod
    _LCD_SetCursor->i1_LCD_Command
    i1_LCD_Command->i1_I2C_Start
    _LCD_Puts->i1_I2C_Start
    _LCD_Putc->i1_I2C_Start
    ___wmul->_adc
    _EEP_Write->i1_I2C_Start
    i1_I2C_Stop->i1_I2C_IdleCheck
    i1_I2C_Start->i1_I2C_IdleCheck
    i1_I2C_Send->i1_I2C_IdleCheck

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_display
    _display->___aldiv

Critical Paths under _main in BANK1

    _main_init->_LCD_init
    _LCD_init->_LCD_Clear
    _LCD_Clear->_LCD_Command
    _LCD_Command->_I2C_Start
    _EEP_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                85    85      0    9798
                                             12 BANK1     30    30      0
                                              0 BANK2     55    55      0
                           _EEP_Read
                                _LED
                                _OUT
                         _flag_clear
                          _flag_read
                          _main_init
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     433
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2735
                           _I2C_init
                           _LCD_init
                           _adc_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             3     3      0    2580
                                              9 BANK1      3     3      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            2     2      0    1290
                                              7 BANK1      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0    1290
                                              4 BANK1      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_read                                            2     1      1     644
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _flag_clear                                           3     2      1     540
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     609
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1    1163
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEP_Read                                             5     4      1    2618
                                              6 BANK1      5     4      1
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     717
                                              2 BANK1      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1132
                                              2 BANK1      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK1      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      96
                                              2 BANK1      3     3      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  9     9      0   13235
                                             18 BANK0      9     9      0
                          _EEP_Write
                            ___lldiv
                             ___wmul
                                _adc
             _button_timer_interrupt
                            _display
                             _lchika
                        _ringbuf_num
                        _ringbuf_pop
                              i1_OUT
 ---------------------------------------------------------------------------------
 (8) i1_OUT                                                2     1      1     114
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          4     4      0     227
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          2     2      0     226
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _lchika                                               5     5      0    2340
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___lwdiv
                              i1_LED
 ---------------------------------------------------------------------------------
 (9) i1_LED                                                2     1      1     166
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     478
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) _display                                              4     3      1    7224
                                             14 BANK0      4     3      1
                           _LCD_Putc
                           _LCD_Puts
                      _LCD_SetCursor
                            ___aldiv
                            ___almod
                            ___lwdiv
                            ___lwmod
                        i1_LCD_Clear
 ---------------------------------------------------------------------------------
 (9) i1_LCD_Clear                                          2     2      0     281
                                              7 COMMON     2     2      0
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4    1583
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4    1408
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___almod                                             11     3      8     474
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (9) ___aldiv                                             15     7      8     478
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _LCD_SetCursor                                        4     3      1     883
                                              7 COMMON     4     3      1
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i1_LCD_Command                                       3     3      0     281
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Puts                                             6     4      2    1461
                                              4 COMMON     6     4      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Putc                                             3     3      0     281
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               4     3      1     837
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _adc                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     270
                                              4 COMMON     6     2      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     340
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (8) _EEP_Write                                            5     3      2    1037
                                              4 COMMON     5     3      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Stop                                          0     0      0      22
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Start                                         2     1      1     170
                                              2 COMMON     2     1      1
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Send                                          1     1      0      44
                                              2 COMMON     1     1      0
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i1_I2C_IdleCheck                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _LED
   _OUT
   _flag_clear
   _flag_read
   _main_init
     _I2C_init
     _LCD_init
       _LCD_Clear
         _LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _adc_init
     _timer0_init
     _timer1_init
   _ringbuf_init

 _isr (ROOT)
   _EEP_Write
     i1_I2C_Send
       i1_I2C_IdleCheck
     i1_I2C_Start
       i1_I2C_IdleCheck
     i1_I2C_Stop
       i1_I2C_IdleCheck
   ___lldiv
   ___wmul
     _adc (ARG)
   _adc
   _button_timer_interrupt
   _display
     _LCD_Putc
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_Puts
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_SetCursor
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
     ___aldiv
       ___almod (ARG)
     ___almod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     i1_LCD_Clear
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
   _lchika
     ___awdiv
     ___lwdiv
       ___lwmod (ARG)
     i1_LED
   _ringbuf_num
   _ringbuf_pop
   i1_OUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2A      36       8       67.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     37      41      10       81.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:44:52 2015

                              _s 002C                                _v 0032               __size_of_I2C_Start 001C  
                    __CFG_CP$OFF 0000                     ?_LCD_Command 0070                               l99 0B43  
                   ___awdiv@sign 0076                               _sp 00CA                               _ss 0020  
            ___wmul@multiplicand 0076                    _LCD_SetCursor 0B05                      ?i1_I2C_Send 0070  
                    ?i1_I2C_Stop 0070                              l201 0B21                              l210 0CBB  
                            l400 0360                              l192 0BAD                              l264 0E87  
                            l360 0DC1                              l265 0EA2                              l186 0C1C  
                            l370 0D34                              l363 0DCB                              l372 0D3C  
                            l356 0DB7                              l373 0D44                              l366 0DDA  
                            l375 0D58                              l393 0D0A                              _RA3 0063  
                            _RA4 0064                              _LED 0D31                              _RA5 0065  
                   __CFG_CPD$OFF 0000                              _OUT 0DAE                              _adc 0B69  
                            _cnt 00D0                              _cut 0157                              _isr 0004  
            __size_of_I2C_rStart 001A             __size_of_I2C_Receive 0020                     __CFG_BORV$LO 0000  
                            wreg 0009                flag_clear@bit_and 00A0                     __CFG_LVP$OFF 0000  
                           LED@b 00A1                             ?_LED 00A0                             ?_OUT 00A0  
                   ?i1_I2C_Start 0072                             ?_adc 0070                             l3023 0DBA  
                           l3033 0DCE                             l3027 0DC4                             l3019 0DB1  
                           l3051 0C91                             l3043 0C87                             l3061 0C98  
                           l3039 0D4C                             l3055 0C96                             l3047 0C8C  
                           l3215 0361                             l3065 0CEA                             l3073 0CFE  
                           l3241 03BC                             l3067 0CF0                             l3251 03E0  
                           l3235 03A7                             l3227 038C                             l3069 0CF7  
                           l3261 0417                             l3237 03AD                             l3269 0435  
                           l3197 0274                             OUT@b 00A1                             l2915 0B4C  
                           l2869 0AD9                             ?_isr 0070                             STR_1 0810  
                           STR_2 0808                             STR_3 081E                             STR_4 0817  
                           STR_5 0824                             STR_6 081E                             STR_7 0817  
                           STR_8 0824                             STR_9 0829                             u3330 0D39  
                           u3350 0D41                             u3370 0D49                             u3515 02FE  
                           u3525 031C                             u3615 03F2                             u3535 0347  
                           u3707 0AEF                             u3717 0CC1                             u3727 0EA8  
                           u3647 0285                             u3657 029C                             u3667 02B5  
                           u3677 02CE                             u3687 0EB4                             u3697 0EDA  
                           _SPEN 0CEF                             _TXIE 048C                             _TXIF 008C  
                           _WPUB 020D               __size_of_EEP_Write 0020                     __CFG_WRT$OFF 0000  
                           _cnt0 0038                             _cntf 00D3                             _main 0234  
       button_timer_interrupt@bt 0073               __size_of_LCD_Clear 000F                      main@ringbuf 0120  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
               __end_of_I2C_Send 0B27                             btemp 007E                             isr@i 0061  
               __end_of_I2C_Stop 0AAD                             ltemp 007E                 __end_of_I2C_init 0AC9  
                           start 020F                             ttemp 007E                             wtemp 007E  
                  __CFG_IESO$OFF 0000                            ??_LED 00A1                 __end_of_EEP_Read 0EAD  
         __size_of_I2C_IdleCheck 000F                            ??_OUT 00A1                            ??_adc 0072  
              ??i1_I2C_IdleCheck 0070                            ??_isr 0059                    __CFG_PLLEN$ON 0000  
               __end_of_LCD_Putc 0BED                 __end_of_LCD_Puts 0E09                   ?_LCD_SetCursor 0077  
               __end_of_LCD_init 0EF0                     ?i1_LCD_Clear 0070                  __end_of___aldiv 0759  
                __end_of___almod 1000                            ?_main 0070                  __end_of___awdiv 0F41  
                          _ADRES 009B                            STR_10 081E                            STR_11 0817  
                          STR_12 0824                            STR_13 0800                      LCD_Putc@ans 0076  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                  __end_of___lldiv 0F93  
                ___awdiv@divisor 0070                            _LATB0 0868                            _LATB3 086B  
                          _LATA6 0866                            _LATB5 086D                            _LATA7 0867  
                          _LATB6 086E                  __end_of___lwdiv 0E70                            i1l111 0B7B  
                          i1l120 065A                            i1l201 0AFF                            i1l121 0669  
                          i1l210 0C01                            i1l118 063C                            i1l222 0BE5  
                          i1l302 0025                            i1l119 064B                            i1l303 0023  
                          i1l305 00B5                            i1l260 0C5C                            i1l317 020B  
                          i1l351 0621                            i1l360 0D6A                  __end_of___lwmod 0DAE  
                          i1l186 0B93                            i1l370 0D0D                            i1l363 0D73  
                          i1l372 0D15                            i1l356 0D61                            i1l373 0D1D  
                          i1l366 0D81                            i1l375 0D30                            i1l552 06E8  
                          i1l565 0FA3                            i1l497 0BBE                  ___awdiv@counter 0075  
                          i1_LED 0D0B                      LCD_Puts@ans 0078                            _RCSTA 019D  
                          i1_OUT 0D59                            _TMR1H 0017                            _TMR1L 0016  
                          _TRISA 008C                            _TRISB 008D                            _TXREG 019A  
                          _TXSTA 019E                   __CFG_FCMEN$OFF 0000                  __end_of_display 0622  
                          adc@ch 0073                            _cnt1s 003A                            main@i 0156  
              __end_of_I2C_Start 0C25                   __CFG_BOREN$OFF 0000                     LCD_Command@c 00A5  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F              __size_ofi1_I2C_Send 0010  
            __size_ofi1_I2C_Stop 0006                   __CFG_MCLRE$OFF 0000                  __initialization 0211  
                   __end_of_main 043C              ringbuf_init@bufsize 00A1                __end_of_EEP_Write 0C64  
                         ??_main 00AC                __end_of_LCD_Clear 0AF5                           ?i1_LED 0070  
                         ?i1_OUT 0070                           _BCL1IF 0093                    _I2C_IdleCheck 0AD7  
               ___awdiv@dividend 0072                           i1LED@b 0071                           _ANSELA 018C  
                         _ANSELB 018D              i1I2C_IdleCheck@mask 0071                 __end_of_adc_init 0B3C  
                         i1l2101 0717                           i1l2113 0742                           i1l2117 0750  
                         i1l2109 0737                           i1l2141 0FDE                           i1l2055 0DEE  
                         i1l2135 0FB8                           i1l2215 0E62                           i1l2207 0E44  
                         i1l2231 0D88                           i1l2057 0E06                           i1l2137 0FC6  
                         i1l2145 0FE9                           i1l2129 0FB0                           i1l2209 0E50  
                         i1l2233 0D94                           i1l2241 0DA9                           i1l2161 0EFA  
                         i1l2091 06F9                           i1l2219 0E6B                           i1l2323 0E3A  
                         i1l2149 0FF7                           i1l2237 0DA0                           i1l2421 0468  
                         i1l2413 0447                           u200_25 0F1A                           i1l2253 0D25  
                         i1l2405 07C8                           i1l2423 0470                           i1l2167 0F05  
                         i1l2335 07EB                           i1l2281 0679                           i1l2441 050F  
                         i1l2193 0F3C                           i1l2185 0F2B                           i1l2177 0F0D  
                         i1l2099 0709                           i1l2443 0517                           i1l2419 0460  
                         i1l2427 0478                           i1l2179 0F19                           i1l2533 0BB8  
                         i1l2293 06B5                           i1l2285 068D                           i1l2453 05E1  
                         i1l2461 05F9                           i1l2429 0484                           u201_25 0F24  
                         i1l2189 0F34                           i1l2551 0F51                           i1l2455 05E9  
                         i1l2463 0605                           i1l2439 0507                           i1l2447 051F  
                         i1l2391 0773                           i1l2561 0F7F                           i1l2553 0F5F  
                         i1l2289 06A1                           i1l2297 06C8                           i1l2457 05F1  
                         i1l2449 052B                           i1l2571 0D5B                           i1l2565 0F8A  
                         u210_25 0E63                           i1l2469 0612                           u202_25 0F2C  
                         i1l2397 07AD                           i1l2717 00A3                           i1l2709 0052  
                         i1l1919 0AB4                           i1l2575 0D64                           i1l2735 00D1  
                         i1l2719 00AC                           i1l2585 0D76                           i1l2745 00E4  
                         i1OUT@b 0071                           i1l2579 0D6D                           i1l2765 0203  
                         u220_20 0D1A                           u300_25 015C                           u213_25 0D8B  
                         u301_25 017A                           u222_20 0D22                           u206_25 0E47  
                         u302_25 018B                           u215_25 0D9A                           u303_25 01AB  
                         u208_25 0E51                           u216_25 0DA1                           u304_25 01BC  
                         u209_25 0E5B                           u305_25 01DC                           u218_20 0D12  
                         _FVRCON 0117                           u260_25 0F54                           u181_25 0718  
                         u262_25 0F60                           u182_25 072C                           u246_25 07A1  
                         u263_25 0F74                           u183_25 0738                           u191_25 0FD4  
                         u264_25 0F80                           u256_25 0BBF                           u192_25 0FDF  
                         u257_25 0BC4                           u179_25 070C                           u380_27 0BEA  
                         u189_25 0FBB                           u381_27 0B77                           u373_27 016F  
                         u198_25 0F10                           u382_27 0C61                           u374_27 019E  
                         u375_27 01CF                           u296_25 00F5                           u376_27 01F1  
                         u297_25 0113           __size_ofi1_LCD_Command 001C                           u377_27 0AD1  
                         _OSCCON 0099                           u298_25 0145                           u378_27 0C06  
                         u299_25 014B                           u379_27 0E03                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IF 008B                   i1LCD_Command@c 0075  
                   ??_I2C_rStart 00A6                   __CFG_PWRTE$OFF 0000                     ?_ringbuf_pop 0070  
                   ?_ringbuf_num 0070                        ??___aldiv 007B                        ??___almod 0078  
                         ___wmul 0BB6                        ??___awdiv 0074                  ??_LCD_SetCursor 0078  
                      ??___lldiv 0078                     ?_timer0_init 0070                     ?_timer1_init 0070  
                      ??___lwdiv 007A                        ??___lwmod 0074                           _lchika 0759  
               ___awdiv@quotient 0077                           _sw_RA3 003E                           _sw_RA4 0041  
                         _sw_RA5 0044                           _tx_buf 015D             __size_of_LCD_Command 0020  
                      ??_display 0056                        ?_I2C_Send 0070                        ?_I2C_Stop 0070  
                  i1I2C_Start@rw 0072                        ?_I2C_init 0070               __end_of_I2C_rStart 0BB6  
                 ?_I2C_IdleCheck 0070                        ?_EEP_Read 00A6             __size_ofi1_I2C_Start 001A  
        __end_of__initialization 0230                        ?_LCD_Putc 0070                        ?_LCD_Puts 0074  
                      ?_LCD_init 0070                    __end_ofi1_LED 0D31                    __end_ofi1_OUT 0D82  
                 __pcstackCOMMON 0070                        LCD_Putc@c 0075                     __pidataBANK0 0002  
                      LCD_Puts@s 0074                    i1_LCD_Command 0BED                     ??i1_I2C_Send 0072  
                   ??i1_I2C_Stop 0072                          ??i1_LED 0071                          ??i1_OUT 0071  
             __size_of_flag_read 0020                   _OPTION_REGbits 0095                       ??_I2C_Send 00A2  
           __size_ofi1_LCD_Clear 000E                       ??_I2C_Stop 00A2                       ??_I2C_init 00A0  
             __size_of_main_init 0023                       __pbssBANK0 0020                       ??_EEP_Read 00A7  
                     __pbssBANK1 00CA                       __pbssBANK2 0157                  i1_I2C_IdleCheck 0AB3  
                     ??_LCD_Putc 0074                       ??_LCD_Puts 0076                       ??_LCD_init 00A9  
             __end_ofi1_I2C_Send 0B05               __end_ofi1_I2C_Stop 0AA7                       __pmaintext 0234  
                        ?___wmul 0074                       __pintentry 0004                          ?_lchika 0070  
                 ?i1_LCD_Command 0070                       _flag_clear 0CE7                    ??_I2C_Receive 00A2  
                   I2C_Send@data 00A2                        ?_adc_init 0070                  ??_I2C_IdleCheck 00A0  
                        _SSP1ADD 0212                          _SSP1BUF 0211             timer1_init@prescaler 00A1  
       ??_button_timer_interrupt 0071                        _I2C_Start 0C09                   I2C_Receive@ack 00A3  
              __end_of_flag_read 0CA4                          ___aldiv 06D7                          ___almod 0F93  
                  ?_ringbuf_init 00A0                          ___awdiv 0EF0                          ___lldiv 0F41  
                __size_of___wmul 001B                          ___lwdiv 0E3C                          ___lwmod 0D82  
           __size_of_ringbuf_pop 0033             __size_of_ringbuf_num 0032                  __CFG_STVREN$OFF 0000  
       LCD_SetCursor@row_offsets 0078                  __size_of_lchika 0075                __end_of_main_init 0CE7  
           __size_of_timer0_init 0015                       ??_adc_init 00A0             __size_of_timer1_init 0018  
                        __ptext1 0C25                          __ptext2 0CC4                          __ptext3 0B51  
                        __ptext4 0B3C                          __ptext5 0B27                          __ptext6 0EAD  
                        __ptext7 0AE6                          __ptext8 0CA4                          __ptext9 0ABE  
                        _display 043C                     __size_of_LED 0028                        _T1CONbits 0018  
                   __size_of_OUT 002D                   i1I2C_Send@data 0072                     __size_of_adc 0019  
                   __size_of_isr 020B                        _EEP_Write 0C44                 ___aldiv@dividend 004B  
                      _LCD_Clear 0AE6              __end_of_I2C_Receive 0C84          __end_ofi1_I2C_IdleCheck 0ABE  
                        clrloop0 0AAE                          lchika@i 004B             end_of_initialization 0230  
               LCD_SetCursor@col 007A                 LCD_SetCursor@row 0077                   LCD_Command@ans 00A6  
                     ?_I2C_Start 00A2                  ___lldiv@divisor 0070                     I2C_rStart@rw 00A4  
                ___lldiv@counter 007D                   ??_ringbuf_init 00A2                 ___aldiv@quotient 0051  
                ??i1_LCD_Command 0074                     __pstringtext 0800                      ?_flag_clear 00A0  
                     _print_port 003D                 __CFG_FOSC$INTOSC 0000                       ?_EEP_Write 0074  
                     ?_LCD_Clear 0070                __size_of_I2C_Send 0012                __size_of_I2C_Stop 0006  
              __size_of_I2C_init 000B                       main@data_0 0152                       main@data_1 0153  
                     main@data_2 0154                       main@data_3 0155  __size_of_button_timer_interrupt 00B5  
              __size_of_EEP_Read 003D                __size_of_LCD_Putc 001C                __size_of_LCD_Puts 002E  
              __size_of_LCD_init 0043                   ringbuf_init@rb 00A3                   ringbuf_pop@ret 0072  
                  ??_LCD_Command 00A4                   __end_of___wmul 0BD1            __end_of_LCD_SetCursor 0B15  
                 __end_of_lchika 07CE                      _I2C_Receive 0C64              start_initialization 0211  
                    __end_of_LED 0D59                      __end_of_OUT 0DDB                      __end_of_adc 0B82  
                    __end_of_isr 020F                 ?i1_I2C_IdleCheck 0070                    ??i1_I2C_Start 0073  
            __size_of_flag_clear 0024                      ??_I2C_Start 00A3                         ??___wmul 0078  
                    __pdataBANK0 0062                         ??_lchika 0047           _button_timer_interrupt 0622  
                  ??i1_LCD_Clear 0077              __end_of_LCD_Command 0CC4                __size_of_adc_init 0015  
                    ??_EEP_Write 0076                        ___latbits 0001                         LED@value 00A0  
                  __pcstackBANK0 0047                    __pcstackBANK1 00A0                    __pcstackBANK2 0120  
                 flag_clear@port 00A2                      ??_LCD_Clear 00A7             __end_of_ringbuf_init 0C44  
                  adc_init@p_ref 00A0              __end_ofi1_I2C_Start 0B9C                 ___lwdiv@dividend 0078  
                       ?___aldiv 0047                         ?___almod 0070                         ?___awdiv 0070  
                      _flag_read 0C84                         ?___lldiv 0070                         ?___lwdiv 0076  
                       ?___lwmod 0070                 ___almod@dividend 0074                         ?_display 0055  
                 __size_ofi1_LED 0026                        _main_init 0CC4                   __size_ofi1_OUT 0029  
                    I2C_Start@rw 00A2                         _I2C_Send 0B15                         OUT@value 00A0  
                       _I2C_Stop 0AA7                         _I2C_init 0ABE            __end_of_I2C_IdleCheck 0AE6  
            __end_ofi1_LCD_Clear 0AD7                 ___lwdiv@quotient 007B                         _EEP_Read 0E70  
                ___aldiv@divisor 0047         ringbuf_init@internal_buf 00A0                  ___aldiv@counter 004F  
                 ___wmul@product 0078                         _LCD_Putc 0BD1                         _LCD_Puts 0DDB  
                       _LCD_init 0EAD                        clear_ram0 0AAD                         _PIE1bits 0091  
                       _PIR1bits 0011                    ??_ringbuf_pop 0070                    ??_ringbuf_num 0070  
                       _SSP1CON1 0215                         _SSP1CON2 0216                    ??_timer0_init 00A0  
                  ??_timer1_init 00A0                       ?_flag_read 00A0                         _SSP1STAT 0214  
                    _LCD_Command 0CA4                     ??_flag_clear 00A1                 i1LCD_Command@ans 0076  
                     _ADCON0bits 009D                       _ADCON1bits 009E                ___wmul@multiplier 0074  
 button_timer_interrupt@sw_value 0070                       ?_main_init 0070                        display@co 0055  
                  ringbuf_pop@rb 0073                    ringbuf_num@rb 0071                    I2C_Start@adrs 00A3  
                    i1_I2C_Start 0B82               LCD_SetCursor@F2888 0062                  I2C_Receive@data 00A4  
             __end_of_flag_clear 0D0B                       _I2C_rStart 0B9C                 __size_of___aldiv 0082  
               __size_of___almod 006D            __end_ofi1_LCD_Command 0C09                 __size_of___awdiv 0051  
              I2C_IdleCheck@mask 00A1                 __size_of___lldiv 0052                 __size_of___lwdiv 0034  
               __size_of___lwmod 002C                         _adc_init 0B27                      i1_LCD_Clear 0AC9  
                   ?_I2C_Receive 0070              __end_of_ringbuf_pop 0E3C              __end_of_ringbuf_num 0800  
               flag_read@bit_and 00A0                       i1LED@value 0070              __end_of_timer0_init 0B51  
          __size_of_ringbuf_init 001F              __end_of_timer1_init 0B69                 __size_of_display 01E6  
                ___lwdiv@divisor 0076                  ___lwdiv@counter 007D             timer0_init@prescaler 00A1  
                       __ptext10 0C84                         __ptext11 0CE7                         __ptext20 0AD7  
                       __ptext12 0DAE                         __ptext13 0D31                         __ptext30 0D82  
                       __ptext22 0D59                         __ptext14 0E70                         __ptext31 0E3C  
                       __ptext23 0E09                         __ptext15 0B9C                         __ptext40 0BB6  
                       __ptext32 0F93                         __ptext24 07CE                         __ptext16 0AA7  
                       __ptext41 0F41                         __ptext33 06D7                         __ptext25 0759  
                       __ptext17 0C09                         __ptext42 0C44                         __ptext34 0B05  
                       __ptext26 0D0B                         __ptext18 0B15                         __ptext43 0AA1  
                       __ptext35 0BED                         __ptext27 0EF0                         __ptext19 0C64  
                       __ptext44 0B82                         __ptext36 0DDB                         __ptext28 043C  
                       __ptext45 0AF5                         __ptext37 0BD1                         __ptext29 0AC9  
                       __ptext46 0AB3                         __ptext38 0622                         __ptext39 0B69  
                   _SSP1CON2bits 0216                  ___almod@divisor 0070                  ___almod@counter 0079  
                  EEP_Read@Reg_h 00A8                    EEP_Read@Reg_l 00A6                   I2C_rStart@adrs 00A2  
                  __size_of_main 0208                    flag_read@port 00A1          ?_button_timer_interrupt 0070  
                       int$flags 007E                      ??_flag_read 00A1                     _ringbuf_init 0C25  
                       display@i 0058                       i1_I2C_Send 0AF5                       i1OUT@value 0070  
                     i1_I2C_Stop 0AA1                      ??_main_init 00AC                       _INTCONbits 000B  
                       intlevel1 0000                 ___lwmod@dividend 0072           __size_of_LCD_SetCursor 0010  
               ___lldiv@dividend 0074                  i1I2C_Start@adrs 0073                __CFG_CLKOUTEN$OFF 0000  
                    ?_I2C_rStart 00A2         __size_ofi1_I2C_IdleCheck 000B                     EEP_Read@data 00A9  
                  _print_content 003C   __end_of_button_timer_interrupt 06D7                      _ringbuf_pop 0E09  
                    _ringbuf_num 07CE                      _timer0_init 0B3C                      _timer1_init 0B51  
               ___lldiv@quotient 0079                  ___lwmod@divisor 0070                  ___lwmod@counter 0075  
                    EEP_Read@ans 00AA                     ___aldiv@sign 0050                   EEP_Write@Reg_h 0077  
                 EEP_Write@Reg_l 0074                     ___almod@sign 007A                    EEP_Write@data 0075  
                   EEP_Write@ans 0078  
