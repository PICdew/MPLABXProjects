

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jan 13 22:30:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0013                     	;# 
    57  0014                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  011E                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0219                     	;# 
   141  021A                     	;# 
   142  021B                     	;# 
   143  021C                     	;# 
   144  021D                     	;# 
   145  021E                     	;# 
   146  021F                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029B                     	;# 
   160  029C                     	;# 
   161  029C                     	;# 
   162  029D                     	;# 
   163  029E                     	;# 
   164  029E                     	;# 
   165  0311                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  039A                     	;# 
   177  039C                     	;# 
   178  039D                     	;# 
   179  039E                     	;# 
   180  039F                     	;# 
   181  0415                     	;# 
   182  0416                     	;# 
   183  0417                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  0FE4                     	;# 
   188  0FE5                     	;# 
   189  0FE6                     	;# 
   190  0FE7                     	;# 
   191  0FE8                     	;# 
   192  0FE9                     	;# 
   193  0FEA                     	;# 
   194  0FEB                     	;# 
   195  0FED                     	;# 
   196  0FEE                     	;# 
   197  0FEF                     	;# 
   198                           
   199                           	psect	idataBANK0
   200  05F7                     __pidataBANK0:	
   201                           
   202                           ;initializer for LCD_SetCursor@F2875
   203  05F7  3400               	retlw	0
   204  05F8  3440               	retlw	64
   205  000B                     _INTCONbits	set	11
   206  0011                     _PIR1bits	set	17
   207  0018                     _T1CONbits	set	24
   208  0017                     _TMR1H	set	23
   209  0016                     _TMR1L	set	22
   210  0093                     _BCL1IF	set	147
   211  0063                     _RA3	set	99
   212  0064                     _RA4	set	100
   213  0065                     _RA5	set	101
   214  008B                     _SSP1IF	set	139
   215  009B                     _ADRES	set	155
   216  009D                     _ADCON0bits	set	157
   217  009E                     _ADCON1bits	set	158
   218  0095                     _OPTION_REGbits	set	149
   219  0099                     _OSCCON	set	153
   220  0091                     _PIE1bits	set	145
   221  008C                     _TRISA	set	140
   222  008D                     _TRISB	set	141
   223  0117                     _FVRCON	set	279
   224  0866                     _LATA6	set	2150
   225  0867                     _LATA7	set	2151
   226  0868                     _LATB0	set	2152
   227  086B                     _LATB3	set	2155
   228  086D                     _LATB5	set	2157
   229  086E                     _LATB6	set	2158
   230  018C                     _ANSELA	set	396
   231  018D                     _ANSELB	set	397
   232  019D                     _RCSTA	set	413
   233  019C                     _SPBRGH	set	412
   234  019B                     _SPBRGL	set	411
   235  019A                     _TXREG	set	410
   236  019E                     _TXSTA	set	414
   237  0CFB                     _BRG16	set	3323
   238  0CEF                     _SPEN	set	3311
   239  0212                     _SSP1ADD	set	530
   240  0211                     _SSP1BUF	set	529
   241  0215                     _SSP1CON1	set	533
   242  0216                     _SSP1CON2	set	534
   243  0216                     _SSP1CON2bits	set	534
   244  0214                     _SSP1STAT	set	532
   245  020D                     _WPUB	set	525
   246                           
   247                           ; #config settings
   248  0000                     
   249                           	psect	cinit
   250  00CA                     start_initialization:	
   251  00CA                     __initialization:	
   252                           
   253                           ; Clear objects allocated to BANK0
   254  00CA  01B5               	clrf	__pbssBANK0& (0+127)
   255  00CB  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   256  00CC  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   257  00CD  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   258  00CE  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   259                           
   260                           ; Clear objects allocated to BANK1
   261  00CF  30D3               	movlw	low __pbssBANK1
   262  00D0  0084               	movwf	4
   263  00D1  3000               	movlw	high __pbssBANK1
   264  00D2  0085               	movwf	5
   265  00D3  301C               	movlw	28
   266  00D4  3185  25F1  3180   	fcall	clear_ram0
   267                           
   268                           ; Initialize objects allocated to BANK0
   269  00D7  3185  25F7  3180   	fcall	__pidataBANK0	;fetch initializer
   270  00DA  00BA               	movwf	__pdataBANK0& (0+127)
   271  00DB  3185  25F8         	fcall	__pidataBANK0+1	;fetch initializer
   272  00DD  00BB               	movwf	(__pdataBANK0+1)& (0+127)
   273  00DE                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  00DE                     __end_of__initialization:	
   277  00DE  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   278  00DF  0020               	movlb	0
   279  00E0  3182  2A82         	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssBANK0
   282  0035                     __pbssBANK0:	
   283  0035                     _cnt:	
   284  0035                     	ds	3
   285  0038                     _cnt0:	
   286  0038                     	ds	2
   287                           
   288                           	psect	dataBANK0
   289  003A                     __pdataBANK0:	
   290  003A                     LCD_SetCursor@F2875:	
   291  003A                     	ds	2
   292                           
   293                           	psect	bssBANK1
   294  00D3                     __pbssBANK1:	
   295  00D3                     _cut:	
   296  00D3                     	ds	6
   297  00D9                     _v:	
   298  00D9                     	ds	6
   299  00DF                     _cntf:	
   300  00DF                     	ds	3
   301  00E2                     _tx_buf:	
   302  00E2                     	ds	4
   303  00E6                     _sw_RA3:	
   304  00E6                     	ds	3
   305  00E9                     _sw_RA4:	
   306  00E9                     	ds	3
   307  00EC                     _sw_RA5:	
   308  00EC                     	ds	3
   309                           
   310                           	psect	clrtext
   311  05F1                     clear_ram0:	
   312                           ;	Called with FSR0 containing the base address, and
   313                           ;	WREG with the size to clear
   314                           
   315  05F1  0064               	clrwdt	;clear the watchdog before getting into this loop
   316  05F2                     clrloop0:	
   317  05F2  0180               	clrf	0	;clear RAM location pointed to by FSR
   318  05F3  3101               	addfsr 0,1
   319  05F4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   320  05F5  2DF2               	goto	clrloop0	;have we reached the end yet?
   321  05F6  3400               	retlw	0	;all done for this memory range, return
   322                           
   323                           	psect	cstackBANK1
   324  00A0                     __pcstackBANK1:	
   325  00A0                     main@ringbuf:	
   326                           
   327                           ; 50 bytes @ 0x0
   328  00A0                     	ds	50
   329  00D2                     main@i:	
   330                           
   331                           ; 1 bytes @ 0x32
   332  00D2                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:	
   336  0070                     ?_lchika:	
   337  0070                     ?_tx_send:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_timer0_init:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_timer1_init:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_adc_init:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_button_timer_interrupt:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ??_ringbuf_pop:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ??_ringbuf_num:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_isr:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_display:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_main_init:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?i1_OUT:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?i1_LED:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_ringbuf_pop:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_ringbuf_num:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_SW:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_adc:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_main:	
   386                           ; 2 bytes @ 0x0
   387                           
   388  0070                     ?___awdiv:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     ?i1___lwdiv:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0070                     button_timer_interrupt@sw_value:	
   395                           ; 2 bytes @ 0x0
   396                           
   397  0070                     i1OUT@value:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     i1LED@value:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ___awdiv@divisor:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     i1___lwdiv@divisor:	
   407                           ; 2 bytes @ 0x0
   408                           
   409                           
   410                           ; 2 bytes @ 0x0
   411  0070                     	ds	1
   412  0071                     ??_button_timer_interrupt:	
   413  0071                     ??i1_OUT:	
   414                           ; 0 bytes @ 0x1
   415                           
   416  0071                     ??i1_LED:	
   417                           ; 0 bytes @ 0x1
   418                           
   419  0071                     ringbuf_num@rb:	
   420                           ; 0 bytes @ 0x1
   421                           
   422  0071                     i1OUT@b:	
   423                           ; 1 bytes @ 0x1
   424                           
   425  0071                     i1LED@b:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430  0071                     	ds	1
   431  0072                     ??_adc:	
   432  0072                     ringbuf_pop@ret:	
   433                           ; 0 bytes @ 0x2
   434                           
   435  0072                     ___awdiv@dividend:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     i1___lwdiv@dividend:	
   439                           ; 2 bytes @ 0x2
   440                           
   441                           
   442                           ; 2 bytes @ 0x2
   443  0072                     	ds	1
   444  0073                     adc@ch:	
   445  0073                     button_timer_interrupt@bt:	
   446                           ; 1 bytes @ 0x3
   447                           
   448  0073                     ringbuf_pop@rb:	
   449                           ; 1 bytes @ 0x3
   450                           
   451                           
   452                           ; 1 bytes @ 0x3
   453  0073                     	ds	1
   454  0074                     ??___awdiv:	
   455  0074                     ??i1___lwdiv:	
   456                           ; 0 bytes @ 0x4
   457                           
   458  0074                     ?___wmul:	
   459                           ; 0 bytes @ 0x4
   460                           
   461  0074                     ___wmul@multiplier:	
   462                           ; 2 bytes @ 0x4
   463                           
   464                           
   465                           ; 2 bytes @ 0x4
   466  0074                     	ds	1
   467  0075                     ___awdiv@counter:	
   468  0075                     i1___lwdiv@quotient:	
   469                           ; 1 bytes @ 0x5
   470                           
   471                           
   472                           ; 2 bytes @ 0x5
   473  0075                     	ds	1
   474  0076                     ___awdiv@sign:	
   475  0076                     ___wmul@multiplicand:	
   476                           ; 1 bytes @ 0x6
   477                           
   478                           
   479                           ; 2 bytes @ 0x6
   480  0076                     	ds	1
   481  0077                     i1___lwdiv@counter:	
   482  0077                     ___awdiv@quotient:	
   483                           ; 1 bytes @ 0x7
   484                           
   485                           
   486                           ; 2 bytes @ 0x7
   487  0077                     	ds	1
   488  0078                     ??___wmul:	
   489  0078                     ___wmul@product:	
   490                           ; 0 bytes @ 0x8
   491                           
   492                           
   493                           ; 2 bytes @ 0x8
   494  0078                     	ds	1
   495  0079                     ??_lchika:	
   496                           
   497                           ; 0 bytes @ 0x9
   498  0079                     	ds	4
   499  007D                     lchika@i:	
   500                           
   501                           ; 1 bytes @ 0xD
   502  007D                     	ds	1
   503                           
   504                           	psect	cstackBANK0
   505  0020                     __pcstackBANK0:	
   506  0020                     ??_isr:	
   507                           
   508                           ; 0 bytes @ 0x0
   509  0020                     	ds	3
   510  0023                     isr@i:	
   511                           
   512                           ; 1 bytes @ 0x3
   513  0023                     	ds	1
   514  0024                     ?_OUT:	
   515  0024                     ?_LED:	
   516                           ; 0 bytes @ 0x4
   517                           
   518  0024                     ?_UART_init:	
   519                           ; 0 bytes @ 0x4
   520                           
   521  0024                     ??_timer0_init:	
   522                           ; 0 bytes @ 0x4
   523                           
   524  0024                     ??_timer1_init:	
   525                           ; 0 bytes @ 0x4
   526                           
   527  0024                     ??_adc_init:	
   528                           ; 0 bytes @ 0x4
   529                           
   530  0024                     ?_ringbuf_init:	
   531                           ; 0 bytes @ 0x4
   532                           
   533  0024                     ?_ringbuf_push:	
   534                           ; 0 bytes @ 0x4
   535                           
   536  0024                     ??_SW:	
   537                           ; 0 bytes @ 0x4
   538                           
   539  0024                     ?___lwmod:	
   540                           ; 0 bytes @ 0x4
   541                           
   542  0024                     adc_init@p_ref:	
   543                           ; 2 bytes @ 0x4
   544                           
   545  0024                     ringbuf_init@internal_buf:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0024                     ringbuf_push@asciicode:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0024                     OUT@value:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0024                     LED@value:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0024                     SW@b:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0024                     UART_init@device:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0024                     ___lwmod@divisor:	
   564                           ; 2 bytes @ 0x4
   565                           
   566                           
   567                           ; 2 bytes @ 0x4
   568  0024                     	ds	1
   569  0025                     ??_OUT:	
   570  0025                     ??_LED:	
   571                           ; 0 bytes @ 0x5
   572                           
   573  0025                     ??_ringbuf_push:	
   574                           ; 0 bytes @ 0x5
   575                           
   576  0025                     timer0_init@prescaler:	
   577                           ; 0 bytes @ 0x5
   578                           
   579  0025                     timer1_init@prescaler:	
   580                           ; 1 bytes @ 0x5
   581                           
   582  0025                     ringbuf_init@bufsize:	
   583                           ; 1 bytes @ 0x5
   584                           
   585  0025                     OUT@b:	
   586                           ; 1 bytes @ 0x5
   587                           
   588  0025                     LED@b:	
   589                           ; 1 bytes @ 0x5
   590                           
   591                           
   592                           ; 1 bytes @ 0x5
   593  0025                     	ds	1
   594  0026                     ??_UART_init:	
   595  0026                     ??_ringbuf_init:	
   596                           ; 0 bytes @ 0x6
   597                           
   598  0026                     ??_main_init:	
   599                           ; 0 bytes @ 0x6
   600                           
   601  0026                     ___lwmod@dividend:	
   602                           ; 0 bytes @ 0x6
   603                           
   604                           
   605                           ; 2 bytes @ 0x6
   606  0026                     	ds	1
   607  0027                     ringbuf_init@rb:	
   608  0027                     ringbuf_push@rb:	
   609                           ; 1 bytes @ 0x7
   610                           
   611                           
   612                           ; 1 bytes @ 0x7
   613  0027                     	ds	1
   614  0028                     ??_tx_send:	
   615  0028                     ??___lwmod:	
   616                           ; 0 bytes @ 0x8
   617                           
   618                           
   619                           ; 0 bytes @ 0x8
   620  0028                     	ds	1
   621  0029                     tx_send@asciicode:	
   622  0029                     ___lwmod@counter:	
   623                           ; 1 bytes @ 0x9
   624                           
   625                           
   626                           ; 1 bytes @ 0x9
   627  0029                     	ds	1
   628  002A                     ?___lwdiv:	
   629  002A                     ___lwdiv@divisor:	
   630                           ; 2 bytes @ 0xA
   631                           
   632                           
   633                           ; 2 bytes @ 0xA
   634  002A                     	ds	2
   635  002C                     ___lwdiv@dividend:	
   636                           
   637                           ; 2 bytes @ 0xC
   638  002C                     	ds	2
   639  002E                     ??___lwdiv:	
   640                           
   641                           ; 0 bytes @ 0xE
   642  002E                     	ds	1
   643  002F                     ___lwdiv@counter:	
   644                           
   645                           ; 1 bytes @ 0xF
   646  002F                     	ds	1
   647  0030                     ___lwdiv@quotient:	
   648                           
   649                           ; 2 bytes @ 0x10
   650  0030                     	ds	2
   651  0032                     ??_display:	
   652  0032                     display@i:	
   653                           ; 0 bytes @ 0x12
   654                           
   655                           
   656                           ; 1 bytes @ 0x12
   657  0032                     	ds	1
   658  0033                     ??_main:	
   659                           
   660                           ; 0 bytes @ 0x13
   661  0033                     	ds	2
   662                           
   663                           	psect	maintext
   664  0282                     __pmaintext:	
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 210 in file "PIC16F1827-ChargeStation4-01.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  ringbuf        50    0[BANK1 ] unsigned char [50]
   675 ;;  i               1   50[BANK1 ] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  2  314[COMMON] int 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 17F/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   685 ;;      Params:         0       0       0       0       0       0
   686 ;;      Locals:         0       0      51       0       0       0
   687 ;;      Temps:          0       2       0       0       0       0
   688 ;;      Totals:         0       2      51       0       0       0
   689 ;;Total ram usage:       53 bytes
   690 ;; Hardware stack levels required when called:    6
   691 ;; This function calls:
   692 ;;		_LED
   693 ;;		_OUT
   694 ;;		_SW
   695 ;;		_display
   696 ;;		_main_init
   697 ;;		_ringbuf_init
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _main
   705  0282                     _main:	
   706                           
   707                           ;PIC16F1827-ChargeStation4-01.c: 211: main_init();
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   711  0282  3184  24DA  3182   	fcall	_main_init
   712                           
   713                           ;PIC16F1827-ChargeStation4-01.c: 213: OUT(0, 1);
   714  0285  0020               	movlb	0	; select bank0
   715  0286  01A4               	clrf	OUT@value
   716  0287  0AA4               	incf	OUT@value,f
   717  0288  3000               	movlw	0
   718  0289  3184  2433  3182   	fcall	_OUT
   719                           
   720                           ;PIC16F1827-ChargeStation4-01.c: 214: OUT(1, 1);
   721  028C  0020               	movlb	0	; select bank0
   722  028D  01A4               	clrf	OUT@value
   723  028E  0AA4               	incf	OUT@value,f
   724  028F  3001               	movlw	1
   725  0290  3184  2433  3182   	fcall	_OUT
   726                           
   727                           ;PIC16F1827-ChargeStation4-01.c: 215: OUT(2, 1);
   728  0293  0020               	movlb	0	; select bank0
   729  0294  01A4               	clrf	OUT@value
   730  0295  0AA4               	incf	OUT@value,f
   731  0296  3002               	movlw	2
   732  0297  3184  2433  3182   	fcall	_OUT
   733                           
   734                           ;PIC16F1827-ChargeStation4-01.c: 216: LED(0, 1);
   735  029A  0020               	movlb	0	; select bank0
   736  029B  01A4               	clrf	LED@value
   737  029C  0AA4               	incf	LED@value,f
   738  029D  3000               	movlw	0
   739  029E  3184  24B2  3182   	fcall	_LED
   740                           
   741                           ;PIC16F1827-ChargeStation4-01.c: 217: LED(1, 1);
   742  02A1  0020               	movlb	0	; select bank0
   743  02A2  01A4               	clrf	LED@value
   744  02A3  0AA4               	incf	LED@value,f
   745  02A4  3001               	movlw	1
   746  02A5  3184  24B2  3182   	fcall	_LED
   747                           
   748                           ;PIC16F1827-ChargeStation4-01.c: 218: LED(2, 1);
   749  02A8  0020               	movlb	0	; select bank0
   750  02A9  01A4               	clrf	LED@value
   751  02AA  0AA4               	incf	LED@value,f
   752  02AB  3002               	movlw	2
   753  02AC  3184  24B2  3182   	fcall	_LED
   754                           
   755                           ;PIC16F1827-ChargeStation4-01.c: 220: uint8_t ringbuf[50];
   756                           ;PIC16F1827-ChargeStation4-01.c: 221: ringbuf_init(&tx_buf, ringbuf, sizeof (ringbuf));
   757  02AF  30A0               	movlw	main@ringbuf& (0+255)
   758  02B0  0020               	movlb	0	; select bank0
   759  02B1  00B3               	movwf	??_main
   760  02B2  0833               	movf	??_main,w
   761  02B3  00A4               	movwf	ringbuf_init@internal_buf
   762  02B4  3032               	movlw	50
   763  02B5  00B4               	movwf	??_main+1
   764  02B6  0834               	movf	??_main+1,w
   765  02B7  00A5               	movwf	ringbuf_init@bufsize
   766  02B8  30E2               	movlw	_tx_buf& (0+255)
   767  02B9  3185  257C  3182   	fcall	_ringbuf_init
   768  02BC                     l2244:	
   769                           ;PIC16F1827-ChargeStation4-01.c: 223: uint8_t i;
   770                           ;PIC16F1827-ChargeStation4-01.c: 225: while (1) {
   771                           
   772                           
   773                           ;PIC16F1827-ChargeStation4-01.c: 226: for (i = 0; i < 3; i++) {
   774  02BC  0021               	movlb	1	; select bank1
   775  02BD  01D2               	clrf	main@i^(0+128)
   776  02BE                     L1:	
   777  02BE  3003               	movlw	3
   778  02BF  0252               	subwf	main@i^(0+128),w
   779  02C0  1803               	btfsc	3,0
   780  02C1  2ABC               	goto	l2244
   781                           
   782                           ;PIC16F1827-ChargeStation4-01.c: 227: if (SW(i)) {
   783  02C2  0852               	movf	main@i^(0+128),w
   784  02C3  3185  2560  3182   	fcall	_SW
   785  02C6  3A00               	xorlw	0
   786  02C7  1903               	skipnz
   787  02C8  2AE5               	goto	l318
   788                           
   789                           ;PIC16F1827-ChargeStation4-01.c: 228: OUT(i, 1);
   790  02C9  0020               	movlb	0	; select bank0
   791  02CA  01A4               	clrf	OUT@value
   792  02CB  0AA4               	incf	OUT@value,f
   793  02CC  0021               	movlb	1	; select bank1
   794  02CD  0852               	movf	main@i^(0+128),w
   795  02CE  3184  2433  3182   	fcall	_OUT
   796                           
   797                           ;PIC16F1827-ChargeStation4-01.c: 229: LED(i, 1);
   798  02D1  0020               	movlb	0	; select bank0
   799  02D2  01A4               	clrf	LED@value
   800  02D3  0AA4               	incf	LED@value,f
   801  02D4  0021               	movlb	1	; select bank1
   802  02D5  0852               	movf	main@i^(0+128),w
   803  02D6  3184  24B2  3182   	fcall	_LED
   804                           
   805                           ;PIC16F1827-ChargeStation4-01.c: 230: cut[i] = 0;
   806  02D9  0021               	movlb	1	; select bank1
   807  02DA  3552               	lslf	main@i^(0+128),w
   808  02DB  3ED3               	addlw	_cut& (0+255)
   809  02DC  0086               	movwf	6
   810  02DD  0187               	clrf	7
   811  02DE  3000               	movlw	0
   812  02DF  3FC0               	movwi [0]fsr1
   813  02E0  3FC1               	movwi [1]fsr1
   814                           
   815                           ;PIC16F1827-ChargeStation4-01.c: 231: display(i);
   816  02E1  0852               	movf	main@i^(0+128),w
   817  02E2  3181  219B  3182   	fcall	_display
   818  02E5                     l318:	
   819  02E5  3001               	movlw	1
   820  02E6  0020               	movlb	0	; select bank0
   821  02E7  00B3               	movwf	??_main
   822  02E8  0833               	movf	??_main,w
   823  02E9  0021               	movlb	1	; select bank1
   824  02EA  07D2               	addwf	main@i^(0+128),f
   825  02EB  2ABE               	goto	L1
   826  02EC                     __end_of_main:	
   827                           ;PIC16F1827-ChargeStation4-01.c: 232: }
   828                           ;PIC16F1827-ChargeStation4-01.c: 233: }
   829                           ;PIC16F1827-ChargeStation4-01.c: 240: }
   830                           ;PIC16F1827-ChargeStation4-01.c: 241: return 0;
   831                           ;	Return value of _main is never used
   832                           
   833                           
   834                           	psect	text1
   835  057C                     __ptext1:	
   836 ;; *************** function _ringbuf_init *****************
   837 ;; Defined at:
   838 ;;		line 122 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  rb              1    wreg     PTR struct ringbuf
   841 ;;		 -> tx_buf(4), 
   842 ;;  internal_buf    1    4[BANK0 ] PTR unsigned char 
   843 ;;		 -> main@ringbuf(50), 
   844 ;;  bufsize         1    5[BANK0 ] unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  rb              1    7[BANK0 ] PTR struct ringbuf
   847 ;;		 -> tx_buf(4), 
   848 ;; Return value:  Size  Location     Type
   849 ;;		None               void
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, status,2
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   857 ;;      Params:         0       2       0       0       0       0
   858 ;;      Locals:         0       1       0       0       0       0
   859 ;;      Temps:          0       1       0       0       0       0
   860 ;;      Totals:         0       4       0       0       0       0
   861 ;;Total ram usage:        4 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    3
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _ringbuf_init
   873  057C                     _ringbuf_init:	
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2]
   877                           ;ringbuf_init@rb stored from wreg
   878  057C  0020               	movlb	0	; select bank0
   879  057D  00A7               	movwf	ringbuf_init@rb
   880                           
   881                           ;My_header.h: 123: rb->buf = internal_buf;
   882  057E  0824               	movf	ringbuf_init@internal_buf,w
   883  057F  00A6               	movwf	??_ringbuf_init
   884  0580  0827               	movf	ringbuf_init@rb,w
   885  0581  0086               	movwf	6
   886  0582  0187               	clrf	7
   887  0583  0826               	movf	??_ringbuf_init,w
   888  0584  0081               	movwf	1
   889                           
   890                           ;My_header.h: 124: rb->size = bufsize;
   891  0585  0825               	movf	ringbuf_init@bufsize,w
   892  0586  00A6               	movwf	??_ringbuf_init
   893  0587  0A27               	incf	ringbuf_init@rb,w
   894  0588  0086               	movwf	6
   895  0589  0187               	clrf	7
   896  058A  0826               	movf	??_ringbuf_init,w
   897  058B  0081               	movwf	1
   898                           
   899                           ;My_header.h: 125: rb->head = 0;
   900  058C  0827               	movf	ringbuf_init@rb,w
   901  058D  3E02               	addlw	2
   902  058E  0086               	movwf	6
   903  058F  0187               	clrf	7
   904  0590  0181               	clrf	1
   905                           
   906                           ;My_header.h: 126: rb->tail = 0;
   907  0591  0827               	movf	ringbuf_init@rb,w
   908  0592  3E03               	addlw	3
   909  0593  0086               	movwf	6
   910  0594  0187               	clrf	7
   911  0595  0181               	clrf	1
   912  0596  0008               	return
   913  0597                     __end_of_ringbuf_init:	
   914                           
   915                           	psect	text2
   916  04DA                     __ptext2:	
   917 ;; *************** function _main_init *****************
   918 ;; Defined at:
   919 ;;		line 190 in file "PIC16F1827-ChargeStation4-01.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   933 ;;      Params:         0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		_UART_init
   942 ;;		_adc_init
   943 ;;		_timer0_init
   944 ;;		_timer1_init
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _main_init
   952  04DA                     _main_init:	
   953                           
   954                           ;PIC16F1827-ChargeStation4-01.c: 191: OSCCON = 0x70;
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
   958  04DA  3070               	movlw	112
   959  04DB  0021               	movlb	1	; select bank1
   960  04DC  0099               	movwf	25	;volatile
   961                           
   962                           ;PIC16F1827-ChargeStation4-01.c: 192: TRISA = 0x3F;
   963  04DD  303F               	movlw	63
   964  04DE  008C               	movwf	12	;volatile
   965                           
   966                           ;PIC16F1827-ChargeStation4-01.c: 193: TRISB = 0x12;
   967  04DF  3012               	movlw	18
   968  04E0  008D               	movwf	13	;volatile
   969                           
   970                           ;PIC16F1827-ChargeStation4-01.c: 194: ANSELA = 0x07;
   971  04E1  3007               	movlw	7
   972  04E2  0023               	movlb	3	; select bank3
   973  04E3  008C               	movwf	12	;volatile
   974                           
   975                           ;PIC16F1827-ChargeStation4-01.c: 195: ANSELB = 0x00;
   976  04E4  018D               	clrf	13	;volatile
   977                           
   978                           ;PIC16F1827-ChargeStation4-01.c: 196: WPUB = 0b00010010;
   979  04E5  3012               	movlw	18
   980  04E6  0024               	movlb	4	; select bank4
   981  04E7  008D               	movwf	13	;volatile
   982                           
   983                           ;PIC16F1827-ChargeStation4-01.c: 197: OPTION_REGbits.nWPUEN = 0;
   984  04E8  0021               	movlb	1	; select bank1
   985  04E9  1395               	bcf	21,7	;volatile
   986                           
   987                           ;PIC16F1827-ChargeStation4-01.c: 199: adc_init(3);
   988  04EA  3003               	movlw	3
   989  04EB  3185  2597  3184   	fcall	_adc_init
   990                           
   991                           ;PIC16F1827-ChargeStation4-01.c: 200: timer0_init(4);
   992  04EE  3004               	movlw	4
   993  04EF  3185  25B0  3184   	fcall	_timer0_init
   994                           
   995                           ;PIC16F1827-ChargeStation4-01.c: 201: timer1_init(2);
   996  04F2  3002               	movlw	2
   997  04F3  3185  25D4  3184   	fcall	_timer1_init
   998                           
   999                           ;PIC16F1827-ChargeStation4-01.c: 202: UART_init(0);
  1000  04F6  3000               	movlw	0
  1001  04F7  0020               	movlb	0	; select bank0
  1002  04F8  00A4               	movwf	UART_init@device
  1003  04F9  3000               	movlw	0
  1004  04FA  00A5               	movwf	UART_init@device+1
  1005  04FB  3185  25C2         	fcall	_UART_init
  1006                           
  1007                           ;PIC16F1827-ChargeStation4-01.c: 206: INTCONbits.PEIE = 1;
  1008  04FD  170B               	bsf	11,6	;volatile
  1009                           
  1010                           ;PIC16F1827-ChargeStation4-01.c: 207: INTCONbits.GIE = 1;
  1011  04FE  178B               	bsf	11,7	;volatile
  1012  04FF  0008               	return
  1013  0500                     __end_of_main_init:	
  1014                           
  1015                           	psect	text3
  1016  05D4                     __ptext3:	
  1017 ;; *************** function _timer1_init *****************
  1018 ;; Defined at:
  1019 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  prescaler       1    wreg     unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  prescaler       1    5[BANK0 ] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;		None               void
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1033 ;;      Params:         0       0       0       0       0       0
  1034 ;;      Locals:         0       1       0       0       0       0
  1035 ;;      Temps:          0       1       0       0       0       0
  1036 ;;      Totals:         0       2       0       0       0       0
  1037 ;;Total ram usage:        2 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    3
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main_init
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _timer1_init
  1049  05D4                     _timer1_init:	
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1053                           ;timer1_init@prescaler stored from wreg
  1054  05D4  0020               	movlb	0	; select bank0
  1055  05D5  00A5               	movwf	timer1_init@prescaler
  1056                           
  1057                           ;My_header.h: 43: T1CONbits.TMR1CS = 0;
  1058  05D6  303F               	movlw	-193
  1059  05D7  0598               	andwf	24,f	;volatile
  1060                           
  1061                           ;My_header.h: 44: T1CONbits.T1CKPS = prescaler;
  1062  05D8  0825               	movf	timer1_init@prescaler,w
  1063  05D9  00A4               	movwf	??_timer1_init
  1064  05DA  0EA4               	swapf	??_timer1_init,f
  1065  05DB  0818               	movf	24,w	;volatile
  1066  05DC  0624               	xorwf	??_timer1_init,w
  1067  05DD  39CF               	andlw	-49
  1068  05DE  0624               	xorwf	??_timer1_init,w
  1069  05DF  0098               	movwf	24	;volatile
  1070                           
  1071                           ;My_header.h: 45: TMR1H = 0x00;
  1072  05E0  0197               	clrf	23	;volatile
  1073                           
  1074                           ;My_header.h: 46: TMR1L = 0x00;
  1075  05E1  0196               	clrf	22	;volatile
  1076                           
  1077                           ;My_header.h: 47: PIE1bits.TMR1IE = 1;
  1078  05E2  0021               	movlb	1	; select bank1
  1079  05E3  1411               	bsf	17,0	;volatile
  1080  05E4  0008               	return
  1081  05E5                     __end_of_timer1_init:	
  1082                           
  1083                           	psect	text4
  1084  05B0                     __ptext4:	
  1085 ;; *************** function _timer0_init *****************
  1086 ;; Defined at:
  1087 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  prescaler       1    wreg     unsigned char 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  prescaler       1    5[BANK0 ] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;		None               void
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1101 ;;      Params:         0       0       0       0       0       0
  1102 ;;      Locals:         0       1       0       0       0       0
  1103 ;;      Temps:          0       1       0       0       0       0
  1104 ;;      Totals:         0       2       0       0       0       0
  1105 ;;Total ram usage:        2 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    3
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_main_init
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function _timer0_init
  1117  05B0                     _timer0_init:	
  1118                           
  1119                           ;My_header.h: 32: if (prescaler = 0) {
  1120                           
  1121                           ;incstack = 0
  1122                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  1123  05B0  0020               	movlb	0	; select bank0
  1124  05B1  01A5               	clrf	timer0_init@prescaler
  1125                           
  1126                           ;My_header.h: 35: OPTION_REGbits.PSA = 1;
  1127                           
  1128                           ;My_header.h: 34: } else {
  1129                           
  1130                           ;My_header.h: 33: OPTION_REGbits.PSA = 0;
  1131  05B2  0021               	movlb	1	; select bank1
  1132  05B3  1595               	bsf	21,3	;volatile
  1133                           
  1134                           ;My_header.h: 36: OPTION_REGbits.PS = prescaler - 1;
  1135  05B4  30FF               	movlw	255
  1136  05B5  0020               	movlb	0	; select bank0
  1137  05B6  0725               	addwf	timer0_init@prescaler,w
  1138  05B7  00A4               	movwf	??_timer0_init
  1139  05B8  0021               	movlb	1	; select bank1
  1140  05B9  0815               	movf	21,w	;volatile
  1141  05BA  0020               	movlb	0	; select bank0
  1142  05BB  0624               	xorwf	??_timer0_init,w
  1143  05BC  39F8               	andlw	-8
  1144  05BD  0624               	xorwf	??_timer0_init,w
  1145  05BE  0021               	movlb	1	; select bank1
  1146  05BF  0095               	movwf	21	;volatile
  1147                           
  1148                           ;My_header.h: 37: }
  1149                           ;My_header.h: 38: INTCONbits.TMR0IE = 1;
  1150  05C0  168B               	bsf	11,5	;volatile
  1151  05C1  0008               	return
  1152  05C2                     __end_of_timer0_init:	
  1153                           
  1154                           	psect	text5
  1155  0597                     __ptext5:	
  1156 ;; *************** function _adc_init *****************
  1157 ;; Defined at:
  1158 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  p_ref           1    wreg     unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  p_ref           1    4[BANK0 ] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1172 ;;      Params:         0       0       0       0       0       0
  1173 ;;      Locals:         0       1       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0
  1175 ;;      Totals:         0       1       0       0       0       0
  1176 ;;Total ram usage:        1 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    3
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_main_init
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _adc_init
  1188  0597                     _adc_init:	
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1192                           ;adc_init@p_ref stored from wreg
  1193  0597  0020               	movlb	0	; select bank0
  1194  0598  00A4               	movwf	adc_init@p_ref
  1195                           
  1196                           ;My_header.h: 55: ADCON1bits.ADFM = 1;
  1197  0599  0021               	movlb	1	; select bank1
  1198  059A  179E               	bsf	30,7	;volatile
  1199                           
  1200                           ;My_header.h: 56: ADCON1bits.ADCS = 6;
  1201  059B  081E               	movf	30,w	;volatile
  1202  059C  398F               	andlw	-113
  1203  059D  3860               	iorlw	96
  1204  059E  009E               	movwf	30	;volatile
  1205                           
  1206                           ;My_header.h: 57: ADCON1bits.ADNREF = 0;
  1207  059F  111E               	bcf	30,2	;volatile
  1208                           
  1209                           ;My_header.h: 58: ADCON1bits.ADPREF = p_ref;
  1210  05A0  081E               	movf	30,w	;volatile
  1211  05A1  0020               	movlb	0	; select bank0
  1212  05A2  0624               	xorwf	adc_init@p_ref,w
  1213  05A3  39FC               	andlw	-4
  1214  05A4  0624               	xorwf	adc_init@p_ref,w
  1215  05A5  0021               	movlb	1	; select bank1
  1216  05A6  009E               	movwf	30	;volatile
  1217                           
  1218                           ;My_header.h: 59: if (p_ref == 3) FVRCON = 0x83;
  1219  05A7  0020               	movlb	0	; select bank0
  1220  05A8  0824               	movf	adc_init@p_ref,w
  1221  05A9  3A03               	xorlw	3
  1222  05AA  1D03               	skipz
  1223  05AB  0008               	return
  1224  05AC  3083               	movlw	131
  1225  05AD  0022               	movlb	2	; select bank2
  1226  05AE  0097               	movwf	23	;volatile
  1227  05AF  0008               	return
  1228  05B0                     __end_of_adc_init:	
  1229                           
  1230                           	psect	text6
  1231  05C2                     __ptext6:	
  1232 ;; *************** function _UART_init *****************
  1233 ;; Defined at:
  1234 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  device          2    4[BANK0 ] int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1248 ;;      Params:         0       2       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0
  1251 ;;      Totals:         0       2       0       0       0       0
  1252 ;;Total ram usage:        2 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    3
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main_init
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _UART_init
  1264  05C2                     _UART_init:	
  1265                           
  1266                           ;My_header.h: 19: if (device == 0) {
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _UART_init: [wreg+status,2+status,0]
  1270  05C2  0020               	movlb	0	; select bank0
  1271  05C3  0825               	movf	UART_init@device+1,w
  1272  05C4  0424               	iorwf	UART_init@device,w
  1273  05C5  1D03               	skipz
  1274  05C6  0008               	return
  1275                           
  1276                           ;My_header.h: 20: SPEN = 1;
  1277  05C7  0023               	movlb	3	; select bank3
  1278  05C8  179D               	bsf	29,7	;volatile
  1279                           
  1280                           ;My_header.h: 21: RCSTA = 0x90;
  1281  05C9  3090               	movlw	144
  1282  05CA  009D               	movwf	29	;volatile
  1283                           
  1284                           ;My_header.h: 22: BRG16 = 0;
  1285  05CB  119F               	bcf	31,3	;volatile
  1286                           
  1287                           ;My_header.h: 23: SPBRGH = 0;
  1288  05CC  019C               	clrf	28	;volatile
  1289                           
  1290                           ;My_header.h: 24: SPBRGL = 207;
  1291  05CD  30CF               	movlw	207
  1292  05CE  009B               	movwf	27	;volatile
  1293                           
  1294                           ;My_header.h: 25: TXSTA = 0x24;
  1295  05CF  3024               	movlw	36
  1296  05D0  009E               	movwf	30	;volatile
  1297                           
  1298                           ;My_header.h: 26: PIE1bits.RCIE = 1;
  1299  05D1  0021               	movlb	1	; select bank1
  1300  05D2  1691               	bsf	17,5	;volatile
  1301  05D3  0008               	return
  1302  05D4                     __end_of_UART_init:	
  1303                           
  1304                           	psect	text7
  1305  019B                     __ptext7:	
  1306 ;; *************** function _display *****************
  1307 ;; Defined at:
  1308 ;;		line 117 in file "PIC16F1827-ChargeStation4-01.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  i               1    wreg     unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  i               1   18[BANK0 ] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;		None               void
  1315 ;; Registers used:
  1316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1322 ;;      Params:         0       0       0       0       0       0
  1323 ;;      Locals:         0       1       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0
  1325 ;;      Totals:         0       1       0       0       0       0
  1326 ;;Total ram usage:        1 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    5
  1329 ;; This function calls:
  1330 ;;		___lwdiv
  1331 ;;		___lwmod
  1332 ;;		_tx_send
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _display
  1340  019B                     _display:	
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1344                           ;display@i stored from wreg
  1345  019B  0020               	movlb	0	; select bank0
  1346  019C  00B2               	movwf	display@i
  1347                           
  1348                           ;PIC16F1827-ChargeStation4-01.c: 118: tx_send((v[i] % 10000) / 1000 + '0');
  1349  019D  30E8               	movlw	232
  1350  019E  00AA               	movwf	___lwdiv@divisor
  1351  019F  3003               	movlw	3
  1352  01A0  00AB               	movwf	___lwdiv@divisor+1
  1353  01A1  3532               	lslf	display@i,w
  1354  01A2  3ED9               	addlw	_v& (0+255)
  1355  01A3  0086               	movwf	6
  1356  01A4  0187               	clrf	7
  1357  01A5  3F40               	moviw [0]fsr1
  1358  01A6  00A6               	movwf	___lwmod@dividend
  1359  01A7  3F41               	moviw [1]fsr1
  1360  01A8  00A7               	movwf	___lwmod@dividend+1
  1361  01A9  3010               	movlw	16
  1362  01AA  00A4               	movwf	___lwmod@divisor
  1363  01AB  3027               	movlw	39
  1364  01AC  00A5               	movwf	___lwmod@divisor+1
  1365  01AD  3183  23AC  3181   	fcall	___lwmod
  1366  01B0  0020               	movlb	0	; select bank0
  1367  01B1  0825               	movf	?___lwmod+1,w
  1368  01B2  01AD               	clrf	___lwdiv@dividend+1
  1369  01B3  07AD               	addwf	___lwdiv@dividend+1,f
  1370  01B4  0824               	movf	?___lwmod,w
  1371  01B5  01AC               	clrf	___lwdiv@dividend
  1372  01B6  07AC               	addwf	___lwdiv@dividend,f
  1373  01B7  3183  233F  3181   	fcall	___lwdiv
  1374  01BA  0020               	movlb	0	; select bank0
  1375  01BB  082A               	movf	?___lwdiv,w
  1376  01BC  3E30               	addlw	48
  1377  01BD  3185  25E5  3181   	fcall	_tx_send
  1378                           
  1379                           ;PIC16F1827-ChargeStation4-01.c: 119: tx_send('.');
  1380  01C0  302E               	movlw	46
  1381  01C1  3185  25E5  3181   	fcall	_tx_send
  1382                           
  1383                           ;PIC16F1827-ChargeStation4-01.c: 120: tx_send((v[i] % 1000) / 100 + '0');
  1384  01C4  3064               	movlw	100
  1385  01C5  0020               	movlb	0	; select bank0
  1386  01C6  00AA               	movwf	___lwdiv@divisor
  1387  01C7  3000               	movlw	0
  1388  01C8  00AB               	movwf	___lwdiv@divisor+1
  1389  01C9  3532               	lslf	display@i,w
  1390  01CA  3ED9               	addlw	_v& (0+255)
  1391  01CB  0086               	movwf	6
  1392  01CC  0187               	clrf	7
  1393  01CD  3F40               	moviw [0]fsr1
  1394  01CE  00A6               	movwf	___lwmod@dividend
  1395  01CF  3F41               	moviw [1]fsr1
  1396  01D0  00A7               	movwf	___lwmod@dividend+1
  1397  01D1  30E8               	movlw	232
  1398  01D2  00A4               	movwf	___lwmod@divisor
  1399  01D3  3003               	movlw	3
  1400  01D4  00A5               	movwf	___lwmod@divisor+1
  1401  01D5  3183  23AC  3181   	fcall	___lwmod
  1402  01D8  0020               	movlb	0	; select bank0
  1403  01D9  0825               	movf	?___lwmod+1,w
  1404  01DA  01AD               	clrf	___lwdiv@dividend+1
  1405  01DB  07AD               	addwf	___lwdiv@dividend+1,f
  1406  01DC  0824               	movf	?___lwmod,w
  1407  01DD  01AC               	clrf	___lwdiv@dividend
  1408  01DE  07AC               	addwf	___lwdiv@dividend,f
  1409  01DF  3183  233F  3181   	fcall	___lwdiv
  1410  01E2  0020               	movlb	0	; select bank0
  1411  01E3  082A               	movf	?___lwdiv,w
  1412  01E4  3E30               	addlw	48
  1413  01E5  3185  25E5  3181   	fcall	_tx_send
  1414                           
  1415                           ;PIC16F1827-ChargeStation4-01.c: 121: tx_send((v[i] % 100) / 10 + '0');
  1416  01E8  300A               	movlw	10
  1417  01E9  0020               	movlb	0	; select bank0
  1418  01EA  00AA               	movwf	___lwdiv@divisor
  1419  01EB  3000               	movlw	0
  1420  01EC  00AB               	movwf	___lwdiv@divisor+1
  1421  01ED  3532               	lslf	display@i,w
  1422  01EE  3ED9               	addlw	_v& (0+255)
  1423  01EF  0086               	movwf	6
  1424  01F0  0187               	clrf	7
  1425  01F1  3F40               	moviw [0]fsr1
  1426  01F2  00A6               	movwf	___lwmod@dividend
  1427  01F3  3F41               	moviw [1]fsr1
  1428  01F4  00A7               	movwf	___lwmod@dividend+1
  1429  01F5  3064               	movlw	100
  1430  01F6  00A4               	movwf	___lwmod@divisor
  1431  01F7  3000               	movlw	0
  1432  01F8  00A5               	movwf	___lwmod@divisor+1
  1433  01F9  3183  23AC  3181   	fcall	___lwmod
  1434  01FC  0020               	movlb	0	; select bank0
  1435  01FD  0825               	movf	?___lwmod+1,w
  1436  01FE  01AD               	clrf	___lwdiv@dividend+1
  1437  01FF  07AD               	addwf	___lwdiv@dividend+1,f
  1438  0200  0824               	movf	?___lwmod,w
  1439  0201  01AC               	clrf	___lwdiv@dividend
  1440  0202  07AC               	addwf	___lwdiv@dividend,f
  1441  0203  3183  233F  3181   	fcall	___lwdiv
  1442  0206  0020               	movlb	0	; select bank0
  1443  0207  082A               	movf	?___lwdiv,w
  1444  0208  3E30               	addlw	48
  1445  0209  3185  25E5  3181   	fcall	_tx_send
  1446                           
  1447                           ;PIC16F1827-ChargeStation4-01.c: 122: tx_send('A');
  1448  020C  3041               	movlw	65
  1449  020D  3185  25E5  3181   	fcall	_tx_send
  1450                           
  1451                           ;PIC16F1827-ChargeStation4-01.c: 123: tx_send(0x0D);
  1452  0210  300D               	movlw	13
  1453  0211  3185  25E5         	fcall	_tx_send
  1454  0213  0008               	return
  1455  0214                     __end_of_display:	
  1456                           
  1457                           	psect	text8
  1458  05E5                     __ptext8:	
  1459 ;; *************** function _tx_send *****************
  1460 ;; Defined at:
  1461 ;;		line 128 in file "PIC16F1827-ChargeStation4-01.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  asciicode       1    wreg     unsigned char 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  asciicode       1    9[BANK0 ] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1475 ;;      Params:         0       0       0       0       0       0
  1476 ;;      Locals:         0       1       0       0       0       0
  1477 ;;      Temps:          0       1       0       0       0       0
  1478 ;;      Totals:         0       2       0       0       0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    4
  1482 ;; This function calls:
  1483 ;;		_ringbuf_push
  1484 ;; This function is called by:
  1485 ;;		_display
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _tx_send
  1491  05E5                     _tx_send:	
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _tx_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1495                           ;tx_send@asciicode stored from wreg
  1496  05E5  0020               	movlb	0	; select bank0
  1497  05E6  00A9               	movwf	tx_send@asciicode
  1498                           
  1499                           ;PIC16F1827-ChargeStation4-01.c: 129: ringbuf_push(&tx_buf, asciicode);
  1500  05E7  0829               	movf	tx_send@asciicode,w
  1501  05E8  00A8               	movwf	??_tx_send
  1502  05E9  0828               	movf	??_tx_send,w
  1503  05EA  00A4               	movwf	ringbuf_push@asciicode
  1504  05EB  30E2               	movlw	_tx_buf& (0+255)
  1505  05EC  3183  23DB         	fcall	_ringbuf_push
  1506                           
  1507                           ;PIC16F1827-ChargeStation4-01.c: 130: PIE1bits.TXIE = 1;
  1508  05EE  0021               	movlb	1	; select bank1
  1509  05EF  1611               	bsf	17,4	;volatile
  1510  05F0  0008               	return
  1511  05F1                     __end_of_tx_send:	
  1512                           
  1513                           	psect	text9
  1514  03DB                     __ptext9:	
  1515 ;; *************** function _ringbuf_push *****************
  1516 ;; Defined at:
  1517 ;;		line 129 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  rb              1    wreg     PTR struct ringbuf
  1520 ;;		 -> tx_buf(4), 
  1521 ;;  asciicode       1    4[BANK0 ] unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  rb              1    7[BANK0 ] PTR struct ringbuf
  1524 ;;		 -> tx_buf(4), 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;		None               void
  1527 ;; Registers used:
  1528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1534 ;;      Params:         0       1       0       0       0       0
  1535 ;;      Locals:         0       1       0       0       0       0
  1536 ;;      Temps:          0       2       0       0       0       0
  1537 ;;      Totals:         0       4       0       0       0       0
  1538 ;;Total ram usage:        4 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    3
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_tx_send
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _ringbuf_push
  1550  03DB                     _ringbuf_push:	
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _ringbuf_push: [wreg-fsr1h+status,2+status,0]
  1554                           ;ringbuf_push@rb stored from wreg
  1555  03DB  0020               	movlb	0	; select bank0
  1556  03DC  00A7               	movwf	ringbuf_push@rb
  1557                           
  1558                           ;My_header.h: 130: rb->buf[rb->head] = asciicode;
  1559  03DD  0824               	movf	ringbuf_push@asciicode,w
  1560  03DE  00A5               	movwf	??_ringbuf_push
  1561  03DF  0827               	movf	ringbuf_push@rb,w
  1562  03E0  0086               	movwf	6
  1563  03E1  0187               	clrf	7
  1564  03E2  0827               	movf	ringbuf_push@rb,w
  1565  03E3  3E02               	addlw	2
  1566  03E4  0084               	movwf	4
  1567  03E5  0185               	clrf	5
  1568  03E6  0800               	movf	0,w
  1569  03E7  0701               	addwf	1,w
  1570  03E8  00A6               	movwf	??_ringbuf_push+1
  1571  03E9  0826               	movf	??_ringbuf_push+1,w
  1572  03EA  0086               	movwf	6
  1573  03EB  0187               	clrf	7
  1574  03EC  0825               	movf	??_ringbuf_push,w
  1575  03ED  0081               	movwf	1
  1576                           
  1577                           ;My_header.h: 131: rb->head++;
  1578  03EE  3001               	movlw	1
  1579  03EF  00A5               	movwf	??_ringbuf_push
  1580  03F0  0827               	movf	ringbuf_push@rb,w
  1581  03F1  3E02               	addlw	2
  1582  03F2  0086               	movwf	6
  1583  03F3  0187               	clrf	7
  1584  03F4  0825               	movf	??_ringbuf_push,w
  1585  03F5  0781               	addwf	1,f
  1586                           
  1587                           ;My_header.h: 132: if (rb->head >= rb->size) {
  1588  03F6  0827               	movf	ringbuf_push@rb,w
  1589  03F7  3E02               	addlw	2
  1590  03F8  0086               	movwf	6
  1591  03F9  0187               	clrf	7
  1592  03FA  0A27               	incf	ringbuf_push@rb,w
  1593  03FB  0084               	movwf	4
  1594  03FC  0185               	clrf	5
  1595  03FD  0800               	movf	0,w
  1596  03FE  0201               	subwf	1,w
  1597  03FF  1C03               	skipc
  1598  0400  0008               	return
  1599                           
  1600                           ;My_header.h: 133: rb->head = 0;
  1601  0401  0827               	movf	ringbuf_push@rb,w
  1602  0402  3E02               	addlw	2
  1603  0403  0086               	movwf	6
  1604  0404  0187               	clrf	7
  1605  0405  0181               	clrf	1
  1606  0406  0008               	return
  1607  0407                     __end_of_ringbuf_push:	
  1608                           
  1609                           	psect	text10
  1610  03AC                     __ptext10:	
  1611 ;; *************** function ___lwmod *****************
  1612 ;; Defined at:
  1613 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  divisor         2    4[BANK0 ] unsigned int 
  1616 ;;  dividend        2    6[BANK0 ] unsigned int 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  counter         1    9[BANK0 ] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    4[BANK0 ] unsigned int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1628 ;;      Params:         0       4       0       0       0       0
  1629 ;;      Locals:         0       1       0       0       0       0
  1630 ;;      Temps:          0       1       0       0       0       0
  1631 ;;      Totals:         0       6       0       0       0       0
  1632 ;;Total ram usage:        6 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    3
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_display
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function ___lwmod
  1644  03AC                     ___lwmod:	
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1648  03AC  0020               	movlb	0	; select bank0
  1649  03AD  0825               	movf	___lwmod@divisor+1,w
  1650  03AE  0424               	iorwf	___lwmod@divisor,w
  1651  03AF  1903               	skipnz
  1652  03B0  2BD4               	goto	l2106
  1653  03B1  01A9               	clrf	___lwmod@counter
  1654  03B2  0AA9               	incf	___lwmod@counter,f
  1655  03B3                     l2096:	
  1656  03B3  1BA5               	btfsc	___lwmod@divisor+1,7
  1657  03B4  2BBF               	goto	l2098
  1658  03B5  3001               	movlw	1
  1659  03B6                     u2155:	
  1660  03B6  35A4               	lslf	___lwmod@divisor,f
  1661  03B7  0DA5               	rlf	___lwmod@divisor+1,f
  1662  03B8  0B89               	decfsz	9,f
  1663  03B9  2BB6               	goto	u2155
  1664  03BA  3001               	movlw	1
  1665  03BB  00A8               	movwf	??___lwmod
  1666  03BC  0828               	movf	??___lwmod,w
  1667  03BD  07A9               	addwf	___lwmod@counter,f
  1668  03BE  2BB3               	goto	l2096
  1669  03BF                     l2098:	
  1670  03BF  0825               	movf	___lwmod@divisor+1,w
  1671  03C0  0227               	subwf	___lwmod@dividend+1,w
  1672  03C1  1D03               	skipz
  1673  03C2  2BC5               	goto	u2175
  1674  03C3  0824               	movf	___lwmod@divisor,w
  1675  03C4  0226               	subwf	___lwmod@dividend,w
  1676  03C5                     u2175:	
  1677  03C5  1C03               	skipc
  1678  03C6  2BCB               	goto	l2102
  1679  03C7  0824               	movf	___lwmod@divisor,w
  1680  03C8  02A6               	subwf	___lwmod@dividend,f
  1681  03C9  0825               	movf	___lwmod@divisor+1,w
  1682  03CA  3BA7               	subwfb	___lwmod@dividend+1,f
  1683  03CB                     l2102:	
  1684  03CB  3001               	movlw	1
  1685  03CC                     u2185:	
  1686  03CC  36A5               	lsrf	___lwmod@divisor+1,f
  1687  03CD  0CA4               	rrf	___lwmod@divisor,f
  1688  03CE  0B89               	decfsz	9,f
  1689  03CF  2BCC               	goto	u2185
  1690  03D0  3001               	movlw	1
  1691  03D1  02A9               	subwf	___lwmod@counter,f
  1692  03D2  1D03               	btfss	3,2
  1693  03D3  2BBF               	goto	l2098
  1694  03D4                     l2106:	
  1695  03D4  0827               	movf	___lwmod@dividend+1,w
  1696  03D5  01A5               	clrf	?___lwmod+1
  1697  03D6  07A5               	addwf	?___lwmod+1,f
  1698  03D7  0826               	movf	___lwmod@dividend,w
  1699  03D8  01A4               	clrf	?___lwmod
  1700  03D9  07A4               	addwf	?___lwmod,f
  1701  03DA  0008               	return
  1702  03DB                     __end_of___lwmod:	
  1703                           
  1704                           	psect	text11
  1705  033F                     __ptext11:	
  1706 ;; *************** function ___lwdiv *****************
  1707 ;; Defined at:
  1708 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  divisor         2   10[BANK0 ] unsigned int 
  1711 ;;  dividend        2   12[BANK0 ] unsigned int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  quotient        2   16[BANK0 ] unsigned int 
  1714 ;;  counter         1   15[BANK0 ] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2   10[BANK0 ] unsigned int 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1724 ;;      Params:         0       4       0       0       0       0
  1725 ;;      Locals:         0       3       0       0       0       0
  1726 ;;      Temps:          0       1       0       0       0       0
  1727 ;;      Totals:         0       8       0       0       0       0
  1728 ;;Total ram usage:        8 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    3
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_display
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function ___lwdiv
  1740  033F                     ___lwdiv:	
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1744  033F  0020               	movlb	0	; select bank0
  1745  0340  01B0               	clrf	___lwdiv@quotient
  1746  0341  01B1               	clrf	___lwdiv@quotient+1
  1747  0342  082B               	movf	___lwdiv@divisor+1,w
  1748  0343  042A               	iorwf	___lwdiv@divisor,w
  1749  0344  1903               	skipnz
  1750  0345  2B6F               	goto	l2084
  1751  0346  01AF               	clrf	___lwdiv@counter
  1752  0347  0AAF               	incf	___lwdiv@counter,f
  1753  0348                     l2072:	
  1754  0348  1BAB               	btfsc	___lwdiv@divisor+1,7
  1755  0349  2B54               	goto	l2074
  1756  034A  3001               	movlw	1
  1757  034B                     u2085:	
  1758  034B  35AA               	lslf	___lwdiv@divisor,f
  1759  034C  0DAB               	rlf	___lwdiv@divisor+1,f
  1760  034D  0B89               	decfsz	9,f
  1761  034E  2B4B               	goto	u2085
  1762  034F  3001               	movlw	1
  1763  0350  00AE               	movwf	??___lwdiv
  1764  0351  082E               	movf	??___lwdiv,w
  1765  0352  07AF               	addwf	___lwdiv@counter,f
  1766  0353  2B48               	goto	l2072
  1767  0354                     l2074:	
  1768  0354  3001               	movlw	1
  1769  0355                     u2105:	
  1770  0355  35B0               	lslf	___lwdiv@quotient,f
  1771  0356  0DB1               	rlf	___lwdiv@quotient+1,f
  1772  0357  0B89               	decfsz	9,f
  1773  0358  2B55               	goto	u2105
  1774  0359  082B               	movf	___lwdiv@divisor+1,w
  1775  035A  022D               	subwf	___lwdiv@dividend+1,w
  1776  035B  1D03               	skipz
  1777  035C  2B5F               	goto	u2115
  1778  035D  082A               	movf	___lwdiv@divisor,w
  1779  035E  022C               	subwf	___lwdiv@dividend,w
  1780  035F                     u2115:	
  1781  035F  1C03               	skipc
  1782  0360  2B66               	goto	l2080
  1783  0361  082A               	movf	___lwdiv@divisor,w
  1784  0362  02AC               	subwf	___lwdiv@dividend,f
  1785  0363  082B               	movf	___lwdiv@divisor+1,w
  1786  0364  3BAD               	subwfb	___lwdiv@dividend+1,f
  1787  0365  1430               	bsf	___lwdiv@quotient,0
  1788  0366                     l2080:	
  1789  0366  3001               	movlw	1
  1790  0367                     u2125:	
  1791  0367  36AB               	lsrf	___lwdiv@divisor+1,f
  1792  0368  0CAA               	rrf	___lwdiv@divisor,f
  1793  0369  0B89               	decfsz	9,f
  1794  036A  2B67               	goto	u2125
  1795  036B  3001               	movlw	1
  1796  036C  02AF               	subwf	___lwdiv@counter,f
  1797  036D  1D03               	btfss	3,2
  1798  036E  2B54               	goto	l2074
  1799  036F                     l2084:	
  1800  036F  0831               	movf	___lwdiv@quotient+1,w
  1801  0370  01AB               	clrf	?___lwdiv+1
  1802  0371  07AB               	addwf	?___lwdiv+1,f
  1803  0372  0830               	movf	___lwdiv@quotient,w
  1804  0373  01AA               	clrf	?___lwdiv
  1805  0374  07AA               	addwf	?___lwdiv,f
  1806  0375  0008               	return
  1807  0376                     __end_of___lwdiv:	
  1808                           
  1809                           	psect	text12
  1810  0560                     __ptext12:	
  1811 ;; *************** function _SW *****************
  1812 ;; Defined at:
  1813 ;;		line 177 in file "PIC16F1827-ChargeStation4-01.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  b               1    wreg     unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  b               1    4[BANK0 ] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      unsigned char 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1827 ;;      Params:         0       0       0       0       0       0
  1828 ;;      Locals:         0       1       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0
  1830 ;;      Totals:         0       1       0       0       0       0
  1831 ;;Total ram usage:        1 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    3
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function _SW
  1843  0560                     _SW:	
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _SW: [wreg-fsr0h+status,2+status,0]
  1847                           ;SW@b stored from wreg
  1848  0560  0020               	movlb	0	; select bank0
  1849  0561  00A4               	movwf	SW@b
  1850                           
  1851                           ;PIC16F1827-ChargeStation4-01.c: 178: switch (b) {
  1852  0562  2D6F               	goto	l2164
  1853  0563                     l2150:	
  1854                           ;PIC16F1827-ChargeStation4-01.c: 179: case 2:
  1855                           
  1856                           
  1857                           ;PIC16F1827-ChargeStation4-01.c: 180: return sw_RA3.flag.pressing;
  1858  0563  0021               	movlb	1	; select bank1
  1859  0564  0E68               	swapf	(_sw_RA3^(0+128)+2),w
  1860  0565  3901               	andlw	1
  1861  0566  0008               	return
  1862  0567                     l2154:	
  1863                           ;PIC16F1827-ChargeStation4-01.c: 181: case 1:
  1864                           
  1865                           
  1866                           ;PIC16F1827-ChargeStation4-01.c: 182: return sw_RA4.flag.pressing;
  1867  0567  0021               	movlb	1	; select bank1
  1868  0568  0E6B               	swapf	(_sw_RA4^(0+128)+2),w
  1869  0569  3901               	andlw	1
  1870  056A  0008               	return
  1871  056B                     l2158:	
  1872                           ;PIC16F1827-ChargeStation4-01.c: 183: case 0:
  1873                           
  1874                           
  1875                           ;PIC16F1827-ChargeStation4-01.c: 184: return sw_RA5.flag.pressing;
  1876  056B  0021               	movlb	1	; select bank1
  1877  056C  0E6E               	swapf	(_sw_RA5^(0+128)+2),w
  1878  056D  3901               	andlw	1
  1879                           
  1880                           ;PIC16F1827-ChargeStation4-01.c: 187: }
  1881                           
  1882                           ;PIC16F1827-ChargeStation4-01.c: 186: break;
  1883                           
  1884                           ;PIC16F1827-ChargeStation4-01.c: 185: default:
  1885  056E  0008               	return
  1886  056F                     l2164:	
  1887  056F  0020               	movlb	0	; select bank0
  1888  0570  0824               	movf	SW@b,w
  1889                           
  1890                           ; Switch size 1, requested type "space"
  1891                           ; Number of cases is 3, Range of values is 0 to 2
  1892                           ; switch strategies available:
  1893                           ; Name         Instructions Cycles
  1894                           ; simple_byte           10     6 (average)
  1895                           ; direct_byte           12     6 (fixed)
  1896                           ; jumptable            260     6 (fixed)
  1897                           ;	Chosen strategy is simple_byte
  1898  0571  3A00               	xorlw	0	; case 0
  1899  0572  1903               	skipnz
  1900  0573  2D6B               	goto	l2158
  1901  0574  3A01               	xorlw	1	; case 1
  1902  0575  1903               	skipnz
  1903  0576  2D67               	goto	l2154
  1904  0577  3A03               	xorlw	3	; case 2
  1905  0578  1903               	skipnz
  1906  0579  2D63               	goto	l2150
  1907  057A  2D7B               	goto	l305
  1908  057B                     l305:	
  1909  057B  0008               	return
  1910  057C                     __end_of_SW:	
  1911                           
  1912                           	psect	text13
  1913  0433                     __ptext13:	
  1914 ;; *************** function _OUT *****************
  1915 ;; Defined at:
  1916 ;;		line 133 in file "PIC16F1827-ChargeStation4-01.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  b               1    wreg     unsigned char 
  1919 ;;  value           1    4[BANK0 ] unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  b               1    5[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1931 ;;      Params:         0       1       0       0       0       0
  1932 ;;      Locals:         0       1       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0
  1934 ;;      Totals:         0       2       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    3
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _OUT
  1947  0433                     _OUT:	
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _OUT: [wreg-fsr0h+status,2+status,0]
  1951                           ;OUT@b stored from wreg
  1952  0433  0020               	movlb	0	; select bank0
  1953  0434  00A5               	movwf	OUT@b
  1954                           
  1955                           ;PIC16F1827-ChargeStation4-01.c: 134: switch (b) {
  1956  0435  2C51               	goto	l2138
  1957  0436                     l280:	
  1958                           ;PIC16F1827-ChargeStation4-01.c: 135: case 0:
  1959                           
  1960                           
  1961                           ;PIC16F1827-ChargeStation4-01.c: 136: if (value) {
  1962  0436  0824               	movf	OUT@value,w
  1963  0437  1903               	btfsc	3,2
  1964  0438  2C3C               	goto	l281
  1965                           
  1966                           ;PIC16F1827-ChargeStation4-01.c: 137: LATB0 = 0;
  1967  0439  0022               	movlb	2	; select bank2
  1968  043A  100D               	bcf	13,0	;volatile
  1969                           
  1970                           ;PIC16F1827-ChargeStation4-01.c: 138: } else {
  1971  043B  0008               	return
  1972  043C                     l281:	
  1973                           
  1974                           ;PIC16F1827-ChargeStation4-01.c: 139: LATB0 = 1;
  1975  043C  0022               	movlb	2	; select bank2
  1976  043D  140D               	bsf	13,0	;volatile
  1977                           
  1978                           ;PIC16F1827-ChargeStation4-01.c: 140: }
  1979                           ;PIC16F1827-ChargeStation4-01.c: 141: break;
  1980  043E  0008               	return
  1981  043F                     l284:	
  1982                           ;PIC16F1827-ChargeStation4-01.c: 142: case 1:
  1983                           
  1984                           
  1985                           ;PIC16F1827-ChargeStation4-01.c: 143: if (value) {
  1986  043F  0824               	movf	OUT@value,w
  1987  0440  1903               	btfsc	3,2
  1988  0441  2C45               	goto	l285
  1989                           
  1990                           ;PIC16F1827-ChargeStation4-01.c: 144: LATB3 = 0;
  1991  0442  0022               	movlb	2	; select bank2
  1992  0443  118D               	bcf	13,3	;volatile
  1993                           
  1994                           ;PIC16F1827-ChargeStation4-01.c: 145: } else {
  1995  0444  0008               	return
  1996  0445                     l285:	
  1997                           
  1998                           ;PIC16F1827-ChargeStation4-01.c: 146: LATB3 = 1;
  1999  0445  0022               	movlb	2	; select bank2
  2000  0446  158D               	bsf	13,3	;volatile
  2001                           
  2002                           ;PIC16F1827-ChargeStation4-01.c: 147: }
  2003                           ;PIC16F1827-ChargeStation4-01.c: 148: break;
  2004  0447  0008               	return
  2005  0448                     l287:	
  2006                           ;PIC16F1827-ChargeStation4-01.c: 149: case 2:
  2007                           
  2008                           
  2009                           ;PIC16F1827-ChargeStation4-01.c: 150: if (value) {
  2010  0448  0824               	movf	OUT@value,w
  2011  0449  1903               	btfsc	3,2
  2012  044A  2C4E               	goto	l288
  2013                           
  2014                           ;PIC16F1827-ChargeStation4-01.c: 151: LATB6 = 0;
  2015  044B  0022               	movlb	2	; select bank2
  2016  044C  130D               	bcf	13,6	;volatile
  2017                           
  2018                           ;PIC16F1827-ChargeStation4-01.c: 152: } else {
  2019  044D  0008               	return
  2020  044E                     l288:	
  2021                           
  2022                           ;PIC16F1827-ChargeStation4-01.c: 153: LATB6 = 1;
  2023  044E  0022               	movlb	2	; select bank2
  2024  044F  170D               	bsf	13,6	;volatile
  2025                           
  2026                           ;PIC16F1827-ChargeStation4-01.c: 158: }
  2027                           
  2028                           ;PIC16F1827-ChargeStation4-01.c: 157: break;
  2029                           
  2030                           ;PIC16F1827-ChargeStation4-01.c: 156: default:
  2031                           
  2032                           ;PIC16F1827-ChargeStation4-01.c: 154: }
  2033                           ;PIC16F1827-ChargeStation4-01.c: 155: break;
  2034  0450  0008               	return
  2035  0451                     l2138:	
  2036  0451  0020               	movlb	0	; select bank0
  2037  0452  0825               	movf	OUT@b,w
  2038                           
  2039                           ; Switch size 1, requested type "space"
  2040                           ; Number of cases is 3, Range of values is 0 to 2
  2041                           ; switch strategies available:
  2042                           ; Name         Instructions Cycles
  2043                           ; simple_byte           10     6 (average)
  2044                           ; direct_byte           12     6 (fixed)
  2045                           ; jumptable            260     6 (fixed)
  2046                           ;	Chosen strategy is simple_byte
  2047  0453  3A00               	xorlw	0	; case 0
  2048  0454  1903               	skipnz
  2049  0455  2C36               	goto	l280
  2050  0456  3A01               	xorlw	1	; case 1
  2051  0457  1903               	skipnz
  2052  0458  2C3F               	goto	l284
  2053  0459  3A03               	xorlw	3	; case 2
  2054  045A  1903               	skipnz
  2055  045B  2C48               	goto	l287
  2056  045C  2C5D               	goto	l291
  2057  045D                     l291:	
  2058  045D  0008               	return
  2059  045E                     __end_of_OUT:	
  2060                           
  2061                           	psect	text14
  2062  04B2                     __ptext14:	
  2063 ;; *************** function _LED *****************
  2064 ;; Defined at:
  2065 ;;		line 161 in file "PIC16F1827-ChargeStation4-01.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  b               1    wreg     unsigned char 
  2068 ;;  value           1    4[BANK0 ] unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  b               1    5[BANK0 ] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2080 ;;      Params:         0       1       0       0       0       0
  2081 ;;      Locals:         0       1       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0
  2083 ;;      Totals:         0       2       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _LED
  2096  04B2                     _LED:	
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _LED: [wreg-fsr0h+status,2+status,0]
  2100                           ;LED@b stored from wreg
  2101  04B2  0020               	movlb	0	; select bank0
  2102  04B3  00A5               	movwf	LED@b
  2103                           
  2104                           ;PIC16F1827-ChargeStation4-01.c: 162: switch (b) {
  2105  04B4  2CCD               	goto	l2144
  2106  04B5                     l295:	
  2107                           ;PIC16F1827-ChargeStation4-01.c: 163: case 0:
  2108                           
  2109                           
  2110                           ;PIC16F1827-ChargeStation4-01.c: 164: LATB5 = value;
  2111  04B5  1C24               	btfss	LED@value,0
  2112  04B6  2CBA               	goto	u2240
  2113  04B7  0022               	movlb	2	; select bank2
  2114  04B8  168D               	bsf	13,5	;volatile
  2115  04B9  0008               	return
  2116  04BA                     u2240:	
  2117  04BA  0022               	movlb	2	; select bank2
  2118  04BB  128D               	bcf	13,5	;volatile
  2119                           
  2120                           ;PIC16F1827-ChargeStation4-01.c: 165: break;
  2121  04BC  0008               	return
  2122  04BD                     l297:	
  2123                           ;PIC16F1827-ChargeStation4-01.c: 166: case 1:
  2124                           
  2125                           
  2126                           ;PIC16F1827-ChargeStation4-01.c: 167: LATA6 = value;
  2127  04BD  1C24               	btfss	LED@value,0
  2128  04BE  2CC2               	goto	u2260
  2129  04BF  0022               	movlb	2	; select bank2
  2130  04C0  170C               	bsf	12,6	;volatile
  2131  04C1  0008               	return
  2132  04C2                     u2260:	
  2133  04C2  0022               	movlb	2	; select bank2
  2134  04C3  130C               	bcf	12,6	;volatile
  2135                           
  2136                           ;PIC16F1827-ChargeStation4-01.c: 168: break;
  2137  04C4  0008               	return
  2138  04C5                     l298:	
  2139                           ;PIC16F1827-ChargeStation4-01.c: 169: case 2:
  2140                           
  2141                           
  2142                           ;PIC16F1827-ChargeStation4-01.c: 170: LATA7 = value;
  2143  04C5  1C24               	btfss	LED@value,0
  2144  04C6  2CCA               	goto	u2280
  2145  04C7  0022               	movlb	2	; select bank2
  2146  04C8  178C               	bsf	12,7	;volatile
  2147  04C9  0008               	return
  2148  04CA                     u2280:	
  2149  04CA  0022               	movlb	2	; select bank2
  2150  04CB  138C               	bcf	12,7	;volatile
  2151                           
  2152                           ;PIC16F1827-ChargeStation4-01.c: 174: }
  2153                           
  2154                           ;PIC16F1827-ChargeStation4-01.c: 173: break;
  2155                           
  2156                           ;PIC16F1827-ChargeStation4-01.c: 172: default:
  2157                           
  2158                           ;PIC16F1827-ChargeStation4-01.c: 171: break;
  2159  04CC  0008               	return
  2160  04CD                     l2144:	
  2161  04CD  0020               	movlb	0	; select bank0
  2162  04CE  0825               	movf	LED@b,w
  2163                           
  2164                           ; Switch size 1, requested type "space"
  2165                           ; Number of cases is 3, Range of values is 0 to 2
  2166                           ; switch strategies available:
  2167                           ; Name         Instructions Cycles
  2168                           ; simple_byte           10     6 (average)
  2169                           ; direct_byte           12     6 (fixed)
  2170                           ; jumptable            260     6 (fixed)
  2171                           ;	Chosen strategy is simple_byte
  2172  04CF  3A00               	xorlw	0	; case 0
  2173  04D0  1903               	skipnz
  2174  04D1  2CB5               	goto	l295
  2175  04D2  3A01               	xorlw	1	; case 1
  2176  04D3  1903               	skipnz
  2177  04D4  2CBD               	goto	l297
  2178  04D5  3A03               	xorlw	3	; case 2
  2179  04D6  1903               	skipnz
  2180  04D7  2CC5               	goto	l298
  2181  04D8  2CD9               	goto	l300
  2182  04D9                     l300:	
  2183  04D9  0008               	return
  2184  04DA                     __end_of_LED:	
  2185                           
  2186                           	psect	intentry
  2187  0004                     __pintentry:	
  2188 ;; *************** function _isr *****************
  2189 ;; Defined at:
  2190 ;;		line 54 in file "PIC16F1827-ChargeStation4-01.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  i               1    3[BANK0 ] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;		None               void
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2204 ;;      Params:         0       0       0       0       0       0
  2205 ;;      Locals:         0       1       0       0       0       0
  2206 ;;      Temps:          0       3       0       0       0       0
  2207 ;;      Totals:         0       4       0       0       0       0
  2208 ;;Total ram usage:        4 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    2
  2211 ;; This function calls:
  2212 ;;		___wmul
  2213 ;;		_adc
  2214 ;;		_button_timer_interrupt
  2215 ;;		_lchika
  2216 ;;		_ringbuf_num
  2217 ;;		_ringbuf_pop
  2218 ;;		i1_OUT
  2219 ;; This function is called by:
  2220 ;;		Interrupt level 1
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224  0004                     _isr:	
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2228  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2229  0005  3180               	pagesel	$
  2230  0006  0020               	movlb	0	; select bank0
  2231  0007  087F               	movf	127,w
  2232  0008  00A2               	movwf	??_isr+2
  2233                           
  2234                           ;PIC16F1827-ChargeStation4-01.c: 55: uint8_t i;
  2235                           ;PIC16F1827-ChargeStation4-01.c: 56: if (PIR1bits.RCIF == 1) {
  2236  0009  1A91               	btfsc	17,5	;volatile
  2237                           
  2238                           ;PIC16F1827-ChargeStation4-01.c: 57: PIR1bits.RCIF = 0;
  2239  000A  1291               	bcf	17,5	;volatile
  2240                           
  2241                           ;PIC16F1827-ChargeStation4-01.c: 58: }
  2242                           ;PIC16F1827-ChargeStation4-01.c: 59: if (PIR1bits.TXIF & PIE1bits.TXIE) {
  2243  000B  0021               	movlb	1	; select bank1
  2244  000C  0E11               	swapf	17,w	;volatile
  2245  000D  3901               	andlw	1
  2246  000E  0020               	movlb	0	; select bank0
  2247  000F  00A0               	movwf	??_isr
  2248  0010  0E11               	swapf	17,w	;volatile
  2249  0011  3901               	andlw	1
  2250  0012  0520               	andwf	??_isr,w
  2251  0013  1903               	btfsc	3,2
  2252  0014  2825               	goto	i1l249
  2253                           
  2254                           ;PIC16F1827-ChargeStation4-01.c: 60: if (ringbuf_num(&tx_buf)) {
  2255  0015  30E2               	movlw	_tx_buf& (0+255)
  2256  0016  3184  245E  3180   	fcall	_ringbuf_num
  2257  0019  3A00               	xorlw	0
  2258  001A  1903               	skipnz
  2259  001B  2823               	goto	i1l250
  2260                           
  2261                           ;PIC16F1827-ChargeStation4-01.c: 61: TXREG = ringbuf_pop(&tx_buf);
  2262  001C  30E2               	movlw	_tx_buf& (0+255)
  2263  001D  3184  2407  3180   	fcall	_ringbuf_pop
  2264  0020  0023               	movlb	3	; select bank3
  2265  0021  009A               	movwf	26	;volatile
  2266                           
  2267                           ;PIC16F1827-ChargeStation4-01.c: 62: } else {
  2268  0022  2825               	goto	i1l249
  2269  0023                     i1l250:	
  2270                           
  2271                           ;PIC16F1827-ChargeStation4-01.c: 63: PIE1bits.TXIE = 0;
  2272  0023  0021               	movlb	1	; select bank1
  2273  0024  1211               	bcf	17,4	;volatile
  2274  0025                     i1l249:	
  2275                           
  2276                           ;PIC16F1827-ChargeStation4-01.c: 64: }
  2277                           ;PIC16F1827-ChargeStation4-01.c: 65: }
  2278                           ;PIC16F1827-ChargeStation4-01.c: 66: if (PIR1bits.TMR1IF == 1) {
  2279  0025  0020               	movlb	0	; select bank0
  2280  0026  1C11               	btfss	17,0	;volatile
  2281  0027  28B0               	goto	i1l252
  2282                           
  2283                           ;PIC16F1827-ChargeStation4-01.c: 67: PIR1bits.TMR1IF = 0;
  2284  0028  1011               	bcf	17,0	;volatile
  2285                           
  2286                           ;PIC16F1827-ChargeStation4-01.c: 68: button_timer_interrupt(&sw_RA3, !RA3);
  2287  0029  1003               	clrc
  2288  002A  1D8C               	btfss	12,3	;volatile
  2289  002B  1403               	setc
  2290  002C  3000               	movlw	0
  2291  002D  1803               	btfsc	3,0
  2292  002E  3001               	movlw	1
  2293  002F  00F0               	movwf	button_timer_interrupt@sw_value
  2294  0030  30E6               	movlw	_sw_RA3& (0+255)
  2295  0031  3180  20E2  3180   	fcall	_button_timer_interrupt
  2296                           
  2297                           ;PIC16F1827-ChargeStation4-01.c: 69: button_timer_interrupt(&sw_RA4, !RA4);
  2298  0034  1003               	clrc
  2299  0035  0020               	movlb	0	; select bank0
  2300  0036  1E0C               	btfss	12,4	;volatile
  2301  0037  1403               	setc
  2302  0038  3000               	movlw	0
  2303  0039  1803               	btfsc	3,0
  2304  003A  3001               	movlw	1
  2305  003B  00F0               	movwf	button_timer_interrupt@sw_value
  2306  003C  30E9               	movlw	_sw_RA4& (0+255)
  2307  003D  3180  20E2  3180   	fcall	_button_timer_interrupt
  2308                           
  2309                           ;PIC16F1827-ChargeStation4-01.c: 70: button_timer_interrupt(&sw_RA5, !RA5);
  2310  0040  1003               	clrc
  2311  0041  0020               	movlb	0	; select bank0
  2312  0042  1E8C               	btfss	12,5	;volatile
  2313  0043  1403               	setc
  2314  0044  3000               	movlw	0
  2315  0045  1803               	btfsc	3,0
  2316  0046  3001               	movlw	1
  2317  0047  00F0               	movwf	button_timer_interrupt@sw_value
  2318  0048  30EC               	movlw	_sw_RA5& (0+255)
  2319  0049  3180  20E2  3180   	fcall	_button_timer_interrupt
  2320                           
  2321                           ;PIC16F1827-ChargeStation4-01.c: 72: for (i = 0; i < 3; i++) {
  2322  004C  0020               	movlb	0	; select bank0
  2323  004D  01A3               	clrf	isr@i
  2324  004E  3003               	movlw	3
  2325  004F  0223               	subwf	isr@i,w
  2326  0050  1803               	btfsc	3,0
  2327  0051  28B0               	goto	i1l252
  2328  0052                     i1l2206:	
  2329                           
  2330                           ;PIC16F1827-ChargeStation4-01.c: 73: v[i] = 2 * adc(i) * 3 / 4;
  2331  0052  0823               	movf	isr@i,w
  2332  0053  3185  2526  3180   	fcall	_adc
  2333  0056  3570               	lslf	?_adc,w
  2334  0057  00F4               	movwf	___wmul@multiplier
  2335  0058  0D71               	rlf	?_adc+1,w
  2336  0059  00F5               	movwf	___wmul@multiplier+1
  2337  005A  3003               	movlw	3
  2338  005B  00F6               	movwf	___wmul@multiplicand
  2339  005C  3000               	movlw	0
  2340  005D  00F7               	movwf	___wmul@multiplicand+1
  2341  005E  3185  2543  3180   	fcall	___wmul
  2342  0061  0874               	movf	?___wmul,w
  2343  0062  0020               	movlb	0	; select bank0
  2344  0063  00A0               	movwf	??_isr
  2345  0064  0875               	movf	?___wmul+1,w
  2346  0065  00A1               	movwf	??_isr+1
  2347  0066  36A1               	lsrf	??_isr+1,f
  2348  0067  0CA0               	rrf	??_isr,f
  2349  0068  36A1               	lsrf	??_isr+1,f
  2350  0069  0CA0               	rrf	??_isr,f
  2351  006A  3523               	lslf	isr@i,w
  2352  006B  3ED9               	addlw	_v& (0+255)
  2353  006C  0086               	movwf	6
  2354  006D  0187               	clrf	7
  2355  006E  0820               	movf	??_isr,w
  2356  006F  3FC0               	movwi [0]fsr1
  2357  0070  0821               	movf	??_isr+1,w
  2358  0071  3FC1               	movwi [1]fsr1
  2359                           
  2360                           ;PIC16F1827-ChargeStation4-01.c: 75: if (v[i] < 50) {
  2361  0072  3523               	lslf	isr@i,w
  2362  0073  3ED9               	addlw	_v& (0+255)
  2363  0074  0086               	movwf	6
  2364  0075  0187               	clrf	7
  2365  0076  3F40               	moviw [0]fsr1
  2366  0077  00A0               	movwf	??_isr
  2367  0078  3F41               	moviw [1]fsr1
  2368  0079  00A1               	movwf	??_isr+1
  2369  007A  3000               	movlw	0
  2370  007B  0221               	subwf	??_isr+1,w
  2371  007C  3032               	movlw	50
  2372  007D  1903               	skipnz
  2373  007E  0220               	subwf	??_isr,w
  2374  007F  1803               	skipnc
  2375  0080  289F               	goto	i1l2214
  2376                           
  2377                           ;PIC16F1827-ChargeStation4-01.c: 76: cut[i]++;
  2378  0081  3523               	lslf	isr@i,w
  2379  0082  3ED3               	addlw	_cut& (0+255)
  2380  0083  0086               	movwf	6
  2381  0084  0187               	clrf	7
  2382  0085  3001               	movlw	1
  2383  0086  0781               	addwf	1,f
  2384  0087  3141               	addfsr 1,1
  2385  0088  1803               	skipnc
  2386  0089  0A81               	incf	1,f
  2387                           
  2388                           ;PIC16F1827-ChargeStation4-01.c: 77: if (cut[i] >= 30 * 6) {
  2389  008A  3523               	lslf	isr@i,w
  2390  008B  3ED3               	addlw	_cut& (0+255)
  2391  008C  0086               	movwf	6
  2392  008D  0187               	clrf	7
  2393  008E  3F40               	moviw [0]fsr1
  2394  008F  00A0               	movwf	??_isr
  2395  0090  3F41               	moviw [1]fsr1
  2396  0091  00A1               	movwf	??_isr+1
  2397  0092  3000               	movlw	0
  2398  0093  0221               	subwf	??_isr+1,w
  2399  0094  30B4               	movlw	180
  2400  0095  1903               	skipnz
  2401  0096  0220               	subwf	??_isr,w
  2402  0097  1C03               	skipc
  2403  0098  28A7               	goto	i1l2216
  2404                           
  2405                           ;PIC16F1827-ChargeStation4-01.c: 78: OUT(i, 0);
  2406  0099  01F0               	clrf	i1OUT@value
  2407  009A  0823               	movf	isr@i,w
  2408  009B  3184  2489  3180   	fcall	i1_OUT
  2409                           
  2410                           ;PIC16F1827-ChargeStation4-01.c: 79: }
  2411                           ;PIC16F1827-ChargeStation4-01.c: 80: } else {
  2412  009E  28A7               	goto	i1l2216
  2413  009F                     i1l2214:	
  2414                           
  2415                           ;PIC16F1827-ChargeStation4-01.c: 81: cut[i] = 0;
  2416  009F  0020               	movlb	0	; select bank0
  2417  00A0  3523               	lslf	isr@i,w
  2418  00A1  3ED3               	addlw	_cut& (0+255)
  2419  00A2  0086               	movwf	6
  2420  00A3  0187               	clrf	7
  2421  00A4  3000               	movlw	0
  2422  00A5  3FC0               	movwi [0]fsr1
  2423  00A6  3FC1               	movwi [1]fsr1
  2424  00A7                     i1l2216:	
  2425  00A7  3001               	movlw	1
  2426  00A8  0020               	movlb	0	; select bank0
  2427  00A9  00A0               	movwf	??_isr
  2428  00AA  0820               	movf	??_isr,w
  2429  00AB  07A3               	addwf	isr@i,f
  2430  00AC  3003               	movlw	3
  2431  00AD  0223               	subwf	isr@i,w
  2432  00AE  1C03               	skipc
  2433  00AF  2852               	goto	i1l2206
  2434  00B0                     i1l252:	
  2435                           
  2436                           ;PIC16F1827-ChargeStation4-01.c: 82: }
  2437                           ;PIC16F1827-ChargeStation4-01.c: 83: }
  2438                           ;PIC16F1827-ChargeStation4-01.c: 84: }
  2439                           ;PIC16F1827-ChargeStation4-01.c: 85: if (INTCONbits.TMR0IF == 1) {
  2440  00B0  1D0B               	btfss	11,2	;volatile
  2441  00B1  28C3               	goto	i1l260
  2442                           
  2443                           ;PIC16F1827-ChargeStation4-01.c: 86: INTCONbits.TMR0IF = 0;
  2444  00B2  110B               	bcf	11,2	;volatile
  2445                           
  2446                           ;PIC16F1827-ChargeStation4-01.c: 87: cnt0++;
  2447  00B3  3001               	movlw	1
  2448  00B4  07B8               	addwf	_cnt0,f
  2449  00B5  3000               	movlw	0
  2450  00B6  3DB9               	addwfc	_cnt0+1,f
  2451                           
  2452                           ;PIC16F1827-ChargeStation4-01.c: 88: if (cnt0 == 400) {
  2453  00B7  3001               	movlw	1
  2454  00B8  0639               	xorwf	_cnt0+1,w
  2455  00B9  1D03               	skipz
  2456  00BA  28BD               	goto	u239_25
  2457  00BB  3090               	movlw	144
  2458  00BC  0638               	xorwf	_cnt0,w
  2459  00BD                     u239_25:	
  2460  00BD  1D03               	skipz
  2461  00BE  28C3               	goto	i1l260
  2462                           
  2463                           ;PIC16F1827-ChargeStation4-01.c: 89: cnt0 = 0;
  2464  00BF  01B8               	clrf	_cnt0
  2465  00C0  01B9               	clrf	_cnt0+1
  2466                           
  2467                           ;PIC16F1827-ChargeStation4-01.c: 90: lchika();
  2468  00C1  3182  2214         	fcall	_lchika
  2469  00C3                     i1l260:	
  2470  00C3  0020               	movlb	0	; select bank0
  2471  00C4  0822               	movf	??_isr+2,w
  2472  00C5  00FF               	movwf	127
  2473  00C6  107E               	bcf	126,0	;clear compiler interrupt flag
  2474  00C7  0009               	retfie
  2475  00C8                     __end_of_isr:	
  2476                           
  2477                           	psect	text16
  2478  0489                     __ptext16:	
  2479 ;; *************** function i1_OUT *****************
  2480 ;; Defined at:
  2481 ;;		line 133 in file "PIC16F1827-ChargeStation4-01.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  b               1    wreg     unsigned char 
  2484 ;;  value           1    0[COMMON] unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  b               1    1[COMMON] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2496 ;;      Params:         1       0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_isr
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function i1_OUT
  2511  0489                     i1_OUT:	
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in i1_OUT: [wreg-fsr0h+status,2+status,0]
  2515                           ;i1OUT@b stored from wreg
  2516  0489  00F1               	movwf	i1OUT@b
  2517                           
  2518                           ;PIC16F1827-ChargeStation4-01.c: 134: switch (b) {
  2519  048A  2CA6               	goto	i1l1832
  2520  048B                     i1l280:	
  2521                           ;PIC16F1827-ChargeStation4-01.c: 135: case 0:
  2522                           
  2523                           
  2524                           ;PIC16F1827-ChargeStation4-01.c: 136: if (value) {
  2525  048B  0870               	movf	i1OUT@value,w
  2526  048C  1903               	btfsc	3,2
  2527  048D  2C91               	goto	i1l281
  2528                           
  2529                           ;PIC16F1827-ChargeStation4-01.c: 137: LATB0 = 0;
  2530  048E  0022               	movlb	2	; select bank2
  2531  048F  100D               	bcf	13,0	;volatile
  2532                           
  2533                           ;PIC16F1827-ChargeStation4-01.c: 138: } else {
  2534  0490  0008               	return
  2535  0491                     i1l281:	
  2536                           
  2537                           ;PIC16F1827-ChargeStation4-01.c: 139: LATB0 = 1;
  2538  0491  0022               	movlb	2	; select bank2
  2539  0492  140D               	bsf	13,0	;volatile
  2540                           
  2541                           ;PIC16F1827-ChargeStation4-01.c: 140: }
  2542                           ;PIC16F1827-ChargeStation4-01.c: 141: break;
  2543  0493  0008               	return
  2544  0494                     i1l284:	
  2545                           ;PIC16F1827-ChargeStation4-01.c: 142: case 1:
  2546                           
  2547                           
  2548                           ;PIC16F1827-ChargeStation4-01.c: 143: if (value) {
  2549  0494  0870               	movf	i1OUT@value,w
  2550  0495  1903               	btfsc	3,2
  2551  0496  2C9A               	goto	i1l285
  2552                           
  2553                           ;PIC16F1827-ChargeStation4-01.c: 144: LATB3 = 0;
  2554  0497  0022               	movlb	2	; select bank2
  2555  0498  118D               	bcf	13,3	;volatile
  2556                           
  2557                           ;PIC16F1827-ChargeStation4-01.c: 145: } else {
  2558  0499  0008               	return
  2559  049A                     i1l285:	
  2560                           
  2561                           ;PIC16F1827-ChargeStation4-01.c: 146: LATB3 = 1;
  2562  049A  0022               	movlb	2	; select bank2
  2563  049B  158D               	bsf	13,3	;volatile
  2564                           
  2565                           ;PIC16F1827-ChargeStation4-01.c: 147: }
  2566                           ;PIC16F1827-ChargeStation4-01.c: 148: break;
  2567  049C  0008               	return
  2568  049D                     i1l287:	
  2569                           ;PIC16F1827-ChargeStation4-01.c: 149: case 2:
  2570                           
  2571                           
  2572                           ;PIC16F1827-ChargeStation4-01.c: 150: if (value) {
  2573  049D  0870               	movf	i1OUT@value,w
  2574  049E  1903               	btfsc	3,2
  2575  049F  2CA3               	goto	i1l288
  2576                           
  2577                           ;PIC16F1827-ChargeStation4-01.c: 151: LATB6 = 0;
  2578  04A0  0022               	movlb	2	; select bank2
  2579  04A1  130D               	bcf	13,6	;volatile
  2580                           
  2581                           ;PIC16F1827-ChargeStation4-01.c: 152: } else {
  2582  04A2  0008               	return
  2583  04A3                     i1l288:	
  2584                           
  2585                           ;PIC16F1827-ChargeStation4-01.c: 153: LATB6 = 1;
  2586  04A3  0022               	movlb	2	; select bank2
  2587  04A4  170D               	bsf	13,6	;volatile
  2588                           
  2589                           ;PIC16F1827-ChargeStation4-01.c: 158: }
  2590                           
  2591                           ;PIC16F1827-ChargeStation4-01.c: 157: break;
  2592                           
  2593                           ;PIC16F1827-ChargeStation4-01.c: 156: default:
  2594                           
  2595                           ;PIC16F1827-ChargeStation4-01.c: 154: }
  2596                           ;PIC16F1827-ChargeStation4-01.c: 155: break;
  2597  04A5  0008               	return
  2598  04A6                     i1l1832:	
  2599  04A6  0871               	movf	i1OUT@b,w
  2600                           
  2601                           ; Switch size 1, requested type "space"
  2602                           ; Number of cases is 3, Range of values is 0 to 2
  2603                           ; switch strategies available:
  2604                           ; Name         Instructions Cycles
  2605                           ; simple_byte           10     6 (average)
  2606                           ; direct_byte           12     6 (fixed)
  2607                           ; jumptable            260     6 (fixed)
  2608                           ;	Chosen strategy is simple_byte
  2609  04A7  3A00               	xorlw	0	; case 0
  2610  04A8  1903               	skipnz
  2611  04A9  2C8B               	goto	i1l280
  2612  04AA  3A01               	xorlw	1	; case 1
  2613  04AB  1903               	skipnz
  2614  04AC  2C94               	goto	i1l284
  2615  04AD  3A03               	xorlw	3	; case 2
  2616  04AE  1903               	skipnz
  2617  04AF  2C9D               	goto	i1l287
  2618  04B0  2CB1               	goto	i1l291
  2619  04B1                     i1l291:	
  2620  04B1  0008               	return
  2621  04B2                     __end_ofi1_OUT:	
  2622                           
  2623                           	psect	text17
  2624  0407                     __ptext17:	
  2625 ;; *************** function _ringbuf_pop *****************
  2626 ;; Defined at:
  2627 ;;		line 137 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  rb              1    wreg     PTR struct ringbuf
  2630 ;;		 -> tx_buf(4), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  rb              1    3[COMMON] PTR struct ringbuf
  2633 ;;		 -> tx_buf(4), 
  2634 ;;  ret             1    2[COMMON] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      unsigned char 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2644 ;;      Params:         0       0       0       0       0       0
  2645 ;;      Locals:         2       0       0       0       0       0
  2646 ;;      Temps:          2       0       0       0       0       0
  2647 ;;      Totals:         4       0       0       0       0       0
  2648 ;;Total ram usage:        4 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_isr
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _ringbuf_pop
  2659  0407                     _ringbuf_pop:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  2663                           ;ringbuf_pop@rb stored from wreg
  2664  0407  00F3               	movwf	ringbuf_pop@rb
  2665                           
  2666                           ;My_header.h: 138: uint8_t ret = rb->buf[rb->tail];
  2667  0408  0873               	movf	ringbuf_pop@rb,w
  2668  0409  0086               	movwf	6
  2669  040A  0187               	clrf	7
  2670  040B  0873               	movf	ringbuf_pop@rb,w
  2671  040C  3E03               	addlw	3
  2672  040D  0084               	movwf	4
  2673  040E  0185               	clrf	5
  2674  040F  0800               	movf	0,w
  2675  0410  0701               	addwf	1,w
  2676  0411  00F0               	movwf	??_ringbuf_pop
  2677  0412  0870               	movf	??_ringbuf_pop,w
  2678  0413  0086               	movwf	6
  2679  0414  0187               	clrf	7
  2680  0415  0801               	movf	1,w
  2681  0416  00F1               	movwf	??_ringbuf_pop+1
  2682  0417  0871               	movf	??_ringbuf_pop+1,w
  2683  0418  00F2               	movwf	ringbuf_pop@ret
  2684                           
  2685                           ;My_header.h: 139: rb->tail++;
  2686  0419  3001               	movlw	1
  2687  041A  00F0               	movwf	??_ringbuf_pop
  2688  041B  0873               	movf	ringbuf_pop@rb,w
  2689  041C  3E03               	addlw	3
  2690  041D  0086               	movwf	6
  2691  041E  0187               	clrf	7
  2692  041F  0870               	movf	??_ringbuf_pop,w
  2693  0420  0781               	addwf	1,f
  2694                           
  2695                           ;My_header.h: 140: if (rb->tail >= rb->size) {
  2696  0421  0873               	movf	ringbuf_pop@rb,w
  2697  0422  3E03               	addlw	3
  2698  0423  0086               	movwf	6
  2699  0424  0187               	clrf	7
  2700  0425  0A73               	incf	ringbuf_pop@rb,w
  2701  0426  0084               	movwf	4
  2702  0427  0185               	clrf	5
  2703  0428  0800               	movf	0,w
  2704  0429  0201               	subwf	1,w
  2705  042A  1C03               	skipc
  2706  042B  2C31               	goto	i1l2124
  2707                           
  2708                           ;My_header.h: 141: rb->tail = 0;
  2709  042C  0873               	movf	ringbuf_pop@rb,w
  2710  042D  3E03               	addlw	3
  2711  042E  0086               	movwf	6
  2712  042F  0187               	clrf	7
  2713  0430  0181               	clrf	1
  2714  0431                     i1l2124:	
  2715                           
  2716                           ;My_header.h: 142: }
  2717                           ;My_header.h: 143: return ret;
  2718  0431  0872               	movf	ringbuf_pop@ret,w
  2719  0432  0008               	return
  2720  0433                     __end_of_ringbuf_pop:	
  2721                           
  2722                           	psect	text18
  2723  045E                     __ptext18:	
  2724 ;; *************** function _ringbuf_num *****************
  2725 ;; Defined at:
  2726 ;;		line 146 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  rb              1    wreg     PTR struct ringbuf
  2729 ;;		 -> tx_buf(4), 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  rb              1    1[COMMON] PTR struct ringbuf
  2732 ;;		 -> tx_buf(4), 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      unsigned char 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2742 ;;      Params:         0       0       0       0       0       0
  2743 ;;      Locals:         1       0       0       0       0       0
  2744 ;;      Temps:          1       0       0       0       0       0
  2745 ;;      Totals:         2       0       0       0       0       0
  2746 ;;Total ram usage:        2 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_isr
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _ringbuf_num
  2757  045E                     _ringbuf_num:	
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  2761                           ;ringbuf_num@rb stored from wreg
  2762  045E  00F1               	movwf	ringbuf_num@rb
  2763                           
  2764                           ;My_header.h: 147: if (rb->head >= rb->tail) {
  2765  045F  0871               	movf	ringbuf_num@rb,w
  2766  0460  3E02               	addlw	2
  2767  0461  0086               	movwf	6
  2768  0462  0187               	clrf	7
  2769  0463  0871               	movf	ringbuf_num@rb,w
  2770  0464  3E03               	addlw	3
  2771  0465  0084               	movwf	4
  2772  0466  0185               	clrf	5
  2773  0467  0800               	movf	0,w
  2774  0468  0201               	subwf	1,w
  2775  0469  1C03               	skipc
  2776  046A  2C77               	goto	i1l1666
  2777                           
  2778                           ;My_header.h: 148: return (rb->head - rb->tail);
  2779  046B  0871               	movf	ringbuf_num@rb,w
  2780  046C  3E02               	addlw	2
  2781  046D  0086               	movwf	6
  2782  046E  0187               	clrf	7
  2783  046F  0871               	movf	ringbuf_num@rb,w
  2784  0470  3E03               	addlw	3
  2785  0471  0084               	movwf	4
  2786  0472  0185               	clrf	5
  2787  0473  0300               	decf	0,w
  2788  0474  3AFF               	xorlw	255
  2789  0475  0701               	addwf	1,w
  2790                           
  2791                           ;My_header.h: 149: } else {
  2792  0476  0008               	return
  2793  0477                     i1l1666:	
  2794                           
  2795                           ;My_header.h: 150: return (rb->size + rb->head - rb->tail);
  2796  0477  0871               	movf	ringbuf_num@rb,w
  2797  0478  3E02               	addlw	2
  2798  0479  0086               	movwf	6
  2799  047A  0187               	clrf	7
  2800  047B  0A71               	incf	ringbuf_num@rb,w
  2801  047C  0084               	movwf	4
  2802  047D  0185               	clrf	5
  2803  047E  0800               	movf	0,w
  2804  047F  00F0               	movwf	??_ringbuf_num
  2805  0480  0871               	movf	ringbuf_num@rb,w
  2806  0481  3E03               	addlw	3
  2807  0482  0084               	movwf	4
  2808  0483  0185               	clrf	5
  2809  0484  0300               	decf	0,w
  2810  0485  3AFF               	xorlw	255
  2811  0486  0770               	addwf	??_ringbuf_num,w
  2812  0487  0701               	addwf	1,w
  2813  0488  0008               	return
  2814  0489                     __end_of_ringbuf_num:	
  2815                           
  2816                           	psect	text19
  2817  0214                     __ptext19:	
  2818 ;; *************** function _lchika *****************
  2819 ;; Defined at:
  2820 ;;		line 95 in file "PIC16F1827-ChargeStation4-01.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  i               1   13[COMMON] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;		None               void
  2827 ;; Registers used:
  2828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2834 ;;      Params:         0       0       0       0       0       0
  2835 ;;      Locals:         1       0       0       0       0       0
  2836 ;;      Temps:          4       0       0       0       0       0
  2837 ;;      Totals:         5       0       0       0       0       0
  2838 ;;Total ram usage:        5 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    1
  2841 ;; This function calls:
  2842 ;;		___awdiv
  2843 ;;		i1_LED
  2844 ;;		i1___lwdiv
  2845 ;; This function is called by:
  2846 ;;		_isr
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _lchika
  2852  0214                     _lchika:	
  2853                           
  2854                           ;PIC16F1827-ChargeStation4-01.c: 96: uint8_t i;
  2855                           ;PIC16F1827-ChargeStation4-01.c: 97: for (i = 0; i < 3; i++) {
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in _lchika: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2859  0214  01FD               	clrf	lchika@i
  2860  0215                     L3:	
  2861  0215  3003               	movlw	3
  2862  0216  027D               	subwf	lchika@i,w
  2863  0217  1803               	btfsc	3,0
  2864  0218  0008               	return
  2865                           
  2866                           ;PIC16F1827-ChargeStation4-01.c: 98: cnt[i]++;
  2867  0219  3001               	movlw	1
  2868  021A  00F9               	movwf	??_lchika
  2869  021B  087D               	movf	lchika@i,w
  2870  021C  3E35               	addlw	_cnt& (0+255)
  2871  021D  0086               	movwf	6
  2872  021E  0187               	clrf	7
  2873  021F  0879               	movf	??_lchika,w
  2874  0220  0781               	addwf	1,f
  2875                           
  2876                           ;PIC16F1827-ChargeStation4-01.c: 100: if (cnt[i] % 2 == 1) {
  2877  0221  087D               	movf	lchika@i,w
  2878  0222  3E35               	addlw	_cnt& (0+255)
  2879  0223  0086               	movwf	6
  2880  0224  0187               	clrf	7
  2881  0225  1C01               	btfss	1,0
  2882  0226  2A2D               	goto	i1l1746
  2883                           
  2884                           ;PIC16F1827-ChargeStation4-01.c: 101: LED(i, 0);
  2885  0227  01F0               	clrf	i1LED@value
  2886  0228  087D               	movf	lchika@i,w
  2887  0229  3185  2500  3182   	fcall	i1_LED
  2888                           
  2889                           ;PIC16F1827-ChargeStation4-01.c: 102: } else {
  2890  022C  2A7D               	goto	i1l1760
  2891  022D                     i1l1746:	
  2892                           
  2893                           ;PIC16F1827-ChargeStation4-01.c: 103: if (cnt[i] / 2 <= v[i] / 100) {
  2894  022D  3064               	movlw	100
  2895  022E  00F0               	movwf	i1___lwdiv@divisor
  2896  022F  3000               	movlw	0
  2897  0230  00F1               	movwf	i1___lwdiv@divisor+1
  2898  0231  357D               	lslf	lchika@i,w
  2899  0232  3ED9               	addlw	_v& (0+255)
  2900  0233  0086               	movwf	6
  2901  0234  0187               	clrf	7
  2902  0235  3F40               	moviw [0]fsr1
  2903  0236  00F2               	movwf	i1___lwdiv@dividend
  2904  0237  3F41               	moviw [1]fsr1
  2905  0238  00F3               	movwf	i1___lwdiv@dividend+1
  2906  0239  3183  2376  3182   	fcall	i1___lwdiv
  2907  023C  0870               	movf	?i1___lwdiv,w
  2908  023D  00F9               	movwf	??_lchika
  2909  023E  0871               	movf	?i1___lwdiv+1,w
  2910  023F  00FA               	movwf	??_lchika+1
  2911  0240  3002               	movlw	2
  2912  0241  00F0               	movwf	___awdiv@divisor
  2913  0242  3000               	movlw	0
  2914  0243  00F1               	movwf	___awdiv@divisor+1
  2915  0244  087D               	movf	lchika@i,w
  2916  0245  3E35               	addlw	_cnt& (0+255)
  2917  0246  0086               	movwf	6
  2918  0247  0187               	clrf	7
  2919  0248  0801               	movf	1,w
  2920  0249  00FB               	movwf	??_lchika+2
  2921  024A  01FC               	clrf	??_lchika+3
  2922  024B  087B               	movf	??_lchika+2,w
  2923  024C  00F2               	movwf	___awdiv@dividend
  2924  024D  087C               	movf	??_lchika+3,w
  2925  024E  00F3               	movwf	___awdiv@dividend+1
  2926  024F  3182  22EC  3182   	fcall	___awdiv
  2927  0252  0871               	movf	?___awdiv+1,w
  2928  0253  027A               	subwf	??_lchika+1,w
  2929  0254  1D03               	skipz
  2930  0255  2A58               	goto	u165_25
  2931  0256  0870               	movf	?___awdiv,w
  2932  0257  0279               	subwf	??_lchika,w
  2933  0258                     u165_25:	
  2934  0258  1C03               	skipc
  2935  0259  2A63               	goto	i1l1752
  2936                           
  2937                           ;PIC16F1827-ChargeStation4-01.c: 104: LED(i, 1);
  2938  025A  01F0               	clrf	i1LED@value
  2939  025B  0AF0               	incf	i1LED@value,f
  2940  025C  087D               	movf	lchika@i,w
  2941  025D  3185  2500  3182   	fcall	i1_LED
  2942                           
  2943                           ;PIC16F1827-ChargeStation4-01.c: 105: cntf[i] = 0;
  2944  0260  087D               	movf	lchika@i,w
  2945  0261  3EDF               	addlw	_cntf& (0+255)
  2946  0262  2A7A               	goto	L2
  2947  0263                     i1l1752:	
  2948                           ;PIC16F1827-ChargeStation4-01.c: 106: } else {
  2949                           
  2950                           
  2951                           ;PIC16F1827-ChargeStation4-01.c: 107: cntf[i]++;
  2952  0263  3001               	movlw	1
  2953  0264  00F9               	movwf	??_lchika
  2954  0265  087D               	movf	lchika@i,w
  2955  0266  3EDF               	addlw	_cntf& (0+255)
  2956  0267  0086               	movwf	6
  2957  0268  0187               	clrf	7
  2958  0269  0879               	movf	??_lchika,w
  2959  026A  0781               	addwf	1,f
  2960                           
  2961                           ;PIC16F1827-ChargeStation4-01.c: 108: LED(i, 0);
  2962  026B  01F0               	clrf	i1LED@value
  2963  026C  087D               	movf	lchika@i,w
  2964  026D  3185  2500  3182   	fcall	i1_LED
  2965                           
  2966                           ;PIC16F1827-ChargeStation4-01.c: 109: if (cntf[i] >= 2) {
  2967  0270  087D               	movf	lchika@i,w
  2968  0271  3EDF               	addlw	_cntf& (0+255)
  2969  0272  0086               	movwf	6
  2970  0273  0187               	clrf	7
  2971  0274  3002               	movlw	2
  2972  0275  0201               	subwf	1,w
  2973  0276  1C03               	skipc
  2974  0277  2A7D               	goto	i1l1760
  2975                           
  2976                           ;PIC16F1827-ChargeStation4-01.c: 110: cnt[i] = 0;
  2977  0278  087D               	movf	lchika@i,w
  2978  0279  3E35               	addlw	_cnt& (0+255)
  2979  027A                     L2:	
  2980  027A  0086               	movwf	6
  2981  027B  0187               	clrf	7
  2982  027C  0181               	clrf	1
  2983  027D                     i1l1760:	
  2984  027D  3001               	movlw	1
  2985  027E  00F9               	movwf	??_lchika
  2986  027F  0879               	movf	??_lchika,w
  2987  0280  07FD               	addwf	lchika@i,f
  2988  0281  2A15               	goto	L3
  2989  0282                     __end_of_lchika:	
  2990                           
  2991                           	psect	text20
  2992  0376                     __ptext20:	
  2993 ;; *************** function i1___lwdiv *****************
  2994 ;; Defined at:
  2995 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  divisor         2    0[COMMON] unsigned int 
  2998 ;;  dividend        2    2[COMMON] unsigned int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  __lwdiv         2    5[COMMON] unsigned int 
  3001 ;;  __lwdiv         1    7[COMMON] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  2    0[COMMON] unsigned int 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3011 ;;      Params:         4       0       0       0       0       0
  3012 ;;      Locals:         3       0       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0       0
  3014 ;;      Totals:         8       0       0       0       0       0
  3015 ;;Total ram usage:        8 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_lchika
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function i1___lwdiv
  3026  0376                     i1___lwdiv:	
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  3030  0376  01F5               	clrf	i1___lwdiv@quotient
  3031  0377  01F6               	clrf	i1___lwdiv@quotient+1
  3032  0378  0871               	movf	i1___lwdiv@divisor+1,w
  3033  0379  0470               	iorwf	i1___lwdiv@divisor,w
  3034  037A  1903               	skipnz
  3035  037B  2BA5               	goto	i1l1590
  3036  037C  01F7               	clrf	i1___lwdiv@counter
  3037  037D  0AF7               	incf	i1___lwdiv@counter,f
  3038  037E                     i1l1578:	
  3039  037E  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  3040  037F  2B8A               	goto	i1l1580
  3041  0380  3001               	movlw	1
  3042  0381                     u138_25:	
  3043  0381  35F0               	lslf	i1___lwdiv@divisor,f
  3044  0382  0DF1               	rlf	i1___lwdiv@divisor+1,f
  3045  0383  0B89               	decfsz	9,f
  3046  0384  2B81               	goto	u138_25
  3047  0385  3001               	movlw	1
  3048  0386  00F4               	movwf	??i1___lwdiv
  3049  0387  0874               	movf	??i1___lwdiv,w
  3050  0388  07F7               	addwf	i1___lwdiv@counter,f
  3051  0389  2B7E               	goto	i1l1578
  3052  038A                     i1l1580:	
  3053  038A  3001               	movlw	1
  3054  038B                     u140_25:	
  3055  038B  35F5               	lslf	i1___lwdiv@quotient,f
  3056  038C  0DF6               	rlf	i1___lwdiv@quotient+1,f
  3057  038D  0B89               	decfsz	9,f
  3058  038E  2B8B               	goto	u140_25
  3059  038F  0871               	movf	i1___lwdiv@divisor+1,w
  3060  0390  0273               	subwf	i1___lwdiv@dividend+1,w
  3061  0391  1D03               	skipz
  3062  0392  2B95               	goto	u141_25
  3063  0393  0870               	movf	i1___lwdiv@divisor,w
  3064  0394  0272               	subwf	i1___lwdiv@dividend,w
  3065  0395                     u141_25:	
  3066  0395  1C03               	skipc
  3067  0396  2B9C               	goto	i1l1586
  3068  0397  0870               	movf	i1___lwdiv@divisor,w
  3069  0398  02F2               	subwf	i1___lwdiv@dividend,f
  3070  0399  0871               	movf	i1___lwdiv@divisor+1,w
  3071  039A  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  3072  039B  1475               	bsf	i1___lwdiv@quotient,0
  3073  039C                     i1l1586:	
  3074  039C  3001               	movlw	1
  3075  039D                     u142_25:	
  3076  039D  36F1               	lsrf	i1___lwdiv@divisor+1,f
  3077  039E  0CF0               	rrf	i1___lwdiv@divisor,f
  3078  039F  0B89               	decfsz	9,f
  3079  03A0  2B9D               	goto	u142_25
  3080  03A1  3001               	movlw	1
  3081  03A2  02F7               	subwf	i1___lwdiv@counter,f
  3082  03A3  1D03               	btfss	3,2
  3083  03A4  2B8A               	goto	i1l1580
  3084  03A5                     i1l1590:	
  3085  03A5  0876               	movf	i1___lwdiv@quotient+1,w
  3086  03A6  01F1               	clrf	?i1___lwdiv+1
  3087  03A7  07F1               	addwf	?i1___lwdiv+1,f
  3088  03A8  0875               	movf	i1___lwdiv@quotient,w
  3089  03A9  01F0               	clrf	?i1___lwdiv
  3090  03AA  07F0               	addwf	?i1___lwdiv,f
  3091  03AB  0008               	return
  3092  03AC                     __end_ofi1___lwdiv:	
  3093                           
  3094                           	psect	text21
  3095  0500                     __ptext21:	
  3096 ;; *************** function i1_LED *****************
  3097 ;; Defined at:
  3098 ;;		line 161 in file "PIC16F1827-ChargeStation4-01.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  b               1    wreg     unsigned char 
  3101 ;;  value           1    0[COMMON] unsigned char 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  b               1    1[COMMON] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;		None               void
  3106 ;; Registers used:
  3107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3113 ;;      Params:         1       0       0       0       0       0
  3114 ;;      Locals:         1       0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0
  3116 ;;      Totals:         2       0       0       0       0       0
  3117 ;;Total ram usage:        2 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_lchika
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function i1_LED
  3128  0500                     i1_LED:	
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in i1_LED: [wreg-fsr0h+status,2+status,0]
  3132                           ;i1LED@b stored from wreg
  3133  0500  00F1               	movwf	i1LED@b
  3134                           
  3135                           ;PIC16F1827-ChargeStation4-01.c: 162: switch (b) {
  3136  0501  2D1A               	goto	i1l1566
  3137  0502                     i1l295:	
  3138                           ;PIC16F1827-ChargeStation4-01.c: 163: case 0:
  3139                           
  3140                           
  3141                           ;PIC16F1827-ChargeStation4-01.c: 164: LATB5 = value;
  3142  0502  1C70               	btfss	i1LED@value,0
  3143  0503  2D07               	goto	u131_20
  3144  0504  0022               	movlb	2	; select bank2
  3145  0505  168D               	bsf	13,5	;volatile
  3146  0506  0008               	return
  3147  0507                     u131_20:	
  3148  0507  0022               	movlb	2	; select bank2
  3149  0508  128D               	bcf	13,5	;volatile
  3150                           
  3151                           ;PIC16F1827-ChargeStation4-01.c: 165: break;
  3152  0509  0008               	return
  3153  050A                     i1l297:	
  3154                           ;PIC16F1827-ChargeStation4-01.c: 166: case 1:
  3155                           
  3156                           
  3157                           ;PIC16F1827-ChargeStation4-01.c: 167: LATA6 = value;
  3158  050A  1C70               	btfss	i1LED@value,0
  3159  050B  2D0F               	goto	u133_20
  3160  050C  0022               	movlb	2	; select bank2
  3161  050D  170C               	bsf	12,6	;volatile
  3162  050E  0008               	return
  3163  050F                     u133_20:	
  3164  050F  0022               	movlb	2	; select bank2
  3165  0510  130C               	bcf	12,6	;volatile
  3166                           
  3167                           ;PIC16F1827-ChargeStation4-01.c: 168: break;
  3168  0511  0008               	return
  3169  0512                     i1l298:	
  3170                           ;PIC16F1827-ChargeStation4-01.c: 169: case 2:
  3171                           
  3172                           
  3173                           ;PIC16F1827-ChargeStation4-01.c: 170: LATA7 = value;
  3174  0512  1C70               	btfss	i1LED@value,0
  3175  0513  2D17               	goto	u135_20
  3176  0514  0022               	movlb	2	; select bank2
  3177  0515  178C               	bsf	12,7	;volatile
  3178  0516  0008               	return
  3179  0517                     u135_20:	
  3180  0517  0022               	movlb	2	; select bank2
  3181  0518  138C               	bcf	12,7	;volatile
  3182                           
  3183                           ;PIC16F1827-ChargeStation4-01.c: 174: }
  3184                           
  3185                           ;PIC16F1827-ChargeStation4-01.c: 173: break;
  3186                           
  3187                           ;PIC16F1827-ChargeStation4-01.c: 172: default:
  3188                           
  3189                           ;PIC16F1827-ChargeStation4-01.c: 171: break;
  3190  0519  0008               	return
  3191  051A                     i1l1566:	
  3192  051A  0871               	movf	i1LED@b,w
  3193                           
  3194                           ; Switch size 1, requested type "space"
  3195                           ; Number of cases is 3, Range of values is 0 to 2
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           10     6 (average)
  3199                           ; direct_byte           12     6 (fixed)
  3200                           ; jumptable            260     6 (fixed)
  3201                           ;	Chosen strategy is simple_byte
  3202  051B  3A00               	xorlw	0	; case 0
  3203  051C  1903               	skipnz
  3204  051D  2D02               	goto	i1l295
  3205  051E  3A01               	xorlw	1	; case 1
  3206  051F  1903               	skipnz
  3207  0520  2D0A               	goto	i1l297
  3208  0521  3A03               	xorlw	3	; case 2
  3209  0522  1903               	skipnz
  3210  0523  2D12               	goto	i1l298
  3211  0524  2D25               	goto	i1l300
  3212  0525                     i1l300:	
  3213  0525  0008               	return
  3214  0526                     __end_ofi1_LED:	
  3215                           
  3216                           	psect	text22
  3217  02EC                     __ptext22:	
  3218 ;; *************** function ___awdiv *****************
  3219 ;; Defined at:
  3220 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  divisor         2    0[COMMON] int 
  3223 ;;  dividend        2    2[COMMON] int 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  quotient        2    7[COMMON] int 
  3226 ;;  sign            1    6[COMMON] unsigned char 
  3227 ;;  counter         1    5[COMMON] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    0[COMMON] int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3237 ;;      Params:         4       0       0       0       0       0
  3238 ;;      Locals:         4       0       0       0       0       0
  3239 ;;      Temps:          1       0       0       0       0       0
  3240 ;;      Totals:         9       0       0       0       0       0
  3241 ;;Total ram usage:        9 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_lchika
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function ___awdiv
  3252  02EC                     ___awdiv:	
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3256  02EC  01F6               	clrf	___awdiv@sign
  3257  02ED  1FF1               	btfss	___awdiv@divisor+1,7
  3258  02EE  2AF6               	goto	i1l1478
  3259  02EF  09F0               	comf	___awdiv@divisor,f
  3260  02F0  09F1               	comf	___awdiv@divisor+1,f
  3261  02F1  0AF0               	incf	___awdiv@divisor,f
  3262  02F2  1903               	skipnz
  3263  02F3  0AF1               	incf	___awdiv@divisor+1,f
  3264  02F4  01F6               	clrf	___awdiv@sign
  3265  02F5  0AF6               	incf	___awdiv@sign,f
  3266  02F6                     i1l1478:	
  3267  02F6  1FF3               	btfss	___awdiv@dividend+1,7
  3268  02F7  2B01               	goto	i1l1484
  3269  02F8  09F2               	comf	___awdiv@dividend,f
  3270  02F9  09F3               	comf	___awdiv@dividend+1,f
  3271  02FA  0AF2               	incf	___awdiv@dividend,f
  3272  02FB  1903               	skipnz
  3273  02FC  0AF3               	incf	___awdiv@dividend+1,f
  3274  02FD  3001               	movlw	1
  3275  02FE  00F4               	movwf	??___awdiv
  3276  02FF  0874               	movf	??___awdiv,w
  3277  0300  06F6               	xorwf	___awdiv@sign,f
  3278  0301                     i1l1484:	
  3279  0301  01F7               	clrf	___awdiv@quotient
  3280  0302  01F8               	clrf	___awdiv@quotient+1
  3281  0303  0871               	movf	___awdiv@divisor+1,w
  3282  0304  0470               	iorwf	___awdiv@divisor,w
  3283  0305  1903               	skipnz
  3284  0306  2B30               	goto	i1l1506
  3285  0307  01F5               	clrf	___awdiv@counter
  3286  0308  0AF5               	incf	___awdiv@counter,f
  3287  0309                     i1l1494:	
  3288  0309  1BF1               	btfsc	___awdiv@divisor+1,7
  3289  030A  2B15               	goto	i1l1496
  3290  030B  3001               	movlw	1
  3291  030C                     u111_25:	
  3292  030C  35F0               	lslf	___awdiv@divisor,f
  3293  030D  0DF1               	rlf	___awdiv@divisor+1,f
  3294  030E  0B89               	decfsz	9,f
  3295  030F  2B0C               	goto	u111_25
  3296  0310  3001               	movlw	1
  3297  0311  00F4               	movwf	??___awdiv
  3298  0312  0874               	movf	??___awdiv,w
  3299  0313  07F5               	addwf	___awdiv@counter,f
  3300  0314  2B09               	goto	i1l1494
  3301  0315                     i1l1496:	
  3302  0315  3001               	movlw	1
  3303  0316                     u113_25:	
  3304  0316  35F7               	lslf	___awdiv@quotient,f
  3305  0317  0DF8               	rlf	___awdiv@quotient+1,f
  3306  0318  0B89               	decfsz	9,f
  3307  0319  2B16               	goto	u113_25
  3308  031A  0871               	movf	___awdiv@divisor+1,w
  3309  031B  0273               	subwf	___awdiv@dividend+1,w
  3310  031C  1D03               	skipz
  3311  031D  2B20               	goto	u114_25
  3312  031E  0870               	movf	___awdiv@divisor,w
  3313  031F  0272               	subwf	___awdiv@dividend,w
  3314  0320                     u114_25:	
  3315  0320  1C03               	skipc
  3316  0321  2B27               	goto	i1l1502
  3317  0322  0870               	movf	___awdiv@divisor,w
  3318  0323  02F2               	subwf	___awdiv@dividend,f
  3319  0324  0871               	movf	___awdiv@divisor+1,w
  3320  0325  3BF3               	subwfb	___awdiv@dividend+1,f
  3321  0326  1477               	bsf	___awdiv@quotient,0
  3322  0327                     i1l1502:	
  3323  0327  3001               	movlw	1
  3324  0328                     u115_25:	
  3325  0328  36F1               	lsrf	___awdiv@divisor+1,f
  3326  0329  0CF0               	rrf	___awdiv@divisor,f
  3327  032A  0B89               	decfsz	9,f
  3328  032B  2B28               	goto	u115_25
  3329  032C  3001               	movlw	1
  3330  032D  02F5               	subwf	___awdiv@counter,f
  3331  032E  1D03               	btfss	3,2
  3332  032F  2B15               	goto	i1l1496
  3333  0330                     i1l1506:	
  3334  0330  0876               	movf	___awdiv@sign,w
  3335  0331  1903               	btfsc	3,2
  3336  0332  2B38               	goto	i1l1510
  3337  0333  09F7               	comf	___awdiv@quotient,f
  3338  0334  09F8               	comf	___awdiv@quotient+1,f
  3339  0335  0AF7               	incf	___awdiv@quotient,f
  3340  0336  1903               	skipnz
  3341  0337  0AF8               	incf	___awdiv@quotient+1,f
  3342  0338                     i1l1510:	
  3343  0338  0878               	movf	___awdiv@quotient+1,w
  3344  0339  01F1               	clrf	?___awdiv+1
  3345  033A  07F1               	addwf	?___awdiv+1,f
  3346  033B  0877               	movf	___awdiv@quotient,w
  3347  033C  01F0               	clrf	?___awdiv
  3348  033D  07F0               	addwf	?___awdiv,f
  3349  033E  0008               	return
  3350  033F                     __end_of___awdiv:	
  3351                           
  3352                           	psect	text23
  3353  00E2                     __ptext23:	
  3354 ;; *************** function _button_timer_interrupt *****************
  3355 ;; Defined at:
  3356 ;;		line 97 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  bt              1    wreg     PTR struct button
  3359 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  3360 ;;  sw_value        1    0[COMMON] unsigned char 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  bt              1    3[COMMON] PTR struct button
  3363 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;		None               void
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3373 ;;      Params:         1       0       0       0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0
  3375 ;;      Temps:          2       0       0       0       0       0
  3376 ;;      Totals:         4       0       0       0       0       0
  3377 ;;Total ram usage:        4 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_isr
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _button_timer_interrupt
  3388  00E2                     _button_timer_interrupt:	
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3392                           ;button_timer_interrupt@bt stored from wreg
  3393  00E2  00F3               	movwf	button_timer_interrupt@bt
  3394                           
  3395                           ;My_header.h: 98: if (sw_value) {
  3396  00E3  0870               	movf	button_timer_interrupt@sw_value,w
  3397  00E4  1903               	btfsc	3,2
  3398  00E5  293D               	goto	i1l1622
  3399                           
  3400                           ;My_header.h: 99: if (bt->cnt_sw < 600 + 1) bt->cnt_sw++;
  3401  00E6  0873               	movf	button_timer_interrupt@bt,w
  3402  00E7  0086               	movwf	6
  3403  00E8  0187               	clrf	7
  3404  00E9  3F40               	moviw [0]fsr1
  3405  00EA  00F1               	movwf	??_button_timer_interrupt
  3406  00EB  3F41               	moviw [1]fsr1
  3407  00EC  00F2               	movwf	??_button_timer_interrupt+1
  3408  00ED  3002               	movlw	2
  3409  00EE  0272               	subwf	??_button_timer_interrupt+1,w
  3410  00EF  3059               	movlw	89
  3411  00F0  1903               	skipnz
  3412  00F1  0271               	subwf	??_button_timer_interrupt,w
  3413  00F2  1803               	skipnc
  3414  00F3  28FC               	goto	i1l1612
  3415  00F4  0873               	movf	button_timer_interrupt@bt,w
  3416  00F5  0086               	movwf	6
  3417  00F6  0187               	clrf	7
  3418  00F7  3001               	movlw	1
  3419  00F8  0781               	addwf	1,f
  3420  00F9  3141               	addfsr 1,1
  3421  00FA  1803               	skipnc
  3422  00FB  0A81               	incf	1,f
  3423  00FC                     i1l1612:	
  3424                           
  3425                           ;My_header.h: 100: if (bt->cnt_sw == 600)bt->flag.long_holding_3 = 1;
  3426  00FC  0873               	movf	button_timer_interrupt@bt,w
  3427  00FD  0086               	movwf	6
  3428  00FE  0187               	clrf	7
  3429  00FF  3F40               	moviw [0]fsr1
  3430  0100  3A58               	xorlw	88
  3431  0101  1D03               	skipz
  3432  0102  2905               	goto	u147_25
  3433  0103  3F41               	moviw [1]fsr1
  3434  0104  3A02               	xorlw	2
  3435  0105                     u147_25:	
  3436  0105  1D03               	skipz
  3437  0106  290C               	goto	i1l119
  3438  0107  0873               	movf	button_timer_interrupt@bt,w
  3439  0108  3E02               	addlw	2
  3440  0109  0086               	movwf	6
  3441  010A  0187               	clrf	7
  3442  010B  1781               	bsf	1,7
  3443  010C                     i1l119:	
  3444                           
  3445                           ;My_header.h: 101: if (bt->cnt_sw == 150)bt->flag.long_holding_2 = 1;
  3446  010C  0873               	movf	button_timer_interrupt@bt,w
  3447  010D  0086               	movwf	6
  3448  010E  0187               	clrf	7
  3449  010F  3F40               	moviw [0]fsr1
  3450  0110  3A96               	xorlw	150
  3451  0111  1D03               	skipz
  3452  0112  2915               	goto	u148_25
  3453  0113  3F41               	moviw [1]fsr1
  3454  0114  3A00               	xorlw	0
  3455  0115                     u148_25:	
  3456  0115  1D03               	skipz
  3457  0116  291C               	goto	i1l120
  3458  0117  0873               	movf	button_timer_interrupt@bt,w
  3459  0118  3E02               	addlw	2
  3460  0119  0086               	movwf	6
  3461  011A  0187               	clrf	7
  3462  011B  1701               	bsf	1,6
  3463  011C                     i1l120:	
  3464                           
  3465                           ;My_header.h: 102: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  3466  011C  0873               	movf	button_timer_interrupt@bt,w
  3467  011D  0086               	movwf	6
  3468  011E  0187               	clrf	7
  3469  011F  3F40               	moviw [0]fsr1
  3470  0120  3A1E               	xorlw	30
  3471  0121  1D03               	skipz
  3472  0122  2925               	goto	u149_25
  3473  0123  3F41               	moviw [1]fsr1
  3474  0124  3A00               	xorlw	0
  3475  0125                     u149_25:	
  3476  0125  1D03               	skipz
  3477  0126  292C               	goto	i1l121
  3478  0127  0873               	movf	button_timer_interrupt@bt,w
  3479  0128  3E02               	addlw	2
  3480  0129  0086               	movwf	6
  3481  012A  0187               	clrf	7
  3482  012B  1681               	bsf	1,5
  3483  012C                     i1l121:	
  3484                           
  3485                           ;My_header.h: 103: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  3486  012C  0873               	movf	button_timer_interrupt@bt,w
  3487  012D  0086               	movwf	6
  3488  012E  0187               	clrf	7
  3489  012F  3F40               	moviw [0]fsr1
  3490  0130  3A02               	xorlw	2
  3491  0131  1D03               	skipz
  3492  0132  2935               	goto	u150_25
  3493  0133  3F41               	moviw [1]fsr1
  3494  0134  3A00               	xorlw	0
  3495  0135                     u150_25:	
  3496  0135  1D03               	skipz
  3497  0136  0008               	return
  3498  0137  0873               	movf	button_timer_interrupt@bt,w
  3499  0138  3E02               	addlw	2
  3500  0139  0086               	movwf	6
  3501  013A  0187               	clrf	7
  3502  013B  1601               	bsf	1,4
  3503                           
  3504                           ;My_header.h: 104: } else {
  3505  013C  0008               	return
  3506  013D                     i1l1622:	
  3507                           
  3508                           ;My_header.h: 105: if (bt->cnt_sw >= 600)bt->flag.long_hold_3 = 1;
  3509  013D  0873               	movf	button_timer_interrupt@bt,w
  3510  013E  0086               	movwf	6
  3511  013F  0187               	clrf	7
  3512  0140  3F40               	moviw [0]fsr1
  3513  0141  00F1               	movwf	??_button_timer_interrupt
  3514  0142  3F41               	moviw [1]fsr1
  3515  0143  00F2               	movwf	??_button_timer_interrupt+1
  3516  0144  3002               	movlw	2
  3517  0145  0272               	subwf	??_button_timer_interrupt+1,w
  3518  0146  3058               	movlw	88
  3519  0147  1903               	skipnz
  3520  0148  0271               	subwf	??_button_timer_interrupt,w
  3521  0149  1C03               	skipc
  3522  014A  2951               	goto	i1l1626
  3523  014B  0873               	movf	button_timer_interrupt@bt,w
  3524  014C  3E02               	addlw	2
  3525  014D  0086               	movwf	6
  3526  014E  0187               	clrf	7
  3527  014F  1581               	bsf	1,3
  3528  0150  298C               	goto	i1l125
  3529  0151                     i1l1626:	
  3530                           
  3531                           ;My_header.h: 106: else if (bt->cnt_sw >= 150)bt->flag.long_hold_2 = 1;
  3532  0151  0873               	movf	button_timer_interrupt@bt,w
  3533  0152  0086               	movwf	6
  3534  0153  0187               	clrf	7
  3535  0154  3F40               	moviw [0]fsr1
  3536  0155  00F1               	movwf	??_button_timer_interrupt
  3537  0156  3F41               	moviw [1]fsr1
  3538  0157  00F2               	movwf	??_button_timer_interrupt+1
  3539  0158  3000               	movlw	0
  3540  0159  0272               	subwf	??_button_timer_interrupt+1,w
  3541  015A  3096               	movlw	150
  3542  015B  1903               	skipnz
  3543  015C  0271               	subwf	??_button_timer_interrupt,w
  3544  015D  1C03               	skipc
  3545  015E  2965               	goto	i1l1630
  3546  015F  0873               	movf	button_timer_interrupt@bt,w
  3547  0160  3E02               	addlw	2
  3548  0161  0086               	movwf	6
  3549  0162  0187               	clrf	7
  3550  0163  1501               	bsf	1,2
  3551  0164  298C               	goto	i1l125
  3552  0165                     i1l1630:	
  3553                           
  3554                           ;My_header.h: 107: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  3555  0165  0873               	movf	button_timer_interrupt@bt,w
  3556  0166  0086               	movwf	6
  3557  0167  0187               	clrf	7
  3558  0168  3F40               	moviw [0]fsr1
  3559  0169  00F1               	movwf	??_button_timer_interrupt
  3560  016A  3F41               	moviw [1]fsr1
  3561  016B  00F2               	movwf	??_button_timer_interrupt+1
  3562  016C  3000               	movlw	0
  3563  016D  0272               	subwf	??_button_timer_interrupt+1,w
  3564  016E  301E               	movlw	30
  3565  016F  1903               	skipnz
  3566  0170  0271               	subwf	??_button_timer_interrupt,w
  3567  0171  1C03               	skipc
  3568  0172  2979               	goto	i1l1634
  3569  0173  0873               	movf	button_timer_interrupt@bt,w
  3570  0174  3E02               	addlw	2
  3571  0175  0086               	movwf	6
  3572  0176  0187               	clrf	7
  3573  0177  1481               	bsf	1,1
  3574  0178  298C               	goto	i1l125
  3575  0179                     i1l1634:	
  3576                           
  3577                           ;My_header.h: 108: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  3578  0179  0873               	movf	button_timer_interrupt@bt,w
  3579  017A  0086               	movwf	6
  3580  017B  0187               	clrf	7
  3581  017C  3F40               	moviw [0]fsr1
  3582  017D  00F1               	movwf	??_button_timer_interrupt
  3583  017E  3F41               	moviw [1]fsr1
  3584  017F  00F2               	movwf	??_button_timer_interrupt+1
  3585  0180  3000               	movlw	0
  3586  0181  0272               	subwf	??_button_timer_interrupt+1,w
  3587  0182  3002               	movlw	2
  3588  0183  1903               	skipnz
  3589  0184  0271               	subwf	??_button_timer_interrupt,w
  3590  0185  1C03               	skipc
  3591  0186  298C               	goto	i1l125
  3592  0187  0873               	movf	button_timer_interrupt@bt,w
  3593  0188  3E02               	addlw	2
  3594  0189  0086               	movwf	6
  3595  018A  0187               	clrf	7
  3596  018B  1401               	bsf	1,0
  3597  018C                     i1l125:	
  3598                           
  3599                           ;My_header.h: 109: bt->cnt_sw = 0;
  3600  018C  0873               	movf	button_timer_interrupt@bt,w
  3601  018D  0086               	movwf	6
  3602  018E  0187               	clrf	7
  3603  018F  3000               	movlw	0
  3604  0190  3FC0               	movwi [0]fsr1
  3605  0191  3FC1               	movwi [1]fsr1
  3606                           
  3607                           ;My_header.h: 110: bt->flags &= 0x0F;
  3608  0192  300F               	movlw	15
  3609  0193  00F1               	movwf	??_button_timer_interrupt
  3610  0194  0873               	movf	button_timer_interrupt@bt,w
  3611  0195  3E02               	addlw	2
  3612  0196  0086               	movwf	6
  3613  0197  0187               	clrf	7
  3614  0198  0871               	movf	??_button_timer_interrupt,w
  3615  0199  0581               	andwf	1,f
  3616  019A  0008               	return
  3617  019B                     __end_of_button_timer_interrupt:	
  3618                           
  3619                           	psect	text24
  3620  0526                     __ptext24:	
  3621 ;; *************** function _adc *****************
  3622 ;; Defined at:
  3623 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header.h"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  ch              1    wreg     unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  ch              1    3[COMMON] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  2    0[COMMON] unsigned int 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3637 ;;      Params:         2       0       0       0       0       0
  3638 ;;      Locals:         1       0       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0       0
  3640 ;;      Totals:         4       0       0       0       0       0
  3641 ;;Total ram usage:        4 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_isr
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function _adc
  3652  0526                     _adc:	
  3653                           
  3654                           ;incstack = 0
  3655                           ; Regs used in _adc: [wreg+status,2+status,0]
  3656                           ;adc@ch stored from wreg
  3657  0526  00F3               	movwf	adc@ch
  3658                           
  3659                           ;My_header.h: 63: ADCON0bits.ADON = 1;
  3660  0527  0021               	movlb	1	; select bank1
  3661  0528  141D               	bsf	29,0	;volatile
  3662                           
  3663                           ;My_header.h: 64: ADCON0bits.CHS = 2 - ch;
  3664  0529  0373               	decf	adc@ch,w
  3665  052A  3AFF               	xorlw	255
  3666  052B  3E02               	addlw	2
  3667  052C  00F2               	movwf	??_adc
  3668  052D  0DF2               	rlf	??_adc,f
  3669  052E  0DF2               	rlf	??_adc,f
  3670  052F  081D               	movf	29,w	;volatile
  3671  0530  0672               	xorwf	??_adc,w
  3672  0531  3983               	andlw	-125
  3673  0532  0672               	xorwf	??_adc,w
  3674  0533  009D               	movwf	29	;volatile
  3675                           
  3676                           ;My_header.h: 65: _delay((unsigned long)((20)*(32000000/4000000.0)));
  3677  0534  3035               	movlw	53
  3678  0535  00F2               	movwf	??_adc
  3679  0536                     u243_27:	
  3680  0536  0BF2               	decfsz	??_adc,f
  3681  0537  2D36               	goto	u243_27
  3682                           
  3683                           ;My_header.h: 66: ADCON0bits.GO_nDONE = 1;
  3684  0538  0021               	movlb	1	; select bank1
  3685  0539  149D               	bsf	29,1	;volatile
  3686  053A                     i1l111:	
  3687                           ;My_header.h: 67: while (ADCON0bits.GO_nDONE);
  3688                           
  3689  053A  189D               	btfsc	29,1	;volatile
  3690  053B  2D3A               	goto	i1l111
  3691                           
  3692                           ;My_header.h: 68: return ADRES;
  3693  053C  081C               	movf	28,w	;volatile
  3694  053D  01F1               	clrf	?_adc+1
  3695  053E  07F1               	addwf	?_adc+1,f
  3696  053F  081B               	movf	27,w	;volatile
  3697  0540  01F0               	clrf	?_adc
  3698  0541  07F0               	addwf	?_adc,f
  3699  0542  0008               	return
  3700  0543                     __end_of_adc:	
  3701                           
  3702                           	psect	text25
  3703  0543                     __ptext25:	
  3704 ;; *************** function ___wmul *****************
  3705 ;; Defined at:
  3706 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  multiplier      2    4[COMMON] unsigned int 
  3709 ;;  multiplicand    2    6[COMMON] unsigned int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  product         2    8[COMMON] unsigned int 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  2    4[COMMON] unsigned int 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3721 ;;      Params:         4       0       0       0       0       0
  3722 ;;      Locals:         2       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0
  3724 ;;      Totals:         6       0       0       0       0       0
  3725 ;;Total ram usage:        6 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_isr
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           
  3735                           ;psect for function ___wmul
  3736  0543                     ___wmul:	
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3740  0543  01F8               	clrf	___wmul@product
  3741  0544  01F9               	clrf	___wmul@product+1
  3742  0545                     i1l1812:	
  3743  0545  1C74               	btfss	___wmul@multiplier,0
  3744  0546  2D4B               	goto	i1l405
  3745  0547  0876               	movf	___wmul@multiplicand,w
  3746  0548  07F8               	addwf	___wmul@product,f
  3747  0549  0877               	movf	___wmul@multiplicand+1,w
  3748  054A  3DF9               	addwfc	___wmul@product+1,f
  3749  054B                     i1l405:	
  3750  054B  3001               	movlw	1
  3751  054C                     u175_25:	
  3752  054C  35F6               	lslf	___wmul@multiplicand,f
  3753  054D  0DF7               	rlf	___wmul@multiplicand+1,f
  3754  054E  0B89               	decfsz	9,f
  3755  054F  2D4C               	goto	u175_25
  3756  0550  3001               	movlw	1
  3757  0551                     u176_25:	
  3758  0551  36F5               	lsrf	___wmul@multiplier+1,f
  3759  0552  0CF4               	rrf	___wmul@multiplier,f
  3760  0553  0B89               	decfsz	9,f
  3761  0554  2D51               	goto	u176_25
  3762  0555  0875               	movf	___wmul@multiplier+1,w
  3763  0556  0474               	iorwf	___wmul@multiplier,w
  3764  0557  1D03               	skipz
  3765  0558  2D45               	goto	i1l1812
  3766  0559  0879               	movf	___wmul@product+1,w
  3767  055A  01F5               	clrf	?___wmul+1
  3768  055B  07F5               	addwf	?___wmul+1,f
  3769  055C  0878               	movf	___wmul@product,w
  3770  055D  01F4               	clrf	?___wmul
  3771  055E  07F4               	addwf	?___wmul,f
  3772  055F  0008               	return
  3773  0560                     __end_of___wmul:	
  3774  007E                     btemp	set	126	;btemp
  3775  007E                     pic14e$flags	set	126
  3776  007E                     wtemp	set	126
  3777  007E                     wtemp0	set	126
  3778  0080                     wtemp1	set	128
  3779  0082                     wtemp2	set	130
  3780  0084                     wtemp3	set	132
  3781  0086                     wtemp4	set	134
  3782  0088                     wtemp5	set	136
  3783  007F                     wtemp6	set	127
  3784  007E                     ttemp	set	126
  3785  007E                     ttemp0	set	126
  3786  0081                     ttemp1	set	129
  3787  0084                     ttemp2	set	132
  3788  0087                     ttemp3	set	135
  3789  007F                     ttemp4	set	127
  3790  007E                     ltemp	set	126
  3791  007E                     ltemp0	set	126
  3792  0082                     ltemp1	set	130
  3793  0086                     ltemp2	set	134
  3794  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      28
    BANK1            80     51      79
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_push@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    S230ringbuf$buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK1[50]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_RA5(BANK1[3]), sw_RA4(BANK1[3]), sw_RA3(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_lchika
    _lchika->___awdiv
    ___wmul->_adc

Critical Paths under _main in BANK0

    _main->_display
    _main_init->_UART_init
    _main_init->_timer0_init
    _main_init->_timer1_init
    _display->___lwdiv
    _tx_send->_ringbuf_push
    ___lwdiv->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0    4748
                                             19 BANK0      2     2      0
                                              0 BANK1     51    51      0
                                _LED
                                _OUT
                                 _SW
                            _display
                          _main_init
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     463
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0     262
                          _UART_init
                           _adc_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      31
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      34
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             1     1      0      62
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0    2373
                                             18 BANK0      1     1      0
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (2) _tx_send                                              2     2      0     421
                                              8 BANK0      2     2      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (3) _ringbuf_push                                         4     3      1     390
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     856
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1003
                                             10 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SW                                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     609
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1     747
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0    3261
                                              0 BANK0      4     4      0
                             ___wmul
                                _adc
             _button_timer_interrupt
                             _lchika
                        _ringbuf_num
                        _ringbuf_pop
                              i1_OUT
 ---------------------------------------------------------------------------------
 (5) i1_OUT                                                2     1      1     114
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (5) _ringbuf_pop                                          4     4      0     289
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          2     2      0     217
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _lchika                                               5     5      0    1146
                                              9 COMMON     5     5      0
                            ___awdiv
                              i1_LED
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) i1_LED                                                2     1      1     166
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     478
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _button_timer_interrupt                               4     3      1     918
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _adc                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     270
                                              4 COMMON     6     2      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED
   _OUT
   _SW
   _display
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _tx_send
       _ringbuf_push
   _main_init
     _UART_init
     _adc_init
     _timer0_init
     _timer1_init
   _ringbuf_init

 _isr (ROOT)
   ___wmul
     _adc (ARG)
   _adc
   _button_timer_interrupt
   _lchika
     ___awdiv
     i1_LED
     i1___lwdiv
   _ringbuf_num
   _ringbuf_pop
   i1_OUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      79       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     33      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      79      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jan 13 22:30:24 2015

                              _v 00D9                      __CFG_CP$OFF 0000                               _SW 0560  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0076                              ?_SW 0070  
                            l300 04D9                              l305 057B                              l318 02E5  
                            l280 0436                              l281 043C                              l291 045D  
                            l284 043F                              l285 0445                              l295 04B5  
                            l287 0448                              l288 044E                              l297 04BD  
                            l298 04C5                              SW@b 0024                              _RA3 0063  
                            _RA4 0064                              _LED 04B2                              _RA5 0065  
                   __CFG_CPD$OFF 0000                              _OUT 0433                              _adc 0526  
                            _cnt 0035                              _cut 00D3                              _isr 0004  
                   __CFG_BORV$LO 0000                              wreg 0009                             ??_SW 0024  
                   __CFG_LVP$OFF 0000                             LED@b 0025                             ?_LED 0024  
                           ?_OUT 0024                             ?_adc 0070                             l2102 03CB  
                           l2106 03D4                             l2150 0563                             l2144 04CD  
                           l2080 0366                             l2072 0348                             l2138 0451  
                           l2154 0567                             l2074 0354                             l2164 056F  
                           l2084 036F                             l2244 02BC                             l2158 056B  
                           l2096 03B3                             l2098 03BF                             OUT@b 0025  
                           ?_isr 0070                             u2105 0355                             u2115 035F  
                           u2125 0367                             u2240 04BA                             u2155 03B6  
                           u2260 04C2                             u2085 034B                             u2175 03C5  
                           u2280 04CA                             u2185 03CC                             _SPEN 0CEF  
                           _WPUB 020D                     __CFG_WRT$OFF 0000                             _cnt0 0038  
                           _cntf 00DF                             _main 0282         button_timer_interrupt@bt 0073  
                    main@ringbuf 00A0                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             isr@i 0023  
                           ltemp 007E                             start 00C8                             ttemp 007E  
                           wtemp 007E                    __CFG_IESO$OFF 0000                            ??_LED 0025  
                          ??_OUT 0025                            ??_adc 0072                            ??_isr 0020  
                  __CFG_PLLEN$ON 0000                            ?_main 0070                  __end_of___awdiv 033F  
                          _ADRES 009B                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                ___awdiv@divisor 0070                            _LATB0 0868                            _LATB3 086B  
                          _LATA6 0866                            _LATB5 086D                            _LATA7 0867  
                          _LATB6 086E                  __end_of___lwdiv 0376                            i1l111 053A  
                          i1l120 011C                            i1l121 012C                            i1l300 0525  
                          i1l125 018C                            i1l119 010C                            i1l250 0023  
                          i1l260 00C3                            i1l252 00B0                            i1l405 054B  
                          i1l280 048B                            i1l281 0491                            i1l249 0025  
                __end_of___lwmod 03DB                            i1l291 04B1                            i1l284 0494  
                          i1l285 049A                            i1l295 0502                            i1l287 049D  
                          i1l288 04A3                            i1l297 050A                            i1l298 0512  
                ___awdiv@counter 0075                            i1_LED 0500                            _RCSTA 019D  
                          i1_OUT 0489                            _TMR1H 0017                            _TMR1L 0016  
                          _TRISA 008C                            _TRISB 008D                            _TXREG 019A  
                          _TXSTA 019E                   __CFG_FCMEN$OFF 0000                  __end_of_display 0214  
                          adc@ch 0073               __size_of_UART_init 0012            ringbuf_push@asciicode 0024  
                          main@i 00D2                   __CFG_BOREN$OFF 0000                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                  __end_of_tx_send 05F1               __size_ofi1___lwdiv 0036  
                 __CFG_MCLRE$OFF 0000                  __initialization 00CA                     __end_of_main 02EC  
            ringbuf_init@bufsize 0025                           ??_main 0033                           ?i1_LED 0070  
                         ?i1_OUT 0070                           _BCL1IF 0093                 ___awdiv@dividend 0072  
                         i1LED@b 0071                           _ANSELA 018C                           _ANSELB 018D  
               __end_of_adc_init 05B0                           i1l2124 0431                           u111_25 030C  
                         i1l1510 0338                           i1l1502 0327                           i1l2214 009F  
                         i1l2206 0052                           i1l2216 00A7                           i1l1506 0330  
                         i1l1612 00FC                           i1l1630 0165                           i1l1622 013D  
                         i1l1634 0179                           i1l1626 0151                           i1l1812 0545  
                         i1l1484 0301                           i1l1580 038A                           u113_25 0316  
                         i1l1494 0309                           i1l1478 02F6                           i1l1566 051A  
                         i1l1590 03A5                           i1l1496 0315                           i1l1752 0263  
                         i1l1760 027D                           i1l1832 04A6                           i1l1586 039C  
                         i1l1578 037E                           i1l1746 022D                           i1l1666 0477  
                         u114_25 0320                           u131_20 0507                           i1OUT@b 0071  
                         u115_25 0328                           u140_25 038B                           u133_20 050F  
                         u141_25 0395                           u150_25 0135                           u142_25 039D  
                         u135_20 0517                           u138_25 0381                           _FVRCON 0117  
                         u147_25 0105                           u243_27 0536                           u148_25 0115  
                         u149_25 0125                           u165_25 0258                           u175_25 054C  
                         u239_25 00BD                           u176_25 0551                           _OSCCON 0099  
                         _SPBRGH 019C                           _SPBRGL 019B                           _SSP1IF 008B  
                 __CFG_PWRTE$OFF 0000                     ?_ringbuf_pop 0070                     ?_ringbuf_num 0070  
                         ___wmul 0543                __end_of_UART_init 05D4                        ??___awdiv 0074  
                   ?_timer0_init 0070                     ?_timer1_init 0070                        ??___lwdiv 002E  
                      ??___lwmod 0028                           _lchika 0214                 ___awdiv@quotient 0077  
                         _sw_RA3 00E6                           _sw_RA4 00E9                           _sw_RA5 00EC  
                         _tx_buf 00E2                        ??_display 0032                __end_ofi1___lwdiv 03AC  
                UART_init@device 0024                        ??_tx_send 0028          __end_of__initialization 00DE  
                  __end_ofi1_LED 0526                    __end_ofi1_OUT 04B2                   __pcstackCOMMON 0070  
                   __pidataBANK0 05F7                       __end_of_SW 057C                          ??i1_LED 0071  
                        ??i1_OUT 0071                   _OPTION_REGbits 0095               __size_of_main_init 0026  
                     __pbssBANK0 0035                       __pbssBANK1 00D3                       __pmaintext 0282  
                        ?___wmul 0074                       __pintentry 0004                          ?_lchika 0070  
                      ?_adc_init 0070                          _SSP1ADD 0212                          _SSP1BUF 0211  
           timer1_init@prescaler 0025         ??_button_timer_interrupt 0071                    ?_ringbuf_init 0024  
                        ___awdiv 02EC                    ?_ringbuf_push 0024                  __size_of___wmul 001D  
                        ___lwdiv 033F                          ___lwmod 03AC             __size_of_ringbuf_pop 002C  
           __size_of_ringbuf_num 002B                  __CFG_STVREN$OFF 0000                  __size_of_lchika 006E  
              __end_of_main_init 0500             __size_of_timer0_init 0012                       ??_adc_init 0024  
           __size_of_timer1_init 0011                          __ptext1 057C                          __ptext2 04DA  
                        __ptext3 05D4                          __ptext4 05B0                          __ptext5 0597  
                        __ptext6 05C2                          __ptext7 019B                          __ptext8 05E5  
                        __ptext9 03DB                          _display 019B                     __size_of_LED 0028  
                      _T1CONbits 0018                     __size_of_OUT 002B                i1___lwdiv@divisor 0070  
                   __size_of_adc 001D                     __size_of_isr 00C4                i1___lwdiv@counter 0077  
                        clrloop0 05F2                          _tx_send 05E5                          lchika@i 007D  
           end_of_initialization 00DE                   ??_ringbuf_init 0026                   ??_ringbuf_push 0025  
                      _UART_init 05C2                 __CFG_FOSC$INTOSC 0000                        i1___lwdiv 0376  
__size_of_button_timer_interrupt 00B9                   ringbuf_init@rb 0027                   ringbuf_pop@ret 0072  
                 __end_of___wmul 0560                   ringbuf_push@rb 0027                   __end_of_lchika 0282  
                     ?_UART_init 0024              start_initialization 00CA                      __end_of_LED 04DA  
                    __end_of_OUT 045E                      __end_of_adc 0543                      __end_of_isr 00C8  
                     ?i1___lwdiv 0070                         ??___wmul 0078                      __pdataBANK0 003A  
                       ??_lchika 0079           _button_timer_interrupt 00E2                __size_of_adc_init 0019  
                      ___latbits 0001                         LED@value 0024                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0             __end_of_ringbuf_init 0597             __end_of_ringbuf_push 0407  
               tx_send@asciicode 0029                    adc_init@p_ref 0024                 ___lwdiv@dividend 002C  
                       ?___awdiv 0070                         ?___lwdiv 002A                         ?___lwmod 0024  
                    ??_UART_init 0026                         ?_display 0070                   __size_ofi1_LED 0026  
                      _main_init 04DA                   __size_ofi1_OUT 0029                         OUT@value 0024  
               ___lwdiv@quotient 0030                      ??i1___lwdiv 0074                         ?_tx_send 0070  
                    __size_of_SW 001C         ringbuf_init@internal_buf 0024                   ___wmul@product 0078  
                      clear_ram0 05F1                         _PIE1bits 0091                         _PIR1bits 0011  
                  ??_ringbuf_pop 0070                    ??_ringbuf_num 0070                         _SSP1CON1 0215  
                       _SSP1CON2 0216                    ??_timer0_init 0024                    ??_timer1_init 0024  
                       _SSP1STAT 0214                       _ADCON0bits 009D                       _ADCON1bits 009E  
              ___wmul@multiplier 0074   button_timer_interrupt@sw_value 0070                       ?_main_init 0070  
                  ringbuf_pop@rb 0073                    ringbuf_num@rb 0071               LCD_SetCursor@F2875 003A  
               __size_of___awdiv 0053                 __size_of___lwdiv 0037                 __size_of___lwmod 002F  
                       _adc_init 0597              __end_of_ringbuf_pop 0433              __end_of_ringbuf_num 0489  
                     i1LED@value 0070              __end_of_timer0_init 05C2            __size_of_ringbuf_init 001B  
            __end_of_timer1_init 05E5                 __size_of_display 0079            __size_of_ringbuf_push 002C  
                ___lwdiv@divisor 002A                  ___lwdiv@counter 002F             timer0_init@prescaler 0025  
                       __ptext10 03AC                         __ptext11 033F                         __ptext20 0376  
                       __ptext12 0560                         __ptext21 0500                         __ptext13 0433  
                       __ptext22 02EC                         __ptext14 04B2                         __ptext23 00E2  
                       __ptext24 0526                         __ptext16 0489                         __ptext25 0543  
                       __ptext17 0407                         __ptext18 045E                         __ptext19 0214  
                   _SSP1CON2bits 0216                 __size_of_tx_send 000C               i1___lwdiv@dividend 0072  
                  __size_of_main 006A          ?_button_timer_interrupt 0070                     _ringbuf_init 057C  
                   _ringbuf_push 03DB                         display@i 0032                       i1OUT@value 0070  
             i1___lwdiv@quotient 0075                      ??_main_init 0026                       _INTCONbits 000B  
                    pic14e$flags 007E                         intlevel1 0000                 ___lwmod@dividend 0026  
              __CFG_CLKOUTEN$OFF 0000   __end_of_button_timer_interrupt 019B                      _ringbuf_pop 0407  
                    _ringbuf_num 045E                      _timer0_init 05B0                      _timer1_init 05D4  
                ___lwmod@divisor 0024                  ___lwmod@counter 0029  
