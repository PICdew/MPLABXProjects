

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 22:40:47 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155                           	dabs	1,0xD00,48,_BDT
   156                           	dabs	1,0xD38,8,_CtrlTrfData
   157                           	dabs	1,0xD30,8,_SetupPkt
   158  0000                     
   159                           	psect	idataCOMRAM
   160  01623B                     __pidataCOMRAM:
   161                           	opt stack 0
   162                           
   163                           ;initializer for sleep_loop@prev_power_sw
   164  01623B  01                 	db	1
   165                           
   166                           	psect	idataBANK0
   167  016239                     __pidataBANK0:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _ctmu_ratio
   171  016239  5A                 	db	90
   172                           
   173                           ;initializer for epoch_to_caltime@month_cache
   174  01623A  01                 	db	1
   175                           
   176                           	psect	idataBANK1
   177  016236                     __pidataBANK1:
   178                           	opt stack 0
   179                           
   180                           ;initializer for I2C_LCD_SetCursor@F8672
   181  016236  00                 	db	0
   182  016237  40                 	db	64
   183                           
   184                           ;initializer for rx_loop@comm_buf_init
   185  016238  01                 	db	1
   186                           
   187                           	psect	mediumconst
   188  00FB4E                     __pmediumconst:
   189                           	opt stack 0
   190  00FB4E  00                 	db	0
   191  00FB4F                     _USB_SD_Ptr:
   192                           	opt stack 0
   193  00FB4F  30                 	db	low _sd000
   194  00FB50  FC                 	db	high _sd000
   195  00FB51  9A                 	db	low _sd001
   196  00FB52  FB                 	db	high _sd001
   197  00FB53  CE                 	db	low _sd002
   198  00FB54  FB                 	db	high _sd002
   199  00FB55                     __end_of_USB_SD_Ptr:
   200                           	opt stack 0
   201  00FB55                     _USB_CD_Ptr:
   202                           	opt stack 0
   203  00FB55  57                 	db	low _configDescriptor1
   204  00FB56  FB                 	db	high _configDescriptor1
   205  00FB57                     __end_of_USB_CD_Ptr:
   206                           	opt stack 0
   207  00FB57                     _configDescriptor1:
   208                           	opt stack 0
   209  00FB57  09                 	db	9
   210  00FB58  02                 	db	2
   211  00FB59  43                 	db	67
   212  00FB5A  00                 	db	0
   213  00FB5B  02                 	db	2
   214  00FB5C  01                 	db	1
   215  00FB5D  00                 	db	0
   216  00FB5E  C0                 	db	192
   217  00FB5F  32                 	db	50
   218  00FB60  09                 	db	9
   219  00FB61  04                 	db	4
   220  00FB62  00                 	db	0
   221  00FB63  00                 	db	0
   222  00FB64  01                 	db	1
   223  00FB65  02                 	db	2
   224  00FB66  02                 	db	2
   225  00FB67  01                 	db	1
   226  00FB68  00                 	db	0
   227  00FB69  05                 	db	5
   228  00FB6A  24                 	db	36
   229  00FB6B  00                 	db	0
   230  00FB6C  10                 	db	16
   231  00FB6D  01                 	db	1
   232  00FB6E  04                 	db	4
   233  00FB6F  24                 	db	36
   234  00FB70  02                 	db	2
   235  00FB71  02                 	db	2
   236  00FB72  05                 	db	5
   237  00FB73  24                 	db	36
   238  00FB74  06                 	db	6
   239  00FB75  00                 	db	0
   240  00FB76  01                 	db	1
   241  00FB77  05                 	db	5
   242  00FB78  24                 	db	36
   243  00FB79  01                 	db	1
   244  00FB7A  00                 	db	0
   245  00FB7B  01                 	db	1
   246  00FB7C  07                 	db	7
   247  00FB7D  05                 	db	5
   248  00FB7E  81                 	db	129
   249  00FB7F  03                 	db	3
   250  00FB80  08                 	db	8
   251  00FB81  00                 	db	0
   252  00FB82  02                 	db	2
   253  00FB83  09                 	db	9
   254  00FB84  04                 	db	4
   255  00FB85  01                 	db	1
   256  00FB86  00                 	db	0
   257  00FB87  02                 	db	2
   258  00FB88  0A                 	db	10
   259  00FB89  00                 	db	0
   260  00FB8A  00                 	db	0
   261  00FB8B  00                 	db	0
   262  00FB8C  07                 	db	7
   263  00FB8D  05                 	db	5
   264  00FB8E  02                 	db	2
   265  00FB8F  02                 	db	2
   266  00FB90  40                 	db	64
   267  00FB91  00                 	db	0
   268  00FB92  00                 	db	0
   269  00FB93  07                 	db	7
   270  00FB94  05                 	db	5
   271  00FB95  82                 	db	130
   272  00FB96  02                 	db	2
   273  00FB97  40                 	db	64
   274  00FB98  00                 	db	0
   275  00FB99  00                 	db	0
   276  00FB9A                     __end_of_configDescriptor1:
   277                           	opt stack 0
   278  00FB9A                     _sd001:
   279                           	opt stack 0
   280  00FB9A  34                 	db	52
   281  00FB9B  03                 	db	3
   282  00FB9C  004D               	dw	77
   283  00FB9E  0069               	dw	105
   284  00FBA0  0063               	dw	99
   285  00FBA2  0072               	dw	114
   286  00FBA4  006F               	dw	111
   287  00FBA6  0063               	dw	99
   288  00FBA8  0068               	dw	104
   289  00FBAA  0069               	dw	105
   290  00FBAC  0070               	dw	112
   291  00FBAE  0020               	dw	32
   292  00FBB0  0054               	dw	84
   293  00FBB2  0065               	dw	101
   294  00FBB4  0063               	dw	99
   295  00FBB6  0068               	dw	104
   296  00FBB8  006E               	dw	110
   297  00FBBA  006F               	dw	111
   298  00FBBC  006C               	dw	108
   299  00FBBE  006F               	dw	111
   300  00FBC0  0067               	dw	103
   301  00FBC2  0079               	dw	121
   302  00FBC4  0020               	dw	32
   303  00FBC6  0049               	dw	73
   304  00FBC8  006E               	dw	110
   305  00FBCA  0063               	dw	99
   306  00FBCC  002E               	dw	46
   307  00FBCE                     __end_of_sd001:
   308                           	opt stack 0
   309  00FBCE                     _sd002:
   310                           	opt stack 0
   311  00FBCE  34                 	db	52
   312  00FBCF  03                 	db	3
   313  00FBD0  0043               	dw	67
   314  00FBD2  0044               	dw	68
   315  00FBD4  0043               	dw	67
   316  00FBD6  0020               	dw	32
   317  00FBD8  0052               	dw	82
   318  00FBDA  0053               	dw	83
   319  00FBDC  002D               	dw	45
   320  00FBDE  0032               	dw	50
   321  00FBE0  0033               	dw	51
   322  00FBE2  0032               	dw	50
   323  00FBE4  0020               	dw	32
   324  00FBE6  0045               	dw	69
   325  00FBE8  006D               	dw	109
   326  00FBEA  0075               	dw	117
   327  00FBEC  006C               	dw	108
   328  00FBEE  0061               	dw	97
   329  00FBF0  0074               	dw	116
   330  00FBF2  0069               	dw	105
   331  00FBF4  006F               	dw	111
   332  00FBF6  006E               	dw	110
   333  00FBF8  0020               	dw	32
   334  00FBFA  0044               	dw	68
   335  00FBFC  0065               	dw	101
   336  00FBFE  006D               	dw	109
   337  00FC00  006F               	dw	111
   338  00FC02                     __end_of_sd002:
   339                           	opt stack 0
   340  00FC02                     _weekday_3char:
   341                           	opt stack 0
   342  00FC02  53                 	db	83
   343  00FC03  55                 	db	85
   344  00FC04  4E                 	db	78
   345  00FC05  00                 	db	0
   346  00FC06  4D                 	db	77
   347  00FC07  4F                 	db	79
   348  00FC08  4E                 	db	78
   349  00FC09  00                 	db	0
   350  00FC0A  54                 	db	84
   351  00FC0B  55                 	db	85
   352  00FC0C  45                 	db	69
   353  00FC0D  00                 	db	0
   354  00FC0E  57                 	db	87
   355  00FC0F  45                 	db	69
   356  00FC10  44                 	db	68
   357  00FC11  00                 	db	0
   358  00FC12  54                 	db	84
   359  00FC13  48                 	db	72
   360  00FC14  55                 	db	85
   361  00FC15  00                 	db	0
   362  00FC16  46                 	db	70
   363  00FC17  52                 	db	82
   364  00FC18  49                 	db	73
   365  00FC19  00                 	db	0
   366  00FC1A  53                 	db	83
   367  00FC1B  41                 	db	65
   368  00FC1C  54                 	db	84
   369  00FC1D  00                 	db	0
   370  00FC1E                     __end_of_weekday_3char:
   371                           	opt stack 0
   372  00FC1E                     _device_dsc:
   373                           	opt stack 0
   374  00FC1E  12                 	db	18
   375  00FC1F  01                 	db	1
   376  00FC20  0200               	dw	512
   377  00FC22  02                 	db	2
   378  00FC23  00                 	db	0
   379  00FC24  00                 	db	0
   380  00FC25  08                 	db	8
   381  00FC26  04D8               	dw	1240
   382  00FC28  000A               	dw	10
   383  00FC2A  0100               	dw	256
   384  00FC2C  01                 	db	1
   385  00FC2D  02                 	db	2
   386  00FC2E  00                 	db	0
   387  00FC2F  01                 	db	1
   388  00FC30                     __end_of_device_dsc:
   389                           	opt stack 0
   390  00FC30                     _sd000:
   391                           	opt stack 0
   392  00FC30  04                 	db	4
   393  00FC31  03                 	db	3
   394  00FC32  0409               	dw	1033
   395  00FC34                     __end_of_sd000:
   396                           	opt stack 0
   397  0000                     _ANCON0	set	3912
   398  0000                     _ANCON1	set	3913
   399  0000                     _PADCFG1bits	set	3900
   400  0000                     _RTCCAL	set	3902
   401  0000                     _RTCCFGbits	set	3903
   402  0000                     _RTCVALH	set	3899
   403  0000                     _RTCVALL	set	3898
   404  0000                     _T5CONbits	set	3874
   405  0000                     _UADDR	set	3896
   406  0000                     _UCFG	set	3897
   407  0000                     _UEIE	set	3895
   408  0000                     _UEP0bits	set	3878
   409  0000                     _UIE	set	3894
   410  0000                     _UIEbits	set	3894
   411  0000                     _UEP0	set	3878
   412  0000                     _UEP1	set	3879
   413  0000                     _ADRES	set	4035
   414  0000                     _ADCON0bits	set	4034
   415  0000                     _ADCON1bits	set	4033
   416  0000                     _BAUDCON1bits	set	3966
   417  0000                     _CTMUCONH	set	4019
   418  0000                     _CTMUCONHbits	set	4019
   419  0000                     _CTMUCONL	set	4018
   420  0000                     _CTMUCONLbits	set	4018
   421  0000                     _CTMUICON	set	4017
   422  0000                     _EECON2	set	4007
   423  0000                     _INTCON2bits	set	4081
   424  0000                     _INTCONbits	set	4082
   425  0000                     _IPR1bits	set	3999
   426  0000                     _IPR2bits	set	4002
   427  0000                     _IPR5bits	set	3993
   428  0000                     _OSCCONbits	set	4051
   429  0000                     _OSCTUNEbits	set	3995
   430  0000                     _PIE1bits	set	3997
   431  0000                     _PIE2bits	set	4000
   432  0000                     _PIE5bits	set	3985
   433  0000                     _PIR1bits	set	3998
   434  0000                     _PIR2bits	set	4001
   435  0000                     _PIR5bits	set	3992
   436  0000                     _PORTBbits	set	3969
   437  0000                     _RCONbits	set	4048
   438  0000                     _RCREG1	set	4015
   439  0000                     _RCSTA1bits	set	4012
   440  0000                     _SPBRG1	set	4016
   441  0000                     _SPBRGH1	set	3967
   442  0000                     _SSP1ADD	set	4040
   443  0000                     _SSP1BUF	set	4041
   444  0000                     _SSP1CON1	set	4038
   445  0000                     _SSP1CON2	set	4037
   446  0000                     _SSP1CON2bits	set	4037
   447  0000                     _SSP1STAT	set	4039
   448  0000                     _T0CONbits	set	4053
   449  0000                     _T1CONbits	set	4045
   450  0000                     _T3CONbits	set	3961
   451  0000                     _TMR1H	set	4047
   452  0000                     _TRISA	set	3986
   453  0000                     _TRISB	set	3987
   454  0000                     _TRISC	set	3988
   455  0000                     _TXREG1	set	4014
   456  0000                     _TXSTA1bits	set	4013
   457  0000                     _UCON	set	3941
   458  0000                     _UCONbits	set	3941
   459  0000                     _UEIR	set	3939
   460  0000                     _UIR	set	3938
   461  0000                     _UIRbits	set	3938
   462  0000                     _USTAT	set	3940
   463  0000                     _BCL1IF	set	32011
   464  0000                     _GIE	set	32663
   465  0000                     _LATA5	set	31821
   466  0000                     _LATA6	set	31822
   467  0000                     _LATA7	set	31823
   468  0000                     _LATB2	set	31826
   469  0000                     _LATB6	set	31830
   470  0000                     _LATB7	set	31831
   471  0000                     _LATC2	set	31834
   472  0000                     _SSP1IF	set	31987
   473  00FC34                     STR_41:
   474                           
   475                           ; BSR set to: 0
   476  00FC34  09                 	db	9
   477  00FC35  2A                 	db	42
   478  00FC36  2A                 	db	42
   479  00FC37  2A                 	db	42
   480  00FC38  2A                 	db	42
   481  00FC39  2A                 	db	42
   482  00FC3A  2A                 	db	42
   483  00FC3B  2A                 	db	42
   484  00FC3C  2A                 	db	42
   485  00FC3D  2A                 	db	42
   486  00FC3E  2A                 	db	42
   487  00FC3F  2A                 	db	42
   488  00FC40  2A                 	db	42
   489  00FC41  2A                 	db	42
   490  00FC42  2A                 	db	42
   491  00FC43  2A                 	db	42
   492  00FC44  2A                 	db	42
   493  00FC45  2A                 	db	42
   494  00FC46  2A                 	db	42
   495  00FC47  2A                 	db	42
   496  00FC48  2A                 	db	42
   497  00FC49  2A                 	db	42
   498  00FC4A  2A                 	db	42
   499  00FC4B  2A                 	db	42
   500  00FC4C  2A                 	db	42
   501  00FC4D  2A                 	db	42
   502  00FC4E  2A                 	db	42
   503  00FC4F  0A                 	db	10
   504  00FC50  09                 	db	9
   505  00FC51  2A                 	db	42
   506  00FC52  2A                 	db	42
   507  00FC53  2A                 	db	42
   508  00FC54  2A                 	db	42
   509  00FC55  20                 	db	32
   510  00FC56  43                 	db	67	;'C'
   511  00FC57  68                 	db	104	;'h'
   512  00FC58  61                 	db	97	;'a'
   513  00FC59  72                 	db	114	;'r'
   514  00FC5A  67                 	db	103	;'g'
   515  00FC5B  65                 	db	101	;'e'
   516  00FC5C  20                 	db	32
   517  00FC5D  53                 	db	83	;'S'
   518  00FC5E  74                 	db	116	;'t'
   519  00FC5F  61                 	db	97	;'a'
   520  00FC60  74                 	db	116	;'t'
   521  00FC61  69                 	db	105	;'i'
   522  00FC62  6F                 	db	111	;'o'
   523  00FC63  6E                 	db	110	;'n'
   524  00FC64  20                 	db	32
   525  00FC65  36                 	db	54	;'6'
   526  00FC66  20                 	db	32
   527  00FC67  2A                 	db	42
   528  00FC68  2A                 	db	42
   529  00FC69  2A                 	db	42
   530  00FC6A  2A                 	db	42
   531  00FC6B  0A                 	db	10
   532  00FC6C  09                 	db	9
   533  00FC6D  2A                 	db	42
   534  00FC6E  2A                 	db	42
   535  00FC6F  2A                 	db	42
   536  00FC70  2A                 	db	42
   537  00FC71  20                 	db	32
   538  00FC72  4D                 	db	77	;'M'
   539  00FC73  61                 	db	97	;'a'
   540  00FC74  64                 	db	100	;'d'
   541  00FC75  65                 	db	101	;'e'
   542  00FC76  20                 	db	32
   543  00FC77  62                 	db	98	;'b'
   544  00FC78  79                 	db	121	;'y'
   545  00FC79  20                 	db	32
   546  00FC7A  40                 	db	64	;'@'
   547  00FC7B  52                 	db	82	;'R'
   548  00FC7C  79                 	db	121	;'y'
   549  00FC7D  6F                 	db	111	;'o'
   550  00FC7E  6B                 	db	107	;'k'
   551  00FC7F  65                 	db	101	;'e'
   552  00FC80  72                 	db	114	;'r'
   553  00FC81  69                 	db	105	;'i'
   554  00FC82  20                 	db	32
   555  00FC83  2A                 	db	42
   556  00FC84  2A                 	db	42
   557  00FC85  2A                 	db	42
   558  00FC86  2A                 	db	42
   559  00FC87  0A                 	db	10
   560  00FC88  09                 	db	9
   561  00FC89  2A                 	db	42
   562  00FC8A  2A                 	db	42
   563  00FC8B  2A                 	db	42
   564  00FC8C  2A                 	db	42
   565  00FC8D  2A                 	db	42
   566  00FC8E  2A                 	db	42
   567  00FC8F  2A                 	db	42
   568  00FC90  2A                 	db	42
   569  00FC91  2A                 	db	42
   570  00FC92  2A                 	db	42
   571  00FC93  2A                 	db	42
   572  00FC94  2A                 	db	42
   573  00FC95  2A                 	db	42
   574  00FC96  2A                 	db	42
   575  00FC97  2A                 	db	42
   576  00FC98  2A                 	db	42
   577  00FC99  2A                 	db	42
   578  00FC9A  2A                 	db	42
   579  00FC9B  2A                 	db	42
   580  00FC9C  2A                 	db	42
   581  00FC9D  2A                 	db	42
   582  00FC9E  2A                 	db	42
   583  00FC9F  2A                 	db	42
   584  00FCA0  2A                 	db	42
   585  00FCA1  2A                 	db	42
   586  00FCA2  2A                 	db	42
   587  00FCA3  0A                 	db	10
   588  00FCA4  0A                 	db	10
   589  00FCA5  09                 	db	9
   590  00FCA6  63                 	db	99	;'c'
   591  00FCA7  6F                 	db	111	;'o'
   592  00FCA8  6D                 	db	109	;'m'
   593  00FCA9  6D                 	db	109	;'m'
   594  00FCAA  61                 	db	97	;'a'
   595  00FCAB  6E                 	db	110	;'n'
   596  00FCAC  64                 	db	100	;'d'
   597  00FCAD  20                 	db	32
   598  00FCAE  09                 	db	9
   599  00FCAF  6F                 	db	111	;'o'
   600  00FCB0  70                 	db	112	;'p'
   601  00FCB1  65                 	db	101	;'e'
   602  00FCB2  6C                 	db	108	;'l'
   603  00FCB3  61                 	db	97	;'a'
   604  00FCB4  6E                 	db	110	;'n'
   605  00FCB5  64                 	db	100	;'d'
   606  00FCB6  31                 	db	49	;'1'
   607  00FCB7  09                 	db	9
   608  00FCB8  6F                 	db	111	;'o'
   609  00FCB9  70                 	db	112	;'p'
   610  00FCBA  65                 	db	101	;'e'
   611  00FCBB  6C                 	db	108	;'l'
   612  00FCBC  61                 	db	97	;'a'
   613  00FCBD  6E                 	db	110	;'n'
   614  00FCBE  64                 	db	100	;'d'
   615  00FCBF  32                 	db	50	;'2'
   616  00FCC0  0A                 	db	10
   617  00FCC1  0A                 	db	10
   618  00FCC2  09                 	db	9
   619  00FCC3  70                 	db	112	;'p'
   620  00FCC4  72                 	db	114	;'r'
   621  00FCC5  69                 	db	105	;'i'
   622  00FCC6  6E                 	db	110	;'n'
   623  00FCC7  74                 	db	116	;'t'
   624  00FCC8  5F                 	db	95	;'_'
   625  00FCC9  74                 	db	116	;'t'
   626  00FCCA  69                 	db	105	;'i'
   627  00FCCB  6D                 	db	109	;'m'
   628  00FCCC  65                 	db	101	;'e'
   629  00FCCD  28                 	db	40
   630  00FCCE  74                 	db	116	;'t'
   631  00FCCF  29                 	db	41
   632  00FCD0  0A                 	db	10
   633  00FCD1  09                 	db	9
   634  00FCD2  61                 	db	97	;'a'
   635  00FCD3  64                 	db	100	;'d'
   636  00FCD4  6A                 	db	106	;'j'
   637  00FCD5  75                 	db	117	;'u'
   638  00FCD6  73                 	db	115	;'s'
   639  00FCD7  74                 	db	116	;'t'
   640  00FCD8  5F                 	db	95	;'_'
   641  00FCD9  74                 	db	116	;'t'
   642  00FCDA  69                 	db	105	;'i'
   643  00FCDB  6D                 	db	109	;'m'
   644  00FCDC  65                 	db	101	;'e'
   645  00FCDD  28                 	db	40
   646  00FCDE  61                 	db	97	;'a'
   647  00FCDF  74                 	db	116	;'t'
   648  00FCE0  29                 	db	41
   649  00FCE1  20                 	db	32
   650  00FCE2  5B                 	db	91	;'['
   651  00FCE3  68                 	db	104	;'h'
   652  00FCE4  61                 	db	97	;'a'
   653  00FCE5  6E                 	db	110	;'n'
   654  00FCE6  64                 	db	100	;'d'
   655  00FCE7  3A                 	db	58	;':'
   656  00FCE8  79                 	db	121	;'y'
   657  00FCE9  2C                 	db	44
   658  00FCEA  4D                 	db	77	;'M'
   659  00FCEB  2C                 	db	44
   660  00FCEC  64                 	db	100	;'d'
   661  00FCED  2C                 	db	44
   662  00FCEE  68                 	db	104	;'h'
   663  00FCEF  2C                 	db	44
   664  00FCF0  6D                 	db	109	;'m'
   665  00FCF1  2C                 	db	44
   666  00FCF2  73                 	db	115	;'s'
   667  00FCF3  5D                 	db	93	;']'
   668  00FCF4  20                 	db	32
   669  00FCF5  5B                 	db	91	;'['
   670  00FCF6  76                 	db	118	;'v'
   671  00FCF7  61                 	db	97	;'a'
   672  00FCF8  6C                 	db	108	;'l'
   673  00FCF9  75                 	db	117	;'u'
   674  00FCFA  65                 	db	101	;'e'
   675  00FCFB  28                 	db	40
   676  00FCFC  64                 	db	100	;'d'
   677  00FCFD  65                 	db	101	;'e'
   678  00FCFE  63                 	db	99	;'c'
   679  00FCFF  69                 	db	105	;'i'
   680  00FD00  6D                 	db	109	;'m'
   681  00FD01  61                 	db	97	;'a'
   682  00FD02  6C                 	db	108	;'l'
   683  00FD03  29                 	db	41
   684  00FD04  5D                 	db	93	;']'
   685  00FD05  0A                 	db	10
   686  00FD06  09                 	db	9
   687  00FD07  73                 	db	115	;'s'
   688  00FD08  65                 	db	101	;'e'
   689  00FD09  74                 	db	116	;'t'
   690  00FD0A  74                 	db	116	;'t'
   691  00FD0B  69                 	db	105	;'i'
   692  00FD0C  6E                 	db	110	;'n'
   693  00FD0D  67                 	db	103	;'g'
   694  00FD0E  73                 	db	115	;'s'
   695  00FD0F  28                 	db	40
   696  00FD10  73                 	db	115	;'s'
   697  00FD11  65                 	db	101	;'e'
   698  00FD12  74                 	db	116	;'t'
   699  00FD13  29                 	db	41
   700  00FD14  20                 	db	32
   701  00FD15  5B                 	db	91	;'['
   702  00FD16  70                 	db	112	;'p'
   703  00FD17  6F                 	db	111	;'o'
   704  00FD18  72                 	db	114	;'r'
   705  00FD19  74                 	db	116	;'t'
   706  00FD1A  3A                 	db	58	;':'
   707  00FD1B  6C                 	db	108	;'l'
   708  00FD1C  65                 	db	101	;'e'
   709  00FD1D  66                 	db	102	;'f'
   710  00FD1E  74                 	db	116	;'t'
   711  00FD1F  28                 	db	40
   712  00FD20  6C                 	db	108	;'l'
   713  00FD21  29                 	db	41
   714  00FD22  2C                 	db	44
   715  00FD23  63                 	db	99	;'c'
   716  00FD24  65                 	db	101	;'e'
   717  00FD25  6E                 	db	110	;'n'
   718  00FD26  74                 	db	116	;'t'
   719  00FD27  65                 	db	101	;'e'
   720  00FD28  72                 	db	114	;'r'
   721  00FD29  28                 	db	40
   722  00FD2A  63                 	db	99	;'c'
   723  00FD2B  29                 	db	41
   724  00FD2C  2C                 	db	44
   725  00FD2D  72                 	db	114	;'r'
   726  00FD2E  69                 	db	105	;'i'
   727  00FD2F  67                 	db	103	;'g'
   728  00FD30  68                 	db	104	;'h'
   729  00FD31  74                 	db	116	;'t'
   730  00FD32  28                 	db	40
   731  00FD33  72                 	db	114	;'r'
   732  00FD34  29                 	db	41
   733  00FD35  5D                 	db	93	;']'
   734  00FD36  0A                 	db	10
   735  00FD37  09                 	db	9
   736  00FD38  09                 	db	9
   737  00FD39  5B                 	db	91	;'['
   738  00FD3A  61                 	db	97	;'a'
   739  00FD3B  75                 	db	117	;'u'
   740  00FD3C  74                 	db	116	;'t'
   741  00FD3D  6F                 	db	111	;'o'
   742  00FD3E  5F                 	db	95	;'_'
   743  00FD3F  73                 	db	115	;'s'
   744  00FD40  74                 	db	116	;'t'
   745  00FD41  6F                 	db	111	;'o'
   746  00FD42  70                 	db	112	;'p'
   747  00FD43  28                 	db	40
   748  00FD44  61                 	db	97	;'a'
   749  00FD45  73                 	db	115	;'s'
   750  00FD46  29                 	db	41
   751  00FD47  2C                 	db	44
   752  00FD48  61                 	db	97	;'a'
   753  00FD49  6C                 	db	108	;'l'
   754  00FD4A  77                 	db	119	;'w'
   755  00FD4B  61                 	db	97	;'a'
   756  00FD4C  79                 	db	121	;'y'
   757  00FD4D  73                 	db	115	;'s'
   758  00FD4E  5F                 	db	95	;'_'
   759  00FD4F  6F                 	db	111	;'o'
   760  00FD50  6E                 	db	110	;'n'
   761  00FD51  28                 	db	40
   762  00FD52  61                 	db	97	;'a'
   763  00FD53  6F                 	db	111	;'o'
   764  00FD54  29                 	db	41
   765  00FD55  2C                 	db	44
   766  00FD56  69                 	db	105	;'i'
   767  00FD57  6E                 	db	110	;'n'
   768  00FD58  74                 	db	116	;'t'
   769  00FD59  65                 	db	101	;'e'
   770  00FD5A  67                 	db	103	;'g'
   771  00FD5B  72                 	db	114	;'r'
   772  00FD5C  61                 	db	97	;'a'
   773  00FD5D  74                 	db	116	;'t'
   774  00FD5E  69                 	db	105	;'i'
   775  00FD5F  6E                 	db	110	;'n'
   776  00FD60  67                 	db	103	;'g'
   777  00FD61  5F                 	db	95	;'_'
   778  00FD62  72                 	db	114	;'r'
   779  00FD63  65                 	db	101	;'e'
   780  00FD64  73                 	db	115	;'s'
   781  00FD65  65                 	db	101	;'e'
   782  00FD66  74                 	db	116	;'t'
   783  00FD67  28                 	db	40
   784  00FD68  69                 	db	105	;'i'
   785  00FD69  72                 	db	114	;'r'
   786  00FD6A  29                 	db	41
   787  00FD6B  5D                 	db	93	;']'
   788  00FD6C  0A                 	db	10
   789  00FD6D  09                 	db	9
   790  00FD6E  64                 	db	100	;'d'
   791  00FD6F  69                 	db	105	;'i'
   792  00FD70  73                 	db	115	;'s'
   793  00FD71  70                 	db	112	;'p'
   794  00FD72  6C                 	db	108	;'l'
   795  00FD73  61                 	db	97	;'a'
   796  00FD74  79                 	db	121	;'y'
   797  00FD75  28                 	db	40
   798  00FD76  64                 	db	100	;'d'
   799  00FD77  29                 	db	41
   800  00FD78  20                 	db	32
   801  00FD79  5B                 	db	91	;'['
   802  00FD7A  70                 	db	112	;'p'
   803  00FD7B  6F                 	db	111	;'o'
   804  00FD7C  72                 	db	114	;'r'
   805  00FD7D  74                 	db	116	;'t'
   806  00FD7E  3A                 	db	58	;':'
   807  00FD7F  6C                 	db	108	;'l'
   808  00FD80  65                 	db	101	;'e'
   809  00FD81  66                 	db	102	;'f'
   810  00FD82  74                 	db	116	;'t'
   811  00FD83  28                 	db	40
   812  00FD84  6C                 	db	108	;'l'
   813  00FD85  29                 	db	41
   814  00FD86  2C                 	db	44
   815  00FD87  63                 	db	99	;'c'
   816  00FD88  65                 	db	101	;'e'
   817  00FD89  6E                 	db	110	;'n'
   818  00FD8A  74                 	db	116	;'t'
   819  00FD8B  65                 	db	101	;'e'
   820  00FD8C  72                 	db	114	;'r'
   821  00FD8D  28                 	db	40
   822  00FD8E  63                 	db	99	;'c'
   823  00FD8F  29                 	db	41
   824  00FD90  2C                 	db	44
   825  00FD91  72                 	db	114	;'r'
   826  00FD92  69                 	db	105	;'i'
   827  00FD93  67                 	db	103	;'g'
   828  00FD94  68                 	db	104	;'h'
   829  00FD95  74                 	db	116	;'t'
   830  00FD96  28                 	db	40
   831  00FD97  72                 	db	114	;'r'
   832  00FD98  29                 	db	41
   833  00FD99  5D                 	db	93	;']'
   834  00FD9A  0A                 	db	10
   835  00FD9B  09                 	db	9
   836  00FD9C  09                 	db	9
   837  00FD9D  5B                 	db	91	;'['
   838  00FD9E  63                 	db	99	;'c'
   839  00FD9F  6F                 	db	111	;'o'
   840  00FDA0  6E                 	db	110	;'n'
   841  00FDA1  74                 	db	116	;'t'
   842  00FDA2  65                 	db	101	;'e'
   843  00FDA3  6E                 	db	110	;'n'
   844  00FDA4  74                 	db	116	;'t'
   845  00FDA5  3A                 	db	58	;':'
   846  00FDA6  63                 	db	99	;'c'
   847  00FDA7  75                 	db	117	;'u'
   848  00FDA8  72                 	db	114	;'r'
   849  00FDA9  72                 	db	114	;'r'
   850  00FDAA  65                 	db	101	;'e'
   851  00FDAB  6E                 	db	110	;'n'
   852  00FDAC  74                 	db	116	;'t'
   853  00FDAD  28                 	db	40
   854  00FDAE  63                 	db	99	;'c'
   855  00FDAF  29                 	db	41
   856  00FDB0  2C                 	db	44
   857  00FDB1  69                 	db	105	;'i'
   858  00FDB2  6E                 	db	110	;'n'
   859  00FDB3  74                 	db	116	;'t'
   860  00FDB4  65                 	db	101	;'e'
   861  00FDB5  67                 	db	103	;'g'
   862  00FDB6  72                 	db	114	;'r'
   863  00FDB7  61                 	db	97	;'a'
   864  00FDB8  74                 	db	116	;'t'
   865  00FDB9  65                 	db	101	;'e'
   866  00FDBA  64                 	db	100	;'d'
   867  00FDBB  5F                 	db	95	;'_'
   868  00FDBC  63                 	db	99	;'c'
   869  00FDBD  75                 	db	117	;'u'
   870  00FDBE  72                 	db	114	;'r'
   871  00FDBF  72                 	db	114	;'r'
   872  00FDC0  65                 	db	101	;'e'
   873  00FDC1  6E                 	db	110	;'n'
   874  00FDC2  74                 	db	116	;'t'
   875  00FDC3  28                 	db	40
   876  00FDC4  69                 	db	105	;'i'
   877  00FDC5  63                 	db	99	;'c'
   878  00FDC6  29                 	db	41
   879  00FDC7  2C                 	db	44
   880  00FDC8  69                 	db	105	;'i'
   881  00FDC9  6E                 	db	110	;'n'
   882  00FDCA  74                 	db	116	;'t'
   883  00FDCB  65                 	db	101	;'e'
   884  00FDCC  67                 	db	103	;'g'
   885  00FDCD  72                 	db	114	;'r'
   886  00FDCE  61                 	db	97	;'a'
   887  00FDCF  74                 	db	116	;'t'
   888  00FDD0  65                 	db	101	;'e'
   889  00FDD1  64                 	db	100	;'d'
   890  00FDD2  5F                 	db	95	;'_'
   891  00FDD3  74                 	db	116	;'t'
   892  00FDD4  69                 	db	105	;'i'
   893  00FDD5  6D                 	db	109	;'m'
   894  00FDD6  65                 	db	101	;'e'
   895  00FDD7  28                 	db	40
   896  00FDD8  69                 	db	105	;'i'
   897  00FDD9  74                 	db	116	;'t'
   898  00FDDA  29                 	db	41
   899  00FDDB  5D                 	db	93	;']'
   900  00FDDC  0A                 	db	10
   901  00FDDD  09                 	db	9
   902  00FDDE  74                 	db	116	;'t'
   903  00FDDF  6F                 	db	111	;'o'
   904  00FDE0  75                 	db	117	;'u'
   905  00FDE1  63                 	db	99	;'c'
   906  00FDE2  68                 	db	104	;'h'
   907  00FDE3  20                 	db	32
   908  00FDE4  5B                 	db	91	;'['
   909  00FDE5  72                 	db	114	;'r'
   910  00FDE6  65                 	db	101	;'e'
   911  00FDE7  73                 	db	115	;'s'
   912  00FDE8  65                 	db	101	;'e'
   913  00FDE9  74                 	db	116	;'t'
   914  00FDEA  28                 	db	40
   915  00FDEB  72                 	db	114	;'r'
   916  00FDEC  29                 	db	41
   917  00FDED  2C                 	db	44
   918  00FDEE  69                 	db	105	;'i'
   919  00FDEF  6E                 	db	110	;'n'
   920  00FDF0  69                 	db	105	;'i'
   921  00FDF1  74                 	db	116	;'t'
   922  00FDF2  69                 	db	105	;'i'
   923  00FDF3  61                 	db	97	;'a'
   924  00FDF4  6C                 	db	108	;'l'
   925  00FDF5  69                 	db	105	;'i'
   926  00FDF6  7A                 	db	122	;'z'
   927  00FDF7  65                 	db	101	;'e'
   928  00FDF8  28                 	db	40
   929  00FDF9  69                 	db	105	;'i'
   930  00FDFA  6E                 	db	110	;'n'
   931  00FDFB  69                 	db	105	;'i'
   932  00FDFC  74                 	db	116	;'t'
   933  00FDFD  29                 	db	41
   934  00FDFE  5D                 	db	93	;']'
   935  00FDFF  20                 	db	32
   936  00FE00  5B                 	db	91	;'['
   937  00FE01  76                 	db	118	;'v'
   938  00FE02  61                 	db	97	;'a'
   939  00FE03  6C                 	db	108	;'l'
   940  00FE04  75                 	db	117	;'u'
   941  00FE05  65                 	db	101	;'e'
   942  00FE06  28                 	db	40
   943  00FE07  25                 	db	37
   944  00FE08  29                 	db	41
   945  00FE09  5D                 	db	93	;']'
   946  00FE0A  0A                 	db	10
   947  00FE0B  00                 	db	0
   948  00FE0C                     STR_58:
   949                           
   950                           ; BSR set to: 0
   951  00FE0C  09                 	db	9
   952  00FE0D  69                 	db	105	;'i'
   953  00FE0E  6E                 	db	110	;'n'
   954  00FE0F  76                 	db	118	;'v'
   955  00FE10  61                 	db	97	;'a'
   956  00FE11  6C                 	db	108	;'l'
   957  00FE12  69                 	db	105	;'i'
   958  00FE13  64                 	db	100	;'d'
   959  00FE14  20                 	db	32
   960  00FE15  64                 	db	100	;'d'
   961  00FE16  61                 	db	97	;'a'
   962  00FE17  74                 	db	116	;'t'
   963  00FE18  61                 	db	97	;'a'
   964  00FE19  0A                 	db	10
   965  00FE1A  09                 	db	9
   966  00FE1B  69                 	db	105	;'i'
   967  00FE1C  6E                 	db	110	;'n'
   968  00FE1D  69                 	db	105	;'i'
   969  00FE1E  74                 	db	116	;'t'
   970  00FE1F  69                 	db	105	;'i'
   971  00FE20  61                 	db	97	;'a'
   972  00FE21  6C                 	db	108	;'l'
   973  00FE22  69                 	db	105	;'i'
   974  00FE23  7A                 	db	122	;'z'
   975  00FE24  69                 	db	105	;'i'
   976  00FE25  6E                 	db	110	;'n'
   977  00FE26  67                 	db	103	;'g'
   978  00FE27  20                 	db	32
   979  00FE28  66                 	db	102	;'f'
   980  00FE29  61                 	db	97	;'a'
   981  00FE2A  69                 	db	105	;'i'
   982  00FE2B  6C                 	db	108	;'l'
   983  00FE2C  65                 	db	101	;'e'
   984  00FE2D  64                 	db	100	;'d'
   985  00FE2E  0A                 	db	10
   986  00FE2F  00                 	db	0
   987  00FE30                     STR_57:
   988                           
   989                           ; BSR set to: 0
   990  00FE30  09                 	db	9
   991  00FE31  69                 	db	105	;'i'
   992  00FE32  6E                 	db	110	;'n'
   993  00FE33  69                 	db	105	;'i'
   994  00FE34  74                 	db	116	;'t'
   995  00FE35  69                 	db	105	;'i'
   996  00FE36  61                 	db	97	;'a'
   997  00FE37  6C                 	db	108	;'l'
   998  00FE38  69                 	db	105	;'i'
   999  00FE39  7A                 	db	122	;'z'
  1000  00FE3A  69                 	db	105	;'i'
  1001  00FE3B  6E                 	db	110	;'n'
  1002  00FE3C  67                 	db	103	;'g'
  1003  00FE3D  20                 	db	32
  1004  00FE3E  63                 	db	99	;'c'
  1005  00FE3F  6F                 	db	111	;'o'
  1006  00FE40  6D                 	db	109	;'m'
  1007  00FE41  70                 	db	112	;'p'
  1008  00FE42  6C                 	db	108	;'l'
  1009  00FE43  65                 	db	101	;'e'
  1010  00FE44  74                 	db	116	;'t'
  1011  00FE45  65                 	db	101	;'e'
  1012  00FE46  0A                 	db	10
  1013  00FE47  00                 	db	0
  1014  00FE48                     STR_68:
  1015                           
  1016                           ; BSR set to: 0
  1017  00FE48  69                 	db	105	;'i'
  1018  00FE49  6E                 	db	110	;'n'
  1019  00FE4A  74                 	db	116	;'t'
  1020  00FE4B  65                 	db	101	;'e'
  1021  00FE4C  67                 	db	103	;'g'
  1022  00FE4D  72                 	db	114	;'r'
  1023  00FE4E  61                 	db	97	;'a'
  1024  00FE4F  74                 	db	116	;'t'
  1025  00FE50  65                 	db	101	;'e'
  1026  00FE51  64                 	db	100	;'d'
  1027  00FE52  5F                 	db	95	;'_'
  1028  00FE53  63                 	db	99	;'c'
  1029  00FE54  75                 	db	117	;'u'
  1030  00FE55  72                 	db	114	;'r'
  1031  00FE56  72                 	db	114	;'r'
  1032  00FE57  65                 	db	101	;'e'
  1033  00FE58  6E                 	db	110	;'n'
  1034  00FE59  74                 	db	116	;'t'
  1035  00FE5A  00                 	db	0
  1036  00FE5B                     STR_61:
  1037                           
  1038                           ; BSR set to: 0
  1039  00FE5B  09                 	db	9
  1040  00FE5C  73                 	db	115	;'s'
  1041  00FE5D  65                 	db	101	;'e'
  1042  00FE5E  74                 	db	116	;'t'
  1043  00FE5F  69                 	db	105	;'i'
  1044  00FE60  6E                 	db	110	;'n'
  1045  00FE61  67                 	db	103	;'g'
  1046  00FE62  20                 	db	32
  1047  00FE63  63                 	db	99	;'c'
  1048  00FE64  6F                 	db	111	;'o'
  1049  00FE65  6D                 	db	109	;'m'
  1050  00FE66  70                 	db	112	;'p'
  1051  00FE67  6C                 	db	108	;'l'
  1052  00FE68  65                 	db	101	;'e'
  1053  00FE69  74                 	db	116	;'t'
  1054  00FE6A  65                 	db	101	;'e'
  1055  00FE6B  0A                 	db	10
  1056  00FE6C  00                 	db	0
  1057  00FE6D                     STR_8:
  1058                           
  1059                           ; BSR set to: 0
  1060  00FE6D  43                 	db	67	;'C'
  1061  00FE6E  68                 	db	104	;'h'
  1062  00FE6F  61                 	db	97	;'a'
  1063  00FE70  72                 	db	114	;'r'
  1064  00FE71  67                 	db	103	;'g'
  1065  00FE72  65                 	db	101	;'e'
  1066  00FE73  20                 	db	32
  1067  00FE74  53                 	db	83	;'S'
  1068  00FE75  74                 	db	116	;'t'
  1069  00FE76  61                 	db	97	;'a'
  1070  00FE77  74                 	db	116	;'t'
  1071  00FE78  69                 	db	105	;'i'
  1072  00FE79  6F                 	db	111	;'o'
  1073  00FE7A  6E                 	db	110	;'n'
  1074  00FE7B  20                 	db	32
  1075  00FE7C  36                 	db	54	;'6'
  1076  00FE7D  00                 	db	0
  1077  00FE7E                     STR_18:
  1078                           
  1079                           ; BSR set to: 0
  1080  00FE7E  54                 	db	84	;'T'
  1081  00FE7F  6F                 	db	111	;'o'
  1082  00FE80  67                 	db	103	;'g'
  1083  00FE81  67                 	db	103	;'g'
  1084  00FE82  6C                 	db	108	;'l'
  1085  00FE83  65                 	db	101	;'e'
  1086  00FE84  20                 	db	32
  1087  00FE85  41                 	db	65	;'A'
  1088  00FE86  75                 	db	117	;'u'
  1089  00FE87  74                 	db	116	;'t'
  1090  00FE88  6F                 	db	111	;'o'
  1091  00FE89  53                 	db	83	;'S'
  1092  00FE8A  74                 	db	116	;'t'
  1093  00FE8B  6F                 	db	111	;'o'
  1094  00FE8C  70                 	db	112	;'p'
  1095  00FE8D  3F                 	db	63	;'?'
  1096  00FE8E  00                 	db	0
  1097  00FE8F                     STR_17:
  1098                           
  1099                           ; BSR set to: 0
  1100  00FE8F  49                 	db	73	;'I'
  1101  00FE90  6E                 	db	110	;'n'
  1102  00FE91  74                 	db	116	;'t'
  1103  00FE92  65                 	db	101	;'e'
  1104  00FE93  67                 	db	103	;'g'
  1105  00FE94  72                 	db	114	;'r'
  1106  00FE95  61                 	db	97	;'a'
  1107  00FE96  74                 	db	116	;'t'
  1108  00FE97  20                 	db	32
  1109  00FE98  52                 	db	82	;'R'
  1110  00FE99  65                 	db	101	;'e'
  1111  00FE9A  73                 	db	115	;'s'
  1112  00FE9B  65                 	db	101	;'e'
  1113  00FE9C  74                 	db	116	;'t'
  1114  00FE9D  65                 	db	101	;'e'
  1115  00FE9E  64                 	db	100	;'d'
  1116  00FE9F  00                 	db	0
  1117  00FEA0                     STR_16:
  1118                           
  1119                           ; BSR set to: 0
  1120  00FEA0  49                 	db	73	;'I'
  1121  00FEA1  6E                 	db	110	;'n'
  1122  00FEA2  74                 	db	116	;'t'
  1123  00FEA3  65                 	db	101	;'e'
  1124  00FEA4  67                 	db	103	;'g'
  1125  00FEA5  72                 	db	114	;'r'
  1126  00FEA6  61                 	db	97	;'a'
  1127  00FEA7  74                 	db	116	;'t'
  1128  00FEA8  20                 	db	32
  1129  00FEA9  52                 	db	82	;'R'
  1130  00FEAA  65                 	db	101	;'e'
  1131  00FEAB  73                 	db	115	;'s'
  1132  00FEAC  65                 	db	101	;'e'
  1133  00FEAD  74                 	db	116	;'t'
  1134  00FEAE  3F                 	db	63	;'?'
  1135  00FEAF  00                 	db	0
  1136  00FEB0                     STR_70:
  1137                           
  1138                           ; BSR set to: 0
  1139  00FEB0  69                 	db	105	;'i'
  1140  00FEB1  6E                 	db	110	;'n'
  1141  00FEB2  74                 	db	116	;'t'
  1142  00FEB3  65                 	db	101	;'e'
  1143  00FEB4  67                 	db	103	;'g'
  1144  00FEB5  72                 	db	114	;'r'
  1145  00FEB6  61                 	db	97	;'a'
  1146  00FEB7  74                 	db	116	;'t'
  1147  00FEB8  65                 	db	101	;'e'
  1148  00FEB9  64                 	db	100	;'d'
  1149  00FEBA  5F                 	db	95	;'_'
  1150  00FEBB  74                 	db	116	;'t'
  1151  00FEBC  69                 	db	105	;'i'
  1152  00FEBD  6D                 	db	109	;'m'
  1153  00FEBE  65                 	db	101	;'e'
  1154  00FEBF  00                 	db	0
  1155  00FEC0                     STR_19:
  1156                           
  1157                           ; BSR set to: 0
  1158  00FEC0  41                 	db	65	;'A'
  1159  00FEC1  6C                 	db	108	;'l'
  1160  00FEC2  77                 	db	119	;'w'
  1161  00FEC3  61                 	db	97	;'a'
  1162  00FEC4  79                 	db	121	;'y'
  1163  00FEC5  73                 	db	115	;'s'
  1164  00FEC6  20                 	db	32
  1165  00FEC7  43                 	db	67	;'C'
  1166  00FEC8  68                 	db	104	;'h'
  1167  00FEC9  61                 	db	97	;'a'
  1168  00FECA  72                 	db	114	;'r'
  1169  00FECB  67                 	db	103	;'g'
  1170  00FECC  69                 	db	105	;'i'
  1171  00FECD  6E                 	db	110	;'n'
  1172  00FECE  67                 	db	103	;'g'
  1173  00FECF  00                 	db	0
  1174  00FED0                     STR_10:
  1175                           
  1176                           ; BSR set to: 0
  1177  00FED0  53                 	db	83	;'S'
  1178  00FED1  74                 	db	116	;'t'
  1179  00FED2  61                 	db	97	;'a'
  1180  00FED3  72                 	db	114	;'r'
  1181  00FED4  74                 	db	116	;'t'
  1182  00FED5  20                 	db	32
  1183  00FED6  43                 	db	67	;'C'
  1184  00FED7  68                 	db	104	;'h'
  1185  00FED8  61                 	db	97	;'a'
  1186  00FED9  72                 	db	114	;'r'
  1187  00FEDA  67                 	db	103	;'g'
  1188  00FEDB  69                 	db	105	;'i'
  1189  00FEDC  6E                 	db	110	;'n'
  1190  00FEDD  67                 	db	103	;'g'
  1191  00FEDE  00                 	db	0
  1192  00FEDF                     STR_21:
  1193                           
  1194                           ; BSR set to: 0
  1195  00FEDF  4E                 	db	78	;'N'
  1196  00FEE0  6F                 	db	111	;'o'
  1197  00FEE1  74                 	db	116	;'t'
  1198  00FEE2  68                 	db	104	;'h'
  1199  00FEE3  69                 	db	105	;'i'
  1200  00FEE4  6E                 	db	110	;'n'
  1201  00FEE5  67                 	db	103	;'g'
  1202  00FEE6  20                 	db	32
  1203  00FEE7  64                 	db	100	;'d'
  1204  00FEE8  6F                 	db	111	;'o'
  1205  00FEE9  6E                 	db	110	;'n'
  1206  00FEEA  65                 	db	101	;'e'
  1207  00FEEB  2E                 	db	46
  1208  00FEEC  00                 	db	0
  1209  00FEED                     STR_9:
  1210                           
  1211                           ; BSR set to: 0
  1212  00FEED  4D                 	db	77	;'M'
  1213  00FEEE  61                 	db	97	;'a'
  1214  00FEEF  64                 	db	100	;'d'
  1215  00FEF0  65                 	db	101	;'e'
  1216  00FEF1  20                 	db	32
  1217  00FEF2  62                 	db	98	;'b'
  1218  00FEF3  79                 	db	121	;'y'
  1219  00FEF4  20                 	db	32
  1220  00FEF5  4B                 	db	75	;'K'
  1221  00FEF6  45                 	db	69	;'E'
  1222  00FEF7  52                 	db	82	;'R'
  1223  00FEF8  49                 	db	73	;'I'
  1224  00FEF9  00                 	db	0
  1225  00FEFA                     STR_20:
  1226                           
  1227                           ; BSR set to: 0
  1228  00FEFA  41                 	db	65	;'A'
  1229  00FEFB  75                 	db	117	;'u'
  1230  00FEFC  74                 	db	116	;'t'
  1231  00FEFD  6F                 	db	111	;'o'
  1232  00FEFE  20                 	db	32
  1233  00FEFF  53                 	db	83	;'S'
  1234  00FF00  74                 	db	116	;'t'
  1235  00FF01  6F                 	db	111	;'o'
  1236  00FF02  70                 	db	112	;'p'
  1237  00FF03  20                 	db	32
  1238  00FF04  4F                 	db	79	;'O'
  1239  00FF05  4E                 	db	78	;'N'
  1240  00FF06  00                 	db	0
  1241  00FF07                     STR_5:
  1242                           
  1243                           ; BSR set to: 0
  1244  00FF07  43                 	db	67	;'C'
  1245  00FF08  45                 	db	69	;'E'
  1246  00FF09  4E                 	db	78	;'N'
  1247  00FF0A  54                 	db	84	;'T'
  1248  00FF0B  45                 	db	69	;'E'
  1249  00FF0C  52                 	db	82	;'R'
  1250  00FF0D  20                 	db	32
  1251  00FF0E  50                 	db	80	;'P'
  1252  00FF0F  4F                 	db	79	;'O'
  1253  00FF10  52                 	db	82	;'R'
  1254  00FF11  54                 	db	84	;'T'
  1255  00FF12  00                 	db	0
  1256  00FF13                     STR_47:
  1257                           
  1258                           ; BSR set to: 0
  1259  00FF13  61                 	db	97	;'a'
  1260  00FF14  64                 	db	100	;'d'
  1261  00FF15  6A                 	db	106	;'j'
  1262  00FF16  75                 	db	117	;'u'
  1263  00FF17  73                 	db	115	;'s'
  1264  00FF18  74                 	db	116	;'t'
  1265  00FF19  5F                 	db	95	;'_'
  1266  00FF1A  74                 	db	116	;'t'
  1267  00FF1B  69                 	db	105	;'i'
  1268  00FF1C  6D                 	db	109	;'m'
  1269  00FF1D  65                 	db	101	;'e'
  1270  00FF1E  00                 	db	0
  1271  00FF1F                     STR_4:
  1272                           
  1273                           ; BSR set to: 0
  1274  00FF1F  43                 	db	67	;'C'
  1275  00FF20  65                 	db	101	;'e'
  1276  00FF21  6E                 	db	110	;'n'
  1277  00FF22  74                 	db	116	;'t'
  1278  00FF23  65                 	db	101	;'e'
  1279  00FF24  72                 	db	114	;'r'
  1280  00FF25  20                 	db	32
  1281  00FF26  50                 	db	80	;'P'
  1282  00FF27  6F                 	db	111	;'o'
  1283  00FF28  72                 	db	114	;'r'
  1284  00FF29  74                 	db	116	;'t'
  1285  00FF2A  00                 	db	0
  1286  00FF2B                     STR_7:
  1287                           
  1288                           ; BSR set to: 0
  1289  00FF2B  52                 	db	82	;'R'
  1290  00FF2C  49                 	db	73	;'I'
  1291  00FF2D  47                 	db	71	;'G'
  1292  00FF2E  48                 	db	72	;'H'
  1293  00FF2F  54                 	db	84	;'T'
  1294  00FF30  20                 	db	32
  1295  00FF31  50                 	db	80	;'P'
  1296  00FF32  4F                 	db	79	;'O'
  1297  00FF33  52                 	db	82	;'R'
  1298  00FF34  54                 	db	84	;'T'
  1299  00FF35  00                 	db	0
  1300  00FF36                     STR_88:
  1301                           
  1302                           ; BSR set to: 0
  1303  00FF36  70                 	db	112	;'p'
  1304  00FF37  72                 	db	114	;'r'
  1305  00FF38  69                 	db	105	;'i'
  1306  00FF39  6E                 	db	110	;'n'
  1307  00FF3A  74                 	db	116	;'t'
  1308  00FF3B  5F                 	db	95	;'_'
  1309  00FF3C  74                 	db	116	;'t'
  1310  00FF3D  69                 	db	105	;'i'
  1311  00FF3E  6D                 	db	109	;'m'
  1312  00FF3F  65                 	db	101	;'e'
  1313  00FF40  00                 	db	0
  1314  00FF41                     STR_55:
  1315                           
  1316                           ; BSR set to: 0
  1317  00FF41  69                 	db	105	;'i'
  1318  00FF42  6E                 	db	110	;'n'
  1319  00FF43  69                 	db	105	;'i'
  1320  00FF44  74                 	db	116	;'t'
  1321  00FF45  69                 	db	105	;'i'
  1322  00FF46  61                 	db	97	;'a'
  1323  00FF47  6C                 	db	108	;'l'
  1324  00FF48  69                 	db	105	;'i'
  1325  00FF49  7A                 	db	122	;'z'
  1326  00FF4A  65                 	db	101	;'e'
  1327  00FF4B  00                 	db	0
  1328  00FF4C                     STR_6:
  1329                           
  1330                           ; BSR set to: 0
  1331  00FF4C  52                 	db	82	;'R'
  1332  00FF4D  69                 	db	105	;'i'
  1333  00FF4E  67                 	db	103	;'g'
  1334  00FF4F  68                 	db	104	;'h'
  1335  00FF50  74                 	db	116	;'t'
  1336  00FF51  20                 	db	32
  1337  00FF52  50                 	db	80	;'P'
  1338  00FF53  6F                 	db	111	;'o'
  1339  00FF54  72                 	db	114	;'r'
  1340  00FF55  74                 	db	116	;'t'
  1341  00FF56  00                 	db	0
  1342  00FF57                     STR_3:
  1343                           
  1344                           ; BSR set to: 0
  1345  00FF57  4C                 	db	76	;'L'
  1346  00FF58  45                 	db	69	;'E'
  1347  00FF59  46                 	db	70	;'F'
  1348  00FF5A  54                 	db	84	;'T'
  1349  00FF5B  20                 	db	32
  1350  00FF5C  50                 	db	80	;'P'
  1351  00FF5D  4F                 	db	79	;'O'
  1352  00FF5E  52                 	db	82	;'R'
  1353  00FF5F  54                 	db	84	;'T'
  1354  00FF60  00                 	db	0
  1355  00FF61                     STR_44:
  1356                           
  1357                           ; BSR set to: 0
  1358  00FF61  61                 	db	97	;'a'
  1359  00FF62  75                 	db	117	;'u'
  1360  00FF63  74                 	db	116	;'t'
  1361  00FF64  6F                 	db	111	;'o'
  1362  00FF65  5F                 	db	95	;'_'
  1363  00FF66  73                 	db	115	;'s'
  1364  00FF67  74                 	db	116	;'t'
  1365  00FF68  6F                 	db	111	;'o'
  1366  00FF69  70                 	db	112	;'p'
  1367  00FF6A  00                 	db	0
  1368  00FF6B                     STR_2:
  1369                           
  1370                           ; BSR set to: 0
  1371  00FF6B  4C                 	db	76	;'L'
  1372  00FF6C  65                 	db	101	;'e'
  1373  00FF6D  66                 	db	102	;'f'
  1374  00FF6E  74                 	db	116	;'t'
  1375  00FF6F  20                 	db	32
  1376  00FF70  50                 	db	80	;'P'
  1377  00FF71  6F                 	db	111	;'o'
  1378  00FF72  72                 	db	114	;'r'
  1379  00FF73  74                 	db	116	;'t'
  1380  00FF74  00                 	db	0
  1381  00FF75                     STR_45:
  1382                           
  1383                           ; BSR set to: 0
  1384  00FF75  52                 	db	82	;'R'
  1385  00FF76  45                 	db	69	;'E'
  1386  00FF77  53                 	db	83	;'S'
  1387  00FF78  45                 	db	69	;'E'
  1388  00FF79  54                 	db	84	;'T'
  1389  00FF7A  28                 	db	40
  1390  00FF7B  29                 	db	41
  1391  00FF7C  3B                 	db	59	;';'
  1392  00FF7D  00                 	db	0
  1393  00FF7E                     
  1394                           ; BSR set to: 0
  1395  00FF7E  53                 	db	83	;'S'
  1396  00FF7F  4C                 	db	76	;'L'
  1397  00FF80  45                 	db	69	;'E'
  1398  00FF81  45                 	db	69	;'E'
  1399  00FF82  50                 	db	80	;'P'
  1400  00FF83  49                 	db	73	;'I'
  1401  00FF84  4E                 	db	78	;'N'
  1402  00FF85  47                 	db	71	;'G'
  1403  00FF86  00                 	db	0
  1404  00FF87                     STR_42:
  1405                           
  1406                           ; BSR set to: 0
  1407  00FF87  73                 	db	115	;'s'
  1408  00FF88  65                 	db	101	;'e'
  1409  00FF89  74                 	db	116	;'t'
  1410  00FF8A  74                 	db	116	;'t'
  1411  00FF8B  69                 	db	105	;'i'
  1412  00FF8C  6E                 	db	110	;'n'
  1413  00FF8D  67                 	db	103	;'g'
  1414  00FF8E  73                 	db	115	;'s'
  1415  00FF8F  00                 	db	0
  1416  00FF90                     STR_29:
  1417                           
  1418                           ; BSR set to: 0
  1419  00FF90  09                 	db	9
  1420  00FF91  65                 	db	101	;'e'
  1421  00FF92  72                 	db	114	;'r'
  1422  00FF93  72                 	db	114	;'r'
  1423  00FF94  6F                 	db	111	;'o'
  1424  00FF95  72                 	db	114	;'r'
  1425  00FF96  0A                 	db	10
  1426  00FF97  00                 	db	0
  1427  00FF98                     STR_62:
  1428                           
  1429                           ; BSR set to: 0
  1430  00FF98  64                 	db	100	;'d'
  1431  00FF99  69                 	db	105	;'i'
  1432  00FF9A  73                 	db	115	;'s'
  1433  00FF9B  70                 	db	112	;'p'
  1434  00FF9C  6C                 	db	108	;'l'
  1435  00FF9D  61                 	db	97	;'a'
  1436  00FF9E  79                 	db	121	;'y'
  1437  00FF9F  00                 	db	0
  1438  00FFA0                     STR_72:
  1439                           
  1440                           ; BSR set to: 0
  1441  00FFA0  63                 	db	99	;'c'
  1442  00FFA1  65                 	db	101	;'e'
  1443  00FFA2  6E                 	db	110	;'n'
  1444  00FFA3  74                 	db	116	;'t'
  1445  00FFA4  65                 	db	101	;'e'
  1446  00FFA5  72                 	db	114	;'r'
  1447  00FFA6  00                 	db	0
  1448  00FFA7                     STR_54:
  1449                           
  1450                           ; BSR set to: 0
  1451  00FFA7  74                 	db	116	;'t'
  1452  00FFA8  6F                 	db	111	;'o'
  1453  00FFA9  75                 	db	117	;'u'
  1454  00FFAA  63                 	db	99	;'c'
  1455  00FFAB  68                 	db	104	;'h'
  1456  00FFAC  00                 	db	0
  1457  00FFAD                     STR_59:
  1458                           
  1459                           ; BSR set to: 0
  1460  00FFAD  72                 	db	114	;'r'
  1461  00FFAE  65                 	db	101	;'e'
  1462  00FFAF  73                 	db	115	;'s'
  1463  00FFB0  65                 	db	101	;'e'
  1464  00FFB1  74                 	db	116	;'t'
  1465  00FFB2  00                 	db	0
  1466  00FFB3                     STR_80:
  1467                           
  1468                           ; BSR set to: 0
  1469  00FFB3  72                 	db	114	;'r'
  1470  00FFB4  69                 	db	105	;'i'
  1471  00FFB5  67                 	db	103	;'g'
  1472  00FFB6  68                 	db	104	;'h'
  1473  00FFB7  74                 	db	116	;'t'
  1474  00FFB8  00                 	db	0
  1475  00FFB9                     STR_33:
  1476                           
  1477                           ; BSR set to: 0
  1478  00FFB9  6D                 	db	109	;'m'
  1479  00FFBA  41                 	db	65	;'A'
  1480  00FFBB  68                 	db	104	;'h'
  1481  00FFBC  0A                 	db	10
  1482  00FFBD  00                 	db	0
  1483  00FFBE                     STR_39:
  1484                           
  1485                           ; BSR set to: 0
  1486  00FFBE  68                 	db	104	;'h'
  1487  00FFBF  65                 	db	101	;'e'
  1488  00FFC0  6C                 	db	108	;'l'
  1489  00FFC1  70                 	db	112	;'p'
  1490  00FFC2  00                 	db	0
  1491  00FFC3                     STR_64:
  1492                           
  1493                           ; BSR set to: 0
  1494  00FFC3  6C                 	db	108	;'l'
  1495  00FFC4  65                 	db	101	;'e'
  1496  00FFC5  66                 	db	102	;'f'
  1497  00FFC6  74                 	db	116	;'t'
  1498  00FFC7  00                 	db	0
  1499  00FFC8                     STR_56:
  1500                           
  1501                           ; BSR set to: 0
  1502  00FFC8  69                 	db	105	;'i'
  1503  00FFC9  6E                 	db	110	;'n'
  1504  00FFCA  69                 	db	105	;'i'
  1505  00FFCB  74                 	db	116	;'t'
  1506  00FFCC  00                 	db	0
  1507  00FFCD                     STR_91:
  1508                           
  1509                           ; BSR set to: 0
  1510  00FFCD  08                 	db	8
  1511  00FFCE  20                 	db	32
  1512  00FFCF  08                 	db	8
  1513  00FFD0  00                 	db	0
  1514  00FFD1                     STR_11:
  1515                           
  1516                           ; BSR set to: 0
  1517  00FFD1  6D                 	db	109	;'m'
  1518  00FFD2  41                 	db	65	;'A'
  1519  00FFD3  68                 	db	104	;'h'
  1520  00FFD4  00                 	db	0
  1521  00FFD5                     STR_90:
  1522                           
  1523                           ; BSR set to: 0
  1524  00FFD5  0A                 	db	10
  1525  00FFD6  0A                 	db	10
  1526  00FFD7  00                 	db	0
  1527  00FFD8                     STR_31:
  1528                           
  1529                           ; BSR set to: 0
  1530  00FFD8  41                 	db	65	;'A'
  1531  00FFD9  0A                 	db	10
  1532  00FFDA  00                 	db	0
  1533  00FFDB                     STR_1:
  1534                           
  1535                           ; BSR set to: 0
  1536  00FFDB  20                 	db	32
  1537  00FFDC  20                 	db	32
  1538  00FFDD  00                 	db	0
  1539  00FFDE                     STR_27:
  1540                           
  1541                           ; BSR set to: 0
  1542  00FFDE  29                 	db	41
  1543  00FFDF  20                 	db	32
  1544  00FFE0  00                 	db	0
  1545  00FFE1                     STR_12:
  1546                           
  1547                           ; BSR set to: 0
  1548  00FFE1  64                 	db	100	;'d'
  1549  00FFE2  20                 	db	32
  1550  00FFE3  00                 	db	0
  1551  00FFE4                     STR_13:
  1552                           
  1553                           ; BSR set to: 0
  1554  00FFE4  68                 	db	104	;'h'
  1555  00FFE5  20                 	db	32
  1556  00FFE6  00                 	db	0
  1557  00FFE7                     STR_14:
  1558                           
  1559                           ; BSR set to: 0
  1560  00FFE7  6D                 	db	109	;'m'
  1561  00FFE8  20                 	db	32
  1562  00FFE9  00                 	db	0
  1563  00FFEA                     STR_26:
  1564                           
  1565                           ; BSR set to: 0
  1566  00FFEA  20                 	db	32
  1567  00FFEB  28                 	db	40
  1568  00FFEC  00                 	db	0
  1569  00FFED                     STR_69:
  1570                           
  1571                           ; BSR set to: 0
  1572  00FFED  69                 	db	105	;'i'
  1573  00FFEE  63                 	db	99	;'c'
  1574  00FFEF  00                 	db	0
  1575  00FFF0                     STR_46:
  1576                           
  1577                           ; BSR set to: 0
  1578  00FFF0  61                 	db	97	;'a'
  1579  00FFF1  74                 	db	116	;'t'
  1580  00FFF2  00                 	db	0
  1581  00FFF3                     STR_23:
  1582                           
  1583                           ; BSR set to: 0
  1584  00FFF3  09                 	db	9
  1585  00FFF4  00                 	db	0
  1586  00FFF5                     STR_28:
  1587                           
  1588                           ; BSR set to: 0
  1589  00FFF5  2D                 	db	45
  1590  00FFF6  00                 	db	0
  1591  00FFF7                     STR_24:
  1592                           
  1593                           ; BSR set to: 0
  1594  00FFF7  2F                 	db	47
  1595  00FFF8  00                 	db	0
  1596  00FFF9                     STR_49:
  1597                           
  1598                           ; BSR set to: 0
  1599  00FFF9  4D                 	db	77	;'M'
  1600  00FFFA  00                 	db	0
  1601  00FFFB                     STR_65:
  1602                           
  1603                           ; BSR set to: 0
  1604  00FFFB  6C                 	db	108	;'l'
  1605  00FFFC  00                 	db	0
  1606  00FFFD                     STR_52:
  1607                           
  1608                           ; BSR set to: 0
  1609  00FFFD  6D                 	db	109	;'m'
  1610  00FFFE  00                 	db	0
  1611  0000                     
  1612                           ; #config settings
  1613  00FFFF  00                 	db	0	; dummy byte at the end
  1614  0000                     
  1615                           	psect	cinit
  1616  014AC2                     __pcinit:
  1617                           	opt stack 0
  1618  014AC2                     start_initialization:
  1619                           	opt stack 0
  1620  014AC2                     __initialization:
  1621                           	opt stack 0
  1622                           
  1623                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1624  014AC2  EE04  F064         	lfsr	0,__pbssBIGRAMl
  1625  014AC6  EE17 F0D0          	lfsr	1,2000
  1626  014ACA                     clear_0:
  1627  014ACA  6AEE               	clrf	postinc0,c
  1628  014ACC  50E5               	movf	postdec1,w,c
  1629  014ACE  50E1               	movf	fsr1l,w,c
  1630  014AD0  E1FC               	bnz	clear_0
  1631  014AD2  50E2               	movf	fsr1h,w,c
  1632  014AD4  E1FA               	bnz	clear_0
  1633                           
  1634                           ; Clear objects allocated to BANK4 (100 bytes)
  1635  014AD6  EE04  F000         	lfsr	0,__pbssBANK4
  1636  014ADA  0E64               	movlw	100
  1637  014ADC                     clear_1:
  1638  014ADC  6AEE               	clrf	postinc0,c
  1639  014ADE  06E8               	decf	wreg,f,c
  1640  014AE0  E1FD               	bnz	clear_1
  1641                           
  1642                           ; Clear objects allocated to BANK3 (146 bytes)
  1643  014AE2  EE03  F000         	lfsr	0,__pbssBANK3
  1644  014AE6  0E92               	movlw	146
  1645  014AE8                     clear_2:
  1646  014AE8  6AEE               	clrf	postinc0,c
  1647  014AEA  06E8               	decf	wreg,f,c
  1648  014AEC  E1FD               	bnz	clear_2
  1649                           
  1650                           ; Clear objects allocated to BANK2 (53 bytes)
  1651  014AEE  EE02  F0CB         	lfsr	0,__pbssBANK2
  1652  014AF2  0E35               	movlw	53
  1653  014AF4                     clear_3:
  1654  014AF4  6AEE               	clrf	postinc0,c
  1655  014AF6  06E8               	decf	wreg,f,c
  1656  014AF8  E1FD               	bnz	clear_3
  1657                           
  1658                           ; Clear objects allocated to BANK1 (52 bytes)
  1659  014AFA  EE01  F0C9         	lfsr	0,__pbssBANK1
  1660  014AFE  0E34               	movlw	52
  1661  014B00                     clear_4:
  1662  014B00  6AEE               	clrf	postinc0,c
  1663  014B02  06E8               	decf	wreg,f,c
  1664  014B04  E1FD               	bnz	clear_4
  1665                           
  1666                           ; Clear objects allocated to BANK0 (85 bytes)
  1667  014B06  EE00  F060         	lfsr	0,__pbssBANK0
  1668  014B0A  0E55               	movlw	85
  1669  014B0C                     clear_5:
  1670  014B0C  6AEE               	clrf	postinc0,c
  1671  014B0E  06E8               	decf	wreg,f,c
  1672  014B10  E1FD               	bnz	clear_5
  1673                           
  1674                           ; Clear objects allocated to COMRAM (43 bytes)
  1675  014B12  EE00  F02D         	lfsr	0,__pbssCOMRAM
  1676  014B16  0E2B               	movlw	43
  1677  014B18                     clear_6:
  1678  014B18  6AEE               	clrf	postinc0,c
  1679  014B1A  06E8               	decf	wreg,f,c
  1680  014B1C  E1FD               	bnz	clear_6
  1681                           
  1682                           ; Initialize objects allocated to BANK1 (3 bytes)
  1683                           ; load TBLPTR registers with __pidataBANK1
  1684  014B1E  0E36               	movlw	low __pidataBANK1
  1685  014B20  6EF6               	movwf	tblptrl,c
  1686  014B22  0E62               	movlw	high __pidataBANK1
  1687  014B24  6EF7               	movwf	tblptrh,c
  1688  014B26  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1689  014B28  6EF8               	movwf	tblptru,c
  1690  014B2A  0009               	tblrd		*+	;fetch initializer
  1691  014B2C  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1692  014B30  0009               	tblrd		*+	;fetch initializer
  1693  014B32  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1694  014B36  0009               	tblrd		*+	;fetch initializer
  1695  014B38  CFF5 F1FF          	movff	tablat,__pdataBANK1+2
  1696                           
  1697                           ; Initialize objects allocated to BANK0 (2 bytes)
  1698                           ; load TBLPTR registers with __pidataBANK0
  1699  014B3C  0E39               	movlw	low __pidataBANK0
  1700  014B3E  6EF6               	movwf	tblptrl,c
  1701  014B40  0E62               	movlw	high __pidataBANK0
  1702  014B42  6EF7               	movwf	tblptrh,c
  1703  014B44  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1704  014B46  6EF8               	movwf	tblptru,c
  1705  014B48  0009               	tblrd		*+	;fetch initializer
  1706  014B4A  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1707  014B4E  0009               	tblrd		*+	;fetch initializer
  1708  014B50  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
  1709                           
  1710                           ; Initialize objects allocated to COMRAM (1 bytes)
  1711                           ; load TBLPTR registers with __pidataCOMRAM
  1712  014B54  0E3B               	movlw	low __pidataCOMRAM
  1713  014B56  6EF6               	movwf	tblptrl,c
  1714  014B58  0E62               	movlw	high __pidataCOMRAM
  1715  014B5A  6EF7               	movwf	tblptrh,c
  1716  014B5C  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1717  014B5E  6EF8               	movwf	tblptru,c
  1718  014B60  0009               	tblrd		*+	;fetch initializer
  1719  014B62  CFF5 F058          	movff	tablat,__pdataCOMRAM
  1720  014B66                     end_of_initialization:
  1721                           	opt stack 0
  1722  014B66                     __end_of__initialization:
  1723                           	opt stack 0
  1724  014B66  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1725  014B68  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1726  014B6A  0100               	movlb	0
  1727  014B6C  EFE9  F097         	goto	_main	;jump to C main() function
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           postinc0	equ	0xFEE
  1733                           wreg	equ	0xFE8
  1734                           postdec1	equ	0xFE5
  1735                           fsr1h	equ	0xFE2
  1736                           fsr1l	equ	0xFE1
  1737                           
  1738                           	psect	bssCOMRAM
  1739  00002D                     __pbssCOMRAM:
  1740                           	opt stack 0
  1741  00002D                     _I:
  1742                           	opt stack 0
  1743  00002D                     	ds	6
  1744  000033                     ISR@cnt_t0:
  1745                           	opt stack 0
  1746  000033                     	ds	2
  1747  000035                     USBCBSendResume@delay_count:
  1748                           	opt stack 0
  1749  000035                     	ds	2
  1750  000037                     _pBDTEntryEP0OutCurrent:
  1751                           	opt stack 0
  1752  000037                     	ds	2
  1753  000039                     _pBDTEntryEP0OutNext:
  1754                           	opt stack 0
  1755  000039                     	ds	2
  1756  00003B                     _pDst:
  1757                           	opt stack 0
  1758  00003B                     	ds	2
  1759  00003D                     millis_timer@cnt:
  1760                           	opt stack 0
  1761  00003D                     	ds	2
  1762  00003F                     ISR@cnt_t1:
  1763                           	opt stack 0
  1764  00003F                     	ds	1
  1765  000040                     _BothEP0OutUOWNsSet:
  1766                           	opt stack 0
  1767  000040                     	ds	1
  1768  000041                     _RemoteWakeup:
  1769                           	opt stack 0
  1770  000041                     	ds	1
  1771  000042                     _USBDeferINDataStagePackets:
  1772                           	opt stack 0
  1773  000042                     	ds	1
  1774  000043                     _USBDeferOUTDataStagePackets:
  1775                           	opt stack 0
  1776  000043                     	ds	1
  1777  000044                     _USBDeferStatusStagePacket:
  1778                           	opt stack 0
  1779  000044                     	ds	1
  1780  000045                     _USBDeviceState:
  1781                           	opt stack 0
  1782  000045                     	ds	1
  1783  000046                     _USBStatusStageEnabledFlag1:
  1784                           	opt stack 0
  1785  000046                     	ds	1
  1786  000047                     _USBStatusStageEnabledFlag2:
  1787                           	opt stack 0
  1788  000047                     	ds	1
  1789  000048                     _USBStatusStageTimeoutCounter:
  1790                           	opt stack 0
  1791  000048                     	ds	1
  1792  000049                     _controlTransferState:
  1793                           	opt stack 0
  1794  000049                     	ds	1
  1795  00004A                     _control_signal_bitmap:
  1796                           	opt stack 0
  1797  00004A                     	ds	1
  1798  00004B                     _cut_time_flag:
  1799                           	opt stack 0
  1800  00004B                     	ds	1
  1801  00004C                     _display_flag:
  1802                           	opt stack 0
  1803  00004C                     	ds	1
  1804  00004D                     _endpoint_number:
  1805                           	opt stack 0
  1806  00004D                     	ds	1
  1807  00004E                     _next_print_content:
  1808                           	opt stack 0
  1809  00004E                     	ds	1
  1810  00004F                     _shortPacketStatus:
  1811                           	opt stack 0
  1812  00004F                     	ds	1
  1813  000050                     _time_change_flag:
  1814                           	opt stack 0
  1815  000050                     	ds	1
  1816  000051                     _delay_display:
  1817                           	opt stack 0
  1818  000051                     	ds	3
  1819  000054                     _USBAlternateInterface:
  1820                           	opt stack 0
  1821  000054                     	ds	2
  1822  000056                     _USBActiveConfiguration:
  1823                           	opt stack 0
  1824  000056                     	ds	1
  1825  000057                     _USTATcopy:
  1826                           	opt stack 0
  1827  000057                     	ds	1
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1h	equ	0xFE2
  1836                           fsr1l	equ	0xFE1
  1837                           
  1838                           	psect	dataCOMRAM
  1839  000058                     __pdataCOMRAM:
  1840                           	opt stack 0
  1841  000058                     sleep_loop@prev_power_sw:
  1842                           	opt stack 0
  1843  000058                     	ds	1
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1h	equ	0xFE2
  1852                           fsr1l	equ	0xFE1
  1853                           
  1854                           	psect	bssBANK0
  1855  000060                     __pbssBANK0:
  1856                           	opt stack 0
  1857  000060                     _charge_time:
  1858                           	opt stack 0
  1859  000060                     	ds	12
  1860  00006C                     _outPipes:
  1861                           	opt stack 0
  1862  00006C                     	ds	9
  1863  000075                     _inPipes:
  1864                           	opt stack 0
  1865  000075                     	ds	6
  1866  00007B                     _pBDTEntryIn:
  1867                           	opt stack 0
  1868  00007B                     	ds	6
  1869  000081                     _pBDTEntryOut:
  1870                           	opt stack 0
  1871  000081                     	ds	6
  1872  000087                     _auto_cut_ON:
  1873                           	opt stack 0
  1874  000087                     	ds	3
  1875  00008A                     _ep_data_in:
  1876                           	opt stack 0
  1877  00008A                     	ds	3
  1878  00008D                     _ep_data_out:
  1879                           	opt stack 0
  1880  00008D                     	ds	3
  1881  000090                     _pCDCDst:
  1882                           	opt stack 0
  1883  000090                     	ds	3
  1884  000093                     _pCDCSrc:
  1885                           	opt stack 0
  1886  000093                     	ds	3
  1887  000096                     _CDCDataInHandle:
  1888                           	opt stack 0
  1889  000096                     	ds	2
  1890  000098                     _CDCDataOutHandle:
  1891                           	opt stack 0
  1892  000098                     	ds	2
  1893  00009A                     _ctmu_value_m:
  1894                           	opt stack 0
  1895  00009A                     	ds	2
  1896  00009C                     RTCC_loop@prev_halfsec:
  1897                           	opt stack 0
  1898  00009C                     	ds	1
  1899  00009D                     _USBBusIsSuspended:
  1900                           	opt stack 0
  1901  00009D                     	ds	1
  1902  00009E                     _cdc_mem_type:
  1903                           	opt stack 0
  1904  00009E                     	ds	1
  1905  00009F                     _cdc_rx_len:
  1906                           	opt stack 0
  1907  00009F                     	ds	1
  1908  0000A0                     _cdc_trf_state:
  1909                           	opt stack 0
  1910  0000A0                     	ds	1
  1911  0000A1                     _cdc_tx_len:
  1912                           	opt stack 0
  1913  0000A1                     	ds	1
  1914  0000A2                     _colon:
  1915                           	opt stack 0
  1916  0000A2                     	ds	1
  1917  0000A3                     _ctmu_flag:
  1918                           	opt stack 0
  1919  0000A3                     	ds	1
  1920  0000A4                     _edit_flag:
  1921                           	opt stack 0
  1922  0000A4                     	ds	1
  1923  0000A5                     _halfsec:
  1924                           	opt stack 0
  1925  0000A5                     	ds	1
  1926  0000A6                     _print_content:
  1927                           	opt stack 0
  1928  0000A6                     	ds	1
  1929  0000A7                     _print_port:
  1930                           	opt stack 0
  1931  0000A7                     	ds	1
  1932  0000A8                     _sleep_flag:
  1933                           	opt stack 0
  1934  0000A8                     	ds	1
  1935  0000A9                     epoch_to_caltime@year_cache:
  1936                           	opt stack 0
  1937  0000A9                     	ds	1
  1938  0000AA                     _caltime_now:
  1939                           	opt stack 0
  1940  0000AA                     	ds	7
  1941  0000B1                     _epoch_now:
  1942                           	opt stack 0
  1943  0000B1                     	ds	4
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           
  1954                           	psect	dataBANK0
  1955  0000FE                     __pdataBANK0:
  1956                           	opt stack 0
  1957  0000FE                     _ctmu_ratio:
  1958                           	opt stack 0
  1959  0000FE                     	ds	1
  1960  0000FF                     epoch_to_caltime@month_cache:
  1961                           	opt stack 0
  1962  0000FF                     	ds	1
  1963                           tblptru	equ	0xFF8
  1964                           tblptrh	equ	0xFF7
  1965                           tblptrl	equ	0xFF6
  1966                           tablat	equ	0xFF5
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           postdec1	equ	0xFE5
  1970                           fsr1h	equ	0xFE2
  1971                           fsr1l	equ	0xFE1
  1972                           
  1973                           	psect	bssBANK1
  1974  0001C9                     __pbssBANK1:
  1975                           	opt stack 0
  1976  0001C9                     _ctmu_value:
  1977                           	opt stack 0
  1978  0001C9                     	ds	6
  1979  0001CF                     _cut_cnt:
  1980                           	opt stack 0
  1981  0001CF                     	ds	6
  1982  0001D5                     lchika@cnt:
  1983                           	opt stack 0
  1984  0001D5                     	ds	3
  1985  0001D8                     lchika@cntf:
  1986                           	opt stack 0
  1987  0001D8                     	ds	3
  1988  0001DB                     epoch_to_caltime@day_cache:
  1989                           	opt stack 0
  1990  0001DB                     	ds	2
  1991  0001DD                     _ctmu:
  1992                           	opt stack 0
  1993  0001DD                     	ds	12
  1994  0001E9                     _tx_buf:
  1995                           	opt stack 0
  1996  0001E9                     	ds	8
  1997  0001F1                     rx_loop@comm_buf:
  1998                           	opt stack 0
  1999  0001F1                     	ds	8
  2000  0001F9                     _ctmu_m:
  2001                           	opt stack 0
  2002  0001F9                     	ds	4
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postdec1	equ	0xFE5
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           
  2013                           	psect	dataBANK1
  2014  0001FD                     __pdataBANK1:
  2015                           	opt stack 0
  2016  0001FD                     I2C_LCD_SetCursor@F8672:
  2017                           	opt stack 0
  2018  0001FD                     	ds	2
  2019  0001FF                     rx_loop@comm_buf_init:
  2020                           	opt stack 0
  2021  0001FF                     	ds	1
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           
  2032                           	psect	bssBANK2
  2033  0002CB                     __pbssBANK2:
  2034                           	opt stack 0
  2035  0002CB                     _S:
  2036                           	opt stack 0
  2037  0002CB                     	ds	12
  2038  0002D7                     _s:
  2039                           	opt stack 0
  2040  0002D7                     	ds	12
  2041  0002E3                     _BaudRateGen:
  2042                           	opt stack 0
  2043  0002E3                     	ds	4
  2044  0002E7                     _ms:
  2045                           	opt stack 0
  2046  0002E7                     	ds	4
  2047  0002EB                     _d1:
  2048                           	opt stack 0
  2049  0002EB                     	ds	3
  2050  0002EE                     _out_flag:
  2051                           	opt stack 0
  2052  0002EE                     	ds	3
  2053  0002F1                     _rx_buf:
  2054                           	opt stack 0
  2055  0002F1                     	ds	8
  2056  0002F9                     _line_coding:
  2057                           	opt stack 0
  2058  0002F9                     	ds	7
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           postdec1	equ	0xFE5
  2066                           fsr1h	equ	0xFE2
  2067                           fsr1l	equ	0xFE1
  2068                           
  2069                           	psect	bssBANK3
  2070  000300                     __pbssBANK3:
  2071                           	opt stack 0
  2072  000300                     _cdc_notice:
  2073                           	opt stack 0
  2074  000300                     	ds	10
  2075  00030A                     _cdc_data_rx:
  2076                           	opt stack 0
  2077  00030A                     	ds	64
  2078  00034A                     _cdc_data_tx:
  2079                           	opt stack 0
  2080  00034A                     	ds	64
  2081  00038A                     _dummy_encapsulated_cmd_response:
  2082                           	opt stack 0
  2083  00038A                     	ds	8
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           postdec1	equ	0xFE5
  2091                           fsr1h	equ	0xFE2
  2092                           fsr1l	equ	0xFE1
  2093                           
  2094                           	psect	bssBANK4
  2095  000400                     __pbssBANK4:
  2096                           	opt stack 0
  2097  000400                     main_init@rxbuf:
  2098                           	opt stack 0
  2099  000400                     	ds	100
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           postdec1	equ	0xFE5
  2107                           fsr1h	equ	0xFE2
  2108                           fsr1l	equ	0xFE1
  2109                           
  2110                           	psect	bssBIGRAMl
  2111  000464                     __pbssBIGRAMl:
  2112                           	opt stack 0
  2113  000464                     main_init@txbuf:
  2114                           	opt stack 0
  2115  000464                     	ds	2000
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           postdec1	equ	0xFE5
  2123                           fsr1h	equ	0xFE2
  2124                           fsr1l	equ	0xFE1
  2125                           
  2126                           	psect	cstackBANK3
  2127  000392                     __pcstackBANK3:
  2128                           	opt stack 0
  2129  000392                     rx_loop@opland2:
  2130                           	opt stack 0
  2131                           
  2132                           ; 100 bytes @ 0x0
  2133  000392                     	ds	100
  2134  0003F6                     main@i:
  2135                           	opt stack 0
  2136                           
  2137                           ; 1 bytes @ 0x64
  2138  0003F6                     	ds	1
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           postinc0	equ	0xFEE
  2144                           wreg	equ	0xFE8
  2145                           postdec1	equ	0xFE5
  2146                           fsr1h	equ	0xFE2
  2147                           fsr1l	equ	0xFE1
  2148                           
  2149                           	psect	cstackBANK2
  2150  000200                     __pcstackBANK2:
  2151                           	opt stack 0
  2152  000200                     rx_loop@opland3:
  2153                           	opt stack 0
  2154                           
  2155                           ; 100 bytes @ 0x0
  2156  000200                     	ds	100
  2157  000264                     rx_loop@opland1:
  2158                           	opt stack 0
  2159                           
  2160                           ; 100 bytes @ 0x64
  2161  000264                     	ds	100
  2162  0002C8                     _rx_loop$5308:
  2163                           	opt stack 0
  2164                           
  2165                           ; 2 bytes @ 0xC8
  2166  0002C8                     	ds	2
  2167  0002CA                     rx_loop@i:
  2168                           	opt stack 0
  2169                           
  2170                           ; 1 bytes @ 0xCA
  2171  0002CA                     	ds	1
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	cstackBANK1
  2183  000100                     __pcstackBANK1:
  2184                           	opt stack 0
  2185  000100                     display_LCD@str:
  2186                           	opt stack 0
  2187  000100                     rx_loop@buf:
  2188                           	opt stack 0
  2189                           
  2190                           ; 100 bytes @ 0x0
  2191  000100                     	ds	10
  2192  00010A                     _display_LCD$5305:
  2193                           	opt stack 0
  2194                           
  2195                           ; 4 bytes @ 0xA
  2196  00010A                     	ds	90
  2197  000164                     rx_loop@opcode:
  2198                           	opt stack 0
  2199                           
  2200                           ; 100 bytes @ 0x64
  2201  000164                     	ds	100
  2202  0001C8                     rx_loop@ascii:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0xC8
  2206  0001C8                     	ds	1
  2207                           tblptru	equ	0xFF8
  2208                           tblptrh	equ	0xFF7
  2209                           tblptrl	equ	0xFF6
  2210                           tablat	equ	0xFF5
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           postdec1	equ	0xFE5
  2214                           fsr1h	equ	0xFE2
  2215                           fsr1l	equ	0xFE1
  2216                           
  2217                           	psect	cstackBANK0
  2218  0000B5                     __pcstackBANK0:
  2219                           	opt stack 0
  2220  0000B5                     ??_timer0_init:
  2221  0000B5                     ??_timer3_init:
  2222  0000B5                     ??_I2C_IdleCheck:
  2223  0000B5                     ??_x_to_d:
  2224  0000B5                     ?_ADC:
  2225                           	opt stack 0
  2226  0000B5                     ?_ringbuf_num:
  2227                           	opt stack 0
  2228  0000B5                     ?_USBTransferOnePacket:
  2229                           	opt stack 0
  2230  0000B5                     ?___awdiv:
  2231                           	opt stack 0
  2232  0000B5                     ?___awmod:
  2233                           	opt stack 0
  2234  0000B5                     ?___lwmod:
  2235                           	opt stack 0
  2236  0000B5                     ?___lldiv:
  2237                           	opt stack 0
  2238  0000B5                     timer1_init@clock_select:
  2239                           	opt stack 0
  2240  0000B5                     ADC_init@p_ref:
  2241                           	opt stack 0
  2242  0000B5                     OUT@value:
  2243                           	opt stack 0
  2244  0000B5                     IN@b:
  2245                           	opt stack 0
  2246  0000B5                     LED_OUT@value:
  2247                           	opt stack 0
  2248  0000B5                     _is_usb_available$2671:
  2249                           	opt stack 0
  2250  0000B5                     USBTransferOnePacket@dir:
  2251                           	opt stack 0
  2252  0000B5                     ringbuf_init@rb:
  2253                           	opt stack 0
  2254  0000B5                     ringbuf_num@rb:
  2255                           	opt stack 0
  2256  0000B5                     ringbuf_delete@rb:
  2257                           	opt stack 0
  2258  0000B5                     Delay_ms@ms:
  2259                           	opt stack 0
  2260  0000B5                     delay_set@d:
  2261                           	opt stack 0
  2262  0000B5                     my_strcmp@str1:
  2263                           	opt stack 0
  2264  0000B5                     putUSBUSART@data:
  2265                           	opt stack 0
  2266  0000B5                     ___awdiv@dividend:
  2267                           	opt stack 0
  2268  0000B5                     ___awmod@dividend:
  2269                           	opt stack 0
  2270  0000B5                     ___lwmod@dividend:
  2271                           	opt stack 0
  2272  0000B5                     memset@p1:
  2273                           	opt stack 0
  2274  0000B5                     ___lldiv@dividend:
  2275                           	opt stack 0
  2276                           
  2277                           ; 4 bytes @ 0x0
  2278  0000B5                     	ds	1
  2279  0000B6                     ??_timer1_init:
  2280  0000B6                     timer0_init@prescaler:
  2281                           	opt stack 0
  2282  0000B6                     timer3_init@prescaler:
  2283                           	opt stack 0
  2284  0000B6                     I2C_IdleCheck@mask:
  2285                           	opt stack 0
  2286  0000B6                     x_to_d@hex:
  2287                           	opt stack 0
  2288  0000B6                     OUT@b:
  2289                           	opt stack 0
  2290  0000B6                     LED_OUT@b:
  2291                           	opt stack 0
  2292  0000B6                     USBTransferOnePacket@data:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x1
  2296  0000B6                     	ds	1
  2297  0000B7                     ??_ADC:
  2298  0000B7                     ??_ringbuf_num:
  2299  0000B7                     ??_Delay_ms:
  2300  0000B7                     timer1_init@prescaler:
  2301                           	opt stack 0
  2302  0000B7                     I2C_Start@rw:
  2303                           	opt stack 0
  2304  0000B7                     I2C_Send@data:
  2305                           	opt stack 0
  2306  0000B7                     putUSBUSART@length:
  2307                           	opt stack 0
  2308  0000B7                     ringbuf_init@internal_buf:
  2309                           	opt stack 0
  2310  0000B7                     delay_set@value:
  2311                           	opt stack 0
  2312  0000B7                     RTCC_to_caltime@ct:
  2313                           	opt stack 0
  2314  0000B7                     my_strcmp@str2:
  2315                           	opt stack 0
  2316  0000B7                     ___awdiv@divisor:
  2317                           	opt stack 0
  2318  0000B7                     ___awmod@divisor:
  2319                           	opt stack 0
  2320  0000B7                     ___lwmod@divisor:
  2321                           	opt stack 0
  2322  0000B7                     memset@c:
  2323                           	opt stack 0
  2324                           
  2325                           ; 2 bytes @ 0x2
  2326  0000B7                     	ds	1
  2327  0000B8                     ADC@ch:
  2328                           	opt stack 0
  2329  0000B8                     I2C_Start@adrs:
  2330                           	opt stack 0
  2331  0000B8                     USBTransferOnePacket@len:
  2332                           	opt stack 0
  2333                           
  2334                           ; 1 bytes @ 0x3
  2335  0000B8                     	ds	1
  2336  0000B9                     ??_my_strcmp:
  2337  0000B9                     I2C_LCD_Command@c:
  2338                           	opt stack 0
  2339  0000B9                     I2C_LCD_Putc@c:
  2340                           	opt stack 0
  2341  0000B9                     RTCC_to_caltime@dumy:
  2342                           	opt stack 0
  2343  0000B9                     port_loop@i:
  2344                           	opt stack 0
  2345  0000B9                     USBTransferOnePacket@ep:
  2346                           	opt stack 0
  2347  0000B9                     ___awdiv@counter:
  2348                           	opt stack 0
  2349  0000B9                     ___awmod@counter:
  2350                           	opt stack 0
  2351  0000B9                     ___lwmod@counter:
  2352                           	opt stack 0
  2353  0000B9                     ringbuf_init@bufsize:
  2354                           	opt stack 0
  2355  0000B9                     I2C_LCD_Puts@s:
  2356                           	opt stack 0
  2357  0000B9                     memset@n:
  2358                           	opt stack 0
  2359  0000B9                     ___lldiv@divisor:
  2360                           	opt stack 0
  2361                           
  2362                           ; 4 bytes @ 0x4
  2363  0000B9                     	ds	1
  2364  0000BA                     I2C_LCD_Command@ans:
  2365                           	opt stack 0
  2366  0000BA                     I2C_LCD_Putc@ans:
  2367                           	opt stack 0
  2368  0000BA                     ___awdiv@sign:
  2369                           	opt stack 0
  2370  0000BA                     ___awmod@sign:
  2371                           	opt stack 0
  2372  0000BA                     USBTransferOnePacket@handle:
  2373                           	opt stack 0
  2374                           
  2375                           ; 2 bytes @ 0x5
  2376  0000BA                     	ds	1
  2377  0000BB                     ??_I2C_LCD_Clear:
  2378  0000BB                     ??_I2C_LCD_Puts:
  2379  0000BB                     I2C_LCD_SetCursor@row:
  2380                           	opt stack 0
  2381  0000BB                     month_length@month:
  2382                           	opt stack 0
  2383  0000BB                     ___awdiv@quotient:
  2384                           	opt stack 0
  2385  0000BB                     memset@p:
  2386                           	opt stack 0
  2387                           
  2388                           ; 2 bytes @ 0x6
  2389  0000BB                     	ds	1
  2390  0000BC                     ??_CDCTxService:
  2391  0000BC                     ??_month_length:
  2392  0000BC                     I2C_LCD_SetCursor@row_offsets:
  2393                           	opt stack 0
  2394  0000BC                     I2C_LCD_Puts@ans:
  2395                           	opt stack 0
  2396  0000BC                     getsUSBUSART@buffer:
  2397                           	opt stack 0
  2398                           
  2399                           ; 2 bytes @ 0x7
  2400  0000BC                     	ds	1
  2401  0000BD                     d_to_x@dec:
  2402                           	opt stack 0
  2403  0000BD                     USBDeviceInit@i:
  2404                           	opt stack 0
  2405  0000BD                     ringbuf_put@rb:
  2406                           	opt stack 0
  2407  0000BD                     ringbuf_pop@rb:
  2408                           	opt stack 0
  2409  0000BD                     ringbuf_backspace@rb:
  2410                           	opt stack 0
  2411  0000BD                     _CDCTxService$4471:
  2412                           	opt stack 0
  2413  0000BD                     ___lldiv@quotient:
  2414                           	opt stack 0
  2415                           
  2416                           ; 4 bytes @ 0x8
  2417  0000BD                     	ds	1
  2418  0000BE                     I2C_LCD_SetCursor@col:
  2419                           	opt stack 0
  2420  0000BE                     getsUSBUSART@len:
  2421                           	opt stack 0
  2422  0000BE                     caltime_to_RTCC@ct:
  2423                           	opt stack 0
  2424                           
  2425                           ; 2 bytes @ 0x9
  2426  0000BE                     	ds	1
  2427  0000BF                     ??_getsUSBUSART:
  2428  0000BF                     ??_ringbuf_pop:
  2429  0000BF                     ??_ringbuf_backspace:
  2430  0000BF                     ringbuf_put@asciicode:
  2431                           	opt stack 0
  2432  0000BF                     CDCTxService@i:
  2433                           	opt stack 0
  2434                           
  2435                           ; 1 bytes @ 0xA
  2436  0000BF                     	ds	1
  2437  0000C0                     ??_ringbuf_put:
  2438  0000C0                     month_length@year:
  2439                           	opt stack 0
  2440  0000C0                     CDCTxService@byte_to_send:
  2441                           	opt stack 0
  2442  0000C0                     _getsUSBUSART$4423:
  2443                           	opt stack 0
  2444                           
  2445                           ; 2 bytes @ 0xB
  2446  0000C0                     	ds	1
  2447  0000C1                     ?_put_string_usb:
  2448                           	opt stack 0
  2449  0000C1                     ___lldiv@counter:
  2450                           	opt stack 0
  2451  0000C1                     put_string_usb@s:
  2452                           	opt stack 0
  2453                           
  2454                           ; 2 bytes @ 0xC
  2455  0000C1                     	ds	1
  2456  0000C2                     ?_get_string_usb:
  2457                           	opt stack 0
  2458  0000C2                     ?_CTMU_read:
  2459                           	opt stack 0
  2460  0000C2                     ?___lmul:
  2461                           	opt stack 0
  2462  0000C2                     ?___llmod:
  2463                           	opt stack 0
  2464  0000C2                     get_string_usb@s:
  2465                           	opt stack 0
  2466  0000C2                     ___lmul@multiplier:
  2467                           	opt stack 0
  2468  0000C2                     ___llmod@dividend:
  2469                           	opt stack 0
  2470                           
  2471                           ; 4 bytes @ 0xD
  2472  0000C2                     	ds	1
  2473  0000C3                     ringbuf_pop@ret:
  2474                           	opt stack 0
  2475  0000C3                     put_string_usb@len:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0xE
  2479  0000C3                     	ds	1
  2480  0000C4                     ??_CTMU_read:
  2481  0000C4                     tx_send@asciicode:
  2482                           	opt stack 0
  2483  0000C4                     tx_sends@asciicode:
  2484                           	opt stack 0
  2485  0000C4                     get_string_usb@len:
  2486                           	opt stack 0
  2487                           
  2488                           ; 2 bytes @ 0xF
  2489  0000C4                     	ds	1
  2490  0000C5                     CTMU_read@ch:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0x10
  2494  0000C5                     	ds	1
  2495  0000C6                     ??_get_string_usb:
  2496  0000C6                     CTMU_read@sum:
  2497                           	opt stack 0
  2498  0000C6                     ___lmul@multiplicand:
  2499                           	opt stack 0
  2500  0000C6                     ___llmod@divisor:
  2501                           	opt stack 0
  2502                           
  2503                           ; 4 bytes @ 0x11
  2504  0000C6                     	ds	1
  2505  0000C7                     get_string_usb@rx_len:
  2506                           	opt stack 0
  2507                           
  2508                           ; 2 bytes @ 0x12
  2509  0000C7                     	ds	2
  2510  0000C9                     USB_loop@rx_len:
  2511                           	opt stack 0
  2512                           
  2513                           ; 2 bytes @ 0x14
  2514  0000C9                     	ds	1
  2515  0000CA                     CTMU_read@i:
  2516                           	opt stack 0
  2517  0000CA                     ___llmod@counter:
  2518                           	opt stack 0
  2519  0000CA                     ___lmul@product:
  2520                           	opt stack 0
  2521                           
  2522                           ; 4 bytes @ 0x15
  2523  0000CA                     	ds	1
  2524  0000CB                     ?___wmul:
  2525                           	opt stack 0
  2526  0000CB                     USB_loop@data:
  2527                           	opt stack 0
  2528  0000CB                     ___wmul@multiplier:
  2529                           	opt stack 0
  2530                           
  2531                           ; 2 bytes @ 0x16
  2532  0000CB                     	ds	2
  2533  0000CD                     ___wmul@multiplicand:
  2534                           	opt stack 0
  2535                           
  2536                           ; 2 bytes @ 0x18
  2537  0000CD                     	ds	1
  2538  0000CE                     ?_get_quot_rem:
  2539                           	opt stack 0
  2540  0000CE                     get_quot_rem@quot:
  2541                           	opt stack 0
  2542  0000CE                     caltime_to_epoch@ct:
  2543                           	opt stack 0
  2544                           
  2545                           ; 2 bytes @ 0x19
  2546  0000CE                     	ds	1
  2547  0000CF                     ___wmul@product:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x1A
  2551  0000CF                     	ds	1
  2552  0000D0                     get_quot_rem@div:
  2553                           	opt stack 0
  2554  0000D0                     caltime_to_epoch@ep:
  2555                           	opt stack 0
  2556                           
  2557                           ; 2 bytes @ 0x1B
  2558  0000D0                     	ds	1
  2559  0000D1                     ??_Auto_cut:
  2560  0000D1                     ?_my_atoi:
  2561                           	opt stack 0
  2562  0000D1                     ?___lwdiv:
  2563                           	opt stack 0
  2564  0000D1                     my_atoi@str:
  2565                           	opt stack 0
  2566  0000D1                     ___lwdiv@dividend:
  2567                           	opt stack 0
  2568                           
  2569                           ; 2 bytes @ 0x1C
  2570  0000D1                     	ds	1
  2571  0000D2                     ??_caltime_to_epoch:
  2572  0000D2                     get_quot_rem@num:
  2573                           	opt stack 0
  2574                           
  2575                           ; 4 bytes @ 0x1D
  2576  0000D2                     	ds	1
  2577  0000D3                     ??_my_atoi:
  2578  0000D3                     Auto_cut@i:
  2579                           	opt stack 0
  2580  0000D3                     ___lwdiv@divisor:
  2581                           	opt stack 0
  2582                           
  2583                           ; 2 bytes @ 0x1E
  2584  0000D3                     	ds	2
  2585  0000D5                     ___lwdiv@counter:
  2586                           	opt stack 0
  2587                           
  2588                           ; 1 bytes @ 0x20
  2589  0000D5                     	ds	1
  2590  0000D6                     caltime_to_epoch@year:
  2591                           	opt stack 0
  2592  0000D6                     epoch_to_caltime@ct:
  2593                           	opt stack 0
  2594  0000D6                     ___lwdiv@quotient:
  2595                           	opt stack 0
  2596                           
  2597                           ; 2 bytes @ 0x21
  2598  0000D6                     	ds	1
  2599  0000D7                     caltime_to_epoch@month_2019:
  2600                           	opt stack 0
  2601  0000D7                     my_atoi@ret:
  2602                           	opt stack 0
  2603                           
  2604                           ; 2 bytes @ 0x22
  2605  0000D7                     	ds	1
  2606  0000D8                     ctmu_set_ratio@percentage:
  2607                           	opt stack 0
  2608  0000D8                     tx_sendn@value:
  2609                           	opt stack 0
  2610  0000D8                     button_timer_interrupt@bt:
  2611                           	opt stack 0
  2612  0000D8                     epoch_to_caltime@ep:
  2613                           	opt stack 0
  2614  0000D8                     my_utoa@str:
  2615                           	opt stack 0
  2616  0000D8                     caltime_to_epoch@epoch:
  2617                           	opt stack 0
  2618                           
  2619                           ; 4 bytes @ 0x23
  2620  0000D8                     	ds	2
  2621  0000DA                     ??_epoch_to_caltime:
  2622  0000DA                     tx_sendn@digits:
  2623                           	opt stack 0
  2624  0000DA                     button_timer_interrupt@sw_value:
  2625                           	opt stack 0
  2626  0000DA                     my_utoa@value:
  2627                           	opt stack 0
  2628                           
  2629                           ; 2 bytes @ 0x25
  2630  0000DA                     	ds	1
  2631  0000DB                     tx_sendn@i:
  2632                           	opt stack 0
  2633                           
  2634                           ; 1 bytes @ 0x26
  2635  0000DB                     	ds	1
  2636  0000DC                     caltime_to_epoch@month:
  2637                           	opt stack 0
  2638  0000DC                     my_utoa@digits:
  2639                           	opt stack 0
  2640  0000DC                     tx_sendn@temp:
  2641                           	opt stack 0
  2642  0000DC                     epoch_to_caltime@day_since_epoch:
  2643                           	opt stack 0
  2644                           
  2645                           ; 2 bytes @ 0x27
  2646  0000DC                     	ds	1
  2647  0000DD                     my_utoa@d:
  2648                           	opt stack 0
  2649  0000DD                     RTCC_from_RTCC@ct:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x28
  2653  0000DD                     	ds	1
  2654  0000DE                     epoch_to_caltime@day:
  2655                           	opt stack 0
  2656  0000DE                     my_utoa@v:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0x29
  2660  0000DE                     	ds	1
  2661  0000DF                     RTCC_from_RTCC@ep:
  2662                           	opt stack 0
  2663                           
  2664                           ; 2 bytes @ 0x2A
  2665  0000DF                     	ds	1
  2666  0000E0                     epoch_to_caltime@year:
  2667                           	opt stack 0
  2668  0000E0                     display_dec@edit:
  2669                           	opt stack 0
  2670  0000E0                     tx_send_dec@edit:
  2671                           	opt stack 0
  2672  0000E0                     comm_disp@port:
  2673                           	opt stack 0
  2674                           
  2675                           ; 1 bytes @ 0x2B
  2676  0000E0                     	ds	1
  2677  0000E1                     epoch_to_caltime@month:
  2678                           	opt stack 0
  2679  0000E1                     display_dec@str:
  2680                           	opt stack 0
  2681  0000E1                     tx_send_dec@str:
  2682                           	opt stack 0
  2683  0000E1                     comm_disp@str:
  2684                           	opt stack 0
  2685                           
  2686                           ; 10 bytes @ 0x2C
  2687  0000E1                     	ds	1
  2688  0000E2                     epoch_to_caltime@num:
  2689                           	opt stack 0
  2690                           
  2691                           ; 4 bytes @ 0x2D
  2692  0000E2                     	ds	4
  2693  0000E6                     RTCC_from_caltime@ct:
  2694                           	opt stack 0
  2695  0000E6                     RTCC_from_epoch@ct:
  2696                           	opt stack 0
  2697                           
  2698                           ; 2 bytes @ 0x31
  2699  0000E6                     	ds	2
  2700  0000E8                     RTCC_from_caltime@ep:
  2701                           	opt stack 0
  2702  0000E8                     RTCC_from_epoch@ep:
  2703                           	opt stack 0
  2704                           
  2705                           ; 2 bytes @ 0x33
  2706  0000E8                     	ds	2
  2707  0000EA                     RTCC_adjust_time_inc@ct:
  2708                           	opt stack 0
  2709  0000EA                     RTCC_adjust_time_dec@ct:
  2710                           	opt stack 0
  2711                           
  2712                           ; 2 bytes @ 0x35
  2713  0000EA                     	ds	1
  2714  0000EB                     display_dec@dec:
  2715                           	opt stack 0
  2716  0000EB                     tx_send_dec@dec:
  2717                           	opt stack 0
  2718  0000EB                     _comm_disp$5306:
  2719                           	opt stack 0
  2720                           
  2721                           ; 4 bytes @ 0x36
  2722  0000EB                     	ds	1
  2723  0000EC                     display_time_1602@ct:
  2724                           	opt stack 0
  2725  0000EC                     RTCC_adjust_time_inc@ep:
  2726                           	opt stack 0
  2727  0000EC                     RTCC_adjust_time_dec@ep:
  2728                           	opt stack 0
  2729  0000EC                     comm_at@hand:
  2730                           	opt stack 0
  2731                           
  2732                           ; 2 bytes @ 0x37
  2733  0000EC                     	ds	2
  2734  0000EE                     ??_RTCC_adjust_time_inc:
  2735  0000EE                     ??_RTCC_adjust_time_dec:
  2736  0000EE                     comm_at@min:
  2737                           	opt stack 0
  2738  0000EE                     display_time_1602@ep:
  2739                           	opt stack 0
  2740                           
  2741                           ; 2 bytes @ 0x39
  2742  0000EE                     	ds	1
  2743  0000EF                     comm_at@max:
  2744                           	opt stack 0
  2745  0000EF                     comm_disp@content:
  2746                           	opt stack 0
  2747                           
  2748                           ; 1 bytes @ 0x3A
  2749  0000EF                     	ds	1
  2750  0000F0                     ??_display_time_1602:
  2751  0000F0                     comm_at@value:
  2752                           	opt stack 0
  2753                           
  2754                           ; 1 bytes @ 0x3B
  2755  0000F0                     	ds	1
  2756  0000F1                     command_operation@opcode:
  2757                           	opt stack 0
  2758                           
  2759                           ; 2 bytes @ 0x3C
  2760  0000F1                     	ds	1
  2761  0000F2                     RTCC_adjust_time_inc@i_2101:
  2762                           	opt stack 0
  2763  0000F2                     RTCC_adjust_time_dec@i_2114:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0x3D
  2767  0000F2                     	ds	1
  2768  0000F3                     RTCC_adjust_time_inc@i:
  2769                           	opt stack 0
  2770  0000F3                     RTCC_adjust_time_dec@i:
  2771                           	opt stack 0
  2772  0000F3                     command_operation@opland1:
  2773                           	opt stack 0
  2774                           
  2775                           ; 2 bytes @ 0x3E
  2776  0000F3                     	ds	1
  2777  0000F4                     RTCC_adjust_time_button@mode:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0x3F
  2781  0000F4                     	ds	1
  2782  0000F5                     command_operation@opland2:
  2783                           	opt stack 0
  2784                           
  2785                           ; 2 bytes @ 0x40
  2786  0000F5                     	ds	1
  2787  0000F6                     RTCC_adjust_time_button@cnt_inc:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x41
  2791  0000F6                     	ds	1
  2792  0000F7                     command_operation@opland3:
  2793                           	opt stack 0
  2794                           
  2795                           ; 2 bytes @ 0x42
  2796  0000F7                     	ds	1
  2797  0000F8                     RTCC_adjust_time_button@cnt_dec:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x43
  2801  0000F8                     	ds	1
  2802  0000F9                     _command_operation$5307:
  2803                           	opt stack 0
  2804                           
  2805                           ; 1 bytes @ 0x44
  2806  0000F9                     	ds	1
  2807  0000FA                     command_operation@percentage:
  2808                           	opt stack 0
  2809                           
  2810                           ; 1 bytes @ 0x45
  2811  0000FA                     	ds	1
  2812  0000FB                     ??_rx_loop:
  2813                           
  2814                           ; 0 bytes @ 0x46
  2815  0000FB                     	ds	2
  2816  0000FD                     rx_loop@i_2442:
  2817                           	opt stack 0
  2818                           
  2819                           ; 1 bytes @ 0x48
  2820  0000FD                     	ds	1
  2821  0000FE                     tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           postdec1	equ	0xFE5
  2828                           fsr1h	equ	0xFE2
  2829                           fsr1l	equ	0xFE1
  2830                           
  2831                           ; 0 bytes @ 0x49
  2832                           
  2833                           	psect	cstackCOMRAM
  2834  000001                     __pcstackCOMRAM:
  2835                           	opt stack 0
  2836  000001                     ??_USBStdGetDscHandler:
  2837  000001                     ??_USBStdGetStatusHandler:
  2838  000001                     ?i2_USBTransferOnePacket:
  2839                           	opt stack 0
  2840  000001                     ?i2___awdiv:
  2841                           	opt stack 0
  2842  000001                     ?i2___lwdiv:
  2843                           	opt stack 0
  2844  000001                     ?i2___lldiv:
  2845                           	opt stack 0
  2846  000001                     USBConfigureEndpoint@direction:
  2847                           	opt stack 0
  2848  000001                     USBCtrlTrfTxService@byteToSend:
  2849                           	opt stack 0
  2850  000001                     USBCtrlTrfRxService@i:
  2851                           	opt stack 0
  2852  000001                     i2LED_OUT@value:
  2853                           	opt stack 0
  2854  000001                     i2USBTransferOnePacket@dir:
  2855                           	opt stack 0
  2856  000001                     delay_timer_interrupt@d:
  2857                           	opt stack 0
  2858  000001                     i2___awdiv@dividend:
  2859                           	opt stack 0
  2860  000001                     i2___lwdiv@dividend:
  2861                           	opt stack 0
  2862  000001                     i2memset@p1:
  2863                           	opt stack 0
  2864  000001                     i2___lldiv@dividend:
  2865                           	opt stack 0
  2866                           
  2867                           ; 4 bytes @ 0x0
  2868  000001                     	ds	1
  2869  000002                     ??_USBConfigureEndpoint:
  2870  000002                     USBCtrlTrfRxService@byteToRead:
  2871                           	opt stack 0
  2872  000002                     USBCtrlTrfInHandler@lastDTS:
  2873                           	opt stack 0
  2874  000002                     i2LED_OUT@b:
  2875                           	opt stack 0
  2876  000002                     USBStdGetStatusHandler@p:
  2877                           	opt stack 0
  2878  000002                     i2USBTransferOnePacket@data:
  2879                           	opt stack 0
  2880                           
  2881                           ; 2 bytes @ 0x1
  2882  000002                     	ds	1
  2883  000003                     charge_time_count@i:
  2884                           	opt stack 0
  2885  000003                     i2___awdiv@divisor:
  2886                           	opt stack 0
  2887  000003                     i2___lwdiv@divisor:
  2888                           	opt stack 0
  2889  000003                     i2memset@c:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x2
  2893  000003                     	ds	1
  2894  000004                     i2USBTransferOnePacket@len:
  2895                           	opt stack 0
  2896                           
  2897                           ; 1 bytes @ 0x3
  2898  000004                     	ds	1
  2899  000005                     i2USBTransferOnePacket@ep:
  2900                           	opt stack 0
  2901  000005                     i2___awdiv@counter:
  2902                           	opt stack 0
  2903  000005                     i2___lwdiv@quotient:
  2904                           	opt stack 0
  2905  000005                     i2memset@n:
  2906                           	opt stack 0
  2907  000005                     i2___lldiv@divisor:
  2908                           	opt stack 0
  2909                           
  2910                           ; 4 bytes @ 0x4
  2911  000005                     	ds	1
  2912  000006                     USBConfigureEndpoint@EPNum:
  2913                           	opt stack 0
  2914  000006                     i2___awdiv@sign:
  2915                           	opt stack 0
  2916  000006                     i2USBTransferOnePacket@handle:
  2917                           	opt stack 0
  2918                           
  2919                           ; 2 bytes @ 0x5
  2920  000006                     	ds	1
  2921  000007                     i2___lwdiv@counter:
  2922                           	opt stack 0
  2923  000007                     USBConfigureEndpoint@handle:
  2924                           	opt stack 0
  2925  000007                     i2___awdiv@quotient:
  2926                           	opt stack 0
  2927  000007                     i2memset@p:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x6
  2931  000007                     	ds	2
  2932  000009                     ??_lchika:
  2933  000009                     USBEnableEndpoint@options:
  2934                           	opt stack 0
  2935  000009                     i2USBDeviceInit@i:
  2936                           	opt stack 0
  2937  000009                     i2___lldiv@quotient:
  2938                           	opt stack 0
  2939                           
  2940                           ; 4 bytes @ 0x8
  2941  000009                     	ds	1
  2942  00000A                     USBEnableEndpoint@p:
  2943                           	opt stack 0
  2944                           
  2945                           ; 2 bytes @ 0x9
  2946  00000A                     	ds	2
  2947  00000C                     lchika@i:
  2948                           	opt stack 0
  2949  00000C                     USBEnableEndpoint@ep:
  2950                           	opt stack 0
  2951                           
  2952                           ; 1 bytes @ 0xB
  2953  00000C                     	ds	1
  2954  00000D                     i2___lldiv@counter:
  2955                           	opt stack 0
  2956  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2957                           	opt stack 0
  2958                           
  2959                           ; 2 bytes @ 0xC
  2960  00000D                     	ds	1
  2961  00000E                     ??_integrating:
  2962                           
  2963                           ; 0 bytes @ 0xD
  2964  00000E                     	ds	1
  2965  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0xE
  2969  00000F                     	ds	1
  2970  000010                     integrating@port:
  2971                           	opt stack 0
  2972                           
  2973                           ; 1 bytes @ 0xF
  2974  000010                     	ds	1
  2975  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2976                           	opt stack 0
  2977                           
  2978                           ; 2 bytes @ 0x10
  2979  000011                     	ds	2
  2980  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2981                           
  2982                           ; 0 bytes @ 0x12
  2983  000013                     	ds	2
  2984  000015                     ??_USBStdFeatureReqHandler:
  2985  000015                     USBStdSetCfgHandler@i:
  2986                           	opt stack 0
  2987                           
  2988                           ; 1 bytes @ 0x14
  2989  000015                     	ds	1
  2990  000016                     USBStdFeatureReqHandler@pUEP:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x15
  2994  000016                     	ds	2
  2995  000018                     USBStdFeatureReqHandler@current_ep_data:
  2996                           	opt stack 0
  2997                           
  2998                           ; 1 bytes @ 0x17
  2999  000018                     	ds	1
  3000  000019                     USBStdFeatureReqHandler@p:
  3001                           	opt stack 0
  3002                           
  3003                           ; 2 bytes @ 0x18
  3004  000019                     	ds	2
  3005  00001B                     ??_USBCtrlEPService:
  3006  00001B                     
  3007                           ; 0 bytes @ 0x1A
  3008  00001B                     	ds	2
  3009  00001D                     USBCtrlEPService@setup_cnt:
  3010                           	opt stack 0
  3011                           
  3012                           ; 1 bytes @ 0x1C
  3013  00001D                     	ds	1
  3014  00001E                     USBDeviceTasks@i:
  3015                           	opt stack 0
  3016                           
  3017                           ; 1 bytes @ 0x1D
  3018  00001E                     	ds	1
  3019  00001F                     ??_ISR:
  3020                           
  3021                           ; 0 bytes @ 0x1E
  3022  00001F                     	ds	14
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           postdec1	equ	0xFE5
  3030                           fsr1h	equ	0xFE2
  3031                           fsr1l	equ	0xFE1
  3032                           
  3033 ;;
  3034 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3035 ;;
  3036 ;; *************** function _main *****************
  3037 ;; Defined at:
  3038 ;;		line 130 in file "main.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  i               1  100[BANK3 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2  912[None  ] int 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels required when called:   19
  3058 ;; This function calls:
  3059 ;;		_LED_OUT
  3060 ;;		_OUT
  3061 ;;		_RTCC_from_RTCC
  3062 ;;		_RTCC_from_epoch
  3063 ;;		_RTCC_loop
  3064 ;;		_USB_loop
  3065 ;;		_ctmu_loop
  3066 ;;		_ctmu_set_ratio
  3067 ;;		_delay_set
  3068 ;;		_main_init
  3069 ;;		_normal_mode_loop
  3070 ;;		_rx_loop
  3071 ;; This function is called by:
  3072 ;;		Startup code after reset
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text0
  3077  012FD2                     __ptext0:
  3078                           	opt stack 0
  3079  012FD2                     _main:
  3080                           	opt stack 12
  3081                           
  3082                           ;main.c: 131: main_init();
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;incstack = 0
  3086  012FD2  ECB8  F0A5         	call	_main_init	;wreg free
  3087                           
  3088                           ;main.c: 133: ctmu_set_ratio(ctmu_ratio);
  3089  012FD6  0100               	movlb	0	; () banked
  3090  012FD8  51FE               	movf	_ctmu_ratio& (0+255),w,b
  3091  012FDA  ECF7  F09C         	call	_ctmu_set_ratio
  3092                           
  3093                           ;main.c: 135: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3094  012FDE  0EAA               	movlw	low _caltime_now
  3095  012FE0  0100               	movlb	0	; () banked
  3096  012FE2  6FDD               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3097  012FE4  0E00               	movlw	high _caltime_now
  3098  012FE6  0100               	movlb	0	; () banked
  3099  012FE8  6FDE               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3100  012FEA  0EB1               	movlw	low _epoch_now
  3101  012FEC  0100               	movlb	0	; () banked
  3102  012FEE  6FDF               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3103  012FF0  0E00               	movlw	high _epoch_now
  3104  012FF2  0100               	movlb	0	; () banked
  3105  012FF4  6FE0               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3106  012FF6  EC85  F0B0         	call	_RTCC_from_RTCC	;wreg free
  3107                           
  3108                           ;main.c: 136: if (caltime_now.DD == 0) {
  3109  012FFA  0100               	movlb	0	; () banked
  3110  012FFC  51AE               	movf	(_caltime_now+4)& (0+255),w,b
  3111  012FFE  A4D8               	btfss	status,2,c
  3112  013000  D017               	goto	l11156
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;main.c: 137: epoch_now = 0;
  3116  013002  0E00               	movlw	0
  3117  013004  0100               	movlb	0	; () banked
  3118  013006  6FB1               	movwf	_epoch_now& (0+255),b
  3119  013008  0E00               	movlw	0
  3120  01300A  6FB2               	movwf	(_epoch_now+1)& (0+255),b
  3121  01300C  0E00               	movlw	0
  3122  01300E  6FB3               	movwf	(_epoch_now+2)& (0+255),b
  3123  013010  0E00               	movlw	0
  3124  013012  6FB4               	movwf	(_epoch_now+3)& (0+255),b
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;main.c: 138: RTCC_from_epoch(&caltime_now, &epoch_now);
  3128  013014  0EAA               	movlw	low _caltime_now
  3129  013016  0100               	movlb	0	; () banked
  3130  013018  6FE6               	movwf	RTCC_from_epoch@ct& (0+255),b
  3131  01301A  0E00               	movlw	high _caltime_now
  3132  01301C  0100               	movlb	0	; () banked
  3133  01301E  6FE7               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  3134  013020  0EB1               	movlw	low _epoch_now
  3135  013022  0100               	movlb	0	; () banked
  3136  013024  6FE8               	movwf	RTCC_from_epoch@ep& (0+255),b
  3137  013026  0E00               	movlw	high _epoch_now
  3138  013028  0100               	movlb	0	; () banked
  3139  01302A  6FE9               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  3140  01302C  EC74  F0B0         	call	_RTCC_from_epoch	;wreg free
  3141  013030                     l11156:
  3142                           
  3143                           ;main.c: 139: }
  3144                           ;main.c: 140: print_content = LOGO;
  3145  013030  0E00               	movlw	0
  3146  013032  0100               	movlb	0	; () banked
  3147  013034  6FA6               	movwf	_print_content& (0+255),b
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;main.c: 141: next_print_content = TIME;
  3151  013036  0E01               	movlw	1
  3152  013038  6E4E               	movwf	_next_print_content,c
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;main.c: 142: delay_set(&delay_display, 120);
  3156  01303A  0E51               	movlw	low _delay_display
  3157  01303C  0100               	movlb	0	; () banked
  3158  01303E  6FB5               	movwf	delay_set@d& (0+255),b
  3159  013040  0E00               	movlw	high _delay_display
  3160  013042  0100               	movlb	0	; () banked
  3161  013044  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  3162  013046  0E00               	movlw	0
  3163  013048  0100               	movlb	0	; () banked
  3164  01304A  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  3165  01304C  0E78               	movlw	120
  3166  01304E  6FB7               	movwf	delay_set@value& (0+255),b
  3167  013050  EC62  F0B0         	call	_delay_set	;wreg free
  3168                           
  3169                           ;main.c: 144: for (uint8_t i = 0; i < 3; i++) {
  3170  013054  0E00               	movlw	0
  3171  013056  0103               	movlb	3	; () banked
  3172  013058  6FF6               	movwf	main@i& (0+255),b
  3173  01305A                     l11164:
  3174                           
  3175                           ; BSR set to: 3
  3176  01305A  0E02               	movlw	2
  3177  01305C  0103               	movlb	3	; () banked
  3178  01305E  65F6               	cpfsgt	main@i& (0+255),b
  3179  013060  D001               	goto	l11168
  3180  013062  D029               	goto	l915
  3181  013064                     l11168:
  3182                           
  3183                           ; BSR set to: 3
  3184                           ;main.c: 145: OUT(i, 1);
  3185  013064  0E01               	movlw	1
  3186  013066  0100               	movlb	0	; () banked
  3187  013068  6FB5               	movwf	OUT@value& (0+255),b
  3188  01306A  0103               	movlb	3	; () banked
  3189  01306C  51F6               	movf	main@i& (0+255),w,b
  3190  01306E  EC6A  F0AB         	call	_OUT
  3191                           
  3192                           ;main.c: 146: LED_OUT(i, 1);
  3193  013072  0E01               	movlw	1
  3194  013074  0100               	movlb	0	; () banked
  3195  013076  6FB5               	movwf	LED_OUT@value& (0+255),b
  3196  013078  0103               	movlb	3	; () banked
  3197  01307A  51F6               	movf	main@i& (0+255),w,b
  3198  01307C  EC49  F0AD         	call	_LED_OUT
  3199                           
  3200                           ;main.c: 147: cut_cnt[i] = 0;
  3201  013080  0103               	movlb	3	; () banked
  3202  013082  51F6               	movf	main@i& (0+255),w,b
  3203  013084  0D02               	mullw	2
  3204  013086  0ECF               	movlw	low _cut_cnt
  3205  013088  24F3               	addwf	prodl,w,c
  3206  01308A  6ED9               	movwf	fsr2l,c
  3207  01308C  0E01               	movlw	high _cut_cnt
  3208  01308E  20F4               	addwfc	prodh,w,c
  3209  013090  6EDA               	movwf	fsr2h,c
  3210  013092  0E00               	movlw	0
  3211  013094  6EDE               	movwf	postinc2,c
  3212  013096  0E00               	movlw	0
  3213  013098  6EDD               	movwf	postdec2,c
  3214                           
  3215                           ; BSR set to: 3
  3216                           ;main.c: 148: auto_cut_ON[i] = 1;
  3217  01309A  0103               	movlb	3	; () banked
  3218  01309C  51F6               	movf	main@i& (0+255),w,b
  3219  01309E  0D01               	mullw	1
  3220  0130A0  0E87               	movlw	low _auto_cut_ON
  3221  0130A2  24F3               	addwf	prodl,w,c
  3222  0130A4  6ED9               	movwf	fsr2l,c
  3223  0130A6  0E00               	movlw	high _auto_cut_ON
  3224  0130A8  20F4               	addwfc	prodh,w,c
  3225  0130AA  6EDA               	movwf	fsr2h,c
  3226  0130AC  0E01               	movlw	1
  3227  0130AE  6EDF               	movwf	indf2,c
  3228                           
  3229                           ; BSR set to: 3
  3230  0130B0  0103               	movlb	3	; () banked
  3231  0130B2  2BF6               	incf	main@i& (0+255),f,b
  3232  0130B4  D7D2               	goto	l11164
  3233  0130B6                     l915:
  3234                           
  3235                           ; BSR set to: 3
  3236                           ;main.c: 149: }
  3237                           ;main.c: 151: INTCONbits.GIE = 1;
  3238  0130B6  8EF2               	bsf	intcon,7,c	;volatile
  3239                           
  3240                           ;main.c: 158: INTCONbits.GIE = 0;
  3241                           
  3242                           ;main.c: 156: while (1) {
  3243  0130B8  9EF2               	bcf	intcon,7,c	;volatile
  3244                           
  3245                           ;main.c: 159: if (!sleep_flag) {
  3246  0130BA  0100               	movlb	0	; () banked
  3247  0130BC  51A8               	movf	_sleep_flag& (0+255),w,b
  3248  0130BE  A4D8               	btfss	status,2,c
  3249  0130C0  D7FA               	goto	l915
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;main.c: 160: INTCONbits.GIE = 1;
  3253  0130C2  8EF2               	bsf	intcon,7,c	;volatile
  3254                           
  3255                           ;main.c: 161: INTCONbits.GIE = 0;
  3256  0130C4  9EF2               	bcf	intcon,7,c	;volatile
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main.c: 162: USB_loop();
  3260  0130C6  EC9A  F0A7         	call	_USB_loop	;wreg free
  3261                           
  3262                           ;main.c: 163: INTCONbits.GIE = 1;
  3263  0130CA  8EF2               	bsf	intcon,7,c	;volatile
  3264                           
  3265                           ;main.c: 164: INTCONbits.GIE = 0;
  3266  0130CC  9EF2               	bcf	intcon,7,c	;volatile
  3267                           
  3268                           ;main.c: 165: rx_loop();
  3269  0130CE  EC71  F08A         	call	_rx_loop	;wreg free
  3270                           
  3271                           ;main.c: 166: INTCONbits.GIE = 1;
  3272  0130D2  8EF2               	bsf	intcon,7,c	;volatile
  3273                           
  3274                           ;main.c: 167: INTCONbits.GIE = 0;
  3275  0130D4  9EF2               	bcf	intcon,7,c	;volatile
  3276                           
  3277                           ;main.c: 168: normal_mode_loop();
  3278  0130D6  EC36  F0A1         	call	_normal_mode_loop	;wreg free
  3279                           
  3280                           ;main.c: 169: INTCONbits.GIE = 1;
  3281  0130DA  8EF2               	bsf	intcon,7,c	;volatile
  3282                           
  3283                           ;main.c: 170: INTCONbits.GIE = 0;
  3284  0130DC  9EF2               	bcf	intcon,7,c	;volatile
  3285                           
  3286                           ;main.c: 171: RTCC_loop();
  3287  0130DE  ECB5  F0AD         	call	_RTCC_loop	;wreg free
  3288                           
  3289                           ;main.c: 172: INTCONbits.GIE = 1;
  3290  0130E2  8EF2               	bsf	intcon,7,c	;volatile
  3291                           
  3292                           ;main.c: 173: INTCONbits.GIE = 0;
  3293  0130E4  9EF2               	bcf	intcon,7,c	;volatile
  3294                           
  3295                           ;main.c: 174: ctmu_loop();
  3296  0130E6  EC8E  F099         	call	_ctmu_loop	;wreg free
  3297  0130EA  D7E5               	goto	l915
  3298  0130EC                     __end_of_main:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           postdec1	equ	0xFE5
  3310                           fsr1h	equ	0xFE2
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           postdec2	equ	0xFDD
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function _rx_loop *****************
  3320 ;; Defined at:
  3321 ;;		line 466 in file "tasks.h"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  i               1   72[BANK0 ] unsigned char 
  3326 ;;  opland2       100    0[BANK3 ] unsigned char [100]
  3327 ;;  opland1       100  100[BANK2 ] unsigned char [100]
  3328 ;;  opcode        100  100[BANK1 ] unsigned char [100]
  3329 ;;  opland3       100    0[BANK2 ] unsigned char [100]
  3330 ;;  i               1  202[BANK2 ] unsigned char 
  3331 ;;  ascii           1  200[BANK1 ] unsigned char 
  3332 ;;  buf           100    0[BANK1 ] unsigned char [100]
  3333 ;; Return value:  Size  Location     Type
  3334 ;;		None               void
  3335 ;; Registers used:
  3336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Locals:         0       1     201     203     100       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Totals:         0       3     201     203     100       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;Total ram usage:      507 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:   18
  3349 ;; This function calls:
  3350 ;;		_command_operation
  3351 ;;		_ringbuf_backspace
  3352 ;;		_ringbuf_delete
  3353 ;;		_ringbuf_init
  3354 ;;		_ringbuf_num
  3355 ;;		_ringbuf_pop
  3356 ;;		_ringbuf_put
  3357 ;;		_tx_send
  3358 ;;		_tx_sendn
  3359 ;;		_tx_sends
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text1
  3366  0114E2                     __ptext1:
  3367                           	opt stack 0
  3368  0114E2                     _rx_loop:
  3369                           	opt stack 12
  3370                           
  3371                           ;tasks.h: 467: static ringbuf_t comm_buf;
  3372                           ;tasks.h: 468: static uint8_t comm_buf_init = 1;
  3373                           ;tasks.h: 469: if (comm_buf_init) {
  3374                           
  3375                           ;incstack = 0
  3376  0114E2  0101               	movlb	1	; () banked
  3377  0114E4  51FF               	movf	rx_loop@comm_buf_init& (0+255),w,b
  3378  0114E6  0101               	movlb	1	; () banked
  3379  0114E8  B4D8               	btfsc	status,2,c
  3380  0114EA  D016               	goto	l10800
  3381                           
  3382                           ; BSR set to: 1
  3383                           ;tasks.h: 470: comm_buf_init = 0;
  3384  0114EC  0E00               	movlw	0
  3385  0114EE  0101               	movlb	1	; () banked
  3386  0114F0  6FFF               	movwf	rx_loop@comm_buf_init& (0+255),b
  3387                           
  3388                           ; BSR set to: 1
  3389                           ;tasks.h: 471: char buf[100];
  3390                           ;tasks.h: 472: ringbuf_init(&comm_buf, buf, sizeof (buf));
  3391  0114F2  0EF1               	movlw	low rx_loop@comm_buf
  3392  0114F4  0100               	movlb	0	; () banked
  3393  0114F6  6FB5               	movwf	ringbuf_init@rb& (0+255),b
  3394  0114F8  0E01               	movlw	high rx_loop@comm_buf
  3395  0114FA  0100               	movlb	0	; () banked
  3396  0114FC  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3397  0114FE  0E00               	movlw	low rx_loop@buf
  3398  011500  0100               	movlb	0	; () banked
  3399  011502  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
  3400  011504  0E01               	movlw	high rx_loop@buf
  3401  011506  0100               	movlb	0	; () banked
  3402  011508  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3403  01150A  0E00               	movlw	0
  3404  01150C  0100               	movlb	0	; () banked
  3405  01150E  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3406  011510  0E64               	movlw	100
  3407  011512  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
  3408  011514  ECA7  F0AC         	call	_ringbuf_init	;wreg free
  3409  011518                     l10800:
  3410                           
  3411                           ;tasks.h: 473: }
  3412                           ;tasks.h: 474: if (ringbuf_num(&rx_buf)) {
  3413  011518  0EF1               	movlw	low _rx_buf
  3414  01151A  0100               	movlb	0	; () banked
  3415  01151C  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  3416  01151E  0E02               	movlw	high _rx_buf
  3417  011520  0100               	movlb	0	; () banked
  3418  011522  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3419  011524  EC0B  F09C         	call	_ringbuf_num	;wreg free
  3420  011528  0100               	movlb	0	; () banked
  3421  01152A  51B5               	movf	?_ringbuf_num& (0+255),w,b
  3422  01152C  0100               	movlb	0	; () banked
  3423  01152E  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3424  011530  B4D8               	btfsc	status,2,c
  3425  011532  0012               	return	
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;tasks.h: 475: char ascii = ringbuf_pop(&rx_buf);
  3429  011534  0EF1               	movlw	low _rx_buf
  3430  011536  0100               	movlb	0	; () banked
  3431  011538  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3432  01153A  0E02               	movlw	high _rx_buf
  3433  01153C  0100               	movlb	0	; () banked
  3434  01153E  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3435  011540  EC04  F0A2         	call	_ringbuf_pop	;wreg free
  3436  011544  0101               	movlb	1	; () banked
  3437  011546  6FC8               	movwf	rx_loop@ascii& (0+255),b
  3438                           
  3439                           ;tasks.h: 476: switch (ascii) {
  3440  011548  D155               	goto	l10866
  3441  01154A                     l10804:
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;tasks.h: 478: ringbuf_put(&comm_buf, '\0');
  3445  01154A  0EF1               	movlw	low rx_loop@comm_buf
  3446  01154C  0100               	movlb	0	; () banked
  3447  01154E  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  3448  011550  0E01               	movlw	high rx_loop@comm_buf
  3449  011552  0100               	movlb	0	; () banked
  3450  011554  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3451  011556  0E00               	movlw	0
  3452  011558  0100               	movlb	0	; () banked
  3453  01155A  6FBF               	movwf	ringbuf_put@asciicode& (0+255),b
  3454  01155C  EC64  F0A0         	call	_ringbuf_put	;wreg free
  3455                           
  3456                           ;tasks.h: 479: tx_send('\t');
  3457  011560  0E09               	movlw	9
  3458  011562  ECC5  F0B0         	call	_tx_send
  3459                           
  3460                           ;tasks.h: 480: tx_sendn(ringbuf_num(&comm_buf)-1, 2);
  3461  011566  0EF1               	movlw	low rx_loop@comm_buf
  3462  011568  0100               	movlb	0	; () banked
  3463  01156A  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  3464  01156C  0E01               	movlw	high rx_loop@comm_buf
  3465  01156E  0100               	movlb	0	; () banked
  3466  011570  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3467  011572  EC0B  F09C         	call	_ringbuf_num	;wreg free
  3468  011576  0EFF               	movlw	255
  3469  011578  0100               	movlb	0	; () banked
  3470  01157A  25B5               	addwf	?_ringbuf_num& (0+255),w,b
  3471  01157C  0102               	movlb	2	; () banked
  3472  01157E  6FC8               	movwf	_rx_loop$5308& (0+255),b
  3473  011580  0EFF               	movlw	255
  3474  011582  0100               	movlb	0	; () banked
  3475  011584  21B6               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3476  011586  0102               	movlb	2	; () banked
  3477  011588  6FC9               	movwf	(_rx_loop$5308+1)& (0+255),b
  3478                           
  3479                           ;tasks.h: 480: tx_sendn(ringbuf_num(&comm_buf)-1, 2);
  3480  01158A  C2C8  F0D8         	movff	_rx_loop$5308,tx_sendn@value
  3481  01158E  C2C9  F0D9         	movff	_rx_loop$5308+1,tx_sendn@value+1
  3482  011592  0E02               	movlw	2
  3483  011594  0100               	movlb	0	; () banked
  3484  011596  6FDA               	movwf	tx_sendn@digits& (0+255),b
  3485  011598  EC56  F0AA         	call	_tx_sendn	;wreg free
  3486                           
  3487                           ;tasks.h: 481: tx_sends("\n\n");
  3488  01159C  0ED5               	movlw	low STR_90
  3489  01159E  0100               	movlb	0	; () banked
  3490  0115A0  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  3491  0115A2  0EFF               	movlw	high STR_90
  3492  0115A4  0100               	movlb	0	; () banked
  3493  0115A6  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3494  0115A8  EC04  F0AB         	call	_tx_sends	;wreg free
  3495                           
  3496                           ;tasks.h: 482: char opcode[100];
  3497                           ;tasks.h: 483: char opland1[100];
  3498                           ;tasks.h: 484: char opland2[100];
  3499                           ;tasks.h: 485: char opland3[100];
  3500                           ;tasks.h: 486: uint8_t i;
  3501                           ;tasks.h: 487: for (i = 0; opcode[i] = ringbuf_pop(&comm_buf); i++);
  3502  0115AC  0E00               	movlw	0
  3503  0115AE  0102               	movlb	2	; () banked
  3504  0115B0  6FCA               	movwf	rx_loop@i& (0+255),b
  3505  0115B2  D002               	goto	l10812
  3506  0115B4                     l10810:
  3507                           
  3508                           ; BSR set to: 2
  3509  0115B4  0102               	movlb	2	; () banked
  3510  0115B6  2BCA               	incf	rx_loop@i& (0+255),f,b
  3511  0115B8                     l10812:
  3512                           
  3513                           ; BSR set to: 2
  3514  0115B8  0EF1               	movlw	low rx_loop@comm_buf
  3515  0115BA  0100               	movlb	0	; () banked
  3516  0115BC  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3517  0115BE  0E01               	movlw	high rx_loop@comm_buf
  3518  0115C0  0100               	movlb	0	; () banked
  3519  0115C2  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3520  0115C4  EC04  F0A2         	call	_ringbuf_pop	;wreg free
  3521  0115C8  0100               	movlb	0	; () banked
  3522  0115CA  6FFB               	movwf	??_rx_loop& (0+255),b
  3523  0115CC  0102               	movlb	2	; () banked
  3524  0115CE  51CA               	movf	rx_loop@i& (0+255),w,b
  3525  0115D0  0D01               	mullw	1
  3526  0115D2  0E64               	movlw	low rx_loop@opcode
  3527  0115D4  24F3               	addwf	prodl,w,c
  3528  0115D6  6ED9               	movwf	fsr2l,c
  3529  0115D8  0E01               	movlw	high rx_loop@opcode
  3530  0115DA  20F4               	addwfc	prodh,w,c
  3531  0115DC  6EDA               	movwf	fsr2h,c
  3532  0115DE  C0FB  FFDF         	movff	??_rx_loop,indf2
  3533  0115E2  50DF               	movf	indf2,w,c
  3534  0115E4  A4D8               	btfss	status,2,c
  3535  0115E6  D7E6               	goto	l10810
  3536                           
  3537                           ; BSR set to: 2
  3538                           ;tasks.h: 488: opcode[i] = '\0';
  3539                           
  3540                           ; BSR set to: 2
  3541  0115E8  0102               	movlb	2	; () banked
  3542  0115EA  51CA               	movf	rx_loop@i& (0+255),w,b
  3543  0115EC  0D01               	mullw	1
  3544  0115EE  0E64               	movlw	low rx_loop@opcode
  3545  0115F0  24F3               	addwf	prodl,w,c
  3546  0115F2  6ED9               	movwf	fsr2l,c
  3547  0115F4  0E01               	movlw	high rx_loop@opcode
  3548  0115F6  20F4               	addwfc	prodh,w,c
  3549  0115F8  6EDA               	movwf	fsr2h,c
  3550  0115FA  0E00               	movlw	0
  3551  0115FC  6EDF               	movwf	indf2,c
  3552                           
  3553                           ; BSR set to: 2
  3554                           ;tasks.h: 489: for (i = 0; opland1[i] = ringbuf_pop(&comm_buf); i++);
  3555  0115FE  0E00               	movlw	0
  3556  011600  0102               	movlb	2	; () banked
  3557  011602  6FCA               	movwf	rx_loop@i& (0+255),b
  3558  011604  D002               	goto	l10820
  3559  011606                     l10818:
  3560                           
  3561                           ; BSR set to: 2
  3562  011606  0102               	movlb	2	; () banked
  3563  011608  2BCA               	incf	rx_loop@i& (0+255),f,b
  3564  01160A                     l10820:
  3565                           
  3566                           ; BSR set to: 2
  3567  01160A  0EF1               	movlw	low rx_loop@comm_buf
  3568  01160C  0100               	movlb	0	; () banked
  3569  01160E  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3570  011610  0E01               	movlw	high rx_loop@comm_buf
  3571  011612  0100               	movlb	0	; () banked
  3572  011614  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3573  011616  EC04  F0A2         	call	_ringbuf_pop	;wreg free
  3574  01161A  0100               	movlb	0	; () banked
  3575  01161C  6FFB               	movwf	??_rx_loop& (0+255),b
  3576  01161E  0102               	movlb	2	; () banked
  3577  011620  51CA               	movf	rx_loop@i& (0+255),w,b
  3578  011622  0D01               	mullw	1
  3579  011624  0E64               	movlw	low rx_loop@opland1
  3580  011626  24F3               	addwf	prodl,w,c
  3581  011628  6ED9               	movwf	fsr2l,c
  3582  01162A  0E02               	movlw	high rx_loop@opland1
  3583  01162C  20F4               	addwfc	prodh,w,c
  3584  01162E  6EDA               	movwf	fsr2h,c
  3585  011630  C0FB  FFDF         	movff	??_rx_loop,indf2
  3586  011634  50DF               	movf	indf2,w,c
  3587  011636  A4D8               	btfss	status,2,c
  3588  011638  D7E6               	goto	l10818
  3589                           
  3590                           ; BSR set to: 2
  3591                           ;tasks.h: 490: opland1[i] = '\0';
  3592                           
  3593                           ; BSR set to: 2
  3594  01163A  0102               	movlb	2	; () banked
  3595  01163C  51CA               	movf	rx_loop@i& (0+255),w,b
  3596  01163E  0D01               	mullw	1
  3597  011640  0E64               	movlw	low rx_loop@opland1
  3598  011642  24F3               	addwf	prodl,w,c
  3599  011644  6ED9               	movwf	fsr2l,c
  3600  011646  0E02               	movlw	high rx_loop@opland1
  3601  011648  20F4               	addwfc	prodh,w,c
  3602  01164A  6EDA               	movwf	fsr2h,c
  3603  01164C  0E00               	movlw	0
  3604  01164E  6EDF               	movwf	indf2,c
  3605                           
  3606                           ; BSR set to: 2
  3607                           ;tasks.h: 491: for (i = 0; opland2[i] = ringbuf_pop(&comm_buf); i++);
  3608  011650  0E00               	movlw	0
  3609  011652  0102               	movlb	2	; () banked
  3610  011654  6FCA               	movwf	rx_loop@i& (0+255),b
  3611  011656  D002               	goto	l10828
  3612  011658                     l10826:
  3613                           
  3614                           ; BSR set to: 2
  3615  011658  0102               	movlb	2	; () banked
  3616  01165A  2BCA               	incf	rx_loop@i& (0+255),f,b
  3617  01165C                     l10828:
  3618                           
  3619                           ; BSR set to: 2
  3620  01165C  0EF1               	movlw	low rx_loop@comm_buf
  3621  01165E  0100               	movlb	0	; () banked
  3622  011660  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3623  011662  0E01               	movlw	high rx_loop@comm_buf
  3624  011664  0100               	movlb	0	; () banked
  3625  011666  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3626  011668  EC04  F0A2         	call	_ringbuf_pop	;wreg free
  3627  01166C  0100               	movlb	0	; () banked
  3628  01166E  6FFB               	movwf	??_rx_loop& (0+255),b
  3629  011670  0102               	movlb	2	; () banked
  3630  011672  51CA               	movf	rx_loop@i& (0+255),w,b
  3631  011674  0D01               	mullw	1
  3632  011676  0E92               	movlw	low rx_loop@opland2
  3633  011678  24F3               	addwf	prodl,w,c
  3634  01167A  6ED9               	movwf	fsr2l,c
  3635  01167C  0E03               	movlw	high rx_loop@opland2
  3636  01167E  20F4               	addwfc	prodh,w,c
  3637  011680  6EDA               	movwf	fsr2h,c
  3638  011682  C0FB  FFDF         	movff	??_rx_loop,indf2
  3639  011686  50DF               	movf	indf2,w,c
  3640  011688  A4D8               	btfss	status,2,c
  3641  01168A  D7E6               	goto	l10826
  3642                           
  3643                           ; BSR set to: 2
  3644                           ;tasks.h: 492: opland2[i] = '\0';
  3645                           
  3646                           ; BSR set to: 2
  3647  01168C  0102               	movlb	2	; () banked
  3648  01168E  51CA               	movf	rx_loop@i& (0+255),w,b
  3649  011690  0D01               	mullw	1
  3650  011692  0E92               	movlw	low rx_loop@opland2
  3651  011694  24F3               	addwf	prodl,w,c
  3652  011696  6ED9               	movwf	fsr2l,c
  3653  011698  0E03               	movlw	high rx_loop@opland2
  3654  01169A  20F4               	addwfc	prodh,w,c
  3655  01169C  6EDA               	movwf	fsr2h,c
  3656  01169E  0E00               	movlw	0
  3657  0116A0  6EDF               	movwf	indf2,c
  3658                           
  3659                           ; BSR set to: 2
  3660                           ;tasks.h: 493: for (i = 0; opland3[i] = ringbuf_pop(&comm_buf); i++);
  3661  0116A2  0E00               	movlw	0
  3662  0116A4  0102               	movlb	2	; () banked
  3663  0116A6  6FCA               	movwf	rx_loop@i& (0+255),b
  3664  0116A8  D002               	goto	l10836
  3665  0116AA                     l10834:
  3666                           
  3667                           ; BSR set to: 2
  3668  0116AA  0102               	movlb	2	; () banked
  3669  0116AC  2BCA               	incf	rx_loop@i& (0+255),f,b
  3670  0116AE                     l10836:
  3671                           
  3672                           ; BSR set to: 2
  3673  0116AE  0EF1               	movlw	low rx_loop@comm_buf
  3674  0116B0  0100               	movlb	0	; () banked
  3675  0116B2  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3676  0116B4  0E01               	movlw	high rx_loop@comm_buf
  3677  0116B6  0100               	movlb	0	; () banked
  3678  0116B8  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3679  0116BA  EC04  F0A2         	call	_ringbuf_pop	;wreg free
  3680  0116BE  0100               	movlb	0	; () banked
  3681  0116C0  6FFB               	movwf	??_rx_loop& (0+255),b
  3682  0116C2  0102               	movlb	2	; () banked
  3683  0116C4  51CA               	movf	rx_loop@i& (0+255),w,b
  3684  0116C6  0D01               	mullw	1
  3685  0116C8  0E00               	movlw	low rx_loop@opland3
  3686  0116CA  24F3               	addwf	prodl,w,c
  3687  0116CC  6ED9               	movwf	fsr2l,c
  3688  0116CE  0E02               	movlw	high rx_loop@opland3
  3689  0116D0  20F4               	addwfc	prodh,w,c
  3690  0116D2  6EDA               	movwf	fsr2h,c
  3691  0116D4  C0FB  FFDF         	movff	??_rx_loop,indf2
  3692  0116D8  50DF               	movf	indf2,w,c
  3693  0116DA  A4D8               	btfss	status,2,c
  3694  0116DC  D7E6               	goto	l10834
  3695                           
  3696                           ; BSR set to: 2
  3697                           ;tasks.h: 494: opland3[i] = '\0';
  3698                           
  3699                           ; BSR set to: 2
  3700  0116DE  0102               	movlb	2	; () banked
  3701  0116E0  51CA               	movf	rx_loop@i& (0+255),w,b
  3702  0116E2  0D01               	mullw	1
  3703  0116E4  0E00               	movlw	low rx_loop@opland3
  3704  0116E6  24F3               	addwf	prodl,w,c
  3705  0116E8  6ED9               	movwf	fsr2l,c
  3706  0116EA  0E02               	movlw	high rx_loop@opland3
  3707  0116EC  20F4               	addwfc	prodh,w,c
  3708  0116EE  6EDA               	movwf	fsr2h,c
  3709  0116F0  0E00               	movlw	0
  3710  0116F2  6EDF               	movwf	indf2,c
  3711                           
  3712                           ; BSR set to: 2
  3713                           ;tasks.h: 495: command_operation(opcode, opland1, opland2, opland3);
  3714  0116F4  0E64               	movlw	low rx_loop@opcode
  3715  0116F6  0100               	movlb	0	; () banked
  3716  0116F8  6FF1               	movwf	command_operation@opcode& (0+255),b
  3717  0116FA  0E01               	movlw	high rx_loop@opcode
  3718  0116FC  0100               	movlb	0	; () banked
  3719  0116FE  6FF2               	movwf	(command_operation@opcode+1)& (0+255),b
  3720  011700  0E64               	movlw	low rx_loop@opland1
  3721  011702  0100               	movlb	0	; () banked
  3722  011704  6FF3               	movwf	command_operation@opland1& (0+255),b
  3723  011706  0E02               	movlw	high rx_loop@opland1
  3724  011708  0100               	movlb	0	; () banked
  3725  01170A  6FF4               	movwf	(command_operation@opland1+1)& (0+255),b
  3726  01170C  0E92               	movlw	low rx_loop@opland2
  3727  01170E  0100               	movlb	0	; () banked
  3728  011710  6FF5               	movwf	command_operation@opland2& (0+255),b
  3729  011712  0E03               	movlw	high rx_loop@opland2
  3730  011714  0100               	movlb	0	; () banked
  3731  011716  6FF6               	movwf	(command_operation@opland2+1)& (0+255),b
  3732  011718  0E00               	movlw	low rx_loop@opland3
  3733  01171A  0100               	movlb	0	; () banked
  3734  01171C  6FF7               	movwf	command_operation@opland3& (0+255),b
  3735  01171E  0E02               	movlw	high rx_loop@opland3
  3736  011720  0100               	movlb	0	; () banked
  3737  011722  6FF8               	movwf	(command_operation@opland3+1)& (0+255),b
  3738  011724  EC00  F080         	call	_command_operation	;wreg free
  3739                           
  3740                           ;tasks.h: 496: break;
  3741  011728  0012               	return	
  3742  01172A                     l10842:
  3743                           
  3744                           ;tasks.h: 498: ringbuf_put(&comm_buf, '\0');
  3745  01172A  0EF1               	movlw	low rx_loop@comm_buf
  3746  01172C  0100               	movlb	0	; () banked
  3747  01172E  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  3748  011730  0E01               	movlw	high rx_loop@comm_buf
  3749  011732  0100               	movlb	0	; () banked
  3750  011734  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3751  011736  0E00               	movlw	0
  3752  011738  0100               	movlb	0	; () banked
  3753  01173A  6FBF               	movwf	ringbuf_put@asciicode& (0+255),b
  3754  01173C  EC64  F0A0         	call	_ringbuf_put	;wreg free
  3755                           
  3756                           ;tasks.h: 499: tx_send(' ');
  3757  011740  0E20               	movlw	32
  3758  011742  ECC5  F0B0         	call	_tx_send
  3759                           
  3760                           ;tasks.h: 500: break;
  3761  011746  0012               	return	
  3762  011748                     l10844:
  3763                           
  3764                           ;tasks.h: 502: ringbuf_backspace(&comm_buf);
  3765  011748  0EF1               	movlw	low rx_loop@comm_buf
  3766  01174A  0100               	movlb	0	; () banked
  3767  01174C  6FBD               	movwf	ringbuf_backspace@rb& (0+255),b
  3768  01174E  0E01               	movlw	high rx_loop@comm_buf
  3769  011750  0100               	movlb	0	; () banked
  3770  011752  6FBE               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3771  011754  EC7E  F0A8         	call	_ringbuf_backspace	;wreg free
  3772                           
  3773                           ;tasks.h: 503: tx_sends("\b \b");
  3774  011758  0ECD               	movlw	low STR_91
  3775  01175A  0100               	movlb	0	; () banked
  3776  01175C  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  3777  01175E  0EFF               	movlw	high STR_91
  3778  011760  0100               	movlb	0	; () banked
  3779  011762  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3780  011764  EC04  F0AB         	call	_tx_sends	;wreg free
  3781                           
  3782                           ;tasks.h: 504: break;
  3783  011768  0012               	return	
  3784  01176A                     l10848:
  3785                           
  3786                           ;tasks.h: 506: for (uint8_t i = 0; i < ringbuf_num(&comm_buf); i++) tx_sends("\b \b");
  3787  01176A  0E00               	movlw	0
  3788  01176C  0100               	movlb	0	; () banked
  3789  01176E  6FFD               	movwf	rx_loop@i_2442& (0+255),b
  3790  011770  D00A               	goto	l10854
  3791  011772                     l10850:
  3792                           
  3793                           ; BSR set to: 0
  3794  011772  0ECD               	movlw	low STR_91
  3795  011774  0100               	movlb	0	; () banked
  3796  011776  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  3797  011778  0EFF               	movlw	high STR_91
  3798  01177A  0100               	movlb	0	; () banked
  3799  01177C  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3800  01177E  EC04  F0AB         	call	_tx_sends	;wreg free
  3801  011782  0100               	movlb	0	; () banked
  3802  011784  2BFD               	incf	rx_loop@i_2442& (0+255),f,b
  3803  011786                     l10854:
  3804                           
  3805                           ; BSR set to: 0
  3806  011786  0EF1               	movlw	low rx_loop@comm_buf
  3807  011788  0100               	movlb	0	; () banked
  3808  01178A  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  3809  01178C  0E01               	movlw	high rx_loop@comm_buf
  3810  01178E  0100               	movlb	0	; () banked
  3811  011790  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3812  011792  EC0B  F09C         	call	_ringbuf_num	;wreg free
  3813  011796  0100               	movlb	0	; () banked
  3814  011798  51FD               	movf	rx_loop@i_2442& (0+255),w,b
  3815  01179A  0100               	movlb	0	; () banked
  3816  01179C  6FFB               	movwf	??_rx_loop& (0+255),b
  3817  01179E  6BFC               	clrf	(??_rx_loop+1)& (0+255),b
  3818  0117A0  0100               	movlb	0	; () banked
  3819  0117A2  51B5               	movf	?_ringbuf_num& (0+255),w,b
  3820  0117A4  0100               	movlb	0	; () banked
  3821  0117A6  5DFB               	subwf	??_rx_loop& (0+255),w,b
  3822  0117A8  0100               	movlb	0	; () banked
  3823  0117AA  51B6               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3824  0117AC  0100               	movlb	0	; () banked
  3825  0117AE  59FC               	subwfb	(??_rx_loop+1)& (0+255),w,b
  3826  0117B0  A0D8               	btfss	status,0,c
  3827  0117B2  D7DF               	goto	l10850
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;tasks.h: 507: ringbuf_delete(&comm_buf);
  3831                           
  3832                           ; BSR set to: 0
  3833  0117B4  0EF1               	movlw	low rx_loop@comm_buf
  3834  0117B6  0100               	movlb	0	; () banked
  3835  0117B8  6FB5               	movwf	ringbuf_delete@rb& (0+255),b
  3836  0117BA  0E01               	movlw	high rx_loop@comm_buf
  3837  0117BC  0100               	movlb	0	; () banked
  3838  0117BE  6FB6               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3839  0117C0  EC3C  F0B0         	call	_ringbuf_delete	;wreg free
  3840                           
  3841                           ;tasks.h: 508: break;
  3842  0117C4  0012               	return	
  3843  0117C6                     l10858:
  3844                           
  3845                           ;tasks.h: 510: if (ascii >= ' ' && ascii <= '~') {
  3846  0117C6  0E1F               	movlw	31
  3847  0117C8  0101               	movlb	1	; () banked
  3848  0117CA  65C8               	cpfsgt	rx_loop@ascii& (0+255),b
  3849  0117CC  0012               	return	
  3850                           
  3851                           ; BSR set to: 1
  3852  0117CE  0E7F               	movlw	127
  3853  0117D0  0101               	movlb	1	; () banked
  3854  0117D2  61C8               	cpfslt	rx_loop@ascii& (0+255),b
  3855  0117D4  0012               	return	
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;tasks.h: 511: ringbuf_put(&comm_buf, ascii);
  3859  0117D6  0EF1               	movlw	low rx_loop@comm_buf
  3860  0117D8  0100               	movlb	0	; () banked
  3861  0117DA  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  3862  0117DC  0E01               	movlw	high rx_loop@comm_buf
  3863  0117DE  0100               	movlb	0	; () banked
  3864  0117E0  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3865  0117E2  C1C8  F0BF         	movff	rx_loop@ascii,ringbuf_put@asciicode
  3866  0117E6  EC64  F0A0         	call	_ringbuf_put	;wreg free
  3867                           
  3868                           ;tasks.h: 512: tx_send(ascii);
  3869  0117EA  0101               	movlb	1	; () banked
  3870  0117EC  51C8               	movf	rx_loop@ascii& (0+255),w,b
  3871  0117EE  ECC5  F0B0         	call	_tx_send
  3872                           
  3873                           ;tasks.h: 515: }
  3874                           
  3875                           ;tasks.h: 513: }
  3876                           ;tasks.h: 514: break;
  3877  0117F2  0012               	return	
  3878  0117F4                     l10866:
  3879  0117F4  0101               	movlb	1	; () banked
  3880  0117F6  51C8               	movf	rx_loop@ascii& (0+255),w,b
  3881                           
  3882                           ; Switch size 1, requested type "space"
  3883                           ; Number of cases is 4, Range of values is 8 to 127
  3884                           ; switch strategies available:
  3885                           ; Name         Instructions Cycles
  3886                           ; simple_byte           13     7 (average)
  3887                           ;	Chosen strategy is simple_byte
  3888  0117F8  0A08               	xorlw	8	; case 8
  3889  0117FA  B4D8               	btfsc	status,2,c
  3890  0117FC  D7A5               	goto	l10844
  3891  0117FE  0A05               	xorlw	5	; case 13
  3892  011800  B4D8               	btfsc	status,2,c
  3893  011802  D6A3               	goto	l10804
  3894  011804  0A2D               	xorlw	45	; case 32
  3895  011806  B4D8               	btfsc	status,2,c
  3896  011808  D790               	goto	l10842
  3897  01180A  0A5F               	xorlw	95	; case 127
  3898  01180C  B4D8               	btfsc	status,2,c
  3899  01180E  D7AD               	goto	l10848
  3900  011810  D7DA               	goto	l10858
  3901  011812                     __end_of_rx_loop:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           postdec1	equ	0xFE5
  3913                           fsr1h	equ	0xFE2
  3914                           fsr1l	equ	0xFE1
  3915                           indf2	equ	0xFDF
  3916                           postinc2	equ	0xFDE
  3917                           postdec2	equ	0xFDD
  3918                           fsr2h	equ	0xFDA
  3919                           fsr2l	equ	0xFD9
  3920                           status	equ	0xFD8
  3921                           
  3922 ;; *************** function _ringbuf_delete *****************
  3923 ;; Defined at:
  3924 ;;		line 85 in file "../My_header\My_ringbuf.h"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  3927 ;;		 -> rx_loop@comm_buf(8), 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;		None               void
  3932 ;; Registers used:
  3933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3942 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:   11
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_rx_loop
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text2
  3954  016078                     __ptext2:
  3955                           	opt stack 0
  3956  016078                     _ringbuf_delete:
  3957                           	opt stack 18
  3958                           
  3959                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  3960                           
  3961                           ;incstack = 0
  3962  016078  0100               	movlb	0	; () banked
  3963  01607A  EE20 F006          	lfsr	2,6
  3964  01607E  51B5               	movf	ringbuf_delete@rb& (0+255),w,b
  3965  016080  26D9               	addwf	fsr2l,f,c
  3966  016082  51B6               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  3967  016084  22DA               	addwfc	fsr2h,f,c
  3968  016086  0100               	movlb	0	; () banked
  3969  016088  EE10 F004          	lfsr	1,4
  3970  01608C  51B5               	movf	ringbuf_delete@rb& (0+255),w,b
  3971  01608E  26E1               	addwf	fsr1l,f,c
  3972  016090  51B6               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  3973  016092  22E2               	addwfc	fsr1h,f,c
  3974  016094  CFDE FFE6          	movff	postinc2,postinc1
  3975  016098  CFDD FFE5          	movff	postdec2,postdec1
  3976                           
  3977                           ; BSR set to: 0
  3978  01609C  0012               	return		;funcret
  3979  01609E                     __end_of_ringbuf_delete:
  3980                           	opt stack 0
  3981                           tblptru	equ	0xFF8
  3982                           tblptrh	equ	0xFF7
  3983                           tblptrl	equ	0xFF6
  3984                           tablat	equ	0xFF5
  3985                           prodh	equ	0xFF4
  3986                           prodl	equ	0xFF3
  3987                           intcon	equ	0xFF2
  3988                           postinc0	equ	0xFEE
  3989                           wreg	equ	0xFE8
  3990                           postinc1	equ	0xFE6
  3991                           postdec1	equ	0xFE5
  3992                           fsr1h	equ	0xFE2
  3993                           fsr1l	equ	0xFE1
  3994                           indf2	equ	0xFDF
  3995                           postinc2	equ	0xFDE
  3996                           postdec2	equ	0xFDD
  3997                           fsr2h	equ	0xFDA
  3998                           fsr2l	equ	0xFD9
  3999                           status	equ	0xFD8
  4000                           
  4001 ;; *************** function _ringbuf_backspace *****************
  4002 ;; Defined at:
  4003 ;;		line 78 in file "../My_header\My_ringbuf.h"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  4006 ;;		 -> rx_loop@comm_buf(8), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;		None               void
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;Total ram usage:        6 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:   12
  4025 ;; This function calls:
  4026 ;;		_ringbuf_num
  4027 ;; This function is called by:
  4028 ;;		_rx_loop
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text3
  4033  0150FC                     __ptext3:
  4034                           	opt stack 0
  4035  0150FC                     _ringbuf_backspace:
  4036                           	opt stack 17
  4037                           
  4038                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;incstack = 0
  4042  0150FC  C0BD  F0B5         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  4043  015100  C0BE  F0B6         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  4044  015104  EC0B  F09C         	call	_ringbuf_num	;wreg free
  4045  015108  0100               	movlb	0	; () banked
  4046  01510A  51B5               	movf	?_ringbuf_num& (0+255),w,b
  4047  01510C  0100               	movlb	0	; () banked
  4048  01510E  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  4049  015110  B4D8               	btfsc	status,2,c
  4050  015112  0012               	return	
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  4054  015114  0100               	movlb	0	; () banked
  4055  015116  EE20 F004          	lfsr	2,4
  4056  01511A  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4057  01511C  26D9               	addwf	fsr2l,f,c
  4058  01511E  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4059  015120  22DA               	addwfc	fsr2h,f,c
  4060  015122  50DE               	movf	postinc2,w,c
  4061  015124  10DE               	iorwf	postinc2,w,c
  4062  015126  B4D8               	btfsc	status,2,c
  4063  015128  D00B               	goto	l10226
  4064                           
  4065                           ; BSR set to: 0
  4066  01512A  0100               	movlb	0	; () banked
  4067  01512C  EE20 F004          	lfsr	2,4
  4068  015130  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4069  015132  26D9               	addwf	fsr2l,f,c
  4070  015134  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4071  015136  22DA               	addwfc	fsr2h,f,c
  4072  015138  06DE               	decf	postinc2,f,c
  4073  01513A  0E00               	movlw	0
  4074  01513C  5ADD               	subwfb	postdec2,f,c
  4075  01513E  0012               	return	
  4076  015140                     l10226:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  4080  015140  0EFF               	movlw	255
  4081  015142  0100               	movlb	0	; () banked
  4082  015144  6FBF               	movwf	??_ringbuf_backspace& (0+255),b
  4083  015146  0EFF               	movlw	255
  4084  015148  0100               	movlb	0	; () banked
  4085  01514A  6FC0               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  4086  01514C  0100               	movlb	0	; () banked
  4087  01514E  EE20 F002          	lfsr	2,2
  4088  015152  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4089  015154  26D9               	addwf	fsr2l,f,c
  4090  015156  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4091  015158  22DA               	addwfc	fsr2h,f,c
  4092  01515A  CFDE F0C1          	movff	postinc2,??_ringbuf_backspace+2
  4093  01515E  CFDD F0C2          	movff	postdec2,??_ringbuf_backspace+3
  4094  015162  0100               	movlb	0	; () banked
  4095  015164  51BF               	movf	??_ringbuf_backspace& (0+255),w,b
  4096  015166  0100               	movlb	0	; () banked
  4097  015168  27C1               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  4098  01516A  0100               	movlb	0	; () banked
  4099  01516C  51C0               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  4100  01516E  0100               	movlb	0	; () banked
  4101  015170  23C2               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  4102  015172  0100               	movlb	0	; () banked
  4103  015174  EE20 F004          	lfsr	2,4
  4104  015178  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4105  01517A  26D9               	addwf	fsr2l,f,c
  4106  01517C  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4107  01517E  22DA               	addwfc	fsr2h,f,c
  4108  015180  C0C1  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  4109  015184  C0C2  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  4110                           
  4111                           ; BSR set to: 0
  4112  015188  0012               	return	
  4113  01518A                     __end_of_ringbuf_backspace:
  4114                           	opt stack 0
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           prodh	equ	0xFF4
  4120                           prodl	equ	0xFF3
  4121                           intcon	equ	0xFF2
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postinc1	equ	0xFE6
  4125                           postdec1	equ	0xFE5
  4126                           fsr1h	equ	0xFE2
  4127                           fsr1l	equ	0xFE1
  4128                           indf2	equ	0xFDF
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _command_operation *****************
  4136 ;; Defined at:
  4137 ;;		line 367 in file "tasks.h"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  opcode          2   60[BANK0 ] PTR unsigned char 
  4140 ;;		 -> rx_loop@opcode(100), 
  4141 ;;  opland1         2   62[BANK0 ] PTR unsigned char 
  4142 ;;		 -> rx_loop@opland1(100), 
  4143 ;;  opland2         2   64[BANK0 ] PTR unsigned char 
  4144 ;;		 -> rx_loop@opland2(100), 
  4145 ;;  opland3         2   66[BANK0 ] PTR unsigned char 
  4146 ;;		 -> rx_loop@opland3(100), 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  percentage      1   69[BANK0 ] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;		None               void
  4151 ;; Registers used:
  4152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4158 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4161 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4162 ;;Total ram usage:       10 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:   17
  4165 ;; This function calls:
  4166 ;;		_comm_at
  4167 ;;		_comm_disp
  4168 ;;		_ctmu_set_ratio
  4169 ;;		_month_length
  4170 ;;		_my_atoi
  4171 ;;		_my_strcmp
  4172 ;;		_print_time
  4173 ;;		_tx_sends
  4174 ;; This function is called by:
  4175 ;;		_rx_loop
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text4
  4180  010000                     __ptext4:
  4181                           	opt stack 0
  4182  010000                     _command_operation:
  4183                           	opt stack 12
  4184                           
  4185                           ;tasks.h: 368: if (!my_strcmp(opcode, "help") || !my_strcmp(opcode, "?")) {
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;incstack = 0
  4189  010000  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4190  010004  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4191  010008  0EBE               	movlw	low STR_39
  4192  01000A  0100               	movlb	0	; () banked
  4193  01000C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4194  01000E  0EFF               	movlw	high STR_39
  4195  010010  0100               	movlb	0	; () banked
  4196  010012  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4197  010014  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4198  010018  0900               	iorlw	0
  4199  01001A  B4D8               	btfsc	status,2,c
  4200  01001C  D00F               	goto	l10490
  4201  01001E  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4202  010022  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4203  010026  0E8D               	movlw	low (STR_18+15)
  4204  010028  0100               	movlb	0	; () banked
  4205  01002A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4206  01002C  0EFE               	movlw	high (STR_18+15)
  4207  01002E  0100               	movlb	0	; () banked
  4208  010030  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4209  010032  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4210  010036  0900               	iorlw	0
  4211  010038  A4D8               	btfss	status,2,c
  4212  01003A  D008               	goto	l10492
  4213  01003C                     l10490:
  4214                           
  4215                           ;tasks.h: 369: tx_sends(
  4216                           ;tasks.h: 370: "\t**************************\n"
  4217                           ;tasks.h: 371: "\t**** Charge Station 6 ****\n"
  4218                           ;tasks.h: 372: "\t**** Made by @Ryokeri ****\n"
  4219                           ;tasks.h: 373: "\t**************************\n\n"
  4220                           ;tasks.h: 374: "\tcommand \topeland1\topeland2\n\n"
  4221                           ;tasks.h: 375: "\tprint_time(t)\n"
  4222                           ;tasks.h: 376: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4223                           ;tasks.h: 377: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
  4224                           ;tasks.h: 378: "\tdisplay(d) [port:left(l),center(c),right(r)]\n\t\t[content:current(c),
      +                          integrated_current(ic),integrated_time(it)]\n"
  4225  01003C  0E34               	movlw	low STR_41
  4226  01003E  0100               	movlb	0	; () banked
  4227  010040  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4228  010042  0EFC               	movlw	high STR_41
  4229  010044  0100               	movlb	0	; () banked
  4230  010046  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4231  010048  EC04  F0AB         	call	_tx_sends	;wreg free
  4232  01004C                     l10492:
  4233                           
  4234                           ;tasks.h: 381: }
  4235                           ;tasks.h: 382: if (!my_strcmp(opcode, "settings") || !my_strcmp(opcode, "set")) {
  4236  01004C  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4237  010050  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4238  010054  0E87               	movlw	low STR_42
  4239  010056  0100               	movlb	0	; () banked
  4240  010058  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4241  01005A  0EFF               	movlw	high STR_42
  4242  01005C  0100               	movlb	0	; () banked
  4243  01005E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4244  010060  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4245  010064  0900               	iorlw	0
  4246  010066  B4D8               	btfsc	status,2,c
  4247  010068  D00F               	goto	l10496
  4248  01006A  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4249  01006E  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4250  010072  0EAF               	movlw	low (STR_59+2)
  4251  010074  0100               	movlb	0	; () banked
  4252  010076  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4253  010078  0EFF               	movlw	high (STR_59+2)
  4254  01007A  0100               	movlb	0	; () banked
  4255  01007C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4256  01007E  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4257  010082  0900               	iorlw	0
  4258  010084  A4D8               	btfss	status,2,c
  4259  010086  D00C               	goto	l10498
  4260  010088                     l10496:
  4261                           
  4262                           ;tasks.h: 383: if (!my_strcmp(opland1, "auto_stop")) {
  4263  010088  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4264  01008C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4265  010090  0E61               	movlw	low STR_44
  4266  010092  0100               	movlb	0	; () banked
  4267  010094  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4268  010096  0EFF               	movlw	high STR_44
  4269  010098  0100               	movlb	0	; () banked
  4270  01009A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4271  01009C  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4272  0100A0                     l10498:
  4273                           
  4274                           ;tasks.h: 384: }
  4275                           ;tasks.h: 385: }
  4276                           ;tasks.h: 386: if (!my_strcmp(opcode, "RESET();")) {
  4277  0100A0  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4278  0100A4  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4279  0100A8  0E75               	movlw	low STR_45
  4280  0100AA  0100               	movlb	0	; () banked
  4281  0100AC  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4282  0100AE  0EFF               	movlw	high STR_45
  4283  0100B0  0100               	movlb	0	; () banked
  4284  0100B2  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4285  0100B4  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4286  0100B8  0900               	iorlw	0
  4287  0100BA  B4D8               	btfsc	status,2,c
  4288  0100BC  00FF               	reset		;# 
  4289                           
  4290                           ;tasks.h: 388: }
  4291                           ;tasks.h: 389: if (!my_strcmp(opcode, "at") || !my_strcmp(opcode, "adjust_time")) {
  4292  0100BE  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4293  0100C2  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4294  0100C6  0EF0               	movlw	low STR_46
  4295  0100C8  0100               	movlb	0	; () banked
  4296  0100CA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4297  0100CC  0EFF               	movlw	high STR_46
  4298  0100CE  0100               	movlb	0	; () banked
  4299  0100D0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4300  0100D2  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4301  0100D6  0900               	iorlw	0
  4302  0100D8  B4D8               	btfsc	status,2,c
  4303  0100DA  D00F               	goto	l10506
  4304  0100DC  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4305  0100E0  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4306  0100E4  0E13               	movlw	low STR_47
  4307  0100E6  0100               	movlb	0	; () banked
  4308  0100E8  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4309  0100EA  0EFF               	movlw	high STR_47
  4310  0100EC  0100               	movlb	0	; () banked
  4311  0100EE  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4312  0100F0  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4313  0100F4  0900               	iorlw	0
  4314  0100F6  A4D8               	btfss	status,2,c
  4315  0100F8  D0F1               	goto	l10532
  4316  0100FA                     l10506:
  4317                           
  4318                           ;tasks.h: 390: if (!my_strcmp(opland1, "y")) {
  4319  0100FA  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4320  0100FE  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4321  010102  0E9E               	movlw	low (STR_62+6)
  4322  010104  0100               	movlb	0	; () banked
  4323  010106  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4324  010108  0EFF               	movlw	high (STR_62+6)
  4325  01010A  0100               	movlb	0	; () banked
  4326  01010C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4327  01010E  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4328  010112  0900               	iorlw	0
  4329  010114  A4D8               	btfss	status,2,c
  4330  010116  D018               	goto	l10510
  4331                           
  4332                           ;tasks.h: 391: comm_at(&caltime_now.YY, 0, 99, my_atoi(opland2));
  4333  010118  0EB0               	movlw	low (_caltime_now+6)
  4334  01011A  0100               	movlb	0	; () banked
  4335  01011C  6FEC               	movwf	comm_at@hand& (0+255),b
  4336  01011E  0E00               	movlw	high (_caltime_now+6)
  4337  010120  0100               	movlb	0	; () banked
  4338  010122  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4339  010124  0E00               	movlw	0
  4340  010126  0100               	movlb	0	; () banked
  4341  010128  6FEE               	movwf	comm_at@min& (0+255),b
  4342  01012A  0E63               	movlw	99
  4343  01012C  0100               	movlb	0	; () banked
  4344  01012E  6FEF               	movwf	comm_at@max& (0+255),b
  4345  010130  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4346  010134  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4347  010138  ECAE  F0A6         	call	_my_atoi	;wreg free
  4348  01013C  0100               	movlb	0	; () banked
  4349  01013E  51D1               	movf	?_my_atoi& (0+255),w,b
  4350  010140  0100               	movlb	0	; () banked
  4351  010142  6FF0               	movwf	comm_at@value& (0+255),b
  4352  010144  EC99  F0AB         	call	_comm_at	;wreg free
  4353  010148                     l10510:
  4354                           
  4355                           ;tasks.h: 392: }
  4356                           ;tasks.h: 393: if (!my_strcmp(opland1, "M")) {
  4357  010148  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4358  01014C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4359  010150  0EF9               	movlw	low STR_49
  4360  010152  0100               	movlb	0	; () banked
  4361  010154  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4362  010156  0EFF               	movlw	high STR_49
  4363  010158  0100               	movlb	0	; () banked
  4364  01015A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4365  01015C  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4366  010160  0900               	iorlw	0
  4367  010162  A4D8               	btfss	status,2,c
  4368  010164  D018               	goto	l10514
  4369                           
  4370                           ;tasks.h: 394: comm_at(&caltime_now.MM, 1, 12, my_atoi(opland2));
  4371  010166  0EAF               	movlw	low (_caltime_now+5)
  4372  010168  0100               	movlb	0	; () banked
  4373  01016A  6FEC               	movwf	comm_at@hand& (0+255),b
  4374  01016C  0E00               	movlw	high (_caltime_now+5)
  4375  01016E  0100               	movlb	0	; () banked
  4376  010170  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4377  010172  0E01               	movlw	1
  4378  010174  0100               	movlb	0	; () banked
  4379  010176  6FEE               	movwf	comm_at@min& (0+255),b
  4380  010178  0E0C               	movlw	12
  4381  01017A  0100               	movlb	0	; () banked
  4382  01017C  6FEF               	movwf	comm_at@max& (0+255),b
  4383  01017E  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4384  010182  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4385  010186  ECAE  F0A6         	call	_my_atoi	;wreg free
  4386  01018A  0100               	movlb	0	; () banked
  4387  01018C  51D1               	movf	?_my_atoi& (0+255),w,b
  4388  01018E  0100               	movlb	0	; () banked
  4389  010190  6FF0               	movwf	comm_at@value& (0+255),b
  4390  010192  EC99  F0AB         	call	_comm_at	;wreg free
  4391  010196                     l10514:
  4392                           
  4393                           ;tasks.h: 395: }
  4394                           ;tasks.h: 396: if (!my_strcmp(opland1, "d")) {
  4395  010196  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4396  01019A  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4397  01019E  0E9E               	movlw	low (STR_17+15)
  4398  0101A0  0100               	movlb	0	; () banked
  4399  0101A2  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4400  0101A4  0EFE               	movlw	high (STR_17+15)
  4401  0101A6  0100               	movlb	0	; () banked
  4402  0101A8  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4403  0101AA  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4404  0101AE  0900               	iorlw	0
  4405  0101B0  A4D8               	btfss	status,2,c
  4406  0101B2  D01F               	goto	l10520
  4407                           
  4408                           ;tasks.h: 397: comm_at(&caltime_now.DD, 1, month_length(caltime_now.YY, caltime_now.MM),
      +                           my_atoi(opland2));
  4409  0101B4  C0AF  F0BB         	movff	_caltime_now+5,month_length@month
  4410  0101B8  0100               	movlb	0	; () banked
  4411  0101BA  51B0               	movf	(_caltime_now+6)& (0+255),w,b
  4412  0101BC  ECDB  F09D         	call	_month_length
  4413  0101C0  0100               	movlb	0	; () banked
  4414  0101C2  6FF9               	movwf	_command_operation$5307& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;tasks.h: 397: comm_at(&caltime_now.DD, 1, month_length(caltime_now.YY, caltime_now.MM),
      +                           my_atoi(opland2));
  4418  0101C4  0EAE               	movlw	low (_caltime_now+4)
  4419  0101C6  0100               	movlb	0	; () banked
  4420  0101C8  6FEC               	movwf	comm_at@hand& (0+255),b
  4421  0101CA  0E00               	movlw	high (_caltime_now+4)
  4422  0101CC  0100               	movlb	0	; () banked
  4423  0101CE  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4424  0101D0  0E01               	movlw	1
  4425  0101D2  0100               	movlb	0	; () banked
  4426  0101D4  6FEE               	movwf	comm_at@min& (0+255),b
  4427  0101D6  C0F9  F0EF         	movff	_command_operation$5307,comm_at@max
  4428  0101DA  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4429  0101DE  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4430  0101E2  ECAE  F0A6         	call	_my_atoi	;wreg free
  4431  0101E6  0100               	movlb	0	; () banked
  4432  0101E8  51D1               	movf	?_my_atoi& (0+255),w,b
  4433  0101EA  0100               	movlb	0	; () banked
  4434  0101EC  6FF0               	movwf	comm_at@value& (0+255),b
  4435  0101EE  EC99  F0AB         	call	_comm_at	;wreg free
  4436  0101F2                     l10520:
  4437                           
  4438                           ;tasks.h: 398: }
  4439                           ;tasks.h: 399: if (!my_strcmp(opland1, "h")) {
  4440  0101F2  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4441  0101F6  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4442  0101FA  0ED3               	movlw	low (STR_11+2)
  4443  0101FC  0100               	movlb	0	; () banked
  4444  0101FE  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4445  010200  0EFF               	movlw	high (STR_11+2)
  4446  010202  0100               	movlb	0	; () banked
  4447  010204  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4448  010206  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4449  01020A  0900               	iorlw	0
  4450  01020C  A4D8               	btfss	status,2,c
  4451  01020E  D018               	goto	l10524
  4452                           
  4453                           ;tasks.h: 400: comm_at(&caltime_now.hh, 0, 23, my_atoi(opland2));
  4454  010210  0EAC               	movlw	low (_caltime_now+2)
  4455  010212  0100               	movlb	0	; () banked
  4456  010214  6FEC               	movwf	comm_at@hand& (0+255),b
  4457  010216  0E00               	movlw	high (_caltime_now+2)
  4458  010218  0100               	movlb	0	; () banked
  4459  01021A  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4460  01021C  0E00               	movlw	0
  4461  01021E  0100               	movlb	0	; () banked
  4462  010220  6FEE               	movwf	comm_at@min& (0+255),b
  4463  010222  0E17               	movlw	23
  4464  010224  0100               	movlb	0	; () banked
  4465  010226  6FEF               	movwf	comm_at@max& (0+255),b
  4466  010228  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4467  01022C  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4468  010230  ECAE  F0A6         	call	_my_atoi	;wreg free
  4469  010234  0100               	movlb	0	; () banked
  4470  010236  51D1               	movf	?_my_atoi& (0+255),w,b
  4471  010238  0100               	movlb	0	; () banked
  4472  01023A  6FF0               	movwf	comm_at@value& (0+255),b
  4473  01023C  EC99  F0AB         	call	_comm_at	;wreg free
  4474  010240                     l10524:
  4475                           
  4476                           ;tasks.h: 401: }
  4477                           ;tasks.h: 402: if (!my_strcmp(opland1, "m")) {
  4478  010240  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4479  010244  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4480  010248  0EFD               	movlw	low STR_52
  4481  01024A  0100               	movlb	0	; () banked
  4482  01024C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4483  01024E  0EFF               	movlw	high STR_52
  4484  010250  0100               	movlb	0	; () banked
  4485  010252  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4486  010254  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4487  010258  0900               	iorlw	0
  4488  01025A  A4D8               	btfss	status,2,c
  4489  01025C  D018               	goto	l10528
  4490                           
  4491                           ;tasks.h: 403: comm_at(&caltime_now.mm, 0, 59, my_atoi(opland2));
  4492  01025E  0EAB               	movlw	low (_caltime_now+1)
  4493  010260  0100               	movlb	0	; () banked
  4494  010262  6FEC               	movwf	comm_at@hand& (0+255),b
  4495  010264  0E00               	movlw	high (_caltime_now+1)
  4496  010266  0100               	movlb	0	; () banked
  4497  010268  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4498  01026A  0E00               	movlw	0
  4499  01026C  0100               	movlb	0	; () banked
  4500  01026E  6FEE               	movwf	comm_at@min& (0+255),b
  4501  010270  0E3B               	movlw	59
  4502  010272  0100               	movlb	0	; () banked
  4503  010274  6FEF               	movwf	comm_at@max& (0+255),b
  4504  010276  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4505  01027A  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4506  01027E  ECAE  F0A6         	call	_my_atoi	;wreg free
  4507  010282  0100               	movlb	0	; () banked
  4508  010284  51D1               	movf	?_my_atoi& (0+255),w,b
  4509  010286  0100               	movlb	0	; () banked
  4510  010288  6FF0               	movwf	comm_at@value& (0+255),b
  4511  01028A  EC99  F0AB         	call	_comm_at	;wreg free
  4512  01028E                     l10528:
  4513                           
  4514                           ;tasks.h: 404: }
  4515                           ;tasks.h: 405: if (!my_strcmp(opland1, "s")) {
  4516  01028E  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4517  010292  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4518  010296  0E8E               	movlw	low (STR_42+7)
  4519  010298  0100               	movlb	0	; () banked
  4520  01029A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4521  01029C  0EFF               	movlw	high (STR_42+7)
  4522  01029E  0100               	movlb	0	; () banked
  4523  0102A0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4524  0102A2  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4525  0102A6  0900               	iorlw	0
  4526  0102A8  A4D8               	btfss	status,2,c
  4527  0102AA  D018               	goto	l10532
  4528                           
  4529                           ;tasks.h: 406: comm_at(&caltime_now.ss, 0, 59, my_atoi(opland2));
  4530  0102AC  0EAA               	movlw	low _caltime_now
  4531  0102AE  0100               	movlb	0	; () banked
  4532  0102B0  6FEC               	movwf	comm_at@hand& (0+255),b
  4533  0102B2  0E00               	movlw	high _caltime_now
  4534  0102B4  0100               	movlb	0	; () banked
  4535  0102B6  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4536  0102B8  0E00               	movlw	0
  4537  0102BA  0100               	movlb	0	; () banked
  4538  0102BC  6FEE               	movwf	comm_at@min& (0+255),b
  4539  0102BE  0E3B               	movlw	59
  4540  0102C0  0100               	movlb	0	; () banked
  4541  0102C2  6FEF               	movwf	comm_at@max& (0+255),b
  4542  0102C4  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4543  0102C8  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4544  0102CC  ECAE  F0A6         	call	_my_atoi	;wreg free
  4545  0102D0  0100               	movlb	0	; () banked
  4546  0102D2  51D1               	movf	?_my_atoi& (0+255),w,b
  4547  0102D4  0100               	movlb	0	; () banked
  4548  0102D6  6FF0               	movwf	comm_at@value& (0+255),b
  4549  0102D8  EC99  F0AB         	call	_comm_at	;wreg free
  4550  0102DC                     l10532:
  4551                           
  4552                           ;tasks.h: 407: }
  4553                           ;tasks.h: 408: }
  4554                           ;tasks.h: 409: if (!my_strcmp(opcode, "touch")) {
  4555  0102DC  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4556  0102E0  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4557  0102E4  0EA7               	movlw	low STR_54
  4558  0102E6  0100               	movlb	0	; () banked
  4559  0102E8  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4560  0102EA  0EFF               	movlw	high STR_54
  4561  0102EC  0100               	movlb	0	; () banked
  4562  0102EE  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4563  0102F0  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4564  0102F4  0900               	iorlw	0
  4565  0102F6  A4D8               	btfss	status,2,c
  4566  0102F8  D06D               	goto	l10558
  4567                           
  4568                           ;tasks.h: 410: if (!my_strcmp(opland1, "initialize") || !my_strcmp(opland1, "init")) {
  4569  0102FA  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4570  0102FE  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4571  010302  0E41               	movlw	low STR_55
  4572  010304  0100               	movlb	0	; () banked
  4573  010306  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4574  010308  0EFF               	movlw	high STR_55
  4575  01030A  0100               	movlb	0	; () banked
  4576  01030C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4577  01030E  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4578  010312  0900               	iorlw	0
  4579  010314  B4D8               	btfsc	status,2,c
  4580  010316  D00F               	goto	l10538
  4581  010318  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4582  01031C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4583  010320  0EC8               	movlw	low STR_56
  4584  010322  0100               	movlb	0	; () banked
  4585  010324  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4586  010326  0EFF               	movlw	high STR_56
  4587  010328  0100               	movlb	0	; () banked
  4588  01032A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4589  01032C  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4590  010330  0900               	iorlw	0
  4591  010332  A4D8               	btfss	status,2,c
  4592  010334  D025               	goto	l10550
  4593  010336                     l10538:
  4594                           
  4595                           ;tasks.h: 411: uint8_t percentage = my_atoi(opland2);
  4596  010336  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4597  01033A  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4598  01033E  ECAE  F0A6         	call	_my_atoi	;wreg free
  4599  010342  0100               	movlb	0	; () banked
  4600  010344  51D1               	movf	?_my_atoi& (0+255),w,b
  4601  010346  0100               	movlb	0	; () banked
  4602  010348  6FFA               	movwf	command_operation@percentage& (0+255),b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;tasks.h: 412: if (percentage <= 100) {
  4606  01034A  0E65               	movlw	101
  4607  01034C  0100               	movlb	0	; () banked
  4608  01034E  61FA               	cpfslt	command_operation@percentage& (0+255),b
  4609  010350  D00F               	goto	l10548
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;tasks.h: 413: ctmu_ratio = percentage;
  4613  010352  C0FA  F0FE         	movff	command_operation@percentage,_ctmu_ratio
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;tasks.h: 414: ctmu_set_ratio(ctmu_ratio);
  4617  010356  0100               	movlb	0	; () banked
  4618  010358  51FE               	movf	_ctmu_ratio& (0+255),w,b
  4619  01035A  ECF7  F09C         	call	_ctmu_set_ratio
  4620                           
  4621                           ;tasks.h: 415: tx_sends("\tinitializing complete\n");
  4622  01035E  0E30               	movlw	low STR_57
  4623  010360  0100               	movlb	0	; () banked
  4624  010362  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4625  010364  0EFE               	movlw	high STR_57
  4626  010366  0100               	movlb	0	; () banked
  4627  010368  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4628  01036A  EC04  F0AB         	call	_tx_sends	;wreg free
  4629                           
  4630                           ;tasks.h: 416: } else {
  4631  01036E  D008               	goto	l10550
  4632  010370                     l10548:
  4633                           
  4634                           ;tasks.h: 417: tx_sends("\tinvalid data\n\tinitializing failed\n");
  4635  010370  0E0C               	movlw	low STR_58
  4636  010372  0100               	movlb	0	; () banked
  4637  010374  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4638  010376  0EFE               	movlw	high STR_58
  4639  010378  0100               	movlb	0	; () banked
  4640  01037A  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4641  01037C  EC04  F0AB         	call	_tx_sends	;wreg free
  4642  010380                     l10550:
  4643                           
  4644                           ;tasks.h: 418: }
  4645                           ;tasks.h: 419: }
  4646                           ;tasks.h: 420: if (!my_strcmp(opland1, "reset") || !my_strcmp(opland1, "r")) {
  4647  010380  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4648  010384  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4649  010388  0EAD               	movlw	low STR_59
  4650  01038A  0100               	movlb	0	; () banked
  4651  01038C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4652  01038E  0EFF               	movlw	high STR_59
  4653  010390  0100               	movlb	0	; () banked
  4654  010392  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4655  010394  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4656  010398  0900               	iorlw	0
  4657  01039A  B4D8               	btfsc	status,2,c
  4658  01039C  D00F               	goto	l10554
  4659  01039E  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4660  0103A2  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4661  0103A6  0EA5               	movlw	low (STR_72+5)
  4662  0103A8  0100               	movlb	0	; () banked
  4663  0103AA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4664  0103AC  0EFF               	movlw	high (STR_72+5)
  4665  0103AE  0100               	movlb	0	; () banked
  4666  0103B0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4667  0103B2  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4668  0103B6  0900               	iorlw	0
  4669  0103B8  A4D8               	btfss	status,2,c
  4670  0103BA  D00C               	goto	l10558
  4671  0103BC                     l10554:
  4672                           
  4673                           ;tasks.h: 421: ctmu_set_ratio(ctmu_ratio);
  4674  0103BC  0100               	movlb	0	; () banked
  4675  0103BE  51FE               	movf	_ctmu_ratio& (0+255),w,b
  4676  0103C0  ECF7  F09C         	call	_ctmu_set_ratio
  4677                           
  4678                           ;tasks.h: 422: tx_sends("\tseting complete\n");
  4679  0103C4  0E5B               	movlw	low STR_61
  4680  0103C6  0100               	movlb	0	; () banked
  4681  0103C8  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4682  0103CA  0EFE               	movlw	high STR_61
  4683  0103CC  0100               	movlb	0	; () banked
  4684  0103CE  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4685  0103D0  EC04  F0AB         	call	_tx_sends	;wreg free
  4686  0103D4                     l10558:
  4687                           
  4688                           ;tasks.h: 423: }
  4689                           ;tasks.h: 424: }
  4690                           ;tasks.h: 425: if (!my_strcmp(opcode, "display") || !my_strcmp(opcode, "d")) {
  4691  0103D4  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4692  0103D8  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4693  0103DC  0E98               	movlw	low STR_62
  4694  0103DE  0100               	movlb	0	; () banked
  4695  0103E0  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4696  0103E2  0EFF               	movlw	high STR_62
  4697  0103E4  0100               	movlb	0	; () banked
  4698  0103E6  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4699  0103E8  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4700  0103EC  0900               	iorlw	0
  4701  0103EE  B4D8               	btfsc	status,2,c
  4702  0103F0  D00F               	goto	l10562
  4703  0103F2  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4704  0103F6  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4705  0103FA  0E9E               	movlw	low (STR_17+15)
  4706  0103FC  0100               	movlb	0	; () banked
  4707  0103FE  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4708  010400  0EFE               	movlw	high (STR_17+15)
  4709  010402  0100               	movlb	0	; () banked
  4710  010404  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4711  010406  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4712  01040A  0900               	iorlw	0
  4713  01040C  A4D8               	btfss	status,2,c
  4714  01040E  D19E               	goto	l10628
  4715  010410                     l10562:
  4716                           
  4717                           ;tasks.h: 426: if (!my_strcmp(opland1, "left") || !my_strcmp(opland1, "l")) {
  4718  010410  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4719  010414  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4720  010418  0EC3               	movlw	low STR_64
  4721  01041A  0100               	movlb	0	; () banked
  4722  01041C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4723  01041E  0EFF               	movlw	high STR_64
  4724  010420  0100               	movlb	0	; () banked
  4725  010422  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4726  010424  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4727  010428  0900               	iorlw	0
  4728  01042A  B4D8               	btfsc	status,2,c
  4729  01042C  D00F               	goto	l10566
  4730  01042E  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4731  010432  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4732  010436  0EFB               	movlw	low STR_65
  4733  010438  0100               	movlb	0	; () banked
  4734  01043A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4735  01043C  0EFF               	movlw	high STR_65
  4736  01043E  0100               	movlb	0	; () banked
  4737  010440  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4738  010442  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4739  010446  0900               	iorlw	0
  4740  010448  A4D8               	btfss	status,2,c
  4741  01044A  D06C               	goto	l10584
  4742  01044C                     l10566:
  4743                           
  4744                           ;tasks.h: 427: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  4745  01044C  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4746  010450  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4747  010454  0E53               	movlw	low (STR_68+11)
  4748  010456  0100               	movlb	0	; () banked
  4749  010458  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4750  01045A  0EFE               	movlw	high (STR_68+11)
  4751  01045C  0100               	movlb	0	; () banked
  4752  01045E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4753  010460  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4754  010464  0900               	iorlw	0
  4755  010466  B4D8               	btfsc	status,2,c
  4756  010468  D00F               	goto	l10570
  4757  01046A  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4758  01046E  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4759  010472  0EEE               	movlw	low (STR_69+1)
  4760  010474  0100               	movlb	0	; () banked
  4761  010476  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4762  010478  0EFF               	movlw	high (STR_69+1)
  4763  01047A  0100               	movlb	0	; () banked
  4764  01047C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4765  01047E  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4766  010482  0900               	iorlw	0
  4767  010484  A4D8               	btfss	status,2,c
  4768  010486  D006               	goto	l10572
  4769  010488                     l10570:
  4770                           
  4771                           ;tasks.h: 428: comm_disp(0, 0);
  4772  010488  0E00               	movlw	0
  4773  01048A  0100               	movlb	0	; () banked
  4774  01048C  6FE0               	movwf	comm_disp@port& (0+255),b
  4775  01048E  0E00               	movlw	0
  4776  010490  EC8E  F086         	call	_comm_disp
  4777  010494                     l10572:
  4778                           
  4779                           ;tasks.h: 429: }
  4780                           ;tasks.h: 430: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  4781  010494  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4782  010498  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4783  01049C  0E48               	movlw	low STR_68
  4784  01049E  0100               	movlb	0	; () banked
  4785  0104A0  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4786  0104A2  0EFE               	movlw	high STR_68
  4787  0104A4  0100               	movlb	0	; () banked
  4788  0104A6  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4789  0104A8  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4790  0104AC  0900               	iorlw	0
  4791  0104AE  B4D8               	btfsc	status,2,c
  4792  0104B0  D00F               	goto	l10576
  4793  0104B2  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4794  0104B6  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4795  0104BA  0EED               	movlw	low STR_69
  4796  0104BC  0100               	movlb	0	; () banked
  4797  0104BE  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4798  0104C0  0EFF               	movlw	high STR_69
  4799  0104C2  0100               	movlb	0	; () banked
  4800  0104C4  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4801  0104C6  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4802  0104CA  0900               	iorlw	0
  4803  0104CC  A4D8               	btfss	status,2,c
  4804  0104CE  D006               	goto	l10578
  4805  0104D0                     l10576:
  4806                           
  4807                           ;tasks.h: 431: comm_disp(1, 0);
  4808  0104D0  0E00               	movlw	0
  4809  0104D2  0100               	movlb	0	; () banked
  4810  0104D4  6FE0               	movwf	comm_disp@port& (0+255),b
  4811  0104D6  0E01               	movlw	1
  4812  0104D8  EC8E  F086         	call	_comm_disp
  4813  0104DC                     l10578:
  4814                           
  4815                           ;tasks.h: 432: }
  4816                           ;tasks.h: 433: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  4817  0104DC  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4818  0104E0  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4819  0104E4  0EB0               	movlw	low STR_70
  4820  0104E6  0100               	movlb	0	; () banked
  4821  0104E8  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4822  0104EA  0EFE               	movlw	high STR_70
  4823  0104EC  0100               	movlb	0	; () banked
  4824  0104EE  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4825  0104F0  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4826  0104F4  0900               	iorlw	0
  4827  0104F6  B4D8               	btfsc	status,2,c
  4828  0104F8  D00F               	goto	l10582
  4829  0104FA  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4830  0104FE  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4831  010502  0ECA               	movlw	low (STR_56+2)
  4832  010504  0100               	movlb	0	; () banked
  4833  010506  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4834  010508  0EFF               	movlw	high (STR_56+2)
  4835  01050A  0100               	movlb	0	; () banked
  4836  01050C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4837  01050E  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4838  010512  0900               	iorlw	0
  4839  010514  A4D8               	btfss	status,2,c
  4840  010516  D006               	goto	l10584
  4841  010518                     l10582:
  4842                           
  4843                           ;tasks.h: 434: comm_disp(2, 0);
  4844  010518  0E00               	movlw	0
  4845  01051A  0100               	movlb	0	; () banked
  4846  01051C  6FE0               	movwf	comm_disp@port& (0+255),b
  4847  01051E  0E02               	movlw	2
  4848  010520  EC8E  F086         	call	_comm_disp
  4849  010524                     l10584:
  4850                           
  4851                           ;tasks.h: 435: }
  4852                           ;tasks.h: 437: }
  4853                           ;tasks.h: 438: if (!my_strcmp(opland1, "center") || !my_strcmp(opland1, "c")) {
  4854  010524  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4855  010528  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4856  01052C  0EA0               	movlw	low STR_72
  4857  01052E  0100               	movlb	0	; () banked
  4858  010530  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4859  010532  0EFF               	movlw	high STR_72
  4860  010534  0100               	movlb	0	; () banked
  4861  010536  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4862  010538  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4863  01053C  0900               	iorlw	0
  4864  01053E  B4D8               	btfsc	status,2,c
  4865  010540  D00F               	goto	l10588
  4866  010542  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4867  010546  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4868  01054A  0EEE               	movlw	low (STR_69+1)
  4869  01054C  0100               	movlb	0	; () banked
  4870  01054E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4871  010550  0EFF               	movlw	high (STR_69+1)
  4872  010552  0100               	movlb	0	; () banked
  4873  010554  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4874  010556  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4875  01055A  0900               	iorlw	0
  4876  01055C  A4D8               	btfss	status,2,c
  4877  01055E  D06C               	goto	l10606
  4878  010560                     l10588:
  4879                           
  4880                           ;tasks.h: 439: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  4881  010560  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4882  010564  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4883  010568  0E53               	movlw	low (STR_68+11)
  4884  01056A  0100               	movlb	0	; () banked
  4885  01056C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4886  01056E  0EFE               	movlw	high (STR_68+11)
  4887  010570  0100               	movlb	0	; () banked
  4888  010572  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4889  010574  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4890  010578  0900               	iorlw	0
  4891  01057A  B4D8               	btfsc	status,2,c
  4892  01057C  D00F               	goto	l10592
  4893  01057E  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4894  010582  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4895  010586  0EEE               	movlw	low (STR_69+1)
  4896  010588  0100               	movlb	0	; () banked
  4897  01058A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4898  01058C  0EFF               	movlw	high (STR_69+1)
  4899  01058E  0100               	movlb	0	; () banked
  4900  010590  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4901  010592  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4902  010596  0900               	iorlw	0
  4903  010598  A4D8               	btfss	status,2,c
  4904  01059A  D006               	goto	l10594
  4905  01059C                     l10592:
  4906                           
  4907                           ;tasks.h: 440: comm_disp(0, 1);
  4908  01059C  0E01               	movlw	1
  4909  01059E  0100               	movlb	0	; () banked
  4910  0105A0  6FE0               	movwf	comm_disp@port& (0+255),b
  4911  0105A2  0E00               	movlw	0
  4912  0105A4  EC8E  F086         	call	_comm_disp
  4913  0105A8                     l10594:
  4914                           
  4915                           ;tasks.h: 441: }
  4916                           ;tasks.h: 442: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  4917  0105A8  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4918  0105AC  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4919  0105B0  0E48               	movlw	low STR_68
  4920  0105B2  0100               	movlb	0	; () banked
  4921  0105B4  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4922  0105B6  0EFE               	movlw	high STR_68
  4923  0105B8  0100               	movlb	0	; () banked
  4924  0105BA  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4925  0105BC  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4926  0105C0  0900               	iorlw	0
  4927  0105C2  B4D8               	btfsc	status,2,c
  4928  0105C4  D00F               	goto	l10598
  4929  0105C6  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4930  0105CA  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4931  0105CE  0EED               	movlw	low STR_69
  4932  0105D0  0100               	movlb	0	; () banked
  4933  0105D2  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4934  0105D4  0EFF               	movlw	high STR_69
  4935  0105D6  0100               	movlb	0	; () banked
  4936  0105D8  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4937  0105DA  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4938  0105DE  0900               	iorlw	0
  4939  0105E0  A4D8               	btfss	status,2,c
  4940  0105E2  D006               	goto	l10600
  4941  0105E4                     l10598:
  4942                           
  4943                           ;tasks.h: 443: comm_disp(1, 1);
  4944  0105E4  0E01               	movlw	1
  4945  0105E6  0100               	movlb	0	; () banked
  4946  0105E8  6FE0               	movwf	comm_disp@port& (0+255),b
  4947  0105EA  0E01               	movlw	1
  4948  0105EC  EC8E  F086         	call	_comm_disp
  4949  0105F0                     l10600:
  4950                           
  4951                           ;tasks.h: 444: }
  4952                           ;tasks.h: 445: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  4953  0105F0  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4954  0105F4  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4955  0105F8  0EB0               	movlw	low STR_70
  4956  0105FA  0100               	movlb	0	; () banked
  4957  0105FC  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4958  0105FE  0EFE               	movlw	high STR_70
  4959  010600  0100               	movlb	0	; () banked
  4960  010602  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4961  010604  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4962  010608  0900               	iorlw	0
  4963  01060A  B4D8               	btfsc	status,2,c
  4964  01060C  D00F               	goto	l10604
  4965  01060E  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4966  010612  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4967  010616  0ECA               	movlw	low (STR_56+2)
  4968  010618  0100               	movlb	0	; () banked
  4969  01061A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4970  01061C  0EFF               	movlw	high (STR_56+2)
  4971  01061E  0100               	movlb	0	; () banked
  4972  010620  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4973  010622  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4974  010626  0900               	iorlw	0
  4975  010628  A4D8               	btfss	status,2,c
  4976  01062A  D006               	goto	l10606
  4977  01062C                     l10604:
  4978                           
  4979                           ;tasks.h: 446: comm_disp(2, 1);
  4980  01062C  0E01               	movlw	1
  4981  01062E  0100               	movlb	0	; () banked
  4982  010630  6FE0               	movwf	comm_disp@port& (0+255),b
  4983  010632  0E02               	movlw	2
  4984  010634  EC8E  F086         	call	_comm_disp
  4985  010638                     l10606:
  4986                           
  4987                           ;tasks.h: 447: }
  4988                           ;tasks.h: 448: }
  4989                           ;tasks.h: 449: if (!my_strcmp(opland1, "right") || !my_strcmp(opland1, "r")) {
  4990  010638  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4991  01063C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4992  010640  0EB3               	movlw	low STR_80
  4993  010642  0100               	movlb	0	; () banked
  4994  010644  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4995  010646  0EFF               	movlw	high STR_80
  4996  010648  0100               	movlb	0	; () banked
  4997  01064A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4998  01064C  EC0B  F0A6         	call	_my_strcmp	;wreg free
  4999  010650  0900               	iorlw	0
  5000  010652  B4D8               	btfsc	status,2,c
  5001  010654  D00F               	goto	l10610
  5002  010656  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  5003  01065A  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  5004  01065E  0EA5               	movlw	low (STR_72+5)
  5005  010660  0100               	movlb	0	; () banked
  5006  010662  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5007  010664  0EFF               	movlw	high (STR_72+5)
  5008  010666  0100               	movlb	0	; () banked
  5009  010668  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5010  01066A  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5011  01066E  0900               	iorlw	0
  5012  010670  A4D8               	btfss	status,2,c
  5013  010672  D06C               	goto	l10628
  5014  010674                     l10610:
  5015                           
  5016                           ;tasks.h: 450: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  5017  010674  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5018  010678  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5019  01067C  0E53               	movlw	low (STR_68+11)
  5020  01067E  0100               	movlb	0	; () banked
  5021  010680  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5022  010682  0EFE               	movlw	high (STR_68+11)
  5023  010684  0100               	movlb	0	; () banked
  5024  010686  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5025  010688  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5026  01068C  0900               	iorlw	0
  5027  01068E  B4D8               	btfsc	status,2,c
  5028  010690  D00F               	goto	l10614
  5029  010692  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5030  010696  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5031  01069A  0EEE               	movlw	low (STR_69+1)
  5032  01069C  0100               	movlb	0	; () banked
  5033  01069E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5034  0106A0  0EFF               	movlw	high (STR_69+1)
  5035  0106A2  0100               	movlb	0	; () banked
  5036  0106A4  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5037  0106A6  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5038  0106AA  0900               	iorlw	0
  5039  0106AC  A4D8               	btfss	status,2,c
  5040  0106AE  D006               	goto	l10616
  5041  0106B0                     l10614:
  5042                           
  5043                           ;tasks.h: 451: comm_disp(0, 2);
  5044  0106B0  0E02               	movlw	2
  5045  0106B2  0100               	movlb	0	; () banked
  5046  0106B4  6FE0               	movwf	comm_disp@port& (0+255),b
  5047  0106B6  0E00               	movlw	0
  5048  0106B8  EC8E  F086         	call	_comm_disp
  5049  0106BC                     l10616:
  5050                           
  5051                           ;tasks.h: 452: }
  5052                           ;tasks.h: 453: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  5053  0106BC  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5054  0106C0  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5055  0106C4  0E48               	movlw	low STR_68
  5056  0106C6  0100               	movlb	0	; () banked
  5057  0106C8  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5058  0106CA  0EFE               	movlw	high STR_68
  5059  0106CC  0100               	movlb	0	; () banked
  5060  0106CE  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5061  0106D0  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5062  0106D4  0900               	iorlw	0
  5063  0106D6  B4D8               	btfsc	status,2,c
  5064  0106D8  D00F               	goto	l10620
  5065  0106DA  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5066  0106DE  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5067  0106E2  0EED               	movlw	low STR_69
  5068  0106E4  0100               	movlb	0	; () banked
  5069  0106E6  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5070  0106E8  0EFF               	movlw	high STR_69
  5071  0106EA  0100               	movlb	0	; () banked
  5072  0106EC  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5073  0106EE  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5074  0106F2  0900               	iorlw	0
  5075  0106F4  A4D8               	btfss	status,2,c
  5076  0106F6  D006               	goto	l10622
  5077  0106F8                     l10620:
  5078                           
  5079                           ;tasks.h: 454: comm_disp(1, 2);
  5080  0106F8  0E02               	movlw	2
  5081  0106FA  0100               	movlb	0	; () banked
  5082  0106FC  6FE0               	movwf	comm_disp@port& (0+255),b
  5083  0106FE  0E01               	movlw	1
  5084  010700  EC8E  F086         	call	_comm_disp
  5085  010704                     l10622:
  5086                           
  5087                           ;tasks.h: 455: }
  5088                           ;tasks.h: 456: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  5089  010704  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5090  010708  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5091  01070C  0EB0               	movlw	low STR_70
  5092  01070E  0100               	movlb	0	; () banked
  5093  010710  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5094  010712  0EFE               	movlw	high STR_70
  5095  010714  0100               	movlb	0	; () banked
  5096  010716  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5097  010718  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5098  01071C  0900               	iorlw	0
  5099  01071E  B4D8               	btfsc	status,2,c
  5100  010720  D00F               	goto	l10626
  5101  010722  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5102  010726  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5103  01072A  0ECA               	movlw	low (STR_56+2)
  5104  01072C  0100               	movlb	0	; () banked
  5105  01072E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5106  010730  0EFF               	movlw	high (STR_56+2)
  5107  010732  0100               	movlb	0	; () banked
  5108  010734  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5109  010736  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5110  01073A  0900               	iorlw	0
  5111  01073C  A4D8               	btfss	status,2,c
  5112  01073E  D006               	goto	l10628
  5113  010740                     l10626:
  5114                           
  5115                           ;tasks.h: 457: comm_disp(2, 2);
  5116  010740  0E02               	movlw	2
  5117  010742  0100               	movlb	0	; () banked
  5118  010744  6FE0               	movwf	comm_disp@port& (0+255),b
  5119  010746  0E02               	movlw	2
  5120  010748  EC8E  F086         	call	_comm_disp
  5121  01074C                     l10628:
  5122                           
  5123                           ;tasks.h: 458: }
  5124                           ;tasks.h: 459: }
  5125                           ;tasks.h: 460: }
  5126                           ;tasks.h: 461: if (!my_strcmp(opcode, "print_time") || !my_strcmp(opcode, "t")) {
  5127  01074C  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  5128  010750  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  5129  010754  0E36               	movlw	low STR_88
  5130  010756  0100               	movlb	0	; () banked
  5131  010758  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5132  01075A  0EFF               	movlw	high STR_88
  5133  01075C  0100               	movlb	0	; () banked
  5134  01075E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5135  010760  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5136  010764  0900               	iorlw	0
  5137  010766  B4D8               	btfsc	status,2,c
  5138  010768  D00F               	goto	l10632
  5139  01076A  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  5140  01076E  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  5141  010772  0EF1               	movlw	low (STR_46+1)
  5142  010774  0100               	movlb	0	; () banked
  5143  010776  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5144  010778  0EFF               	movlw	high (STR_46+1)
  5145  01077A  0100               	movlb	0	; () banked
  5146  01077C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5147  01077E  EC0B  F0A6         	call	_my_strcmp	;wreg free
  5148  010782  0900               	iorlw	0
  5149  010784  A4D8               	btfss	status,2,c
  5150  010786  0012               	return	
  5151  010788                     l10632:
  5152                           
  5153                           ;tasks.h: 462: print_time();
  5154  010788  EC76  F098         	call	_print_time	;wreg free
  5155  01078C  0012               	return	
  5156  01078E                     __end_of_command_operation:
  5157                           	opt stack 0
  5158                           tblptru	equ	0xFF8
  5159                           tblptrh	equ	0xFF7
  5160                           tblptrl	equ	0xFF6
  5161                           tablat	equ	0xFF5
  5162                           prodh	equ	0xFF4
  5163                           prodl	equ	0xFF3
  5164                           intcon	equ	0xFF2
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           postinc1	equ	0xFE6
  5168                           postdec1	equ	0xFE5
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _my_strcmp *****************
  5179 ;; Defined at:
  5180 ;;		line 53 in file "../My_header\My_stdlib.h"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
  5183 ;;		 -> rx_loop@opland2(100), rx_loop@opland1(100), rx_loop@opcode(100), 
  5184 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
  5185 ;;		 -> STR_89(2), STR_88(11), STR_87(3), STR_86(16), 
  5186 ;;		 -> STR_85(3), STR_84(19), STR_83(2), STR_82(8), 
  5187 ;;		 -> STR_81(2), STR_80(6), STR_79(3), STR_78(16), 
  5188 ;;		 -> STR_77(3), STR_76(19), STR_75(2), STR_74(8), 
  5189 ;;		 -> STR_73(2), STR_72(7), STR_71(3), STR_70(16), 
  5190 ;;		 -> STR_69(3), STR_68(19), STR_67(2), STR_66(8), 
  5191 ;;		 -> STR_65(2), STR_64(5), STR_63(2), STR_62(8), 
  5192 ;;		 -> STR_60(2), STR_59(6), STR_56(5), STR_55(11), 
  5193 ;;		 -> STR_54(6), STR_53(2), STR_52(2), STR_51(2), 
  5194 ;;		 -> STR_50(2), STR_49(2), STR_48(2), STR_47(12), 
  5195 ;;		 -> STR_46(3), STR_45(9), STR_44(10), STR_43(4), 
  5196 ;;		 -> STR_42(9), STR_40(2), STR_39(5), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      char 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;Total ram usage:        5 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:   11
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_command_operation
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text5
  5223  014C16                     __ptext5:
  5224                           	opt stack 0
  5225  014C16                     _my_strcmp:
  5226                           	opt stack 17
  5227                           
  5228                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  5229                           
  5230                           ;incstack = 0
  5231  014C16  D02C               	goto	l9630
  5232  014C18                     l9622:
  5233                           
  5234                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  5235  014C18  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5236  014C1C  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5237  014C20  50DF               	movf	indf2,w,c
  5238  014C22  0100               	movlb	0	; () banked
  5239  014C24  6FB9               	movwf	??_my_strcmp& (0+255),b
  5240  014C26  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5241  014C2A  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5242  014C2E                     	if	0	;tblptru may be non-zero
  5243  014C2E                     	endif
  5244  014C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5245  014C2E  0E00               	movlw	low (__mediumconst shr (0+16))
  5246  014C30  6EF8               	movwf	tblptru,c
  5247  014C32                     	endif
  5248  014C32  0008               	tblrd		*
  5249  014C34  50F5               	movf	tablat,w,c
  5250  014C36  0100               	movlb	0	; () banked
  5251  014C38  19B9               	xorwf	??_my_strcmp& (0+255),w,b
  5252  014C3A  B4D8               	btfsc	status,2,c
  5253  014C3C  D013               	goto	l9628
  5254                           
  5255                           ; BSR set to: 0
  5256  014C3E  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5257  014C42  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5258  014C46  50DF               	movf	indf2,w,c
  5259  014C48  0100               	movlb	0	; () banked
  5260  014C4A  6FB9               	movwf	??_my_strcmp& (0+255),b
  5261  014C4C  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5262  014C50  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5263  014C54                     	if	0	;tblptru may be non-zero
  5264  014C54                     	endif
  5265  014C54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5266  014C54  0E00               	movlw	low (__mediumconst shr (0+16))
  5267  014C56  6EF8               	movwf	tblptru,c
  5268  014C58                     	endif
  5269  014C58  0008               	tblrd		*
  5270  014C5A  50F5               	movf	tablat,w,c
  5271  014C5C  0800               	sublw	0
  5272  014C5E  0100               	movlb	0	; () banked
  5273  014C60  25B9               	addwf	??_my_strcmp& (0+255),w,b
  5274                           
  5275                           ; BSR set to: 0
  5276  014C62  0012               	return	
  5277  014C64                     l9628:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;My_header\My_stdlib.h: 56: str1++;
  5281  014C64  0100               	movlb	0	; () banked
  5282  014C66  4BB5               	infsnz	my_strcmp@str1& (0+255),f,b
  5283  014C68  2BB6               	incf	(my_strcmp@str1+1)& (0+255),f,b
  5284                           
  5285                           ;My_header\My_stdlib.h: 57: str2++;
  5286  014C6A  0100               	movlb	0	; () banked
  5287  014C6C  4BB7               	infsnz	my_strcmp@str2& (0+255),f,b
  5288  014C6E  2BB8               	incf	(my_strcmp@str2+1)& (0+255),f,b
  5289  014C70                     l9630:
  5290  014C70  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5291  014C74  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5292  014C78  50DF               	movf	indf2,w,c
  5293  014C7A  B4D8               	btfsc	status,2,c
  5294  014C7C  D00B               	goto	l9634
  5295  014C7E  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5296  014C82  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5297  014C86                     	if	0	;tblptru may be non-zero
  5298  014C86                     	endif
  5299  014C86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5300  014C86  0E00               	movlw	low (__mediumconst shr (0+16))
  5301  014C88  6EF8               	movwf	tblptru,c
  5302  014C8A                     	endif
  5303  014C8A  0008               	tblrd		*
  5304  014C8C  50F5               	movf	tablat,w,c
  5305  014C8E  0900               	iorlw	0
  5306  014C90  A4D8               	btfss	status,2,c
  5307  014C92  D7C2               	goto	l9622
  5308  014C94                     l9634:
  5309                           
  5310                           ;My_header\My_stdlib.h: 58: }
  5311                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  5312  014C94  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5313  014C98  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5314  014C9C  50DF               	movf	indf2,w,c
  5315  014C9E  0100               	movlb	0	; () banked
  5316  014CA0  6FB9               	movwf	??_my_strcmp& (0+255),b
  5317  014CA2  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5318  014CA6  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5319  014CAA                     	if	0	;tblptru may be non-zero
  5320  014CAA                     	endif
  5321  014CAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5322  014CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5323  014CAC  6EF8               	movwf	tblptru,c
  5324  014CAE                     	endif
  5325  014CAE  0008               	tblrd		*
  5326  014CB0  50F5               	movf	tablat,w,c
  5327  014CB2  0800               	sublw	0
  5328  014CB4  0100               	movlb	0	; () banked
  5329  014CB6  25B9               	addwf	??_my_strcmp& (0+255),w,b
  5330  014CB8  0012               	return	
  5331  014CBA                     __end_of_my_strcmp:
  5332                           	opt stack 0
  5333                           tblptru	equ	0xFF8
  5334                           tblptrh	equ	0xFF7
  5335                           tblptrl	equ	0xFF6
  5336                           tablat	equ	0xFF5
  5337                           prodh	equ	0xFF4
  5338                           prodl	equ	0xFF3
  5339                           intcon	equ	0xFF2
  5340                           postinc0	equ	0xFEE
  5341                           wreg	equ	0xFE8
  5342                           postinc1	equ	0xFE6
  5343                           postdec1	equ	0xFE5
  5344                           fsr1h	equ	0xFE2
  5345                           fsr1l	equ	0xFE1
  5346                           indf2	equ	0xFDF
  5347                           postinc2	equ	0xFDE
  5348                           postdec2	equ	0xFDD
  5349                           fsr2h	equ	0xFDA
  5350                           fsr2l	equ	0xFD9
  5351                           status	equ	0xFD8
  5352                           
  5353 ;; *************** function _my_atoi *****************
  5354 ;; Defined at:
  5355 ;;		line 41 in file "../My_header\My_stdlib.h"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  str             2   28[BANK0 ] PTR const unsigned char 
  5358 ;;		 -> rx_loop@opland2(100), 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  ret             2   34[BANK0 ] unsigned int 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  2   28[BANK0 ] unsigned int 
  5363 ;; Registers used:
  5364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;Total ram usage:        8 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:   12
  5377 ;; This function calls:
  5378 ;;		___wmul
  5379 ;; This function is called by:
  5380 ;;		_command_operation
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text6
  5385  014D5C                     __ptext6:
  5386                           	opt stack 0
  5387  014D5C                     _my_atoi:
  5388                           	opt stack 16
  5389                           
  5390                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;incstack = 0
  5394  014D5C  0E00               	movlw	0
  5395  014D5E  0100               	movlb	0	; () banked
  5396  014D60  6FD8               	movwf	(my_atoi@ret+1)& (0+255),b
  5397  014D62  0E00               	movlw	0
  5398  014D64  6FD7               	movwf	my_atoi@ret& (0+255),b
  5399                           
  5400                           ;My_header\My_stdlib.h: 43: while (*str) {
  5401  014D66  D03E               	goto	l9618
  5402  014D68                     l9608:
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  5406  014D68  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5407  014D6C  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5408  014D70  0E2F               	movlw	47
  5409  014D72  64DF               	cpfsgt	indf2,c
  5410  014D74  D034               	goto	l9616
  5411                           
  5412                           ; BSR set to: 0
  5413  014D76  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5414  014D7A  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5415  014D7E  0E3A               	movlw	58
  5416  014D80  60DF               	cpfslt	indf2,c
  5417  014D82  D02D               	goto	l9616
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;My_header\My_stdlib.h: 45: ret *= 10;
  5421  014D84  C0D7  F0CB         	movff	my_atoi@ret,___wmul@multiplier
  5422  014D88  C0D8  F0CC         	movff	my_atoi@ret+1,___wmul@multiplier+1
  5423  014D8C  0E00               	movlw	0
  5424  014D8E  0100               	movlb	0	; () banked
  5425  014D90  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5426  014D92  0E0A               	movlw	10
  5427  014D94  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  5428  014D96  ECE5  F0AE         	call	___wmul	;wreg free
  5429  014D9A  C0CB  F0D7         	movff	?___wmul,my_atoi@ret
  5430  014D9E  C0CC  F0D8         	movff	?___wmul+1,my_atoi@ret+1
  5431                           
  5432                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  5433  014DA2  0ED0               	movlw	208
  5434  014DA4  0100               	movlb	0	; () banked
  5435  014DA6  6FD3               	movwf	??_my_atoi& (0+255),b
  5436  014DA8  0EFF               	movlw	255
  5437  014DAA  0100               	movlb	0	; () banked
  5438  014DAC  6FD4               	movwf	(??_my_atoi+1)& (0+255),b
  5439  014DAE  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5440  014DB2  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5441  014DB6  50DF               	movf	indf2,w,c
  5442  014DB8  0100               	movlb	0	; () banked
  5443  014DBA  6FD5               	movwf	(??_my_atoi+2)& (0+255),b
  5444  014DBC  6BD6               	clrf	(??_my_atoi+3)& (0+255),b
  5445  014DBE  0100               	movlb	0	; () banked
  5446  014DC0  51D3               	movf	??_my_atoi& (0+255),w,b
  5447  014DC2  0100               	movlb	0	; () banked
  5448  014DC4  27D5               	addwf	(??_my_atoi+2)& (0+255),f,b
  5449  014DC6  0100               	movlb	0	; () banked
  5450  014DC8  51D4               	movf	(??_my_atoi+1)& (0+255),w,b
  5451  014DCA  0100               	movlb	0	; () banked
  5452  014DCC  23D6               	addwfc	(??_my_atoi+3)& (0+255),f,b
  5453  014DCE  0100               	movlb	0	; () banked
  5454  014DD0  51D5               	movf	(??_my_atoi+2)& (0+255),w,b
  5455  014DD2  0100               	movlb	0	; () banked
  5456  014DD4  27D7               	addwf	my_atoi@ret& (0+255),f,b
  5457  014DD6  0100               	movlb	0	; () banked
  5458  014DD8  51D6               	movf	(??_my_atoi+3)& (0+255),w,b
  5459  014DDA  0100               	movlb	0	; () banked
  5460  014DDC  23D8               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  5461  014DDE                     l9616:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;My_header\My_stdlib.h: 47: }
  5465                           ;My_header\My_stdlib.h: 48: str++;
  5466  014DDE  0100               	movlb	0	; () banked
  5467  014DE0  4BD1               	infsnz	my_atoi@str& (0+255),f,b
  5468  014DE2  2BD2               	incf	(my_atoi@str+1)& (0+255),f,b
  5469  014DE4                     l9618:
  5470                           
  5471                           ; BSR set to: 0
  5472  014DE4  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5473  014DE8  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5474  014DEC  50DF               	movf	indf2,w,c
  5475  014DEE  A4D8               	btfss	status,2,c
  5476  014DF0  D7BB               	goto	l9608
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;My_header\My_stdlib.h: 49: }
  5480                           ;My_header\My_stdlib.h: 50: return ret;
  5481  014DF2  C0D7  F0D1         	movff	my_atoi@ret,?_my_atoi
  5482  014DF6  C0D8  F0D2         	movff	my_atoi@ret+1,?_my_atoi+1
  5483                           
  5484                           ; BSR set to: 0
  5485  014DFA  0012               	return		;funcret
  5486  014DFC                     __end_of_my_atoi:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           prodh	equ	0xFF4
  5493                           prodl	equ	0xFF3
  5494                           intcon	equ	0xFF2
  5495                           postinc0	equ	0xFEE
  5496                           wreg	equ	0xFE8
  5497                           postinc1	equ	0xFE6
  5498                           postdec1	equ	0xFE5
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _ctmu_set_ratio *****************
  5509 ;; Defined at:
  5510 ;;		line 314 in file "tasks.h"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  percentage      1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  percentage      1   35[BANK0 ] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;Total ram usage:        1 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:   13
  5531 ;; This function calls:
  5532 ;;		_CTMU_read
  5533 ;;		___lwdiv
  5534 ;;		___wmul
  5535 ;; This function is called by:
  5536 ;;		_command_operation
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text7
  5542  0139EE                     __ptext7:
  5543                           	opt stack 0
  5544  0139EE                     _ctmu_set_ratio:
  5545                           	opt stack 15
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;incstack = 0
  5549                           ;ctmu_set_ratio@percentage stored from wreg
  5550  0139EE  0100               	movlb	0	; () banked
  5551  0139F0  6FD8               	movwf	ctmu_set_ratio@percentage& (0+255),b
  5552                           
  5553                           ;tasks.h: 315: ctmu_value[0] = (uint16_t) percentage * CTMU_read(0) / 100;
  5554  0139F2  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5555  0139F6  0100               	movlb	0	; () banked
  5556  0139F8  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5557  0139FA  0E00               	movlw	0
  5558  0139FC  EC2E  F0A3         	call	_CTMU_read
  5559  013A00  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5560  013A04  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5561  013A08  ECE5  F0AE         	call	___wmul	;wreg free
  5562  013A0C  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5563  013A10  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5564  013A14  0E00               	movlw	0
  5565  013A16  0100               	movlb	0	; () banked
  5566  013A18  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5567  013A1A  0E64               	movlw	100
  5568  013A1C  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5569  013A1E  EC1A  F0AA         	call	___lwdiv	;wreg free
  5570  013A22  C0D1  F1C9         	movff	?___lwdiv,_ctmu_value
  5571  013A26  C0D2  F1CA         	movff	?___lwdiv+1,_ctmu_value+1
  5572                           
  5573                           ;tasks.h: 316: ctmu_value[1] = (uint16_t) percentage * CTMU_read(1) / 100;
  5574  013A2A  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5575  013A2E  0100               	movlb	0	; () banked
  5576  013A30  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5577  013A32  0E01               	movlw	1
  5578  013A34  EC2E  F0A3         	call	_CTMU_read
  5579  013A38  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5580  013A3C  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5581  013A40  ECE5  F0AE         	call	___wmul	;wreg free
  5582  013A44  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5583  013A48  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5584  013A4C  0E00               	movlw	0
  5585  013A4E  0100               	movlb	0	; () banked
  5586  013A50  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5587  013A52  0E64               	movlw	100
  5588  013A54  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5589  013A56  EC1A  F0AA         	call	___lwdiv	;wreg free
  5590  013A5A  C0D1  F1CB         	movff	?___lwdiv,_ctmu_value+2
  5591  013A5E  C0D2  F1CC         	movff	?___lwdiv+1,_ctmu_value+3
  5592                           
  5593                           ;tasks.h: 317: ctmu_value[2] = (uint16_t) percentage * CTMU_read(2) / 100;
  5594  013A62  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5595  013A66  0100               	movlb	0	; () banked
  5596  013A68  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5597  013A6A  0E02               	movlw	2
  5598  013A6C  EC2E  F0A3         	call	_CTMU_read
  5599  013A70  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5600  013A74  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5601  013A78  ECE5  F0AE         	call	___wmul	;wreg free
  5602  013A7C  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5603  013A80  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5604  013A84  0E00               	movlw	0
  5605  013A86  0100               	movlb	0	; () banked
  5606  013A88  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5607  013A8A  0E64               	movlw	100
  5608  013A8C  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5609  013A8E  EC1A  F0AA         	call	___lwdiv	;wreg free
  5610  013A92  C0D1  F1CD         	movff	?___lwdiv,_ctmu_value+4
  5611  013A96  C0D2  F1CE         	movff	?___lwdiv+1,_ctmu_value+5
  5612                           
  5613                           ;tasks.h: 318: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  5614  013A9A  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5615  013A9E  0100               	movlb	0	; () banked
  5616  013AA0  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5617  013AA2  0E03               	movlw	3
  5618  013AA4  EC2E  F0A3         	call	_CTMU_read
  5619  013AA8  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5620  013AAC  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5621  013AB0  ECE5  F0AE         	call	___wmul	;wreg free
  5622  013AB4  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5623  013AB8  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5624  013ABC  0E00               	movlw	0
  5625  013ABE  0100               	movlb	0	; () banked
  5626  013AC0  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5627  013AC2  0E64               	movlw	100
  5628  013AC4  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5629  013AC6  EC1A  F0AA         	call	___lwdiv	;wreg free
  5630  013ACA  C0D1  F09A         	movff	?___lwdiv,_ctmu_value_m
  5631  013ACE  C0D2  F09B         	movff	?___lwdiv+1,_ctmu_value_m+1
  5632  013AD2  0012               	return		;funcret
  5633  013AD4                     __end_of_ctmu_set_ratio:
  5634                           	opt stack 0
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           prodh	equ	0xFF4
  5640                           prodl	equ	0xFF3
  5641                           intcon	equ	0xFF2
  5642                           postinc0	equ	0xFEE
  5643                           wreg	equ	0xFE8
  5644                           postinc1	equ	0xFE6
  5645                           postdec1	equ	0xFE5
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           postdec2	equ	0xFDD
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _comm_disp *****************
  5656 ;; Defined at:
  5657 ;;		line 332 in file "tasks.h"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  content         1    wreg     unsigned char 
  5660 ;;  port            1   43[BANK0 ] unsigned char 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  content         1   58[BANK0 ] unsigned char 
  5663 ;;  str            10   44[BANK0 ] unsigned char [10]
  5664 ;; Return value:  Size  Location     Type
  5665 ;;		None               void
  5666 ;; Registers used:
  5667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5673 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;Total ram usage:       16 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:   15
  5680 ;; This function calls:
  5681 ;;		___lldiv
  5682 ;;		___llmod
  5683 ;;		___lwdiv
  5684 ;;		___lwmod
  5685 ;;		_my_utoa
  5686 ;;		_tx_send
  5687 ;;		_tx_sendn
  5688 ;;		_tx_sends
  5689 ;; This function is called by:
  5690 ;;		_command_operation
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text8
  5695  010D1C                     __ptext8:
  5696                           	opt stack 0
  5697  010D1C                     _comm_disp:
  5698                           	opt stack 13
  5699                           
  5700                           ;incstack = 0
  5701                           ;comm_disp@content stored from wreg
  5702  010D1C  0100               	movlb	0	; () banked
  5703  010D1E  6FEF               	movwf	comm_disp@content& (0+255),b
  5704                           
  5705                           ;tasks.h: 333: switch (content) {
  5706  010D20  D1F2               	goto	l9922
  5707  010D22                     l9872:
  5708                           
  5709                           ;tasks.h: 335: tx_sends("\t");
  5710  010D22  0EF3               	movlw	low STR_23
  5711  010D24  0100               	movlb	0	; () banked
  5712  010D26  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5713  010D28  0EFF               	movlw	high STR_23
  5714  010D2A  0100               	movlb	0	; () banked
  5715  010D2C  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5716  010D2E  EC04  F0AB         	call	_tx_sends	;wreg free
  5717                           
  5718                           ;tasks.h: 336: tx_send((I[port] % 10000) / 1000 + '0');
  5719  010D32  0E27               	movlw	39
  5720  010D34  0100               	movlb	0	; () banked
  5721  010D36  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  5722  010D38  0E10               	movlw	16
  5723  010D3A  6FB7               	movwf	___lwmod@divisor& (0+255),b
  5724  010D3C  0100               	movlb	0	; () banked
  5725  010D3E  51E0               	movf	comm_disp@port& (0+255),w,b
  5726  010D40  0D02               	mullw	2
  5727  010D42  0E2D               	movlw	low _I
  5728  010D44  24F3               	addwf	prodl,w,c
  5729  010D46  6ED9               	movwf	fsr2l,c
  5730  010D48  0E00               	movlw	high _I
  5731  010D4A  20F4               	addwfc	prodh,w,c
  5732  010D4C  6EDA               	movwf	fsr2h,c
  5733  010D4E  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  5734  010D52  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  5735  010D56  EC39  F0AB         	call	___lwmod	;wreg free
  5736  010D5A  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  5737  010D5E  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  5738  010D62  0E03               	movlw	3
  5739  010D64  0100               	movlb	0	; () banked
  5740  010D66  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5741  010D68  0EE8               	movlw	232
  5742  010D6A  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5743  010D6C  EC1A  F0AA         	call	___lwdiv	;wreg free
  5744  010D70  0100               	movlb	0	; () banked
  5745  010D72  51D1               	movf	?___lwdiv& (0+255),w,b
  5746  010D74  0F30               	addlw	48
  5747  010D76  ECC5  F0B0         	call	_tx_send
  5748                           
  5749                           ;tasks.h: 337: tx_send('.');
  5750  010D7A  0E2E               	movlw	46
  5751  010D7C  ECC5  F0B0         	call	_tx_send
  5752                           
  5753                           ;tasks.h: 338: tx_send((I[port] % 1000) / 100 + '0');
  5754  010D80  0E03               	movlw	3
  5755  010D82  0100               	movlb	0	; () banked
  5756  010D84  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  5757  010D86  0EE8               	movlw	232
  5758  010D88  6FB7               	movwf	___lwmod@divisor& (0+255),b
  5759  010D8A  0100               	movlb	0	; () banked
  5760  010D8C  51E0               	movf	comm_disp@port& (0+255),w,b
  5761  010D8E  0D02               	mullw	2
  5762  010D90  0E2D               	movlw	low _I
  5763  010D92  24F3               	addwf	prodl,w,c
  5764  010D94  6ED9               	movwf	fsr2l,c
  5765  010D96  0E00               	movlw	high _I
  5766  010D98  20F4               	addwfc	prodh,w,c
  5767  010D9A  6EDA               	movwf	fsr2h,c
  5768  010D9C  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  5769  010DA0  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  5770  010DA4  EC39  F0AB         	call	___lwmod	;wreg free
  5771  010DA8  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  5772  010DAC  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  5773  010DB0  0E00               	movlw	0
  5774  010DB2  0100               	movlb	0	; () banked
  5775  010DB4  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5776  010DB6  0E64               	movlw	100
  5777  010DB8  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5778  010DBA  EC1A  F0AA         	call	___lwdiv	;wreg free
  5779  010DBE  0100               	movlb	0	; () banked
  5780  010DC0  51D1               	movf	?___lwdiv& (0+255),w,b
  5781  010DC2  0F30               	addlw	48
  5782  010DC4  ECC5  F0B0         	call	_tx_send
  5783                           
  5784                           ;tasks.h: 339: tx_send((I[port] % 100) / 10 + '0');
  5785  010DC8  0E00               	movlw	0
  5786  010DCA  0100               	movlb	0	; () banked
  5787  010DCC  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  5788  010DCE  0E64               	movlw	100
  5789  010DD0  6FB7               	movwf	___lwmod@divisor& (0+255),b
  5790  010DD2  0100               	movlb	0	; () banked
  5791  010DD4  51E0               	movf	comm_disp@port& (0+255),w,b
  5792  010DD6  0D02               	mullw	2
  5793  010DD8  0E2D               	movlw	low _I
  5794  010DDA  24F3               	addwf	prodl,w,c
  5795  010DDC  6ED9               	movwf	fsr2l,c
  5796  010DDE  0E00               	movlw	high _I
  5797  010DE0  20F4               	addwfc	prodh,w,c
  5798  010DE2  6EDA               	movwf	fsr2h,c
  5799  010DE4  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  5800  010DE8  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  5801  010DEC  EC39  F0AB         	call	___lwmod	;wreg free
  5802  010DF0  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  5803  010DF4  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  5804  010DF8  0E00               	movlw	0
  5805  010DFA  0100               	movlb	0	; () banked
  5806  010DFC  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5807  010DFE  0E0A               	movlw	10
  5808  010E00  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5809  010E02  EC1A  F0AA         	call	___lwdiv	;wreg free
  5810  010E06  0100               	movlb	0	; () banked
  5811  010E08  51D1               	movf	?___lwdiv& (0+255),w,b
  5812  010E0A  0F30               	addlw	48
  5813  010E0C  ECC5  F0B0         	call	_tx_send
  5814                           
  5815                           ;tasks.h: 340: tx_send((I[port] % 10) / 1 + '0');
  5816  010E10  0100               	movlb	0	; () banked
  5817  010E12  51E0               	movf	comm_disp@port& (0+255),w,b
  5818  010E14  0D02               	mullw	2
  5819  010E16  0E2D               	movlw	low _I
  5820  010E18  24F3               	addwf	prodl,w,c
  5821  010E1A  6ED9               	movwf	fsr2l,c
  5822  010E1C  0E00               	movlw	high _I
  5823  010E1E  20F4               	addwfc	prodh,w,c
  5824  010E20  6EDA               	movwf	fsr2h,c
  5825  010E22  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  5826  010E26  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  5827  010E2A  0E00               	movlw	0
  5828  010E2C  0100               	movlb	0	; () banked
  5829  010E2E  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  5830  010E30  0E0A               	movlw	10
  5831  010E32  6FB7               	movwf	___lwmod@divisor& (0+255),b
  5832  010E34  EC39  F0AB         	call	___lwmod	;wreg free
  5833  010E38  0100               	movlb	0	; () banked
  5834  010E3A  51B5               	movf	?___lwmod& (0+255),w,b
  5835  010E3C  0F30               	addlw	48
  5836  010E3E  ECC5  F0B0         	call	_tx_send
  5837                           
  5838                           ;tasks.h: 341: tx_sends("A\n");
  5839  010E42  0ED8               	movlw	low STR_31
  5840  010E44  0100               	movlb	0	; () banked
  5841  010E46  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5842  010E48  0EFF               	movlw	high STR_31
  5843  010E4A  0100               	movlb	0	; () banked
  5844  010E4C  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5845  010E4E  EC04  F0AB         	call	_tx_sends	;wreg free
  5846                           
  5847                           ;tasks.h: 342: break;
  5848  010E52  0012               	return	
  5849  010E54                     l9886:
  5850                           
  5851                           ;tasks.h: 344: tx_sends("\t");
  5852  010E54  0EF3               	movlw	low STR_23
  5853  010E56  0100               	movlb	0	; () banked
  5854  010E58  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5855  010E5A  0EFF               	movlw	high STR_23
  5856  010E5C  0100               	movlb	0	; () banked
  5857  010E5E  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5858  010E60  EC04  F0AB         	call	_tx_sends	;wreg free
  5859                           
  5860                           ;tasks.h: 345: tx_sendn(S[port], 5);
  5861  010E64  0100               	movlb	0	; () banked
  5862  010E66  51E0               	movf	comm_disp@port& (0+255),w,b
  5863  010E68  0D04               	mullw	4
  5864  010E6A  0ECB               	movlw	low _S
  5865  010E6C  24F3               	addwf	prodl,w,c
  5866  010E6E  6ED9               	movwf	fsr2l,c
  5867  010E70  0E02               	movlw	high _S
  5868  010E72  20F4               	addwfc	prodh,w,c
  5869  010E74  6EDA               	movwf	fsr2h,c
  5870  010E76  CFDE F0D8          	movff	postinc2,tx_sendn@value
  5871  010E7A  CFDD F0D9          	movff	postdec2,tx_sendn@value+1
  5872  010E7E  0E05               	movlw	5
  5873  010E80  0100               	movlb	0	; () banked
  5874  010E82  6FDA               	movwf	tx_sendn@digits& (0+255),b
  5875  010E84  EC56  F0AA         	call	_tx_sendn	;wreg free
  5876                           
  5877                           ;tasks.h: 346: tx_sends("mAh\n");
  5878  010E88  0EB9               	movlw	low STR_33
  5879  010E8A  0100               	movlb	0	; () banked
  5880  010E8C  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5881  010E8E  0EFF               	movlw	high STR_33
  5882  010E90  0100               	movlb	0	; () banked
  5883  010E92  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5884  010E94  EC04  F0AB         	call	_tx_sends	;wreg free
  5885                           
  5886                           ;tasks.h: 347: break;
  5887  010E98  0012               	return	
  5888  010E9A                     l9892:
  5889                           
  5890                           ;tasks.h: 349: tx_sends("\t");
  5891  010E9A  0EF3               	movlw	low STR_23
  5892  010E9C  0100               	movlb	0	; () banked
  5893  010E9E  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5894  010EA0  0EFF               	movlw	high STR_23
  5895  010EA2  0100               	movlb	0	; () banked
  5896  010EA4  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5897  010EA6  EC04  F0AB         	call	_tx_sends	;wreg free
  5898                           
  5899                           ;tasks.h: 350: char str[10];
  5900                           ;tasks.h: 351: my_utoa(str, charge_time[port] / 3600 / 24, 2);
  5901  010EAA  0E10               	movlw	16
  5902  010EAC  0100               	movlb	0	; () banked
  5903  010EAE  6FB9               	movwf	___lldiv@divisor& (0+255),b
  5904  010EB0  0E0E               	movlw	14
  5905  010EB2  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  5906  010EB4  0E00               	movlw	0
  5907  010EB6  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  5908  010EB8  0E00               	movlw	0
  5909  010EBA  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  5910  010EBC  0100               	movlb	0	; () banked
  5911  010EBE  51E0               	movf	comm_disp@port& (0+255),w,b
  5912  010EC0  0D04               	mullw	4
  5913  010EC2  0E60               	movlw	low _charge_time
  5914  010EC4  24F3               	addwf	prodl,w,c
  5915  010EC6  6ED9               	movwf	fsr2l,c
  5916  010EC8  0E00               	movlw	high _charge_time
  5917  010ECA  20F4               	addwfc	prodh,w,c
  5918  010ECC  6EDA               	movwf	fsr2h,c
  5919  010ECE  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  5920  010ED2  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  5921  010ED6  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  5922  010EDA  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  5923  010EDE  ECEE  F0A3         	call	___lldiv	;wreg free
  5924  010EE2  C0B5  F0EB         	movff	?___lldiv,_comm_disp$5306
  5925  010EE6  C0B6  F0EC         	movff	?___lldiv+1,_comm_disp$5306+1
  5926  010EEA  C0B7  F0ED         	movff	?___lldiv+2,_comm_disp$5306+2
  5927  010EEE  C0B8  F0EE         	movff	?___lldiv+3,_comm_disp$5306+3
  5928                           
  5929                           ;tasks.h: 350: char str[10];
  5930                           ;tasks.h: 351: my_utoa(str, charge_time[port] / 3600 / 24, 2);
  5931  010EF2  0EE1               	movlw	low comm_disp@str
  5932  010EF4  0100               	movlb	0	; () banked
  5933  010EF6  6FD8               	movwf	my_utoa@str& (0+255),b
  5934  010EF8  0E00               	movlw	high comm_disp@str
  5935  010EFA  0100               	movlb	0	; () banked
  5936  010EFC  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  5937  010EFE  C0EB  F0B5         	movff	_comm_disp$5306,___lldiv@dividend
  5938  010F02  C0EC  F0B6         	movff	_comm_disp$5306+1,___lldiv@dividend+1
  5939  010F06  C0ED  F0B7         	movff	_comm_disp$5306+2,___lldiv@dividend+2
  5940  010F0A  C0EE  F0B8         	movff	_comm_disp$5306+3,___lldiv@dividend+3
  5941  010F0E  0E18               	movlw	24
  5942  010F10  0100               	movlb	0	; () banked
  5943  010F12  6FB9               	movwf	___lldiv@divisor& (0+255),b
  5944  010F14  0E00               	movlw	0
  5945  010F16  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  5946  010F18  0E00               	movlw	0
  5947  010F1A  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  5948  010F1C  0E00               	movlw	0
  5949  010F1E  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  5950  010F20  ECEE  F0A3         	call	___lldiv	;wreg free
  5951  010F24  C0B5  F0DA         	movff	?___lldiv,my_utoa@value
  5952  010F28  C0B6  F0DB         	movff	?___lldiv+1,my_utoa@value+1
  5953  010F2C  0E02               	movlw	2
  5954  010F2E  0100               	movlb	0	; () banked
  5955  010F30  6FDC               	movwf	my_utoa@digits& (0+255),b
  5956  010F32  EC53  F0A9         	call	_my_utoa	;wreg free
  5957                           
  5958                           ;tasks.h: 352: tx_sends(str);
  5959  010F36  0EE1               	movlw	low comm_disp@str
  5960  010F38  0100               	movlb	0	; () banked
  5961  010F3A  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5962  010F3C  0E00               	movlw	high comm_disp@str
  5963  010F3E  0100               	movlb	0	; () banked
  5964  010F40  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5965  010F42  EC04  F0AB         	call	_tx_sends	;wreg free
  5966                           
  5967                           ;tasks.h: 353: tx_sends("d ");
  5968  010F46  0EE1               	movlw	low STR_12
  5969  010F48  0100               	movlb	0	; () banked
  5970  010F4A  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5971  010F4C  0EFF               	movlw	high STR_12
  5972  010F4E  0100               	movlb	0	; () banked
  5973  010F50  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5974  010F52  EC04  F0AB         	call	_tx_sends	;wreg free
  5975                           
  5976                           ;tasks.h: 354: my_utoa(str, (charge_time[port] / 3600) % 24, 2);
  5977  010F56  0EE1               	movlw	low comm_disp@str
  5978  010F58  0100               	movlb	0	; () banked
  5979  010F5A  6FD8               	movwf	my_utoa@str& (0+255),b
  5980  010F5C  0E00               	movlw	high comm_disp@str
  5981  010F5E  0100               	movlb	0	; () banked
  5982  010F60  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  5983  010F62  0E10               	movlw	16
  5984  010F64  0100               	movlb	0	; () banked
  5985  010F66  6FB9               	movwf	___lldiv@divisor& (0+255),b
  5986  010F68  0E0E               	movlw	14
  5987  010F6A  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  5988  010F6C  0E00               	movlw	0
  5989  010F6E  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  5990  010F70  0E00               	movlw	0
  5991  010F72  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  5992  010F74  0100               	movlb	0	; () banked
  5993  010F76  51E0               	movf	comm_disp@port& (0+255),w,b
  5994  010F78  0D04               	mullw	4
  5995  010F7A  0E60               	movlw	low _charge_time
  5996  010F7C  24F3               	addwf	prodl,w,c
  5997  010F7E  6ED9               	movwf	fsr2l,c
  5998  010F80  0E00               	movlw	high _charge_time
  5999  010F82  20F4               	addwfc	prodh,w,c
  6000  010F84  6EDA               	movwf	fsr2h,c
  6001  010F86  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  6002  010F8A  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  6003  010F8E  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  6004  010F92  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  6005  010F96  ECEE  F0A3         	call	___lldiv	;wreg free
  6006  010F9A  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  6007  010F9E  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  6008  010FA2  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  6009  010FA6  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  6010  010FAA  0E18               	movlw	24
  6011  010FAC  0100               	movlb	0	; () banked
  6012  010FAE  6FC6               	movwf	___llmod@divisor& (0+255),b
  6013  010FB0  0E00               	movlw	0
  6014  010FB2  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  6015  010FB4  0E00               	movlw	0
  6016  010FB6  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  6017  010FB8  0E00               	movlw	0
  6018  010FBA  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  6019  010FBC  EC4D  F0A7         	call	___llmod	;wreg free
  6020  010FC0  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  6021  010FC4  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  6022  010FC8  0E02               	movlw	2
  6023  010FCA  0100               	movlb	0	; () banked
  6024  010FCC  6FDC               	movwf	my_utoa@digits& (0+255),b
  6025  010FCE  EC53  F0A9         	call	_my_utoa	;wreg free
  6026                           
  6027                           ;tasks.h: 355: tx_sends(str);
  6028  010FD2  0EE1               	movlw	low comm_disp@str
  6029  010FD4  0100               	movlb	0	; () banked
  6030  010FD6  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6031  010FD8  0E00               	movlw	high comm_disp@str
  6032  010FDA  0100               	movlb	0	; () banked
  6033  010FDC  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6034  010FDE  EC04  F0AB         	call	_tx_sends	;wreg free
  6035                           
  6036                           ;tasks.h: 356: tx_sends("h ");
  6037  010FE2  0EE4               	movlw	low STR_13
  6038  010FE4  0100               	movlb	0	; () banked
  6039  010FE6  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6040  010FE8  0EFF               	movlw	high STR_13
  6041  010FEA  0100               	movlb	0	; () banked
  6042  010FEC  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6043  010FEE  EC04  F0AB         	call	_tx_sends	;wreg free
  6044                           
  6045                           ;tasks.h: 357: my_utoa(str, (charge_time[port] / 60) % 60, 2);
  6046  010FF2  0EE1               	movlw	low comm_disp@str
  6047  010FF4  0100               	movlb	0	; () banked
  6048  010FF6  6FD8               	movwf	my_utoa@str& (0+255),b
  6049  010FF8  0E00               	movlw	high comm_disp@str
  6050  010FFA  0100               	movlb	0	; () banked
  6051  010FFC  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6052  010FFE  0E3C               	movlw	60
  6053  011000  0100               	movlb	0	; () banked
  6054  011002  6FB9               	movwf	___lldiv@divisor& (0+255),b
  6055  011004  0E00               	movlw	0
  6056  011006  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  6057  011008  0E00               	movlw	0
  6058  01100A  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  6059  01100C  0E00               	movlw	0
  6060  01100E  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  6061  011010  0100               	movlb	0	; () banked
  6062  011012  51E0               	movf	comm_disp@port& (0+255),w,b
  6063  011014  0D04               	mullw	4
  6064  011016  0E60               	movlw	low _charge_time
  6065  011018  24F3               	addwf	prodl,w,c
  6066  01101A  6ED9               	movwf	fsr2l,c
  6067  01101C  0E00               	movlw	high _charge_time
  6068  01101E  20F4               	addwfc	prodh,w,c
  6069  011020  6EDA               	movwf	fsr2h,c
  6070  011022  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  6071  011026  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  6072  01102A  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  6073  01102E  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  6074  011032  ECEE  F0A3         	call	___lldiv	;wreg free
  6075  011036  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  6076  01103A  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  6077  01103E  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  6078  011042  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  6079  011046  0E3C               	movlw	60
  6080  011048  0100               	movlb	0	; () banked
  6081  01104A  6FC6               	movwf	___llmod@divisor& (0+255),b
  6082  01104C  0E00               	movlw	0
  6083  01104E  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  6084  011050  0E00               	movlw	0
  6085  011052  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  6086  011054  0E00               	movlw	0
  6087  011056  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  6088  011058  EC4D  F0A7         	call	___llmod	;wreg free
  6089  01105C  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  6090  011060  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  6091  011064  0E02               	movlw	2
  6092  011066  0100               	movlb	0	; () banked
  6093  011068  6FDC               	movwf	my_utoa@digits& (0+255),b
  6094  01106A  EC53  F0A9         	call	_my_utoa	;wreg free
  6095                           
  6096                           ;tasks.h: 358: tx_sends(str);
  6097  01106E  0EE1               	movlw	low comm_disp@str
  6098  011070  0100               	movlb	0	; () banked
  6099  011072  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6100  011074  0E00               	movlw	high comm_disp@str
  6101  011076  0100               	movlb	0	; () banked
  6102  011078  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6103  01107A  EC04  F0AB         	call	_tx_sends	;wreg free
  6104                           
  6105                           ;tasks.h: 359: tx_sends("m ");
  6106  01107E  0EE7               	movlw	low STR_14
  6107  011080  0100               	movlb	0	; () banked
  6108  011082  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6109  011084  0EFF               	movlw	high STR_14
  6110  011086  0100               	movlb	0	; () banked
  6111  011088  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6112  01108A  EC04  F0AB         	call	_tx_sends	;wreg free
  6113                           
  6114                           ;tasks.h: 360: my_utoa(str, charge_time[port] % 60, 2);
  6115  01108E  0EE1               	movlw	low comm_disp@str
  6116  011090  0100               	movlb	0	; () banked
  6117  011092  6FD8               	movwf	my_utoa@str& (0+255),b
  6118  011094  0E00               	movlw	high comm_disp@str
  6119  011096  0100               	movlb	0	; () banked
  6120  011098  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6121  01109A  0100               	movlb	0	; () banked
  6122  01109C  51E0               	movf	comm_disp@port& (0+255),w,b
  6123  01109E  0D04               	mullw	4
  6124  0110A0  0E60               	movlw	low _charge_time
  6125  0110A2  24F3               	addwf	prodl,w,c
  6126  0110A4  6ED9               	movwf	fsr2l,c
  6127  0110A6  0E00               	movlw	high _charge_time
  6128  0110A8  20F4               	addwfc	prodh,w,c
  6129  0110AA  6EDA               	movwf	fsr2h,c
  6130  0110AC  CFDE F0C2          	movff	postinc2,___llmod@dividend
  6131  0110B0  CFDE F0C3          	movff	postinc2,___llmod@dividend+1
  6132  0110B4  CFDE F0C4          	movff	postinc2,___llmod@dividend+2
  6133  0110B8  CFDE F0C5          	movff	postinc2,___llmod@dividend+3
  6134  0110BC  0E3C               	movlw	60
  6135  0110BE  0100               	movlb	0	; () banked
  6136  0110C0  6FC6               	movwf	___llmod@divisor& (0+255),b
  6137  0110C2  0E00               	movlw	0
  6138  0110C4  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  6139  0110C6  0E00               	movlw	0
  6140  0110C8  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  6141  0110CA  0E00               	movlw	0
  6142  0110CC  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  6143  0110CE  EC4D  F0A7         	call	___llmod	;wreg free
  6144  0110D2  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  6145  0110D6  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  6146  0110DA  0E02               	movlw	2
  6147  0110DC  0100               	movlb	0	; () banked
  6148  0110DE  6FDC               	movwf	my_utoa@digits& (0+255),b
  6149  0110E0  EC53  F0A9         	call	_my_utoa	;wreg free
  6150                           
  6151                           ;tasks.h: 361: tx_sends(str);
  6152  0110E4  0EE1               	movlw	low comm_disp@str
  6153  0110E6  0100               	movlb	0	; () banked
  6154  0110E8  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6155  0110EA  0E00               	movlw	high comm_disp@str
  6156  0110EC  0100               	movlb	0	; () banked
  6157  0110EE  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6158  0110F0  EC04  F0AB         	call	_tx_sends	;wreg free
  6159                           
  6160                           ;tasks.h: 362: tx_sends("s");
  6161  0110F4  0E8E               	movlw	low (STR_42+7)
  6162  0110F6  0100               	movlb	0	; () banked
  6163  0110F8  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6164  0110FA  0EFF               	movlw	high (STR_42+7)
  6165  0110FC  0100               	movlb	0	; () banked
  6166  0110FE  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6167  011100  EC04  F0AB         	call	_tx_sends	;wreg free
  6168                           
  6169                           ;tasks.h: 364: }
  6170                           
  6171                           ;tasks.h: 363: break;
  6172  011104  0012               	return	
  6173  011106                     l9922:
  6174  011106  0100               	movlb	0	; () banked
  6175  011108  51EF               	movf	comm_disp@content& (0+255),w,b
  6176                           
  6177                           ; Switch size 1, requested type "space"
  6178                           ; Number of cases is 3, Range of values is 0 to 2
  6179                           ; switch strategies available:
  6180                           ; Name         Instructions Cycles
  6181                           ; simple_byte           10     6 (average)
  6182                           ;	Chosen strategy is simple_byte
  6183  01110A  0A00               	xorlw	0	; case 0
  6184  01110C  B4D8               	btfsc	status,2,c
  6185  01110E  D609               	goto	l9872
  6186  011110  0A01               	xorlw	1	; case 1
  6187  011112  B4D8               	btfsc	status,2,c
  6188  011114  D69F               	goto	l9886
  6189  011116  0A03               	xorlw	3	; case 2
  6190  011118  A4D8               	btfss	status,2,c
  6191  01111A  0012               	return	
  6192  01111C  D6BE               	goto	l9892
  6193  01111E                     __end_of_comm_disp:
  6194                           	opt stack 0
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           prodh	equ	0xFF4
  6200                           prodl	equ	0xFF3
  6201                           intcon	equ	0xFF2
  6202                           postinc0	equ	0xFEE
  6203                           wreg	equ	0xFE8
  6204                           postinc1	equ	0xFE6
  6205                           postdec1	equ	0xFE5
  6206                           fsr1h	equ	0xFE2
  6207                           fsr1l	equ	0xFE1
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           postdec2	equ	0xFDD
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _tx_sendn *****************
  6216 ;; Defined at:
  6217 ;;		line 272 in file "../My_header\My_header.h"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  value           2   35[BANK0 ] const unsigned int 
  6220 ;;  digits          1   37[BANK0 ] unsigned char 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  i               1   38[BANK0 ] unsigned char 
  6223 ;;  temp            2   39[BANK0 ] unsigned int 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;		None               void
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6233 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6234 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6236 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6237 ;;Total ram usage:        6 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:   14
  6240 ;; This function calls:
  6241 ;;		___lwdiv
  6242 ;;		___lwmod
  6243 ;;		_tx_send
  6244 ;; This function is called by:
  6245 ;;		_comm_disp
  6246 ;;		_rx_loop
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text9
  6251  0154AC                     __ptext9:
  6252                           	opt stack 0
  6253  0154AC                     _tx_sendn:
  6254                           	opt stack 15
  6255                           
  6256                           ;My_header\My_header.h: 273: while (digits--) {
  6257                           
  6258                           ;incstack = 0
  6259  0154AC  D033               	goto	l9424
  6260  0154AE                     l234:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;My_header\My_header.h: 274: uint16_t temp = value;
  6264  0154AE  C0D8  F0DC         	movff	tx_sendn@value,tx_sendn@temp
  6265  0154B2  C0D9  F0DD         	movff	tx_sendn@value+1,tx_sendn@temp+1
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  6269  0154B6  0E00               	movlw	0
  6270  0154B8  0100               	movlb	0	; () banked
  6271  0154BA  6FDB               	movwf	tx_sendn@i& (0+255),b
  6272  0154BC  D011               	goto	l9418
  6273  0154BE                     l9414:
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;My_header\My_header.h: 276: temp /= 10;
  6277  0154BE  C0DC  F0D1         	movff	tx_sendn@temp,___lwdiv@dividend
  6278  0154C2  C0DD  F0D2         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
  6279  0154C6  0E00               	movlw	0
  6280  0154C8  0100               	movlb	0	; () banked
  6281  0154CA  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6282  0154CC  0E0A               	movlw	10
  6283  0154CE  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  6284  0154D0  EC1A  F0AA         	call	___lwdiv	;wreg free
  6285  0154D4  C0D1  F0DC         	movff	?___lwdiv,tx_sendn@temp
  6286  0154D8  C0D2  F0DD         	movff	?___lwdiv+1,tx_sendn@temp+1
  6287  0154DC  0100               	movlb	0	; () banked
  6288  0154DE  2BDB               	incf	tx_sendn@i& (0+255),f,b
  6289  0154E0                     l9418:
  6290                           
  6291                           ; BSR set to: 0
  6292  0154E0  0100               	movlb	0	; () banked
  6293  0154E2  51DA               	movf	tx_sendn@digits& (0+255),w,b
  6294  0154E4  0100               	movlb	0	; () banked
  6295  0154E6  5DDB               	subwf	tx_sendn@i& (0+255),w,b
  6296  0154E8  A0D8               	btfss	status,0,c
  6297  0154EA  D7E9               	goto	l9414
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;My_header\My_header.h: 277: }
  6301                           ;My_header\My_header.h: 278: temp %= 10;
  6302                           
  6303                           ; BSR set to: 0
  6304  0154EC  C0DC  F0B5         	movff	tx_sendn@temp,___lwmod@dividend
  6305  0154F0  C0DD  F0B6         	movff	tx_sendn@temp+1,___lwmod@dividend+1
  6306  0154F4  0E00               	movlw	0
  6307  0154F6  0100               	movlb	0	; () banked
  6308  0154F8  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  6309  0154FA  0E0A               	movlw	10
  6310  0154FC  6FB7               	movwf	___lwmod@divisor& (0+255),b
  6311  0154FE  EC39  F0AB         	call	___lwmod	;wreg free
  6312  015502  C0B5  F0DC         	movff	?___lwmod,tx_sendn@temp
  6313  015506  C0B6  F0DD         	movff	?___lwmod+1,tx_sendn@temp+1
  6314                           
  6315                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  6316  01550A  0100               	movlb	0	; () banked
  6317  01550C  51DC               	movf	tx_sendn@temp& (0+255),w,b
  6318  01550E  0F30               	addlw	48
  6319  015510  ECC5  F0B0         	call	_tx_send
  6320  015514                     l9424:
  6321  015514  0100               	movlb	0	; () banked
  6322  015516  07DA               	decf	tx_sendn@digits& (0+255),f,b
  6323  015518  0100               	movlb	0	; () banked
  6324  01551A  29DA               	incf	tx_sendn@digits& (0+255),w,b
  6325  01551C  B4D8               	btfsc	status,2,c
  6326  01551E  0012               	return	
  6327  015520  D7C6               	goto	l234
  6328  015522                     __end_of_tx_sendn:
  6329                           	opt stack 0
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           postinc0	equ	0xFEE
  6338                           wreg	equ	0xFE8
  6339                           postinc1	equ	0xFE6
  6340                           postdec1	equ	0xFE5
  6341                           fsr1h	equ	0xFE2
  6342                           fsr1l	equ	0xFE1
  6343                           indf2	equ	0xFDF
  6344                           postinc2	equ	0xFDE
  6345                           postdec2	equ	0xFDD
  6346                           fsr2h	equ	0xFDA
  6347                           fsr2l	equ	0xFD9
  6348                           status	equ	0xFD8
  6349                           
  6350 ;; *************** function _comm_at *****************
  6351 ;; Defined at:
  6352 ;;		line 321 in file "tasks.h"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  hand            2   55[BANK0 ] PTR unsigned char 
  6355 ;;		 -> caltime_now(7), 
  6356 ;;  min             1   57[BANK0 ] unsigned char 
  6357 ;;  max             1   58[BANK0 ] unsigned char 
  6358 ;;  value           1   59[BANK0 ] unsigned char 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;		None               void
  6363 ;; Registers used:
  6364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6370 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6374 ;;Total ram usage:        5 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:   16
  6377 ;; This function calls:
  6378 ;;		_RTCC_from_caltime
  6379 ;;		_print_time
  6380 ;;		_tx_sends
  6381 ;; This function is called by:
  6382 ;;		_command_operation
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text10
  6387  015732                     __ptext10:
  6388                           	opt stack 0
  6389  015732                     _comm_at:
  6390                           	opt stack 12
  6391                           
  6392                           ;tasks.h: 322: if (value >= min && value <= max) {
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;incstack = 0
  6396  015732  0100               	movlb	0	; () banked
  6397  015734  51EE               	movf	comm_at@min& (0+255),w,b
  6398  015736  0100               	movlb	0	; () banked
  6399  015738  5DF0               	subwf	comm_at@value& (0+255),w,b
  6400  01573A  A0D8               	btfss	status,0,c
  6401  01573C  D01F               	goto	l9868
  6402                           
  6403                           ; BSR set to: 0
  6404  01573E  0100               	movlb	0	; () banked
  6405  015740  51F0               	movf	comm_at@value& (0+255),w,b
  6406  015742  0100               	movlb	0	; () banked
  6407  015744  5DEF               	subwf	comm_at@max& (0+255),w,b
  6408  015746  A0D8               	btfss	status,0,c
  6409  015748  D019               	goto	l9868
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;tasks.h: 323: *hand = value;
  6413  01574A  C0EC  FFD9         	movff	comm_at@hand,fsr2l
  6414  01574E  C0ED  FFDA         	movff	comm_at@hand+1,fsr2h
  6415  015752  C0F0  FFDF         	movff	comm_at@value,indf2
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;tasks.h: 324: RTCC_from_caltime(&caltime_now, &epoch_now);
  6419  015756  0EAA               	movlw	low _caltime_now
  6420  015758  0100               	movlb	0	; () banked
  6421  01575A  6FE6               	movwf	RTCC_from_caltime@ct& (0+255),b
  6422  01575C  0E00               	movlw	high _caltime_now
  6423  01575E  0100               	movlb	0	; () banked
  6424  015760  6FE7               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  6425  015762  0EB1               	movlw	low _epoch_now
  6426  015764  0100               	movlb	0	; () banked
  6427  015766  6FE8               	movwf	RTCC_from_caltime@ep& (0+255),b
  6428  015768  0E00               	movlw	high _epoch_now
  6429  01576A  0100               	movlb	0	; () banked
  6430  01576C  6FE9               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  6431  01576E  ECCA  F0AE         	call	_RTCC_from_caltime	;wreg free
  6432                           
  6433                           ;tasks.h: 325: time_change_flag = 1;
  6434  015772  0E01               	movlw	1
  6435  015774  6E50               	movwf	_time_change_flag,c
  6436                           
  6437                           ;tasks.h: 326: print_time();
  6438  015776  EC76  F098         	call	_print_time	;wreg free
  6439                           
  6440                           ;tasks.h: 327: } else {
  6441  01577A  0012               	return	
  6442  01577C                     l9868:
  6443                           
  6444                           ;tasks.h: 328: tx_sends("\terror\n");
  6445  01577C  0E90               	movlw	low STR_29
  6446  01577E  0100               	movlb	0	; () banked
  6447  015780  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6448  015782  0EFF               	movlw	high STR_29
  6449  015784  0100               	movlb	0	; () banked
  6450  015786  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6451  015788  EC04  F0AB         	call	_tx_sends	;wreg free
  6452  01578C  0012               	return	
  6453  01578E                     __end_of_comm_at:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           postinc0	equ	0xFEE
  6463                           wreg	equ	0xFE8
  6464                           postinc1	equ	0xFE6
  6465                           postdec1	equ	0xFE5
  6466                           fsr1h	equ	0xFE2
  6467                           fsr1l	equ	0xFE1
  6468                           indf2	equ	0xFDF
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           fsr2h	equ	0xFDA
  6472                           fsr2l	equ	0xFD9
  6473                           status	equ	0xFD8
  6474                           
  6475 ;; *************** function _print_time *****************
  6476 ;; Defined at:
  6477 ;;		line 292 in file "tasks.h"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;		None               void
  6484 ;; Registers used:
  6485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6495 ;;Total ram usage:        0 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:   15
  6498 ;; This function calls:
  6499 ;;		_tx_send
  6500 ;;		_tx_send_dec
  6501 ;;		_tx_sends
  6502 ;; This function is called by:
  6503 ;;		_comm_at
  6504 ;;		_command_operation
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text11
  6509  0130EC                     __ptext11:
  6510                           	opt stack 0
  6511  0130EC                     _print_time:
  6512                           	opt stack 13
  6513                           
  6514                           ;tasks.h: 293: GIE = 0;
  6515                           
  6516                           ;incstack = 0
  6517  0130EC  9EF2               	bcf	intcon,7,c	;volatile
  6518                           
  6519                           ;tasks.h: 294: tx_sends("\t");
  6520  0130EE  0EF3               	movlw	low STR_23
  6521  0130F0  0100               	movlb	0	; () banked
  6522  0130F2  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6523  0130F4  0EFF               	movlw	high STR_23
  6524  0130F6  0100               	movlb	0	; () banked
  6525  0130F8  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6526  0130FA  EC04  F0AB         	call	_tx_sends	;wreg free
  6527                           
  6528                           ;tasks.h: 295: tx_send_dec(20, edit_flag.flag.YY);
  6529  0130FE  0E00               	movlw	0
  6530  013100  BBA4               	btfsc	_edit_flag& (0+255),5,b
  6531  013102  0E01               	movlw	1
  6532  013104  0100               	movlb	0	; () banked
  6533  013106  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6534  013108  0E14               	movlw	20
  6535  01310A  EC23  F0AC         	call	_tx_send_dec
  6536                           
  6537                           ;tasks.h: 296: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  6538  01310E  0E00               	movlw	0
  6539  013110  BBA4               	btfsc	_edit_flag& (0+255),5,b
  6540  013112  0E01               	movlw	1
  6541  013114  0100               	movlb	0	; () banked
  6542  013116  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6543  013118  0100               	movlb	0	; () banked
  6544  01311A  51B0               	movf	(_caltime_now+6)& (0+255),w,b
  6545  01311C  EC23  F0AC         	call	_tx_send_dec
  6546                           
  6547                           ;tasks.h: 297: tx_sends("/");
  6548  013120  0EF7               	movlw	low STR_24
  6549  013122  0100               	movlb	0	; () banked
  6550  013124  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6551  013126  0EFF               	movlw	high STR_24
  6552  013128  0100               	movlb	0	; () banked
  6553  01312A  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6554  01312C  EC04  F0AB         	call	_tx_sends	;wreg free
  6555                           
  6556                           ;tasks.h: 298: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  6557  013130  0E00               	movlw	0
  6558  013132  B9A4               	btfsc	_edit_flag& (0+255),4,b
  6559  013134  0E01               	movlw	1
  6560  013136  0100               	movlb	0	; () banked
  6561  013138  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6562  01313A  0100               	movlb	0	; () banked
  6563  01313C  51AF               	movf	(_caltime_now+5)& (0+255),w,b
  6564  01313E  EC23  F0AC         	call	_tx_send_dec
  6565                           
  6566                           ;tasks.h: 299: tx_sends("/");
  6567  013142  0EF7               	movlw	low STR_24
  6568  013144  0100               	movlb	0	; () banked
  6569  013146  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6570  013148  0EFF               	movlw	high STR_24
  6571  01314A  0100               	movlb	0	; () banked
  6572  01314C  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6573  01314E  EC04  F0AB         	call	_tx_sends	;wreg free
  6574                           
  6575                           ;tasks.h: 300: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  6576  013152  0E00               	movlw	0
  6577  013154  B7A4               	btfsc	_edit_flag& (0+255),3,b
  6578  013156  0E01               	movlw	1
  6579  013158  0100               	movlb	0	; () banked
  6580  01315A  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6581  01315C  0100               	movlb	0	; () banked
  6582  01315E  51AE               	movf	(_caltime_now+4)& (0+255),w,b
  6583  013160  EC23  F0AC         	call	_tx_send_dec
  6584                           
  6585                           ;tasks.h: 301: tx_sends(" (");
  6586  013164  0EEA               	movlw	low STR_26
  6587  013166  0100               	movlb	0	; () banked
  6588  013168  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6589  01316A  0EFF               	movlw	high STR_26
  6590  01316C  0100               	movlb	0	; () banked
  6591  01316E  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6592  013170  EC04  F0AB         	call	_tx_sends	;wreg free
  6593                           
  6594                           ;tasks.h: 302: tx_sends(weekday_3char[caltime_now.EE]);
  6595  013174  0100               	movlb	0	; () banked
  6596  013176  51AD               	movf	(_caltime_now+3)& (0+255),w,b
  6597  013178  0D04               	mullw	4
  6598  01317A  0E02               	movlw	low _weekday_3char
  6599  01317C  24F3               	addwf	prodl,w,c
  6600  01317E  0100               	movlb	0	; () banked
  6601  013180  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6602  013182  0EFC               	movlw	high _weekday_3char
  6603  013184  20F4               	addwfc	prodh,w,c
  6604  013186  0100               	movlb	0	; () banked
  6605  013188  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6606  01318A  EC04  F0AB         	call	_tx_sends	;wreg free
  6607                           
  6608                           ;tasks.h: 303: tx_sends(") ");
  6609  01318E  0EDE               	movlw	low STR_27
  6610  013190  0100               	movlb	0	; () banked
  6611  013192  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6612  013194  0EFF               	movlw	high STR_27
  6613  013196  0100               	movlb	0	; () banked
  6614  013198  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6615  01319A  EC04  F0AB         	call	_tx_sends	;wreg free
  6616                           
  6617                           ;tasks.h: 304: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  6618  01319E  0E00               	movlw	0
  6619  0131A0  B5A4               	btfsc	_edit_flag& (0+255),2,b
  6620  0131A2  0E01               	movlw	1
  6621  0131A4  0100               	movlb	0	; () banked
  6622  0131A6  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6623  0131A8  0100               	movlb	0	; () banked
  6624  0131AA  51AC               	movf	(_caltime_now+2)& (0+255),w,b
  6625  0131AC  EC23  F0AC         	call	_tx_send_dec
  6626                           
  6627                           ;tasks.h: 305: if (colon)tx_send(':');
  6628  0131B0  0100               	movlb	0	; () banked
  6629  0131B2  51A2               	movf	_colon& (0+255),w,b
  6630  0131B4  B4D8               	btfsc	status,2,c
  6631  0131B6  D004               	goto	l9512
  6632                           
  6633                           ; BSR set to: 0
  6634  0131B8  0E3A               	movlw	58
  6635  0131BA  ECC5  F0B0         	call	_tx_send
  6636  0131BE  D003               	goto	l9514
  6637  0131C0                     l9512:
  6638                           
  6639                           ;tasks.h: 306: else tx_send(' ');
  6640  0131C0  0E20               	movlw	32
  6641  0131C2  ECC5  F0B0         	call	_tx_send
  6642  0131C6                     l9514:
  6643                           
  6644                           ;tasks.h: 307: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  6645  0131C6  0E00               	movlw	0
  6646  0131C8  B3A4               	btfsc	_edit_flag& (0+255),1,b
  6647  0131CA  0E01               	movlw	1
  6648  0131CC  0100               	movlb	0	; () banked
  6649  0131CE  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6650  0131D0  0100               	movlb	0	; () banked
  6651  0131D2  51AB               	movf	(_caltime_now+1)& (0+255),w,b
  6652  0131D4  EC23  F0AC         	call	_tx_send_dec
  6653                           
  6654                           ;tasks.h: 308: tx_sends("-");
  6655  0131D8  0EF5               	movlw	low STR_28
  6656  0131DA  0100               	movlb	0	; () banked
  6657  0131DC  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6658  0131DE  0EFF               	movlw	high STR_28
  6659  0131E0  0100               	movlb	0	; () banked
  6660  0131E2  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6661  0131E4  EC04  F0AB         	call	_tx_sends	;wreg free
  6662                           
  6663                           ;tasks.h: 309: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  6664  0131E8  0E00               	movlw	0
  6665  0131EA  B1A4               	btfsc	_edit_flag& (0+255),0,b
  6666  0131EC  0E01               	movlw	1
  6667  0131EE  0100               	movlb	0	; () banked
  6668  0131F0  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6669  0131F2  0100               	movlb	0	; () banked
  6670  0131F4  51AA               	movf	_caltime_now& (0+255),w,b
  6671  0131F6  EC23  F0AC         	call	_tx_send_dec
  6672                           
  6673                           ;tasks.h: 310: tx_send('\n');
  6674  0131FA  0E0A               	movlw	10
  6675  0131FC  ECC5  F0B0         	call	_tx_send
  6676                           
  6677                           ;tasks.h: 311: GIE = 1;
  6678  013200  8EF2               	bsf	intcon,7,c	;volatile
  6679  013202  0012               	return		;funcret
  6680  013204                     __end_of_print_time:
  6681                           	opt stack 0
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           intcon	equ	0xFF2
  6689                           postinc0	equ	0xFEE
  6690                           wreg	equ	0xFE8
  6691                           postinc1	equ	0xFE6
  6692                           postdec1	equ	0xFE5
  6693                           fsr1h	equ	0xFE2
  6694                           fsr1l	equ	0xFE1
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _tx_send_dec *****************
  6703 ;; Defined at:
  6704 ;;		line 249 in file "tasks.h"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  dec             1    wreg     unsigned char 
  6707 ;;  edit            1   43[BANK0 ] unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  dec             1   54[BANK0 ] unsigned char 
  6710 ;;  str            10   44[BANK0 ] unsigned char [10]
  6711 ;; Return value:  Size  Location     Type
  6712 ;;		None               void
  6713 ;; Registers used:
  6714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6720 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;Total ram usage:       12 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:   14
  6727 ;; This function calls:
  6728 ;;		_my_utoa
  6729 ;;		_tx_sends
  6730 ;; This function is called by:
  6731 ;;		_print_time
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text12
  6736  015846                     __ptext12:
  6737                           	opt stack 0
  6738  015846                     _tx_send_dec:
  6739                           	opt stack 13
  6740                           
  6741                           ;incstack = 0
  6742                           ;tx_send_dec@dec stored from wreg
  6743  015846  0100               	movlb	0	; () banked
  6744  015848  6FEB               	movwf	tx_send_dec@dec& (0+255),b
  6745                           
  6746                           ;tasks.h: 250: uint8_t str[10];
  6747                           ;tasks.h: 251: my_utoa(&str, dec, 2);
  6748  01584A  0EE1               	movlw	low tx_send_dec@str
  6749  01584C  0100               	movlb	0	; () banked
  6750  01584E  6FD8               	movwf	my_utoa@str& (0+255),b
  6751  015850  0E00               	movlw	high tx_send_dec@str
  6752  015852  0100               	movlb	0	; () banked
  6753  015854  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6754  015856  C0EB  F0DA         	movff	tx_send_dec@dec,my_utoa@value
  6755  01585A  0100               	movlb	0	; () banked
  6756  01585C  6BDB               	clrf	(my_utoa@value+1)& (0+255),b
  6757  01585E  0E02               	movlw	2
  6758  015860  0100               	movlb	0	; () banked
  6759  015862  6FDC               	movwf	my_utoa@digits& (0+255),b
  6760  015864  EC53  F0A9         	call	_my_utoa	;wreg free
  6761                           
  6762                           ;tasks.h: 252: if (edit && halfsec)tx_sends("  ");
  6763  015868  0100               	movlb	0	; () banked
  6764  01586A  51E0               	movf	tx_send_dec@edit& (0+255),w,b
  6765  01586C  0100               	movlb	0	; () banked
  6766  01586E  B4D8               	btfsc	status,2,c
  6767  015870  D00D               	goto	l9408
  6768                           
  6769                           ; BSR set to: 0
  6770  015872  0100               	movlb	0	; () banked
  6771  015874  51A5               	movf	_halfsec& (0+255),w,b
  6772  015876  B4D8               	btfsc	status,2,c
  6773  015878  D009               	goto	l9408
  6774                           
  6775                           ; BSR set to: 0
  6776  01587A  0EDB               	movlw	low STR_1
  6777  01587C  0100               	movlb	0	; () banked
  6778  01587E  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6779  015880  0EFF               	movlw	high STR_1
  6780  015882  0100               	movlb	0	; () banked
  6781  015884  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6782  015886  EC04  F0AB         	call	_tx_sends	;wreg free
  6783  01588A  0012               	return	
  6784  01588C                     l9408:
  6785                           
  6786                           ;tasks.h: 253: else tx_sends(str);
  6787  01588C  0EE1               	movlw	low tx_send_dec@str
  6788  01588E  0100               	movlb	0	; () banked
  6789  015890  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6790  015892  0E00               	movlw	high tx_send_dec@str
  6791  015894  0100               	movlb	0	; () banked
  6792  015896  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6793  015898  EC04  F0AB         	call	_tx_sends	;wreg free
  6794  01589C  0012               	return	
  6795  01589E                     __end_of_tx_send_dec:
  6796                           	opt stack 0
  6797                           tblptru	equ	0xFF8
  6798                           tblptrh	equ	0xFF7
  6799                           tblptrl	equ	0xFF6
  6800                           tablat	equ	0xFF5
  6801                           prodh	equ	0xFF4
  6802                           prodl	equ	0xFF3
  6803                           intcon	equ	0xFF2
  6804                           postinc0	equ	0xFEE
  6805                           wreg	equ	0xFE8
  6806                           postinc1	equ	0xFE6
  6807                           postdec1	equ	0xFE5
  6808                           fsr1h	equ	0xFE2
  6809                           fsr1l	equ	0xFE1
  6810                           indf2	equ	0xFDF
  6811                           postinc2	equ	0xFDE
  6812                           postdec2	equ	0xFDD
  6813                           fsr2h	equ	0xFDA
  6814                           fsr2l	equ	0xFD9
  6815                           status	equ	0xFD8
  6816                           
  6817 ;; *************** function _tx_sends *****************
  6818 ;; Defined at:
  6819 ;;		line 227 in file "../My_header\My_header.h"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  asciicode       2   15[BANK0 ] PTR const unsigned char 
  6822 ;;		 -> STR_92(4), STR_91(4), STR_90(3), STR_61(18), 
  6823 ;;		 -> STR_58(36), STR_57(24), STR_41(472), STR_38(2), 
  6824 ;;		 -> STR_37(3), STR_36(3), STR_35(3), comm_disp@str(10), 
  6825 ;;		 -> STR_34(2), STR_33(5), STR_32(2), STR_31(3), 
  6826 ;;		 -> STR_30(2), STR_29(8), STR_28(2), STR_27(3), 
  6827 ;;		 -> STR_26(3), STR_25(2), STR_24(2), STR_23(2), 
  6828 ;;		 -> STR_22(3), tx_send_dec@str(10), weekday_3char(28), 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;		None               void
  6833 ;; Registers used:
  6834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:   13
  6847 ;; This function calls:
  6848 ;;		_ringbuf_put
  6849 ;; This function is called by:
  6850 ;;		_tx_send_dec
  6851 ;;		_print_time
  6852 ;;		_comm_at
  6853 ;;		_comm_disp
  6854 ;;		_command_operation
  6855 ;;		_rx_loop
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text13
  6860  015608                     __ptext13:
  6861                           	opt stack 0
  6862  015608                     _tx_sends:
  6863                           	opt stack 16
  6864                           
  6865                           ;My_header\My_header.h: 228: while (*asciicode) {
  6866                           
  6867                           ;incstack = 0
  6868  015608  D01E               	goto	l9184
  6869  01560A                     l9180:
  6870                           
  6871                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  6872  01560A  0EE9               	movlw	low _tx_buf
  6873  01560C  0100               	movlb	0	; () banked
  6874  01560E  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  6875  015610  0E01               	movlw	high _tx_buf
  6876  015612  0100               	movlb	0	; () banked
  6877  015614  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6878  015616  C0C4  FFF6         	movff	tx_sends@asciicode,tblptrl
  6879  01561A  C0C5  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  6880  01561E  0E00               	movlw	low (__mediumconst shr (0+16))
  6881  015620  6EF8               	movwf	tblptru,c
  6882  015622  0E0E               	movlw	(high __ramtop+-1)
  6883  015624  64F7               	cpfsgt	tblptrh,c
  6884  015626  D003               	bra	u9877
  6885  015628  0008               	tblrd		*
  6886  01562A  50F5               	movf	tablat,w,c
  6887  01562C  D005               	bra	u9870
  6888  01562E                     u9877:
  6889  01562E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6890  015632  CFF7 FFE2          	movff	tblptrh,fsr1h
  6891  015636  50E7               	movf	indf1,w,c
  6892  015638                     u9870:
  6893  015638  0100               	movlb	0	; () banked
  6894  01563A  6FBF               	movwf	ringbuf_put@asciicode& (0+255),b
  6895  01563C  EC64  F0A0         	call	_ringbuf_put	;wreg free
  6896  015640  0100               	movlb	0	; () banked
  6897  015642  4BC4               	infsnz	tx_sends@asciicode& (0+255),f,b
  6898  015644  2BC5               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  6899  015646                     l9184:
  6900  015646  C0C4  FFF6         	movff	tx_sends@asciicode,tblptrl
  6901  01564A  C0C5  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  6902  01564E  0E00               	movlw	low (__mediumconst shr (0+16))
  6903  015650  6EF8               	movwf	tblptru,c
  6904  015652  0E0E               	movlw	(high __ramtop+-1)
  6905  015654  64F7               	cpfsgt	tblptrh,c
  6906  015656  D003               	bra	u9887
  6907  015658  0008               	tblrd		*
  6908  01565A  50F5               	movf	tablat,w,c
  6909  01565C  D005               	bra	u9880
  6910  01565E                     u9887:
  6911  01565E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6912  015662  CFF7 FFE2          	movff	tblptrh,fsr1h
  6913  015666  50E7               	movf	indf1,w,c
  6914  015668                     u9880:
  6915  015668  0900               	iorlw	0
  6916  01566A  A4D8               	btfss	status,2,c
  6917  01566C  D7CE               	goto	l9180
  6918                           
  6919                           ;My_header\My_header.h: 230: }
  6920                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  6921  01566E  889D               	bsf	3997,4,c	;volatile
  6922  015670  0012               	return		;funcret
  6923  015672                     __end_of_tx_sends:
  6924                           	opt stack 0
  6925                           tblptru	equ	0xFF8
  6926                           tblptrh	equ	0xFF7
  6927                           tblptrl	equ	0xFF6
  6928                           tablat	equ	0xFF5
  6929                           prodh	equ	0xFF4
  6930                           prodl	equ	0xFF3
  6931                           intcon	equ	0xFF2
  6932                           postinc0	equ	0xFEE
  6933                           wreg	equ	0xFE8
  6934                           indf1	equ	0xFE7
  6935                           postinc1	equ	0xFE6
  6936                           postdec1	equ	0xFE5
  6937                           fsr1h	equ	0xFE2
  6938                           fsr1l	equ	0xFE1
  6939                           indf2	equ	0xFDF
  6940                           postinc2	equ	0xFDE
  6941                           postdec2	equ	0xFDD
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _tx_send *****************
  6947 ;; Defined at:
  6948 ;;		line 222 in file "../My_header\My_header.h"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  asciicode       1    wreg     const unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  asciicode       1   15[BANK0 ] const unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:   13
  6969 ;; This function calls:
  6970 ;;		_ringbuf_put
  6971 ;; This function is called by:
  6972 ;;		_tx_sendn
  6973 ;;		_print_time
  6974 ;;		_comm_disp
  6975 ;;		_rx_loop
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text14
  6980  01618A                     __ptext14:
  6981                           	opt stack 0
  6982  01618A                     _tx_send:
  6983                           	opt stack 15
  6984                           
  6985                           ;incstack = 0
  6986                           ;tx_send@asciicode stored from wreg
  6987  01618A  0100               	movlb	0	; () banked
  6988  01618C  6FC4               	movwf	tx_send@asciicode& (0+255),b
  6989                           
  6990                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  6991  01618E  0EE9               	movlw	low _tx_buf
  6992  016190  0100               	movlb	0	; () banked
  6993  016192  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  6994  016194  0E01               	movlw	high _tx_buf
  6995  016196  0100               	movlb	0	; () banked
  6996  016198  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6997  01619A  C0C4  F0BF         	movff	tx_send@asciicode,ringbuf_put@asciicode
  6998  01619E  EC64  F0A0         	call	_ringbuf_put	;wreg free
  6999                           
  7000                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  7001  0161A2  889D               	bsf	3997,4,c	;volatile
  7002  0161A4  0012               	return		;funcret
  7003  0161A6                     __end_of_tx_send:
  7004                           	opt stack 0
  7005                           tblptru	equ	0xFF8
  7006                           tblptrh	equ	0xFF7
  7007                           tblptrl	equ	0xFF6
  7008                           tablat	equ	0xFF5
  7009                           prodh	equ	0xFF4
  7010                           prodl	equ	0xFF3
  7011                           intcon	equ	0xFF2
  7012                           postinc0	equ	0xFEE
  7013                           wreg	equ	0xFE8
  7014                           indf1	equ	0xFE7
  7015                           postinc1	equ	0xFE6
  7016                           postdec1	equ	0xFE5
  7017                           fsr1h	equ	0xFE2
  7018                           fsr1l	equ	0xFE1
  7019                           indf2	equ	0xFDF
  7020                           postinc2	equ	0xFDE
  7021                           postdec2	equ	0xFDD
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026 ;; *************** function _RTCC_from_caltime *****************
  7027 ;; Defined at:
  7028 ;;		line 236 in file "../My_header\My_RTCC.h"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  ct              2   49[BANK0 ] PTR struct .
  7031 ;;		 -> caltime_now(7), 
  7032 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  7033 ;;		 -> epoch_now(4), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;		None               void
  7038 ;; Registers used:
  7039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;Total ram usage:        4 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:   14
  7052 ;; This function calls:
  7053 ;;		_caltime_to_RTCC
  7054 ;;		_caltime_to_epoch
  7055 ;;		_epoch_to_caltime
  7056 ;; This function is called by:
  7057 ;;		_comm_at
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text15
  7062  015D94                     __ptext15:
  7063                           	opt stack 0
  7064  015D94                     _RTCC_from_caltime:
  7065                           	opt stack 13
  7066                           
  7067                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  7068                           
  7069                           ;incstack = 0
  7070  015D94  C0E6  F0CE         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  7071  015D98  C0E7  F0CF         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  7072  015D9C  C0E8  F0D0         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  7073  015DA0  C0E9  F0D1         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  7074  015DA4  EC6D  F08D         	call	_caltime_to_epoch	;wreg free
  7075                           
  7076                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  7077  015DA8  C0E6  F0D6         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  7078  015DAC  C0E7  F0D7         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  7079  015DB0  C0E8  F0D8         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  7080  015DB4  C0E9  F0D9         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  7081  015DB8  EC57  F092         	call	_epoch_to_caltime	;wreg free
  7082                           
  7083                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  7084  015DBC  C0E6  F0BE         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  7085  015DC0  C0E7  F0BF         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  7086  015DC4  ECCE  F0A0         	call	_caltime_to_RTCC	;wreg free
  7087  015DC8  0012               	return		;funcret
  7088  015DCA                     __end_of_RTCC_from_caltime:
  7089                           	opt stack 0
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           postinc0	equ	0xFEE
  7098                           wreg	equ	0xFE8
  7099                           indf1	equ	0xFE7
  7100                           postinc1	equ	0xFE6
  7101                           postdec1	equ	0xFE5
  7102                           fsr1h	equ	0xFE2
  7103                           fsr1l	equ	0xFE1
  7104                           indf2	equ	0xFDF
  7105                           postinc2	equ	0xFDE
  7106                           postdec2	equ	0xFDD
  7107                           fsr2h	equ	0xFDA
  7108                           fsr2l	equ	0xFD9
  7109                           status	equ	0xFD8
  7110                           
  7111 ;; *************** function _normal_mode_loop *****************
  7112 ;; Defined at:
  7113 ;;		line 617 in file "tasks.h"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;		None
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;		None               void
  7120 ;; Registers used:
  7121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7131 ;;Total ram usage:        0 bytes
  7132 ;; Hardware stack levels used:    1
  7133 ;; Hardware stack levels required when called:   17
  7134 ;; This function calls:
  7135 ;;		_Auto_cut
  7136 ;;		_RTCC_adjust_time_button
  7137 ;;		_display_LCD
  7138 ;;		_port_loop
  7139 ;; This function is called by:
  7140 ;;		_main
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text16
  7145  01426C                     __ptext16:
  7146                           	opt stack 0
  7147  01426C                     _normal_mode_loop:
  7148                           	opt stack 13
  7149                           
  7150                           ;tasks.h: 618: INTCONbits.GIE = 0;
  7151                           
  7152                           ;incstack = 0
  7153  01426C  9EF2               	bcf	intcon,7,c	;volatile
  7154                           
  7155                           ;tasks.h: 619: if (!edit_flag.flags) {
  7156  01426E  0100               	movlb	0	; () banked
  7157  014270  51A4               	movf	_edit_flag& (0+255),w,b
  7158  014272  A4D8               	btfss	status,2,c
  7159  014274  D02B               	goto	l10906
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;tasks.h: 620: port_loop();
  7163  014276  EC8F  F088         	call	_port_loop	;wreg free
  7164                           
  7165                           ;tasks.h: 621: if (ctmu_m.flag.press) {
  7166  01427A  0101               	movlb	1	; () banked
  7167  01427C  A1FB               	btfss	(_ctmu_m+2)& (0+255),0,b
  7168  01427E  D026               	goto	l10906
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;tasks.h: 622: ctmu_m.flags = 0;
  7172  014280  0E00               	movlw	0
  7173  014282  0101               	movlb	1	; () banked
  7174  014284  6FFC               	movwf	(_ctmu_m+3)& (0+255),b
  7175  014286  0E00               	movlw	0
  7176  014288  6FFB               	movwf	(_ctmu_m+2)& (0+255),b
  7177                           
  7178                           ;tasks.h: 623: display_flag = 1;
  7179  01428A  0E01               	movlw	1
  7180  01428C  6E4C               	movwf	_display_flag,c
  7181                           
  7182                           ;tasks.h: 624: switch (print_content) {
  7183  01428E  D00C               	goto	l10904
  7184  014290                     l10890:
  7185                           
  7186                           ;tasks.h: 626: print_content = INTEGRATING;
  7187  014290  0E04               	movlw	4
  7188  014292  D005               	goto	L4
  7189  014294                     l10892:
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;tasks.h: 629: print_content = CHARGE_TIME;
  7193  014294  0E05               	movlw	5
  7194  014296  D003               	goto	L4
  7195  014298                     l10894:
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;tasks.h: 632: print_content = TIME;
  7199  014298  0E01               	movlw	1
  7200  01429A  D001               	goto	L4
  7201  01429C                     l10896:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;tasks.h: 635: print_content = LOGO;
  7205  01429C  0E00               	movlw	0
  7206  01429E                     L4:
  7207  01429E  0100               	movlb	0	; () banked
  7208  0142A0  6FA6               	movwf	_print_content& (0+255),b
  7209                           
  7210                           ;tasks.h: 639: break;
  7211  0142A2  D014               	goto	l10906
  7212  0142A4                     l10900:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;tasks.h: 641: print_content = CURRENT;
  7216  0142A4  0E03               	movlw	3
  7217  0142A6  D7FB               	goto	L4
  7218  0142A8                     l10904:
  7219  0142A8  0100               	movlb	0	; () banked
  7220  0142AA  51A6               	movf	_print_content& (0+255),w,b
  7221                           
  7222                           ; Switch size 1, requested type "space"
  7223                           ; Number of cases is 5, Range of values is 0 to 5
  7224                           ; switch strategies available:
  7225                           ; Name         Instructions Cycles
  7226                           ; simple_byte           16     9 (average)
  7227                           ;	Chosen strategy is simple_byte
  7228  0142AC  0A00               	xorlw	0	; case 0
  7229  0142AE  B4D8               	btfsc	status,2,c
  7230  0142B0  D7F9               	goto	l10900
  7231  0142B2  0A01               	xorlw	1	; case 1
  7232  0142B4  B4D8               	btfsc	status,2,c
  7233  0142B6  D7F2               	goto	l10896
  7234  0142B8  0A02               	xorlw	2	; case 3
  7235  0142BA  B4D8               	btfsc	status,2,c
  7236  0142BC  D7E9               	goto	l10890
  7237  0142BE  0A07               	xorlw	7	; case 4
  7238  0142C0  B4D8               	btfsc	status,2,c
  7239  0142C2  D7E8               	goto	l10892
  7240  0142C4  0A01               	xorlw	1	; case 5
  7241  0142C6  B4D8               	btfsc	status,2,c
  7242  0142C8  D7E7               	goto	l10894
  7243  0142CA  D7EC               	goto	l10900
  7244  0142CC                     l10906:
  7245                           
  7246                           ;tasks.h: 644: }
  7247                           ;tasks.h: 645: }
  7248                           ;tasks.h: 646: if (print_content == TIME)RTCC_adjust_time_button(&ctmu_m, &ctmu[0], &ctm
      +                          u[1]);
  7249  0142CC  0100               	movlb	0	; () banked
  7250  0142CE  05A6               	decf	_print_content& (0+255),w,b
  7251  0142D0  A4D8               	btfss	status,2,c
  7252  0142D2  D014               	goto	l10910
  7253                           
  7254                           ; BSR set to: 0
  7255  0142D4  0EF9               	movlw	low _ctmu_m
  7256  0142D6  0100               	movlb	0	; () banked
  7257  0142D8  6FF4               	movwf	RTCC_adjust_time_button@mode& (0+255),b
  7258  0142DA  0E01               	movlw	high _ctmu_m
  7259  0142DC  0100               	movlb	0	; () banked
  7260  0142DE  6FF5               	movwf	(RTCC_adjust_time_button@mode+1)& (0+255),b
  7261  0142E0  0EDD               	movlw	low _ctmu
  7262  0142E2  0100               	movlb	0	; () banked
  7263  0142E4  6FF6               	movwf	RTCC_adjust_time_button@cnt_inc& (0+255),b
  7264  0142E6  0E01               	movlw	high _ctmu
  7265  0142E8  0100               	movlb	0	; () banked
  7266  0142EA  6FF7               	movwf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),b
  7267  0142EC  0EE1               	movlw	low (_ctmu+4)
  7268  0142EE  0100               	movlb	0	; () banked
  7269  0142F0  6FF8               	movwf	RTCC_adjust_time_button@cnt_dec& (0+255),b
  7270  0142F2  0E01               	movlw	high (_ctmu+4)
  7271  0142F4  0100               	movlb	0	; () banked
  7272  0142F6  6FF9               	movwf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),b
  7273  0142F8  EC57  F097         	call	_RTCC_adjust_time_button	;wreg free
  7274  0142FC                     l10910:
  7275                           
  7276                           ;tasks.h: 647: if (cut_time_flag) {
  7277  0142FC  504B               	movf	_cut_time_flag,w,c
  7278  0142FE  B4D8               	btfsc	status,2,c
  7279  014300  D004               	goto	l10916
  7280                           
  7281                           ;tasks.h: 648: cut_time_flag = 0;
  7282  014302  0E00               	movlw	0
  7283  014304  6E4B               	movwf	_cut_time_flag,c
  7284                           
  7285                           ;tasks.h: 649: Auto_cut();
  7286  014306  EC16  F09A         	call	_Auto_cut	;wreg free
  7287  01430A                     l10916:
  7288                           
  7289                           ;tasks.h: 650: }
  7290                           ;tasks.h: 651: if (time_change_flag) {
  7291  01430A  5050               	movf	_time_change_flag,w,c
  7292  01430C  B4D8               	btfsc	status,2,c
  7293  01430E  D004               	goto	l867
  7294                           
  7295                           ;tasks.h: 652: time_change_flag = 0;
  7296  014310  0E00               	movlw	0
  7297  014312  6E50               	movwf	_time_change_flag,c
  7298                           
  7299                           ;tasks.h: 653: display_flag = 1;
  7300  014314  0E01               	movlw	1
  7301  014316  6E4C               	movwf	_display_flag,c
  7302  014318                     l867:
  7303                           
  7304                           ;tasks.h: 654: }
  7305                           ;tasks.h: 655: if (delay_display.flag) {
  7306  014318  5051               	movf	_delay_display,w,c
  7307  01431A  B4D8               	btfsc	status,2,c
  7308  01431C  D006               	goto	l868
  7309                           
  7310                           ;tasks.h: 656: delay_display.flag = 0;
  7311  01431E  0E00               	movlw	0
  7312  014320  6E51               	movwf	_delay_display,c
  7313                           
  7314                           ;tasks.h: 657: print_content = next_print_content;
  7315  014322  C04E  F0A6         	movff	_next_print_content,_print_content
  7316                           
  7317                           ;tasks.h: 658: display_flag = 1;
  7318  014326  0E01               	movlw	1
  7319  014328  6E4C               	movwf	_display_flag,c
  7320  01432A                     l868:
  7321                           
  7322                           ;tasks.h: 659: }
  7323                           ;tasks.h: 660: if (display_flag) {
  7324  01432A  504C               	movf	_display_flag,w,c
  7325  01432C  B4D8               	btfsc	status,2,c
  7326  01432E  0012               	return	
  7327                           
  7328                           ;tasks.h: 661: display_flag = 0;
  7329  014330  0E00               	movlw	0
  7330  014332  6E4C               	movwf	_display_flag,c
  7331                           
  7332                           ;tasks.h: 662: display_LCD();
  7333  014334  ECC7  F083         	call	_display_LCD	;wreg free
  7334  014338  0012               	return	
  7335  01433A                     __end_of_normal_mode_loop:
  7336                           	opt stack 0
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           postinc0	equ	0xFEE
  7345                           wreg	equ	0xFE8
  7346                           indf1	equ	0xFE7
  7347                           postinc1	equ	0xFE6
  7348                           postdec1	equ	0xFE5
  7349                           fsr1h	equ	0xFE2
  7350                           fsr1l	equ	0xFE1
  7351                           indf2	equ	0xFDF
  7352                           postinc2	equ	0xFDE
  7353                           postdec2	equ	0xFDD
  7354                           fsr2h	equ	0xFDA
  7355                           fsr2l	equ	0xFD9
  7356                           status	equ	0xFD8
  7357                           
  7358 ;; *************** function _port_loop *****************
  7359 ;; Defined at:
  7360 ;;		line 519 in file "tasks.h"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  i               1    4[BANK0 ] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;		None               void
  7367 ;; Registers used:
  7368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;Total ram usage:        1 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:   12
  7381 ;; This function calls:
  7382 ;;		_LED_OUT
  7383 ;;		_OUT
  7384 ;;		_delay_set
  7385 ;; This function is called by:
  7386 ;;		_normal_mode_loop
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text17
  7391  01111E                     __ptext17:
  7392                           	opt stack 0
  7393  01111E                     _port_loop:
  7394                           	opt stack 17
  7395                           
  7396                           ;tasks.h: 520: uint8_t i;
  7397                           ;tasks.h: 521: for (i = 0; i < 3; i++) {
  7398                           
  7399                           ;incstack = 0
  7400  01111E  0E00               	movlw	0
  7401  011120  0100               	movlb	0	; () banked
  7402  011122  6FB9               	movwf	port_loop@i& (0+255),b
  7403  011124                     l10636:
  7404                           
  7405                           ; BSR set to: 0
  7406  011124  0E02               	movlw	2
  7407  011126  0100               	movlb	0	; () banked
  7408  011128  65B9               	cpfsgt	port_loop@i& (0+255),b
  7409  01112A  D001               	goto	l10640
  7410  01112C  0012               	return	
  7411  01112E                     l10640:
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;tasks.h: 522: if (ctmu[i].flag.pressing) {
  7415  01112E  0100               	movlb	0	; () banked
  7416  011130  51B9               	movf	port_loop@i& (0+255),w,b
  7417  011132  0D04               	mullw	4
  7418  011134  0E03               	movlw	3
  7419  011136  26F3               	addwf	prodl,f,c
  7420  011138  0E00               	movlw	0
  7421  01113A  22F4               	addwfc	prodh,f,c
  7422  01113C  0EDD               	movlw	low _ctmu
  7423  01113E  24F3               	addwf	prodl,w,c
  7424  011140  6ED9               	movwf	fsr2l,c
  7425  011142  0E01               	movlw	high _ctmu
  7426  011144  20F4               	addwfc	prodh,w,c
  7427  011146  6EDA               	movwf	fsr2h,c
  7428  011148  0101               	movlb	1	; () banked
  7429  01114A  A0DF               	btfss	indf2,0,c
  7430  01114C  D007               	goto	l10644
  7431                           
  7432                           ; BSR set to: 1
  7433                           ;tasks.h: 524: LED_OUT(i, 1);
  7434  01114E  0E01               	movlw	1
  7435  011150  0100               	movlb	0	; () banked
  7436  011152  6FB5               	movwf	LED_OUT@value& (0+255),b
  7437  011154  0100               	movlb	0	; () banked
  7438  011156  51B9               	movf	port_loop@i& (0+255),w,b
  7439  011158  EC49  F0AD         	call	_LED_OUT
  7440  01115C                     l10644:
  7441                           
  7442                           ;tasks.h: 525: }
  7443                           ;tasks.h: 526: if (ctmu[i].flag.press) {
  7444  01115C  0100               	movlb	0	; () banked
  7445  01115E  51B9               	movf	port_loop@i& (0+255),w,b
  7446  011160  0D04               	mullw	4
  7447  011162  0E02               	movlw	2
  7448  011164  26F3               	addwf	prodl,f,c
  7449  011166  0E00               	movlw	0
  7450  011168  22F4               	addwfc	prodh,f,c
  7451  01116A  0EDD               	movlw	low _ctmu
  7452  01116C  24F3               	addwf	prodl,w,c
  7453  01116E  6ED9               	movwf	fsr2l,c
  7454  011170  0E01               	movlw	high _ctmu
  7455  011172  20F4               	addwfc	prodh,w,c
  7456  011174  6EDA               	movwf	fsr2h,c
  7457  011176  0101               	movlb	1	; () banked
  7458  011178  A0DF               	btfss	indf2,0,c
  7459  01117A  D062               	goto	l10678
  7460                           
  7461                           ; BSR set to: 1
  7462                           ;tasks.h: 527: ctmu[i].flags = 0;
  7463  01117C  0100               	movlb	0	; () banked
  7464  01117E  51B9               	movf	port_loop@i& (0+255),w,b
  7465  011180  0D04               	mullw	4
  7466  011182  0E02               	movlw	2
  7467  011184  26F3               	addwf	prodl,f,c
  7468  011186  0E00               	movlw	0
  7469  011188  22F4               	addwfc	prodh,f,c
  7470  01118A  0EDD               	movlw	low _ctmu
  7471  01118C  24F3               	addwf	prodl,w,c
  7472  01118E  6ED9               	movwf	fsr2l,c
  7473  011190  0E01               	movlw	high _ctmu
  7474  011192  20F4               	addwfc	prodh,w,c
  7475  011194  6EDA               	movwf	fsr2h,c
  7476  011196  0E00               	movlw	0
  7477  011198  6EDE               	movwf	postinc2,c
  7478  01119A  0E00               	movlw	0
  7479  01119C  6EDD               	movwf	postdec2,c
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;tasks.h: 530: if (print_port == i) {
  7483  01119E  0100               	movlb	0	; () banked
  7484  0111A0  51B9               	movf	port_loop@i& (0+255),w,b
  7485  0111A2  0100               	movlb	0	; () banked
  7486  0111A4  19A7               	xorwf	_print_port& (0+255),w,b
  7487  0111A6  B4D8               	btfsc	status,2,c
  7488  0111A8  D009               	goto	l10662
  7489  0111AA  D012               	goto	l832
  7490  0111AC                     l10652:
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;tasks.h: 533: print_content = INTEGRATING;
  7494  0111AC  0E04               	movlw	4
  7495  0111AE  D001               	goto	L6
  7496  0111B0                     l10654:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;tasks.h: 536: print_content = CHARGE_TIME;
  7500  0111B0  0E05               	movlw	5
  7501  0111B2                     L6:
  7502  0111B2  0100               	movlb	0	; () banked
  7503  0111B4  6FA6               	movwf	_print_content& (0+255),b
  7504                           
  7505                           ;tasks.h: 540: break;
  7506  0111B6  D00E               	goto	l10664
  7507  0111B8                     l10658:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;tasks.h: 542: print_content = CURRENT;
  7511  0111B8  0E03               	movlw	3
  7512  0111BA  D7FB               	goto	L6
  7513  0111BC                     l10662:
  7514                           
  7515                           ; BSR set to: 0
  7516  0111BC  0100               	movlb	0	; () banked
  7517  0111BE  51A6               	movf	_print_content& (0+255),w,b
  7518                           
  7519                           ; Switch size 1, requested type "space"
  7520                           ; Number of cases is 3, Range of values is 3 to 5
  7521                           ; switch strategies available:
  7522                           ; Name         Instructions Cycles
  7523                           ; simple_byte           10     6 (average)
  7524                           ;	Chosen strategy is simple_byte
  7525  0111C0  0A03               	xorlw	3	; case 3
  7526  0111C2  B4D8               	btfsc	status,2,c
  7527  0111C4  D7F3               	goto	l10652
  7528  0111C6  0A07               	xorlw	7	; case 4
  7529  0111C8  B4D8               	btfsc	status,2,c
  7530  0111CA  D7F2               	goto	l10654
  7531  0111CC  0A01               	xorlw	1	; case 5
  7532  0111CE  D7F4               	goto	l10658
  7533  0111D0                     l832:
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;tasks.h: 546: print_port = i;
  7537  0111D0  C0B9  F0A7         	movff	port_loop@i,_print_port
  7538  0111D4                     l10664:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;tasks.h: 547: }
  7542                           ;tasks.h: 549: if (!out_flag[i]) {
  7543  0111D4  0100               	movlb	0	; () banked
  7544  0111D6  51B9               	movf	port_loop@i& (0+255),w,b
  7545  0111D8  0D01               	mullw	1
  7546  0111DA  0EEE               	movlw	low _out_flag
  7547  0111DC  24F3               	addwf	prodl,w,c
  7548  0111DE  6ED9               	movwf	fsr2l,c
  7549  0111E0  0E02               	movlw	high _out_flag
  7550  0111E2  20F4               	addwfc	prodh,w,c
  7551  0111E4  6EDA               	movwf	fsr2h,c
  7552  0111E6  50DF               	movf	indf2,w,c
  7553  0111E8  A4D8               	btfss	status,2,c
  7554  0111EA  D014               	goto	l10672
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;tasks.h: 550: print_content = START_CHARGING;
  7558  0111EC  0E02               	movlw	2
  7559  0111EE  0100               	movlb	0	; () banked
  7560  0111F0  6FA6               	movwf	_print_content& (0+255),b
  7561                           
  7562                           ;tasks.h: 551: next_print_content = CURRENT;
  7563  0111F2  0E03               	movlw	3
  7564  0111F4  6E4E               	movwf	_next_print_content,c
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;tasks.h: 552: delay_set(&delay_display, 32);
  7568  0111F6  0E51               	movlw	low _delay_display
  7569  0111F8  0100               	movlb	0	; () banked
  7570  0111FA  6FB5               	movwf	delay_set@d& (0+255),b
  7571  0111FC  0E00               	movlw	high _delay_display
  7572  0111FE  0100               	movlb	0	; () banked
  7573  011200  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  7574  011202  0E00               	movlw	0
  7575  011204  0100               	movlb	0	; () banked
  7576  011206  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  7577  011208  0E20               	movlw	32
  7578  01120A  6FB7               	movwf	delay_set@value& (0+255),b
  7579  01120C  EC62  F0B0         	call	_delay_set	;wreg free
  7580                           
  7581                           ;tasks.h: 553: display_flag = 1;
  7582  011210  0E01               	movlw	1
  7583  011212  6E4C               	movwf	_display_flag,c
  7584  011214                     l10672:
  7585                           
  7586                           ;tasks.h: 554: }
  7587                           ;tasks.h: 556: OUT(i, 1);
  7588  011214  0E01               	movlw	1
  7589  011216  0100               	movlb	0	; () banked
  7590  011218  6FB5               	movwf	OUT@value& (0+255),b
  7591  01121A  0100               	movlb	0	; () banked
  7592  01121C  51B9               	movf	port_loop@i& (0+255),w,b
  7593  01121E  EC6A  F0AB         	call	_OUT
  7594                           
  7595                           ;tasks.h: 557: cut_cnt[i] = 0;
  7596  011222  0100               	movlb	0	; () banked
  7597  011224  51B9               	movf	port_loop@i& (0+255),w,b
  7598  011226  0D02               	mullw	2
  7599  011228  0ECF               	movlw	low _cut_cnt
  7600  01122A  24F3               	addwf	prodl,w,c
  7601  01122C  6ED9               	movwf	fsr2l,c
  7602  01122E  0E01               	movlw	high _cut_cnt
  7603  011230  20F4               	addwfc	prodh,w,c
  7604  011232  6EDA               	movwf	fsr2h,c
  7605  011234  0E00               	movlw	0
  7606  011236  6EDE               	movwf	postinc2,c
  7607  011238  0E00               	movlw	0
  7608  01123A  6EDD               	movwf	postdec2,c
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;tasks.h: 558: display_flag = 1;
  7612  01123C  0E01               	movlw	1
  7613  01123E  6E4C               	movwf	_display_flag,c
  7614  011240                     l10678:
  7615                           
  7616                           ;tasks.h: 559: }
  7617                           ;tasks.h: 560: if (ctmu[i].flag.long_holding_2) {
  7618  011240  0100               	movlb	0	; () banked
  7619  011242  51B9               	movf	port_loop@i& (0+255),w,b
  7620  011244  0D04               	mullw	4
  7621  011246  0E03               	movlw	3
  7622  011248  26F3               	addwf	prodl,f,c
  7623  01124A  0E00               	movlw	0
  7624  01124C  22F4               	addwfc	prodh,f,c
  7625  01124E  0EDD               	movlw	low _ctmu
  7626  011250  24F3               	addwf	prodl,w,c
  7627  011252  6ED9               	movwf	fsr2l,c
  7628  011254  0E01               	movlw	high _ctmu
  7629  011256  20F4               	addwfc	prodh,w,c
  7630  011258  6EDA               	movwf	fsr2h,c
  7631  01125A  0101               	movlb	1	; () banked
  7632  01125C  A4DF               	btfss	indf2,2,c
  7633  01125E  D016               	goto	l841
  7634                           
  7635                           ; BSR set to: 1
  7636                           ;tasks.h: 561: ctmu[i].flags = 0;
  7637  011260  0100               	movlb	0	; () banked
  7638  011262  51B9               	movf	port_loop@i& (0+255),w,b
  7639  011264  0D04               	mullw	4
  7640  011266  0E02               	movlw	2
  7641  011268  26F3               	addwf	prodl,f,c
  7642  01126A  0E00               	movlw	0
  7643  01126C  22F4               	addwfc	prodh,f,c
  7644  01126E  0EDD               	movlw	low _ctmu
  7645  011270  24F3               	addwf	prodl,w,c
  7646  011272  6ED9               	movwf	fsr2l,c
  7647  011274  0E01               	movlw	high _ctmu
  7648  011276  20F4               	addwfc	prodh,w,c
  7649  011278  6EDA               	movwf	fsr2h,c
  7650  01127A  0E00               	movlw	0
  7651  01127C  6EDE               	movwf	postinc2,c
  7652  01127E  0E00               	movlw	0
  7653  011280  6EDD               	movwf	postdec2,c
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;tasks.h: 562: print_content = RESET_;
  7657  011282  0E06               	movlw	6
  7658  011284  0100               	movlb	0	; () banked
  7659  011286  6FA6               	movwf	_print_content& (0+255),b
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;tasks.h: 563: display_flag = 1;
  7663  011288  0E01               	movlw	1
  7664  01128A  6E4C               	movwf	_display_flag,c
  7665  01128C                     l841:
  7666                           
  7667                           ;tasks.h: 564: }
  7668                           ;tasks.h: 565: if (ctmu[i].flag.long_hold_2) {
  7669  01128C  0100               	movlb	0	; () banked
  7670  01128E  51B9               	movf	port_loop@i& (0+255),w,b
  7671  011290  0D04               	mullw	4
  7672  011292  0E02               	movlw	2
  7673  011294  26F3               	addwf	prodl,f,c
  7674  011296  0E00               	movlw	0
  7675  011298  22F4               	addwfc	prodh,f,c
  7676  01129A  0EDD               	movlw	low _ctmu
  7677  01129C  24F3               	addwf	prodl,w,c
  7678  01129E  6ED9               	movwf	fsr2l,c
  7679  0112A0  0E01               	movlw	high _ctmu
  7680  0112A2  20F4               	addwfc	prodh,w,c
  7681  0112A4  6EDA               	movwf	fsr2h,c
  7682  0112A6  0101               	movlb	1	; () banked
  7683  0112A8  A4DF               	btfss	indf2,2,c
  7684  0112AA  D04C               	goto	l10696
  7685                           
  7686                           ; BSR set to: 1
  7687                           ;tasks.h: 566: ctmu[i].flags = 0;
  7688  0112AC  0100               	movlb	0	; () banked
  7689  0112AE  51B9               	movf	port_loop@i& (0+255),w,b
  7690  0112B0  0D04               	mullw	4
  7691  0112B2  0E02               	movlw	2
  7692  0112B4  26F3               	addwf	prodl,f,c
  7693  0112B6  0E00               	movlw	0
  7694  0112B8  22F4               	addwfc	prodh,f,c
  7695  0112BA  0EDD               	movlw	low _ctmu
  7696  0112BC  24F3               	addwf	prodl,w,c
  7697  0112BE  6ED9               	movwf	fsr2l,c
  7698  0112C0  0E01               	movlw	high _ctmu
  7699  0112C2  20F4               	addwfc	prodh,w,c
  7700  0112C4  6EDA               	movwf	fsr2h,c
  7701  0112C6  0E00               	movlw	0
  7702  0112C8  6EDE               	movwf	postinc2,c
  7703  0112CA  0E00               	movlw	0
  7704  0112CC  6EDD               	movwf	postdec2,c
  7705                           
  7706                           ;tasks.h: 567: S[i] = 0;
  7707  0112CE  0100               	movlb	0	; () banked
  7708  0112D0  51B9               	movf	port_loop@i& (0+255),w,b
  7709  0112D2  0D04               	mullw	4
  7710  0112D4  0ECB               	movlw	low _S
  7711  0112D6  24F3               	addwf	prodl,w,c
  7712  0112D8  6ED9               	movwf	fsr2l,c
  7713  0112DA  0E02               	movlw	high _S
  7714  0112DC  20F4               	addwfc	prodh,w,c
  7715  0112DE  6EDA               	movwf	fsr2h,c
  7716  0112E0  6ADE               	clrf	postinc2,c
  7717  0112E2  6ADE               	clrf	postinc2,c
  7718  0112E4  6ADE               	clrf	postinc2,c
  7719  0112E6  6ADD               	clrf	postdec2,c
  7720                           
  7721                           ;tasks.h: 568: s[i] = 0;
  7722  0112E8  0100               	movlb	0	; () banked
  7723  0112EA  51B9               	movf	port_loop@i& (0+255),w,b
  7724  0112EC  0D04               	mullw	4
  7725  0112EE  0ED7               	movlw	low _s
  7726  0112F0  24F3               	addwf	prodl,w,c
  7727  0112F2  6ED9               	movwf	fsr2l,c
  7728  0112F4  0E02               	movlw	high _s
  7729  0112F6  20F4               	addwfc	prodh,w,c
  7730  0112F8  6EDA               	movwf	fsr2h,c
  7731  0112FA  6ADE               	clrf	postinc2,c
  7732  0112FC  6ADE               	clrf	postinc2,c
  7733  0112FE  6ADE               	clrf	postinc2,c
  7734  011300  6ADD               	clrf	postdec2,c
  7735                           
  7736                           ;tasks.h: 569: charge_time[i] = 0;
  7737  011302  0100               	movlb	0	; () banked
  7738  011304  51B9               	movf	port_loop@i& (0+255),w,b
  7739  011306  0D04               	mullw	4
  7740  011308  0E60               	movlw	low _charge_time
  7741  01130A  24F3               	addwf	prodl,w,c
  7742  01130C  6ED9               	movwf	fsr2l,c
  7743  01130E  0E00               	movlw	high _charge_time
  7744  011310  20F4               	addwfc	prodh,w,c
  7745  011312  6EDA               	movwf	fsr2h,c
  7746  011314  6ADE               	clrf	postinc2,c
  7747  011316  6ADE               	clrf	postinc2,c
  7748  011318  6ADE               	clrf	postinc2,c
  7749  01131A  6ADD               	clrf	postdec2,c
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;tasks.h: 570: print_content = RESETED;
  7753  01131C  0E07               	movlw	7
  7754  01131E  0100               	movlb	0	; () banked
  7755  011320  6FA6               	movwf	_print_content& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;tasks.h: 571: next_print_content = INTEGRATING;
  7759  011322  0E04               	movlw	4
  7760  011324  6E4E               	movwf	_next_print_content,c
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;tasks.h: 572: delay_set(&delay_display, 64);
  7764  011326  0E51               	movlw	low _delay_display
  7765  011328  0100               	movlb	0	; () banked
  7766  01132A  6FB5               	movwf	delay_set@d& (0+255),b
  7767  01132C  0E00               	movlw	high _delay_display
  7768  01132E  0100               	movlb	0	; () banked
  7769  011330  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  7770  011332  0E00               	movlw	0
  7771  011334  0100               	movlb	0	; () banked
  7772  011336  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  7773  011338  0E40               	movlw	64
  7774  01133A  6FB7               	movwf	delay_set@value& (0+255),b
  7775  01133C  EC62  F0B0         	call	_delay_set	;wreg free
  7776                           
  7777                           ;tasks.h: 573: display_flag = 1;
  7778  011340  0E01               	movlw	1
  7779  011342  6E4C               	movwf	_display_flag,c
  7780  011344                     l10696:
  7781                           
  7782                           ;tasks.h: 574: }
  7783                           ;tasks.h: 575: if (ctmu[i].flag.long_holding_3) {
  7784  011344  0100               	movlb	0	; () banked
  7785  011346  51B9               	movf	port_loop@i& (0+255),w,b
  7786  011348  0D04               	mullw	4
  7787  01134A  0E03               	movlw	3
  7788  01134C  26F3               	addwf	prodl,f,c
  7789  01134E  0E00               	movlw	0
  7790  011350  22F4               	addwfc	prodh,f,c
  7791  011352  0EDD               	movlw	low _ctmu
  7792  011354  24F3               	addwf	prodl,w,c
  7793  011356  6ED9               	movwf	fsr2l,c
  7794  011358  0E01               	movlw	high _ctmu
  7795  01135A  20F4               	addwfc	prodh,w,c
  7796  01135C  6EDA               	movwf	fsr2h,c
  7797  01135E  0101               	movlb	1	; () banked
  7798  011360  A6DF               	btfss	indf2,3,c
  7799  011362  D016               	goto	l843
  7800                           
  7801                           ; BSR set to: 1
  7802                           ;tasks.h: 576: ctmu[i].flags = 0;
  7803  011364  0100               	movlb	0	; () banked
  7804  011366  51B9               	movf	port_loop@i& (0+255),w,b
  7805  011368  0D04               	mullw	4
  7806  01136A  0E02               	movlw	2
  7807  01136C  26F3               	addwf	prodl,f,c
  7808  01136E  0E00               	movlw	0
  7809  011370  22F4               	addwfc	prodh,f,c
  7810  011372  0EDD               	movlw	low _ctmu
  7811  011374  24F3               	addwf	prodl,w,c
  7812  011376  6ED9               	movwf	fsr2l,c
  7813  011378  0E01               	movlw	high _ctmu
  7814  01137A  20F4               	addwfc	prodh,w,c
  7815  01137C  6EDA               	movwf	fsr2h,c
  7816  01137E  0E00               	movlw	0
  7817  011380  6EDE               	movwf	postinc2,c
  7818  011382  0E00               	movlw	0
  7819  011384  6EDD               	movwf	postdec2,c
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;tasks.h: 577: print_content = TOGGLE_STOP_;
  7823  011386  0E08               	movlw	8
  7824  011388  0100               	movlb	0	; () banked
  7825  01138A  6FA6               	movwf	_print_content& (0+255),b
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;tasks.h: 578: display_flag = 1;
  7829  01138C  0E01               	movlw	1
  7830  01138E  6E4C               	movwf	_display_flag,c
  7831  011390                     l843:
  7832                           
  7833                           ;tasks.h: 579: }
  7834                           ;tasks.h: 580: if (ctmu[i].flag.long_hold_3) {
  7835  011390  0100               	movlb	0	; () banked
  7836  011392  51B9               	movf	port_loop@i& (0+255),w,b
  7837  011394  0D04               	mullw	4
  7838  011396  0E02               	movlw	2
  7839  011398  26F3               	addwf	prodl,f,c
  7840  01139A  0E00               	movlw	0
  7841  01139C  22F4               	addwfc	prodh,f,c
  7842  01139E  0EDD               	movlw	low _ctmu
  7843  0113A0  24F3               	addwf	prodl,w,c
  7844  0113A2  6ED9               	movwf	fsr2l,c
  7845  0113A4  0E01               	movlw	high _ctmu
  7846  0113A6  20F4               	addwfc	prodh,w,c
  7847  0113A8  6EDA               	movwf	fsr2h,c
  7848  0113AA  0101               	movlb	1	; () banked
  7849  0113AC  A6DF               	btfss	indf2,3,c
  7850  0113AE  D061               	goto	l10728
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;tasks.h: 581: ctmu[i].flags = 0;
  7854  0113B0  0100               	movlb	0	; () banked
  7855  0113B2  51B9               	movf	port_loop@i& (0+255),w,b
  7856  0113B4  0D04               	mullw	4
  7857  0113B6  0E02               	movlw	2
  7858  0113B8  26F3               	addwf	prodl,f,c
  7859  0113BA  0E00               	movlw	0
  7860  0113BC  22F4               	addwfc	prodh,f,c
  7861  0113BE  0EDD               	movlw	low _ctmu
  7862  0113C0  24F3               	addwf	prodl,w,c
  7863  0113C2  6ED9               	movwf	fsr2l,c
  7864  0113C4  0E01               	movlw	high _ctmu
  7865  0113C6  20F4               	addwfc	prodh,w,c
  7866  0113C8  6EDA               	movwf	fsr2h,c
  7867  0113CA  0E00               	movlw	0
  7868  0113CC  6EDE               	movwf	postinc2,c
  7869  0113CE  0E00               	movlw	0
  7870  0113D0  6EDD               	movwf	postdec2,c
  7871                           
  7872                           ;tasks.h: 582: if (auto_cut_ON[i]) {
  7873  0113D2  0100               	movlb	0	; () banked
  7874  0113D4  51B9               	movf	port_loop@i& (0+255),w,b
  7875  0113D6  0D01               	mullw	1
  7876  0113D8  0E87               	movlw	low _auto_cut_ON
  7877  0113DA  24F3               	addwf	prodl,w,c
  7878  0113DC  6ED9               	movwf	fsr2l,c
  7879  0113DE  0E00               	movlw	high _auto_cut_ON
  7880  0113E0  20F4               	addwfc	prodh,w,c
  7881  0113E2  6EDA               	movwf	fsr2h,c
  7882  0113E4  50DF               	movf	indf2,w,c
  7883  0113E6  B4D8               	btfsc	status,2,c
  7884  0113E8  D025               	goto	l10718
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;tasks.h: 583: auto_cut_ON[i] = 0;
  7888  0113EA  0100               	movlb	0	; () banked
  7889  0113EC  51B9               	movf	port_loop@i& (0+255),w,b
  7890  0113EE  0D01               	mullw	1
  7891  0113F0  0E87               	movlw	low _auto_cut_ON
  7892  0113F2  24F3               	addwf	prodl,w,c
  7893  0113F4  6ED9               	movwf	fsr2l,c
  7894  0113F6  0E00               	movlw	high _auto_cut_ON
  7895  0113F8  20F4               	addwfc	prodh,w,c
  7896  0113FA  6EDA               	movwf	fsr2h,c
  7897  0113FC  0E00               	movlw	0
  7898  0113FE  6EDF               	movwf	indf2,c
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;tasks.h: 584: OUT(i, 1);
  7902  011400  0E01               	movlw	1
  7903  011402  0100               	movlb	0	; () banked
  7904  011404  6FB5               	movwf	OUT@value& (0+255),b
  7905  011406  0100               	movlb	0	; () banked
  7906  011408  51B9               	movf	port_loop@i& (0+255),w,b
  7907  01140A  EC6A  F0AB         	call	_OUT
  7908                           
  7909                           ;tasks.h: 585: print_content = ALWAYS_ON;
  7910  01140E  0E09               	movlw	9
  7911  011410  0100               	movlb	0	; () banked
  7912  011412  6FA6               	movwf	_print_content& (0+255),b
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;tasks.h: 586: next_print_content = TIME;
  7916  011414  0E01               	movlw	1
  7917  011416  6E4E               	movwf	_next_print_content,c
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;tasks.h: 587: delay_set(&delay_display, 100);
  7921  011418  0E51               	movlw	low _delay_display
  7922  01141A  0100               	movlb	0	; () banked
  7923  01141C  6FB5               	movwf	delay_set@d& (0+255),b
  7924  01141E  0E00               	movlw	high _delay_display
  7925  011420  0100               	movlb	0	; () banked
  7926  011422  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  7927  011424  0E00               	movlw	0
  7928  011426  0100               	movlb	0	; () banked
  7929  011428  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  7930  01142A  0E64               	movlw	100
  7931  01142C  6FB7               	movwf	delay_set@value& (0+255),b
  7932  01142E  EC62  F0B0         	call	_delay_set	;wreg free
  7933  011432  D01D               	goto	l10726
  7934  011434                     l10718:
  7935                           
  7936                           ;tasks.h: 590: auto_cut_ON[i] = 1;
  7937  011434  0100               	movlb	0	; () banked
  7938  011436  51B9               	movf	port_loop@i& (0+255),w,b
  7939  011438  0D01               	mullw	1
  7940  01143A  0E87               	movlw	low _auto_cut_ON
  7941  01143C  24F3               	addwf	prodl,w,c
  7942  01143E  6ED9               	movwf	fsr2l,c
  7943  011440  0E00               	movlw	high _auto_cut_ON
  7944  011442  20F4               	addwfc	prodh,w,c
  7945  011444  6EDA               	movwf	fsr2h,c
  7946  011446  0E01               	movlw	1
  7947  011448  6EDF               	movwf	indf2,c
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;tasks.h: 591: print_content = AUTO_STOP;
  7951  01144A  0E0A               	movlw	10
  7952  01144C  0100               	movlb	0	; () banked
  7953  01144E  6FA6               	movwf	_print_content& (0+255),b
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;tasks.h: 592: next_print_content = TIME;
  7957  011450  0E01               	movlw	1
  7958  011452  6E4E               	movwf	_next_print_content,c
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;tasks.h: 593: delay_set(&delay_display, 100);
  7962  011454  0E51               	movlw	low _delay_display
  7963  011456  0100               	movlb	0	; () banked
  7964  011458  6FB5               	movwf	delay_set@d& (0+255),b
  7965  01145A  0E00               	movlw	high _delay_display
  7966  01145C  0100               	movlb	0	; () banked
  7967  01145E  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  7968  011460  0E00               	movlw	0
  7969  011462  0100               	movlb	0	; () banked
  7970  011464  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  7971  011466  0E64               	movlw	100
  7972  011468  6FB7               	movwf	delay_set@value& (0+255),b
  7973  01146A  EC62  F0B0         	call	_delay_set	;wreg free
  7974  01146E                     l10726:
  7975                           
  7976                           ;tasks.h: 594: display_flag = 1;
  7977  01146E  0E01               	movlw	1
  7978  011470  6E4C               	movwf	_display_flag,c
  7979  011472                     l10728:
  7980                           
  7981                           ;tasks.h: 595: }
  7982                           ;tasks.h: 596: }
  7983                           ;tasks.h: 597: if (ctmu[i].flag.long_holding_4) {
  7984  011472  0100               	movlb	0	; () banked
  7985  011474  51B9               	movf	port_loop@i& (0+255),w,b
  7986  011476  0D04               	mullw	4
  7987  011478  0E03               	movlw	3
  7988  01147A  26F3               	addwf	prodl,f,c
  7989  01147C  0E00               	movlw	0
  7990  01147E  22F4               	addwfc	prodh,f,c
  7991  011480  0EDD               	movlw	low _ctmu
  7992  011482  24F3               	addwf	prodl,w,c
  7993  011484  6ED9               	movwf	fsr2l,c
  7994  011486  0E01               	movlw	high _ctmu
  7995  011488  20F4               	addwfc	prodh,w,c
  7996  01148A  6EDA               	movwf	fsr2h,c
  7997  01148C  0101               	movlb	1	; () banked
  7998  01148E  A8DF               	btfss	indf2,4,c
  7999  011490  D025               	goto	l10740
  8000                           
  8001                           ; BSR set to: 1
  8002                           ;tasks.h: 598: ctmu[i].flags = 0;
  8003  011492  0100               	movlb	0	; () banked
  8004  011494  51B9               	movf	port_loop@i& (0+255),w,b
  8005  011496  0D04               	mullw	4
  8006  011498  0E02               	movlw	2
  8007  01149A  26F3               	addwf	prodl,f,c
  8008  01149C  0E00               	movlw	0
  8009  01149E  22F4               	addwfc	prodh,f,c
  8010  0114A0  0EDD               	movlw	low _ctmu
  8011  0114A2  24F3               	addwf	prodl,w,c
  8012  0114A4  6ED9               	movwf	fsr2l,c
  8013  0114A6  0E01               	movlw	high _ctmu
  8014  0114A8  20F4               	addwfc	prodh,w,c
  8015  0114AA  6EDA               	movwf	fsr2h,c
  8016  0114AC  0E00               	movlw	0
  8017  0114AE  6EDE               	movwf	postinc2,c
  8018  0114B0  0E00               	movlw	0
  8019  0114B2  6EDD               	movwf	postdec2,c
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;tasks.h: 599: print_content = NOTHING_DONE;
  8023  0114B4  0E0B               	movlw	11
  8024  0114B6  0100               	movlb	0	; () banked
  8025  0114B8  6FA6               	movwf	_print_content& (0+255),b
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;tasks.h: 600: next_print_content = CURRENT;
  8029  0114BA  0E03               	movlw	3
  8030  0114BC  6E4E               	movwf	_next_print_content,c
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;tasks.h: 601: delay_set(&delay_display, 64);
  8034  0114BE  0E51               	movlw	low _delay_display
  8035  0114C0  0100               	movlb	0	; () banked
  8036  0114C2  6FB5               	movwf	delay_set@d& (0+255),b
  8037  0114C4  0E00               	movlw	high _delay_display
  8038  0114C6  0100               	movlb	0	; () banked
  8039  0114C8  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8040  0114CA  0E00               	movlw	0
  8041  0114CC  0100               	movlb	0	; () banked
  8042  0114CE  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8043  0114D0  0E40               	movlw	64
  8044  0114D2  6FB7               	movwf	delay_set@value& (0+255),b
  8045  0114D4  EC62  F0B0         	call	_delay_set	;wreg free
  8046                           
  8047                           ;tasks.h: 602: display_flag = 1;
  8048  0114D8  0E01               	movlw	1
  8049  0114DA  6E4C               	movwf	_display_flag,c
  8050  0114DC                     l10740:
  8051  0114DC  0100               	movlb	0	; () banked
  8052  0114DE  2BB9               	incf	port_loop@i& (0+255),f,b
  8053  0114E0  D621               	goto	l10636
  8054  0114E2                     __end_of_port_loop:
  8055                           	opt stack 0
  8056                           tblptru	equ	0xFF8
  8057                           tblptrh	equ	0xFF7
  8058                           tblptrl	equ	0xFF6
  8059                           tablat	equ	0xFF5
  8060                           prodh	equ	0xFF4
  8061                           prodl	equ	0xFF3
  8062                           intcon	equ	0xFF2
  8063                           postinc0	equ	0xFEE
  8064                           wreg	equ	0xFE8
  8065                           indf1	equ	0xFE7
  8066                           postinc1	equ	0xFE6
  8067                           postdec1	equ	0xFE5
  8068                           fsr1h	equ	0xFE2
  8069                           fsr1l	equ	0xFE1
  8070                           indf2	equ	0xFDF
  8071                           postinc2	equ	0xFDE
  8072                           postdec2	equ	0xFDD
  8073                           fsr2h	equ	0xFDA
  8074                           fsr2l	equ	0xFD9
  8075                           status	equ	0xFD8
  8076                           
  8077 ;; *************** function _delay_set *****************
  8078 ;; Defined at:
  8079 ;;		line 349 in file "../My_header\My_header.h"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  d               2    0[BANK0 ] PTR struct Delay
  8082 ;;		 -> delay_display(3), 
  8083 ;;  value           2    2[BANK0 ] unsigned int 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;		None               void
  8088 ;; Registers used:
  8089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;Total ram usage:        4 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:   11
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_port_loop
  8106 ;;		_main
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text18
  8111  0160C4                     __ptext18:
  8112                           	opt stack 0
  8113  0160C4                     _delay_set:
  8114                           	opt stack 17
  8115                           
  8116                           ;My_header\My_header.h: 350: d->cnt = value;
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;incstack = 0
  8120  0160C4  0100               	movlb	0	; () banked
  8121  0160C6  EE20 F001          	lfsr	2,1
  8122  0160CA  51B5               	movf	delay_set@d& (0+255),w,b
  8123  0160CC  26D9               	addwf	fsr2l,f,c
  8124  0160CE  51B6               	movf	(delay_set@d+1)& (0+255),w,b
  8125  0160D0  22DA               	addwfc	fsr2h,f,c
  8126  0160D2  C0B7  FFDE         	movff	delay_set@value,postinc2
  8127  0160D6  C0B8  FFDD         	movff	delay_set@value+1,postdec2
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;My_header\My_header.h: 351: d->flag = 0;
  8131  0160DA  C0B5  FFD9         	movff	delay_set@d,fsr2l
  8132  0160DE  C0B6  FFDA         	movff	delay_set@d+1,fsr2h
  8133  0160E2  0E00               	movlw	0
  8134  0160E4  6EDF               	movwf	indf2,c
  8135                           
  8136                           ; BSR set to: 0
  8137  0160E6  0012               	return		;funcret
  8138  0160E8                     __end_of_delay_set:
  8139                           	opt stack 0
  8140                           tblptru	equ	0xFF8
  8141                           tblptrh	equ	0xFF7
  8142                           tblptrl	equ	0xFF6
  8143                           tablat	equ	0xFF5
  8144                           prodh	equ	0xFF4
  8145                           prodl	equ	0xFF3
  8146                           intcon	equ	0xFF2
  8147                           postinc0	equ	0xFEE
  8148                           wreg	equ	0xFE8
  8149                           indf1	equ	0xFE7
  8150                           postinc1	equ	0xFE6
  8151                           postdec1	equ	0xFE5
  8152                           fsr1h	equ	0xFE2
  8153                           fsr1l	equ	0xFE1
  8154                           indf2	equ	0xFDF
  8155                           postinc2	equ	0xFDE
  8156                           postdec2	equ	0xFDD
  8157                           fsr2h	equ	0xFDA
  8158                           fsr2l	equ	0xFD9
  8159                           status	equ	0xFD8
  8160                           
  8161 ;; *************** function _LED_OUT *****************
  8162 ;; Defined at:
  8163 ;;		line 80 in file "tasks.h"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  b               1    wreg     unsigned char 
  8166 ;;  value           1    0[BANK0 ] unsigned char 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  b               1    1[BANK0 ] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;		None               void
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8178 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8182 ;;Total ram usage:        2 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:   11
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_port_loop
  8189 ;;		_main
  8190 ;;		_sleep_loop
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text19
  8195  015A92                     __ptext19:
  8196                           	opt stack 0
  8197  015A92                     _LED_OUT:
  8198                           	opt stack 17
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;incstack = 0
  8202                           ;LED_OUT@b stored from wreg
  8203  015A92  0100               	movlb	0	; () banked
  8204  015A94  6FB6               	movwf	LED_OUT@b& (0+255),b
  8205                           
  8206                           ;tasks.h: 81: switch (b) {
  8207  015A96  D015               	goto	l9828
  8208  015A98                     l627:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;tasks.h: 83: LATB7 = value;
  8212  015A98  0100               	movlb	0	; () banked
  8213  015A9A  A1B5               	btfss	LED_OUT@value& (0+255),0,b
  8214  015A9C  D002               	goto	u10790
  8215  015A9E  8E8A               	bsf	3978,7,c	;volatile
  8216  015AA0  0012               	return	
  8217  015AA2                     u10790:
  8218  015AA2  9E8A               	bcf	3978,7,c	;volatile
  8219                           
  8220                           ;tasks.h: 84: break;
  8221  015AA4  0012               	return	
  8222  015AA6                     l629:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;tasks.h: 86: LATB6 = value;
  8226  015AA6  0100               	movlb	0	; () banked
  8227  015AA8  A1B5               	btfss	LED_OUT@value& (0+255),0,b
  8228  015AAA  D002               	goto	u10810
  8229  015AAC  8C8A               	bsf	3978,6,c	;volatile
  8230  015AAE  0012               	return	
  8231  015AB0                     u10810:
  8232  015AB0  9C8A               	bcf	3978,6,c	;volatile
  8233                           
  8234                           ;tasks.h: 87: break;
  8235  015AB2  0012               	return	
  8236  015AB4                     l630:
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;tasks.h: 89: LATC2 = value;
  8240  015AB4  0100               	movlb	0	; () banked
  8241  015AB6  A1B5               	btfss	LED_OUT@value& (0+255),0,b
  8242  015AB8  D002               	goto	u10830
  8243  015ABA  848B               	bsf	3979,2,c	;volatile
  8244  015ABC  0012               	return	
  8245  015ABE                     u10830:
  8246  015ABE  948B               	bcf	3979,2,c	;volatile
  8247                           
  8248                           ;tasks.h: 91: }
  8249                           
  8250                           ;tasks.h: 90: break;
  8251  015AC0  0012               	return	
  8252  015AC2                     l9828:
  8253  015AC2  0100               	movlb	0	; () banked
  8254  015AC4  51B6               	movf	LED_OUT@b& (0+255),w,b
  8255                           
  8256                           ; Switch size 1, requested type "space"
  8257                           ; Number of cases is 3, Range of values is 0 to 2
  8258                           ; switch strategies available:
  8259                           ; Name         Instructions Cycles
  8260                           ; simple_byte           10     6 (average)
  8261                           ;	Chosen strategy is simple_byte
  8262  015AC6  0A00               	xorlw	0	; case 0
  8263  015AC8  B4D8               	btfsc	status,2,c
  8264  015ACA  D7E6               	goto	l627
  8265  015ACC  0A01               	xorlw	1	; case 1
  8266  015ACE  B4D8               	btfsc	status,2,c
  8267  015AD0  D7EA               	goto	l629
  8268  015AD2  0A03               	xorlw	3	; case 2
  8269  015AD4  A4D8               	btfss	status,2,c
  8270  015AD6  0012               	return	
  8271  015AD8  D7ED               	goto	l630
  8272  015ADA                     __end_of_LED_OUT:
  8273                           	opt stack 0
  8274                           tblptru	equ	0xFF8
  8275                           tblptrh	equ	0xFF7
  8276                           tblptrl	equ	0xFF6
  8277                           tablat	equ	0xFF5
  8278                           prodh	equ	0xFF4
  8279                           prodl	equ	0xFF3
  8280                           intcon	equ	0xFF2
  8281                           postinc0	equ	0xFEE
  8282                           wreg	equ	0xFE8
  8283                           indf1	equ	0xFE7
  8284                           postinc1	equ	0xFE6
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           postinc2	equ	0xFDE
  8290                           postdec2	equ	0xFDD
  8291                           fsr2h	equ	0xFDA
  8292                           fsr2l	equ	0xFD9
  8293                           status	equ	0xFD8
  8294                           
  8295 ;; *************** function _display_LCD *****************
  8296 ;; Defined at:
  8297 ;;		line 165 in file "tasks.h"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  str            10    0[BANK1 ] unsigned char [10]
  8302 ;; Return value:  Size  Location     Type
  8303 ;;		None               void
  8304 ;; Registers used:
  8305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8315 ;;Total ram usage:       14 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:   16
  8318 ;; This function calls:
  8319 ;;		_I2C_LCD_Clear
  8320 ;;		_I2C_LCD_Putc
  8321 ;;		_I2C_LCD_Puts
  8322 ;;		_I2C_LCD_SetCursor
  8323 ;;		___lldiv
  8324 ;;		___llmod
  8325 ;;		___lwdiv
  8326 ;;		___lwmod
  8327 ;;		_display_port
  8328 ;;		_display_time_1602
  8329 ;;		_my_utoa
  8330 ;; This function is called by:
  8331 ;;		_normal_mode_loop
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text20
  8336  01078E                     __ptext20:
  8337                           	opt stack 0
  8338  01078E                     _display_LCD:
  8339                           	opt stack 13
  8340                           
  8341                           ;tasks.h: 166: I2C_LCD_Clear();
  8342                           
  8343                           ;incstack = 0
  8344  01078E  ECE1  F0B0         	call	_I2C_LCD_Clear	;wreg free
  8345                           
  8346                           ;tasks.h: 167: switch (print_content) {
  8347  010792  D29D               	goto	l10484
  8348  010794                     l10378:
  8349                           
  8350                           ;tasks.h: 169: I2C_LCD_SetCursor(0, 0);
  8351  010794  0E00               	movlw	0
  8352  010796  0100               	movlb	0	; () banked
  8353  010798  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8354  01079A  0E00               	movlw	0
  8355  01079C  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8356                           
  8357                           ;tasks.h: 170: I2C_LCD_Puts("Charge Station 6");
  8358  0107A0  0E6D               	movlw	low STR_8
  8359  0107A2  0100               	movlb	0	; () banked
  8360  0107A4  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8361  0107A6  0EFE               	movlw	high STR_8
  8362  0107A8  0100               	movlb	0	; () banked
  8363  0107AA  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8364  0107AC  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8365                           
  8366                           ;tasks.h: 171: I2C_LCD_SetCursor(0, 1);
  8367  0107B0  0E01               	movlw	1
  8368  0107B2  0100               	movlb	0	; () banked
  8369  0107B4  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8370  0107B6  0E00               	movlw	0
  8371  0107B8  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8372                           
  8373                           ;tasks.h: 172: I2C_LCD_Puts("Made by KERI");
  8374  0107BC  0EED               	movlw	low STR_9
  8375  0107BE  0100               	movlb	0	; () banked
  8376  0107C0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8377  0107C2  0EFE               	movlw	high STR_9
  8378  0107C4  0100               	movlb	0	; () banked
  8379  0107C6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8380  0107C8  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8381                           
  8382                           ;tasks.h: 173: break;
  8383  0107CC  0012               	return	
  8384  0107CE                     l10384:
  8385                           
  8386                           ;tasks.h: 175: display_time_1602(&caltime_now, &epoch_now);
  8387  0107CE  0EAA               	movlw	low _caltime_now
  8388  0107D0  0100               	movlb	0	; () banked
  8389  0107D2  6FEC               	movwf	display_time_1602@ct& (0+255),b
  8390  0107D4  0E00               	movlw	high _caltime_now
  8391  0107D6  0100               	movlb	0	; () banked
  8392  0107D8  6FED               	movwf	(display_time_1602@ct+1)& (0+255),b
  8393  0107DA  0EB1               	movlw	low _epoch_now
  8394  0107DC  0100               	movlb	0	; () banked
  8395  0107DE  6FEE               	movwf	display_time_1602@ep& (0+255),b
  8396  0107E0  0E00               	movlw	high _epoch_now
  8397  0107E2  0100               	movlb	0	; () banked
  8398  0107E4  6FEF               	movwf	(display_time_1602@ep+1)& (0+255),b
  8399  0107E6  ECC4  F094         	call	_display_time_1602	;wreg free
  8400                           
  8401                           ;tasks.h: 176: break;
  8402  0107EA  0012               	return	
  8403  0107EC                     l10386:
  8404                           
  8405                           ;tasks.h: 178: display_port();
  8406  0107EC  EC4A  F09E         	call	_display_port	;wreg free
  8407                           
  8408                           ;tasks.h: 179: I2C_LCD_SetCursor(0, 1);
  8409  0107F0  0E01               	movlw	1
  8410  0107F2  0100               	movlb	0	; () banked
  8411  0107F4  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8412  0107F6  0E00               	movlw	0
  8413  0107F8  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8414                           
  8415                           ;tasks.h: 180: I2C_LCD_Puts("Start Charging");
  8416  0107FC  0ED0               	movlw	low STR_10
  8417  0107FE  0100               	movlb	0	; () banked
  8418  010800  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8419  010802  0EFE               	movlw	high STR_10
  8420  010804  0100               	movlb	0	; () banked
  8421  010806  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8422  010808  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8423                           
  8424                           ;tasks.h: 181: break;
  8425  01080C  0012               	return	
  8426  01080E                     l10392:
  8427                           
  8428                           ;tasks.h: 183: display_port();
  8429  01080E  EC4A  F09E         	call	_display_port	;wreg free
  8430                           
  8431                           ;tasks.h: 184: I2C_LCD_SetCursor(0, 1);
  8432  010812  0E01               	movlw	1
  8433  010814  0100               	movlb	0	; () banked
  8434  010816  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8435  010818  0E00               	movlw	0
  8436  01081A  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8437                           
  8438                           ;tasks.h: 185: I2C_LCD_Putc((I[print_port] % 10000) / 1000 + '0');
  8439  01081E  0E27               	movlw	39
  8440  010820  0100               	movlb	0	; () banked
  8441  010822  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  8442  010824  0E10               	movlw	16
  8443  010826  6FB7               	movwf	___lwmod@divisor& (0+255),b
  8444  010828  0100               	movlb	0	; () banked
  8445  01082A  51A7               	movf	_print_port& (0+255),w,b
  8446  01082C  0D02               	mullw	2
  8447  01082E  0E2D               	movlw	low _I
  8448  010830  24F3               	addwf	prodl,w,c
  8449  010832  6ED9               	movwf	fsr2l,c
  8450  010834  0E00               	movlw	high _I
  8451  010836  20F4               	addwfc	prodh,w,c
  8452  010838  6EDA               	movwf	fsr2h,c
  8453  01083A  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  8454  01083E  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  8455  010842  EC39  F0AB         	call	___lwmod	;wreg free
  8456  010846  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  8457  01084A  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  8458  01084E  0E03               	movlw	3
  8459  010850  0100               	movlb	0	; () banked
  8460  010852  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8461  010854  0EE8               	movlw	232
  8462  010856  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  8463  010858  EC1A  F0AA         	call	___lwdiv	;wreg free
  8464  01085C  0100               	movlb	0	; () banked
  8465  01085E  51D1               	movf	?___lwdiv& (0+255),w,b
  8466  010860  0F30               	addlw	48
  8467  010862  EC76  F0AE         	call	_I2C_LCD_Putc
  8468                           
  8469                           ;tasks.h: 186: I2C_LCD_Putc('.');
  8470  010866  0E2E               	movlw	46
  8471  010868  EC76  F0AE         	call	_I2C_LCD_Putc
  8472                           
  8473                           ;tasks.h: 187: I2C_LCD_Putc((I[print_port] % 1000) / 100 + '0');
  8474  01086C  0E03               	movlw	3
  8475  01086E  0100               	movlb	0	; () banked
  8476  010870  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  8477  010872  0EE8               	movlw	232
  8478  010874  6FB7               	movwf	___lwmod@divisor& (0+255),b
  8479  010876  0100               	movlb	0	; () banked
  8480  010878  51A7               	movf	_print_port& (0+255),w,b
  8481  01087A  0D02               	mullw	2
  8482  01087C  0E2D               	movlw	low _I
  8483  01087E  24F3               	addwf	prodl,w,c
  8484  010880  6ED9               	movwf	fsr2l,c
  8485  010882  0E00               	movlw	high _I
  8486  010884  20F4               	addwfc	prodh,w,c
  8487  010886  6EDA               	movwf	fsr2h,c
  8488  010888  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  8489  01088C  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  8490  010890  EC39  F0AB         	call	___lwmod	;wreg free
  8491  010894  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  8492  010898  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  8493  01089C  0E00               	movlw	0
  8494  01089E  0100               	movlb	0	; () banked
  8495  0108A0  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8496  0108A2  0E64               	movlw	100
  8497  0108A4  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  8498  0108A6  EC1A  F0AA         	call	___lwdiv	;wreg free
  8499  0108AA  0100               	movlb	0	; () banked
  8500  0108AC  51D1               	movf	?___lwdiv& (0+255),w,b
  8501  0108AE  0F30               	addlw	48
  8502  0108B0  EC76  F0AE         	call	_I2C_LCD_Putc
  8503                           
  8504                           ;tasks.h: 188: I2C_LCD_Putc((I[print_port] % 100) / 10 + '0');
  8505  0108B4  0E00               	movlw	0
  8506  0108B6  0100               	movlb	0	; () banked
  8507  0108B8  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  8508  0108BA  0E64               	movlw	100
  8509  0108BC  6FB7               	movwf	___lwmod@divisor& (0+255),b
  8510  0108BE  0100               	movlb	0	; () banked
  8511  0108C0  51A7               	movf	_print_port& (0+255),w,b
  8512  0108C2  0D02               	mullw	2
  8513  0108C4  0E2D               	movlw	low _I
  8514  0108C6  24F3               	addwf	prodl,w,c
  8515  0108C8  6ED9               	movwf	fsr2l,c
  8516  0108CA  0E00               	movlw	high _I
  8517  0108CC  20F4               	addwfc	prodh,w,c
  8518  0108CE  6EDA               	movwf	fsr2h,c
  8519  0108D0  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  8520  0108D4  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  8521  0108D8  EC39  F0AB         	call	___lwmod	;wreg free
  8522  0108DC  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  8523  0108E0  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  8524  0108E4  0E00               	movlw	0
  8525  0108E6  0100               	movlb	0	; () banked
  8526  0108E8  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8527  0108EA  0E0A               	movlw	10
  8528  0108EC  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  8529  0108EE  EC1A  F0AA         	call	___lwdiv	;wreg free
  8530  0108F2  0100               	movlb	0	; () banked
  8531  0108F4  51D1               	movf	?___lwdiv& (0+255),w,b
  8532  0108F6  0F30               	addlw	48
  8533  0108F8  EC76  F0AE         	call	_I2C_LCD_Putc
  8534                           
  8535                           ;tasks.h: 189: I2C_LCD_Putc((I[print_port] % 10) / 1 + '0');
  8536  0108FC  0100               	movlb	0	; () banked
  8537  0108FE  51A7               	movf	_print_port& (0+255),w,b
  8538  010900  0D02               	mullw	2
  8539  010902  0E2D               	movlw	low _I
  8540  010904  24F3               	addwf	prodl,w,c
  8541  010906  6ED9               	movwf	fsr2l,c
  8542  010908  0E00               	movlw	high _I
  8543  01090A  20F4               	addwfc	prodh,w,c
  8544  01090C  6EDA               	movwf	fsr2h,c
  8545  01090E  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  8546  010912  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  8547  010916  0E00               	movlw	0
  8548  010918  0100               	movlb	0	; () banked
  8549  01091A  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  8550  01091C  0E0A               	movlw	10
  8551  01091E  6FB7               	movwf	___lwmod@divisor& (0+255),b
  8552  010920  EC39  F0AB         	call	___lwmod	;wreg free
  8553  010924  0100               	movlb	0	; () banked
  8554  010926  51B5               	movf	?___lwmod& (0+255),w,b
  8555  010928  0F30               	addlw	48
  8556  01092A  EC76  F0AE         	call	_I2C_LCD_Putc
  8557                           
  8558                           ;tasks.h: 190: I2C_LCD_Putc('A');
  8559  01092E  0E41               	movlw	65
  8560  010930  EC76  F0AE         	call	_I2C_LCD_Putc
  8561                           
  8562                           ;tasks.h: 191: break;
  8563  010934  0012               	return	
  8564  010936                     l10408:
  8565                           
  8566                           ;tasks.h: 193: display_port();
  8567  010936  EC4A  F09E         	call	_display_port	;wreg free
  8568                           
  8569                           ;tasks.h: 194: I2C_LCD_SetCursor(0, 1);
  8570  01093A  0E01               	movlw	1
  8571  01093C  0100               	movlb	0	; () banked
  8572  01093E  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8573  010940  0E00               	movlw	0
  8574  010942  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8575                           
  8576                           ;tasks.h: 195: uint8_t str[10];
  8577                           ;tasks.h: 196: my_utoa(str, S[print_port], 5);
  8578  010946  0E00               	movlw	low display_LCD@str
  8579  010948  0100               	movlb	0	; () banked
  8580  01094A  6FD8               	movwf	my_utoa@str& (0+255),b
  8581  01094C  0E01               	movlw	high display_LCD@str
  8582  01094E  0100               	movlb	0	; () banked
  8583  010950  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  8584  010952  0100               	movlb	0	; () banked
  8585  010954  51A7               	movf	_print_port& (0+255),w,b
  8586  010956  0D04               	mullw	4
  8587  010958  0ECB               	movlw	low _S
  8588  01095A  24F3               	addwf	prodl,w,c
  8589  01095C  6ED9               	movwf	fsr2l,c
  8590  01095E  0E02               	movlw	high _S
  8591  010960  20F4               	addwfc	prodh,w,c
  8592  010962  6EDA               	movwf	fsr2h,c
  8593  010964  CFDE F0DA          	movff	postinc2,my_utoa@value
  8594  010968  CFDD F0DB          	movff	postdec2,my_utoa@value+1
  8595  01096C  0E05               	movlw	5
  8596  01096E  0100               	movlb	0	; () banked
  8597  010970  6FDC               	movwf	my_utoa@digits& (0+255),b
  8598  010972  EC53  F0A9         	call	_my_utoa	;wreg free
  8599                           
  8600                           ;tasks.h: 197: I2C_LCD_Puts(str);
  8601  010976  0E00               	movlw	low display_LCD@str
  8602  010978  0100               	movlb	0	; () banked
  8603  01097A  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8604  01097C  0E01               	movlw	high display_LCD@str
  8605  01097E  0100               	movlb	0	; () banked
  8606  010980  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8607  010982  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8608                           
  8609                           ;tasks.h: 198: I2C_LCD_Puts("mAh");
  8610  010986  0ED1               	movlw	low STR_11
  8611  010988  0100               	movlb	0	; () banked
  8612  01098A  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8613  01098C  0EFF               	movlw	high STR_11
  8614  01098E  0100               	movlb	0	; () banked
  8615  010990  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8616  010992  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8617                           
  8618                           ;tasks.h: 199: break;
  8619  010996  0012               	return	
  8620  010998                     l10418:
  8621                           
  8622                           ;tasks.h: 201: display_port();
  8623  010998  EC4A  F09E         	call	_display_port	;wreg free
  8624                           
  8625                           ;tasks.h: 202: uint8_t str[10];
  8626                           ;tasks.h: 203: I2C_LCD_SetCursor(0, 1);
  8627  01099C  0E01               	movlw	1
  8628  01099E  0100               	movlb	0	; () banked
  8629  0109A0  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8630  0109A2  0E00               	movlw	0
  8631  0109A4  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8632                           
  8633                           ;tasks.h: 204: my_utoa(str, charge_time[print_port] / 3600 / 24, 2);
  8634  0109A8  0E10               	movlw	16
  8635  0109AA  0100               	movlb	0	; () banked
  8636  0109AC  6FB9               	movwf	___lldiv@divisor& (0+255),b
  8637  0109AE  0E0E               	movlw	14
  8638  0109B0  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  8639  0109B2  0E00               	movlw	0
  8640  0109B4  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  8641  0109B6  0E00               	movlw	0
  8642  0109B8  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  8643  0109BA  0100               	movlb	0	; () banked
  8644  0109BC  51A7               	movf	_print_port& (0+255),w,b
  8645  0109BE  0D04               	mullw	4
  8646  0109C0  0E60               	movlw	low _charge_time
  8647  0109C2  24F3               	addwf	prodl,w,c
  8648  0109C4  6ED9               	movwf	fsr2l,c
  8649  0109C6  0E00               	movlw	high _charge_time
  8650  0109C8  20F4               	addwfc	prodh,w,c
  8651  0109CA  6EDA               	movwf	fsr2h,c
  8652  0109CC  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  8653  0109D0  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  8654  0109D4  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  8655  0109D8  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  8656  0109DC  ECEE  F0A3         	call	___lldiv	;wreg free
  8657  0109E0  C0B5  F10A         	movff	?___lldiv,_display_LCD$5305
  8658  0109E4  C0B6  F10B         	movff	?___lldiv+1,_display_LCD$5305+1
  8659  0109E8  C0B7  F10C         	movff	?___lldiv+2,_display_LCD$5305+2
  8660  0109EC  C0B8  F10D         	movff	?___lldiv+3,_display_LCD$5305+3
  8661                           
  8662                           ;tasks.h: 204: my_utoa(str, charge_time[print_port] / 3600 / 24, 2);
  8663  0109F0  0E00               	movlw	low display_LCD@str
  8664  0109F2  0100               	movlb	0	; () banked
  8665  0109F4  6FD8               	movwf	my_utoa@str& (0+255),b
  8666  0109F6  0E01               	movlw	high display_LCD@str
  8667  0109F8  0100               	movlb	0	; () banked
  8668  0109FA  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  8669  0109FC  C10A  F0B5         	movff	_display_LCD$5305,___lldiv@dividend
  8670  010A00  C10B  F0B6         	movff	_display_LCD$5305+1,___lldiv@dividend+1
  8671  010A04  C10C  F0B7         	movff	_display_LCD$5305+2,___lldiv@dividend+2
  8672  010A08  C10D  F0B8         	movff	_display_LCD$5305+3,___lldiv@dividend+3
  8673  010A0C  0E18               	movlw	24
  8674  010A0E  0100               	movlb	0	; () banked
  8675  010A10  6FB9               	movwf	___lldiv@divisor& (0+255),b
  8676  010A12  0E00               	movlw	0
  8677  010A14  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  8678  010A16  0E00               	movlw	0
  8679  010A18  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  8680  010A1A  0E00               	movlw	0
  8681  010A1C  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  8682  010A1E  ECEE  F0A3         	call	___lldiv	;wreg free
  8683  010A22  C0B5  F0DA         	movff	?___lldiv,my_utoa@value
  8684  010A26  C0B6  F0DB         	movff	?___lldiv+1,my_utoa@value+1
  8685  010A2A  0E02               	movlw	2
  8686  010A2C  0100               	movlb	0	; () banked
  8687  010A2E  6FDC               	movwf	my_utoa@digits& (0+255),b
  8688  010A30  EC53  F0A9         	call	_my_utoa	;wreg free
  8689                           
  8690                           ;tasks.h: 205: I2C_LCD_Puts(str);
  8691  010A34  0E00               	movlw	low display_LCD@str
  8692  010A36  0100               	movlb	0	; () banked
  8693  010A38  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8694  010A3A  0E01               	movlw	high display_LCD@str
  8695  010A3C  0100               	movlb	0	; () banked
  8696  010A3E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8697  010A40  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8698                           
  8699                           ;tasks.h: 206: I2C_LCD_Puts("d ");
  8700  010A44  0EE1               	movlw	low STR_12
  8701  010A46  0100               	movlb	0	; () banked
  8702  010A48  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8703  010A4A  0EFF               	movlw	high STR_12
  8704  010A4C  0100               	movlb	0	; () banked
  8705  010A4E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8706  010A50  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8707                           
  8708                           ;tasks.h: 207: my_utoa(str, (charge_time[print_port] / 3600) % 24, 2);
  8709  010A54  0E00               	movlw	low display_LCD@str
  8710  010A56  0100               	movlb	0	; () banked
  8711  010A58  6FD8               	movwf	my_utoa@str& (0+255),b
  8712  010A5A  0E01               	movlw	high display_LCD@str
  8713  010A5C  0100               	movlb	0	; () banked
  8714  010A5E  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  8715  010A60  0E10               	movlw	16
  8716  010A62  0100               	movlb	0	; () banked
  8717  010A64  6FB9               	movwf	___lldiv@divisor& (0+255),b
  8718  010A66  0E0E               	movlw	14
  8719  010A68  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  8720  010A6A  0E00               	movlw	0
  8721  010A6C  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  8722  010A6E  0E00               	movlw	0
  8723  010A70  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  8724  010A72  0100               	movlb	0	; () banked
  8725  010A74  51A7               	movf	_print_port& (0+255),w,b
  8726  010A76  0D04               	mullw	4
  8727  010A78  0E60               	movlw	low _charge_time
  8728  010A7A  24F3               	addwf	prodl,w,c
  8729  010A7C  6ED9               	movwf	fsr2l,c
  8730  010A7E  0E00               	movlw	high _charge_time
  8731  010A80  20F4               	addwfc	prodh,w,c
  8732  010A82  6EDA               	movwf	fsr2h,c
  8733  010A84  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  8734  010A88  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  8735  010A8C  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  8736  010A90  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  8737  010A94  ECEE  F0A3         	call	___lldiv	;wreg free
  8738  010A98  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  8739  010A9C  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  8740  010AA0  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  8741  010AA4  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  8742  010AA8  0E18               	movlw	24
  8743  010AAA  0100               	movlb	0	; () banked
  8744  010AAC  6FC6               	movwf	___llmod@divisor& (0+255),b
  8745  010AAE  0E00               	movlw	0
  8746  010AB0  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  8747  010AB2  0E00               	movlw	0
  8748  010AB4  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  8749  010AB6  0E00               	movlw	0
  8750  010AB8  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  8751  010ABA  EC4D  F0A7         	call	___llmod	;wreg free
  8752  010ABE  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  8753  010AC2  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  8754  010AC6  0E02               	movlw	2
  8755  010AC8  0100               	movlb	0	; () banked
  8756  010ACA  6FDC               	movwf	my_utoa@digits& (0+255),b
  8757  010ACC  EC53  F0A9         	call	_my_utoa	;wreg free
  8758                           
  8759                           ;tasks.h: 208: I2C_LCD_Puts(str);
  8760  010AD0  0E00               	movlw	low display_LCD@str
  8761  010AD2  0100               	movlb	0	; () banked
  8762  010AD4  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8763  010AD6  0E01               	movlw	high display_LCD@str
  8764  010AD8  0100               	movlb	0	; () banked
  8765  010ADA  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8766  010ADC  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8767                           
  8768                           ;tasks.h: 209: I2C_LCD_Puts("h ");
  8769  010AE0  0EE4               	movlw	low STR_13
  8770  010AE2  0100               	movlb	0	; () banked
  8771  010AE4  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8772  010AE6  0EFF               	movlw	high STR_13
  8773  010AE8  0100               	movlb	0	; () banked
  8774  010AEA  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8775  010AEC  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8776                           
  8777                           ;tasks.h: 210: my_utoa(str, (charge_time[print_port] / 60) % 60, 2);
  8778  010AF0  0E00               	movlw	low display_LCD@str
  8779  010AF2  0100               	movlb	0	; () banked
  8780  010AF4  6FD8               	movwf	my_utoa@str& (0+255),b
  8781  010AF6  0E01               	movlw	high display_LCD@str
  8782  010AF8  0100               	movlb	0	; () banked
  8783  010AFA  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  8784  010AFC  0E3C               	movlw	60
  8785  010AFE  0100               	movlb	0	; () banked
  8786  010B00  6FB9               	movwf	___lldiv@divisor& (0+255),b
  8787  010B02  0E00               	movlw	0
  8788  010B04  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  8789  010B06  0E00               	movlw	0
  8790  010B08  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  8791  010B0A  0E00               	movlw	0
  8792  010B0C  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  8793  010B0E  0100               	movlb	0	; () banked
  8794  010B10  51A7               	movf	_print_port& (0+255),w,b
  8795  010B12  0D04               	mullw	4
  8796  010B14  0E60               	movlw	low _charge_time
  8797  010B16  24F3               	addwf	prodl,w,c
  8798  010B18  6ED9               	movwf	fsr2l,c
  8799  010B1A  0E00               	movlw	high _charge_time
  8800  010B1C  20F4               	addwfc	prodh,w,c
  8801  010B1E  6EDA               	movwf	fsr2h,c
  8802  010B20  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  8803  010B24  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  8804  010B28  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  8805  010B2C  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  8806  010B30  ECEE  F0A3         	call	___lldiv	;wreg free
  8807  010B34  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  8808  010B38  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  8809  010B3C  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  8810  010B40  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  8811  010B44  0E3C               	movlw	60
  8812  010B46  0100               	movlb	0	; () banked
  8813  010B48  6FC6               	movwf	___llmod@divisor& (0+255),b
  8814  010B4A  0E00               	movlw	0
  8815  010B4C  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  8816  010B4E  0E00               	movlw	0
  8817  010B50  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  8818  010B52  0E00               	movlw	0
  8819  010B54  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  8820  010B56  EC4D  F0A7         	call	___llmod	;wreg free
  8821  010B5A  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  8822  010B5E  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  8823  010B62  0E02               	movlw	2
  8824  010B64  0100               	movlb	0	; () banked
  8825  010B66  6FDC               	movwf	my_utoa@digits& (0+255),b
  8826  010B68  EC53  F0A9         	call	_my_utoa	;wreg free
  8827                           
  8828                           ;tasks.h: 211: I2C_LCD_Puts(str);
  8829  010B6C  0E00               	movlw	low display_LCD@str
  8830  010B6E  0100               	movlb	0	; () banked
  8831  010B70  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8832  010B72  0E01               	movlw	high display_LCD@str
  8833  010B74  0100               	movlb	0	; () banked
  8834  010B76  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8835  010B78  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8836                           
  8837                           ;tasks.h: 212: I2C_LCD_Puts("m ");
  8838  010B7C  0EE7               	movlw	low STR_14
  8839  010B7E  0100               	movlb	0	; () banked
  8840  010B80  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8841  010B82  0EFF               	movlw	high STR_14
  8842  010B84  0100               	movlb	0	; () banked
  8843  010B86  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8844  010B88  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8845                           
  8846                           ;tasks.h: 213: my_utoa(str, charge_time[print_port] % 60, 2);
  8847  010B8C  0E00               	movlw	low display_LCD@str
  8848  010B8E  0100               	movlb	0	; () banked
  8849  010B90  6FD8               	movwf	my_utoa@str& (0+255),b
  8850  010B92  0E01               	movlw	high display_LCD@str
  8851  010B94  0100               	movlb	0	; () banked
  8852  010B96  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  8853  010B98  0100               	movlb	0	; () banked
  8854  010B9A  51A7               	movf	_print_port& (0+255),w,b
  8855  010B9C  0D04               	mullw	4
  8856  010B9E  0E60               	movlw	low _charge_time
  8857  010BA0  24F3               	addwf	prodl,w,c
  8858  010BA2  6ED9               	movwf	fsr2l,c
  8859  010BA4  0E00               	movlw	high _charge_time
  8860  010BA6  20F4               	addwfc	prodh,w,c
  8861  010BA8  6EDA               	movwf	fsr2h,c
  8862  010BAA  CFDE F0C2          	movff	postinc2,___llmod@dividend
  8863  010BAE  CFDE F0C3          	movff	postinc2,___llmod@dividend+1
  8864  010BB2  CFDE F0C4          	movff	postinc2,___llmod@dividend+2
  8865  010BB6  CFDE F0C5          	movff	postinc2,___llmod@dividend+3
  8866  010BBA  0E3C               	movlw	60
  8867  010BBC  0100               	movlb	0	; () banked
  8868  010BBE  6FC6               	movwf	___llmod@divisor& (0+255),b
  8869  010BC0  0E00               	movlw	0
  8870  010BC2  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  8871  010BC4  0E00               	movlw	0
  8872  010BC6  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  8873  010BC8  0E00               	movlw	0
  8874  010BCA  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  8875  010BCC  EC4D  F0A7         	call	___llmod	;wreg free
  8876  010BD0  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  8877  010BD4  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  8878  010BD8  0E02               	movlw	2
  8879  010BDA  0100               	movlb	0	; () banked
  8880  010BDC  6FDC               	movwf	my_utoa@digits& (0+255),b
  8881  010BDE  EC53  F0A9         	call	_my_utoa	;wreg free
  8882                           
  8883                           ;tasks.h: 214: I2C_LCD_Puts(str);
  8884  010BE2  0E00               	movlw	low display_LCD@str
  8885  010BE4  0100               	movlb	0	; () banked
  8886  010BE6  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8887  010BE8  0E01               	movlw	high display_LCD@str
  8888  010BEA  0100               	movlb	0	; () banked
  8889  010BEC  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8890  010BEE  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8891                           
  8892                           ;tasks.h: 215: I2C_LCD_Puts("s");
  8893  010BF2  0E8E               	movlw	low (STR_42+7)
  8894  010BF4  0100               	movlb	0	; () banked
  8895  010BF6  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8896  010BF8  0EFF               	movlw	high (STR_42+7)
  8897  010BFA  0100               	movlb	0	; () banked
  8898  010BFC  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8899  010BFE  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8900                           
  8901                           ;tasks.h: 216: break;
  8902  010C02  0012               	return	
  8903  010C04                     l10448:
  8904                           
  8905                           ;tasks.h: 218: display_port();
  8906  010C04  EC4A  F09E         	call	_display_port	;wreg free
  8907                           
  8908                           ;tasks.h: 219: I2C_LCD_SetCursor(0, 1);
  8909  010C08  0E01               	movlw	1
  8910  010C0A  0100               	movlb	0	; () banked
  8911  010C0C  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8912  010C0E  0E00               	movlw	0
  8913  010C10  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8914                           
  8915                           ;tasks.h: 220: I2C_LCD_Puts("Integrat Reset?");
  8916  010C14  0EA0               	movlw	low STR_16
  8917  010C16  0100               	movlb	0	; () banked
  8918  010C18  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8919  010C1A  0EFE               	movlw	high STR_16
  8920  010C1C  0100               	movlb	0	; () banked
  8921  010C1E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8922  010C20  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8923                           
  8924                           ;tasks.h: 221: break;
  8925  010C24  0012               	return	
  8926  010C26                     l10454:
  8927                           
  8928                           ;tasks.h: 223: display_port();
  8929  010C26  EC4A  F09E         	call	_display_port	;wreg free
  8930                           
  8931                           ;tasks.h: 224: I2C_LCD_SetCursor(0, 1);
  8932  010C2A  0E01               	movlw	1
  8933  010C2C  0100               	movlb	0	; () banked
  8934  010C2E  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8935  010C30  0E00               	movlw	0
  8936  010C32  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8937                           
  8938                           ;tasks.h: 225: I2C_LCD_Puts("Integrat Reseted");
  8939  010C36  0E8F               	movlw	low STR_17
  8940  010C38  0100               	movlb	0	; () banked
  8941  010C3A  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8942  010C3C  0EFE               	movlw	high STR_17
  8943  010C3E  0100               	movlb	0	; () banked
  8944  010C40  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8945  010C42  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8946                           
  8947                           ;tasks.h: 226: break;
  8948  010C46  0012               	return	
  8949  010C48                     l10460:
  8950                           
  8951                           ;tasks.h: 228: display_port();
  8952  010C48  EC4A  F09E         	call	_display_port	;wreg free
  8953                           
  8954                           ;tasks.h: 229: I2C_LCD_SetCursor(0, 1);
  8955  010C4C  0E01               	movlw	1
  8956  010C4E  0100               	movlb	0	; () banked
  8957  010C50  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8958  010C52  0E00               	movlw	0
  8959  010C54  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8960                           
  8961                           ;tasks.h: 230: I2C_LCD_Puts("Toggle AutoStop?");
  8962  010C58  0E7E               	movlw	low STR_18
  8963  010C5A  0100               	movlb	0	; () banked
  8964  010C5C  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8965  010C5E  0EFE               	movlw	high STR_18
  8966  010C60  0100               	movlb	0	; () banked
  8967  010C62  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8968  010C64  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8969                           
  8970                           ;tasks.h: 231: break;
  8971  010C68  0012               	return	
  8972  010C6A                     l10466:
  8973                           
  8974                           ;tasks.h: 233: display_port();
  8975  010C6A  EC4A  F09E         	call	_display_port	;wreg free
  8976                           
  8977                           ;tasks.h: 234: I2C_LCD_SetCursor(0, 1);
  8978  010C6E  0E01               	movlw	1
  8979  010C70  0100               	movlb	0	; () banked
  8980  010C72  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8981  010C74  0E00               	movlw	0
  8982  010C76  EC90  F0AF         	call	_I2C_LCD_SetCursor
  8983                           
  8984                           ;tasks.h: 235: I2C_LCD_Puts("Always Charging");
  8985  010C7A  0EC0               	movlw	low STR_19
  8986  010C7C  0100               	movlb	0	; () banked
  8987  010C7E  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8988  010C80  0EFE               	movlw	high STR_19
  8989  010C82  0100               	movlb	0	; () banked
  8990  010C84  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8991  010C86  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  8992                           
  8993                           ;tasks.h: 236: break;
  8994  010C8A  0012               	return	
  8995  010C8C                     l10472:
  8996                           
  8997                           ;tasks.h: 238: display_port();
  8998  010C8C  EC4A  F09E         	call	_display_port	;wreg free
  8999                           
  9000                           ;tasks.h: 239: I2C_LCD_SetCursor(0, 1);
  9001  010C90  0E01               	movlw	1
  9002  010C92  0100               	movlb	0	; () banked
  9003  010C94  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9004  010C96  0E00               	movlw	0
  9005  010C98  EC90  F0AF         	call	_I2C_LCD_SetCursor
  9006                           
  9007                           ;tasks.h: 240: I2C_LCD_Puts("Auto Stop ON");
  9008  010C9C  0EFA               	movlw	low STR_20
  9009  010C9E  0100               	movlb	0	; () banked
  9010  010CA0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9011  010CA2  0EFE               	movlw	high STR_20
  9012  010CA4  0100               	movlb	0	; () banked
  9013  010CA6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9014  010CA8  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9015  010CAC                     l10478:
  9016                           
  9017                           ;tasks.h: 242: display_port();
  9018  010CAC  EC4A  F09E         	call	_display_port	;wreg free
  9019                           
  9020                           ;tasks.h: 243: I2C_LCD_SetCursor(0, 1);
  9021  010CB0  0E01               	movlw	1
  9022  010CB2  0100               	movlb	0	; () banked
  9023  010CB4  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9024  010CB6  0E00               	movlw	0
  9025  010CB8  EC90  F0AF         	call	_I2C_LCD_SetCursor
  9026                           
  9027                           ;tasks.h: 244: I2C_LCD_Puts("Nothing done.");
  9028  010CBC  0EDF               	movlw	low STR_21
  9029  010CBE  0100               	movlb	0	; () banked
  9030  010CC0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9031  010CC2  0EFE               	movlw	high STR_21
  9032  010CC4  0100               	movlb	0	; () banked
  9033  010CC6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9034  010CC8  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9035                           
  9036                           ;tasks.h: 246: }
  9037                           
  9038                           ;tasks.h: 245: break;
  9039  010CCC  0012               	return	
  9040  010CCE                     l10484:
  9041  010CCE  0100               	movlb	0	; () banked
  9042  010CD0  51A6               	movf	_print_content& (0+255),w,b
  9043                           
  9044                           ; Switch size 1, requested type "space"
  9045                           ; Number of cases is 12, Range of values is 0 to 11
  9046                           ; switch strategies available:
  9047                           ; Name         Instructions Cycles
  9048                           ; simple_byte           37    19 (average)
  9049                           ;	Chosen strategy is simple_byte
  9050  010CD2  0A00               	xorlw	0	; case 0
  9051  010CD4  B4D8               	btfsc	status,2,c
  9052  010CD6  D55E               	goto	l10378
  9053  010CD8  0A01               	xorlw	1	; case 1
  9054  010CDA  B4D8               	btfsc	status,2,c
  9055  010CDC  D578               	goto	l10384
  9056  010CDE  0A03               	xorlw	3	; case 2
  9057  010CE0  B4D8               	btfsc	status,2,c
  9058  010CE2  D584               	goto	l10386
  9059  010CE4  0A01               	xorlw	1	; case 3
  9060  010CE6  B4D8               	btfsc	status,2,c
  9061  010CE8  D592               	goto	l10392
  9062  010CEA  0A07               	xorlw	7	; case 4
  9063  010CEC  B4D8               	btfsc	status,2,c
  9064  010CEE  D623               	goto	l10408
  9065  010CF0  0A01               	xorlw	1	; case 5
  9066  010CF2  B4D8               	btfsc	status,2,c
  9067  010CF4  D651               	goto	l10418
  9068  010CF6  0A03               	xorlw	3	; case 6
  9069  010CF8  B4D8               	btfsc	status,2,c
  9070  010CFA  D784               	goto	l10448
  9071  010CFC  0A01               	xorlw	1	; case 7
  9072  010CFE  B4D8               	btfsc	status,2,c
  9073  010D00  D792               	goto	l10454
  9074  010D02  0A0F               	xorlw	15	; case 8
  9075  010D04  B4D8               	btfsc	status,2,c
  9076  010D06  D7A0               	goto	l10460
  9077  010D08  0A01               	xorlw	1	; case 9
  9078  010D0A  B4D8               	btfsc	status,2,c
  9079  010D0C  D7AE               	goto	l10466
  9080  010D0E  0A03               	xorlw	3	; case 10
  9081  010D10  B4D8               	btfsc	status,2,c
  9082  010D12  D7BC               	goto	l10472
  9083  010D14  0A01               	xorlw	1	; case 11
  9084  010D16  A4D8               	btfss	status,2,c
  9085  010D18  0012               	return	
  9086  010D1A  D7C8               	goto	l10478
  9087  010D1C                     __end_of_display_LCD:
  9088                           	opt stack 0
  9089                           tblptru	equ	0xFF8
  9090                           tblptrh	equ	0xFF7
  9091                           tblptrl	equ	0xFF6
  9092                           tablat	equ	0xFF5
  9093                           prodh	equ	0xFF4
  9094                           prodl	equ	0xFF3
  9095                           intcon	equ	0xFF2
  9096                           postinc0	equ	0xFEE
  9097                           wreg	equ	0xFE8
  9098                           indf1	equ	0xFE7
  9099                           postinc1	equ	0xFE6
  9100                           postdec1	equ	0xFE5
  9101                           fsr1h	equ	0xFE2
  9102                           fsr1l	equ	0xFE1
  9103                           indf2	equ	0xFDF
  9104                           postinc2	equ	0xFDE
  9105                           postdec2	equ	0xFDD
  9106                           fsr2h	equ	0xFDA
  9107                           fsr2l	equ	0xFD9
  9108                           status	equ	0xFD8
  9109                           
  9110 ;; *************** function _display_time_1602 *****************
  9111 ;; Defined at:
  9112 ;;		line 278 in file "../My_header\My_RTCC.h"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  ct              2   55[BANK0 ] PTR struct .
  9115 ;;		 -> caltime_now(7), 
  9116 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  9117 ;;		 -> epoch_now(4), 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;		None               void
  9122 ;; Registers used:
  9123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;Total ram usage:        5 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:   15
  9136 ;; This function calls:
  9137 ;;		_I2C_LCD_Putc
  9138 ;;		_I2C_LCD_Puts
  9139 ;;		_I2C_LCD_SetCursor
  9140 ;;		_RTCC_from_RTCC
  9141 ;;		_display_dec
  9142 ;; This function is called by:
  9143 ;;		_display_LCD
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text21
  9148  012988                     __ptext21:
  9149                           	opt stack 0
  9150  012988                     _display_time_1602:
  9151                           	opt stack 13
  9152                           
  9153                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  9154                           
  9155                           ;incstack = 0
  9156  012988  C0EC  F0DD         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  9157  01298C  C0ED  F0DE         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  9158  012990  C0EE  F0DF         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  9159  012994  C0EF  F0E0         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  9160  012998  EC85  F0B0         	call	_RTCC_from_RTCC	;wreg free
  9161                           
  9162                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  9163  01299C  0E00               	movlw	0
  9164  01299E  0100               	movlb	0	; () banked
  9165  0129A0  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9166  0129A2  0E00               	movlw	0
  9167  0129A4  EC90  F0AF         	call	_I2C_LCD_SetCursor
  9168                           
  9169                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  9170  0129A8  0E00               	movlw	0
  9171  0129AA  BBA4               	btfsc	_edit_flag& (0+255),5,b
  9172  0129AC  0E01               	movlw	1
  9173  0129AE  0100               	movlb	0	; () banked
  9174  0129B0  6FE0               	movwf	display_dec@edit& (0+255),b
  9175  0129B2  0E14               	movlw	20
  9176  0129B4  EC4F  F0AC         	call	_display_dec
  9177                           
  9178                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  9179  0129B8  0E00               	movlw	0
  9180  0129BA  BBA4               	btfsc	_edit_flag& (0+255),5,b
  9181  0129BC  0E01               	movlw	1
  9182  0129BE  0100               	movlb	0	; () banked
  9183  0129C0  6FE0               	movwf	display_dec@edit& (0+255),b
  9184  0129C2  0100               	movlb	0	; () banked
  9185  0129C4  EE20 F006          	lfsr	2,6
  9186  0129C8  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9187  0129CA  26D9               	addwf	fsr2l,f,c
  9188  0129CC  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9189  0129CE  22DA               	addwfc	fsr2h,f,c
  9190  0129D0  50DF               	movf	indf2,w,c
  9191  0129D2  EC4F  F0AC         	call	_display_dec
  9192                           
  9193                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  9194  0129D6  0E2F               	movlw	47
  9195  0129D8  EC76  F0AE         	call	_I2C_LCD_Putc
  9196                           
  9197                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  9198  0129DC  0E00               	movlw	0
  9199  0129DE  B9A4               	btfsc	_edit_flag& (0+255),4,b
  9200  0129E0  0E01               	movlw	1
  9201  0129E2  0100               	movlb	0	; () banked
  9202  0129E4  6FE0               	movwf	display_dec@edit& (0+255),b
  9203  0129E6  0100               	movlb	0	; () banked
  9204  0129E8  EE20 F005          	lfsr	2,5
  9205  0129EC  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9206  0129EE  26D9               	addwf	fsr2l,f,c
  9207  0129F0  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9208  0129F2  22DA               	addwfc	fsr2h,f,c
  9209  0129F4  50DF               	movf	indf2,w,c
  9210  0129F6  EC4F  F0AC         	call	_display_dec
  9211                           
  9212                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  9213  0129FA  0E2F               	movlw	47
  9214  0129FC  EC76  F0AE         	call	_I2C_LCD_Putc
  9215                           
  9216                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  9217  012A00  0E00               	movlw	0
  9218  012A02  B7A4               	btfsc	_edit_flag& (0+255),3,b
  9219  012A04  0E01               	movlw	1
  9220  012A06  0100               	movlb	0	; () banked
  9221  012A08  6FE0               	movwf	display_dec@edit& (0+255),b
  9222  012A0A  0100               	movlb	0	; () banked
  9223  012A0C  EE20 F004          	lfsr	2,4
  9224  012A10  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9225  012A12  26D9               	addwf	fsr2l,f,c
  9226  012A14  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9227  012A16  22DA               	addwfc	fsr2h,f,c
  9228  012A18  50DF               	movf	indf2,w,c
  9229  012A1A  EC4F  F0AC         	call	_display_dec
  9230                           
  9231                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  9232  012A1E  0E28               	movlw	40
  9233  012A20  EC76  F0AE         	call	_I2C_LCD_Putc
  9234                           
  9235                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  9236  012A24  0100               	movlb	0	; () banked
  9237  012A26  EE20 F003          	lfsr	2,3
  9238  012A2A  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9239  012A2C  26D9               	addwf	fsr2l,f,c
  9240  012A2E  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9241  012A30  22DA               	addwfc	fsr2h,f,c
  9242  012A32  50DF               	movf	indf2,w,c
  9243  012A34  0100               	movlb	0	; () banked
  9244  012A36  6FF0               	movwf	??_display_time_1602& (0+255),b
  9245  012A38  0100               	movlb	0	; () banked
  9246  012A3A  51F0               	movf	??_display_time_1602& (0+255),w,b
  9247  012A3C  0D04               	mullw	4
  9248  012A3E  0E02               	movlw	low _weekday_3char
  9249  012A40  24F3               	addwf	prodl,w,c
  9250  012A42  0100               	movlb	0	; () banked
  9251  012A44  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9252  012A46  0EFC               	movlw	high _weekday_3char
  9253  012A48  20F4               	addwfc	prodh,w,c
  9254  012A4A  0100               	movlb	0	; () banked
  9255  012A4C  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9256  012A4E  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9257                           
  9258                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  9259  012A52  0E29               	movlw	41
  9260  012A54  EC76  F0AE         	call	_I2C_LCD_Putc
  9261                           
  9262                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  9263  012A58  0E01               	movlw	1
  9264  012A5A  0100               	movlb	0	; () banked
  9265  012A5C  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9266  012A5E  0E08               	movlw	8
  9267  012A60  EC90  F0AF         	call	_I2C_LCD_SetCursor
  9268                           
  9269                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  9270  012A64  0E00               	movlw	0
  9271  012A66  B5A4               	btfsc	_edit_flag& (0+255),2,b
  9272  012A68  0E01               	movlw	1
  9273  012A6A  0100               	movlb	0	; () banked
  9274  012A6C  6FE0               	movwf	display_dec@edit& (0+255),b
  9275  012A6E  0100               	movlb	0	; () banked
  9276  012A70  EE20 F002          	lfsr	2,2
  9277  012A74  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9278  012A76  26D9               	addwf	fsr2l,f,c
  9279  012A78  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9280  012A7A  22DA               	addwfc	fsr2h,f,c
  9281  012A7C  50DF               	movf	indf2,w,c
  9282  012A7E  EC4F  F0AC         	call	_display_dec
  9283                           
  9284                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  9285  012A82  0100               	movlb	0	; () banked
  9286  012A84  51A2               	movf	_colon& (0+255),w,b
  9287  012A86  B4D8               	btfsc	status,2,c
  9288  012A88  D004               	goto	l9666
  9289                           
  9290                           ; BSR set to: 0
  9291  012A8A  0E3A               	movlw	58
  9292  012A8C  EC76  F0AE         	call	_I2C_LCD_Putc
  9293  012A90  D003               	goto	l9668
  9294  012A92                     l9666:
  9295                           
  9296                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  9297  012A92  0E20               	movlw	32
  9298  012A94  EC76  F0AE         	call	_I2C_LCD_Putc
  9299  012A98                     l9668:
  9300                           
  9301                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  9302  012A98  0E00               	movlw	0
  9303  012A9A  B3A4               	btfsc	_edit_flag& (0+255),1,b
  9304  012A9C  0E01               	movlw	1
  9305  012A9E  0100               	movlb	0	; () banked
  9306  012AA0  6FE0               	movwf	display_dec@edit& (0+255),b
  9307  012AA2  0100               	movlb	0	; () banked
  9308  012AA4  EE20 F001          	lfsr	2,1
  9309  012AA8  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9310  012AAA  26D9               	addwf	fsr2l,f,c
  9311  012AAC  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9312  012AAE  22DA               	addwfc	fsr2h,f,c
  9313  012AB0  50DF               	movf	indf2,w,c
  9314  012AB2  EC4F  F0AC         	call	_display_dec
  9315                           
  9316                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  9317  012AB6  0E2D               	movlw	45
  9318  012AB8  EC76  F0AE         	call	_I2C_LCD_Putc
  9319                           
  9320                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  9321  012ABC  0E00               	movlw	0
  9322  012ABE  B1A4               	btfsc	_edit_flag& (0+255),0,b
  9323  012AC0  0E01               	movlw	1
  9324  012AC2  0100               	movlb	0	; () banked
  9325  012AC4  6FE0               	movwf	display_dec@edit& (0+255),b
  9326  012AC6  C0EC  FFD9         	movff	display_time_1602@ct,fsr2l
  9327  012ACA  C0ED  FFDA         	movff	display_time_1602@ct+1,fsr2h
  9328  012ACE  50DF               	movf	indf2,w,c
  9329  012AD0  EC4F  F0AC         	call	_display_dec
  9330  012AD4  0012               	return		;funcret
  9331  012AD6                     __end_of_display_time_1602:
  9332                           	opt stack 0
  9333                           tblptru	equ	0xFF8
  9334                           tblptrh	equ	0xFF7
  9335                           tblptrl	equ	0xFF6
  9336                           tablat	equ	0xFF5
  9337                           prodh	equ	0xFF4
  9338                           prodl	equ	0xFF3
  9339                           intcon	equ	0xFF2
  9340                           postinc0	equ	0xFEE
  9341                           wreg	equ	0xFE8
  9342                           indf1	equ	0xFE7
  9343                           postinc1	equ	0xFE6
  9344                           postdec1	equ	0xFE5
  9345                           fsr1h	equ	0xFE2
  9346                           fsr1l	equ	0xFE1
  9347                           indf2	equ	0xFDF
  9348                           postinc2	equ	0xFDE
  9349                           postdec2	equ	0xFDD
  9350                           fsr2h	equ	0xFDA
  9351                           fsr2l	equ	0xFD9
  9352                           status	equ	0xFD8
  9353                           
  9354 ;; *************** function _display_dec *****************
  9355 ;; Defined at:
  9356 ;;		line 251 in file "../My_header\My_RTCC.h"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  dec             1    wreg     unsigned char 
  9359 ;;  edit            1   43[BANK0 ] unsigned char 
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  dec             1   54[BANK0 ] unsigned char 
  9362 ;;  str            10   44[BANK0 ] unsigned char [10]
  9363 ;; Return value:  Size  Location     Type
  9364 ;;		None               void
  9365 ;; Registers used:
  9366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9372 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9375 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9376 ;;Total ram usage:       12 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:   14
  9379 ;; This function calls:
  9380 ;;		_I2C_LCD_Puts
  9381 ;;		_my_utoa
  9382 ;; This function is called by:
  9383 ;;		_display_time_1602
  9384 ;;		_display_time_0802
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text22
  9389  01589E                     __ptext22:
  9390                           	opt stack 0
  9391  01589E                     _display_dec:
  9392                           	opt stack 13
  9393                           
  9394                           ;incstack = 0
  9395                           ;display_dec@dec stored from wreg
  9396  01589E  0100               	movlb	0	; () banked
  9397  0158A0  6FEB               	movwf	display_dec@dec& (0+255),b
  9398                           
  9399                           ;My_header\My_RTCC.h: 252: char str[10];
  9400                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  9401  0158A2  0EE1               	movlw	low display_dec@str
  9402  0158A4  0100               	movlb	0	; () banked
  9403  0158A6  6FD8               	movwf	my_utoa@str& (0+255),b
  9404  0158A8  0E00               	movlw	high display_dec@str
  9405  0158AA  0100               	movlb	0	; () banked
  9406  0158AC  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  9407  0158AE  C0EB  F0DA         	movff	display_dec@dec,my_utoa@value
  9408  0158B2  0100               	movlb	0	; () banked
  9409  0158B4  6BDB               	clrf	(my_utoa@value+1)& (0+255),b
  9410  0158B6  0E02               	movlw	2
  9411  0158B8  0100               	movlb	0	; () banked
  9412  0158BA  6FDC               	movwf	my_utoa@digits& (0+255),b
  9413  0158BC  EC53  F0A9         	call	_my_utoa	;wreg free
  9414                           
  9415                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  9416  0158C0  0100               	movlb	0	; () banked
  9417  0158C2  51E0               	movf	display_dec@edit& (0+255),w,b
  9418  0158C4  0100               	movlb	0	; () banked
  9419  0158C6  B4D8               	btfsc	status,2,c
  9420  0158C8  D00D               	goto	l9496
  9421                           
  9422                           ; BSR set to: 0
  9423  0158CA  0100               	movlb	0	; () banked
  9424  0158CC  51A5               	movf	_halfsec& (0+255),w,b
  9425  0158CE  B4D8               	btfsc	status,2,c
  9426  0158D0  D009               	goto	l9496
  9427                           
  9428                           ; BSR set to: 0
  9429  0158D2  0EDB               	movlw	low STR_1
  9430  0158D4  0100               	movlb	0	; () banked
  9431  0158D6  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9432  0158D8  0EFF               	movlw	high STR_1
  9433  0158DA  0100               	movlb	0	; () banked
  9434  0158DC  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9435  0158DE  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9436  0158E2  0012               	return	
  9437  0158E4                     l9496:
  9438                           
  9439                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  9440  0158E4  0EE1               	movlw	low display_dec@str
  9441  0158E6  0100               	movlb	0	; () banked
  9442  0158E8  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9443  0158EA  0E00               	movlw	high display_dec@str
  9444  0158EC  0100               	movlb	0	; () banked
  9445  0158EE  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9446  0158F0  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9447  0158F4  0012               	return	
  9448  0158F6                     __end_of_display_dec:
  9449                           	opt stack 0
  9450                           tblptru	equ	0xFF8
  9451                           tblptrh	equ	0xFF7
  9452                           tblptrl	equ	0xFF6
  9453                           tablat	equ	0xFF5
  9454                           prodh	equ	0xFF4
  9455                           prodl	equ	0xFF3
  9456                           intcon	equ	0xFF2
  9457                           postinc0	equ	0xFEE
  9458                           wreg	equ	0xFE8
  9459                           indf1	equ	0xFE7
  9460                           postinc1	equ	0xFE6
  9461                           postdec1	equ	0xFE5
  9462                           fsr1h	equ	0xFE2
  9463                           fsr1l	equ	0xFE1
  9464                           indf2	equ	0xFDF
  9465                           postinc2	equ	0xFDE
  9466                           postdec2	equ	0xFDD
  9467                           fsr2h	equ	0xFDA
  9468                           fsr2l	equ	0xFD9
  9469                           status	equ	0xFD8
  9470                           
  9471 ;; *************** function _my_utoa *****************
  9472 ;; Defined at:
  9473 ;;		line 11 in file "../My_header\My_stdlib.h"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  str             2   35[BANK0 ] PTR unsigned char 
  9476 ;;		 -> comm_disp@str(10), tx_send_dec@str(10), display_LCD@str(10), display_dec@str(10), 
  9477 ;;  value           2   37[BANK0 ] unsigned int 
  9478 ;;  digits          1   39[BANK0 ] unsigned char 
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  v               2   41[BANK0 ] unsigned int 
  9481 ;;  d               1   40[BANK0 ] unsigned char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;		None               void
  9484 ;; Registers used:
  9485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9491 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9492 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;Total ram usage:        8 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:   12
  9498 ;; This function calls:
  9499 ;;		___lwdiv
  9500 ;;		___lwmod
  9501 ;; This function is called by:
  9502 ;;		_display_dec
  9503 ;;		_display_LCD
  9504 ;;		_tx_send_dec
  9505 ;;		_comm_disp
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text23
  9510  0152A6                     __ptext23:
  9511                           	opt stack 0
  9512  0152A6                     _my_utoa:
  9513                           	opt stack 14
  9514                           
  9515                           ;My_header\My_stdlib.h: 12: uint16_t v;
  9516                           ;My_header\My_stdlib.h: 13: uint8_t d;
  9517                           ;My_header\My_stdlib.h: 14: while (digits--) {
  9518                           
  9519                           ;incstack = 0
  9520  0152A6  D036               	goto	l9250
  9521  0152A8                     l455:
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;My_header\My_stdlib.h: 15: v = value;
  9525  0152A8  C0DA  F0DE         	movff	my_utoa@value,my_utoa@v
  9526  0152AC  C0DB  F0DF         	movff	my_utoa@value+1,my_utoa@v+1
  9527                           
  9528                           ;My_header\My_stdlib.h: 16: d = digits;
  9529  0152B0  C0DC  F0DD         	movff	my_utoa@digits,my_utoa@d
  9530                           
  9531                           ;My_header\My_stdlib.h: 17: while (d--) {
  9532  0152B4  D00F               	goto	l9242
  9533  0152B6                     l9240:
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;My_header\My_stdlib.h: 18: v /= 10;
  9537  0152B6  C0DE  F0D1         	movff	my_utoa@v,___lwdiv@dividend
  9538  0152BA  C0DF  F0D2         	movff	my_utoa@v+1,___lwdiv@dividend+1
  9539  0152BE  0E00               	movlw	0
  9540  0152C0  0100               	movlb	0	; () banked
  9541  0152C2  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9542  0152C4  0E0A               	movlw	10
  9543  0152C6  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  9544  0152C8  EC1A  F0AA         	call	___lwdiv	;wreg free
  9545  0152CC  C0D1  F0DE         	movff	?___lwdiv,my_utoa@v
  9546  0152D0  C0D2  F0DF         	movff	?___lwdiv+1,my_utoa@v+1
  9547  0152D4                     l9242:
  9548  0152D4  0100               	movlb	0	; () banked
  9549  0152D6  07DD               	decf	my_utoa@d& (0+255),f,b
  9550  0152D8  0100               	movlb	0	; () banked
  9551  0152DA  29DD               	incf	my_utoa@d& (0+255),w,b
  9552  0152DC  A4D8               	btfss	status,2,c
  9553  0152DE  D7EB               	goto	l9240
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;My_header\My_stdlib.h: 19: }
  9557                           ;My_header\My_stdlib.h: 20: v %= 10;
  9558                           
  9559                           ; BSR set to: 0
  9560  0152E0  C0DE  F0B5         	movff	my_utoa@v,___lwmod@dividend
  9561  0152E4  C0DF  F0B6         	movff	my_utoa@v+1,___lwmod@dividend+1
  9562  0152E8  0E00               	movlw	0
  9563  0152EA  0100               	movlb	0	; () banked
  9564  0152EC  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  9565  0152EE  0E0A               	movlw	10
  9566  0152F0  6FB7               	movwf	___lwmod@divisor& (0+255),b
  9567  0152F2  EC39  F0AB         	call	___lwmod	;wreg free
  9568  0152F6  C0B5  F0DE         	movff	?___lwmod,my_utoa@v
  9569  0152FA  C0B6  F0DF         	movff	?___lwmod+1,my_utoa@v+1
  9570                           
  9571                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  9572  0152FE  0100               	movlb	0	; () banked
  9573  015300  51DE               	movf	my_utoa@v& (0+255),w,b
  9574  015302  0F30               	addlw	48
  9575  015304  C0D8  FFD9         	movff	my_utoa@str,fsr2l
  9576  015308  C0D9  FFDA         	movff	my_utoa@str+1,fsr2h
  9577  01530C  6EDF               	movwf	indf2,c
  9578                           
  9579                           ; BSR set to: 0
  9580  01530E  0100               	movlb	0	; () banked
  9581  015310  4BD8               	infsnz	my_utoa@str& (0+255),f,b
  9582  015312  2BD9               	incf	(my_utoa@str+1)& (0+255),f,b
  9583  015314                     l9250:
  9584  015314  0100               	movlb	0	; () banked
  9585  015316  07DC               	decf	my_utoa@digits& (0+255),f,b
  9586  015318  0100               	movlb	0	; () banked
  9587  01531A  29DC               	incf	my_utoa@digits& (0+255),w,b
  9588  01531C  A4D8               	btfss	status,2,c
  9589  01531E  D7C4               	goto	l455
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;My_header\My_stdlib.h: 22: }
  9593                           ;My_header\My_stdlib.h: 23: *str = '\0';
  9594                           
  9595                           ; BSR set to: 0
  9596  015320  C0D8  FFD9         	movff	my_utoa@str,fsr2l
  9597  015324  C0D9  FFDA         	movff	my_utoa@str+1,fsr2h
  9598  015328  0E00               	movlw	0
  9599  01532A  6EDF               	movwf	indf2,c
  9600                           
  9601                           ; BSR set to: 0
  9602  01532C  0012               	return		;funcret
  9603  01532E                     __end_of_my_utoa:
  9604                           	opt stack 0
  9605                           tblptru	equ	0xFF8
  9606                           tblptrh	equ	0xFF7
  9607                           tblptrl	equ	0xFF6
  9608                           tablat	equ	0xFF5
  9609                           prodh	equ	0xFF4
  9610                           prodl	equ	0xFF3
  9611                           intcon	equ	0xFF2
  9612                           postinc0	equ	0xFEE
  9613                           wreg	equ	0xFE8
  9614                           indf1	equ	0xFE7
  9615                           postinc1	equ	0xFE6
  9616                           postdec1	equ	0xFE5
  9617                           fsr1h	equ	0xFE2
  9618                           fsr1l	equ	0xFE1
  9619                           indf2	equ	0xFDF
  9620                           postinc2	equ	0xFDE
  9621                           postdec2	equ	0xFDD
  9622                           fsr2h	equ	0xFDA
  9623                           fsr2l	equ	0xFD9
  9624                           status	equ	0xFD8
  9625                           
  9626 ;; *************** function ___lwmod *****************
  9627 ;; Defined at:
  9628 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  dividend        2    0[BANK0 ] unsigned int 
  9631 ;;  divisor         2    2[BANK0 ] unsigned int 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  counter         1    4[BANK0 ] unsigned char 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  2    0[BANK0 ] unsigned int 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9646 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9647 ;;Total ram usage:        5 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:   11
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_tx_sendn
  9654 ;;		_my_utoa
  9655 ;;		_display_LCD
  9656 ;;		_comm_disp
  9657 ;;		_ringbuf_put_num
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           	psect	text24
  9662  015672                     __ptext24:
  9663                           	opt stack 0
  9664  015672                     ___lwmod:
  9665                           	opt stack 17
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;incstack = 0
  9669  015672  0100               	movlb	0	; () banked
  9670  015674  51B7               	movf	___lwmod@divisor& (0+255),w,b
  9671  015676  0100               	movlb	0	; () banked
  9672  015678  11B8               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9673  01567A  B4D8               	btfsc	status,2,c
  9674  01567C  D026               	goto	l1915
  9675                           
  9676                           ; BSR set to: 0
  9677  01567E  0E01               	movlw	1
  9678  015680  0100               	movlb	0	; () banked
  9679  015682  6FB9               	movwf	___lwmod@counter& (0+255),b
  9680  015684  D006               	goto	l9168
  9681  015686                     l9166:
  9682                           
  9683                           ; BSR set to: 0
  9684  015686  0100               	movlb	0	; () banked
  9685  015688  90D8               	bcf	status,0,c
  9686  01568A  37B7               	rlcf	___lwmod@divisor& (0+255),f,b
  9687  01568C  37B8               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9688  01568E  0100               	movlb	0	; () banked
  9689  015690  2BB9               	incf	___lwmod@counter& (0+255),f,b
  9690  015692                     l9168:
  9691                           
  9692                           ; BSR set to: 0
  9693  015692  0100               	movlb	0	; () banked
  9694  015694  AFB8               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9695  015696  D7F7               	goto	l9166
  9696  015698                     l9170:
  9697                           
  9698                           ; BSR set to: 0
  9699  015698  0100               	movlb	0	; () banked
  9700  01569A  51B7               	movf	___lwmod@divisor& (0+255),w,b
  9701  01569C  0100               	movlb	0	; () banked
  9702  01569E  5DB5               	subwf	___lwmod@dividend& (0+255),w,b
  9703  0156A0  0100               	movlb	0	; () banked
  9704  0156A2  51B8               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9705  0156A4  0100               	movlb	0	; () banked
  9706  0156A6  59B6               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9707  0156A8  A0D8               	btfss	status,0,c
  9708  0156AA  D008               	goto	l9174
  9709                           
  9710                           ; BSR set to: 0
  9711  0156AC  0100               	movlb	0	; () banked
  9712  0156AE  51B7               	movf	___lwmod@divisor& (0+255),w,b
  9713  0156B0  0100               	movlb	0	; () banked
  9714  0156B2  5FB5               	subwf	___lwmod@dividend& (0+255),f,b
  9715  0156B4  0100               	movlb	0	; () banked
  9716  0156B6  51B8               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9717  0156B8  0100               	movlb	0	; () banked
  9718  0156BA  5BB6               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9719  0156BC                     l9174:
  9720                           
  9721                           ; BSR set to: 0
  9722  0156BC  0100               	movlb	0	; () banked
  9723  0156BE  90D8               	bcf	status,0,c
  9724  0156C0  33B8               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9725  0156C2  33B7               	rrcf	___lwmod@divisor& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  0156C4  0100               	movlb	0	; () banked
  9729  0156C6  2FB9               	decfsz	___lwmod@counter& (0+255),f,b
  9730  0156C8  D7E7               	goto	l9170
  9731  0156CA                     l1915:
  9732                           
  9733                           ; BSR set to: 0
  9734  0156CA  C0B5  F0B5         	movff	___lwmod@dividend,?___lwmod
  9735  0156CE  C0B6  F0B6         	movff	___lwmod@dividend+1,?___lwmod+1
  9736                           
  9737                           ; BSR set to: 0
  9738  0156D2  0012               	return		;funcret
  9739  0156D4                     __end_of___lwmod:
  9740                           	opt stack 0
  9741                           tblptru	equ	0xFF8
  9742                           tblptrh	equ	0xFF7
  9743                           tblptrl	equ	0xFF6
  9744                           tablat	equ	0xFF5
  9745                           prodh	equ	0xFF4
  9746                           prodl	equ	0xFF3
  9747                           intcon	equ	0xFF2
  9748                           postinc0	equ	0xFEE
  9749                           wreg	equ	0xFE8
  9750                           indf1	equ	0xFE7
  9751                           postinc1	equ	0xFE6
  9752                           postdec1	equ	0xFE5
  9753                           fsr1h	equ	0xFE2
  9754                           fsr1l	equ	0xFE1
  9755                           indf2	equ	0xFDF
  9756                           postinc2	equ	0xFDE
  9757                           postdec2	equ	0xFDD
  9758                           fsr2h	equ	0xFDA
  9759                           fsr2l	equ	0xFD9
  9760                           status	equ	0xFD8
  9761                           
  9762 ;; *************** function _I2C_LCD_Putc *****************
  9763 ;; Defined at:
  9764 ;;		line 118 in file "../My_header\My_I2C.h"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  c               1    wreg     unsigned char 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  c               1    4[BANK0 ] unsigned char 
  9769 ;;  ans             1    5[BANK0 ] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;		None               void
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9780 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9783 ;;Total ram usage:        2 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:   13
  9786 ;; This function calls:
  9787 ;;		_I2C_Send
  9788 ;;		_I2C_Start
  9789 ;;		_I2C_Stop
  9790 ;; This function is called by:
  9791 ;;		_display_time_1602
  9792 ;;		_display_LCD
  9793 ;;		_display_time_0802
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           	psect	text25
  9798  015CEC                     __ptext25:
  9799                           	opt stack 0
  9800  015CEC                     _I2C_LCD_Putc:
  9801                           	opt stack 14
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;incstack = 0
  9805                           ;I2C_LCD_Putc@c stored from wreg
  9806  015CEC  0100               	movlb	0	; () banked
  9807  015CEE  6FB9               	movwf	I2C_LCD_Putc@c& (0+255),b
  9808                           
  9809                           ;My_header\My_I2C.h: 119: uint8_t ans;
  9810                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  9811  015CF0  0E00               	movlw	0
  9812  015CF2  0100               	movlb	0	; () banked
  9813  015CF4  6FB7               	movwf	I2C_Start@rw& (0+255),b
  9814  015CF6  0E3E               	movlw	62
  9815  015CF8  EC33  F0AF         	call	_I2C_Start
  9816  015CFC  0100               	movlb	0	; () banked
  9817  015CFE  6FBA               	movwf	I2C_LCD_Putc@ans& (0+255),b
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  9821  015D00  0100               	movlb	0	; () banked
  9822  015D02  51BA               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  9823  015D04  0100               	movlb	0	; () banked
  9824  015D06  A4D8               	btfss	status,2,c
  9825  015D08  D007               	goto	l355
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  9829  015D0A  0EC0               	movlw	192
  9830  015D0C  ECEE  F0B0         	call	_I2C_Send
  9831                           
  9832                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  9833  015D10  0100               	movlb	0	; () banked
  9834  015D12  51B9               	movf	I2C_LCD_Putc@c& (0+255),w,b
  9835  015D14  ECEE  F0B0         	call	_I2C_Send
  9836  015D18                     l355:
  9837                           
  9838                           ;My_header\My_I2C.h: 126: }
  9839                           ;My_header\My_I2C.h: 127: I2C_Stop();
  9840  015D18  EC13  F0B1         	call	_I2C_Stop	;wreg free
  9841                           
  9842                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9843  015D1C  0E68               	movlw	104
  9844  015D1E                     u12767:
  9845  015D1E  2EE8               	decfsz	wreg,f,c
  9846  015D20  D7FE               	goto	u12767
  9847  015D22  0012               	return		;funcret
  9848  015D24                     __end_of_I2C_LCD_Putc:
  9849                           	opt stack 0
  9850                           tblptru	equ	0xFF8
  9851                           tblptrh	equ	0xFF7
  9852                           tblptrl	equ	0xFF6
  9853                           tablat	equ	0xFF5
  9854                           prodh	equ	0xFF4
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           postinc0	equ	0xFEE
  9858                           wreg	equ	0xFE8
  9859                           indf1	equ	0xFE7
  9860                           postinc1	equ	0xFE6
  9861                           postdec1	equ	0xFE5
  9862                           fsr1h	equ	0xFE2
  9863                           fsr1l	equ	0xFE1
  9864                           indf2	equ	0xFDF
  9865                           postinc2	equ	0xFDE
  9866                           postdec2	equ	0xFDD
  9867                           fsr2h	equ	0xFDA
  9868                           fsr2l	equ	0xFD9
  9869                           status	equ	0xFD8
  9870                           
  9871 ;; *************** function _display_port *****************
  9872 ;; Defined at:
  9873 ;;		line 147 in file "tasks.h"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;		None               void
  9880 ;; Registers used:
  9881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:   15
  9894 ;; This function calls:
  9895 ;;		_I2C_LCD_Puts
  9896 ;;		_I2C_LCD_SetCursor
  9897 ;; This function is called by:
  9898 ;;		_display_LCD
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text26
  9903  013C94                     __ptext26:
  9904                           	opt stack 0
  9905  013C94                     _display_port:
  9906                           	opt stack 13
  9907                           
  9908                           ;tasks.h: 148: I2C_LCD_SetCursor(0, 0);
  9909                           
  9910                           ;incstack = 0
  9911  013C94  0E00               	movlw	0
  9912  013C96  0100               	movlb	0	; () banked
  9913  013C98  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9914  013C9A  0E00               	movlw	0
  9915  013C9C  EC90  F0AF         	call	_I2C_LCD_SetCursor
  9916                           
  9917                           ;tasks.h: 149: switch (print_port) {
  9918  013CA0  D05A               	goto	l9852
  9919  013CA2                     l9832:
  9920                           
  9921                           ;tasks.h: 151: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Left Port");
  9922  013CA2  0100               	movlb	0	; () banked
  9923  013CA4  51A7               	movf	_print_port& (0+255),w,b
  9924  013CA6  0D01               	mullw	1
  9925  013CA8  0E87               	movlw	low _auto_cut_ON
  9926  013CAA  24F3               	addwf	prodl,w,c
  9927  013CAC  6ED9               	movwf	fsr2l,c
  9928  013CAE  0E00               	movlw	high _auto_cut_ON
  9929  013CB0  20F4               	addwfc	prodh,w,c
  9930  013CB2  6EDA               	movwf	fsr2h,c
  9931  013CB4  50DF               	movf	indf2,w,c
  9932  013CB6  B4D8               	btfsc	status,2,c
  9933  013CB8  D009               	goto	l9836
  9934                           
  9935                           ; BSR set to: 0
  9936  013CBA  0E6B               	movlw	low STR_2
  9937  013CBC  0100               	movlb	0	; () banked
  9938  013CBE  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9939  013CC0  0EFF               	movlw	high STR_2
  9940  013CC2  0100               	movlb	0	; () banked
  9941  013CC4  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9942  013CC6  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9943  013CCA  0012               	return	
  9944  013CCC                     l9836:
  9945                           
  9946                           ;tasks.h: 152: else I2C_LCD_Puts("LEFT PORT");
  9947  013CCC  0E57               	movlw	low STR_3
  9948  013CCE  0100               	movlb	0	; () banked
  9949  013CD0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9950  013CD2  0EFF               	movlw	high STR_3
  9951  013CD4  0100               	movlb	0	; () banked
  9952  013CD6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9953  013CD8  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9954                           
  9955                           ;tasks.h: 153: break;
  9956  013CDC  0012               	return	
  9957  013CDE                     l9838:
  9958                           
  9959                           ;tasks.h: 155: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Center Port");
  9960  013CDE  0100               	movlb	0	; () banked
  9961  013CE0  51A7               	movf	_print_port& (0+255),w,b
  9962  013CE2  0D01               	mullw	1
  9963  013CE4  0E87               	movlw	low _auto_cut_ON
  9964  013CE6  24F3               	addwf	prodl,w,c
  9965  013CE8  6ED9               	movwf	fsr2l,c
  9966  013CEA  0E00               	movlw	high _auto_cut_ON
  9967  013CEC  20F4               	addwfc	prodh,w,c
  9968  013CEE  6EDA               	movwf	fsr2h,c
  9969  013CF0  50DF               	movf	indf2,w,c
  9970  013CF2  B4D8               	btfsc	status,2,c
  9971  013CF4  D009               	goto	l9842
  9972                           
  9973                           ; BSR set to: 0
  9974  013CF6  0E1F               	movlw	low STR_4
  9975  013CF8  0100               	movlb	0	; () banked
  9976  013CFA  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9977  013CFC  0EFF               	movlw	high STR_4
  9978  013CFE  0100               	movlb	0	; () banked
  9979  013D00  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9980  013D02  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9981  013D06  0012               	return	
  9982  013D08                     l9842:
  9983                           
  9984                           ;tasks.h: 156: else I2C_LCD_Puts("CENTER PORT");
  9985  013D08  0E07               	movlw	low STR_5
  9986  013D0A  0100               	movlb	0	; () banked
  9987  013D0C  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9988  013D0E  0EFF               	movlw	high STR_5
  9989  013D10  0100               	movlb	0	; () banked
  9990  013D12  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9991  013D14  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
  9992                           
  9993                           ;tasks.h: 157: break;
  9994  013D18  0012               	return	
  9995  013D1A                     l9844:
  9996                           
  9997                           ;tasks.h: 159: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Right Port");
  9998  013D1A  0100               	movlb	0	; () banked
  9999  013D1C  51A7               	movf	_print_port& (0+255),w,b
 10000  013D1E  0D01               	mullw	1
 10001  013D20  0E87               	movlw	low _auto_cut_ON
 10002  013D22  24F3               	addwf	prodl,w,c
 10003  013D24  6ED9               	movwf	fsr2l,c
 10004  013D26  0E00               	movlw	high _auto_cut_ON
 10005  013D28  20F4               	addwfc	prodh,w,c
 10006  013D2A  6EDA               	movwf	fsr2h,c
 10007  013D2C  50DF               	movf	indf2,w,c
 10008  013D2E  B4D8               	btfsc	status,2,c
 10009  013D30  D009               	goto	l9848
 10010                           
 10011                           ; BSR set to: 0
 10012  013D32  0E4C               	movlw	low STR_6
 10013  013D34  0100               	movlb	0	; () banked
 10014  013D36  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10015  013D38  0EFF               	movlw	high STR_6
 10016  013D3A  0100               	movlb	0	; () banked
 10017  013D3C  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10018  013D3E  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
 10019  013D42  0012               	return	
 10020  013D44                     l9848:
 10021                           
 10022                           ;tasks.h: 160: else I2C_LCD_Puts("RIGHT PORT");
 10023  013D44  0E2B               	movlw	low STR_7
 10024  013D46  0100               	movlb	0	; () banked
 10025  013D48  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10026  013D4A  0EFF               	movlw	high STR_7
 10027  013D4C  0100               	movlb	0	; () banked
 10028  013D4E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10029  013D50  ECC5  F0A8         	call	_I2C_LCD_Puts	;wreg free
 10030                           
 10031                           ;tasks.h: 162: }
 10032                           
 10033                           ;tasks.h: 161: break;
 10034  013D54  0012               	return	
 10035  013D56                     l9852:
 10036  013D56  0100               	movlb	0	; () banked
 10037  013D58  51A7               	movf	_print_port& (0+255),w,b
 10038                           
 10039                           ; Switch size 1, requested type "space"
 10040                           ; Number of cases is 3, Range of values is 0 to 2
 10041                           ; switch strategies available:
 10042                           ; Name         Instructions Cycles
 10043                           ; simple_byte           10     6 (average)
 10044                           ;	Chosen strategy is simple_byte
 10045  013D5A  0A00               	xorlw	0	; case 0
 10046  013D5C  B4D8               	btfsc	status,2,c
 10047  013D5E  D7A1               	goto	l9832
 10048  013D60  0A01               	xorlw	1	; case 1
 10049  013D62  B4D8               	btfsc	status,2,c
 10050  013D64  D7BC               	goto	l9838
 10051  013D66  0A03               	xorlw	3	; case 2
 10052  013D68  A4D8               	btfss	status,2,c
 10053  013D6A  0012               	return	
 10054  013D6C  D7D6               	goto	l9844
 10055  013D6E                     __end_of_display_port:
 10056                           	opt stack 0
 10057                           tblptru	equ	0xFF8
 10058                           tblptrh	equ	0xFF7
 10059                           tblptrl	equ	0xFF6
 10060                           tablat	equ	0xFF5
 10061                           prodh	equ	0xFF4
 10062                           prodl	equ	0xFF3
 10063                           intcon	equ	0xFF2
 10064                           postinc0	equ	0xFEE
 10065                           wreg	equ	0xFE8
 10066                           indf1	equ	0xFE7
 10067                           postinc1	equ	0xFE6
 10068                           postdec1	equ	0xFE5
 10069                           fsr1h	equ	0xFE2
 10070                           fsr1l	equ	0xFE1
 10071                           indf2	equ	0xFDF
 10072                           postinc2	equ	0xFDE
 10073                           postdec2	equ	0xFDD
 10074                           fsr2h	equ	0xFDA
 10075                           fsr2l	equ	0xFD9
 10076                           status	equ	0xFD8
 10077                           
 10078 ;; *************** function _I2C_LCD_SetCursor *****************
 10079 ;; Defined at:
 10080 ;;		line 112 in file "../My_header\My_I2C.h"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  col             1    wreg     unsigned char 
 10083 ;;  row             1    6[BANK0 ] unsigned char 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  col             1    9[BANK0 ] unsigned char 
 10086 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 10087 ;; Return value:  Size  Location     Type
 10088 ;;		None               void
 10089 ;; Registers used:
 10090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10096 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10097 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10099 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10100 ;;Total ram usage:        4 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; Hardware stack levels required when called:   14
 10103 ;; This function calls:
 10104 ;;		_I2C_LCD_Command
 10105 ;; This function is called by:
 10106 ;;		_display_time_1602
 10107 ;;		_display_port
 10108 ;;		_display_LCD
 10109 ;;		_display_time_0802
 10110 ;;		_sleep_loop
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text27
 10115  015F20                     __ptext27:
 10116                           	opt stack 0
 10117  015F20                     _I2C_LCD_SetCursor:
 10118                           	opt stack 13
 10119                           
 10120                           ;incstack = 0
 10121                           ;I2C_LCD_SetCursor@col stored from wreg
 10122  015F20  0100               	movlb	0	; () banked
 10123  015F22  6FBE               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 10124                           
 10125                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
 10126  015F24  C1FD  F0BC         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
 10127  015F28  C1FE  F0BD         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
 10128                           
 10129                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 10130  015F2C  0100               	movlb	0	; () banked
 10131  015F2E  51BB               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 10132  015F30  0D01               	mullw	1
 10133  015F32  0EBC               	movlw	low I2C_LCD_SetCursor@row_offsets
 10134  015F34  24F3               	addwf	prodl,w,c
 10135  015F36  6ED9               	movwf	fsr2l,c
 10136  015F38  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 10137  015F3A  20F4               	addwfc	prodh,w,c
 10138  015F3C  6EDA               	movwf	fsr2h,c
 10139  015F3E  50DF               	movf	indf2,w,c
 10140  015F40  0100               	movlb	0	; () banked
 10141  015F42  25BE               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 10142  015F44  0980               	iorlw	128
 10143  015F46  ECAE  F0AE         	call	_I2C_LCD_Command
 10144  015F4A  0012               	return		;funcret
 10145  015F4C                     __end_of_I2C_LCD_SetCursor:
 10146                           	opt stack 0
 10147                           tblptru	equ	0xFF8
 10148                           tblptrh	equ	0xFF7
 10149                           tblptrl	equ	0xFF6
 10150                           tablat	equ	0xFF5
 10151                           prodh	equ	0xFF4
 10152                           prodl	equ	0xFF3
 10153                           intcon	equ	0xFF2
 10154                           postinc0	equ	0xFEE
 10155                           wreg	equ	0xFE8
 10156                           indf1	equ	0xFE7
 10157                           postinc1	equ	0xFE6
 10158                           postdec1	equ	0xFE5
 10159                           fsr1h	equ	0xFE2
 10160                           fsr1l	equ	0xFE1
 10161                           indf2	equ	0xFDF
 10162                           postinc2	equ	0xFDE
 10163                           postdec2	equ	0xFDD
 10164                           fsr2h	equ	0xFDA
 10165                           fsr2l	equ	0xFD9
 10166                           status	equ	0xFD8
 10167                           
 10168 ;; *************** function _I2C_LCD_Puts *****************
 10169 ;; Defined at:
 10170 ;;		line 131 in file "../My_header\My_I2C.h"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 10173 ;;		 -> STR_94(9), STR_93(17), STR_21(14), STR_20(13), 
 10174 ;;		 -> STR_19(16), STR_18(17), STR_17(17), STR_16(16), 
 10175 ;;		 -> STR_15(2), STR_14(3), STR_13(3), STR_12(3), 
 10176 ;;		 -> STR_11(4), display_LCD@str(10), STR_10(15), STR_9(13), 
 10177 ;;		 -> STR_8(17), STR_7(11), STR_6(11), STR_5(12), 
 10178 ;;		 -> STR_4(12), STR_3(10), STR_2(10), weekday_3char(28), 
 10179 ;;		 -> STR_1(3), display_dec@str(10), 
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;  ans             2    7[BANK0 ] int 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;		None               void
 10184 ;; Registers used:
 10185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10186 ;; Tracked objects:
 10187 ;;		On entry : 0/0
 10188 ;;		On exit  : 0/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;Total ram usage:        5 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:   13
 10198 ;; This function calls:
 10199 ;;		_I2C_Send
 10200 ;;		_I2C_Start
 10201 ;;		_I2C_Stop
 10202 ;; This function is called by:
 10203 ;;		_display_dec
 10204 ;;		_display_time_1602
 10205 ;;		_display_port
 10206 ;;		_display_LCD
 10207 ;;		_display_time_0802
 10208 ;;		_sleep_loop
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text28
 10213  01518A                     __ptext28:
 10214                           	opt stack 0
 10215  01518A                     _I2C_LCD_Puts:
 10216                           	opt stack 13
 10217                           
 10218                           ;My_header\My_I2C.h: 132: int ans;
 10219                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
 10220                           
 10221                           ;incstack = 0
 10222  01518A  0E00               	movlw	0
 10223  01518C  0100               	movlb	0	; () banked
 10224  01518E  6FB7               	movwf	I2C_Start@rw& (0+255),b
 10225  015190  0E3E               	movlw	62
 10226  015192  EC33  F0AF         	call	_I2C_Start
 10227  015196  0100               	movlb	0	; () banked
 10228  015198  6FBB               	movwf	??_I2C_LCD_Puts& (0+255),b
 10229  01519A  0100               	movlb	0	; () banked
 10230  01519C  51BB               	movf	??_I2C_LCD_Puts& (0+255),w,b
 10231  01519E  0100               	movlb	0	; () banked
 10232  0151A0  6FBC               	movwf	I2C_LCD_Puts@ans& (0+255),b
 10233  0151A2  6BBD               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;My_header\My_I2C.h: 135: if (ans == 0) {
 10237  0151A4  0100               	movlb	0	; () banked
 10238  0151A6  51BC               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 10239  0151A8  0100               	movlb	0	; () banked
 10240  0151AA  11BD               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 10241  0151AC  A4D8               	btfss	status,2,c
 10242  0151AE  D031               	goto	l9280
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
 10246  0151B0  0E40               	movlw	64
 10247  0151B2  ECEE  F0B0         	call	_I2C_Send
 10248                           
 10249                           ;My_header\My_I2C.h: 137: while (*s) {
 10250  0151B6  D019               	goto	l9278
 10251  0151B8                     l9272:
 10252                           
 10253                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
 10254  0151B8  C0B9  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10255  0151BC  C0BA  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10256  0151C0  0E00               	movlw	low (__mediumconst shr (0+16))
 10257  0151C2  6EF8               	movwf	tblptru,c
 10258  0151C4  0E0E               	movlw	(high __ramtop+-1)
 10259  0151C6  64F7               	cpfsgt	tblptrh,c
 10260  0151C8  D003               	bra	u10067
 10261  0151CA  0008               	tblrd		*
 10262  0151CC  50F5               	movf	tablat,w,c
 10263  0151CE  D005               	bra	u10060
 10264  0151D0                     u10067:
 10265  0151D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10266  0151D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10267  0151D8  50E7               	movf	indf1,w,c
 10268  0151DA                     u10060:
 10269  0151DA  ECEE  F0B0         	call	_I2C_Send
 10270  0151DE  0100               	movlb	0	; () banked
 10271  0151E0  4BB9               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 10272  0151E2  2BBA               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10276  0151E4  0E68               	movlw	104
 10277  0151E6                     u12777:
 10278  0151E6  2EE8               	decfsz	wreg,f,c
 10279  0151E8  D7FE               	goto	u12777
 10280  0151EA                     l9278:
 10281  0151EA  C0B9  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10282  0151EE  C0BA  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10283  0151F2  0E00               	movlw	low (__mediumconst shr (0+16))
 10284  0151F4  6EF8               	movwf	tblptru,c
 10285  0151F6  0E0E               	movlw	(high __ramtop+-1)
 10286  0151F8  64F7               	cpfsgt	tblptrh,c
 10287  0151FA  D003               	bra	u10077
 10288  0151FC  0008               	tblrd		*
 10289  0151FE  50F5               	movf	tablat,w,c
 10290  015200  D005               	bra	u10070
 10291  015202                     u10077:
 10292  015202  CFF6 FFE1          	movff	tblptrl,fsr1l
 10293  015206  CFF7 FFE2          	movff	tblptrh,fsr1h
 10294  01520A  50E7               	movf	indf1,w,c
 10295  01520C                     u10070:
 10296  01520C  0900               	iorlw	0
 10297  01520E  A4D8               	btfss	status,2,c
 10298  015210  D7D3               	goto	l9272
 10299  015212                     l9280:
 10300                           
 10301                           ;My_header\My_I2C.h: 140: }
 10302                           ;My_header\My_I2C.h: 141: }
 10303                           ;My_header\My_I2C.h: 142: I2C_Stop();
 10304  015212  EC13  F0B1         	call	_I2C_Stop	;wreg free
 10305  015216  0012               	return		;funcret
 10306  015218                     __end_of_I2C_LCD_Puts:
 10307                           	opt stack 0
 10308                           tblptru	equ	0xFF8
 10309                           tblptrh	equ	0xFF7
 10310                           tblptrl	equ	0xFF6
 10311                           tablat	equ	0xFF5
 10312                           prodh	equ	0xFF4
 10313                           prodl	equ	0xFF3
 10314                           intcon	equ	0xFF2
 10315                           postinc0	equ	0xFEE
 10316                           wreg	equ	0xFE8
 10317                           indf1	equ	0xFE7
 10318                           postinc1	equ	0xFE6
 10319                           postdec1	equ	0xFE5
 10320                           fsr1h	equ	0xFE2
 10321                           fsr1l	equ	0xFE1
 10322                           indf2	equ	0xFDF
 10323                           postinc2	equ	0xFDE
 10324                           postdec2	equ	0xFDD
 10325                           fsr2h	equ	0xFDA
 10326                           fsr2l	equ	0xFD9
 10327                           status	equ	0xFD8
 10328                           
 10329 ;; *************** function ___llmod *****************
 10330 ;; Defined at:
 10331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  dividend        4   13[BANK0 ] unsigned long 
 10334 ;;  divisor         4   17[BANK0 ] unsigned long 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  counter         1   21[BANK0 ] unsigned char 
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  4   13[BANK0 ] unsigned long 
 10339 ;; Registers used:
 10340 ;;		wreg, status,2, status,0
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10346 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10349 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10350 ;;Total ram usage:        9 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; Hardware stack levels required when called:   11
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_display_LCD
 10357 ;;		_comm_disp
 10358 ;;		_my_utoa32
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text29
 10363  014E9A                     __ptext29:
 10364                           	opt stack 0
 10365  014E9A                     ___llmod:
 10366                           	opt stack 16
 10367                           
 10368                           ;incstack = 0
 10369  014E9A  0100               	movlb	0	; () banked
 10370  014E9C  51C6               	movf	___llmod@divisor& (0+255),w,b
 10371  014E9E  0100               	movlb	0	; () banked
 10372  014EA0  11C7               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10373  014EA2  0100               	movlb	0	; () banked
 10374  014EA4  11C8               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10375  014EA6  0100               	movlb	0	; () banked
 10376  014EA8  11C9               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10377  014EAA  B4D8               	btfsc	status,2,c
 10378  014EAC  D03A               	goto	l1862
 10379                           
 10380                           ; BSR set to: 0
 10381  014EAE  0E01               	movlw	1
 10382  014EB0  0100               	movlb	0	; () banked
 10383  014EB2  6FCA               	movwf	___llmod@counter& (0+255),b
 10384  014EB4  D008               	goto	l9574
 10385  014EB6                     l9572:
 10386                           
 10387                           ; BSR set to: 0
 10388  014EB6  0100               	movlb	0	; () banked
 10389  014EB8  90D8               	bcf	status,0,c
 10390  014EBA  37C6               	rlcf	___llmod@divisor& (0+255),f,b
 10391  014EBC  37C7               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10392  014EBE  37C8               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10393  014EC0  37C9               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10394  014EC2  0100               	movlb	0	; () banked
 10395  014EC4  2BCA               	incf	___llmod@counter& (0+255),f,b
 10396  014EC6                     l9574:
 10397                           
 10398                           ; BSR set to: 0
 10399  014EC6  0100               	movlb	0	; () banked
 10400  014EC8  AFC9               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10401  014ECA  D7F5               	goto	l9572
 10402  014ECC                     l9576:
 10403                           
 10404                           ; BSR set to: 0
 10405  014ECC  0100               	movlb	0	; () banked
 10406  014ECE  51C6               	movf	___llmod@divisor& (0+255),w,b
 10407  014ED0  0100               	movlb	0	; () banked
 10408  014ED2  5DC2               	subwf	___llmod@dividend& (0+255),w,b
 10409  014ED4  0100               	movlb	0	; () banked
 10410  014ED6  51C7               	movf	(___llmod@divisor+1)& (0+255),w,b
 10411  014ED8  0100               	movlb	0	; () banked
 10412  014EDA  59C3               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10413  014EDC  0100               	movlb	0	; () banked
 10414  014EDE  51C8               	movf	(___llmod@divisor+2)& (0+255),w,b
 10415  014EE0  0100               	movlb	0	; () banked
 10416  014EE2  59C4               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10417  014EE4  0100               	movlb	0	; () banked
 10418  014EE6  51C9               	movf	(___llmod@divisor+3)& (0+255),w,b
 10419  014EE8  0100               	movlb	0	; () banked
 10420  014EEA  59C5               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10421  014EEC  A0D8               	btfss	status,0,c
 10422  014EEE  D010               	goto	l9580
 10423                           
 10424                           ; BSR set to: 0
 10425  014EF0  0100               	movlb	0	; () banked
 10426  014EF2  51C6               	movf	___llmod@divisor& (0+255),w,b
 10427  014EF4  0100               	movlb	0	; () banked
 10428  014EF6  5FC2               	subwf	___llmod@dividend& (0+255),f,b
 10429  014EF8  0100               	movlb	0	; () banked
 10430  014EFA  51C7               	movf	(___llmod@divisor+1)& (0+255),w,b
 10431  014EFC  0100               	movlb	0	; () banked
 10432  014EFE  5BC3               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10433  014F00  0100               	movlb	0	; () banked
 10434  014F02  51C8               	movf	(___llmod@divisor+2)& (0+255),w,b
 10435  014F04  0100               	movlb	0	; () banked
 10436  014F06  5BC4               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10437  014F08  0100               	movlb	0	; () banked
 10438  014F0A  51C9               	movf	(___llmod@divisor+3)& (0+255),w,b
 10439  014F0C  0100               	movlb	0	; () banked
 10440  014F0E  5BC5               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10441  014F10                     l9580:
 10442                           
 10443                           ; BSR set to: 0
 10444  014F10  0100               	movlb	0	; () banked
 10445  014F12  90D8               	bcf	status,0,c
 10446  014F14  33C9               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10447  014F16  33C8               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10448  014F18  33C7               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10449  014F1A  33C6               	rrcf	___llmod@divisor& (0+255),f,b
 10450                           
 10451                           ; BSR set to: 0
 10452  014F1C  0100               	movlb	0	; () banked
 10453  014F1E  2FCA               	decfsz	___llmod@counter& (0+255),f,b
 10454  014F20  D7D5               	goto	l9576
 10455  014F22                     l1862:
 10456                           
 10457                           ; BSR set to: 0
 10458  014F22  C0C2  F0C2         	movff	___llmod@dividend,?___llmod
 10459  014F26  C0C3  F0C3         	movff	___llmod@dividend+1,?___llmod+1
 10460  014F2A  C0C4  F0C4         	movff	___llmod@dividend+2,?___llmod+2
 10461  014F2E  C0C5  F0C5         	movff	___llmod@dividend+3,?___llmod+3
 10462                           
 10463                           ; BSR set to: 0
 10464  014F32  0012               	return		;funcret
 10465  014F34                     __end_of___llmod:
 10466                           	opt stack 0
 10467                           tblptru	equ	0xFF8
 10468                           tblptrh	equ	0xFF7
 10469                           tblptrl	equ	0xFF6
 10470                           tablat	equ	0xFF5
 10471                           prodh	equ	0xFF4
 10472                           prodl	equ	0xFF3
 10473                           intcon	equ	0xFF2
 10474                           postinc0	equ	0xFEE
 10475                           wreg	equ	0xFE8
 10476                           indf1	equ	0xFE7
 10477                           postinc1	equ	0xFE6
 10478                           postdec1	equ	0xFE5
 10479                           fsr1h	equ	0xFE2
 10480                           fsr1l	equ	0xFE1
 10481                           indf2	equ	0xFDF
 10482                           postinc2	equ	0xFDE
 10483                           postdec2	equ	0xFDD
 10484                           fsr2h	equ	0xFDA
 10485                           fsr2l	equ	0xFD9
 10486                           status	equ	0xFD8
 10487                           
 10488 ;; *************** function _RTCC_adjust_time_button *****************
 10489 ;; Defined at:
 10490 ;;		line 363 in file "../My_header\My_RTCC.h"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  mode            2   63[BANK0 ] PTR struct button
 10493 ;;		 -> ctmu_m(4), 
 10494 ;;  cnt_inc         2   65[BANK0 ] PTR struct button
 10495 ;;		 -> ctmu(12), 
 10496 ;;  cnt_dec         2   67[BANK0 ] PTR struct button
 10497 ;;		 -> ctmu(12), 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;		None               void
 10502 ;; Registers used:
 10503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10509 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10512 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10513 ;;Total ram usage:        6 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:   16
 10516 ;; This function calls:
 10517 ;;		_RTCC_adjust_time_cursor
 10518 ;;		_RTCC_adjust_time_dec
 10519 ;;		_RTCC_adjust_time_inc
 10520 ;;		_RTCC_adjust_time_toggle
 10521 ;; This function is called by:
 10522 ;;		_normal_mode_loop
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text30
 10527  012EAE                     __ptext30:
 10528                           	opt stack 0
 10529  012EAE                     _RTCC_adjust_time_button:
 10530                           	opt stack 13
 10531                           
 10532                           ;My_header\My_RTCC.h: 364: if (mode->flag.long_holding_3) {
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;incstack = 0
 10536  012EAE  0100               	movlb	0	; () banked
 10537  012EB0  EE20 F003          	lfsr	2,3
 10538  012EB4  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 10539  012EB6  26D9               	addwf	fsr2l,f,c
 10540  012EB8  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 10541  012EBA  22DA               	addwfc	fsr2h,f,c
 10542  012EBC  0100               	movlb	0	; () banked
 10543  012EBE  A6DF               	btfss	indf2,3,c
 10544  012EC0  D02C               	goto	l10334
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;My_header\My_RTCC.h: 365: mode->flag.long_holding_3 = 0;
 10548  012EC2  0100               	movlb	0	; () banked
 10549  012EC4  EE20 F003          	lfsr	2,3
 10550  012EC8  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 10551  012ECA  26D9               	addwf	fsr2l,f,c
 10552  012ECC  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 10553  012ECE  22DA               	addwfc	fsr2h,f,c
 10554  012ED0  0100               	movlb	0	; () banked
 10555  012ED2  96DF               	bcf	indf2,3,c
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;My_header\My_RTCC.h: 366: RTCC_adjust_time_toggle();
 10559  012ED4  ECFA  F0B0         	call	_RTCC_adjust_time_toggle	;wreg free
 10560                           
 10561                           ;My_header\My_RTCC.h: 367: mode->flags = 0;
 10562  012ED8  0100               	movlb	0	; () banked
 10563  012EDA  EE20 F002          	lfsr	2,2
 10564  012EDE  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 10565  012EE0  26D9               	addwf	fsr2l,f,c
 10566  012EE2  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 10567  012EE4  22DA               	addwfc	fsr2h,f,c
 10568  012EE6  0E00               	movlw	0
 10569  012EE8  6EDE               	movwf	postinc2,c
 10570  012EEA  0E00               	movlw	0
 10571  012EEC  6EDD               	movwf	postdec2,c
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;My_header\My_RTCC.h: 368: cnt_inc->flags = 0;
 10575  012EEE  0100               	movlb	0	; () banked
 10576  012EF0  EE20 F002          	lfsr	2,2
 10577  012EF4  51F6               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 10578  012EF6  26D9               	addwf	fsr2l,f,c
 10579  012EF8  51F7               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 10580  012EFA  22DA               	addwfc	fsr2h,f,c
 10581  012EFC  0E00               	movlw	0
 10582  012EFE  6EDE               	movwf	postinc2,c
 10583  012F00  0E00               	movlw	0
 10584  012F02  6EDD               	movwf	postdec2,c
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;My_header\My_RTCC.h: 369: cnt_dec->flags = 0;
 10588  012F04  0100               	movlb	0	; () banked
 10589  012F06  EE20 F002          	lfsr	2,2
 10590  012F0A  51F8               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 10591  012F0C  26D9               	addwf	fsr2l,f,c
 10592  012F0E  51F9               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 10593  012F10  22DA               	addwfc	fsr2h,f,c
 10594  012F12  0E00               	movlw	0
 10595  012F14  6EDE               	movwf	postinc2,c
 10596  012F16  0E00               	movlw	0
 10597  012F18  6EDD               	movwf	postdec2,c
 10598  012F1A                     l10334:
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;My_header\My_RTCC.h: 370: }
 10602                           ;My_header\My_RTCC.h: 371: if (edit_flag.flags) {
 10603  012F1A  0100               	movlb	0	; () banked
 10604  012F1C  51A4               	movf	_edit_flag& (0+255),w,b
 10605  012F1E  B4D8               	btfsc	status,2,c
 10606  012F20  0012               	return	
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;My_header\My_RTCC.h: 372: if (mode->flag.press) {
 10610  012F22  0100               	movlb	0	; () banked
 10611  012F24  EE20 F002          	lfsr	2,2
 10612  012F28  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 10613  012F2A  26D9               	addwf	fsr2l,f,c
 10614  012F2C  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 10615  012F2E  22DA               	addwfc	fsr2h,f,c
 10616  012F30  0100               	movlb	0	; () banked
 10617  012F32  A0DF               	btfss	indf2,0,c
 10618  012F34  D00B               	goto	l10342
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;My_header\My_RTCC.h: 373: mode->flag.press = 0;
 10622  012F36  0100               	movlb	0	; () banked
 10623  012F38  EE20 F002          	lfsr	2,2
 10624  012F3C  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 10625  012F3E  26D9               	addwf	fsr2l,f,c
 10626  012F40  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 10627  012F42  22DA               	addwfc	fsr2h,f,c
 10628  012F44  0100               	movlb	0	; () banked
 10629  012F46  90DF               	bcf	indf2,0,c
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;My_header\My_RTCC.h: 374: RTCC_adjust_time_cursor();
 10633  012F48  ECC7  F0AB         	call	_RTCC_adjust_time_cursor	;wreg free
 10634  012F4C                     l10342:
 10635                           
 10636                           ;My_header\My_RTCC.h: 375: }
 10637                           ;My_header\My_RTCC.h: 376: if (cnt_inc->flag.press) {
 10638  012F4C  0100               	movlb	0	; () banked
 10639  012F4E  EE20 F002          	lfsr	2,2
 10640  012F52  51F6               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 10641  012F54  26D9               	addwf	fsr2l,f,c
 10642  012F56  51F7               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 10643  012F58  22DA               	addwfc	fsr2h,f,c
 10644  012F5A  0100               	movlb	0	; () banked
 10645  012F5C  A0DF               	btfss	indf2,0,c
 10646  012F5E  D017               	goto	l10348
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;My_header\My_RTCC.h: 377: cnt_inc->flag.press = 0;
 10650  012F60  0100               	movlb	0	; () banked
 10651  012F62  EE20 F002          	lfsr	2,2
 10652  012F66  51F6               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 10653  012F68  26D9               	addwf	fsr2l,f,c
 10654  012F6A  51F7               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 10655  012F6C  22DA               	addwfc	fsr2h,f,c
 10656  012F6E  0100               	movlb	0	; () banked
 10657  012F70  90DF               	bcf	indf2,0,c
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;My_header\My_RTCC.h: 378: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
 10661  012F72  0EAA               	movlw	low _caltime_now
 10662  012F74  0100               	movlb	0	; () banked
 10663  012F76  6FEA               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
 10664  012F78  0E00               	movlw	high _caltime_now
 10665  012F7A  0100               	movlb	0	; () banked
 10666  012F7C  6FEB               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
 10667  012F7E  0EB1               	movlw	low _epoch_now
 10668  012F80  0100               	movlb	0	; () banked
 10669  012F82  6FEC               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
 10670  012F84  0E00               	movlw	high _epoch_now
 10671  012F86  0100               	movlb	0	; () banked
 10672  012F88  6FED               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
 10673  012F8A  ECF3  F08F         	call	_RTCC_adjust_time_inc	;wreg free
 10674  012F8E                     l10348:
 10675                           
 10676                           ;My_header\My_RTCC.h: 379: }
 10677                           ;My_header\My_RTCC.h: 380: if (cnt_dec->flag.press) {
 10678  012F8E  0100               	movlb	0	; () banked
 10679  012F90  EE20 F002          	lfsr	2,2
 10680  012F94  51F8               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 10681  012F96  26D9               	addwf	fsr2l,f,c
 10682  012F98  51F9               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 10683  012F9A  22DA               	addwfc	fsr2h,f,c
 10684  012F9C  0100               	movlb	0	; () banked
 10685  012F9E  A0DF               	btfss	indf2,0,c
 10686  012FA0  0012               	return	
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;My_header\My_RTCC.h: 381: cnt_dec->flag.press = 0;
 10690  012FA2  0100               	movlb	0	; () banked
 10691  012FA4  EE20 F002          	lfsr	2,2
 10692  012FA8  51F8               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 10693  012FAA  26D9               	addwf	fsr2l,f,c
 10694  012FAC  51F9               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 10695  012FAE  22DA               	addwfc	fsr2h,f,c
 10696  012FB0  0100               	movlb	0	; () banked
 10697  012FB2  90DF               	bcf	indf2,0,c
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;My_header\My_RTCC.h: 382: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
 10701  012FB4  0EAA               	movlw	low _caltime_now
 10702  012FB6  0100               	movlb	0	; () banked
 10703  012FB8  6FEA               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
 10704  012FBA  0E00               	movlw	high _caltime_now
 10705  012FBC  0100               	movlb	0	; () banked
 10706  012FBE  6FEB               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
 10707  012FC0  0EB1               	movlw	low _epoch_now
 10708  012FC2  0100               	movlb	0	; () banked
 10709  012FC4  6FEC               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
 10710  012FC6  0E00               	movlw	high _epoch_now
 10711  012FC8  0100               	movlb	0	; () banked
 10712  012FCA  6FED               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
 10713  012FCC  EC25  F091         	call	_RTCC_adjust_time_dec	;wreg free
 10714  012FD0  0012               	return	
 10715  012FD2                     __end_of_RTCC_adjust_time_button:
 10716                           	opt stack 0
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           postinc0	equ	0xFEE
 10725                           wreg	equ	0xFE8
 10726                           indf1	equ	0xFE7
 10727                           postinc1	equ	0xFE6
 10728                           postdec1	equ	0xFE5
 10729                           fsr1h	equ	0xFE2
 10730                           fsr1l	equ	0xFE1
 10731                           indf2	equ	0xFDF
 10732                           postinc2	equ	0xFDE
 10733                           postdec2	equ	0xFDD
 10734                           fsr2h	equ	0xFDA
 10735                           fsr2l	equ	0xFD9
 10736                           status	equ	0xFD8
 10737                           
 10738 ;; *************** function _RTCC_adjust_time_toggle *****************
 10739 ;; Defined at:
 10740 ;;		line 303 in file "../My_header\My_RTCC.h"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;		None               void
 10747 ;; Registers used:
 10748 ;;		wreg, status,2
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10758 ;;Total ram usage:        0 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:   11
 10761 ;; This function calls:
 10762 ;;		Nothing
 10763 ;; This function is called by:
 10764 ;;		_RTCC_adjust_time_button
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text31
 10769  0161F4                     __ptext31:
 10770                           	opt stack 0
 10771  0161F4                     _RTCC_adjust_time_toggle:
 10772                           	opt stack 17
 10773                           
 10774                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
 10775                           
 10776                           ;incstack = 0
 10777  0161F4  0100               	movlb	0	; () banked
 10778  0161F6  51A4               	movf	_edit_flag& (0+255),w,b
 10779  0161F8  B4D8               	btfsc	status,2,c
 10780  0161FA  D004               	goto	l503
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
 10784  0161FC  0E00               	movlw	0
 10785  0161FE  0100               	movlb	0	; () banked
 10786  016200  6FA4               	movwf	_edit_flag& (0+255),b
 10787                           
 10788                           ;My_header\My_RTCC.h: 306: } else {
 10789  016202  0012               	return	
 10790  016204                     l503:
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
 10794  016204  0100               	movlb	0	; () banked
 10795  016206  81A4               	bsf	_edit_flag& (0+255),0,b
 10796  016208  0012               	return	
 10797  01620A                     __end_of_RTCC_adjust_time_toggle:
 10798                           	opt stack 0
 10799                           tblptru	equ	0xFF8
 10800                           tblptrh	equ	0xFF7
 10801                           tblptrl	equ	0xFF6
 10802                           tablat	equ	0xFF5
 10803                           prodh	equ	0xFF4
 10804                           prodl	equ	0xFF3
 10805                           intcon	equ	0xFF2
 10806                           postinc0	equ	0xFEE
 10807                           wreg	equ	0xFE8
 10808                           indf1	equ	0xFE7
 10809                           postinc1	equ	0xFE6
 10810                           postdec1	equ	0xFE5
 10811                           fsr1h	equ	0xFE2
 10812                           fsr1l	equ	0xFE1
 10813                           indf2	equ	0xFDF
 10814                           postinc2	equ	0xFDE
 10815                           postdec2	equ	0xFDD
 10816                           fsr2h	equ	0xFDA
 10817                           fsr2l	equ	0xFD9
 10818                           status	equ	0xFD8
 10819                           
 10820 ;; *************** function _RTCC_adjust_time_inc *****************
 10821 ;; Defined at:
 10822 ;;		line 321 in file "../My_header\My_RTCC.h"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  ct              2   53[BANK0 ] PTR struct .
 10825 ;;		 -> caltime_now(7), 
 10826 ;;  ep              2   55[BANK0 ] PTR unsigned long 
 10827 ;;		 -> epoch_now(4), 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;  i               1   61[BANK0 ] unsigned char 
 10830 ;;  i               1   62[BANK0 ] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;		None               void
 10833 ;; Registers used:
 10834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;Total ram usage:       10 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:   15
 10847 ;; This function calls:
 10848 ;;		_RTCC_from_RTCC
 10849 ;;		_RTCC_from_epoch
 10850 ;;		___lmul
 10851 ;;		_month_length
 10852 ;; This function is called by:
 10853 ;;		_RTCC_adjust_time_button
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text32
 10858  011FE6                     __ptext32:
 10859                           	opt stack 0
 10860  011FE6                     _RTCC_adjust_time_inc:
 10861                           	opt stack 13
 10862                           
 10863                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;incstack = 0
 10867  011FE6  C0EA  F0DD         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
 10868  011FEA  C0EB  F0DE         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
 10869  011FEE  C0EC  F0DF         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
 10870  011FF2  C0ED  F0E0         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
 10871  011FF6  EC85  F0B0         	call	_RTCC_from_RTCC	;wreg free
 10872                           
 10873                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
 10874  011FFA  0100               	movlb	0	; () banked
 10875  011FFC  A1A4               	btfss	_edit_flag& (0+255),0,b
 10876  011FFE  D009               	goto	l9698
 10877                           
 10878                           ; BSR set to: 0
 10879  012000  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10880  012004  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10881  012008  2ADE               	incf	postinc2,f,c
 10882  01200A  0E00               	movlw	0
 10883  01200C  22DE               	addwfc	postinc2,f,c
 10884  01200E  22DE               	addwfc	postinc2,f,c
 10885  012010  22DE               	addwfc	postinc2,f,c
 10886  012012                     l9698:
 10887                           
 10888                           ; BSR set to: 0
 10889                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
 10890  012012  0100               	movlb	0	; () banked
 10891  012014  A3A4               	btfss	_edit_flag& (0+255),1,b
 10892  012016  D00A               	goto	l9702
 10893                           
 10894                           ; BSR set to: 0
 10895  012018  0E3C               	movlw	60
 10896  01201A  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10897  01201E  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10898  012022  26DE               	addwf	postinc2,f,c
 10899  012024  0E00               	movlw	0
 10900  012026  22DE               	addwfc	postinc2,f,c
 10901  012028  22DE               	addwfc	postinc2,f,c
 10902  01202A  22DE               	addwfc	postinc2,f,c
 10903  01202C                     l9702:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
 10907  01202C  0100               	movlb	0	; () banked
 10908  01202E  A5A4               	btfss	_edit_flag& (0+255),2,b
 10909  012030  D00C               	goto	l9706
 10910                           
 10911                           ; BSR set to: 0
 10912  012032  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10913  012036  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10914  01203A  0E10               	movlw	16
 10915  01203C  26DE               	addwf	postinc2,f,c
 10916  01203E  0E0E               	movlw	14
 10917  012040  22DE               	addwfc	postinc2,f,c
 10918  012042  0E00               	movlw	0
 10919  012044  22DE               	addwfc	postinc2,f,c
 10920  012046  0E00               	movlw	0
 10921  012048  22DE               	addwfc	postinc2,f,c
 10922  01204A                     l9706:
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
 10926  01204A  0100               	movlb	0	; () banked
 10927  01204C  A7A4               	btfss	_edit_flag& (0+255),3,b
 10928  01204E  D00C               	goto	l9710
 10929                           
 10930                           ; BSR set to: 0
 10931  012050  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10932  012054  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10933  012058  0E80               	movlw	128
 10934  01205A  26DE               	addwf	postinc2,f,c
 10935  01205C  0E51               	movlw	81
 10936  01205E  22DE               	addwfc	postinc2,f,c
 10937  012060  0E01               	movlw	1
 10938  012062  22DE               	addwfc	postinc2,f,c
 10939  012064  0E00               	movlw	0
 10940  012066  22DE               	addwfc	postinc2,f,c
 10941  012068                     l9710:
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
 10945  012068  0100               	movlb	0	; () banked
 10946  01206A  A9A4               	btfss	_edit_flag& (0+255),4,b
 10947  01206C  D038               	goto	l9714
 10948                           
 10949                           ; BSR set to: 0
 10950  01206E  0100               	movlb	0	; () banked
 10951  012070  EE20 F005          	lfsr	2,5
 10952  012074  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10953  012076  26D9               	addwf	fsr2l,f,c
 10954  012078  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10955  01207A  22DA               	addwfc	fsr2h,f,c
 10956  01207C  50DF               	movf	indf2,w,c
 10957  01207E  0100               	movlb	0	; () banked
 10958  012080  6FBB               	movwf	month_length@month& (0+255),b
 10959  012082  0100               	movlb	0	; () banked
 10960  012084  EE20 F006          	lfsr	2,6
 10961  012088  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10962  01208A  26D9               	addwf	fsr2l,f,c
 10963  01208C  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10964  01208E  22DA               	addwfc	fsr2h,f,c
 10965  012090  50DF               	movf	indf2,w,c
 10966  012092  ECDB  F09D         	call	_month_length
 10967  012096  0100               	movlb	0	; () banked
 10968  012098  6FEE               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 10969  01209A  0100               	movlb	0	; () banked
 10970  01209C  51EE               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
 10971  01209E  0100               	movlb	0	; () banked
 10972  0120A0  6FC2               	movwf	___lmul@multiplier& (0+255),b
 10973  0120A2  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 10974  0120A4  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 10975  0120A6  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 10976  0120A8  0E80               	movlw	128
 10977  0120AA  0100               	movlb	0	; () banked
 10978  0120AC  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 10979  0120AE  0E51               	movlw	81
 10980  0120B0  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10981  0120B2  0E01               	movlw	1
 10982  0120B4  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10983  0120B6  0E00               	movlw	0
 10984  0120B8  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10985  0120BA  EC91  F0AA         	call	___lmul	;wreg free
 10986  0120BE  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10987  0120C2  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10988  0120C6  0100               	movlb	0	; () banked
 10989  0120C8  51C2               	movf	?___lmul& (0+255),w,b
 10990  0120CA  26DE               	addwf	postinc2,f,c
 10991  0120CC  0100               	movlb	0	; () banked
 10992  0120CE  51C3               	movf	(?___lmul+1)& (0+255),w,b
 10993  0120D0  22DE               	addwfc	postinc2,f,c
 10994  0120D2  0100               	movlb	0	; () banked
 10995  0120D4  51C4               	movf	(?___lmul+2)& (0+255),w,b
 10996  0120D6  22DE               	addwfc	postinc2,f,c
 10997  0120D8  0100               	movlb	0	; () banked
 10998  0120DA  51C5               	movf	(?___lmul+3)& (0+255),w,b
 10999  0120DC  22DE               	addwfc	postinc2,f,c
 11000  0120DE                     l9714:
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
 11004  0120DE  0100               	movlb	0	; () banked
 11005  0120E0  ABA4               	btfss	_edit_flag& (0+255),5,b
 11006  0120E2  D088               	goto	l9736
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
 11010  0120E4  0100               	movlb	0	; () banked
 11011  0120E6  EE20 F005          	lfsr	2,5
 11012  0120EA  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11013  0120EC  26D9               	addwf	fsr2l,f,c
 11014  0120EE  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11015  0120F0  22DA               	addwfc	fsr2h,f,c
 11016  0120F2  50DF               	movf	indf2,w,c
 11017  0120F4  0100               	movlb	0	; () banked
 11018  0120F6  6FF3               	movwf	RTCC_adjust_time_inc@i& (0+255),b
 11019  0120F8                     l9718:
 11020                           
 11021                           ; BSR set to: 0
 11022  0120F8  0E0C               	movlw	12
 11023  0120FA  0100               	movlb	0	; () banked
 11024  0120FC  65F3               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
 11025  0120FE  D001               	goto	l9722
 11026  012100  D033               	goto	l9728
 11027  012102                     l9722:
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
 11031  012102  C0F3  F0BB         	movff	RTCC_adjust_time_inc@i,month_length@month
 11032  012106  0100               	movlb	0	; () banked
 11033  012108  EE20 F006          	lfsr	2,6
 11034  01210C  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11035  01210E  26D9               	addwf	fsr2l,f,c
 11036  012110  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11037  012112  22DA               	addwfc	fsr2h,f,c
 11038  012114  50DF               	movf	indf2,w,c
 11039  012116  ECDB  F09D         	call	_month_length
 11040  01211A  0100               	movlb	0	; () banked
 11041  01211C  6FEE               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 11042  01211E  0100               	movlb	0	; () banked
 11043  012120  51EE               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
 11044  012122  0100               	movlb	0	; () banked
 11045  012124  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11046  012126  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11047  012128  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11048  01212A  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11049  01212C  0E80               	movlw	128
 11050  01212E  0100               	movlb	0	; () banked
 11051  012130  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11052  012132  0E51               	movlw	81
 11053  012134  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11054  012136  0E01               	movlw	1
 11055  012138  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11056  01213A  0E00               	movlw	0
 11057  01213C  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11058  01213E  EC91  F0AA         	call	___lmul	;wreg free
 11059  012142  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11060  012146  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11061  01214A  0100               	movlb	0	; () banked
 11062  01214C  51C2               	movf	?___lmul& (0+255),w,b
 11063  01214E  26DE               	addwf	postinc2,f,c
 11064  012150  0100               	movlb	0	; () banked
 11065  012152  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11066  012154  22DE               	addwfc	postinc2,f,c
 11067  012156  0100               	movlb	0	; () banked
 11068  012158  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11069  01215A  22DE               	addwfc	postinc2,f,c
 11070  01215C  0100               	movlb	0	; () banked
 11071  01215E  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11072  012160  22DE               	addwfc	postinc2,f,c
 11073                           
 11074                           ; BSR set to: 0
 11075  012162  0100               	movlb	0	; () banked
 11076  012164  2BF3               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
 11077  012166  D7C8               	goto	l9718
 11078  012168                     l9728:
 11079                           
 11080                           ; BSR set to: 0
 11081                           ;My_header\My_RTCC.h: 331: }
 11082                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
 11083  012168  0E01               	movlw	1
 11084  01216A  0100               	movlb	0	; () banked
 11085  01216C  6FF2               	movwf	RTCC_adjust_time_inc@i_2101& (0+255),b
 11086  01216E  D036               	goto	l9734
 11087  012170                     l9730:
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
 11091  012170  C0F2  F0BB         	movff	RTCC_adjust_time_inc@i_2101,month_length@month
 11092  012174  0100               	movlb	0	; () banked
 11093  012176  EE20 F006          	lfsr	2,6
 11094  01217A  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11095  01217C  26D9               	addwf	fsr2l,f,c
 11096  01217E  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11097  012180  22DA               	addwfc	fsr2h,f,c
 11098  012182  50DF               	movf	indf2,w,c
 11099  012184  0100               	movlb	0	; () banked
 11100  012186  6FEE               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 11101  012188  0100               	movlb	0	; () banked
 11102  01218A  29EE               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
 11103  01218C  ECDB  F09D         	call	_month_length
 11104  012190  0100               	movlb	0	; () banked
 11105  012192  6FEF               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
 11106  012194  0100               	movlb	0	; () banked
 11107  012196  51EF               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
 11108  012198  0100               	movlb	0	; () banked
 11109  01219A  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11110  01219C  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11111  01219E  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11112  0121A0  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11113  0121A2  0E80               	movlw	128
 11114  0121A4  0100               	movlb	0	; () banked
 11115  0121A6  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11116  0121A8  0E51               	movlw	81
 11117  0121AA  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11118  0121AC  0E01               	movlw	1
 11119  0121AE  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11120  0121B0  0E00               	movlw	0
 11121  0121B2  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11122  0121B4  EC91  F0AA         	call	___lmul	;wreg free
 11123  0121B8  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11124  0121BC  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11125  0121C0  0100               	movlb	0	; () banked
 11126  0121C2  51C2               	movf	?___lmul& (0+255),w,b
 11127  0121C4  26DE               	addwf	postinc2,f,c
 11128  0121C6  0100               	movlb	0	; () banked
 11129  0121C8  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11130  0121CA  22DE               	addwfc	postinc2,f,c
 11131  0121CC  0100               	movlb	0	; () banked
 11132  0121CE  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11133  0121D0  22DE               	addwfc	postinc2,f,c
 11134  0121D2  0100               	movlb	0	; () banked
 11135  0121D4  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11136  0121D6  22DE               	addwfc	postinc2,f,c
 11137                           
 11138                           ; BSR set to: 0
 11139  0121D8  0100               	movlb	0	; () banked
 11140  0121DA  2BF2               	incf	RTCC_adjust_time_inc@i_2101& (0+255),f,b
 11141  0121DC                     l9734:
 11142                           
 11143                           ; BSR set to: 0
 11144  0121DC  0100               	movlb	0	; () banked
 11145  0121DE  EE20 F005          	lfsr	2,5
 11146  0121E2  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11147  0121E4  26D9               	addwf	fsr2l,f,c
 11148  0121E6  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11149  0121E8  22DA               	addwfc	fsr2h,f,c
 11150  0121EA  50DE               	movf	postinc2,w,c
 11151  0121EC  0100               	movlb	0	; () banked
 11152  0121EE  5DF2               	subwf	RTCC_adjust_time_inc@i_2101& (0+255),w,b
 11153  0121F0  A0D8               	btfss	status,0,c
 11154  0121F2  D7BE               	goto	l9730
 11155  0121F4                     l9736:
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;My_header\My_RTCC.h: 334: }
 11159                           ;My_header\My_RTCC.h: 335: }
 11160                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
 11161  0121F4  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11162  0121F8  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11163  0121FC  0E80               	movlw	128
 11164  0121FE  5CDE               	subwf	postinc2,w,c
 11165  012200  0E13               	movlw	19
 11166  012202  58DE               	subwfb	postinc2,w,c
 11167  012204  0E19               	movlw	25
 11168  012206  58DE               	subwfb	postinc2,w,c
 11169  012208  0EBC               	movlw	188
 11170  01220A  58DE               	subwfb	postinc2,w,c
 11171  01220C  A0D8               	btfss	status,0,c
 11172  01220E  D00C               	goto	l9740
 11173                           
 11174                           ; BSR set to: 0
 11175  012210  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11176  012214  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11177  012218  0E80               	movlw	128
 11178  01221A  5EDE               	subwf	postinc2,f,c
 11179  01221C  0E13               	movlw	19
 11180  01221E  5ADE               	subwfb	postinc2,f,c
 11181  012220  0E19               	movlw	25
 11182  012222  5ADE               	subwfb	postinc2,f,c
 11183  012224  0EBC               	movlw	188
 11184  012226  5ADE               	subwfb	postinc2,f,c
 11185  012228                     l9740:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
 11189  012228  0EAA               	movlw	low _caltime_now
 11190  01222A  0100               	movlb	0	; () banked
 11191  01222C  6FE6               	movwf	RTCC_from_epoch@ct& (0+255),b
 11192  01222E  0E00               	movlw	high _caltime_now
 11193  012230  0100               	movlb	0	; () banked
 11194  012232  6FE7               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
 11195  012234  0EB1               	movlw	low _epoch_now
 11196  012236  0100               	movlb	0	; () banked
 11197  012238  6FE8               	movwf	RTCC_from_epoch@ep& (0+255),b
 11198  01223A  0E00               	movlw	high _epoch_now
 11199  01223C  0100               	movlb	0	; () banked
 11200  01223E  6FE9               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
 11201  012240  EC74  F0B0         	call	_RTCC_from_epoch	;wreg free
 11202                           
 11203                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
 11204  012244  0E01               	movlw	1
 11205  012246  6E50               	movwf	_time_change_flag,c
 11206  012248  0012               	return		;funcret
 11207  01224A                     __end_of_RTCC_adjust_time_inc:
 11208                           	opt stack 0
 11209                           tblptru	equ	0xFF8
 11210                           tblptrh	equ	0xFF7
 11211                           tblptrl	equ	0xFF6
 11212                           tablat	equ	0xFF5
 11213                           prodh	equ	0xFF4
 11214                           prodl	equ	0xFF3
 11215                           intcon	equ	0xFF2
 11216                           postinc0	equ	0xFEE
 11217                           wreg	equ	0xFE8
 11218                           indf1	equ	0xFE7
 11219                           postinc1	equ	0xFE6
 11220                           postdec1	equ	0xFE5
 11221                           fsr1h	equ	0xFE2
 11222                           fsr1l	equ	0xFE1
 11223                           indf2	equ	0xFDF
 11224                           postinc2	equ	0xFDE
 11225                           postdec2	equ	0xFDD
 11226                           fsr2h	equ	0xFDA
 11227                           fsr2l	equ	0xFD9
 11228                           status	equ	0xFD8
 11229                           
 11230 ;; *************** function _RTCC_adjust_time_dec *****************
 11231 ;; Defined at:
 11232 ;;		line 342 in file "../My_header\My_RTCC.h"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;  ct              2   53[BANK0 ] PTR struct .
 11235 ;;		 -> caltime_now(7), 
 11236 ;;  ep              2   55[BANK0 ] PTR unsigned long 
 11237 ;;		 -> epoch_now(4), 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  i               1   61[BANK0 ] unsigned char 
 11240 ;;  i               1   62[BANK0 ] unsigned char 
 11241 ;; Return value:  Size  Location     Type
 11242 ;;		None               void
 11243 ;; Registers used:
 11244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11253 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11254 ;;Total ram usage:       10 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:   15
 11257 ;; This function calls:
 11258 ;;		_RTCC_from_RTCC
 11259 ;;		_RTCC_from_epoch
 11260 ;;		___lmul
 11261 ;;		_month_length
 11262 ;; This function is called by:
 11263 ;;		_RTCC_adjust_time_button
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text33
 11268  01224A                     __ptext33:
 11269                           	opt stack 0
 11270  01224A                     _RTCC_adjust_time_dec:
 11271                           	opt stack 13
 11272                           
 11273                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
 11274                           
 11275                           ;incstack = 0
 11276  01224A  C0EA  F0DD         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
 11277  01224E  C0EB  F0DE         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
 11278  012252  C0EC  F0DF         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
 11279  012256  C0ED  F0E0         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
 11280  01225A  EC85  F0B0         	call	_RTCC_from_RTCC	;wreg free
 11281                           
 11282                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
 11283  01225E  0100               	movlb	0	; () banked
 11284  012260  A1A4               	btfss	_edit_flag& (0+255),0,b
 11285  012262  D009               	goto	l9750
 11286                           
 11287                           ; BSR set to: 0
 11288  012264  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11289  012268  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11290  01226C  06DE               	decf	postinc2,f,c
 11291  01226E  0E00               	movlw	0
 11292  012270  5ADE               	subwfb	postinc2,f,c
 11293  012272  5ADE               	subwfb	postinc2,f,c
 11294  012274  5ADE               	subwfb	postinc2,f,c
 11295  012276                     l9750:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
 11299  012276  0100               	movlb	0	; () banked
 11300  012278  A3A4               	btfss	_edit_flag& (0+255),1,b
 11301  01227A  D00A               	goto	l9754
 11302                           
 11303                           ; BSR set to: 0
 11304  01227C  0E3C               	movlw	60
 11305  01227E  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11306  012282  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11307  012286  5EDE               	subwf	postinc2,f,c
 11308  012288  0E00               	movlw	0
 11309  01228A  5ADE               	subwfb	postinc2,f,c
 11310  01228C  5ADE               	subwfb	postinc2,f,c
 11311  01228E  5ADE               	subwfb	postinc2,f,c
 11312  012290                     l9754:
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
 11316  012290  0100               	movlb	0	; () banked
 11317  012292  A5A4               	btfss	_edit_flag& (0+255),2,b
 11318  012294  D00C               	goto	l9758
 11319                           
 11320                           ; BSR set to: 0
 11321  012296  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11322  01229A  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11323  01229E  0E10               	movlw	16
 11324  0122A0  5EDE               	subwf	postinc2,f,c
 11325  0122A2  0E0E               	movlw	14
 11326  0122A4  5ADE               	subwfb	postinc2,f,c
 11327  0122A6  0E00               	movlw	0
 11328  0122A8  5ADE               	subwfb	postinc2,f,c
 11329  0122AA  0E00               	movlw	0
 11330  0122AC  5ADE               	subwfb	postinc2,f,c
 11331  0122AE                     l9758:
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
 11335  0122AE  0100               	movlb	0	; () banked
 11336  0122B0  A7A4               	btfss	_edit_flag& (0+255),3,b
 11337  0122B2  D00C               	goto	l9762
 11338                           
 11339                           ; BSR set to: 0
 11340  0122B4  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11341  0122B8  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11342  0122BC  0E80               	movlw	128
 11343  0122BE  5EDE               	subwf	postinc2,f,c
 11344  0122C0  0E51               	movlw	81
 11345  0122C2  5ADE               	subwfb	postinc2,f,c
 11346  0122C4  0E01               	movlw	1
 11347  0122C6  5ADE               	subwfb	postinc2,f,c
 11348  0122C8  0E00               	movlw	0
 11349  0122CA  5ADE               	subwfb	postinc2,f,c
 11350  0122CC                     l9762:
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
 11354  0122CC  0100               	movlb	0	; () banked
 11355  0122CE  A9A4               	btfss	_edit_flag& (0+255),4,b
 11356  0122D0  D038               	goto	l9766
 11357                           
 11358                           ; BSR set to: 0
 11359  0122D2  0100               	movlb	0	; () banked
 11360  0122D4  EE20 F005          	lfsr	2,5
 11361  0122D8  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 11362  0122DA  26D9               	addwf	fsr2l,f,c
 11363  0122DC  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 11364  0122DE  22DA               	addwfc	fsr2h,f,c
 11365  0122E0  50DF               	movf	indf2,w,c
 11366  0122E2  0100               	movlb	0	; () banked
 11367  0122E4  6FBB               	movwf	month_length@month& (0+255),b
 11368  0122E6  0100               	movlb	0	; () banked
 11369  0122E8  EE20 F006          	lfsr	2,6
 11370  0122EC  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 11371  0122EE  26D9               	addwf	fsr2l,f,c
 11372  0122F0  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 11373  0122F2  22DA               	addwfc	fsr2h,f,c
 11374  0122F4  50DF               	movf	indf2,w,c
 11375  0122F6  ECDB  F09D         	call	_month_length
 11376  0122FA  0100               	movlb	0	; () banked
 11377  0122FC  6FEE               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 11378  0122FE  0100               	movlb	0	; () banked
 11379  012300  51EE               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
 11380  012302  0100               	movlb	0	; () banked
 11381  012304  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11382  012306  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11383  012308  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11384  01230A  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11385  01230C  0E80               	movlw	128
 11386  01230E  0100               	movlb	0	; () banked
 11387  012310  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11388  012312  0E51               	movlw	81
 11389  012314  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11390  012316  0E01               	movlw	1
 11391  012318  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11392  01231A  0E00               	movlw	0
 11393  01231C  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11394  01231E  EC91  F0AA         	call	___lmul	;wreg free
 11395  012322  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11396  012326  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11397  01232A  0100               	movlb	0	; () banked
 11398  01232C  51C2               	movf	?___lmul& (0+255),w,b
 11399  01232E  5EDE               	subwf	postinc2,f,c
 11400  012330  0100               	movlb	0	; () banked
 11401  012332  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11402  012334  5ADE               	subwfb	postinc2,f,c
 11403  012336  0100               	movlb	0	; () banked
 11404  012338  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11405  01233A  5ADE               	subwfb	postinc2,f,c
 11406  01233C  0100               	movlb	0	; () banked
 11407  01233E  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11408  012340  5ADE               	subwfb	postinc2,f,c
 11409  012342                     l9766:
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
 11413  012342  0100               	movlb	0	; () banked
 11414  012344  ABA4               	btfss	_edit_flag& (0+255),5,b
 11415  012346  D088               	goto	l9788
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
 11419  012348  0100               	movlb	0	; () banked
 11420  01234A  EE20 F005          	lfsr	2,5
 11421  01234E  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 11422  012350  26D9               	addwf	fsr2l,f,c
 11423  012352  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 11424  012354  22DA               	addwfc	fsr2h,f,c
 11425  012356  50DF               	movf	indf2,w,c
 11426  012358  0100               	movlb	0	; () banked
 11427  01235A  6FF3               	movwf	RTCC_adjust_time_dec@i& (0+255),b
 11428  01235C                     l9770:
 11429                           
 11430                           ; BSR set to: 0
 11431  01235C  0100               	movlb	0	; () banked
 11432  01235E  51F3               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
 11433  012360  0100               	movlb	0	; () banked
 11434  012362  B4D8               	btfsc	status,2,c
 11435  012364  D033               	goto	l9780
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
 11439                           
 11440                           ; BSR set to: 0
 11441                           
 11442                           ; BSR set to: 0
 11443  012366  C0F3  F0BB         	movff	RTCC_adjust_time_dec@i,month_length@month
 11444  01236A  0100               	movlb	0	; () banked
 11445  01236C  EE20 F006          	lfsr	2,6
 11446  012370  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 11447  012372  26D9               	addwf	fsr2l,f,c
 11448  012374  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 11449  012376  22DA               	addwfc	fsr2h,f,c
 11450  012378  50DF               	movf	indf2,w,c
 11451  01237A  ECDB  F09D         	call	_month_length
 11452  01237E  0100               	movlb	0	; () banked
 11453  012380  6FEE               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 11454  012382  0100               	movlb	0	; () banked
 11455  012384  51EE               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
 11456  012386  0100               	movlb	0	; () banked
 11457  012388  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11458  01238A  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11459  01238C  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11460  01238E  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11461  012390  0E80               	movlw	128
 11462  012392  0100               	movlb	0	; () banked
 11463  012394  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11464  012396  0E51               	movlw	81
 11465  012398  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11466  01239A  0E01               	movlw	1
 11467  01239C  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11468  01239E  0E00               	movlw	0
 11469  0123A0  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11470  0123A2  EC91  F0AA         	call	___lmul	;wreg free
 11471  0123A6  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11472  0123AA  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11473  0123AE  0100               	movlb	0	; () banked
 11474  0123B0  51C2               	movf	?___lmul& (0+255),w,b
 11475  0123B2  5EDE               	subwf	postinc2,f,c
 11476  0123B4  0100               	movlb	0	; () banked
 11477  0123B6  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11478  0123B8  5ADE               	subwfb	postinc2,f,c
 11479  0123BA  0100               	movlb	0	; () banked
 11480  0123BC  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11481  0123BE  5ADE               	subwfb	postinc2,f,c
 11482  0123C0  0100               	movlb	0	; () banked
 11483  0123C2  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11484  0123C4  5ADE               	subwfb	postinc2,f,c
 11485                           
 11486                           ; BSR set to: 0
 11487  0123C6  0100               	movlb	0	; () banked
 11488  0123C8  07F3               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
 11489  0123CA  D7C8               	goto	l9770
 11490  0123CC                     l9780:
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;My_header\My_RTCC.h: 352: }
 11494                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
 11495  0123CC  0E0C               	movlw	12
 11496  0123CE  0100               	movlb	0	; () banked
 11497  0123D0  6FF2               	movwf	RTCC_adjust_time_dec@i_2114& (0+255),b
 11498  0123D2  D036               	goto	l9786
 11499  0123D4                     l9782:
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
 11503  0123D4  C0F2  F0BB         	movff	RTCC_adjust_time_dec@i_2114,month_length@month
 11504  0123D8  0100               	movlb	0	; () banked
 11505  0123DA  EE20 F006          	lfsr	2,6
 11506  0123DE  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 11507  0123E0  26D9               	addwf	fsr2l,f,c
 11508  0123E2  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 11509  0123E4  22DA               	addwfc	fsr2h,f,c
 11510  0123E6  50DF               	movf	indf2,w,c
 11511  0123E8  0100               	movlb	0	; () banked
 11512  0123EA  6FEE               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 11513  0123EC  0100               	movlb	0	; () banked
 11514  0123EE  05EE               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
 11515  0123F0  ECDB  F09D         	call	_month_length
 11516  0123F4  0100               	movlb	0	; () banked
 11517  0123F6  6FEF               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
 11518  0123F8  0100               	movlb	0	; () banked
 11519  0123FA  51EF               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
 11520  0123FC  0100               	movlb	0	; () banked
 11521  0123FE  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11522  012400  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11523  012402  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11524  012404  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11525  012406  0E80               	movlw	128
 11526  012408  0100               	movlb	0	; () banked
 11527  01240A  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11528  01240C  0E51               	movlw	81
 11529  01240E  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11530  012410  0E01               	movlw	1
 11531  012412  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11532  012414  0E00               	movlw	0
 11533  012416  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11534  012418  EC91  F0AA         	call	___lmul	;wreg free
 11535  01241C  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11536  012420  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11537  012424  0100               	movlb	0	; () banked
 11538  012426  51C2               	movf	?___lmul& (0+255),w,b
 11539  012428  5EDE               	subwf	postinc2,f,c
 11540  01242A  0100               	movlb	0	; () banked
 11541  01242C  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11542  01242E  5ADE               	subwfb	postinc2,f,c
 11543  012430  0100               	movlb	0	; () banked
 11544  012432  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11545  012434  5ADE               	subwfb	postinc2,f,c
 11546  012436  0100               	movlb	0	; () banked
 11547  012438  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11548  01243A  5ADE               	subwfb	postinc2,f,c
 11549                           
 11550                           ; BSR set to: 0
 11551  01243C  0100               	movlb	0	; () banked
 11552  01243E  07F2               	decf	RTCC_adjust_time_dec@i_2114& (0+255),f,b
 11553  012440                     l9786:
 11554                           
 11555                           ; BSR set to: 0
 11556  012440  0100               	movlb	0	; () banked
 11557  012442  EE20 F005          	lfsr	2,5
 11558  012446  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 11559  012448  26D9               	addwf	fsr2l,f,c
 11560  01244A  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 11561  01244C  22DA               	addwfc	fsr2h,f,c
 11562  01244E  0100               	movlb	0	; () banked
 11563  012450  51F2               	movf	RTCC_adjust_time_dec@i_2114& (0+255),w,b
 11564  012452  5CDE               	subwf	postinc2,w,c
 11565  012454  A0D8               	btfss	status,0,c
 11566  012456  D7BE               	goto	l9782
 11567  012458                     l9788:
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;My_header\My_RTCC.h: 355: }
 11571                           ;My_header\My_RTCC.h: 356: }
 11572                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
 11573  012458  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11574  01245C  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11575  012460  0E80               	movlw	128
 11576  012462  5CDE               	subwf	postinc2,w,c
 11577  012464  0E13               	movlw	19
 11578  012466  58DE               	subwfb	postinc2,w,c
 11579  012468  0E19               	movlw	25
 11580  01246A  58DE               	subwfb	postinc2,w,c
 11581  01246C  0EBC               	movlw	188
 11582  01246E  58DE               	subwfb	postinc2,w,c
 11583  012470  A0D8               	btfss	status,0,c
 11584  012472  D00C               	goto	l9792
 11585                           
 11586                           ; BSR set to: 0
 11587  012474  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11588  012478  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11589  01247C  0E80               	movlw	128
 11590  01247E  26DE               	addwf	postinc2,f,c
 11591  012480  0E13               	movlw	19
 11592  012482  22DE               	addwfc	postinc2,f,c
 11593  012484  0E19               	movlw	25
 11594  012486  22DE               	addwfc	postinc2,f,c
 11595  012488  0EBC               	movlw	188
 11596  01248A  22DE               	addwfc	postinc2,f,c
 11597  01248C                     l9792:
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
 11601  01248C  0EAA               	movlw	low _caltime_now
 11602  01248E  0100               	movlb	0	; () banked
 11603  012490  6FE6               	movwf	RTCC_from_epoch@ct& (0+255),b
 11604  012492  0E00               	movlw	high _caltime_now
 11605  012494  0100               	movlb	0	; () banked
 11606  012496  6FE7               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
 11607  012498  0EB1               	movlw	low _epoch_now
 11608  01249A  0100               	movlb	0	; () banked
 11609  01249C  6FE8               	movwf	RTCC_from_epoch@ep& (0+255),b
 11610  01249E  0E00               	movlw	high _epoch_now
 11611  0124A0  0100               	movlb	0	; () banked
 11612  0124A2  6FE9               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
 11613  0124A4  EC74  F0B0         	call	_RTCC_from_epoch	;wreg free
 11614                           
 11615                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
 11616  0124A8  0E01               	movlw	1
 11617  0124AA  6E50               	movwf	_time_change_flag,c
 11618  0124AC  0012               	return		;funcret
 11619  0124AE                     __end_of_RTCC_adjust_time_dec:
 11620                           	opt stack 0
 11621                           tblptru	equ	0xFF8
 11622                           tblptrh	equ	0xFF7
 11623                           tblptrl	equ	0xFF6
 11624                           tablat	equ	0xFF5
 11625                           prodh	equ	0xFF4
 11626                           prodl	equ	0xFF3
 11627                           intcon	equ	0xFF2
 11628                           postinc0	equ	0xFEE
 11629                           wreg	equ	0xFE8
 11630                           indf1	equ	0xFE7
 11631                           postinc1	equ	0xFE6
 11632                           postdec1	equ	0xFE5
 11633                           fsr1h	equ	0xFE2
 11634                           fsr1l	equ	0xFE1
 11635                           indf2	equ	0xFDF
 11636                           postinc2	equ	0xFDE
 11637                           postdec2	equ	0xFDD
 11638                           fsr2h	equ	0xFDA
 11639                           fsr2l	equ	0xFD9
 11640                           status	equ	0xFD8
 11641                           
 11642 ;; *************** function _RTCC_from_epoch *****************
 11643 ;; Defined at:
 11644 ;;		line 242 in file "../My_header\My_RTCC.h"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  ct              2   49[BANK0 ] PTR struct .
 11647 ;;		 -> caltime_now(7), 
 11648 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 11649 ;;		 -> epoch_now(4), 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;		None               void
 11654 ;; Registers used:
 11655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11664 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11665 ;;Total ram usage:        4 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:   14
 11668 ;; This function calls:
 11669 ;;		_caltime_to_RTCC
 11670 ;;		_epoch_to_caltime
 11671 ;; This function is called by:
 11672 ;;		_RTCC_adjust_time_inc
 11673 ;;		_RTCC_adjust_time_dec
 11674 ;;		_main
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           	psect	text34
 11679  0160E8                     __ptext34:
 11680                           	opt stack 0
 11681  0160E8                     _RTCC_from_epoch:
 11682                           	opt stack 13
 11683                           
 11684                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
 11685                           
 11686                           ;incstack = 0
 11687  0160E8  C0E6  F0D6         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
 11688  0160EC  C0E7  F0D7         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
 11689  0160F0  C0E8  F0D8         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
 11690  0160F4  C0E9  F0D9         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
 11691  0160F8  EC57  F092         	call	_epoch_to_caltime	;wreg free
 11692                           
 11693                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
 11694  0160FC  C0E6  F0BE         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
 11695  016100  C0E7  F0BF         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
 11696  016104  ECCE  F0A0         	call	_caltime_to_RTCC	;wreg free
 11697  016108  0012               	return		;funcret
 11698  01610A                     __end_of_RTCC_from_epoch:
 11699                           	opt stack 0
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           postinc0	equ	0xFEE
 11708                           wreg	equ	0xFE8
 11709                           indf1	equ	0xFE7
 11710                           postinc1	equ	0xFE6
 11711                           postdec1	equ	0xFE5
 11712                           fsr1h	equ	0xFE2
 11713                           fsr1l	equ	0xFE1
 11714                           indf2	equ	0xFDF
 11715                           postinc2	equ	0xFDE
 11716                           postdec2	equ	0xFDD
 11717                           fsr2h	equ	0xFDA
 11718                           fsr2l	equ	0xFD9
 11719                           status	equ	0xFD8
 11720                           
 11721 ;; *************** function _epoch_to_caltime *****************
 11722 ;; Defined at:
 11723 ;;		line 157 in file "../My_header\My_RTCC.h"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  ct              2   33[BANK0 ] PTR struct .
 11726 ;;		 -> caltime_now(7), 
 11727 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 11728 ;;		 -> epoch_now(4), 
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;  num             4   45[BANK0 ] unsigned long 
 11731 ;;  day             2   41[BANK0 ] unsigned int 
 11732 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 11733 ;;  month           1   44[BANK0 ] unsigned char 
 11734 ;;  year            1   43[BANK0 ] unsigned char 
 11735 ;; Return value:  Size  Location     Type
 11736 ;;		None               void
 11737 ;; Registers used:
 11738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11745 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11746 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11747 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11748 ;;Total ram usage:       16 bytes
 11749 ;; Hardware stack levels used:    1
 11750 ;; Hardware stack levels required when called:   13
 11751 ;; This function calls:
 11752 ;;		_get_quot_rem
 11753 ;;		_month_length
 11754 ;; This function is called by:
 11755 ;;		_RTCC_from_caltime
 11756 ;;		_RTCC_from_epoch
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text35
 11761  0124AE                     __ptext35:
 11762                           	opt stack 0
 11763  0124AE                     _epoch_to_caltime:
 11764                           	opt stack 13
 11765                           
 11766                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 11767                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 11768                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 11769                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 11770                           ;My_header\My_RTCC.h: 164: uint16_t day;
 11771                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 11772                           
 11773                           ;incstack = 0
 11774  0124AE  0E00               	movlw	0
 11775  0124B0  0100               	movlb	0	; () banked
 11776  0124B2  6FE0               	movwf	epoch_to_caltime@year& (0+255),b
 11777                           
 11778                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 11779  0124B4  0E01               	movlw	1
 11780  0124B6  0100               	movlb	0	; () banked
 11781  0124B8  6FE1               	movwf	epoch_to_caltime@month& (0+255),b
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;My_header\My_RTCC.h: 167: epoch_t num;
 11785                           ;My_header\My_RTCC.h: 169: num = *ep;
 11786  0124BA  C0D8  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 11787  0124BE  C0D9  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 11788  0124C2  CFDE F0E2          	movff	postinc2,epoch_to_caltime@num
 11789  0124C6  CFDE F0E3          	movff	postinc2,epoch_to_caltime@num+1
 11790  0124CA  CFDE F0E4          	movff	postinc2,epoch_to_caltime@num+2
 11791  0124CE  CFDE F0E5          	movff	postinc2,epoch_to_caltime@num+3
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 11795  0124D2  0EE2               	movlw	low epoch_to_caltime@num
 11796  0124D4  0100               	movlb	0	; () banked
 11797  0124D6  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 11798  0124D8  0E00               	movlw	high epoch_to_caltime@num
 11799  0124DA  0100               	movlb	0	; () banked
 11800  0124DC  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11801  0124DE  0E3C               	movlw	60
 11802  0124E0  0100               	movlb	0	; () banked
 11803  0124E2  6FD0               	movwf	get_quot_rem@div& (0+255),b
 11804  0124E4  ECFA  F09F         	call	_get_quot_rem	;wreg free
 11805  0124E8  0100               	movlb	0	; () banked
 11806  0124EA  51CE               	movf	?_get_quot_rem& (0+255),w,b
 11807  0124EC  C0D6  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 11808  0124F0  C0D7  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 11809  0124F4  6EDF               	movwf	indf2,c
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 11813  0124F6  0EE2               	movlw	low epoch_to_caltime@num
 11814  0124F8  0100               	movlb	0	; () banked
 11815  0124FA  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 11816  0124FC  0E00               	movlw	high epoch_to_caltime@num
 11817  0124FE  0100               	movlb	0	; () banked
 11818  012500  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11819  012502  0E3C               	movlw	60
 11820  012504  0100               	movlb	0	; () banked
 11821  012506  6FD0               	movwf	get_quot_rem@div& (0+255),b
 11822  012508  ECFA  F09F         	call	_get_quot_rem	;wreg free
 11823  01250C  0100               	movlb	0	; () banked
 11824  01250E  EE20 F001          	lfsr	2,1
 11825  012512  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 11826  012514  26D9               	addwf	fsr2l,f,c
 11827  012516  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11828  012518  22DA               	addwfc	fsr2h,f,c
 11829  01251A  0100               	movlb	0	; () banked
 11830  01251C  C0CE  FFDF         	movff	?_get_quot_rem,indf2
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 11834  012520  0EE2               	movlw	low epoch_to_caltime@num
 11835  012522  0100               	movlb	0	; () banked
 11836  012524  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 11837  012526  0E00               	movlw	high epoch_to_caltime@num
 11838  012528  0100               	movlb	0	; () banked
 11839  01252A  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11840  01252C  0E18               	movlw	24
 11841  01252E  0100               	movlb	0	; () banked
 11842  012530  6FD0               	movwf	get_quot_rem@div& (0+255),b
 11843  012532  ECFA  F09F         	call	_get_quot_rem	;wreg free
 11844  012536  0100               	movlb	0	; () banked
 11845  012538  EE20 F002          	lfsr	2,2
 11846  01253C  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 11847  01253E  26D9               	addwf	fsr2l,f,c
 11848  012540  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11849  012542  22DA               	addwfc	fsr2h,f,c
 11850  012544  0100               	movlb	0	; () banked
 11851  012546  C0CE  FFDF         	movff	?_get_quot_rem,indf2
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;My_header\My_RTCC.h: 173: day = num;
 11855  01254A  C0E2  F0DE         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 11856  01254E  C0E3  F0DF         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 11860  012552  C0DE  F0DC         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 11861  012556  C0DF  F0DD         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;My_header\My_RTCC.h: 176: num += 6;
 11865  01255A  0E06               	movlw	6
 11866  01255C  0100               	movlb	0	; () banked
 11867  01255E  27E2               	addwf	epoch_to_caltime@num& (0+255),f,b
 11868  012560  0E00               	movlw	0
 11869  012562  23E3               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 11870  012564  23E4               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 11871  012566  23E5               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 11875  012568  0EE2               	movlw	low epoch_to_caltime@num
 11876  01256A  0100               	movlb	0	; () banked
 11877  01256C  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 11878  01256E  0E00               	movlw	high epoch_to_caltime@num
 11879  012570  0100               	movlb	0	; () banked
 11880  012572  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11881  012574  0E07               	movlw	7
 11882  012576  0100               	movlb	0	; () banked
 11883  012578  6FD0               	movwf	get_quot_rem@div& (0+255),b
 11884  01257A  ECFA  F09F         	call	_get_quot_rem	;wreg free
 11885  01257E  0100               	movlb	0	; () banked
 11886  012580  EE20 F003          	lfsr	2,3
 11887  012584  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 11888  012586  26D9               	addwf	fsr2l,f,c
 11889  012588  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11890  01258A  22DA               	addwfc	fsr2h,f,c
 11891  01258C  0100               	movlb	0	; () banked
 11892  01258E  C0CE  FFDF         	movff	?_get_quot_rem,indf2
 11893                           
 11894                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 11895  012592  D03F               	goto	l9356
 11896  012594                     l426:
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 11900  012594  848A               	bsf	3978,2,c	;volatile
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 11904  012596  C0E1  F0BB         	movff	epoch_to_caltime@month,month_length@month
 11905  01259A  0100               	movlb	0	; () banked
 11906  01259C  51E0               	movf	epoch_to_caltime@year& (0+255),w,b
 11907  01259E  ECDB  F09D         	call	_month_length
 11908  0125A2  0100               	movlb	0	; () banked
 11909  0125A4  6FDA               	movwf	??_epoch_to_caltime& (0+255),b
 11910  0125A6  6BDB               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 11911  0125A8  0100               	movlb	0	; () banked
 11912  0125AA  1FDA               	comf	??_epoch_to_caltime& (0+255),f,b
 11913  0125AC  1FDB               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 11914  0125AE  4BDA               	infsnz	??_epoch_to_caltime& (0+255),f,b
 11915  0125B0  2BDB               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 11916  0125B2  0100               	movlb	0	; () banked
 11917  0125B4  51DE               	movf	epoch_to_caltime@day& (0+255),w,b
 11918  0125B6  0100               	movlb	0	; () banked
 11919  0125B8  25DA               	addwf	??_epoch_to_caltime& (0+255),w,b
 11920  0125BA  0100               	movlb	0	; () banked
 11921  0125BC  6FDE               	movwf	epoch_to_caltime@day& (0+255),b
 11922  0125BE  0100               	movlb	0	; () banked
 11923  0125C0  51DF               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 11924  0125C2  0100               	movlb	0	; () banked
 11925  0125C4  21DB               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 11926  0125C6  0100               	movlb	0	; () banked
 11927  0125C8  6FDF               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 11931  0125CA  0E0C               	movlw	12
 11932  0125CC  0100               	movlb	0	; () banked
 11933  0125CE  19E1               	xorwf	epoch_to_caltime@month& (0+255),w,b
 11934  0125D0  A4D8               	btfss	status,2,c
 11935  0125D2  D019               	goto	l9350
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;My_header\My_RTCC.h: 190: month = 1;
 11939  0125D4  0E01               	movlw	1
 11940  0125D6  0100               	movlb	0	; () banked
 11941  0125D8  6FE1               	movwf	epoch_to_caltime@month& (0+255),b
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;My_header\My_RTCC.h: 191: year++;
 11945  0125DA  0100               	movlb	0	; () banked
 11946  0125DC  2BE0               	incf	epoch_to_caltime@year& (0+255),f,b
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 11950  0125DE  0E63               	movlw	99
 11951  0125E0  0100               	movlb	0	; () banked
 11952  0125E2  65E0               	cpfsgt	epoch_to_caltime@year& (0+255),b
 11953  0125E4  D012               	goto	l9352
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 11957  0125E6  C0D8  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 11958  0125EA  C0D9  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 11959  0125EE  0E80               	movlw	128
 11960  0125F0  5EDE               	subwf	postinc2,f,c
 11961  0125F2  0E13               	movlw	19
 11962  0125F4  5ADE               	subwfb	postinc2,f,c
 11963  0125F6  0E19               	movlw	25
 11964  0125F8  5ADE               	subwfb	postinc2,f,c
 11965  0125FA  0EBC               	movlw	188
 11966  0125FC  5ADE               	subwfb	postinc2,f,c
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;My_header\My_RTCC.h: 195: year = 0;
 11970  0125FE  0E00               	movlw	0
 11971  012600  0100               	movlb	0	; () banked
 11972  012602  6FE0               	movwf	epoch_to_caltime@year& (0+255),b
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;My_header\My_RTCC.h: 196: }
 11976                           ;My_header\My_RTCC.h: 197: } else {
 11977  012604  D002               	goto	l9352
 11978  012606                     l9350:
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;My_header\My_RTCC.h: 198: month++;
 11982  012606  0100               	movlb	0	; () banked
 11983  012608  2BE1               	incf	epoch_to_caltime@month& (0+255),f,b
 11984  01260A                     l9352:
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;My_header\My_RTCC.h: 199: }
 11988                           ;My_header\My_RTCC.h: 200: month_cache = month;
 11989  01260A  C0E1  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;My_header\My_RTCC.h: 201: year_cache = year;
 11993  01260E  C0E0  F0A9         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 11994  012612                     l9356:
 11995                           
 11996                           ; BSR set to: 0
 11997  012612  C0E1  F0BB         	movff	epoch_to_caltime@month,month_length@month
 11998  012616  0100               	movlb	0	; () banked
 11999  012618  51E0               	movf	epoch_to_caltime@year& (0+255),w,b
 12000  01261A  ECDB  F09D         	call	_month_length
 12001  01261E  0100               	movlb	0	; () banked
 12002  012620  6FDA               	movwf	??_epoch_to_caltime& (0+255),b
 12003  012622  0100               	movlb	0	; () banked
 12004  012624  51DA               	movf	??_epoch_to_caltime& (0+255),w,b
 12005  012626  0100               	movlb	0	; () banked
 12006  012628  5DDE               	subwf	epoch_to_caltime@day& (0+255),w,b
 12007  01262A  0E00               	movlw	0
 12008  01262C  59DF               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 12009  01262E  B0D8               	btfsc	status,0,c
 12010  012630  D7B1               	goto	l426
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;My_header\My_RTCC.h: 202: }
 12014                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 12015                           
 12016                           ; BSR set to: 0
 12017  012632  C0DE  F0DA         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 12018  012636  C0DF  F0DB         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 12019  01263A  0100               	movlb	0	; () banked
 12020  01263C  1FDA               	comf	??_epoch_to_caltime& (0+255),f,b
 12021  01263E  1FDB               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 12022  012640  4BDA               	infsnz	??_epoch_to_caltime& (0+255),f,b
 12023  012642  2BDB               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 12024  012644  0100               	movlb	0	; () banked
 12025  012646  51DC               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 12026  012648  0100               	movlb	0	; () banked
 12027  01264A  25DA               	addwf	??_epoch_to_caltime& (0+255),w,b
 12028  01264C  0101               	movlb	1	; () banked
 12029  01264E  6FDB               	movwf	epoch_to_caltime@day_cache& (0+255),b
 12030  012650  0100               	movlb	0	; () banked
 12031  012652  51DD               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 12032  012654  0100               	movlb	0	; () banked
 12033  012656  21DB               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 12034  012658  0101               	movlb	1	; () banked
 12035  01265A  6FDC               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 12036                           
 12037                           ; BSR set to: 1
 12038                           ;My_header\My_RTCC.h: 204: day++;
 12039  01265C  0100               	movlb	0	; () banked
 12040  01265E  4BDE               	infsnz	epoch_to_caltime@day& (0+255),f,b
 12041  012660  2BDF               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 12045  012662  0100               	movlb	0	; () banked
 12046  012664  EE20 F006          	lfsr	2,6
 12047  012668  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12048  01266A  26D9               	addwf	fsr2l,f,c
 12049  01266C  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12050  01266E  22DA               	addwfc	fsr2h,f,c
 12051  012670  C0E0  FFDF         	movff	epoch_to_caltime@year,indf2
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 12055  012674  0100               	movlb	0	; () banked
 12056  012676  EE20 F005          	lfsr	2,5
 12057  01267A  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12058  01267C  26D9               	addwf	fsr2l,f,c
 12059  01267E  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12060  012680  22DA               	addwfc	fsr2h,f,c
 12061  012682  C0E1  FFDF         	movff	epoch_to_caltime@month,indf2
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 12065  012686  0100               	movlb	0	; () banked
 12066  012688  EE20 F004          	lfsr	2,4
 12067  01268C  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12068  01268E  26D9               	addwf	fsr2l,f,c
 12069  012690  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12070  012692  22DA               	addwfc	fsr2h,f,c
 12071  012694  C0DE  FFDF         	movff	epoch_to_caltime@day,indf2
 12072                           
 12073                           ; BSR set to: 0
 12074  012698  0012               	return		;funcret
 12075  01269A                     __end_of_epoch_to_caltime:
 12076                           	opt stack 0
 12077                           tblptru	equ	0xFF8
 12078                           tblptrh	equ	0xFF7
 12079                           tblptrl	equ	0xFF6
 12080                           tablat	equ	0xFF5
 12081                           prodh	equ	0xFF4
 12082                           prodl	equ	0xFF3
 12083                           intcon	equ	0xFF2
 12084                           postinc0	equ	0xFEE
 12085                           wreg	equ	0xFE8
 12086                           indf1	equ	0xFE7
 12087                           postinc1	equ	0xFE6
 12088                           postdec1	equ	0xFE5
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           indf2	equ	0xFDF
 12092                           postinc2	equ	0xFDE
 12093                           postdec2	equ	0xFDD
 12094                           fsr2h	equ	0xFDA
 12095                           fsr2l	equ	0xFD9
 12096                           status	equ	0xFD8
 12097                           
 12098 ;; *************** function _get_quot_rem *****************
 12099 ;; Defined at:
 12100 ;;		line 112 in file "../My_header\My_RTCC.h"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 12103 ;;		 -> epoch_to_caltime@num(4), 
 12104 ;;  div             1   27[BANK0 ] unsigned char 
 12105 ;; Auto vars:     Size  Location     Type
 12106 ;;  num             4   29[BANK0 ] unsigned long 
 12107 ;; Return value:  Size  Location     Type
 12108 ;;                  4   25[BANK0 ] unsigned long 
 12109 ;; Registers used:
 12110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12111 ;; Tracked objects:
 12112 ;;		On entry : 0/0
 12113 ;;		On exit  : 0/0
 12114 ;;		Unchanged: 0/0
 12115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12117 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12119 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12120 ;;Total ram usage:        8 bytes
 12121 ;; Hardware stack levels used:    1
 12122 ;; Hardware stack levels required when called:   12
 12123 ;; This function calls:
 12124 ;;		___lldiv
 12125 ;;		___lmul
 12126 ;; This function is called by:
 12127 ;;		_epoch_to_caltime
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text36
 12132  013FF4                     __ptext36:
 12133                           	opt stack 0
 12134  013FF4                     _get_quot_rem:
 12135                           	opt stack 13
 12136                           
 12137                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;incstack = 0
 12141  013FF4  C0CE  FFD9         	movff	get_quot_rem@quot,fsr2l
 12142  013FF8  C0CF  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 12143  013FFC  CFDE F0D2          	movff	postinc2,get_quot_rem@num
 12144  014000  CFDE F0D3          	movff	postinc2,get_quot_rem@num+1
 12145  014004  CFDE F0D4          	movff	postinc2,get_quot_rem@num+2
 12146  014008  CFDE F0D5          	movff	postinc2,get_quot_rem@num+3
 12147                           
 12148                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 12149  01400C  0100               	movlb	0	; () banked
 12150  01400E  51D0               	movf	get_quot_rem@div& (0+255),w,b
 12151  014010  0100               	movlb	0	; () banked
 12152  014012  6FB9               	movwf	___lldiv@divisor& (0+255),b
 12153  014014  6BBA               	clrf	(___lldiv@divisor+1)& (0+255),b
 12154  014016  6BBB               	clrf	(___lldiv@divisor+2)& (0+255),b
 12155  014018  6BBC               	clrf	(___lldiv@divisor+3)& (0+255),b
 12156  01401A  C0D2  F0B5         	movff	get_quot_rem@num,___lldiv@dividend
 12157  01401E  C0D3  F0B6         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 12158  014022  C0D4  F0B7         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 12159  014026  C0D5  F0B8         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 12160  01402A  ECEE  F0A3         	call	___lldiv	;wreg free
 12161  01402E  C0CE  FFD9         	movff	get_quot_rem@quot,fsr2l
 12162  014032  C0CF  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 12163  014036  0100               	movlb	0	; () banked
 12164  014038  C0B5  FFDE         	movff	?___lldiv,postinc2
 12165  01403C  0100               	movlb	0	; () banked
 12166  01403E  C0B6  FFDE         	movff	?___lldiv+1,postinc2
 12167  014042  0100               	movlb	0	; () banked
 12168  014044  C0B7  FFDE         	movff	?___lldiv+2,postinc2
 12169  014048  0100               	movlb	0	; () banked
 12170  01404A  C0B8  FFDD         	movff	?___lldiv+3,postdec2
 12171  01404E  52DD               	movf	postdec2,f,c
 12172  014050  52DD               	movf	postdec2,f,c
 12173  014052  CFDE F0C2          	movff	postinc2,___lmul@multiplier
 12174  014056  CFDE F0C3          	movff	postinc2,___lmul@multiplier+1
 12175  01405A  CFDE F0C4          	movff	postinc2,___lmul@multiplier+2
 12176  01405E  CFDE F0C5          	movff	postinc2,___lmul@multiplier+3
 12177  014062  0100               	movlb	0	; () banked
 12178  014064  51D0               	movf	get_quot_rem@div& (0+255),w,b
 12179  014066  0100               	movlb	0	; () banked
 12180  014068  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 12181  01406A  6BC7               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12182  01406C  6BC8               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12183  01406E  6BC9               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12184  014070  EC91  F0AA         	call	___lmul	;wreg free
 12185  014074  0100               	movlb	0	; () banked
 12186  014076  1FC2               	comf	?___lmul& (0+255),f,b
 12187  014078  0100               	movlb	0	; () banked
 12188  01407A  1FC3               	comf	(?___lmul+1)& (0+255),f,b
 12189  01407C  0100               	movlb	0	; () banked
 12190  01407E  1FC4               	comf	(?___lmul+2)& (0+255),f,b
 12191  014080  0100               	movlb	0	; () banked
 12192  014082  1FC5               	comf	(?___lmul+3)& (0+255),f,b
 12193  014084  0100               	movlb	0	; () banked
 12194  014086  2BC2               	incf	?___lmul& (0+255),f,b
 12195  014088  0E00               	movlw	0
 12196  01408A  0100               	movlb	0	; () banked
 12197  01408C  23C3               	addwfc	(?___lmul+1)& (0+255),f,b
 12198  01408E  0100               	movlb	0	; () banked
 12199  014090  23C4               	addwfc	(?___lmul+2)& (0+255),f,b
 12200  014092  0100               	movlb	0	; () banked
 12201  014094  23C5               	addwfc	(?___lmul+3)& (0+255),f,b
 12202  014096  0100               	movlb	0	; () banked
 12203  014098  51D2               	movf	get_quot_rem@num& (0+255),w,b
 12204  01409A  0100               	movlb	0	; () banked
 12205  01409C  25C2               	addwf	?___lmul& (0+255),w,b
 12206  01409E  0100               	movlb	0	; () banked
 12207  0140A0  6FCE               	movwf	?_get_quot_rem& (0+255),b
 12208  0140A2  0100               	movlb	0	; () banked
 12209  0140A4  51D3               	movf	(get_quot_rem@num+1)& (0+255),w,b
 12210  0140A6  0100               	movlb	0	; () banked
 12211  0140A8  21C3               	addwfc	(?___lmul+1)& (0+255),w,b
 12212  0140AA  0100               	movlb	0	; () banked
 12213  0140AC  6FCF               	movwf	(?_get_quot_rem+1)& (0+255),b
 12214  0140AE  0100               	movlb	0	; () banked
 12215  0140B0  51D4               	movf	(get_quot_rem@num+2)& (0+255),w,b
 12216  0140B2  0100               	movlb	0	; () banked
 12217  0140B4  21C4               	addwfc	(?___lmul+2)& (0+255),w,b
 12218  0140B6  0100               	movlb	0	; () banked
 12219  0140B8  6FD0               	movwf	(?_get_quot_rem+2)& (0+255),b
 12220  0140BA  0100               	movlb	0	; () banked
 12221  0140BC  51D5               	movf	(get_quot_rem@num+3)& (0+255),w,b
 12222  0140BE  0100               	movlb	0	; () banked
 12223  0140C0  21C5               	addwfc	(?___lmul+3)& (0+255),w,b
 12224  0140C2  0100               	movlb	0	; () banked
 12225  0140C4  6FD1               	movwf	(?_get_quot_rem+3)& (0+255),b
 12226  0140C6  0012               	return	
 12227  0140C8                     __end_of_get_quot_rem:
 12228                           	opt stack 0
 12229                           tblptru	equ	0xFF8
 12230                           tblptrh	equ	0xFF7
 12231                           tblptrl	equ	0xFF6
 12232                           tablat	equ	0xFF5
 12233                           prodh	equ	0xFF4
 12234                           prodl	equ	0xFF3
 12235                           intcon	equ	0xFF2
 12236                           postinc0	equ	0xFEE
 12237                           wreg	equ	0xFE8
 12238                           indf1	equ	0xFE7
 12239                           postinc1	equ	0xFE6
 12240                           postdec1	equ	0xFE5
 12241                           fsr1h	equ	0xFE2
 12242                           fsr1l	equ	0xFE1
 12243                           indf2	equ	0xFDF
 12244                           postinc2	equ	0xFDE
 12245                           postdec2	equ	0xFDD
 12246                           fsr2h	equ	0xFDA
 12247                           fsr2l	equ	0xFD9
 12248                           status	equ	0xFD8
 12249                           
 12250 ;; *************** function _caltime_to_RTCC *****************
 12251 ;; Defined at:
 12252 ;;		line 137 in file "../My_header\My_RTCC.h"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  ct              2    9[BANK0 ] PTR struct .
 12255 ;;		 -> caltime_now(7), 
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;		None               void
 12260 ;; Registers used:
 12261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12271 ;;Total ram usage:        2 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:   13
 12274 ;; This function calls:
 12275 ;;		_d_to_x
 12276 ;; This function is called by:
 12277 ;;		_RTCC_from_caltime
 12278 ;;		_RTCC_from_epoch
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text37
 12283  01419C                     __ptext37:
 12284                           	opt stack 0
 12285  01419C                     _caltime_to_RTCC:
 12286                           	opt stack 13
 12287  01419C                     l413:
 12288  01419C  010F               	movlb	15	; () banked
 12289  01419E  B93F               	btfsc	63,4,b	;volatile
 12290  0141A0  D7FD               	goto	l413
 12291                           
 12292                           ; BSR set to: 15
 12293                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 12294  0141A2  010F               	movlb	15	; () banked
 12295  0141A4  813F               	bsf	63,0,b	;volatile
 12296                           
 12297                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 12298  0141A6  010F               	movlb	15	; () banked
 12299  0141A8  833F               	bsf	63,1,b	;volatile
 12300                           
 12301                           ; BSR set to: 15
 12302                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 12303  0141AA  0100               	movlb	0	; () banked
 12304  0141AC  EE20 F006          	lfsr	2,6
 12305  0141B0  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12306  0141B2  26D9               	addwf	fsr2l,f,c
 12307  0141B4  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12308  0141B6  22DA               	addwfc	fsr2h,f,c
 12309  0141B8  50DF               	movf	indf2,w,c
 12310  0141BA  EC14  F0B0         	call	_d_to_x
 12311  0141BE  010F               	movlb	15	; () banked
 12312  0141C0  6F3A               	movwf	58,b	;volatile
 12313                           
 12314                           ; BSR set to: 15
 12315                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 12316  0141C2  0E00               	movlw	0
 12317  0141C4  010F               	movlb	15	; () banked
 12318  0141C6  6F3B               	movwf	59,b	;volatile
 12319                           
 12320                           ; BSR set to: 15
 12321                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 12322  0141C8  010F               	movlb	15	; () banked
 12323  0141CA  913F               	bcf	63,0,b	;volatile
 12324                           
 12325                           ; BSR set to: 15
 12326                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 12327  0141CC  010F               	movlb	15	; () banked
 12328  0141CE  833F               	bsf	63,1,b	;volatile
 12329                           
 12330                           ; BSR set to: 15
 12331                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 12332  0141D0  0100               	movlb	0	; () banked
 12333  0141D2  EE20 F004          	lfsr	2,4
 12334  0141D6  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12335  0141D8  26D9               	addwf	fsr2l,f,c
 12336  0141DA  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12337  0141DC  22DA               	addwfc	fsr2h,f,c
 12338  0141DE  50DF               	movf	indf2,w,c
 12339  0141E0  EC14  F0B0         	call	_d_to_x
 12340  0141E4  010F               	movlb	15	; () banked
 12341  0141E6  6F3A               	movwf	58,b	;volatile
 12342                           
 12343                           ; BSR set to: 15
 12344                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 12345  0141E8  0100               	movlb	0	; () banked
 12346  0141EA  EE20 F005          	lfsr	2,5
 12347  0141EE  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12348  0141F0  26D9               	addwf	fsr2l,f,c
 12349  0141F2  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12350  0141F4  22DA               	addwfc	fsr2h,f,c
 12351  0141F6  50DF               	movf	indf2,w,c
 12352  0141F8  EC14  F0B0         	call	_d_to_x
 12353  0141FC  010F               	movlb	15	; () banked
 12354  0141FE  6F3B               	movwf	59,b	;volatile
 12355                           
 12356                           ; BSR set to: 15
 12357                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 12358  014200  010F               	movlb	15	; () banked
 12359  014202  813F               	bsf	63,0,b	;volatile
 12360                           
 12361                           ; BSR set to: 15
 12362                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 12363  014204  010F               	movlb	15	; () banked
 12364  014206  933F               	bcf	63,1,b	;volatile
 12365                           
 12366                           ; BSR set to: 15
 12367                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 12368  014208  0100               	movlb	0	; () banked
 12369  01420A  EE20 F002          	lfsr	2,2
 12370  01420E  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12371  014210  26D9               	addwf	fsr2l,f,c
 12372  014212  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12373  014214  22DA               	addwfc	fsr2h,f,c
 12374  014216  50DF               	movf	indf2,w,c
 12375  014218  EC14  F0B0         	call	_d_to_x
 12376  01421C  010F               	movlb	15	; () banked
 12377  01421E  6F3A               	movwf	58,b	;volatile
 12378                           
 12379                           ; BSR set to: 15
 12380                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 12381  014220  0100               	movlb	0	; () banked
 12382  014222  EE20 F003          	lfsr	2,3
 12383  014226  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12384  014228  26D9               	addwf	fsr2l,f,c
 12385  01422A  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12386  01422C  22DA               	addwfc	fsr2h,f,c
 12387  01422E  50DF               	movf	indf2,w,c
 12388  014230  EC14  F0B0         	call	_d_to_x
 12389  014234  010F               	movlb	15	; () banked
 12390  014236  6F3B               	movwf	59,b	;volatile
 12391                           
 12392                           ; BSR set to: 15
 12393                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 12394  014238  010F               	movlb	15	; () banked
 12395  01423A  913F               	bcf	63,0,b	;volatile
 12396                           
 12397                           ; BSR set to: 15
 12398                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 12399  01423C  010F               	movlb	15	; () banked
 12400  01423E  933F               	bcf	63,1,b	;volatile
 12401                           
 12402                           ; BSR set to: 15
 12403                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 12404  014240  C0BE  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 12405  014244  C0BF  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 12406  014248  50DF               	movf	indf2,w,c
 12407  01424A  EC14  F0B0         	call	_d_to_x
 12408  01424E  010F               	movlb	15	; () banked
 12409  014250  6F3A               	movwf	58,b	;volatile
 12410                           
 12411                           ; BSR set to: 15
 12412                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 12413  014252  0100               	movlb	0	; () banked
 12414  014254  EE20 F001          	lfsr	2,1
 12415  014258  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12416  01425A  26D9               	addwf	fsr2l,f,c
 12417  01425C  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12418  01425E  22DA               	addwfc	fsr2h,f,c
 12419  014260  50DF               	movf	indf2,w,c
 12420  014262  EC14  F0B0         	call	_d_to_x
 12421  014266  010F               	movlb	15	; () banked
 12422  014268  6F3B               	movwf	59,b	;volatile
 12423                           
 12424                           ; BSR set to: 15
 12425  01426A  0012               	return		;funcret
 12426  01426C                     __end_of_caltime_to_RTCC:
 12427                           	opt stack 0
 12428                           tblptru	equ	0xFF8
 12429                           tblptrh	equ	0xFF7
 12430                           tblptrl	equ	0xFF6
 12431                           tablat	equ	0xFF5
 12432                           prodh	equ	0xFF4
 12433                           prodl	equ	0xFF3
 12434                           intcon	equ	0xFF2
 12435                           postinc0	equ	0xFEE
 12436                           wreg	equ	0xFE8
 12437                           indf1	equ	0xFE7
 12438                           postinc1	equ	0xFE6
 12439                           postdec1	equ	0xFE5
 12440                           fsr1h	equ	0xFE2
 12441                           fsr1l	equ	0xFE1
 12442                           indf2	equ	0xFDF
 12443                           postinc2	equ	0xFDE
 12444                           postdec2	equ	0xFDD
 12445                           fsr2h	equ	0xFDA
 12446                           fsr2l	equ	0xFD9
 12447                           status	equ	0xFD8
 12448                           
 12449 ;; *************** function _d_to_x *****************
 12450 ;; Defined at:
 12451 ;;		line 73 in file "../My_header\My_RTCC.h"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  dec             1    wreg     unsigned char 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  dec             1    8[BANK0 ] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      unsigned char 
 12458 ;; Registers used:
 12459 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12469 ;;Total ram usage:        1 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:   12
 12472 ;; This function calls:
 12473 ;;		___awdiv
 12474 ;; This function is called by:
 12475 ;;		_caltime_to_RTCC
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           	psect	text38
 12480  016028                     __ptext38:
 12481                           	opt stack 0
 12482  016028                     _d_to_x:
 12483                           	opt stack 13
 12484                           
 12485                           ; BSR set to: 15
 12486                           ;incstack = 0
 12487                           ;d_to_x@dec stored from wreg
 12488  016028  0100               	movlb	0	; () banked
 12489  01602A  6FBD               	movwf	d_to_x@dec& (0+255),b
 12490                           
 12491                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 12492  01602C  C0BD  F0B5         	movff	d_to_x@dec,___awdiv@dividend
 12493  016030  0100               	movlb	0	; () banked
 12494  016032  6BB6               	clrf	(___awdiv@dividend+1)& (0+255),b
 12495  016034  0E00               	movlw	0
 12496  016036  0100               	movlb	0	; () banked
 12497  016038  6FB8               	movwf	(___awdiv@divisor+1)& (0+255),b
 12498  01603A  0E0A               	movlw	10
 12499  01603C  6FB7               	movwf	___awdiv@divisor& (0+255),b
 12500  01603E  EC8F  F0A3         	call	___awdiv	;wreg free
 12501  016042  0100               	movlb	0	; () banked
 12502  016044  51B5               	movf	?___awdiv& (0+255),w,b
 12503  016046  0D06               	mullw	6
 12504  016048  50F3               	movf	prodl,w,c
 12505  01604A  0100               	movlb	0	; () banked
 12506  01604C  25BD               	addwf	d_to_x@dec& (0+255),w,b
 12507  01604E  0012               	return	
 12508  016050                     __end_of_d_to_x:
 12509                           	opt stack 0
 12510                           tblptru	equ	0xFF8
 12511                           tblptrh	equ	0xFF7
 12512                           tblptrl	equ	0xFF6
 12513                           tablat	equ	0xFF5
 12514                           prodh	equ	0xFF4
 12515                           prodl	equ	0xFF3
 12516                           intcon	equ	0xFF2
 12517                           postinc0	equ	0xFEE
 12518                           wreg	equ	0xFE8
 12519                           indf1	equ	0xFE7
 12520                           postinc1	equ	0xFE6
 12521                           postdec1	equ	0xFE5
 12522                           fsr1h	equ	0xFE2
 12523                           fsr1l	equ	0xFE1
 12524                           indf2	equ	0xFDF
 12525                           postinc2	equ	0xFDE
 12526                           postdec2	equ	0xFDD
 12527                           fsr2h	equ	0xFDA
 12528                           fsr2l	equ	0xFD9
 12529                           status	equ	0xFD8
 12530                           
 12531 ;; *************** function ___awdiv *****************
 12532 ;; Defined at:
 12533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;  dividend        2    0[BANK0 ] int 
 12536 ;;  divisor         2    2[BANK0 ] int 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;  quotient        2    6[BANK0 ] int 
 12539 ;;  sign            1    5[BANK0 ] unsigned char 
 12540 ;;  counter         1    4[BANK0 ] unsigned char 
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  2    0[BANK0 ] int 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, status,0
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12551 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;Total ram usage:        8 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:   11
 12557 ;; This function calls:
 12558 ;;		Nothing
 12559 ;; This function is called by:
 12560 ;;		_d_to_x
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text39
 12565  01471E                     __ptext39:
 12566                           	opt stack 0
 12567  01471E                     ___awdiv:
 12568                           	opt stack 13
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;incstack = 0
 12572  01471E  0E00               	movlw	0
 12573  014720  0100               	movlb	0	; () banked
 12574  014722  6FBA               	movwf	___awdiv@sign& (0+255),b
 12575                           
 12576                           ; BSR set to: 0
 12577  014724  0100               	movlb	0	; () banked
 12578  014726  AFB8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12579  014728  D008               	goto	l9046
 12580                           
 12581                           ; BSR set to: 0
 12582  01472A  0100               	movlb	0	; () banked
 12583  01472C  6DB7               	negf	___awdiv@divisor& (0+255),b
 12584  01472E  1FB8               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12585  014730  B0D8               	btfsc	status,0,c
 12586  014732  2BB8               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12587                           
 12588                           ; BSR set to: 0
 12589  014734  0E01               	movlw	1
 12590  014736  0100               	movlb	0	; () banked
 12591  014738  6FBA               	movwf	___awdiv@sign& (0+255),b
 12592  01473A                     l9046:
 12593                           
 12594                           ; BSR set to: 0
 12595  01473A  0100               	movlb	0	; () banked
 12596  01473C  AFB6               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12597  01473E  D008               	goto	l9052
 12598                           
 12599                           ; BSR set to: 0
 12600  014740  0100               	movlb	0	; () banked
 12601  014742  6DB5               	negf	___awdiv@dividend& (0+255),b
 12602  014744  1FB6               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12603  014746  B0D8               	btfsc	status,0,c
 12604  014748  2BB6               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12605                           
 12606                           ; BSR set to: 0
 12607  01474A  0E01               	movlw	1
 12608  01474C  0100               	movlb	0	; () banked
 12609  01474E  1BBA               	xorwf	___awdiv@sign& (0+255),f,b
 12610  014750                     l9052:
 12611                           
 12612                           ; BSR set to: 0
 12613  014750  0E00               	movlw	0
 12614  014752  0100               	movlb	0	; () banked
 12615  014754  6FBC               	movwf	(___awdiv@quotient+1)& (0+255),b
 12616  014756  0E00               	movlw	0
 12617  014758  6FBB               	movwf	___awdiv@quotient& (0+255),b
 12618                           
 12619                           ; BSR set to: 0
 12620  01475A  0100               	movlb	0	; () banked
 12621  01475C  51B7               	movf	___awdiv@divisor& (0+255),w,b
 12622  01475E  0100               	movlb	0	; () banked
 12623  014760  11B8               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12624  014762  B4D8               	btfsc	status,2,c
 12625  014764  D02C               	goto	l9074
 12626                           
 12627                           ; BSR set to: 0
 12628  014766  0E01               	movlw	1
 12629  014768  0100               	movlb	0	; () banked
 12630  01476A  6FB9               	movwf	___awdiv@counter& (0+255),b
 12631  01476C  D006               	goto	l9060
 12632  01476E                     l9058:
 12633                           
 12634                           ; BSR set to: 0
 12635  01476E  0100               	movlb	0	; () banked
 12636  014770  90D8               	bcf	status,0,c
 12637  014772  37B7               	rlcf	___awdiv@divisor& (0+255),f,b
 12638  014774  37B8               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12639  014776  0100               	movlb	0	; () banked
 12640  014778  2BB9               	incf	___awdiv@counter& (0+255),f,b
 12641  01477A                     l9060:
 12642                           
 12643                           ; BSR set to: 0
 12644  01477A  0100               	movlb	0	; () banked
 12645  01477C  AFB8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12646  01477E  D7F7               	goto	l9058
 12647  014780                     l9062:
 12648                           
 12649                           ; BSR set to: 0
 12650  014780  0100               	movlb	0	; () banked
 12651  014782  90D8               	bcf	status,0,c
 12652  014784  37BB               	rlcf	___awdiv@quotient& (0+255),f,b
 12653  014786  37BC               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12654                           
 12655                           ; BSR set to: 0
 12656  014788  0100               	movlb	0	; () banked
 12657  01478A  51B7               	movf	___awdiv@divisor& (0+255),w,b
 12658  01478C  0100               	movlb	0	; () banked
 12659  01478E  5DB5               	subwf	___awdiv@dividend& (0+255),w,b
 12660  014790  0100               	movlb	0	; () banked
 12661  014792  51B8               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12662  014794  0100               	movlb	0	; () banked
 12663  014796  59B6               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12664  014798  A0D8               	btfss	status,0,c
 12665  01479A  D00A               	goto	l9070
 12666                           
 12667                           ; BSR set to: 0
 12668  01479C  0100               	movlb	0	; () banked
 12669  01479E  51B7               	movf	___awdiv@divisor& (0+255),w,b
 12670  0147A0  0100               	movlb	0	; () banked
 12671  0147A2  5FB5               	subwf	___awdiv@dividend& (0+255),f,b
 12672  0147A4  0100               	movlb	0	; () banked
 12673  0147A6  51B8               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12674  0147A8  0100               	movlb	0	; () banked
 12675  0147AA  5BB6               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12676                           
 12677                           ; BSR set to: 0
 12678  0147AC  0100               	movlb	0	; () banked
 12679  0147AE  81BB               	bsf	___awdiv@quotient& (0+255),0,b
 12680  0147B0                     l9070:
 12681                           
 12682                           ; BSR set to: 0
 12683  0147B0  0100               	movlb	0	; () banked
 12684  0147B2  90D8               	bcf	status,0,c
 12685  0147B4  33B8               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12686  0147B6  33B7               	rrcf	___awdiv@divisor& (0+255),f,b
 12687                           
 12688                           ; BSR set to: 0
 12689  0147B8  0100               	movlb	0	; () banked
 12690  0147BA  2FB9               	decfsz	___awdiv@counter& (0+255),f,b
 12691  0147BC  D7E1               	goto	l9062
 12692  0147BE                     l9074:
 12693                           
 12694                           ; BSR set to: 0
 12695  0147BE  0100               	movlb	0	; () banked
 12696  0147C0  51BA               	movf	___awdiv@sign& (0+255),w,b
 12697  0147C2  0100               	movlb	0	; () banked
 12698  0147C4  B4D8               	btfsc	status,2,c
 12699  0147C6  D005               	goto	l9078
 12700                           
 12701                           ; BSR set to: 0
 12702  0147C8  0100               	movlb	0	; () banked
 12703  0147CA  6DBB               	negf	___awdiv@quotient& (0+255),b
 12704  0147CC  1FBC               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12705  0147CE  B0D8               	btfsc	status,0,c
 12706  0147D0  2BBC               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12707  0147D2                     l9078:
 12708                           
 12709                           ; BSR set to: 0
 12710  0147D2  C0BB  F0B5         	movff	___awdiv@quotient,?___awdiv
 12711  0147D6  C0BC  F0B6         	movff	___awdiv@quotient+1,?___awdiv+1
 12712  0147DA  0012               	return	
 12713  0147DC                     __end_of___awdiv:
 12714                           	opt stack 0
 12715                           tblptru	equ	0xFF8
 12716                           tblptrh	equ	0xFF7
 12717                           tblptrl	equ	0xFF6
 12718                           tablat	equ	0xFF5
 12719                           prodh	equ	0xFF4
 12720                           prodl	equ	0xFF3
 12721                           intcon	equ	0xFF2
 12722                           postinc0	equ	0xFEE
 12723                           wreg	equ	0xFE8
 12724                           indf1	equ	0xFE7
 12725                           postinc1	equ	0xFE6
 12726                           postdec1	equ	0xFE5
 12727                           fsr1h	equ	0xFE2
 12728                           fsr1l	equ	0xFE1
 12729                           indf2	equ	0xFDF
 12730                           postinc2	equ	0xFDE
 12731                           postdec2	equ	0xFDD
 12732                           fsr2h	equ	0xFDA
 12733                           fsr2l	equ	0xFD9
 12734                           status	equ	0xFD8
 12735                           
 12736 ;; *************** function _RTCC_adjust_time_cursor *****************
 12737 ;; Defined at:
 12738 ;;		line 311 in file "../My_header\My_RTCC.h"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;		None
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;		None
 12743 ;; Return value:  Size  Location     Type
 12744 ;;		None               void
 12745 ;; Registers used:
 12746 ;;		wreg, status,2
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12756 ;;Total ram usage:        0 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:   11
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_RTCC_adjust_time_button
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           	psect	text40
 12767  01578E                     __ptext40:
 12768                           	opt stack 0
 12769  01578E                     _RTCC_adjust_time_cursor:
 12770                           	opt stack 17
 12771                           
 12772                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;incstack = 0
 12776  01578E  0100               	movlb	0	; () banked
 12777  015790  A1A4               	btfss	_edit_flag& (0+255),0,b
 12778  015792  D004               	goto	l508
 12779                           
 12780                           ; BSR set to: 0
 12781  015794  0E02               	movlw	2
 12782  015796  0100               	movlb	0	; () banked
 12783  015798  6FA4               	movwf	_edit_flag& (0+255),b
 12784  01579A  0012               	return	
 12785  01579C                     l508:
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
 12789  01579C  0100               	movlb	0	; () banked
 12790  01579E  A3A4               	btfss	_edit_flag& (0+255),1,b
 12791  0157A0  D004               	goto	l510
 12792                           
 12793                           ; BSR set to: 0
 12794  0157A2  0E04               	movlw	4
 12795  0157A4  0100               	movlb	0	; () banked
 12796  0157A6  6FA4               	movwf	_edit_flag& (0+255),b
 12797  0157A8  0012               	return	
 12798  0157AA                     l510:
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
 12802  0157AA  0100               	movlb	0	; () banked
 12803  0157AC  A5A4               	btfss	_edit_flag& (0+255),2,b
 12804  0157AE  D004               	goto	l512
 12805                           
 12806                           ; BSR set to: 0
 12807  0157B0  0E08               	movlw	8
 12808  0157B2  0100               	movlb	0	; () banked
 12809  0157B4  6FA4               	movwf	_edit_flag& (0+255),b
 12810  0157B6  0012               	return	
 12811  0157B8                     l512:
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
 12815  0157B8  0100               	movlb	0	; () banked
 12816  0157BA  A7A4               	btfss	_edit_flag& (0+255),3,b
 12817  0157BC  D004               	goto	l514
 12818                           
 12819                           ; BSR set to: 0
 12820  0157BE  0E10               	movlw	16
 12821  0157C0  0100               	movlb	0	; () banked
 12822  0157C2  6FA4               	movwf	_edit_flag& (0+255),b
 12823  0157C4  0012               	return	
 12824  0157C6                     l514:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
 12828  0157C6  0100               	movlb	0	; () banked
 12829  0157C8  A9A4               	btfss	_edit_flag& (0+255),4,b
 12830  0157CA  D004               	goto	l516
 12831                           
 12832                           ; BSR set to: 0
 12833  0157CC  0E20               	movlw	32
 12834  0157CE  0100               	movlb	0	; () banked
 12835  0157D0  6FA4               	movwf	_edit_flag& (0+255),b
 12836  0157D2  0012               	return	
 12837  0157D4                     l516:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
 12841  0157D4  0100               	movlb	0	; () banked
 12842  0157D6  ABA4               	btfss	_edit_flag& (0+255),5,b
 12843  0157D8  D004               	goto	l9690
 12844                           
 12845                           ; BSR set to: 0
 12846  0157DA  0E01               	movlw	1
 12847  0157DC  0100               	movlb	0	; () banked
 12848  0157DE  6FA4               	movwf	_edit_flag& (0+255),b
 12849  0157E0  0012               	return	
 12850  0157E2                     l9690:
 12851                           
 12852                           ; BSR set to: 0
 12853                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
 12854  0157E2  0E00               	movlw	0
 12855  0157E4  0100               	movlb	0	; () banked
 12856  0157E6  6FA4               	movwf	_edit_flag& (0+255),b
 12857                           
 12858                           ; BSR set to: 0
 12859                           
 12860                           ; BSR set to: 0
 12861                           
 12862                           ; BSR set to: 0
 12863                           
 12864                           ; BSR set to: 0
 12865                           
 12866                           ; BSR set to: 0
 12867  0157E8  0012               	return	
 12868  0157EA                     __end_of_RTCC_adjust_time_cursor:
 12869                           	opt stack 0
 12870                           tblptru	equ	0xFF8
 12871                           tblptrh	equ	0xFF7
 12872                           tblptrl	equ	0xFF6
 12873                           tablat	equ	0xFF5
 12874                           prodh	equ	0xFF4
 12875                           prodl	equ	0xFF3
 12876                           intcon	equ	0xFF2
 12877                           postinc0	equ	0xFEE
 12878                           wreg	equ	0xFE8
 12879                           indf1	equ	0xFE7
 12880                           postinc1	equ	0xFE6
 12881                           postdec1	equ	0xFE5
 12882                           fsr1h	equ	0xFE2
 12883                           fsr1l	equ	0xFE1
 12884                           indf2	equ	0xFDF
 12885                           postinc2	equ	0xFDE
 12886                           postdec2	equ	0xFDD
 12887                           fsr2h	equ	0xFDA
 12888                           fsr2l	equ	0xFD9
 12889                           status	equ	0xFD8
 12890                           
 12891 ;; *************** function _Auto_cut *****************
 12892 ;; Defined at:
 12893 ;;		line 117 in file "tasks.h"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;		None
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;  i               1   30[BANK0 ] unsigned char 
 12898 ;; Return value:  Size  Location     Type
 12899 ;;		None               void
 12900 ;; Registers used:
 12901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12910 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12911 ;;Total ram usage:        3 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:   12
 12914 ;; This function calls:
 12915 ;;		_ADC
 12916 ;;		_IN
 12917 ;;		_OUT
 12918 ;;		___wmul
 12919 ;; This function is called by:
 12920 ;;		_normal_mode_loop
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924                           	psect	text41
 12925  01342C                     __ptext41:
 12926                           	opt stack 0
 12927  01342C                     _Auto_cut:
 12928                           	opt stack 17
 12929                           
 12930                           ;tasks.h: 118: for (uint8_t i = 0; i < 3; i++) {
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;incstack = 0
 12934  01342C  0E00               	movlw	0
 12935  01342E  0100               	movlb	0	; () banked
 12936  013430  6FD3               	movwf	Auto_cut@i& (0+255),b
 12937  013432                     l10356:
 12938                           
 12939                           ; BSR set to: 0
 12940  013432  0E02               	movlw	2
 12941  013434  0100               	movlb	0	; () banked
 12942  013436  65D3               	cpfsgt	Auto_cut@i& (0+255),b
 12943  013438  D001               	goto	l10360
 12944  01343A  0012               	return	
 12945  01343C                     l10360:
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;tasks.h: 119: I[i] = 13 * ADC(IN(i)) / 16;
 12949  01343C  0100               	movlb	0	; () banked
 12950  01343E  51D3               	movf	Auto_cut@i& (0+255),w,b
 12951  013440  ECA6  F0AF         	call	_IN
 12952  013444  EC4B  F0AF         	call	_ADC
 12953  013448  C0B5  F0CB         	movff	?_ADC,___wmul@multiplier
 12954  01344C  C0B6  F0CC         	movff	?_ADC+1,___wmul@multiplier+1
 12955  013450  0E00               	movlw	0
 12956  013452  0100               	movlb	0	; () banked
 12957  013454  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12958  013456  0E0D               	movlw	13
 12959  013458  6FCD               	movwf	___wmul@multiplicand& (0+255),b
 12960  01345A  ECE5  F0AE         	call	___wmul	;wreg free
 12961  01345E  0E04               	movlw	4
 12962  013460  0100               	movlb	0	; () banked
 12963  013462  6FD1               	movwf	??_Auto_cut& (0+255),b
 12964  013464                     u11505:
 12965  013464  0100               	movlb	0	; () banked
 12966  013466  90D8               	bcf	status,0,c
 12967  013468  33CC               	rrcf	(?___wmul+1)& (0+255),f,b
 12968  01346A  33CB               	rrcf	?___wmul& (0+255),f,b
 12969  01346C  0100               	movlb	0	; () banked
 12970  01346E  2FD1               	decfsz	??_Auto_cut& (0+255),f,b
 12971  013470  D7F9               	goto	u11505
 12972  013472  0100               	movlb	0	; () banked
 12973  013474  51D3               	movf	Auto_cut@i& (0+255),w,b
 12974  013476  0D02               	mullw	2
 12975  013478  0E2D               	movlw	low _I
 12976  01347A  24F3               	addwf	prodl,w,c
 12977  01347C  6ED9               	movwf	fsr2l,c
 12978  01347E  0E00               	movlw	high _I
 12979  013480  20F4               	addwfc	prodh,w,c
 12980  013482  6EDA               	movwf	fsr2h,c
 12981  013484  0100               	movlb	0	; () banked
 12982  013486  C0CB  FFDE         	movff	?___wmul,postinc2
 12983  01348A  0100               	movlb	0	; () banked
 12984  01348C  C0CC  FFDD         	movff	?___wmul+1,postdec2
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;tasks.h: 120: if (auto_cut_ON[i]) {
 12988  013490  0100               	movlb	0	; () banked
 12989  013492  51D3               	movf	Auto_cut@i& (0+255),w,b
 12990  013494  0D01               	mullw	1
 12991  013496  0E87               	movlw	low _auto_cut_ON
 12992  013498  24F3               	addwf	prodl,w,c
 12993  01349A  6ED9               	movwf	fsr2l,c
 12994  01349C  0E00               	movlw	high _auto_cut_ON
 12995  01349E  20F4               	addwfc	prodh,w,c
 12996  0134A0  6EDA               	movwf	fsr2h,c
 12997  0134A2  50DF               	movf	indf2,w,c
 12998  0134A4  B4D8               	btfsc	status,2,c
 12999  0134A6  D041               	goto	l10372
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;tasks.h: 121: if (I[i] < 100) {
 13003  0134A8  0100               	movlb	0	; () banked
 13004  0134AA  51D3               	movf	Auto_cut@i& (0+255),w,b
 13005  0134AC  0D02               	mullw	2
 13006  0134AE  0E2D               	movlw	low _I
 13007  0134B0  24F3               	addwf	prodl,w,c
 13008  0134B2  6ED9               	movwf	fsr2l,c
 13009  0134B4  0E00               	movlw	high _I
 13010  0134B6  20F4               	addwfc	prodh,w,c
 13011  0134B8  6EDA               	movwf	fsr2h,c
 13012  0134BA  0E01               	movlw	1
 13013  0134BC  50DB               	movf	plusw2,w,c
 13014  0134BE  E128               	bnz	l10370
 13015  0134C0  0E64               	movlw	100
 13016  0134C2  5CDE               	subwf	postinc2,w,c
 13017  0134C4  B0D8               	btfsc	status,0,c
 13018  0134C6  D024               	goto	l10370
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;tasks.h: 122: cut_cnt[i]++;
 13022  0134C8  0100               	movlb	0	; () banked
 13023  0134CA  51D3               	movf	Auto_cut@i& (0+255),w,b
 13024  0134CC  0D02               	mullw	2
 13025  0134CE  0ECF               	movlw	low _cut_cnt
 13026  0134D0  24F3               	addwf	prodl,w,c
 13027  0134D2  6ED9               	movwf	fsr2l,c
 13028  0134D4  0E01               	movlw	high _cut_cnt
 13029  0134D6  20F4               	addwfc	prodh,w,c
 13030  0134D8  6EDA               	movwf	fsr2h,c
 13031  0134DA  2ADE               	incf	postinc2,f,c
 13032  0134DC  0E00               	movlw	0
 13033  0134DE  22DD               	addwfc	postdec2,f,c
 13034                           
 13035                           ;tasks.h: 123: if (cut_cnt[i] > 6) {
 13036  0134E0  0100               	movlb	0	; () banked
 13037  0134E2  51D3               	movf	Auto_cut@i& (0+255),w,b
 13038  0134E4  0D02               	mullw	2
 13039  0134E6  0ECF               	movlw	low _cut_cnt
 13040  0134E8  24F3               	addwf	prodl,w,c
 13041  0134EA  6ED9               	movwf	fsr2l,c
 13042  0134EC  0E01               	movlw	high _cut_cnt
 13043  0134EE  20F4               	addwfc	prodh,w,c
 13044  0134F0  6EDA               	movwf	fsr2h,c
 13045  0134F2  0E01               	movlw	1
 13046  0134F4  50DB               	movf	plusw2,w,c
 13047  0134F6  E104               	bnz	u11530
 13048  0134F8  0E07               	movlw	7
 13049  0134FA  5CDE               	subwf	postinc2,w,c
 13050  0134FC  A0D8               	btfss	status,0,c
 13051  0134FE  D015               	goto	l10372
 13052  013500                     u11530:
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;tasks.h: 124: OUT(i, 0);
 13056  013500  0E00               	movlw	0
 13057  013502  0100               	movlb	0	; () banked
 13058  013504  6FB5               	movwf	OUT@value& (0+255),b
 13059  013506  0100               	movlb	0	; () banked
 13060  013508  51D3               	movf	Auto_cut@i& (0+255),w,b
 13061  01350A  EC6A  F0AB         	call	_OUT
 13062                           
 13063                           ;tasks.h: 125: }
 13064                           ;tasks.h: 126: } else {
 13065  01350E  D00D               	goto	l10372
 13066  013510                     l10370:
 13067                           
 13068                           ;tasks.h: 127: cut_cnt[i] = 0;
 13069  013510  0100               	movlb	0	; () banked
 13070  013512  51D3               	movf	Auto_cut@i& (0+255),w,b
 13071  013514  0D02               	mullw	2
 13072  013516  0ECF               	movlw	low _cut_cnt
 13073  013518  24F3               	addwf	prodl,w,c
 13074  01351A  6ED9               	movwf	fsr2l,c
 13075  01351C  0E01               	movlw	high _cut_cnt
 13076  01351E  20F4               	addwfc	prodh,w,c
 13077  013520  6EDA               	movwf	fsr2h,c
 13078  013522  0E00               	movlw	0
 13079  013524  6EDE               	movwf	postinc2,c
 13080  013526  0E00               	movlw	0
 13081  013528  6EDD               	movwf	postdec2,c
 13082  01352A                     l10372:
 13083  01352A  0100               	movlb	0	; () banked
 13084  01352C  2BD3               	incf	Auto_cut@i& (0+255),f,b
 13085  01352E  D781               	goto	l10356
 13086  013530                     __end_of_Auto_cut:
 13087                           	opt stack 0
 13088                           tblptru	equ	0xFF8
 13089                           tblptrh	equ	0xFF7
 13090                           tblptrl	equ	0xFF6
 13091                           tablat	equ	0xFF5
 13092                           prodh	equ	0xFF4
 13093                           prodl	equ	0xFF3
 13094                           intcon	equ	0xFF2
 13095                           postinc0	equ	0xFEE
 13096                           wreg	equ	0xFE8
 13097                           indf1	equ	0xFE7
 13098                           postinc1	equ	0xFE6
 13099                           postdec1	equ	0xFE5
 13100                           fsr1h	equ	0xFE2
 13101                           fsr1l	equ	0xFE1
 13102                           indf2	equ	0xFDF
 13103                           postinc2	equ	0xFDE
 13104                           postdec2	equ	0xFDD
 13105                           plusw2	equ	0xFDB
 13106                           fsr2h	equ	0xFDA
 13107                           fsr2l	equ	0xFD9
 13108                           status	equ	0xFD8
 13109                           
 13110 ;; *************** function ___wmul *****************
 13111 ;; Defined at:
 13112 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  multiplier      2   22[BANK0 ] unsigned int 
 13115 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;  product         2   26[BANK0 ] unsigned int 
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  2   22[BANK0 ] unsigned int 
 13120 ;; Registers used:
 13121 ;;		wreg, status,2, status,0, prodl, prodh
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13130 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13131 ;;Total ram usage:        6 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:   11
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_my_atoi
 13138 ;;		_Auto_cut
 13139 ;;		_ctmu_set_ratio
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           	psect	text42
 13144  015DCA                     __ptext42:
 13145                           	opt stack 0
 13146  015DCA                     ___wmul:
 13147                           	opt stack 16
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;incstack = 0
 13151  015DCA  0100               	movlb	0	; () banked
 13152  015DCC  51CB               	movf	___wmul@multiplier& (0+255),w,b
 13153  015DCE  0100               	movlb	0	; () banked
 13154  015DD0  03CD               	mulwf	___wmul@multiplicand& (0+255),b
 13155  015DD2  CFF3 F0CF          	movff	prodl,___wmul@product
 13156  015DD6  CFF4 F0D0          	movff	prodh,___wmul@product+1
 13157  015DDA  0100               	movlb	0	; () banked
 13158  015DDC  51CB               	movf	___wmul@multiplier& (0+255),w,b
 13159  015DDE  0100               	movlb	0	; () banked
 13160  015DE0  03CE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13161  015DE2  50F3               	movf	prodl,w,c
 13162  015DE4  0100               	movlb	0	; () banked
 13163  015DE6  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
 13164  015DE8  0100               	movlb	0	; () banked
 13165  015DEA  51CC               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13166  015DEC  0100               	movlb	0	; () banked
 13167  015DEE  03CD               	mulwf	___wmul@multiplicand& (0+255),b
 13168  015DF0  50F3               	movf	prodl,w,c
 13169  015DF2  0100               	movlb	0	; () banked
 13170  015DF4  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
 13171                           
 13172                           ; BSR set to: 0
 13173  015DF6  C0CF  F0CB         	movff	___wmul@product,?___wmul
 13174  015DFA  C0D0  F0CC         	movff	___wmul@product+1,?___wmul+1
 13175  015DFE  0012               	return	
 13176  015E00                     __end_of___wmul:
 13177                           	opt stack 0
 13178                           tblptru	equ	0xFF8
 13179                           tblptrh	equ	0xFF7
 13180                           tblptrl	equ	0xFF6
 13181                           tablat	equ	0xFF5
 13182                           prodh	equ	0xFF4
 13183                           prodl	equ	0xFF3
 13184                           intcon	equ	0xFF2
 13185                           postinc0	equ	0xFEE
 13186                           wreg	equ	0xFE8
 13187                           indf1	equ	0xFE7
 13188                           postinc1	equ	0xFE6
 13189                           postdec1	equ	0xFE5
 13190                           fsr1h	equ	0xFE2
 13191                           fsr1l	equ	0xFE1
 13192                           indf2	equ	0xFDF
 13193                           postinc2	equ	0xFDE
 13194                           postdec2	equ	0xFDD
 13195                           plusw2	equ	0xFDB
 13196                           fsr2h	equ	0xFDA
 13197                           fsr2l	equ	0xFD9
 13198                           status	equ	0xFD8
 13199                           
 13200 ;; *************** function _OUT *****************
 13201 ;; Defined at:
 13202 ;;		line 53 in file "tasks.h"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;  b               1    wreg     unsigned char 
 13205 ;;  value           1    0[BANK0 ] unsigned char 
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;  b               1    1[BANK0 ] unsigned char 
 13208 ;; Return value:  Size  Location     Type
 13209 ;;		None               void
 13210 ;; Registers used:
 13211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13217 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13221 ;;Total ram usage:        2 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:   11
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_Auto_cut
 13228 ;;		_port_loop
 13229 ;;		_main
 13230 ;;		_sleep_loop
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text43
 13235  0156D4                     __ptext43:
 13236                           	opt stack 0
 13237  0156D4                     _OUT:
 13238                           	opt stack 17
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;incstack = 0
 13242                           ;OUT@b stored from wreg
 13243  0156D4  0100               	movlb	0	; () banked
 13244  0156D6  6FB6               	movwf	OUT@b& (0+255),b
 13245                           
 13246                           ;tasks.h: 54: out_flag[b] = value;
 13247  0156D8  0100               	movlb	0	; () banked
 13248  0156DA  51B6               	movf	OUT@b& (0+255),w,b
 13249  0156DC  0D01               	mullw	1
 13250  0156DE  0EEE               	movlw	low _out_flag
 13251  0156E0  24F3               	addwf	prodl,w,c
 13252  0156E2  6ED9               	movwf	fsr2l,c
 13253  0156E4  0E02               	movlw	high _out_flag
 13254  0156E6  20F4               	addwfc	prodh,w,c
 13255  0156E8  6EDA               	movwf	fsr2h,c
 13256  0156EA  C0B5  FFDF         	movff	OUT@value,indf2
 13257                           
 13258                           ;tasks.h: 55: switch (b) {
 13259  0156EE  D015               	goto	l9800
 13260  0156F0                     l611:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;tasks.h: 57: LATA5 = value;
 13264  0156F0  0100               	movlb	0	; () banked
 13265  0156F2  A1B5               	btfss	OUT@value& (0+255),0,b
 13266  0156F4  D002               	goto	u10730
 13267  0156F6  8A89               	bsf	3977,5,c	;volatile
 13268  0156F8  0012               	return	
 13269  0156FA                     u10730:
 13270  0156FA  9A89               	bcf	3977,5,c	;volatile
 13271                           
 13272                           ;tasks.h: 58: break;
 13273  0156FC  0012               	return	
 13274  0156FE                     l613:
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;tasks.h: 60: LATA6 = value;
 13278  0156FE  0100               	movlb	0	; () banked
 13279  015700  A1B5               	btfss	OUT@value& (0+255),0,b
 13280  015702  D002               	goto	u10750
 13281  015704  8C89               	bsf	3977,6,c	;volatile
 13282  015706  0012               	return	
 13283  015708                     u10750:
 13284  015708  9C89               	bcf	3977,6,c	;volatile
 13285                           
 13286                           ;tasks.h: 61: break;
 13287  01570A  0012               	return	
 13288  01570C                     l614:
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;tasks.h: 63: LATA7 = value;
 13292  01570C  0100               	movlb	0	; () banked
 13293  01570E  A1B5               	btfss	OUT@value& (0+255),0,b
 13294  015710  D002               	goto	u10770
 13295  015712  8E89               	bsf	3977,7,c	;volatile
 13296  015714  0012               	return	
 13297  015716                     u10770:
 13298  015716  9E89               	bcf	3977,7,c	;volatile
 13299                           
 13300                           ;tasks.h: 65: }
 13301                           
 13302                           ;tasks.h: 64: break;
 13303  015718  0012               	return	
 13304  01571A                     l9800:
 13305  01571A  0100               	movlb	0	; () banked
 13306  01571C  51B6               	movf	OUT@b& (0+255),w,b
 13307                           
 13308                           ; Switch size 1, requested type "space"
 13309                           ; Number of cases is 3, Range of values is 0 to 2
 13310                           ; switch strategies available:
 13311                           ; Name         Instructions Cycles
 13312                           ; simple_byte           10     6 (average)
 13313                           ;	Chosen strategy is simple_byte
 13314  01571E  0A00               	xorlw	0	; case 0
 13315  015720  B4D8               	btfsc	status,2,c
 13316  015722  D7E6               	goto	l611
 13317  015724  0A01               	xorlw	1	; case 1
 13318  015726  B4D8               	btfsc	status,2,c
 13319  015728  D7EA               	goto	l613
 13320  01572A  0A03               	xorlw	3	; case 2
 13321  01572C  A4D8               	btfss	status,2,c
 13322  01572E  0012               	return	
 13323  015730  D7ED               	goto	l614
 13324  015732                     __end_of_OUT:
 13325                           	opt stack 0
 13326                           tblptru	equ	0xFF8
 13327                           tblptrh	equ	0xFF7
 13328                           tblptrl	equ	0xFF6
 13329                           tablat	equ	0xFF5
 13330                           prodh	equ	0xFF4
 13331                           prodl	equ	0xFF3
 13332                           intcon	equ	0xFF2
 13333                           postinc0	equ	0xFEE
 13334                           wreg	equ	0xFE8
 13335                           indf1	equ	0xFE7
 13336                           postinc1	equ	0xFE6
 13337                           postdec1	equ	0xFE5
 13338                           fsr1h	equ	0xFE2
 13339                           fsr1l	equ	0xFE1
 13340                           indf2	equ	0xFDF
 13341                           postinc2	equ	0xFDE
 13342                           postdec2	equ	0xFDD
 13343                           plusw2	equ	0xFDB
 13344                           fsr2h	equ	0xFDA
 13345                           fsr2l	equ	0xFD9
 13346                           status	equ	0xFD8
 13347                           
 13348 ;; *************** function _IN *****************
 13349 ;; Defined at:
 13350 ;;		line 68 in file "tasks.h"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;  b               1    wreg     unsigned char 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;  b               1    0[BANK0 ] unsigned char 
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1    wreg      unsigned char 
 13357 ;; Registers used:
 13358 ;;		wreg, status,2, status,0
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;Total ram usage:        1 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:   11
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_Auto_cut
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           	psect	text44
 13379  015F4C                     __ptext44:
 13380                           	opt stack 0
 13381  015F4C                     _IN:
 13382                           	opt stack 17
 13383                           
 13384                           ;incstack = 0
 13385                           ;IN@b stored from wreg
 13386  015F4C  0100               	movlb	0	; () banked
 13387  015F4E  6FB5               	movwf	IN@b& (0+255),b
 13388                           
 13389                           ;tasks.h: 69: switch (b) {
 13390  015F50  D006               	goto	l9818
 13391  015F52                     l9804:
 13392                           
 13393                           ;tasks.h: 71: return 8;
 13394  015F52  0E08               	movlw	8
 13395  015F54  0012               	return	
 13396  015F56                     l9808:
 13397                           
 13398                           ;tasks.h: 73: return 9;
 13399  015F56  0E09               	movlw	9
 13400  015F58  0012               	return	
 13401  015F5A                     l9812:
 13402                           
 13403                           ;tasks.h: 75: return 10;
 13404  015F5A  0E0A               	movlw	10
 13405  015F5C  0012               	return	
 13406  015F5E                     l9818:
 13407  015F5E  0100               	movlb	0	; () banked
 13408  015F60  51B5               	movf	IN@b& (0+255),w,b
 13409                           
 13410                           ; Switch size 1, requested type "space"
 13411                           ; Number of cases is 3, Range of values is 0 to 2
 13412                           ; switch strategies available:
 13413                           ; Name         Instructions Cycles
 13414                           ; simple_byte           10     6 (average)
 13415                           ;	Chosen strategy is simple_byte
 13416  015F62  0A00               	xorlw	0	; case 0
 13417  015F64  B4D8               	btfsc	status,2,c
 13418  015F66  D7F5               	goto	l9804
 13419  015F68  0A01               	xorlw	1	; case 1
 13420  015F6A  B4D8               	btfsc	status,2,c
 13421  015F6C  D7F4               	goto	l9808
 13422  015F6E  0A03               	xorlw	3	; case 2
 13423  015F70  B4D8               	btfsc	status,2,c
 13424  015F72  D7F3               	goto	l9812
 13425                           
 13426                           ;tasks.h: 77: return 0;
 13427                           
 13428                           ; BSR set to: 0
 13429  015F74  0E00               	movlw	0
 13430  015F76  0012               	return	
 13431  015F78                     __end_of_IN:
 13432                           	opt stack 0
 13433                           tblptru	equ	0xFF8
 13434                           tblptrh	equ	0xFF7
 13435                           tblptrl	equ	0xFF6
 13436                           tablat	equ	0xFF5
 13437                           prodh	equ	0xFF4
 13438                           prodl	equ	0xFF3
 13439                           intcon	equ	0xFF2
 13440                           postinc0	equ	0xFEE
 13441                           wreg	equ	0xFE8
 13442                           indf1	equ	0xFE7
 13443                           postinc1	equ	0xFE6
 13444                           postdec1	equ	0xFE5
 13445                           fsr1h	equ	0xFE2
 13446                           fsr1l	equ	0xFE1
 13447                           indf2	equ	0xFDF
 13448                           postinc2	equ	0xFDE
 13449                           postdec2	equ	0xFDD
 13450                           plusw2	equ	0xFDB
 13451                           fsr2h	equ	0xFDA
 13452                           fsr2l	equ	0xFD9
 13453                           status	equ	0xFD8
 13454                           
 13455 ;; *************** function _ADC *****************
 13456 ;; Defined at:
 13457 ;;		line 172 in file "../My_header\My_header.h"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  ch              1    wreg     unsigned char 
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;  ch              1    3[BANK0 ] unsigned char 
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  2    0[BANK0 ] unsigned int 
 13464 ;; Registers used:
 13465 ;;		wreg, status,2, status,0
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13475 ;;Total ram usage:        4 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:   11
 13478 ;; This function calls:
 13479 ;;		Nothing
 13480 ;; This function is called by:
 13481 ;;		_Auto_cut
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	text45
 13486  015E96                     __ptext45:
 13487                           	opt stack 0
 13488  015E96                     _ADC:
 13489                           	opt stack 17
 13490                           
 13491                           ;incstack = 0
 13492                           ;ADC@ch stored from wreg
 13493  015E96  0100               	movlb	0	; () banked
 13494  015E98  6FB8               	movwf	ADC@ch& (0+255),b
 13495                           
 13496                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 13497  015E9A  C0B8  F0B7         	movff	ADC@ch,??_ADC
 13498  015E9E  0100               	movlb	0	; () banked
 13499  015EA0  47B7               	rlncf	??_ADC& (0+255),f,b
 13500  015EA2  47B7               	rlncf	??_ADC& (0+255),f,b
 13501  015EA4  50C2               	movf	4034,w,c	;volatile
 13502  015EA6  0100               	movlb	0	; () banked
 13503  015EA8  19B7               	xorwf	??_ADC& (0+255),w,b
 13504  015EAA  0BC3               	andlw	-61
 13505  015EAC  19B7               	xorwf	??_ADC& (0+255),w,b
 13506  015EAE  6EC2               	movwf	4034,c	;volatile
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 13510  015EB0  80C2               	bsf	4034,0,c	;volatile
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 13514  015EB2  9C9E               	bcf	3998,6,c	;volatile
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 13518  015EB4  82C2               	bsf	4034,1,c	;volatile
 13519  015EB6                     l159:
 13520  015EB6  AC9E               	btfss	3998,6,c	;volatile
 13521  015EB8  D7FE               	goto	l159
 13522                           
 13523                           ;My_header\My_header.h: 179: return ADRES;
 13524  015EBA  CFC3 F0B5          	movff	4035,?_ADC	;volatile
 13525  015EBE  CFC4 F0B6          	movff	4036,?_ADC+1	;volatile
 13526  015EC2  0012               	return		;funcret
 13527  015EC4                     __end_of_ADC:
 13528                           	opt stack 0
 13529                           tblptru	equ	0xFF8
 13530                           tblptrh	equ	0xFF7
 13531                           tblptrl	equ	0xFF6
 13532                           tablat	equ	0xFF5
 13533                           prodh	equ	0xFF4
 13534                           prodl	equ	0xFF3
 13535                           intcon	equ	0xFF2
 13536                           postinc0	equ	0xFEE
 13537                           wreg	equ	0xFE8
 13538                           indf1	equ	0xFE7
 13539                           postinc1	equ	0xFE6
 13540                           postdec1	equ	0xFE5
 13541                           fsr1h	equ	0xFE2
 13542                           fsr1l	equ	0xFE1
 13543                           indf2	equ	0xFDF
 13544                           postinc2	equ	0xFDE
 13545                           postdec2	equ	0xFDD
 13546                           plusw2	equ	0xFDB
 13547                           fsr2h	equ	0xFDA
 13548                           fsr2l	equ	0xFD9
 13549                           status	equ	0xFD8
 13550                           
 13551 ;; *************** function _main_init *****************
 13552 ;; Defined at:
 13553 ;;		line 102 in file "main.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;		None
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;		None
 13558 ;; Return value:  Size  Location     Type
 13559 ;;		None               void
 13560 ;; Registers used:
 13561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13571 ;;Total ram usage:        0 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:   16
 13574 ;; This function calls:
 13575 ;;		_ADC_init
 13576 ;;		_CTMU_init
 13577 ;;		_I2C_LCD_init
 13578 ;;		_I2C_init
 13579 ;;		_RTCC_init
 13580 ;;		_USB_init
 13581 ;;		_ringbuf_init
 13582 ;;		_timer0_init
 13583 ;;		_timer1_init
 13584 ;;		_timer3_init
 13585 ;; This function is called by:
 13586 ;;		_main
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           	psect	text46
 13591  014B70                     __ptext46:
 13592                           	opt stack 0
 13593  014B70                     _main_init:
 13594                           	opt stack 14
 13595                           
 13596                           ;main.c: 103: OSCCONbits.IRCF = 7;
 13597                           
 13598                           ;incstack = 0
 13599  014B70  88D3               	bsf	4051,4,c	;volatile
 13600  014B72  8AD3               	bsf	4051,5,c	;volatile
 13601  014B74  8CD3               	bsf	4051,6,c	;volatile
 13602                           
 13603                           ;main.c: 104: OSCTUNEbits.PLLEN = 1;
 13604  014B76  8C9B               	bsf	3995,6,c	;volatile
 13605                           
 13606                           ;main.c: 105: OSCCONbits.SCS = 0;
 13607  014B78  0EFC               	movlw	-4
 13608  014B7A  16D3               	andwf	4051,f,c	;volatile
 13609                           
 13610                           ;main.c: 106: TRISA = 0b00011111;
 13611  014B7C  0E1F               	movlw	31
 13612  014B7E  6E92               	movwf	3986,c	;volatile
 13613                           
 13614                           ;main.c: 107: TRISB = 0b00111111;
 13615  014B80  0E3F               	movlw	63
 13616  014B82  6E93               	movwf	3987,c	;volatile
 13617                           
 13618                           ;main.c: 108: TRISC = 0b10111010;
 13619  014B84  0EBA               	movlw	186
 13620  014B86  6E94               	movwf	3988,c	;volatile
 13621                           
 13622                           ;main.c: 109: ANCON0 = 0b11110000;
 13623  014B88  0EF0               	movlw	240
 13624  014B8A  010F               	movlb	15	; () banked
 13625  014B8C  6F48               	movwf	72,b	;volatile
 13626                           
 13627                           ;main.c: 110: ANCON1 = 0b00011000;
 13628  014B8E  0E18               	movlw	24
 13629  014B90  010F               	movlb	15	; () banked
 13630  014B92  6F49               	movwf	73,b	;volatile
 13631                           
 13632                           ; BSR set to: 15
 13633                           ;main.c: 111: INTCON2bits.RBPU = 0;
 13634  014B94  9EF1               	bcf	intcon2,7,c	;volatile
 13635                           
 13636                           ; BSR set to: 15
 13637                           ;main.c: 113: timer0_init(6);
 13638  014B96  0E06               	movlw	6
 13639  014B98  EC59  F0AE         	call	_timer0_init
 13640                           
 13641                           ;main.c: 114: timer1_init(0, 2);
 13642  014B9C  0E02               	movlw	2
 13643  014B9E  0100               	movlb	0	; () banked
 13644  014BA0  6FB5               	movwf	timer1_init@clock_select& (0+255),b
 13645  014BA2  0E00               	movlw	0
 13646  014BA4  ECFA  F0AC         	call	_timer1_init
 13647                           
 13648                           ;main.c: 115: timer3_init(2);
 13649  014BA8  0E02               	movlw	2
 13650  014BAA  ECBC  F0AF         	call	_timer3_init
 13651                           
 13652                           ;main.c: 116: I2C_init();
 13653  014BAE  EC05  F0B1         	call	_I2C_init	;wreg free
 13654                           
 13655                           ;main.c: 117: I2C_LCD_init();
 13656  014BB2  EC7B  F0AC         	call	_I2C_LCD_init	;wreg free
 13657                           
 13658                           ;main.c: 118: RTCC_init();
 13659  014BB6  EC62  F0AF         	call	_RTCC_init	;wreg free
 13660                           
 13661                           ;main.c: 119: ADC_init(0);
 13662  014BBA  0E00               	movlw	0
 13663  014BBC  EC96  F0B0         	call	_ADC_init
 13664                           
 13665                           ;main.c: 120: CTMU_init();
 13666  014BC0  EC28  F0B0         	call	_CTMU_init	;wreg free
 13667                           
 13668                           ;main.c: 121: USB_init();
 13669  014BC4  EC0E  F0B1         	call	_USB_init	;wreg free
 13670                           
 13671                           ;main.c: 124: static uint8_t txbuf[2000];
 13672                           ;main.c: 125: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
 13673  014BC8  0EE9               	movlw	low _tx_buf
 13674  014BCA  0100               	movlb	0	; () banked
 13675  014BCC  6FB5               	movwf	ringbuf_init@rb& (0+255),b
 13676  014BCE  0E01               	movlw	high _tx_buf
 13677  014BD0  0100               	movlb	0	; () banked
 13678  014BD2  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13679  014BD4  0E64               	movlw	low main_init@txbuf
 13680  014BD6  0100               	movlb	0	; () banked
 13681  014BD8  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
 13682  014BDA  0E04               	movlw	high main_init@txbuf
 13683  014BDC  0100               	movlb	0	; () banked
 13684  014BDE  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 13685  014BE0  0E07               	movlw	7
 13686  014BE2  0100               	movlb	0	; () banked
 13687  014BE4  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 13688  014BE6  0ED0               	movlw	208
 13689  014BE8  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
 13690  014BEA  ECA7  F0AC         	call	_ringbuf_init	;wreg free
 13691                           
 13692                           ;main.c: 126: static uint8_t rxbuf[100];
 13693                           ;main.c: 127: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
 13694  014BEE  0EF1               	movlw	low _rx_buf
 13695  014BF0  0100               	movlb	0	; () banked
 13696  014BF2  6FB5               	movwf	ringbuf_init@rb& (0+255),b
 13697  014BF4  0E02               	movlw	high _rx_buf
 13698  014BF6  0100               	movlb	0	; () banked
 13699  014BF8  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13700  014BFA  0E00               	movlw	low main_init@rxbuf
 13701  014BFC  0100               	movlb	0	; () banked
 13702  014BFE  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
 13703  014C00  0E04               	movlw	high main_init@rxbuf
 13704  014C02  0100               	movlb	0	; () banked
 13705  014C04  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 13706  014C06  0E00               	movlw	0
 13707  014C08  0100               	movlb	0	; () banked
 13708  014C0A  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 13709  014C0C  0E64               	movlw	100
 13710  014C0E  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
 13711  014C10  ECA7  F0AC         	call	_ringbuf_init	;wreg free
 13712  014C14  0012               	return		;funcret
 13713  014C16                     __end_of_main_init:
 13714                           	opt stack 0
 13715                           tblptru	equ	0xFF8
 13716                           tblptrh	equ	0xFF7
 13717                           tblptrl	equ	0xFF6
 13718                           tablat	equ	0xFF5
 13719                           prodh	equ	0xFF4
 13720                           prodl	equ	0xFF3
 13721                           intcon	equ	0xFF2
 13722                           intcon2	equ	0xFF1
 13723                           postinc0	equ	0xFEE
 13724                           wreg	equ	0xFE8
 13725                           indf1	equ	0xFE7
 13726                           postinc1	equ	0xFE6
 13727                           postdec1	equ	0xFE5
 13728                           fsr1h	equ	0xFE2
 13729                           fsr1l	equ	0xFE1
 13730                           indf2	equ	0xFDF
 13731                           postinc2	equ	0xFDE
 13732                           postdec2	equ	0xFDD
 13733                           plusw2	equ	0xFDB
 13734                           fsr2h	equ	0xFDA
 13735                           fsr2l	equ	0xFD9
 13736                           status	equ	0xFD8
 13737                           
 13738 ;; *************** function _timer3_init *****************
 13739 ;; Defined at:
 13740 ;;		line 85 in file "../My_header\My_header.h"
 13741 ;; Parameters:    Size  Location     Type
 13742 ;;  prescaler       1    wreg     unsigned char 
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13745 ;; Return value:  Size  Location     Type
 13746 ;;		None               void
 13747 ;; Registers used:
 13748 ;;		wreg, status,2, status,0
 13749 ;; Tracked objects:
 13750 ;;		On entry : 0/0
 13751 ;;		On exit  : 0/0
 13752 ;;		Unchanged: 0/0
 13753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13757 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13758 ;;Total ram usage:        2 bytes
 13759 ;; Hardware stack levels used:    1
 13760 ;; Hardware stack levels required when called:   11
 13761 ;; This function calls:
 13762 ;;		Nothing
 13763 ;; This function is called by:
 13764 ;;		_main_init
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           	psect	text47
 13769  015F78                     __ptext47:
 13770                           	opt stack 0
 13771  015F78                     _timer3_init:
 13772                           	opt stack 18
 13773                           
 13774                           ;incstack = 0
 13775                           ;timer3_init@prescaler stored from wreg
 13776  015F78  0100               	movlb	0	; () banked
 13777  015F7A  6FB6               	movwf	timer3_init@prescaler& (0+255),b
 13778                           
 13779                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 13780  015F7C  0E3F               	movlw	-193
 13781  015F7E  1679               	andwf	3961,f,c	;volatile
 13782                           
 13783                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 13784  015F80  9679               	bcf	3961,3,c	;volatile
 13785                           
 13786                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 13787  015F82  C0B6  F0B5         	movff	timer3_init@prescaler,??_timer3_init
 13788  015F86  0100               	movlb	0	; () banked
 13789  015F88  3BB5               	swapf	??_timer3_init& (0+255),f,b
 13790  015F8A  5079               	movf	3961,w,c	;volatile
 13791  015F8C  0100               	movlb	0	; () banked
 13792  015F8E  19B5               	xorwf	??_timer3_init& (0+255),w,b
 13793  015F90  0BCF               	andlw	-49
 13794  015F92  19B5               	xorwf	??_timer3_init& (0+255),w,b
 13795  015F94  6E79               	movwf	3961,c	;volatile
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 13799  015F96  9E79               	bcf	3961,7,c	;volatile
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 13803  015F98  8079               	bsf	3961,0,c	;volatile
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 13807  015F9A  92A2               	bcf	4002,1,c	;volatile
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 13811  015F9C  92A1               	bcf	4001,1,c	;volatile
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 13815  015F9E  82A0               	bsf	4000,1,c	;volatile
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 13819  015FA0  8CF2               	bsf	intcon,6,c	;volatile
 13820                           
 13821                           ; BSR set to: 0
 13822  015FA2  0012               	return		;funcret
 13823  015FA4                     __end_of_timer3_init:
 13824                           	opt stack 0
 13825                           tblptru	equ	0xFF8
 13826                           tblptrh	equ	0xFF7
 13827                           tblptrl	equ	0xFF6
 13828                           tablat	equ	0xFF5
 13829                           prodh	equ	0xFF4
 13830                           prodl	equ	0xFF3
 13831                           intcon	equ	0xFF2
 13832                           intcon2	equ	0xFF1
 13833                           postinc0	equ	0xFEE
 13834                           wreg	equ	0xFE8
 13835                           indf1	equ	0xFE7
 13836                           postinc1	equ	0xFE6
 13837                           postdec1	equ	0xFE5
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           indf2	equ	0xFDF
 13841                           postinc2	equ	0xFDE
 13842                           postdec2	equ	0xFDD
 13843                           plusw2	equ	0xFDB
 13844                           fsr2h	equ	0xFDA
 13845                           fsr2l	equ	0xFD9
 13846                           status	equ	0xFD8
 13847                           
 13848 ;; *************** function _timer1_init *****************
 13849 ;; Defined at:
 13850 ;;		line 54 in file "../My_header\My_header.h"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;  prescaler       1    wreg     unsigned char 
 13853 ;;  clock_select    1    0[BANK0 ] unsigned char 
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;  prescaler       1    2[BANK0 ] unsigned char 
 13856 ;; Return value:  Size  Location     Type
 13857 ;;		None               void
 13858 ;; Registers used:
 13859 ;;		wreg, status,2, status,0
 13860 ;; Tracked objects:
 13861 ;;		On entry : 0/0
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13865 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13869 ;;Total ram usage:        3 bytes
 13870 ;; Hardware stack levels used:    1
 13871 ;; Hardware stack levels required when called:   11
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_main_init
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text48
 13880  0159F4                     __ptext48:
 13881                           	opt stack 0
 13882  0159F4                     _timer1_init:
 13883                           	opt stack 18
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;incstack = 0
 13887                           ;timer1_init@prescaler stored from wreg
 13888  0159F4  0100               	movlb	0	; () banked
 13889  0159F6  6FB7               	movwf	timer1_init@prescaler& (0+255),b
 13890                           
 13891                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 13892  0159F8  C0B5  F0B6         	movff	timer1_init@clock_select,??_timer1_init
 13893  0159FC  0100               	movlb	0	; () banked
 13894  0159FE  3BB6               	swapf	??_timer1_init& (0+255),f,b
 13895  015A00  47B6               	rlncf	??_timer1_init& (0+255),f,b
 13896  015A02  47B6               	rlncf	??_timer1_init& (0+255),f,b
 13897  015A04  50CD               	movf	4045,w,c	;volatile
 13898  015A06  0100               	movlb	0	; () banked
 13899  015A08  19B6               	xorwf	??_timer1_init& (0+255),w,b
 13900  015A0A  0B3F               	andlw	-193
 13901  015A0C  19B6               	xorwf	??_timer1_init& (0+255),w,b
 13902  015A0E  6ECD               	movwf	4045,c	;volatile
 13903                           
 13904                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 13905  015A10  0E02               	movlw	2
 13906  015A12  0100               	movlb	0	; () banked
 13907  015A14  19B5               	xorwf	timer1_init@clock_select& (0+255),w,b
 13908  015A16  A4D8               	btfss	status,2,c
 13909  015A18  D002               	goto	l142
 13910                           
 13911                           ; BSR set to: 0
 13912  015A1A  86CD               	bsf	4045,3,c	;volatile
 13913  015A1C  D001               	goto	l10148
 13914  015A1E                     l142:
 13915                           
 13916                           ; BSR set to: 0
 13917                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 13918  015A1E  96CD               	bcf	4045,3,c	;volatile
 13919  015A20                     l10148:
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 13923  015A20  C0B7  F0B6         	movff	timer1_init@prescaler,??_timer1_init
 13924  015A24  0100               	movlb	0	; () banked
 13925  015A26  3BB6               	swapf	??_timer1_init& (0+255),f,b
 13926  015A28  50CD               	movf	4045,w,c	;volatile
 13927  015A2A  0100               	movlb	0	; () banked
 13928  015A2C  19B6               	xorwf	??_timer1_init& (0+255),w,b
 13929  015A2E  0BCF               	andlw	-49
 13930  015A30  19B6               	xorwf	??_timer1_init& (0+255),w,b
 13931  015A32  6ECD               	movwf	4045,c	;volatile
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 13935  015A34  84CD               	bsf	4045,2,c	;volatile
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 13939  015A36  92CD               	bcf	4045,1,c	;volatile
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 13943  015A38  80CD               	bsf	4045,0,c	;volatile
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 13947  015A3A  909F               	bcf	3999,0,c	;volatile
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 13951  015A3C  909E               	bcf	3998,0,c	;volatile
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 13955  015A3E  809D               	bsf	3997,0,c	;volatile
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 13959  015A40  8CF2               	bsf	intcon,6,c	;volatile
 13960                           
 13961                           ; BSR set to: 0
 13962  015A42  0012               	return		;funcret
 13963  015A44                     __end_of_timer1_init:
 13964                           	opt stack 0
 13965                           tblptru	equ	0xFF8
 13966                           tblptrh	equ	0xFF7
 13967                           tblptrl	equ	0xFF6
 13968                           tablat	equ	0xFF5
 13969                           prodh	equ	0xFF4
 13970                           prodl	equ	0xFF3
 13971                           intcon	equ	0xFF2
 13972                           intcon2	equ	0xFF1
 13973                           postinc0	equ	0xFEE
 13974                           wreg	equ	0xFE8
 13975                           indf1	equ	0xFE7
 13976                           postinc1	equ	0xFE6
 13977                           postdec1	equ	0xFE5
 13978                           fsr1h	equ	0xFE2
 13979                           fsr1l	equ	0xFE1
 13980                           indf2	equ	0xFDF
 13981                           postinc2	equ	0xFDE
 13982                           postdec2	equ	0xFDD
 13983                           plusw2	equ	0xFDB
 13984                           fsr2h	equ	0xFDA
 13985                           fsr2l	equ	0xFD9
 13986                           status	equ	0xFD8
 13987                           
 13988 ;; *************** function _timer0_init *****************
 13989 ;; Defined at:
 13990 ;;		line 15 in file "../My_header\My_header.h"
 13991 ;; Parameters:    Size  Location     Type
 13992 ;;  prescaler       1    wreg     unsigned char 
 13993 ;; Auto vars:     Size  Location     Type
 13994 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13995 ;; Return value:  Size  Location     Type
 13996 ;;		None               void
 13997 ;; Registers used:
 13998 ;;		wreg, status,2, status,0
 13999 ;; Tracked objects:
 14000 ;;		On entry : 0/0
 14001 ;;		On exit  : 0/0
 14002 ;;		Unchanged: 0/0
 14003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14008 ;;Total ram usage:        2 bytes
 14009 ;; Hardware stack levels used:    1
 14010 ;; Hardware stack levels required when called:   11
 14011 ;; This function calls:
 14012 ;;		Nothing
 14013 ;; This function is called by:
 14014 ;;		_main_init
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text49
 14019  015CB2                     __ptext49:
 14020                           	opt stack 0
 14021  015CB2                     _timer0_init:
 14022                           	opt stack 18
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;incstack = 0
 14026                           ;timer0_init@prescaler stored from wreg
 14027  015CB2  0100               	movlb	0	; () banked
 14028  015CB4  6FB6               	movwf	timer0_init@prescaler& (0+255),b
 14029                           
 14030                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 14031  015CB6  8ED5               	bsf	4053,7,c	;volatile
 14032                           
 14033                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 14034  015CB8  8CD5               	bsf	4053,6,c	;volatile
 14035                           
 14036                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 14037  015CBA  9AD5               	bcf	4053,5,c	;volatile
 14038                           
 14039                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 14040  015CBC  0100               	movlb	0	; () banked
 14041  015CBE  51B6               	movf	timer0_init@prescaler& (0+255),w,b
 14042  015CC0  0100               	movlb	0	; () banked
 14043  015CC2  A4D8               	btfss	status,2,c
 14044  015CC4  D002               	goto	l137
 14045                           
 14046                           ; BSR set to: 0
 14047                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 14048  015CC6  86D5               	bsf	4053,3,c	;volatile
 14049                           
 14050                           ;My_header\My_header.h: 21: } else {
 14051  015CC8  D00C               	goto	l10136
 14052  015CCA                     l137:
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 14056  015CCA  96D5               	bcf	4053,3,c	;volatile
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 14060  015CCC  C0B6  F0B5         	movff	timer0_init@prescaler,??_timer0_init
 14061  015CD0  0EFF               	movlw	255
 14062  015CD2  0100               	movlb	0	; () banked
 14063  015CD4  27B5               	addwf	??_timer0_init& (0+255),f,b
 14064  015CD6  50D5               	movf	4053,w,c	;volatile
 14065  015CD8  0100               	movlb	0	; () banked
 14066  015CDA  19B5               	xorwf	??_timer0_init& (0+255),w,b
 14067  015CDC  0BF8               	andlw	-8
 14068  015CDE  19B5               	xorwf	??_timer0_init& (0+255),w,b
 14069  015CE0  6ED5               	movwf	4053,c	;volatile
 14070  015CE2                     l10136:
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;My_header\My_header.h: 24: }
 14074                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 14075  015CE2  8AF2               	bsf	intcon,5,c	;volatile
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 14079  015CE4  94F2               	bcf	intcon,2,c	;volatile
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 14083  015CE6  94F1               	bcf	intcon2,2,c	;volatile
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 14087  015CE8  8CF2               	bsf	intcon,6,c	;volatile
 14088                           
 14089                           ; BSR set to: 0
 14090  015CEA  0012               	return		;funcret
 14091  015CEC                     __end_of_timer0_init:
 14092                           	opt stack 0
 14093                           tblptru	equ	0xFF8
 14094                           tblptrh	equ	0xFF7
 14095                           tblptrl	equ	0xFF6
 14096                           tablat	equ	0xFF5
 14097                           prodh	equ	0xFF4
 14098                           prodl	equ	0xFF3
 14099                           intcon	equ	0xFF2
 14100                           intcon2	equ	0xFF1
 14101                           postinc0	equ	0xFEE
 14102                           wreg	equ	0xFE8
 14103                           indf1	equ	0xFE7
 14104                           postinc1	equ	0xFE6
 14105                           postdec1	equ	0xFE5
 14106                           fsr1h	equ	0xFE2
 14107                           fsr1l	equ	0xFE1
 14108                           indf2	equ	0xFDF
 14109                           postinc2	equ	0xFDE
 14110                           postdec2	equ	0xFDD
 14111                           plusw2	equ	0xFDB
 14112                           fsr2h	equ	0xFDA
 14113                           fsr2l	equ	0xFD9
 14114                           status	equ	0xFD8
 14115                           
 14116 ;; *************** function _ringbuf_init *****************
 14117 ;; Defined at:
 14118 ;;		line 24 in file "../My_header\My_ringbuf.h"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 14121 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 14122 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 14123 ;;		 -> main_init@rxbuf(100), main_init@txbuf(2000), rx_loop@buf(100), 
 14124 ;;  bufsize         2    4[BANK0 ] unsigned int 
 14125 ;; Auto vars:     Size  Location     Type
 14126 ;;		None
 14127 ;; Return value:  Size  Location     Type
 14128 ;;		None               void
 14129 ;; Registers used:
 14130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14131 ;; Tracked objects:
 14132 ;;		On entry : 0/0
 14133 ;;		On exit  : 0/0
 14134 ;;		Unchanged: 0/0
 14135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14136 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14140 ;;Total ram usage:        6 bytes
 14141 ;; Hardware stack levels used:    1
 14142 ;; Hardware stack levels required when called:   11
 14143 ;; This function calls:
 14144 ;;		Nothing
 14145 ;; This function is called by:
 14146 ;;		_rx_loop
 14147 ;;		_main_init
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text50
 14152  01594E                     __ptext50:
 14153                           	opt stack 0
 14154  01594E                     _ringbuf_init:
 14155                           	opt stack 18
 14156                           
 14157                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;incstack = 0
 14161  01594E  C0B5  FFD9         	movff	ringbuf_init@rb,fsr2l
 14162  015952  C0B6  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 14163  015956  C0B7  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 14164  01595A  C0B8  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 14165                           
 14166                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 14167  01595E  0100               	movlb	0	; () banked
 14168  015960  EE20 F002          	lfsr	2,2
 14169  015964  51B5               	movf	ringbuf_init@rb& (0+255),w,b
 14170  015966  26D9               	addwf	fsr2l,f,c
 14171  015968  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14172  01596A  22DA               	addwfc	fsr2h,f,c
 14173  01596C  C0B9  FFDE         	movff	ringbuf_init@bufsize,postinc2
 14174  015970  C0BA  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 14178  015974  0100               	movlb	0	; () banked
 14179  015976  EE20 F004          	lfsr	2,4
 14180  01597A  51B5               	movf	ringbuf_init@rb& (0+255),w,b
 14181  01597C  26D9               	addwf	fsr2l,f,c
 14182  01597E  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14183  015980  22DA               	addwfc	fsr2h,f,c
 14184  015982  0E00               	movlw	0
 14185  015984  6EDE               	movwf	postinc2,c
 14186  015986  0E00               	movlw	0
 14187  015988  6EDD               	movwf	postdec2,c
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 14191  01598A  0100               	movlb	0	; () banked
 14192  01598C  EE20 F006          	lfsr	2,6
 14193  015990  51B5               	movf	ringbuf_init@rb& (0+255),w,b
 14194  015992  26D9               	addwf	fsr2l,f,c
 14195  015994  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14196  015996  22DA               	addwfc	fsr2h,f,c
 14197  015998  0E00               	movlw	0
 14198  01599A  6EDE               	movwf	postinc2,c
 14199  01599C  0E00               	movlw	0
 14200  01599E  6EDD               	movwf	postdec2,c
 14201                           
 14202                           ; BSR set to: 0
 14203  0159A0  0012               	return		;funcret
 14204  0159A2                     __end_of_ringbuf_init:
 14205                           	opt stack 0
 14206                           tblptru	equ	0xFF8
 14207                           tblptrh	equ	0xFF7
 14208                           tblptrl	equ	0xFF6
 14209                           tablat	equ	0xFF5
 14210                           prodh	equ	0xFF4
 14211                           prodl	equ	0xFF3
 14212                           intcon	equ	0xFF2
 14213                           intcon2	equ	0xFF1
 14214                           postinc0	equ	0xFEE
 14215                           wreg	equ	0xFE8
 14216                           indf1	equ	0xFE7
 14217                           postinc1	equ	0xFE6
 14218                           postdec1	equ	0xFE5
 14219                           fsr1h	equ	0xFE2
 14220                           fsr1l	equ	0xFE1
 14221                           indf2	equ	0xFDF
 14222                           postinc2	equ	0xFDE
 14223                           postdec2	equ	0xFDD
 14224                           plusw2	equ	0xFDB
 14225                           fsr2h	equ	0xFDA
 14226                           fsr2l	equ	0xFD9
 14227                           status	equ	0xFD8
 14228                           
 14229 ;; *************** function _USB_init *****************
 14230 ;; Defined at:
 14231 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;		None
 14234 ;; Auto vars:     Size  Location     Type
 14235 ;;		None
 14236 ;; Return value:  Size  Location     Type
 14237 ;;		None               void
 14238 ;; Registers used:
 14239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14249 ;;Total ram usage:        0 bytes
 14250 ;; Hardware stack levels used:    1
 14251 ;; Hardware stack levels required when called:   13
 14252 ;; This function calls:
 14253 ;;		_USBDeviceAttach
 14254 ;;		_USBDeviceInit
 14255 ;; This function is called by:
 14256 ;;		_main_init
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text51
 14261  01621C                     __ptext51:
 14262                           	opt stack 0
 14263  01621C                     _USB_init:
 14264                           	opt stack 16
 14265                           
 14266                           ;My_usb_cdc.c: 8: USBDeviceInit();
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;incstack = 0
 14270  01621C  EC13  F094         	call	_USBDeviceInit	;wreg free
 14271                           
 14272                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 14273  016220  EC92  F0AE         	call	_USBDeviceAttach	;wreg free
 14274  016224  0012               	return		;funcret
 14275  016226                     __end_of_USB_init:
 14276                           	opt stack 0
 14277                           tblptru	equ	0xFF8
 14278                           tblptrh	equ	0xFF7
 14279                           tblptrl	equ	0xFF6
 14280                           tablat	equ	0xFF5
 14281                           prodh	equ	0xFF4
 14282                           prodl	equ	0xFF3
 14283                           intcon	equ	0xFF2
 14284                           intcon2	equ	0xFF1
 14285                           postinc0	equ	0xFEE
 14286                           wreg	equ	0xFE8
 14287                           indf1	equ	0xFE7
 14288                           postinc1	equ	0xFE6
 14289                           postdec1	equ	0xFE5
 14290                           fsr1h	equ	0xFE2
 14291                           fsr1l	equ	0xFE1
 14292                           indf2	equ	0xFDF
 14293                           postinc2	equ	0xFDE
 14294                           postdec2	equ	0xFDD
 14295                           plusw2	equ	0xFDB
 14296                           fsr2h	equ	0xFDA
 14297                           fsr2l	equ	0xFD9
 14298                           status	equ	0xFD8
 14299                           
 14300 ;; *************** function _USBDeviceInit *****************
 14301 ;; Defined at:
 14302 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;		None
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  i               1    8[BANK0 ] unsigned char 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;		None               void
 14309 ;; Registers used:
 14310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14319 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14320 ;;Total ram usage:        1 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:   12
 14323 ;; This function calls:
 14324 ;;		_memset
 14325 ;; This function is called by:
 14326 ;;		_USB_init
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           	psect	text52
 14331  012826                     __ptext52:
 14332                           	opt stack 0
 14333  012826                     _USBDeviceInit:
 14334                           	opt stack 16
 14335                           
 14336                           ;usb_device.c: 300: uint8_t i;
 14337                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14338                           
 14339                           ;incstack = 0
 14340  012826  98A0               	bcf	4000,4,c	;volatile
 14341                           
 14342                           ;usb_device.c: 305: {UEIR = 0;};
 14343  012828  0E00               	movlw	0
 14344  01282A  6E63               	movwf	3939,c	;volatile
 14345                           
 14346                           ;usb_device.c: 308: {UIR = 0;};
 14347  01282C  0E00               	movlw	0
 14348  01282E  6E62               	movwf	3938,c	;volatile
 14349                           
 14350                           ;usb_device.c: 311: UEP0 = 0;
 14351  012830  0E00               	movlw	0
 14352  012832  010F               	movlb	15	; () banked
 14353  012834  6F26               	movwf	38,b	;volatile
 14354                           
 14355                           ; BSR set to: 15
 14356                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14357  012836  0E27               	movlw	39
 14358  012838  0100               	movlb	0	; () banked
 14359  01283A  6FB5               	movwf	memset@p1& (0+255),b
 14360  01283C  0E0F               	movlw	15
 14361  01283E  0100               	movlb	0	; () banked
 14362  012840  6FB6               	movwf	(memset@p1+1)& (0+255),b
 14363  012842  0E00               	movlw	0
 14364  012844  0100               	movlb	0	; () banked
 14365  012846  6FB8               	movwf	(memset@c+1)& (0+255),b
 14366  012848  0E00               	movlw	0
 14367  01284A  6FB7               	movwf	memset@c& (0+255),b
 14368  01284C  0E00               	movlw	0
 14369  01284E  0100               	movlb	0	; () banked
 14370  012850  6FBA               	movwf	(memset@n+1)& (0+255),b
 14371  012852  0E02               	movlw	2
 14372  012854  6FB9               	movwf	memset@n& (0+255),b
 14373  012856  EC00  F0AF         	call	_memset	;wreg free
 14374                           
 14375                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14376  01285A  0E16               	movlw	22
 14377  01285C  010F               	movlb	15	; () banked
 14378  01285E  6F39               	movwf	57,b	;volatile
 14379                           
 14380                           ; BSR set to: 15
 14381  012860  0E9F               	movlw	159
 14382  012862  010F               	movlb	15	; () banked
 14383  012864  6F37               	movwf	55,b	;volatile
 14384                           
 14385                           ; BSR set to: 15
 14386  012866  0E7B               	movlw	123
 14387  012868  010F               	movlb	15	; () banked
 14388  01286A  6F36               	movwf	54,b	;volatile
 14389                           
 14390                           ; BSR set to: 15
 14391                           ;usb_device.c: 318: ;
 14392                           ;usb_device.c: 321: ;
 14393                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14394  01286C  0E00               	movlw	0
 14395  01286E  0100               	movlb	0	; () banked
 14396  012870  6FBD               	movwf	USBDeviceInit@i& (0+255),b
 14397  012872                     l9938:
 14398                           
 14399                           ; BSR set to: 0
 14400  012872  0E0B               	movlw	11
 14401  012874  0100               	movlb	0	; () banked
 14402  012876  65BD               	cpfsgt	USBDeviceInit@i& (0+255),b
 14403  012878  D001               	goto	l9942
 14404  01287A  D010               	goto	l1113
 14405  01287C                     l9942:
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;usb_device.c: 325: {
 14409                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14410  01287C  0100               	movlb	0	; () banked
 14411  01287E  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 14412  012880  0D04               	mullw	4
 14413  012882  0E00               	movlw	0
 14414  012884  24F3               	addwf	prodl,w,c
 14415  012886  6ED9               	movwf	fsr2l,c
 14416  012888  0E0D               	movlw	13
 14417  01288A  20F4               	addwfc	prodh,w,c
 14418  01288C  6EDA               	movwf	fsr2h,c
 14419  01288E  6ADE               	clrf	postinc2,c
 14420  012890  6ADE               	clrf	postinc2,c
 14421  012892  6ADE               	clrf	postinc2,c
 14422  012894  6ADD               	clrf	postdec2,c
 14423                           
 14424                           ; BSR set to: 0
 14425  012896  0100               	movlb	0	; () banked
 14426  012898  2BBD               	incf	USBDeviceInit@i& (0+255),f,b
 14427  01289A  D7EB               	goto	l9938
 14428  01289C                     l1113:
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;usb_device.c: 327: }
 14432                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14433  01289C  8C65               	bsf	3941,6,c	;volatile
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;usb_device.c: 333: UADDR = 0x00;
 14437  01289E  0E00               	movlw	0
 14438  0128A0  010F               	movlb	15	; () banked
 14439  0128A2  6F38               	movwf	56,b	;volatile
 14440                           
 14441                           ; BSR set to: 15
 14442                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14443  0128A4  9865               	bcf	3941,4,c	;volatile
 14444                           
 14445                           ; BSR set to: 15
 14446                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14447  0128A6  9C65               	bcf	3941,6,c	;volatile
 14448                           
 14449                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14450  0128A8  D00C               	goto	l9962
 14451  0128AA                     l9954:
 14452                           
 14453                           ;usb_device.c: 343: {
 14454                           ;usb_device.c: 344: (UIR &= 0xF7);
 14455  0128AA  9662               	bcf	3938,3,c	;volatile
 14456                           
 14457                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14458  0128AC  0E00               	movlw	0
 14459  0128AE  0100               	movlb	0	; () banked
 14460  0128B0  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14464  0128B2  0E00               	movlw	0
 14465  0128B4  0100               	movlb	0	; () banked
 14466  0128B6  6F6F               	movwf	(_outPipes+3)& (0+255),b	;volatile
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14470  0128B8  0E00               	movlw	0
 14471  0128BA  0100               	movlb	0	; () banked
 14472  0128BC  6F71               	movwf	(_outPipes+5)& (0+255),b	;volatile
 14473  0128BE  0E00               	movlw	0
 14474  0128C0  6F70               	movwf	(_outPipes+4)& (0+255),b	;volatile
 14475  0128C2                     l9962:
 14476  0128C2  B662               	btfsc	3938,3,c	;volatile
 14477  0128C4  D7F2               	goto	l9954
 14478                           
 14479                           ;usb_device.c: 349: }
 14480                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14481  0128C6  0E01               	movlw	1
 14482  0128C8  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14483                           
 14484                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14485  0128CA  0E01               	movlw	1
 14486  0128CC  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14487                           
 14488                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14489  0128CE  0E00               	movlw	0
 14490  0128D0  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14491                           
 14492                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14493  0128D2  0E00               	movlw	0
 14494  0128D4  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14495                           
 14496                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14497  0128D6  0E00               	movlw	0
 14498  0128D8  0100               	movlb	0	; () banked
 14499  0128DA  6F9D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14500                           
 14501                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14502  0128DC  0E00               	movlw	0
 14503  0128DE  0100               	movlb	0	; () banked
 14504  0128E0  6FBD               	movwf	USBDeviceInit@i& (0+255),b
 14505  0128E2                     l9966:
 14506                           
 14507                           ; BSR set to: 0
 14508  0128E2  0E02               	movlw	2
 14509  0128E4  0100               	movlb	0	; () banked
 14510  0128E6  65BD               	cpfsgt	USBDeviceInit@i& (0+255),b
 14511  0128E8  D001               	goto	l9970
 14512  0128EA  D033               	goto	l9976
 14513  0128EC                     l9970:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;usb_device.c: 363: {
 14517                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14518  0128EC  0100               	movlb	0	; () banked
 14519  0128EE  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 14520  0128F0  0D02               	mullw	2
 14521  0128F2  0E7B               	movlw	low _pBDTEntryIn
 14522  0128F4  24F3               	addwf	prodl,w,c
 14523  0128F6  6ED9               	movwf	fsr2l,c
 14524  0128F8  0E00               	movlw	high _pBDTEntryIn
 14525  0128FA  20F4               	addwfc	prodh,w,c
 14526  0128FC  6EDA               	movwf	fsr2h,c
 14527  0128FE  0E00               	movlw	0
 14528  012900  6EDE               	movwf	postinc2,c
 14529  012902  0E00               	movlw	0
 14530  012904  6EDD               	movwf	postdec2,c
 14531                           
 14532                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14533  012906  0100               	movlb	0	; () banked
 14534  012908  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 14535  01290A  0D02               	mullw	2
 14536  01290C  0E81               	movlw	low _pBDTEntryOut
 14537  01290E  24F3               	addwf	prodl,w,c
 14538  012910  6ED9               	movwf	fsr2l,c
 14539  012912  0E00               	movlw	high _pBDTEntryOut
 14540  012914  20F4               	addwfc	prodh,w,c
 14541  012916  6EDA               	movwf	fsr2h,c
 14542  012918  0E00               	movlw	0
 14543  01291A  6EDE               	movwf	postinc2,c
 14544  01291C  0E00               	movlw	0
 14545  01291E  6EDD               	movwf	postdec2,c
 14546                           
 14547                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14548  012920  0100               	movlb	0	; () banked
 14549  012922  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 14550  012924  0D01               	mullw	1
 14551  012926  0E8A               	movlw	low _ep_data_in
 14552  012928  24F3               	addwf	prodl,w,c
 14553  01292A  6ED9               	movwf	fsr2l,c
 14554  01292C  0E00               	movlw	high _ep_data_in
 14555  01292E  20F4               	addwfc	prodh,w,c
 14556  012930  6EDA               	movwf	fsr2h,c
 14557  012932  0E00               	movlw	0
 14558  012934  6EDF               	movwf	indf2,c
 14559                           
 14560                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14561  012936  0100               	movlb	0	; () banked
 14562  012938  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 14563  01293A  0D01               	mullw	1
 14564  01293C  0E8D               	movlw	low _ep_data_out
 14565  01293E  24F3               	addwf	prodl,w,c
 14566  012940  6ED9               	movwf	fsr2l,c
 14567  012942  0E00               	movlw	high _ep_data_out
 14568  012944  20F4               	addwfc	prodh,w,c
 14569  012946  6EDA               	movwf	fsr2h,c
 14570  012948  0E00               	movlw	0
 14571  01294A  6EDF               	movwf	indf2,c
 14572                           
 14573                           ; BSR set to: 0
 14574  01294C  0100               	movlb	0	; () banked
 14575  01294E  2BBD               	incf	USBDeviceInit@i& (0+255),f,b
 14576  012950  D7C8               	goto	l9966
 14577  012952                     l9976:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;usb_device.c: 368: }
 14581                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14582  012952  0E08               	movlw	8
 14583  012954  0100               	movlb	0	; () banked
 14584  012956  6F7B               	movwf	_pBDTEntryIn& (0+255),b
 14585  012958  0E0D               	movlw	13
 14586  01295A  0100               	movlb	0	; () banked
 14587  01295C  6F7C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14588                           
 14589                           ; BSR set to: 0
 14590                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 14591  01295E  0E16               	movlw	22
 14592  012960  010F               	movlb	15	; () banked
 14593  012962  6F26               	movwf	38,b	;volatile
 14594                           
 14595                           ; BSR set to: 15
 14596                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14597  012964  0E0D               	movlw	13
 14598  012966  010D               	movlb	13	; () banked
 14599  012968  6F03               	movwf	3,b	;volatile
 14600  01296A  0E30               	movlw	48
 14601  01296C  6F02               	movwf	2,b	;volatile
 14602                           
 14603                           ; BSR set to: 13
 14604                           ;usb_device.c: 376: BDT[0].CNT = 8;
 14605  01296E  0E08               	movlw	8
 14606  012970  010D               	movlb	13	; () banked
 14607  012972  6F01               	movwf	1,b	;volatile
 14608                           
 14609                           ; BSR set to: 13
 14610                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 14611  012974  0E04               	movlw	4
 14612  012976  010D               	movlb	13	; () banked
 14613  012978  6F00               	movwf	0,b	;volatile
 14614                           
 14615                           ; BSR set to: 13
 14616                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 14617  01297A  010D               	movlb	13	; () banked
 14618  01297C  8F00               	bsf	0,7,b	;volatile
 14619                           
 14620                           ; BSR set to: 13
 14621                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 14622  01297E  0E00               	movlw	0
 14623  012980  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 14624                           
 14625                           ; BSR set to: 13
 14626                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 14627  012982  0E00               	movlw	0
 14628  012984  6E45               	movwf	_USBDeviceState,c	;volatile
 14629                           
 14630                           ; BSR set to: 13
 14631  012986  0012               	return		;funcret
 14632  012988                     __end_of_USBDeviceInit:
 14633                           	opt stack 0
 14634                           tblptru	equ	0xFF8
 14635                           tblptrh	equ	0xFF7
 14636                           tblptrl	equ	0xFF6
 14637                           tablat	equ	0xFF5
 14638                           prodh	equ	0xFF4
 14639                           prodl	equ	0xFF3
 14640                           intcon	equ	0xFF2
 14641                           intcon2	equ	0xFF1
 14642                           postinc0	equ	0xFEE
 14643                           wreg	equ	0xFE8
 14644                           indf1	equ	0xFE7
 14645                           postinc1	equ	0xFE6
 14646                           postdec1	equ	0xFE5
 14647                           fsr1h	equ	0xFE2
 14648                           fsr1l	equ	0xFE1
 14649                           indf2	equ	0xFDF
 14650                           postinc2	equ	0xFDE
 14651                           postdec2	equ	0xFDD
 14652                           plusw2	equ	0xFDB
 14653                           fsr2h	equ	0xFDA
 14654                           fsr2l	equ	0xFD9
 14655                           status	equ	0xFD8
 14656                           
 14657 ;; *************** function _memset *****************
 14658 ;; Defined at:
 14659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;  p1              2    0[BANK0 ] PTR void 
 14662 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14663 ;;  c               2    2[BANK0 ] int 
 14664 ;;  n               2    4[BANK0 ] unsigned int 
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;  p               2    6[BANK0 ] PTR unsigned char 
 14667 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  2    0[BANK0 ] PTR void 
 14670 ;; Registers used:
 14671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14677 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14680 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14681 ;;Total ram usage:        8 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:   11
 14684 ;; This function calls:
 14685 ;;		Nothing
 14686 ;; This function is called by:
 14687 ;;		_USBDeviceInit
 14688 ;; This function uses a non-reentrant model
 14689 ;;
 14690                           
 14691                           	psect	text53
 14692  015E00                     __ptext53:
 14693                           	opt stack 0
 14694  015E00                     _memset:
 14695                           	opt stack 16
 14696                           
 14697                           ; BSR set to: 13
 14698                           ;incstack = 0
 14699  015E00  C0B5  F0BB         	movff	memset@p1,memset@p
 14700  015E04  C0B6  F0BC         	movff	memset@p1+1,memset@p+1
 14701  015E08  D009               	goto	l9530
 14702  015E0A                     l9526:
 14703  015E0A  C0BB  FFD9         	movff	memset@p,fsr2l
 14704  015E0E  C0BC  FFDA         	movff	memset@p+1,fsr2h
 14705  015E12  C0B7  FFDF         	movff	memset@c,indf2
 14706  015E16  0100               	movlb	0	; () banked
 14707  015E18  4BBB               	infsnz	memset@p& (0+255),f,b
 14708  015E1A  2BBC               	incf	(memset@p+1)& (0+255),f,b
 14709  015E1C                     l9530:
 14710  015E1C  0100               	movlb	0	; () banked
 14711  015E1E  07B9               	decf	memset@n& (0+255),f,b
 14712  015E20  A0D8               	btfss	status,0,c
 14713  015E22  07BA               	decf	(memset@n+1)& (0+255),f,b
 14714  015E24  0100               	movlb	0	; () banked
 14715  015E26  29B9               	incf	memset@n& (0+255),w,b
 14716  015E28  E1F0               	bnz	l9526
 14717  015E2A  0100               	movlb	0	; () banked
 14718  015E2C  29BA               	incf	(memset@n+1)& (0+255),w,b
 14719  015E2E  B4D8               	btfsc	status,2,c
 14720  015E30  0012               	return	
 14721  015E32  D7EB               	goto	l9526
 14722  015E34                     __end_of_memset:
 14723                           	opt stack 0
 14724                           tblptru	equ	0xFF8
 14725                           tblptrh	equ	0xFF7
 14726                           tblptrl	equ	0xFF6
 14727                           tablat	equ	0xFF5
 14728                           prodh	equ	0xFF4
 14729                           prodl	equ	0xFF3
 14730                           intcon	equ	0xFF2
 14731                           intcon2	equ	0xFF1
 14732                           postinc0	equ	0xFEE
 14733                           wreg	equ	0xFE8
 14734                           indf1	equ	0xFE7
 14735                           postinc1	equ	0xFE6
 14736                           postdec1	equ	0xFE5
 14737                           fsr1h	equ	0xFE2
 14738                           fsr1l	equ	0xFE1
 14739                           indf2	equ	0xFDF
 14740                           postinc2	equ	0xFDE
 14741                           postdec2	equ	0xFDD
 14742                           plusw2	equ	0xFDB
 14743                           fsr2h	equ	0xFDA
 14744                           fsr2l	equ	0xFD9
 14745                           status	equ	0xFD8
 14746                           
 14747 ;; *************** function _USBDeviceAttach *****************
 14748 ;; Defined at:
 14749 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;		None
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;		None
 14754 ;; Return value:  Size  Location     Type
 14755 ;;		None               void
 14756 ;; Registers used:
 14757 ;;		wreg, status,2
 14758 ;; Tracked objects:
 14759 ;;		On entry : 0/0
 14760 ;;		On exit  : 0/0
 14761 ;;		Unchanged: 0/0
 14762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14767 ;;Total ram usage:        0 bytes
 14768 ;; Hardware stack levels used:    1
 14769 ;; Hardware stack levels required when called:   11
 14770 ;; This function calls:
 14771 ;;		Nothing
 14772 ;; This function is called by:
 14773 ;;		_USB_init
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           	psect	text54
 14778  015D24                     __ptext54:
 14779                           	opt stack 0
 14780  015D24                     _USBDeviceAttach:
 14781                           	opt stack 17
 14782                           
 14783                           ;usb_device.c: 1356: {
 14784                           ;usb_device.c: 1357: if(1 == 1)
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;incstack = 0
 14788  015D24  5045               	movf	_USBDeviceState,w,c	;volatile
 14789  015D26  A4D8               	btfss	status,2,c
 14790  015D28  0012               	return	
 14791                           
 14792                           ;usb_device.c: 1358: {
 14793                           ;usb_device.c: 1360: UCON = 0;
 14794  015D2A  0E00               	movlw	0
 14795  015D2C  6E65               	movwf	3941,c	;volatile
 14796                           
 14797                           ;usb_device.c: 1363: UIE = 0;
 14798  015D2E  0E00               	movlw	0
 14799  015D30  010F               	movlb	15	; () banked
 14800  015D32  6F36               	movwf	54,b	;volatile
 14801                           
 14802                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 14803  015D34  0E16               	movlw	22
 14804  015D36  010F               	movlb	15	; () banked
 14805  015D38  6F39               	movwf	57,b	;volatile
 14806  015D3A  0E9F               	movlw	159
 14807  015D3C  010F               	movlb	15	; () banked
 14808  015D3E  6F37               	movwf	55,b	;volatile
 14809  015D40  0E7B               	movlw	123
 14810  015D42  010F               	movlb	15	; () banked
 14811  015D44  6F36               	movwf	54,b	;volatile
 14812                           
 14813                           ; BSR set to: 15
 14814                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 14815  015D46  8ED0               	bsf	4048,7,c	;volatile
 14816                           
 14817                           ; BSR set to: 15
 14818  015D48  88A2               	bsf	4002,4,c	;volatile
 14819                           
 14820                           ; BSR set to: 15
 14821  015D4A  88A0               	bsf	4000,4,c	;volatile
 14822                           
 14823                           ; BSR set to: 15
 14824  015D4C  8EF2               	bsf	intcon,7,c	;volatile
 14825                           
 14826                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 14827  015D4E  D001               	goto	l1174
 14828  015D50                     l1175:
 14829  015D50  8665               	bsf	3941,3,c	;volatile
 14830  015D52                     l1174:
 14831  015D52  A665               	btfss	3941,3,c	;volatile
 14832  015D54  D7FD               	goto	l1175
 14833                           
 14834                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 14835  015D56  0E01               	movlw	1
 14836  015D58  6E45               	movwf	_USBDeviceState,c	;volatile
 14837  015D5A  0012               	return	
 14838  015D5C                     __end_of_USBDeviceAttach:
 14839                           	opt stack 0
 14840                           tblptru	equ	0xFF8
 14841                           tblptrh	equ	0xFF7
 14842                           tblptrl	equ	0xFF6
 14843                           tablat	equ	0xFF5
 14844                           prodh	equ	0xFF4
 14845                           prodl	equ	0xFF3
 14846                           intcon	equ	0xFF2
 14847                           intcon2	equ	0xFF1
 14848                           postinc0	equ	0xFEE
 14849                           wreg	equ	0xFE8
 14850                           indf1	equ	0xFE7
 14851                           postinc1	equ	0xFE6
 14852                           postdec1	equ	0xFE5
 14853                           fsr1h	equ	0xFE2
 14854                           fsr1l	equ	0xFE1
 14855                           indf2	equ	0xFDF
 14856                           postinc2	equ	0xFDE
 14857                           postdec2	equ	0xFDD
 14858                           plusw2	equ	0xFDB
 14859                           fsr2h	equ	0xFDA
 14860                           fsr2l	equ	0xFD9
 14861                           status	equ	0xFD8
 14862                           
 14863 ;; *************** function _RTCC_init *****************
 14864 ;; Defined at:
 14865 ;;		line 56 in file "../My_header\My_RTCC.h"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;		None
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;		None
 14870 ;; Return value:  Size  Location     Type
 14871 ;;		None               void
 14872 ;; Registers used:
 14873 ;;		wreg, status,2
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/0
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14883 ;;Total ram usage:        0 bytes
 14884 ;; Hardware stack levels used:    1
 14885 ;; Hardware stack levels required when called:   11
 14886 ;; This function calls:
 14887 ;;		Nothing
 14888 ;; This function is called by:
 14889 ;;		_main_init
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text55
 14894  015EC4                     __ptext55:
 14895                           	opt stack 0
 14896  015EC4                     _RTCC_init:
 14897                           	opt stack 18
 14898                           
 14899                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 14900                           
 14901                           ;incstack = 0
 14902  015EC4  010F               	movlb	15	; () banked
 14903  015EC6  8B3F               	bsf	63,5,b	;volatile
 14904                           
 14905                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 14906  015EC8  010F               	movlb	15	; () banked
 14907  015ECA  BB3F               	btfsc	63,5,b	;volatile
 14908  015ECC  D006               	goto	l10314
 14909                           
 14910                           ; BSR set to: 15
 14911                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 14912  015ECE  0E55               	movlw	85
 14913  015ED0  6EA7               	movwf	4007,c	;volatile
 14914                           
 14915                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 14916  015ED2  0EAA               	movlw	170
 14917  015ED4  6EA7               	movwf	4007,c	;volatile
 14918                           
 14919                           ; BSR set to: 15
 14920                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 14921  015ED6  010F               	movlb	15	; () banked
 14922  015ED8  8B3F               	bsf	63,5,b	;volatile
 14923  015EDA                     l10314:
 14924                           
 14925                           ; BSR set to: 15
 14926                           ;My_header\My_RTCC.h: 62: }
 14927                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 14928  015EDA  010F               	movlb	15	; () banked
 14929  015EDC  8F3F               	bsf	63,7,b	;volatile
 14930                           
 14931                           ; BSR set to: 15
 14932                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 14933  015EDE  010F               	movlb	15	; () banked
 14934  015EE0  953F               	bcf	63,2,b	;volatile
 14935                           
 14936                           ; BSR set to: 15
 14937                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 14938  015EE2  010F               	movlb	15	; () banked
 14939  015EE4  833C               	bsf	60,1,b	;volatile
 14940                           
 14941                           ; BSR set to: 15
 14942                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 14943  015EE6  010F               	movlb	15	; () banked
 14944  015EE8  853C               	bsf	60,2,b	;volatile
 14945                           
 14946                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 14947  015EEA  0E00               	movlw	0
 14948  015EEC  010F               	movlb	15	; () banked
 14949  015EEE  6F3E               	movwf	62,b	;volatile
 14950                           
 14951                           ; BSR set to: 15
 14952  015EF0  0012               	return		;funcret
 14953  015EF2                     __end_of_RTCC_init:
 14954                           	opt stack 0
 14955                           tblptru	equ	0xFF8
 14956                           tblptrh	equ	0xFF7
 14957                           tblptrl	equ	0xFF6
 14958                           tablat	equ	0xFF5
 14959                           prodh	equ	0xFF4
 14960                           prodl	equ	0xFF3
 14961                           intcon	equ	0xFF2
 14962                           intcon2	equ	0xFF1
 14963                           postinc0	equ	0xFEE
 14964                           wreg	equ	0xFE8
 14965                           indf1	equ	0xFE7
 14966                           postinc1	equ	0xFE6
 14967                           postdec1	equ	0xFE5
 14968                           fsr1h	equ	0xFE2
 14969                           fsr1l	equ	0xFE1
 14970                           indf2	equ	0xFDF
 14971                           postinc2	equ	0xFDE
 14972                           postdec2	equ	0xFDD
 14973                           plusw2	equ	0xFDB
 14974                           fsr2h	equ	0xFDA
 14975                           fsr2l	equ	0xFD9
 14976                           status	equ	0xFD8
 14977                           
 14978 ;; *************** function _I2C_init *****************
 14979 ;; Defined at:
 14980 ;;		line 25 in file "../My_header\My_I2C.h"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;		None
 14983 ;; Auto vars:     Size  Location     Type
 14984 ;;		None
 14985 ;; Return value:  Size  Location     Type
 14986 ;;		None               void
 14987 ;; Registers used:
 14988 ;;		wreg, status,2
 14989 ;; Tracked objects:
 14990 ;;		On entry : 0/0
 14991 ;;		On exit  : 0/0
 14992 ;;		Unchanged: 0/0
 14993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14998 ;;Total ram usage:        0 bytes
 14999 ;; Hardware stack levels used:    1
 15000 ;; Hardware stack levels required when called:   11
 15001 ;; This function calls:
 15002 ;;		Nothing
 15003 ;; This function is called by:
 15004 ;;		_main_init
 15005 ;; This function uses a non-reentrant model
 15006 ;;
 15007                           
 15008                           	psect	text56
 15009  01620A                     __ptext56:
 15010                           	opt stack 0
 15011  01620A                     _I2C_init:
 15012                           	opt stack 18
 15013                           
 15014                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 15015                           
 15016                           ; BSR set to: 15
 15017                           ;incstack = 0
 15018  01620A  0E80               	movlw	128
 15019  01620C  6EC7               	movwf	4039,c	;volatile
 15020                           
 15021                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 15022  01620E  0E28               	movlw	40
 15023  016210  6EC6               	movwf	4038,c	;volatile
 15024                           
 15025                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 15026  016212  0E13               	movlw	19
 15027  016214  6EC8               	movwf	4040,c	;volatile
 15028                           
 15029                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 15030  016216  969E               	bcf	3998,3,c	;volatile
 15031                           
 15032                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 15033  016218  96A1               	bcf	4001,3,c	;volatile
 15034  01621A  0012               	return		;funcret
 15035  01621C                     __end_of_I2C_init:
 15036                           	opt stack 0
 15037                           tblptru	equ	0xFF8
 15038                           tblptrh	equ	0xFF7
 15039                           tblptrl	equ	0xFF6
 15040                           tablat	equ	0xFF5
 15041                           prodh	equ	0xFF4
 15042                           prodl	equ	0xFF3
 15043                           intcon	equ	0xFF2
 15044                           intcon2	equ	0xFF1
 15045                           postinc0	equ	0xFEE
 15046                           wreg	equ	0xFE8
 15047                           indf1	equ	0xFE7
 15048                           postinc1	equ	0xFE6
 15049                           postdec1	equ	0xFE5
 15050                           fsr1h	equ	0xFE2
 15051                           fsr1l	equ	0xFE1
 15052                           indf2	equ	0xFDF
 15053                           postinc2	equ	0xFDE
 15054                           postdec2	equ	0xFDD
 15055                           plusw2	equ	0xFDB
 15056                           fsr2h	equ	0xFDA
 15057                           fsr2l	equ	0xFD9
 15058                           status	equ	0xFD8
 15059                           
 15060 ;; *************** function _I2C_LCD_init *****************
 15061 ;; Defined at:
 15062 ;;		line 164 in file "../My_header\My_I2C.h"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;		None
 15065 ;; Auto vars:     Size  Location     Type
 15066 ;;		None
 15067 ;; Return value:  Size  Location     Type
 15068 ;;		None               void
 15069 ;; Registers used:
 15070 ;;		wreg, status,2, status,0, cstack
 15071 ;; Tracked objects:
 15072 ;;		On entry : 0/0
 15073 ;;		On exit  : 0/0
 15074 ;;		Unchanged: 0/0
 15075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15080 ;;Total ram usage:        0 bytes
 15081 ;; Hardware stack levels used:    1
 15082 ;; Hardware stack levels required when called:   15
 15083 ;; This function calls:
 15084 ;;		_Delay_ms
 15085 ;;		_I2C_LCD_Clear
 15086 ;;		_I2C_LCD_Command
 15087 ;; This function is called by:
 15088 ;;		_main_init
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           	psect	text57
 15093  0158F6                     __ptext57:
 15094                           	opt stack 0
 15095  0158F6                     _I2C_LCD_init:
 15096                           	opt stack 14
 15097                           
 15098                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 15099                           
 15100                           ;incstack = 0
 15101  0158F6  0E00               	movlw	0
 15102  0158F8  0100               	movlb	0	; () banked
 15103  0158FA  6FB6               	movwf	(Delay_ms@ms+1)& (0+255),b
 15104  0158FC  0E28               	movlw	40
 15105  0158FE  6FB5               	movwf	Delay_ms@ms& (0+255),b
 15106  015900  ECD2  F0AF         	call	_Delay_ms	;wreg free
 15107                           
 15108                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 15109  015904  0E38               	movlw	56
 15110  015906  ECAE  F0AE         	call	_I2C_LCD_Command
 15111                           
 15112                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 15113  01590A  0E39               	movlw	57
 15114  01590C  ECAE  F0AE         	call	_I2C_LCD_Command
 15115                           
 15116                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 15117  015910  0E14               	movlw	20
 15118  015912  ECAE  F0AE         	call	_I2C_LCD_Command
 15119                           
 15120                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 15121  015916  0E70               	movlw	112
 15122  015918  ECAE  F0AE         	call	_I2C_LCD_Command
 15123                           
 15124                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 15125  01591C  0E56               	movlw	86
 15126  01591E  ECAE  F0AE         	call	_I2C_LCD_Command
 15127                           
 15128                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 15129  015922  0E6C               	movlw	108
 15130  015924  ECAE  F0AE         	call	_I2C_LCD_Command
 15131                           
 15132                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 15133  015928  0E00               	movlw	0
 15134  01592A  0100               	movlb	0	; () banked
 15135  01592C  6FB6               	movwf	(Delay_ms@ms+1)& (0+255),b
 15136  01592E  0EC8               	movlw	200
 15137  015930  6FB5               	movwf	Delay_ms@ms& (0+255),b
 15138  015932  ECD2  F0AF         	call	_Delay_ms	;wreg free
 15139                           
 15140                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 15141  015936  0E38               	movlw	56
 15142  015938  ECAE  F0AE         	call	_I2C_LCD_Command
 15143                           
 15144                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 15145  01593C  0E0C               	movlw	12
 15146  01593E  ECAE  F0AE         	call	_I2C_LCD_Command
 15147                           
 15148                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 15149  015942  0E06               	movlw	6
 15150  015944  ECAE  F0AE         	call	_I2C_LCD_Command
 15151                           
 15152                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 15153  015948  ECE1  F0B0         	call	_I2C_LCD_Clear	;wreg free
 15154  01594C  0012               	return		;funcret
 15155  01594E                     __end_of_I2C_LCD_init:
 15156                           	opt stack 0
 15157                           tblptru	equ	0xFF8
 15158                           tblptrh	equ	0xFF7
 15159                           tblptrl	equ	0xFF6
 15160                           tablat	equ	0xFF5
 15161                           prodh	equ	0xFF4
 15162                           prodl	equ	0xFF3
 15163                           intcon	equ	0xFF2
 15164                           intcon2	equ	0xFF1
 15165                           postinc0	equ	0xFEE
 15166                           wreg	equ	0xFE8
 15167                           indf1	equ	0xFE7
 15168                           postinc1	equ	0xFE6
 15169                           postdec1	equ	0xFE5
 15170                           fsr1h	equ	0xFE2
 15171                           fsr1l	equ	0xFE1
 15172                           indf2	equ	0xFDF
 15173                           postinc2	equ	0xFDE
 15174                           postdec2	equ	0xFDD
 15175                           plusw2	equ	0xFDB
 15176                           fsr2h	equ	0xFDA
 15177                           fsr2l	equ	0xFD9
 15178                           status	equ	0xFD8
 15179                           
 15180 ;; *************** function _I2C_LCD_Clear *****************
 15181 ;; Defined at:
 15182 ;;		line 107 in file "../My_header\My_I2C.h"
 15183 ;; Parameters:    Size  Location     Type
 15184 ;;		None
 15185 ;; Auto vars:     Size  Location     Type
 15186 ;;		None
 15187 ;; Return value:  Size  Location     Type
 15188 ;;		None               void
 15189 ;; Registers used:
 15190 ;;		wreg, status,2, status,0, cstack
 15191 ;; Tracked objects:
 15192 ;;		On entry : 0/0
 15193 ;;		On exit  : 0/0
 15194 ;;		Unchanged: 0/0
 15195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15200 ;;Total ram usage:        1 bytes
 15201 ;; Hardware stack levels used:    1
 15202 ;; Hardware stack levels required when called:   14
 15203 ;; This function calls:
 15204 ;;		_I2C_LCD_Command
 15205 ;; This function is called by:
 15206 ;;		_I2C_LCD_init
 15207 ;;		_display_LCD
 15208 ;;		_sleep_loop
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           	psect	text58
 15213  0161C2                     __ptext58:
 15214                           	opt stack 0
 15215  0161C2                     _I2C_LCD_Clear:
 15216                           	opt stack 14
 15217                           
 15218                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 15219                           
 15220                           ;incstack = 0
 15221  0161C2  0E01               	movlw	1
 15222  0161C4  ECAE  F0AE         	call	_I2C_LCD_Command
 15223                           
 15224                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 15225  0161C8  0E12               	movlw	18
 15226  0161CA  0100               	movlb	0	; () banked
 15227  0161CC  6FBB               	movwf	??_I2C_LCD_Clear& (0+255),b
 15228  0161CE  0E23               	movlw	35
 15229  0161D0                     u12787:
 15230  0161D0  2EE8               	decfsz	wreg,f,c
 15231  0161D2  D7FE               	goto	u12787
 15232  0161D4  2FBB               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 15233  0161D6  D7FC               	goto	u12787
 15234  0161D8  F000               	nop	
 15235  0161DA  0012               	return		;funcret
 15236  0161DC                     __end_of_I2C_LCD_Clear:
 15237                           	opt stack 0
 15238                           tblptru	equ	0xFF8
 15239                           tblptrh	equ	0xFF7
 15240                           tblptrl	equ	0xFF6
 15241                           tablat	equ	0xFF5
 15242                           prodh	equ	0xFF4
 15243                           prodl	equ	0xFF3
 15244                           intcon	equ	0xFF2
 15245                           intcon2	equ	0xFF1
 15246                           postinc0	equ	0xFEE
 15247                           wreg	equ	0xFE8
 15248                           indf1	equ	0xFE7
 15249                           postinc1	equ	0xFE6
 15250                           postdec1	equ	0xFE5
 15251                           fsr1h	equ	0xFE2
 15252                           fsr1l	equ	0xFE1
 15253                           indf2	equ	0xFDF
 15254                           postinc2	equ	0xFDE
 15255                           postdec2	equ	0xFDD
 15256                           plusw2	equ	0xFDB
 15257                           fsr2h	equ	0xFDA
 15258                           fsr2l	equ	0xFD9
 15259                           status	equ	0xFD8
 15260                           
 15261 ;; *************** function _I2C_LCD_Command *****************
 15262 ;; Defined at:
 15263 ;;		line 94 in file "../My_header\My_I2C.h"
 15264 ;; Parameters:    Size  Location     Type
 15265 ;;  c               1    wreg     unsigned char 
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;  c               1    4[BANK0 ] unsigned char 
 15268 ;;  ans             1    5[BANK0 ] unsigned char 
 15269 ;; Return value:  Size  Location     Type
 15270 ;;		None               void
 15271 ;; Registers used:
 15272 ;;		wreg, status,2, status,0, cstack
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15281 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15282 ;;Total ram usage:        2 bytes
 15283 ;; Hardware stack levels used:    1
 15284 ;; Hardware stack levels required when called:   13
 15285 ;; This function calls:
 15286 ;;		_I2C_Send
 15287 ;;		_I2C_Start
 15288 ;;		_I2C_Stop
 15289 ;; This function is called by:
 15290 ;;		_I2C_LCD_Clear
 15291 ;;		_I2C_LCD_SetCursor
 15292 ;;		_I2C_LCD_init
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           	psect	text59
 15297  015D5C                     __ptext59:
 15298                           	opt stack 0
 15299  015D5C                     _I2C_LCD_Command:
 15300                           	opt stack 13
 15301                           
 15302                           ;incstack = 0
 15303                           ;I2C_LCD_Command@c stored from wreg
 15304  015D5C  0100               	movlb	0	; () banked
 15305  015D5E  6FB9               	movwf	I2C_LCD_Command@c& (0+255),b
 15306                           
 15307                           ;My_header\My_I2C.h: 95: uint8_t ans;
 15308                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 15309  015D60  0E00               	movlw	0
 15310  015D62  0100               	movlb	0	; () banked
 15311  015D64  6FB7               	movwf	I2C_Start@rw& (0+255),b
 15312  015D66  0E3E               	movlw	62
 15313  015D68  EC33  F0AF         	call	_I2C_Start
 15314  015D6C  0100               	movlb	0	; () banked
 15315  015D6E  6FBA               	movwf	I2C_LCD_Command@ans& (0+255),b
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 15319  015D70  0100               	movlb	0	; () banked
 15320  015D72  51BA               	movf	I2C_LCD_Command@ans& (0+255),w,b
 15321  015D74  0100               	movlb	0	; () banked
 15322  015D76  A4D8               	btfss	status,2,c
 15323  015D78  D007               	goto	l343
 15324                           
 15325                           ; BSR set to: 0
 15326                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 15327  015D7A  0E80               	movlw	128
 15328  015D7C  ECEE  F0B0         	call	_I2C_Send
 15329                           
 15330                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 15331  015D80  0100               	movlb	0	; () banked
 15332  015D82  51B9               	movf	I2C_LCD_Command@c& (0+255),w,b
 15333  015D84  ECEE  F0B0         	call	_I2C_Send
 15334  015D88                     l343:
 15335                           
 15336                           ;My_header\My_I2C.h: 102: }
 15337                           ;My_header\My_I2C.h: 103: I2C_Stop();
 15338  015D88  EC13  F0B1         	call	_I2C_Stop	;wreg free
 15339                           
 15340                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 15341  015D8C  0E68               	movlw	104
 15342  015D8E                     u12797:
 15343  015D8E  2EE8               	decfsz	wreg,f,c
 15344  015D90  D7FE               	goto	u12797
 15345  015D92  0012               	return		;funcret
 15346  015D94                     __end_of_I2C_LCD_Command:
 15347                           	opt stack 0
 15348                           tblptru	equ	0xFF8
 15349                           tblptrh	equ	0xFF7
 15350                           tblptrl	equ	0xFF6
 15351                           tablat	equ	0xFF5
 15352                           prodh	equ	0xFF4
 15353                           prodl	equ	0xFF3
 15354                           intcon	equ	0xFF2
 15355                           intcon2	equ	0xFF1
 15356                           postinc0	equ	0xFEE
 15357                           wreg	equ	0xFE8
 15358                           indf1	equ	0xFE7
 15359                           postinc1	equ	0xFE6
 15360                           postdec1	equ	0xFE5
 15361                           fsr1h	equ	0xFE2
 15362                           fsr1l	equ	0xFE1
 15363                           indf2	equ	0xFDF
 15364                           postinc2	equ	0xFDE
 15365                           postdec2	equ	0xFDD
 15366                           plusw2	equ	0xFDB
 15367                           fsr2h	equ	0xFDA
 15368                           fsr2l	equ	0xFD9
 15369                           status	equ	0xFD8
 15370                           
 15371 ;; *************** function _I2C_Stop *****************
 15372 ;; Defined at:
 15373 ;;		line 59 in file "../My_header\My_I2C.h"
 15374 ;; Parameters:    Size  Location     Type
 15375 ;;		None
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;		None
 15378 ;; Return value:  Size  Location     Type
 15379 ;;		None               void
 15380 ;; Registers used:
 15381 ;;		wreg, status,2, status,0, cstack
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 0/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15391 ;;Total ram usage:        0 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; Hardware stack levels required when called:   12
 15394 ;; This function calls:
 15395 ;;		_I2C_IdleCheck
 15396 ;; This function is called by:
 15397 ;;		_I2C_LCD_Command
 15398 ;;		_I2C_LCD_Putc
 15399 ;;		_I2C_LCD_Puts
 15400 ;;		_I2C_LCD_CreateChar
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404                           	psect	text60
 15405  016226                     __ptext60:
 15406                           	opt stack 0
 15407  016226                     _I2C_Stop:
 15408                           	opt stack 13
 15409                           
 15410                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 15411                           
 15412                           ;incstack = 0
 15413  016226  0E05               	movlw	5
 15414  016228  ECB6  F0B0         	call	_I2C_IdleCheck
 15415                           
 15416                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 15417  01622C  84C5               	bsf	4037,2,c	;volatile
 15418  01622E  0012               	return		;funcret
 15419  016230                     __end_of_I2C_Stop:
 15420                           	opt stack 0
 15421                           tblptru	equ	0xFF8
 15422                           tblptrh	equ	0xFF7
 15423                           tblptrl	equ	0xFF6
 15424                           tablat	equ	0xFF5
 15425                           prodh	equ	0xFF4
 15426                           prodl	equ	0xFF3
 15427                           intcon	equ	0xFF2
 15428                           intcon2	equ	0xFF1
 15429                           postinc0	equ	0xFEE
 15430                           wreg	equ	0xFE8
 15431                           indf1	equ	0xFE7
 15432                           postinc1	equ	0xFE6
 15433                           postdec1	equ	0xFE5
 15434                           fsr1h	equ	0xFE2
 15435                           fsr1l	equ	0xFE1
 15436                           indf2	equ	0xFDF
 15437                           postinc2	equ	0xFDE
 15438                           postdec2	equ	0xFDD
 15439                           plusw2	equ	0xFDB
 15440                           fsr2h	equ	0xFDA
 15441                           fsr2l	equ	0xFD9
 15442                           status	equ	0xFD8
 15443                           
 15444 ;; *************** function _I2C_Start *****************
 15445 ;; Defined at:
 15446 ;;		line 35 in file "../My_header\My_I2C.h"
 15447 ;; Parameters:    Size  Location     Type
 15448 ;;  adrs            1    wreg     unsigned char 
 15449 ;;  rw              1    2[BANK0 ] unsigned char 
 15450 ;; Auto vars:     Size  Location     Type
 15451 ;;  adrs            1    3[BANK0 ] unsigned char 
 15452 ;; Return value:  Size  Location     Type
 15453 ;;                  1    wreg      unsigned char 
 15454 ;; Registers used:
 15455 ;;		wreg, status,2, status,0, cstack
 15456 ;; Tracked objects:
 15457 ;;		On entry : 0/0
 15458 ;;		On exit  : 0/0
 15459 ;;		Unchanged: 0/0
 15460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15461 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;Total ram usage:        2 bytes
 15466 ;; Hardware stack levels used:    1
 15467 ;; Hardware stack levels required when called:   12
 15468 ;; This function calls:
 15469 ;;		_I2C_IdleCheck
 15470 ;; This function is called by:
 15471 ;;		_I2C_LCD_Command
 15472 ;;		_I2C_LCD_Putc
 15473 ;;		_I2C_LCD_Puts
 15474 ;;		_I2C_LCD_CreateChar
 15475 ;; This function uses a non-reentrant model
 15476 ;;
 15477                           
 15478                           	psect	text61
 15479  015E66                     __ptext61:
 15480                           	opt stack 0
 15481  015E66                     _I2C_Start:
 15482                           	opt stack 13
 15483                           
 15484                           ;incstack = 0
 15485                           ;I2C_Start@adrs stored from wreg
 15486  015E66  0100               	movlb	0	; () banked
 15487  015E68  6FB8               	movwf	I2C_Start@adrs& (0+255),b
 15488                           
 15489                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 15490  015E6A  0E05               	movlw	5
 15491  015E6C  ECB6  F0B0         	call	_I2C_IdleCheck
 15492                           
 15493                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 15494  015E70  80C5               	bsf	4037,0,c	;volatile
 15495                           
 15496                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 15497  015E72  0E05               	movlw	5
 15498  015E74  ECB6  F0B0         	call	_I2C_IdleCheck
 15499                           
 15500                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 15501  015E78  969E               	bcf	3998,3,c	;volatile
 15502                           
 15503                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 15504  015E7A  0100               	movlb	0	; () banked
 15505  015E7C  51B8               	movf	I2C_Start@adrs& (0+255),w,b
 15506  015E7E  25B8               	addwf	I2C_Start@adrs& (0+255),w,b
 15507  015E80  0100               	movlb	0	; () banked
 15508  015E82  25B7               	addwf	I2C_Start@rw& (0+255),w,b
 15509  015E84  6EC9               	movwf	4041,c	;volatile
 15510  015E86                     l319:
 15511  015E86  A69E               	btfss	3998,3,c	;volatile
 15512  015E88  D7FE               	goto	l319
 15513                           
 15514                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 15515  015E8A  ACC5               	btfss	4037,6,c	;volatile
 15516  015E8C  D002               	goto	u9910
 15517  015E8E  0E01               	movlw	1
 15518  015E90  0012               	return	
 15519  015E92                     u9910:
 15520  015E92  0E00               	movlw	0
 15521  015E94  0012               	return	
 15522  015E96                     __end_of_I2C_Start:
 15523                           	opt stack 0
 15524                           tblptru	equ	0xFF8
 15525                           tblptrh	equ	0xFF7
 15526                           tblptrl	equ	0xFF6
 15527                           tablat	equ	0xFF5
 15528                           prodh	equ	0xFF4
 15529                           prodl	equ	0xFF3
 15530                           intcon	equ	0xFF2
 15531                           intcon2	equ	0xFF1
 15532                           postinc0	equ	0xFEE
 15533                           wreg	equ	0xFE8
 15534                           indf1	equ	0xFE7
 15535                           postinc1	equ	0xFE6
 15536                           postdec1	equ	0xFE5
 15537                           fsr1h	equ	0xFE2
 15538                           fsr1l	equ	0xFE1
 15539                           indf2	equ	0xFDF
 15540                           postinc2	equ	0xFDE
 15541                           postdec2	equ	0xFDD
 15542                           plusw2	equ	0xFDB
 15543                           fsr2h	equ	0xFDA
 15544                           fsr2l	equ	0xFD9
 15545                           status	equ	0xFD8
 15546                           
 15547 ;; *************** function _I2C_Send *****************
 15548 ;; Defined at:
 15549 ;;		line 65 in file "../My_header\My_I2C.h"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;  data            1    wreg     unsigned char 
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  data            1    2[BANK0 ] unsigned char 
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      unsigned char 
 15556 ;; Registers used:
 15557 ;;		wreg, status,2, status,0, cstack
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15567 ;;Total ram usage:        1 bytes
 15568 ;; Hardware stack levels used:    1
 15569 ;; Hardware stack levels required when called:   12
 15570 ;; This function calls:
 15571 ;;		_I2C_IdleCheck
 15572 ;; This function is called by:
 15573 ;;		_I2C_LCD_Command
 15574 ;;		_I2C_LCD_Putc
 15575 ;;		_I2C_LCD_Puts
 15576 ;;		_I2C_LCD_CreateChar
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text62
 15581  0161DC                     __ptext62:
 15582                           	opt stack 0
 15583  0161DC                     _I2C_Send:
 15584                           	opt stack 13
 15585                           
 15586                           ;incstack = 0
 15587                           ;I2C_Send@data stored from wreg
 15588  0161DC  0100               	movlb	0	; () banked
 15589  0161DE  6FB7               	movwf	I2C_Send@data& (0+255),b
 15590                           
 15591                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 15592  0161E0  0E05               	movlw	5
 15593  0161E2  ECB6  F0B0         	call	_I2C_IdleCheck
 15594                           
 15595                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 15596  0161E6  969E               	bcf	3998,3,c	;volatile
 15597                           
 15598                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 15599  0161E8  C0B7  FFC9         	movff	I2C_Send@data,4041	;volatile
 15600  0161EC                     l334:
 15601  0161EC  A69E               	btfss	3998,3,c	;volatile
 15602  0161EE  D7FE               	goto	l334
 15603                           
 15604                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 15605                           ;	Return value of _I2C_Send is never used
 15606  0161F0  50C5               	movf	4037,w,c	;volatile
 15607  0161F2  0012               	return	
 15608  0161F4                     __end_of_I2C_Send:
 15609                           	opt stack 0
 15610                           tblptru	equ	0xFF8
 15611                           tblptrh	equ	0xFF7
 15612                           tblptrl	equ	0xFF6
 15613                           tablat	equ	0xFF5
 15614                           prodh	equ	0xFF4
 15615                           prodl	equ	0xFF3
 15616                           intcon	equ	0xFF2
 15617                           intcon2	equ	0xFF1
 15618                           postinc0	equ	0xFEE
 15619                           wreg	equ	0xFE8
 15620                           indf1	equ	0xFE7
 15621                           postinc1	equ	0xFE6
 15622                           postdec1	equ	0xFE5
 15623                           fsr1h	equ	0xFE2
 15624                           fsr1l	equ	0xFE1
 15625                           indf2	equ	0xFDF
 15626                           postinc2	equ	0xFDE
 15627                           postdec2	equ	0xFDD
 15628                           plusw2	equ	0xFDB
 15629                           fsr2h	equ	0xFDA
 15630                           fsr2l	equ	0xFD9
 15631                           status	equ	0xFD8
 15632                           
 15633 ;; *************** function _I2C_IdleCheck *****************
 15634 ;; Defined at:
 15635 ;;		line 21 in file "../My_header\My_I2C.h"
 15636 ;; Parameters:    Size  Location     Type
 15637 ;;  mask            1    wreg     unsigned char 
 15638 ;; Auto vars:     Size  Location     Type
 15639 ;;  mask            1    1[BANK0 ] unsigned char 
 15640 ;; Return value:  Size  Location     Type
 15641 ;;		None               void
 15642 ;; Registers used:
 15643 ;;		wreg, status,2, status,0
 15644 ;; Tracked objects:
 15645 ;;		On entry : 0/0
 15646 ;;		On exit  : 0/0
 15647 ;;		Unchanged: 0/0
 15648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15653 ;;Total ram usage:        2 bytes
 15654 ;; Hardware stack levels used:    1
 15655 ;; Hardware stack levels required when called:   11
 15656 ;; This function calls:
 15657 ;;		Nothing
 15658 ;; This function is called by:
 15659 ;;		_I2C_Start
 15660 ;;		_I2C_Stop
 15661 ;;		_I2C_Send
 15662 ;;		_I2C_rStart
 15663 ;;		_I2C_Receive
 15664 ;; This function uses a non-reentrant model
 15665 ;;
 15666                           
 15667                           	psect	text63
 15668  01616C                     __ptext63:
 15669                           	opt stack 0
 15670  01616C                     _I2C_IdleCheck:
 15671                           	opt stack 13
 15672                           
 15673                           ;incstack = 0
 15674                           ;I2C_IdleCheck@mask stored from wreg
 15675  01616C  0100               	movlb	0	; () banked
 15676  01616E  6FB6               	movwf	I2C_IdleCheck@mask& (0+255),b
 15677  016170                     l9026:
 15678  016170  50C7               	movf	4039,w,c	;volatile
 15679  016172  0100               	movlb	0	; () banked
 15680  016174  15B6               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 15681  016176  0100               	movlb	0	; () banked
 15682  016178  6FB5               	movwf	??_I2C_IdleCheck& (0+255),b
 15683  01617A  50C5               	movf	4037,w,c	;volatile
 15684  01617C  0B1F               	andlw	31
 15685  01617E  0100               	movlb	0	; () banked
 15686  016180  11B5               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 15687  016182  0900               	iorlw	0
 15688  016184  B4D8               	btfsc	status,2,c
 15689  016186  0012               	return	
 15690  016188  D7F3               	goto	l9026
 15691  01618A                     __end_of_I2C_IdleCheck:
 15692                           	opt stack 0
 15693                           tblptru	equ	0xFF8
 15694                           tblptrh	equ	0xFF7
 15695                           tblptrl	equ	0xFF6
 15696                           tablat	equ	0xFF5
 15697                           prodh	equ	0xFF4
 15698                           prodl	equ	0xFF3
 15699                           intcon	equ	0xFF2
 15700                           intcon2	equ	0xFF1
 15701                           postinc0	equ	0xFEE
 15702                           wreg	equ	0xFE8
 15703                           indf1	equ	0xFE7
 15704                           postinc1	equ	0xFE6
 15705                           postdec1	equ	0xFE5
 15706                           fsr1h	equ	0xFE2
 15707                           fsr1l	equ	0xFE1
 15708                           indf2	equ	0xFDF
 15709                           postinc2	equ	0xFDE
 15710                           postdec2	equ	0xFDD
 15711                           plusw2	equ	0xFDB
 15712                           fsr2h	equ	0xFDA
 15713                           fsr2l	equ	0xFD9
 15714                           status	equ	0xFD8
 15715                           
 15716 ;; *************** function _Delay_ms *****************
 15717 ;; Defined at:
 15718 ;;		line 333 in file "../My_header\My_header.h"
 15719 ;; Parameters:    Size  Location     Type
 15720 ;;  ms              2    0[BANK0 ] unsigned int 
 15721 ;; Auto vars:     Size  Location     Type
 15722 ;;		None
 15723 ;; Return value:  Size  Location     Type
 15724 ;;		None               void
 15725 ;; Registers used:
 15726 ;;		wreg, status,2, status,0
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15736 ;;Total ram usage:        3 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:   11
 15739 ;; This function calls:
 15740 ;;		Nothing
 15741 ;; This function is called by:
 15742 ;;		_I2C_LCD_init
 15743 ;; This function uses a non-reentrant model
 15744 ;;
 15745                           
 15746                           	psect	text64
 15747  015FA4                     __ptext64:
 15748                           	opt stack 0
 15749  015FA4                     _Delay_ms:
 15750                           	opt stack 17
 15751                           
 15752                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;incstack = 0
 15756  015FA4  D009               	goto	l9596
 15757  015FA6                     l9594:
 15758  015FA6  0E10               	movlw	16
 15759  015FA8  0100               	movlb	0	; () banked
 15760  015FAA  6FB7               	movwf	??_Delay_ms& (0+255),b
 15761  015FAC  0E94               	movlw	148
 15762  015FAE                     u12807:
 15763  015FAE  2EE8               	decfsz	wreg,f,c
 15764  015FB0  D7FE               	goto	u12807
 15765  015FB2  2FB7               	decfsz	??_Delay_ms& (0+255),f,b
 15766  015FB4  D7FC               	goto	u12807
 15767  015FB6  D000               	nop2	
 15768  015FB8                     l9596:
 15769  015FB8  0100               	movlb	0	; () banked
 15770  015FBA  07B5               	decf	Delay_ms@ms& (0+255),f,b
 15771  015FBC  A0D8               	btfss	status,0,c
 15772  015FBE  07B6               	decf	(Delay_ms@ms+1)& (0+255),f,b
 15773  015FC0  0100               	movlb	0	; () banked
 15774  015FC2  29B5               	incf	Delay_ms@ms& (0+255),w,b
 15775  015FC4  E1F0               	bnz	l9594
 15776  015FC6  0100               	movlb	0	; () banked
 15777  015FC8  29B6               	incf	(Delay_ms@ms+1)& (0+255),w,b
 15778  015FCA  B4D8               	btfsc	status,2,c
 15779  015FCC  0012               	return	
 15780  015FCE  D7EB               	goto	l9594
 15781  015FD0                     __end_of_Delay_ms:
 15782                           	opt stack 0
 15783                           tblptru	equ	0xFF8
 15784                           tblptrh	equ	0xFF7
 15785                           tblptrl	equ	0xFF6
 15786                           tablat	equ	0xFF5
 15787                           prodh	equ	0xFF4
 15788                           prodl	equ	0xFF3
 15789                           intcon	equ	0xFF2
 15790                           intcon2	equ	0xFF1
 15791                           postinc0	equ	0xFEE
 15792                           wreg	equ	0xFE8
 15793                           indf1	equ	0xFE7
 15794                           postinc1	equ	0xFE6
 15795                           postdec1	equ	0xFE5
 15796                           fsr1h	equ	0xFE2
 15797                           fsr1l	equ	0xFE1
 15798                           indf2	equ	0xFDF
 15799                           postinc2	equ	0xFDE
 15800                           postdec2	equ	0xFDD
 15801                           plusw2	equ	0xFDB
 15802                           fsr2h	equ	0xFDA
 15803                           fsr2l	equ	0xFD9
 15804                           status	equ	0xFD8
 15805                           
 15806 ;; *************** function _CTMU_init *****************
 15807 ;; Defined at:
 15808 ;;		line 289 in file "../My_header\My_header.h"
 15809 ;; Parameters:    Size  Location     Type
 15810 ;;		None
 15811 ;; Auto vars:     Size  Location     Type
 15812 ;;		None
 15813 ;; Return value:  Size  Location     Type
 15814 ;;		None               void
 15815 ;; Registers used:
 15816 ;;		wreg, status,2
 15817 ;; Tracked objects:
 15818 ;;		On entry : 0/0
 15819 ;;		On exit  : 0/0
 15820 ;;		Unchanged: 0/0
 15821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;Total ram usage:        0 bytes
 15827 ;; Hardware stack levels used:    1
 15828 ;; Hardware stack levels required when called:   11
 15829 ;; This function calls:
 15830 ;;		Nothing
 15831 ;; This function is called by:
 15832 ;;		_main_init
 15833 ;; This function uses a non-reentrant model
 15834 ;;
 15835                           
 15836                           	psect	text65
 15837  016050                     __ptext65:
 15838                           	opt stack 0
 15839  016050                     _CTMU_init:
 15840                           	opt stack 18
 15841                           
 15842                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;incstack = 0
 15846  016050  0E00               	movlw	0
 15847  016052  6EB3               	movwf	4019,c	;volatile
 15848                           
 15849                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 15850  016054  0E90               	movlw	144
 15851  016056  6EB2               	movwf	4018,c	;volatile
 15852                           
 15853                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 15854  016058  0E01               	movlw	1
 15855  01605A  6EB1               	movwf	4017,c	;volatile
 15856                           
 15857                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 15858  01605C  8EC1               	bsf	4033,7,c	;volatile
 15859                           
 15860                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 15861  01605E  9CC1               	bcf	4033,6,c	;volatile
 15862                           
 15863                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 15864  016060  50C1               	movf	4033,w,c	;volatile
 15865  016062  0BC7               	andlw	-57
 15866  016064  0908               	iorlw	8
 15867  016066  6EC1               	movwf	4033,c	;volatile
 15868                           
 15869                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 15870  016068  50C1               	movf	4033,w,c	;volatile
 15871  01606A  0BF8               	andlw	-8
 15872  01606C  0906               	iorlw	6
 15873  01606E  6EC1               	movwf	4033,c	;volatile
 15874                           
 15875                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 15876  016070  9CC2               	bcf	4034,6,c	;volatile
 15877                           
 15878                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 15879  016072  9EC2               	bcf	4034,7,c	;volatile
 15880                           
 15881                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 15882  016074  80C2               	bsf	4034,0,c	;volatile
 15883  016076  0012               	return		;funcret
 15884  016078                     __end_of_CTMU_init:
 15885                           	opt stack 0
 15886                           tblptru	equ	0xFF8
 15887                           tblptrh	equ	0xFF7
 15888                           tblptrl	equ	0xFF6
 15889                           tablat	equ	0xFF5
 15890                           prodh	equ	0xFF4
 15891                           prodl	equ	0xFF3
 15892                           intcon	equ	0xFF2
 15893                           intcon2	equ	0xFF1
 15894                           postinc0	equ	0xFEE
 15895                           wreg	equ	0xFE8
 15896                           indf1	equ	0xFE7
 15897                           postinc1	equ	0xFE6
 15898                           postdec1	equ	0xFE5
 15899                           fsr1h	equ	0xFE2
 15900                           fsr1l	equ	0xFE1
 15901                           indf2	equ	0xFDF
 15902                           postinc2	equ	0xFDE
 15903                           postdec2	equ	0xFDD
 15904                           plusw2	equ	0xFDB
 15905                           fsr2h	equ	0xFDA
 15906                           fsr2l	equ	0xFD9
 15907                           status	equ	0xFD8
 15908                           
 15909 ;; *************** function _ADC_init *****************
 15910 ;; Defined at:
 15911 ;;		line 149 in file "../My_header\My_header.h"
 15912 ;; Parameters:    Size  Location     Type
 15913 ;;  p_ref           1    wreg     unsigned char 
 15914 ;; Auto vars:     Size  Location     Type
 15915 ;;  p_ref           1    0[BANK0 ] unsigned char 
 15916 ;; Return value:  Size  Location     Type
 15917 ;;		None               void
 15918 ;; Registers used:
 15919 ;;		wreg, status,2
 15920 ;; Tracked objects:
 15921 ;;		On entry : 0/0
 15922 ;;		On exit  : 0/0
 15923 ;;		Unchanged: 0/0
 15924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15929 ;;Total ram usage:        1 bytes
 15930 ;; Hardware stack levels used:    1
 15931 ;; Hardware stack levels required when called:   11
 15932 ;; This function calls:
 15933 ;;		Nothing
 15934 ;; This function is called by:
 15935 ;;		_main_init
 15936 ;; This function uses a non-reentrant model
 15937 ;;
 15938                           
 15939                           	psect	text66
 15940  01612C                     __ptext66:
 15941                           	opt stack 0
 15942  01612C                     _ADC_init:
 15943                           	opt stack 18
 15944                           
 15945                           ;incstack = 0
 15946                           ;ADC_init@p_ref stored from wreg
 15947  01612C  0100               	movlb	0	; () banked
 15948  01612E  6FB5               	movwf	ADC_init@p_ref& (0+255),b
 15949                           
 15950                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 15951  016130  9EC2               	bcf	4034,7,c	;volatile
 15952                           
 15953                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 15954  016132  0100               	movlb	0	; () banked
 15955  016134  B1B5               	btfsc	ADC_init@p_ref& (0+255),0,b
 15956  016136  D002               	bra	u11205
 15957  016138  9CC2               	bcf	4034,6,c	;volatile
 15958  01613A  D001               	bra	u11206
 15959  01613C                     u11205:
 15960  01613C  8CC2               	bsf	4034,6,c	;volatile
 15961  01613E                     u11206:
 15962                           
 15963                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 15964  01613E  8EC1               	bsf	4033,7,c	;volatile
 15965                           
 15966                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 15967  016140  9CC1               	bcf	4033,6,c	;volatile
 15968                           
 15969                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 15970  016142  50C1               	movf	4033,w,c	;volatile
 15971  016144  0BF8               	andlw	-8
 15972  016146  0906               	iorlw	6
 15973  016148  6EC1               	movwf	4033,c	;volatile
 15974  01614A  0012               	return		;funcret
 15975  01614C                     __end_of_ADC_init:
 15976                           	opt stack 0
 15977                           tblptru	equ	0xFF8
 15978                           tblptrh	equ	0xFF7
 15979                           tblptrl	equ	0xFF6
 15980                           tablat	equ	0xFF5
 15981                           prodh	equ	0xFF4
 15982                           prodl	equ	0xFF3
 15983                           intcon	equ	0xFF2
 15984                           intcon2	equ	0xFF1
 15985                           postinc0	equ	0xFEE
 15986                           wreg	equ	0xFE8
 15987                           indf1	equ	0xFE7
 15988                           postinc1	equ	0xFE6
 15989                           postdec1	equ	0xFE5
 15990                           fsr1h	equ	0xFE2
 15991                           fsr1l	equ	0xFE1
 15992                           indf2	equ	0xFDF
 15993                           postinc2	equ	0xFDE
 15994                           postdec2	equ	0xFDD
 15995                           plusw2	equ	0xFDB
 15996                           fsr2h	equ	0xFDA
 15997                           fsr2l	equ	0xFD9
 15998                           status	equ	0xFD8
 15999                           
 16000 ;; *************** function _ctmu_loop *****************
 16001 ;; Defined at:
 16002 ;;		line 607 in file "tasks.h"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;		None
 16005 ;; Auto vars:     Size  Location     Type
 16006 ;;		None
 16007 ;; Return value:  Size  Location     Type
 16008 ;;		None               void
 16009 ;; Registers used:
 16010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16011 ;; Tracked objects:
 16012 ;;		On entry : 0/0
 16013 ;;		On exit  : 0/0
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16020 ;;Total ram usage:        0 bytes
 16021 ;; Hardware stack levels used:    1
 16022 ;; Hardware stack levels required when called:   13
 16023 ;; This function calls:
 16024 ;;		_CTMU_read
 16025 ;;		___lwdiv
 16026 ;;		_button_timer_interrupt
 16027 ;; This function is called by:
 16028 ;;		_main
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032                           	psect	text67
 16033  01331C                     __ptext67:
 16034                           	opt stack 0
 16035  01331C                     _ctmu_loop:
 16036                           	opt stack 17
 16037                           
 16038                           ;tasks.h: 608: if (ctmu_flag) {
 16039                           
 16040                           ;incstack = 0
 16041  01331C  0100               	movlb	0	; () banked
 16042  01331E  51A3               	movf	_ctmu_flag& (0+255),w,b
 16043  013320  B4D8               	btfsc	status,2,c
 16044  013322  0012               	return	
 16045                           
 16046                           ; BSR set to: 0
 16047                           ;tasks.h: 609: ctmu_flag = 0;
 16048  013324  0E00               	movlw	0
 16049  013326  0100               	movlb	0	; () banked
 16050  013328  6FA3               	movwf	_ctmu_flag& (0+255),b
 16051                           
 16052                           ; BSR set to: 0
 16053                           ;tasks.h: 610: button_timer_interrupt(&ctmu[0], !(CTMU_read(0) / ctmu_value[0]));
 16054  01332A  0EDD               	movlw	low _ctmu
 16055  01332C  0100               	movlb	0	; () banked
 16056  01332E  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16057  013330  0E01               	movlw	high _ctmu
 16058  013332  0100               	movlb	0	; () banked
 16059  013334  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16060  013336  0E00               	movlw	0
 16061  013338  EC2E  F0A3         	call	_CTMU_read
 16062  01333C  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16063  013340  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16064  013344  C1C9  F0D3         	movff	_ctmu_value,___lwdiv@divisor
 16065  013348  C1CA  F0D4         	movff	_ctmu_value+1,___lwdiv@divisor+1
 16066  01334C  EC1A  F0AA         	call	___lwdiv	;wreg free
 16067  013350  0100               	movlb	0	; () banked
 16068  013352  51D1               	movf	?___lwdiv& (0+255),w,b
 16069  013354  0100               	movlb	0	; () banked
 16070  013356  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16071  013358  A4D8               	btfss	status,2,c
 16072  01335A  D002               	goto	u12300
 16073  01335C  0E01               	movlw	1
 16074  01335E  D001               	goto	u12310
 16075  013360                     u12300:
 16076  013360  0E00               	movlw	0
 16077  013362                     u12310:
 16078  013362  0100               	movlb	0	; () banked
 16079  013364  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16080  013366  EC09  F08C         	call	_button_timer_interrupt	;wreg free
 16081                           
 16082                           ;tasks.h: 611: button_timer_interrupt(&ctmu[1], !(CTMU_read(1) / ctmu_value[1]));
 16083  01336A  0EE1               	movlw	low (_ctmu+4)
 16084  01336C  0100               	movlb	0	; () banked
 16085  01336E  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16086  013370  0E01               	movlw	high (_ctmu+4)
 16087  013372  0100               	movlb	0	; () banked
 16088  013374  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16089  013376  0E01               	movlw	1
 16090  013378  EC2E  F0A3         	call	_CTMU_read
 16091  01337C  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16092  013380  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16093  013384  C1CB  F0D3         	movff	_ctmu_value+2,___lwdiv@divisor
 16094  013388  C1CC  F0D4         	movff	_ctmu_value+3,___lwdiv@divisor+1
 16095  01338C  EC1A  F0AA         	call	___lwdiv	;wreg free
 16096  013390  0100               	movlb	0	; () banked
 16097  013392  51D1               	movf	?___lwdiv& (0+255),w,b
 16098  013394  0100               	movlb	0	; () banked
 16099  013396  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16100  013398  A4D8               	btfss	status,2,c
 16101  01339A  D002               	goto	u12320
 16102  01339C  0E01               	movlw	1
 16103  01339E  D001               	goto	u12330
 16104  0133A0                     u12320:
 16105  0133A0  0E00               	movlw	0
 16106  0133A2                     u12330:
 16107  0133A2  0100               	movlb	0	; () banked
 16108  0133A4  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16109  0133A6  EC09  F08C         	call	_button_timer_interrupt	;wreg free
 16110                           
 16111                           ;tasks.h: 612: button_timer_interrupt(&ctmu[2], !(CTMU_read(2) / ctmu_value[2]));
 16112  0133AA  0EE5               	movlw	low (_ctmu+8)
 16113  0133AC  0100               	movlb	0	; () banked
 16114  0133AE  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16115  0133B0  0E01               	movlw	high (_ctmu+8)
 16116  0133B2  0100               	movlb	0	; () banked
 16117  0133B4  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16118  0133B6  0E02               	movlw	2
 16119  0133B8  EC2E  F0A3         	call	_CTMU_read
 16120  0133BC  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16121  0133C0  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16122  0133C4  C1CD  F0D3         	movff	_ctmu_value+4,___lwdiv@divisor
 16123  0133C8  C1CE  F0D4         	movff	_ctmu_value+5,___lwdiv@divisor+1
 16124  0133CC  EC1A  F0AA         	call	___lwdiv	;wreg free
 16125  0133D0  0100               	movlb	0	; () banked
 16126  0133D2  51D1               	movf	?___lwdiv& (0+255),w,b
 16127  0133D4  0100               	movlb	0	; () banked
 16128  0133D6  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16129  0133D8  A4D8               	btfss	status,2,c
 16130  0133DA  D002               	goto	u12340
 16131  0133DC  0E01               	movlw	1
 16132  0133DE  D001               	goto	u12350
 16133  0133E0                     u12340:
 16134  0133E0  0E00               	movlw	0
 16135  0133E2                     u12350:
 16136  0133E2  0100               	movlb	0	; () banked
 16137  0133E4  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16138  0133E6  EC09  F08C         	call	_button_timer_interrupt	;wreg free
 16139                           
 16140                           ;tasks.h: 613: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 16141  0133EA  0EF9               	movlw	low _ctmu_m
 16142  0133EC  0100               	movlb	0	; () banked
 16143  0133EE  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16144  0133F0  0E01               	movlw	high _ctmu_m
 16145  0133F2  0100               	movlb	0	; () banked
 16146  0133F4  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16147  0133F6  0E03               	movlw	3
 16148  0133F8  EC2E  F0A3         	call	_CTMU_read
 16149  0133FC  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16150  013400  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16151  013404  C09A  F0D3         	movff	_ctmu_value_m,___lwdiv@divisor
 16152  013408  C09B  F0D4         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 16153  01340C  EC1A  F0AA         	call	___lwdiv	;wreg free
 16154  013410  0100               	movlb	0	; () banked
 16155  013412  51D1               	movf	?___lwdiv& (0+255),w,b
 16156  013414  0100               	movlb	0	; () banked
 16157  013416  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16158  013418  A4D8               	btfss	status,2,c
 16159  01341A  D002               	goto	u12360
 16160  01341C  0E01               	movlw	1
 16161  01341E  D001               	goto	u12370
 16162  013420                     u12360:
 16163  013420  0E00               	movlw	0
 16164  013422                     u12370:
 16165  013422  0100               	movlb	0	; () banked
 16166  013424  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16167  013426  EC09  F08C         	call	_button_timer_interrupt	;wreg free
 16168  01342A  0012               	return	
 16169  01342C                     __end_of_ctmu_loop:
 16170                           	opt stack 0
 16171                           tblptru	equ	0xFF8
 16172                           tblptrh	equ	0xFF7
 16173                           tblptrl	equ	0xFF6
 16174                           tablat	equ	0xFF5
 16175                           prodh	equ	0xFF4
 16176                           prodl	equ	0xFF3
 16177                           intcon	equ	0xFF2
 16178                           intcon2	equ	0xFF1
 16179                           postinc0	equ	0xFEE
 16180                           wreg	equ	0xFE8
 16181                           indf1	equ	0xFE7
 16182                           postinc1	equ	0xFE6
 16183                           postdec1	equ	0xFE5
 16184                           fsr1h	equ	0xFE2
 16185                           fsr1l	equ	0xFE1
 16186                           indf2	equ	0xFDF
 16187                           postinc2	equ	0xFDE
 16188                           postdec2	equ	0xFDD
 16189                           plusw2	equ	0xFDB
 16190                           fsr2h	equ	0xFDA
 16191                           fsr2l	equ	0xFD9
 16192                           status	equ	0xFD8
 16193                           
 16194 ;; *************** function _button_timer_interrupt *****************
 16195 ;; Defined at:
 16196 ;;		line 51 in file "../My_header\My_button.h"
 16197 ;; Parameters:    Size  Location     Type
 16198 ;;  bt              2   35[BANK0 ] PTR struct button
 16199 ;;		 -> ctmu_m(4), ctmu(12), 
 16200 ;;  sw_value        1   37[BANK0 ] unsigned char 
 16201 ;; Auto vars:     Size  Location     Type
 16202 ;;		None
 16203 ;; Return value:  Size  Location     Type
 16204 ;;		None               void
 16205 ;; Registers used:
 16206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16207 ;; Tracked objects:
 16208 ;;		On entry : 0/0
 16209 ;;		On exit  : 0/0
 16210 ;;		Unchanged: 0/0
 16211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16212 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;Total ram usage:        5 bytes
 16217 ;; Hardware stack levels used:    1
 16218 ;; Hardware stack levels required when called:   11
 16219 ;; This function calls:
 16220 ;;		Nothing
 16221 ;; This function is called by:
 16222 ;;		_ctmu_loop
 16223 ;; This function uses a non-reentrant model
 16224 ;;
 16225                           
 16226                           	psect	text68
 16227  011812                     __ptext68:
 16228                           	opt stack 0
 16229  011812                     _button_timer_interrupt:
 16230                           	opt stack 18
 16231                           
 16232                           ;My_header\My_button.h: 52: if (sw_value) {
 16233                           
 16234                           ;incstack = 0
 16235  011812  0100               	movlb	0	; () banked
 16236  011814  51DA               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 16237  011816  0100               	movlb	0	; () banked
 16238  011818  B4D8               	btfsc	status,2,c
 16239  01181A  D0A8               	goto	l10264
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 16243  01181C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16244  011820  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16245  011824  0E84               	movlw	132
 16246  011826  18DE               	xorwf	postinc2,w,c
 16247  011828  E10D               	bnz	l282
 16248  01182A  0E03               	movlw	3
 16249  01182C  18DE               	xorwf	postinc2,w,c
 16250  01182E  A4D8               	btfss	status,2,c
 16251  011830  D009               	goto	l282
 16252                           
 16253                           ; BSR set to: 0
 16254  011832  0100               	movlb	0	; () banked
 16255  011834  EE20 F003          	lfsr	2,3
 16256  011838  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16257  01183A  26D9               	addwf	fsr2l,f,c
 16258  01183C  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16259  01183E  22DA               	addwfc	fsr2h,f,c
 16260  011840  0100               	movlb	0	; () banked
 16261  011842  8EDF               	bsf	indf2,7,c
 16262  011844                     l282:
 16263                           
 16264                           ; BSR set to: 0
 16265                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 16266  011844  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16267  011848  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16268  01184C  0EBC               	movlw	188
 16269  01184E  18DE               	xorwf	postinc2,w,c
 16270  011850  E10D               	bnz	l283
 16271  011852  0E02               	movlw	2
 16272  011854  18DE               	xorwf	postinc2,w,c
 16273  011856  A4D8               	btfss	status,2,c
 16274  011858  D009               	goto	l283
 16275                           
 16276                           ; BSR set to: 0
 16277  01185A  0100               	movlb	0	; () banked
 16278  01185C  EE20 F003          	lfsr	2,3
 16279  011860  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16280  011862  26D9               	addwf	fsr2l,f,c
 16281  011864  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16282  011866  22DA               	addwfc	fsr2h,f,c
 16283  011868  0100               	movlb	0	; () banked
 16284  01186A  8CDF               	bsf	indf2,6,c
 16285  01186C                     l283:
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 16289  01186C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16290  011870  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16291  011874  0EF4               	movlw	244
 16292  011876  18DE               	xorwf	postinc2,w,c
 16293  011878  E10C               	bnz	l284
 16294  01187A  04DE               	decf	postinc2,w,c
 16295  01187C  A4D8               	btfss	status,2,c
 16296  01187E  D009               	goto	l284
 16297                           
 16298                           ; BSR set to: 0
 16299  011880  0100               	movlb	0	; () banked
 16300  011882  EE20 F003          	lfsr	2,3
 16301  011886  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16302  011888  26D9               	addwf	fsr2l,f,c
 16303  01188A  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16304  01188C  22DA               	addwfc	fsr2h,f,c
 16305  01188E  0100               	movlb	0	; () banked
 16306  011890  8ADF               	bsf	indf2,5,c
 16307  011892                     l284:
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 16311  011892  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16312  011896  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16313  01189A  0E2C               	movlw	44
 16314  01189C  18DE               	xorwf	postinc2,w,c
 16315  01189E  E10C               	bnz	l285
 16316  0118A0  04DE               	decf	postinc2,w,c
 16317  0118A2  A4D8               	btfss	status,2,c
 16318  0118A4  D009               	goto	l285
 16319                           
 16320                           ; BSR set to: 0
 16321  0118A6  0100               	movlb	0	; () banked
 16322  0118A8  EE20 F003          	lfsr	2,3
 16323  0118AC  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16324  0118AE  26D9               	addwf	fsr2l,f,c
 16325  0118B0  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16326  0118B2  22DA               	addwfc	fsr2h,f,c
 16327  0118B4  0100               	movlb	0	; () banked
 16328  0118B6  88DF               	bsf	indf2,4,c
 16329  0118B8                     l285:
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 16333  0118B8  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16334  0118BC  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16335  0118C0  0E96               	movlw	150
 16336  0118C2  18DE               	xorwf	postinc2,w,c
 16337  0118C4  10DE               	iorwf	postinc2,w,c
 16338  0118C6  A4D8               	btfss	status,2,c
 16339  0118C8  D009               	goto	l286
 16340                           
 16341                           ; BSR set to: 0
 16342  0118CA  0100               	movlb	0	; () banked
 16343  0118CC  EE20 F003          	lfsr	2,3
 16344  0118D0  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16345  0118D2  26D9               	addwf	fsr2l,f,c
 16346  0118D4  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16347  0118D6  22DA               	addwfc	fsr2h,f,c
 16348  0118D8  0100               	movlb	0	; () banked
 16349  0118DA  86DF               	bsf	indf2,3,c
 16350  0118DC                     l286:
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 16354  0118DC  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16355  0118E0  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16356  0118E4  0E3C               	movlw	60
 16357  0118E6  18DE               	xorwf	postinc2,w,c
 16358  0118E8  10DE               	iorwf	postinc2,w,c
 16359  0118EA  A4D8               	btfss	status,2,c
 16360  0118EC  D009               	goto	l287
 16361                           
 16362                           ; BSR set to: 0
 16363  0118EE  0100               	movlb	0	; () banked
 16364  0118F0  EE20 F003          	lfsr	2,3
 16365  0118F4  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16366  0118F6  26D9               	addwf	fsr2l,f,c
 16367  0118F8  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16368  0118FA  22DA               	addwfc	fsr2h,f,c
 16369  0118FC  0100               	movlb	0	; () banked
 16370  0118FE  84DF               	bsf	indf2,2,c
 16371  011900                     l287:
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 16375  011900  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16376  011904  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16377  011908  0E10               	movlw	16
 16378  01190A  18DE               	xorwf	postinc2,w,c
 16379  01190C  10DE               	iorwf	postinc2,w,c
 16380  01190E  A4D8               	btfss	status,2,c
 16381  011910  D009               	goto	l288
 16382                           
 16383                           ; BSR set to: 0
 16384  011912  0100               	movlb	0	; () banked
 16385  011914  EE20 F003          	lfsr	2,3
 16386  011918  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16387  01191A  26D9               	addwf	fsr2l,f,c
 16388  01191C  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16389  01191E  22DA               	addwfc	fsr2h,f,c
 16390  011920  0100               	movlb	0	; () banked
 16391  011922  82DF               	bsf	indf2,1,c
 16392  011924                     l288:
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 16396  011924  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16397  011928  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16398  01192C  0E02               	movlw	2
 16399  01192E  18DE               	xorwf	postinc2,w,c
 16400  011930  10DE               	iorwf	postinc2,w,c
 16401  011932  A4D8               	btfss	status,2,c
 16402  011934  D009               	goto	l289
 16403                           
 16404                           ; BSR set to: 0
 16405  011936  0100               	movlb	0	; () banked
 16406  011938  EE20 F003          	lfsr	2,3
 16407  01193C  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16408  01193E  26D9               	addwf	fsr2l,f,c
 16409  011940  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16410  011942  22DA               	addwfc	fsr2h,f,c
 16411  011944  0100               	movlb	0	; () banked
 16412  011946  80DF               	bsf	indf2,0,c
 16413  011948                     l289:
 16414                           
 16415                           ; BSR set to: 0
 16416                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 16417  011948  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16418  01194C  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16419  011950  0E85               	movlw	133
 16420  011952  5CDE               	subwf	postinc2,w,c
 16421  011954  0E03               	movlw	3
 16422  011956  58DE               	subwfb	postinc2,w,c
 16423  011958  B0D8               	btfsc	status,0,c
 16424  01195A  0012               	return	
 16425                           
 16426                           ; BSR set to: 0
 16427  01195C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16428  011960  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16429  011964  2ADE               	incf	postinc2,f,c
 16430  011966  0E00               	movlw	0
 16431  011968  22DD               	addwfc	postdec2,f,c
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;My_header\My_button.h: 62: } else {
 16435  01196A  0012               	return	
 16436  01196C                     l10264:
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 16440  01196C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16441  011970  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16442  011974  0E84               	movlw	132
 16443  011976  5CDE               	subwf	postinc2,w,c
 16444  011978  0E03               	movlw	3
 16445  01197A  58DE               	subwfb	postinc2,w,c
 16446  01197C  A0D8               	btfss	status,0,c
 16447  01197E  D00A               	goto	l10268
 16448                           
 16449                           ; BSR set to: 0
 16450  011980  0100               	movlb	0	; () banked
 16451  011982  EE20 F002          	lfsr	2,2
 16452  011986  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16453  011988  26D9               	addwf	fsr2l,f,c
 16454  01198A  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16455  01198C  22DA               	addwfc	fsr2h,f,c
 16456  01198E  0100               	movlb	0	; () banked
 16457  011990  8EDF               	bsf	indf2,7,c
 16458  011992  D08F               	goto	l10296
 16459  011994                     l10268:
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 16463  011994  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16464  011998  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16465  01199C  0EBC               	movlw	188
 16466  01199E  5CDE               	subwf	postinc2,w,c
 16467  0119A0  0E02               	movlw	2
 16468  0119A2  58DE               	subwfb	postinc2,w,c
 16469  0119A4  A0D8               	btfss	status,0,c
 16470  0119A6  D00A               	goto	l10272
 16471                           
 16472                           ; BSR set to: 0
 16473  0119A8  0100               	movlb	0	; () banked
 16474  0119AA  EE20 F002          	lfsr	2,2
 16475  0119AE  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16476  0119B0  26D9               	addwf	fsr2l,f,c
 16477  0119B2  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16478  0119B4  22DA               	addwfc	fsr2h,f,c
 16479  0119B6  0100               	movlb	0	; () banked
 16480  0119B8  8CDF               	bsf	indf2,6,c
 16481  0119BA  D07B               	goto	l10296
 16482  0119BC                     l10272:
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 16486  0119BC  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16487  0119C0  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16488  0119C4  0EF4               	movlw	244
 16489  0119C6  5CDE               	subwf	postinc2,w,c
 16490  0119C8  0E01               	movlw	1
 16491  0119CA  58DE               	subwfb	postinc2,w,c
 16492  0119CC  A0D8               	btfss	status,0,c
 16493  0119CE  D00A               	goto	l10276
 16494                           
 16495                           ; BSR set to: 0
 16496  0119D0  0100               	movlb	0	; () banked
 16497  0119D2  EE20 F002          	lfsr	2,2
 16498  0119D6  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16499  0119D8  26D9               	addwf	fsr2l,f,c
 16500  0119DA  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16501  0119DC  22DA               	addwfc	fsr2h,f,c
 16502  0119DE  0100               	movlb	0	; () banked
 16503  0119E0  8ADF               	bsf	indf2,5,c
 16504  0119E2  D067               	goto	l10296
 16505  0119E4                     l10276:
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 16509  0119E4  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16510  0119E8  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16511  0119EC  0E2C               	movlw	44
 16512  0119EE  5CDE               	subwf	postinc2,w,c
 16513  0119F0  0E01               	movlw	1
 16514  0119F2  58DE               	subwfb	postinc2,w,c
 16515  0119F4  A0D8               	btfss	status,0,c
 16516  0119F6  D00A               	goto	l10280
 16517                           
 16518                           ; BSR set to: 0
 16519  0119F8  0100               	movlb	0	; () banked
 16520  0119FA  EE20 F002          	lfsr	2,2
 16521  0119FE  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16522  011A00  26D9               	addwf	fsr2l,f,c
 16523  011A02  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16524  011A04  22DA               	addwfc	fsr2h,f,c
 16525  011A06  0100               	movlb	0	; () banked
 16526  011A08  88DF               	bsf	indf2,4,c
 16527  011A0A  D053               	goto	l10296
 16528  011A0C                     l10280:
 16529                           
 16530                           ; BSR set to: 0
 16531                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 16532  011A0C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16533  011A10  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16534  011A14  0E01               	movlw	1
 16535  011A16  50DB               	movf	plusw2,w,c
 16536  011A18  E104               	bnz	u11390
 16537  011A1A  0E96               	movlw	150
 16538  011A1C  5CDE               	subwf	postinc2,w,c
 16539  011A1E  A0D8               	btfss	status,0,c
 16540  011A20  D00A               	goto	l10284
 16541  011A22                     u11390:
 16542                           
 16543                           ; BSR set to: 0
 16544  011A22  0100               	movlb	0	; () banked
 16545  011A24  EE20 F002          	lfsr	2,2
 16546  011A28  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16547  011A2A  26D9               	addwf	fsr2l,f,c
 16548  011A2C  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16549  011A2E  22DA               	addwfc	fsr2h,f,c
 16550  011A30  0100               	movlb	0	; () banked
 16551  011A32  86DF               	bsf	indf2,3,c
 16552  011A34  D03E               	goto	l10296
 16553  011A36                     l10284:
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 16557  011A36  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16558  011A3A  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16559  011A3E  0E01               	movlw	1
 16560  011A40  50DB               	movf	plusw2,w,c
 16561  011A42  E104               	bnz	u11400
 16562  011A44  0E3C               	movlw	60
 16563  011A46  5CDE               	subwf	postinc2,w,c
 16564  011A48  A0D8               	btfss	status,0,c
 16565  011A4A  D00A               	goto	l10288
 16566  011A4C                     u11400:
 16567                           
 16568                           ; BSR set to: 0
 16569  011A4C  0100               	movlb	0	; () banked
 16570  011A4E  EE20 F002          	lfsr	2,2
 16571  011A52  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16572  011A54  26D9               	addwf	fsr2l,f,c
 16573  011A56  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16574  011A58  22DA               	addwfc	fsr2h,f,c
 16575  011A5A  0100               	movlb	0	; () banked
 16576  011A5C  84DF               	bsf	indf2,2,c
 16577  011A5E  D029               	goto	l10296
 16578  011A60                     l10288:
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 16582  011A60  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16583  011A64  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16584  011A68  0E01               	movlw	1
 16585  011A6A  50DB               	movf	plusw2,w,c
 16586  011A6C  E104               	bnz	u11410
 16587  011A6E  0E10               	movlw	16
 16588  011A70  5CDE               	subwf	postinc2,w,c
 16589  011A72  A0D8               	btfss	status,0,c
 16590  011A74  D00A               	goto	l10292
 16591  011A76                     u11410:
 16592                           
 16593                           ; BSR set to: 0
 16594  011A76  0100               	movlb	0	; () banked
 16595  011A78  EE20 F002          	lfsr	2,2
 16596  011A7C  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16597  011A7E  26D9               	addwf	fsr2l,f,c
 16598  011A80  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16599  011A82  22DA               	addwfc	fsr2h,f,c
 16600  011A84  0100               	movlb	0	; () banked
 16601  011A86  82DF               	bsf	indf2,1,c
 16602  011A88  D014               	goto	l10296
 16603  011A8A                     l10292:
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 16607  011A8A  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16608  011A8E  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16609  011A92  0E01               	movlw	1
 16610  011A94  50DB               	movf	plusw2,w,c
 16611  011A96  E104               	bnz	u11420
 16612  011A98  0E02               	movlw	2
 16613  011A9A  5CDE               	subwf	postinc2,w,c
 16614  011A9C  A0D8               	btfss	status,0,c
 16615  011A9E  D009               	goto	l10296
 16616  011AA0                     u11420:
 16617                           
 16618                           ; BSR set to: 0
 16619  011AA0  0100               	movlb	0	; () banked
 16620  011AA2  EE20 F002          	lfsr	2,2
 16621  011AA6  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16622  011AA8  26D9               	addwf	fsr2l,f,c
 16623  011AAA  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16624  011AAC  22DA               	addwfc	fsr2h,f,c
 16625  011AAE  0100               	movlb	0	; () banked
 16626  011AB0  80DF               	bsf	indf2,0,c
 16627  011AB2                     l10296:
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 16631  011AB2  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16632  011AB6  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16633  011ABA  0E00               	movlw	0
 16634  011ABC  6EDE               	movwf	postinc2,c
 16635  011ABE  0E00               	movlw	0
 16636  011AC0  6EDD               	movwf	postdec2,c
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 16640  011AC2  0100               	movlb	0	; () banked
 16641  011AC4  EE20 F002          	lfsr	2,2
 16642  011AC8  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16643  011ACA  26D9               	addwf	fsr2l,f,c
 16644  011ACC  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16645  011ACE  22DA               	addwfc	fsr2h,f,c
 16646  011AD0  0EFF               	movlw	255
 16647  011AD2  16DE               	andwf	postinc2,f,c
 16648  011AD4  0E00               	movlw	0
 16649  011AD6  16DD               	andwf	postdec2,f,c
 16650  011AD8  0012               	return	
 16651  011ADA                     __end_of_button_timer_interrupt:
 16652                           	opt stack 0
 16653                           tblptru	equ	0xFF8
 16654                           tblptrh	equ	0xFF7
 16655                           tblptrl	equ	0xFF6
 16656                           tablat	equ	0xFF5
 16657                           prodh	equ	0xFF4
 16658                           prodl	equ	0xFF3
 16659                           intcon	equ	0xFF2
 16660                           intcon2	equ	0xFF1
 16661                           postinc0	equ	0xFEE
 16662                           wreg	equ	0xFE8
 16663                           indf1	equ	0xFE7
 16664                           postinc1	equ	0xFE6
 16665                           postdec1	equ	0xFE5
 16666                           fsr1h	equ	0xFE2
 16667                           fsr1l	equ	0xFE1
 16668                           indf2	equ	0xFDF
 16669                           postinc2	equ	0xFDE
 16670                           postdec2	equ	0xFDD
 16671                           plusw2	equ	0xFDB
 16672                           fsr2h	equ	0xFDA
 16673                           fsr2l	equ	0xFD9
 16674                           status	equ	0xFD8
 16675                           
 16676 ;; *************** function ___lwdiv *****************
 16677 ;; Defined at:
 16678 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  dividend        2   28[BANK0 ] unsigned int 
 16681 ;;  divisor         2   30[BANK0 ] unsigned int 
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;  quotient        2   33[BANK0 ] unsigned int 
 16684 ;;  counter         1   32[BANK0 ] unsigned char 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  2   28[BANK0 ] unsigned int 
 16687 ;; Registers used:
 16688 ;;		wreg, status,2, status,0
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16695 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;Total ram usage:        7 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:   11
 16701 ;; This function calls:
 16702 ;;		Nothing
 16703 ;; This function is called by:
 16704 ;;		_tx_sendn
 16705 ;;		_my_utoa
 16706 ;;		_display_LCD
 16707 ;;		_ctmu_set_ratio
 16708 ;;		_comm_disp
 16709 ;;		_ctmu_loop
 16710 ;;		_ringbuf_put_num
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text69
 16715  015434                     __ptext69:
 16716                           	opt stack 0
 16717  015434                     ___lwdiv:
 16718                           	opt stack 17
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;incstack = 0
 16722  015434  0E00               	movlw	0
 16723  015436  0100               	movlb	0	; () banked
 16724  015438  6FD7               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16725  01543A  0E00               	movlw	0
 16726  01543C  6FD6               	movwf	___lwdiv@quotient& (0+255),b
 16727                           
 16728                           ; BSR set to: 0
 16729  01543E  0100               	movlb	0	; () banked
 16730  015440  51D3               	movf	___lwdiv@divisor& (0+255),w,b
 16731  015442  0100               	movlb	0	; () banked
 16732  015444  11D4               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16733  015446  B4D8               	btfsc	status,2,c
 16734  015448  D02C               	goto	l1905
 16735                           
 16736                           ; BSR set to: 0
 16737  01544A  0E01               	movlw	1
 16738  01544C  0100               	movlb	0	; () banked
 16739  01544E  6FD5               	movwf	___lwdiv@counter& (0+255),b
 16740  015450  D006               	goto	l9148
 16741  015452                     l9146:
 16742                           
 16743                           ; BSR set to: 0
 16744  015452  0100               	movlb	0	; () banked
 16745  015454  90D8               	bcf	status,0,c
 16746  015456  37D3               	rlcf	___lwdiv@divisor& (0+255),f,b
 16747  015458  37D4               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16748  01545A  0100               	movlb	0	; () banked
 16749  01545C  2BD5               	incf	___lwdiv@counter& (0+255),f,b
 16750  01545E                     l9148:
 16751                           
 16752                           ; BSR set to: 0
 16753  01545E  0100               	movlb	0	; () banked
 16754  015460  AFD4               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16755  015462  D7F7               	goto	l9146
 16756  015464                     l9150:
 16757                           
 16758                           ; BSR set to: 0
 16759  015464  0100               	movlb	0	; () banked
 16760  015466  90D8               	bcf	status,0,c
 16761  015468  37D6               	rlcf	___lwdiv@quotient& (0+255),f,b
 16762  01546A  37D7               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16763                           
 16764                           ; BSR set to: 0
 16765  01546C  0100               	movlb	0	; () banked
 16766  01546E  51D3               	movf	___lwdiv@divisor& (0+255),w,b
 16767  015470  0100               	movlb	0	; () banked
 16768  015472  5DD1               	subwf	___lwdiv@dividend& (0+255),w,b
 16769  015474  0100               	movlb	0	; () banked
 16770  015476  51D4               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16771  015478  0100               	movlb	0	; () banked
 16772  01547A  59D2               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16773  01547C  A0D8               	btfss	status,0,c
 16774  01547E  D00A               	goto	l9158
 16775                           
 16776                           ; BSR set to: 0
 16777  015480  0100               	movlb	0	; () banked
 16778  015482  51D3               	movf	___lwdiv@divisor& (0+255),w,b
 16779  015484  0100               	movlb	0	; () banked
 16780  015486  5FD1               	subwf	___lwdiv@dividend& (0+255),f,b
 16781  015488  0100               	movlb	0	; () banked
 16782  01548A  51D4               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16783  01548C  0100               	movlb	0	; () banked
 16784  01548E  5BD2               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16785                           
 16786                           ; BSR set to: 0
 16787  015490  0100               	movlb	0	; () banked
 16788  015492  81D6               	bsf	___lwdiv@quotient& (0+255),0,b
 16789  015494                     l9158:
 16790                           
 16791                           ; BSR set to: 0
 16792  015494  0100               	movlb	0	; () banked
 16793  015496  90D8               	bcf	status,0,c
 16794  015498  33D4               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16795  01549A  33D3               	rrcf	___lwdiv@divisor& (0+255),f,b
 16796                           
 16797                           ; BSR set to: 0
 16798  01549C  0100               	movlb	0	; () banked
 16799  01549E  2FD5               	decfsz	___lwdiv@counter& (0+255),f,b
 16800  0154A0  D7E1               	goto	l9150
 16801  0154A2                     l1905:
 16802                           
 16803                           ; BSR set to: 0
 16804  0154A2  C0D6  F0D1         	movff	___lwdiv@quotient,?___lwdiv
 16805  0154A6  C0D7  F0D2         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16806                           
 16807                           ; BSR set to: 0
 16808  0154AA  0012               	return		;funcret
 16809  0154AC                     __end_of___lwdiv:
 16810                           	opt stack 0
 16811                           tblptru	equ	0xFF8
 16812                           tblptrh	equ	0xFF7
 16813                           tblptrl	equ	0xFF6
 16814                           tablat	equ	0xFF5
 16815                           prodh	equ	0xFF4
 16816                           prodl	equ	0xFF3
 16817                           intcon	equ	0xFF2
 16818                           intcon2	equ	0xFF1
 16819                           postinc0	equ	0xFEE
 16820                           wreg	equ	0xFE8
 16821                           indf1	equ	0xFE7
 16822                           postinc1	equ	0xFE6
 16823                           postdec1	equ	0xFE5
 16824                           fsr1h	equ	0xFE2
 16825                           fsr1l	equ	0xFE1
 16826                           indf2	equ	0xFDF
 16827                           postinc2	equ	0xFDE
 16828                           postdec2	equ	0xFDD
 16829                           plusw2	equ	0xFDB
 16830                           fsr2h	equ	0xFDA
 16831                           fsr2l	equ	0xFD9
 16832                           status	equ	0xFD8
 16833                           
 16834 ;; *************** function _CTMU_read *****************
 16835 ;; Defined at:
 16836 ;;		line 304 in file "../My_header\My_header.h"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;  ch              1    wreg     unsigned char 
 16839 ;; Auto vars:     Size  Location     Type
 16840 ;;  ch              1   16[BANK0 ] unsigned char 
 16841 ;;  i               1   21[BANK0 ] unsigned char 
 16842 ;;  sum             4   17[BANK0 ] unsigned long 
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  2   13[BANK0 ] unsigned int 
 16845 ;; Registers used:
 16846 ;;		wreg, status,2, status,0, cstack
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16853 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16855 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16856 ;;Total ram usage:        9 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:   12
 16859 ;; This function calls:
 16860 ;;		___lldiv
 16861 ;; This function is called by:
 16862 ;;		_ctmu_set_ratio
 16863 ;;		_ctmu_loop
 16864 ;; This function uses a non-reentrant model
 16865 ;;
 16866                           
 16867                           	psect	text70
 16868  01465C                     __ptext70:
 16869                           	opt stack 0
 16870  01465C                     _CTMU_read:
 16871                           	opt stack 15
 16872                           
 16873                           ; BSR set to: 0
 16874                           ;incstack = 0
 16875                           ;CTMU_read@ch stored from wreg
 16876  01465C  0100               	movlb	0	; () banked
 16877  01465E  6FC5               	movwf	CTMU_read@ch& (0+255),b
 16878                           
 16879                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 16880  014660  0E00               	movlw	0
 16881  014662  0100               	movlb	0	; () banked
 16882  014664  6FC6               	movwf	CTMU_read@sum& (0+255),b
 16883  014666  0E00               	movlw	0
 16884  014668  6FC7               	movwf	(CTMU_read@sum+1)& (0+255),b
 16885  01466A  0E00               	movlw	0
 16886  01466C  6FC8               	movwf	(CTMU_read@sum+2)& (0+255),b
 16887  01466E  0E00               	movlw	0
 16888  014670  6FC9               	movwf	(CTMU_read@sum+3)& (0+255),b
 16889                           
 16890                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 16891  014672  0E00               	movlw	0
 16892  014674  0100               	movlb	0	; () banked
 16893  014676  6FCA               	movwf	CTMU_read@i& (0+255),b
 16894  014678                     l9428:
 16895                           
 16896                           ; BSR set to: 0
 16897  014678  0E09               	movlw	9
 16898  01467A  0100               	movlb	0	; () banked
 16899  01467C  65CA               	cpfsgt	CTMU_read@i& (0+255),b
 16900  01467E  D001               	goto	l9432
 16901  014680  D02B               	goto	l9460
 16902  014682                     l9432:
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 16906  014682  C0C5  F0C4         	movff	CTMU_read@ch,??_CTMU_read
 16907  014686  0100               	movlb	0	; () banked
 16908  014688  47C4               	rlncf	??_CTMU_read& (0+255),f,b
 16909  01468A  47C4               	rlncf	??_CTMU_read& (0+255),f,b
 16910  01468C  50C2               	movf	4034,w,c	;volatile
 16911  01468E  0100               	movlb	0	; () banked
 16912  014690  19C4               	xorwf	??_CTMU_read& (0+255),w,b
 16913  014692  0BC3               	andlw	-61
 16914  014694  19C4               	xorwf	??_CTMU_read& (0+255),w,b
 16915  014696  6EC2               	movwf	4034,c	;volatile
 16916                           
 16917                           ; BSR set to: 0
 16918                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 16919  014698  8EB3               	bsf	4019,7,c	;volatile
 16920                           
 16921                           ; BSR set to: 0
 16922                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 16923  01469A  90B2               	bcf	4018,0,c	;volatile
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 16927  01469C  92B2               	bcf	4018,1,c	;volatile
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 16931  01469E  82B3               	bsf	4019,1,c	;volatile
 16932                           
 16933                           ; BSR set to: 0
 16934                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 16935  0146A0  0E50               	movlw	80
 16936  0146A2                     u12817:
 16937  0146A2  2EE8               	decfsz	wreg,f,c
 16938  0146A4  D7FE               	goto	u12817
 16939                           
 16940                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 16941  0146A6  92B3               	bcf	4019,1,c	;volatile
 16942                           
 16943                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 16944  0146A8  80B2               	bsf	4018,0,c	;volatile
 16945                           
 16946                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 16947  0146AA  0E14               	movlw	20
 16948  0146AC                     u12827:
 16949  0146AC  2EE8               	decfsz	wreg,f,c
 16950  0146AE  D7FE               	goto	u12827
 16951                           
 16952                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 16953  0146B0  90B2               	bcf	4018,0,c	;volatile
 16954                           
 16955                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 16956  0146B2  9C9E               	bcf	3998,6,c	;volatile
 16957                           
 16958                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 16959  0146B4  82C2               	bsf	4034,1,c	;volatile
 16960  0146B6                     l247:
 16961  0146B6  AC9E               	btfss	3998,6,c	;volatile
 16962  0146B8  D7FE               	goto	l247
 16963                           
 16964                           ;My_header\My_header.h: 324: sum += ADRES;
 16965  0146BA  50C3               	movf	4035,w,c	;volatile
 16966  0146BC  0100               	movlb	0	; () banked
 16967  0146BE  27C6               	addwf	CTMU_read@sum& (0+255),f,b
 16968  0146C0  50C4               	movf	4036,w,c	;volatile
 16969  0146C2  0100               	movlb	0	; () banked
 16970  0146C4  23C7               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 16971  0146C6  0E00               	movlw	0
 16972  0146C8  0100               	movlb	0	; () banked
 16973  0146CA  23C8               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 16974  0146CC  0E00               	movlw	0
 16975  0146CE  0100               	movlb	0	; () banked
 16976  0146D0  23C9               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 16977  0146D2  0100               	movlb	0	; () banked
 16978  0146D4  2BCA               	incf	CTMU_read@i& (0+255),f,b
 16979  0146D6  D7D0               	goto	l9428
 16980  0146D8                     l9460:
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;My_header\My_header.h: 325: }
 16984                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 16985  0146D8  C0C6  F0B5         	movff	CTMU_read@sum,___lldiv@dividend
 16986  0146DC  C0C7  F0B6         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 16987  0146E0  C0C8  F0B7         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 16988  0146E4  C0C9  F0B8         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 16989  0146E8  0E0A               	movlw	10
 16990  0146EA  0100               	movlb	0	; () banked
 16991  0146EC  6FB9               	movwf	___lldiv@divisor& (0+255),b
 16992  0146EE  0E00               	movlw	0
 16993  0146F0  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
 16994  0146F2  0E00               	movlw	0
 16995  0146F4  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
 16996  0146F6  0E00               	movlw	0
 16997  0146F8  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
 16998  0146FA  ECEE  F0A3         	call	___lldiv	;wreg free
 16999  0146FE  0E03               	movlw	3
 17000  014700  D007               	goto	u10250
 17001  014702                     u10255:
 17002  014702  0100               	movlb	0	; () banked
 17003  014704  90D8               	bcf	status,0,c
 17004  014706  33B8               	rrcf	(?___lldiv+3)& (0+255),f,b
 17005  014708  33B7               	rrcf	(?___lldiv+2)& (0+255),f,b
 17006  01470A  0100               	movlb	0	; () banked
 17007  01470C  33B6               	rrcf	(?___lldiv+1)& (0+255),f,b
 17008  01470E  33B5               	rrcf	?___lldiv& (0+255),f,b
 17009  014710                     u10250:
 17010  014710  2EE8               	decfsz	wreg,f,c
 17011  014712  D7F7               	goto	u10255
 17012  014714  C0B5  F0C2         	movff	?___lldiv,?_CTMU_read
 17013  014718  C0B6  F0C3         	movff	?___lldiv+1,?_CTMU_read+1
 17014  01471C  0012               	return	
 17015  01471E                     __end_of_CTMU_read:
 17016                           	opt stack 0
 17017                           tblptru	equ	0xFF8
 17018                           tblptrh	equ	0xFF7
 17019                           tblptrl	equ	0xFF6
 17020                           tablat	equ	0xFF5
 17021                           prodh	equ	0xFF4
 17022                           prodl	equ	0xFF3
 17023                           intcon	equ	0xFF2
 17024                           intcon2	equ	0xFF1
 17025                           postinc0	equ	0xFEE
 17026                           wreg	equ	0xFE8
 17027                           indf1	equ	0xFE7
 17028                           postinc1	equ	0xFE6
 17029                           postdec1	equ	0xFE5
 17030                           fsr1h	equ	0xFE2
 17031                           fsr1l	equ	0xFE1
 17032                           indf2	equ	0xFDF
 17033                           postinc2	equ	0xFDE
 17034                           postdec2	equ	0xFDD
 17035                           plusw2	equ	0xFDB
 17036                           fsr2h	equ	0xFDA
 17037                           fsr2l	equ	0xFD9
 17038                           status	equ	0xFD8
 17039                           
 17040 ;; *************** function ___lldiv *****************
 17041 ;; Defined at:
 17042 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 17043 ;; Parameters:    Size  Location     Type
 17044 ;;  dividend        4    0[BANK0 ] unsigned long 
 17045 ;;  divisor         4    4[BANK0 ] unsigned long 
 17046 ;; Auto vars:     Size  Location     Type
 17047 ;;  quotient        4    8[BANK0 ] unsigned long 
 17048 ;;  counter         1   12[BANK0 ] unsigned char 
 17049 ;; Return value:  Size  Location     Type
 17050 ;;                  4    0[BANK0 ] unsigned long 
 17051 ;; Registers used:
 17052 ;;		wreg, status,2, status,0
 17053 ;; Tracked objects:
 17054 ;;		On entry : 0/0
 17055 ;;		On exit  : 0/0
 17056 ;;		Unchanged: 0/0
 17057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17058 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17059 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17061 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17062 ;;Total ram usage:       13 bytes
 17063 ;; Hardware stack levels used:    1
 17064 ;; Hardware stack levels required when called:   11
 17065 ;; This function calls:
 17066 ;;		Nothing
 17067 ;; This function is called by:
 17068 ;;		_CTMU_read
 17069 ;;		_get_quot_rem
 17070 ;;		_display_LCD
 17071 ;;		_comm_disp
 17072 ;;		_my_utoa32
 17073 ;; This function uses a non-reentrant model
 17074 ;;
 17075                           
 17076                           	psect	text71
 17077  0147DC                     __ptext71:
 17078                           	opt stack 0
 17079  0147DC                     ___lldiv:
 17080                           	opt stack 15
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;incstack = 0
 17084  0147DC  0E00               	movlw	0
 17085  0147DE  0100               	movlb	0	; () banked
 17086  0147E0  6FBD               	movwf	___lldiv@quotient& (0+255),b
 17087  0147E2  0E00               	movlw	0
 17088  0147E4  6FBE               	movwf	(___lldiv@quotient+1)& (0+255),b
 17089  0147E6  0E00               	movlw	0
 17090  0147E8  6FBF               	movwf	(___lldiv@quotient+2)& (0+255),b
 17091  0147EA  0E00               	movlw	0
 17092  0147EC  6FC0               	movwf	(___lldiv@quotient+3)& (0+255),b
 17093                           
 17094                           ; BSR set to: 0
 17095  0147EE  0100               	movlb	0	; () banked
 17096  0147F0  51B9               	movf	___lldiv@divisor& (0+255),w,b
 17097  0147F2  0100               	movlb	0	; () banked
 17098  0147F4  11BA               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 17099  0147F6  0100               	movlb	0	; () banked
 17100  0147F8  11BB               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 17101  0147FA  0100               	movlb	0	; () banked
 17102  0147FC  11BC               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 17103  0147FE  B4D8               	btfsc	status,2,c
 17104  014800  D042               	goto	l1852
 17105                           
 17106                           ; BSR set to: 0
 17107  014802  0E01               	movlw	1
 17108  014804  0100               	movlb	0	; () banked
 17109  014806  6FC1               	movwf	___lldiv@counter& (0+255),b
 17110  014808  D008               	goto	l9126
 17111  01480A                     l9124:
 17112                           
 17113                           ; BSR set to: 0
 17114  01480A  0100               	movlb	0	; () banked
 17115  01480C  90D8               	bcf	status,0,c
 17116  01480E  37B9               	rlcf	___lldiv@divisor& (0+255),f,b
 17117  014810  37BA               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 17118  014812  37BB               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 17119  014814  37BC               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 17120  014816  0100               	movlb	0	; () banked
 17121  014818  2BC1               	incf	___lldiv@counter& (0+255),f,b
 17122  01481A                     l9126:
 17123                           
 17124                           ; BSR set to: 0
 17125  01481A  0100               	movlb	0	; () banked
 17126  01481C  AFBC               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 17127  01481E  D7F5               	goto	l9124
 17128  014820                     l9128:
 17129                           
 17130                           ; BSR set to: 0
 17131  014820  0100               	movlb	0	; () banked
 17132  014822  90D8               	bcf	status,0,c
 17133  014824  37BD               	rlcf	___lldiv@quotient& (0+255),f,b
 17134  014826  37BE               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 17135  014828  37BF               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 17136  01482A  37C0               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 17137                           
 17138                           ; BSR set to: 0
 17139  01482C  0100               	movlb	0	; () banked
 17140  01482E  51B9               	movf	___lldiv@divisor& (0+255),w,b
 17141  014830  0100               	movlb	0	; () banked
 17142  014832  5DB5               	subwf	___lldiv@dividend& (0+255),w,b
 17143  014834  0100               	movlb	0	; () banked
 17144  014836  51BA               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17145  014838  0100               	movlb	0	; () banked
 17146  01483A  59B6               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 17147  01483C  0100               	movlb	0	; () banked
 17148  01483E  51BB               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17149  014840  0100               	movlb	0	; () banked
 17150  014842  59B7               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 17151  014844  0100               	movlb	0	; () banked
 17152  014846  51BC               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17153  014848  0100               	movlb	0	; () banked
 17154  01484A  59B8               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 17155  01484C  A0D8               	btfss	status,0,c
 17156  01484E  D012               	goto	l9136
 17157                           
 17158                           ; BSR set to: 0
 17159  014850  0100               	movlb	0	; () banked
 17160  014852  51B9               	movf	___lldiv@divisor& (0+255),w,b
 17161  014854  0100               	movlb	0	; () banked
 17162  014856  5FB5               	subwf	___lldiv@dividend& (0+255),f,b
 17163  014858  0100               	movlb	0	; () banked
 17164  01485A  51BA               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17165  01485C  0100               	movlb	0	; () banked
 17166  01485E  5BB6               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 17167  014860  0100               	movlb	0	; () banked
 17168  014862  51BB               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17169  014864  0100               	movlb	0	; () banked
 17170  014866  5BB7               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 17171  014868  0100               	movlb	0	; () banked
 17172  01486A  51BC               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17173  01486C  0100               	movlb	0	; () banked
 17174  01486E  5BB8               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 17175                           
 17176                           ; BSR set to: 0
 17177  014870  0100               	movlb	0	; () banked
 17178  014872  81BD               	bsf	___lldiv@quotient& (0+255),0,b
 17179  014874                     l9136:
 17180                           
 17181                           ; BSR set to: 0
 17182  014874  0100               	movlb	0	; () banked
 17183  014876  90D8               	bcf	status,0,c
 17184  014878  33BC               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 17185  01487A  33BB               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 17186  01487C  33BA               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 17187  01487E  33B9               	rrcf	___lldiv@divisor& (0+255),f,b
 17188                           
 17189                           ; BSR set to: 0
 17190  014880  0100               	movlb	0	; () banked
 17191  014882  2FC1               	decfsz	___lldiv@counter& (0+255),f,b
 17192  014884  D7CD               	goto	l9128
 17193  014886                     l1852:
 17194                           
 17195                           ; BSR set to: 0
 17196  014886  C0BD  F0B5         	movff	___lldiv@quotient,?___lldiv
 17197  01488A  C0BE  F0B6         	movff	___lldiv@quotient+1,?___lldiv+1
 17198  01488E  C0BF  F0B7         	movff	___lldiv@quotient+2,?___lldiv+2
 17199  014892  C0C0  F0B8         	movff	___lldiv@quotient+3,?___lldiv+3
 17200                           
 17201                           ; BSR set to: 0
 17202  014896  0012               	return		;funcret
 17203  014898                     __end_of___lldiv:
 17204                           	opt stack 0
 17205                           tblptru	equ	0xFF8
 17206                           tblptrh	equ	0xFF7
 17207                           tblptrl	equ	0xFF6
 17208                           tablat	equ	0xFF5
 17209                           prodh	equ	0xFF4
 17210                           prodl	equ	0xFF3
 17211                           intcon	equ	0xFF2
 17212                           intcon2	equ	0xFF1
 17213                           postinc0	equ	0xFEE
 17214                           wreg	equ	0xFE8
 17215                           indf1	equ	0xFE7
 17216                           postinc1	equ	0xFE6
 17217                           postdec1	equ	0xFE5
 17218                           fsr1h	equ	0xFE2
 17219                           fsr1l	equ	0xFE1
 17220                           indf2	equ	0xFDF
 17221                           postinc2	equ	0xFDE
 17222                           postdec2	equ	0xFDD
 17223                           plusw2	equ	0xFDB
 17224                           fsr2h	equ	0xFDA
 17225                           fsr2l	equ	0xFD9
 17226                           status	equ	0xFD8
 17227                           
 17228 ;; *************** function _USB_loop *****************
 17229 ;; Defined at:
 17230 ;;		line 666 in file "tasks.h"
 17231 ;; Parameters:    Size  Location     Type
 17232 ;;		None
 17233 ;; Auto vars:     Size  Location     Type
 17234 ;;  rx_len          2   20[BANK0 ] int 
 17235 ;;  data            1   22[BANK0 ] unsigned char 
 17236 ;; Return value:  Size  Location     Type
 17237 ;;		None               void
 17238 ;; Registers used:
 17239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17246 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17248 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;Total ram usage:        3 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:   14
 17252 ;; This function calls:
 17253 ;;		_get_string_usb
 17254 ;;		_put_string_usb
 17255 ;;		_ringbuf_num
 17256 ;;		_ringbuf_pop
 17257 ;;		_ringbuf_put
 17258 ;; This function is called by:
 17259 ;;		_main
 17260 ;; This function uses a non-reentrant model
 17261 ;;
 17262                           
 17263                           	psect	text72
 17264  014F34                     __ptext72:
 17265                           	opt stack 0
 17266  014F34                     _USB_loop:
 17267                           	opt stack 16
 17268                           
 17269                           ;tasks.h: 674: char data;
 17270                           ;tasks.h: 675: int rx_len;
 17271                           ;tasks.h: 676: rx_len = get_string_usb(&data, 1);
 17272                           
 17273                           ; BSR set to: 0
 17274                           ;incstack = 0
 17275  014F34  0ECB               	movlw	low USB_loop@data
 17276  014F36  0100               	movlb	0	; () banked
 17277  014F38  6FC2               	movwf	get_string_usb@s& (0+255),b
 17278  014F3A  0E00               	movlw	high USB_loop@data
 17279  014F3C  0100               	movlb	0	; () banked
 17280  014F3E  6FC3               	movwf	(get_string_usb@s+1)& (0+255),b
 17281  014F40  0E00               	movlw	0
 17282  014F42  0100               	movlb	0	; () banked
 17283  014F44  6FC5               	movwf	(get_string_usb@len+1)& (0+255),b
 17284  014F46  0E01               	movlw	1
 17285  014F48  6FC4               	movwf	get_string_usb@len& (0+255),b
 17286  014F4A  EC22  F0AD         	call	_get_string_usb	;wreg free
 17287  014F4E  C0C2  F0C9         	movff	?_get_string_usb,USB_loop@rx_len
 17288  014F52  C0C3  F0CA         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 17289                           
 17290                           ;tasks.h: 677: if (rx_len) {
 17291  014F56  0100               	movlb	0	; () banked
 17292  014F58  51C9               	movf	USB_loop@rx_len& (0+255),w,b
 17293  014F5A  0100               	movlb	0	; () banked
 17294  014F5C  11CA               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 17295  014F5E  B4D8               	btfsc	status,2,c
 17296  014F60  D00A               	goto	l873
 17297                           
 17298                           ; BSR set to: 0
 17299                           ;tasks.h: 678: ringbuf_put(&rx_buf, data);
 17300  014F62  0EF1               	movlw	low _rx_buf
 17301  014F64  0100               	movlb	0	; () banked
 17302  014F66  6FBD               	movwf	ringbuf_put@rb& (0+255),b
 17303  014F68  0E02               	movlw	high _rx_buf
 17304  014F6A  0100               	movlb	0	; () banked
 17305  014F6C  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17306  014F6E  C0CB  F0BF         	movff	USB_loop@data,ringbuf_put@asciicode
 17307  014F72  EC64  F0A0         	call	_ringbuf_put	;wreg free
 17308  014F76                     l873:
 17309                           
 17310                           ;tasks.h: 679: }
 17311                           ;tasks.h: 680: if (ringbuf_num(&tx_buf)) {
 17312  014F76  0EE9               	movlw	low _tx_buf
 17313  014F78  0100               	movlb	0	; () banked
 17314  014F7A  6FB5               	movwf	ringbuf_num@rb& (0+255),b
 17315  014F7C  0E01               	movlw	high _tx_buf
 17316  014F7E  0100               	movlb	0	; () banked
 17317  014F80  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
 17318  014F82  EC0B  F09C         	call	_ringbuf_num	;wreg free
 17319  014F86  0100               	movlb	0	; () banked
 17320  014F88  51B5               	movf	?_ringbuf_num& (0+255),w,b
 17321  014F8A  0100               	movlb	0	; () banked
 17322  014F8C  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 17323  014F8E  B4D8               	btfsc	status,2,c
 17324  014F90  0012               	return	
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;tasks.h: 681: data = ringbuf_pop(&tx_buf);
 17328  014F92  0EE9               	movlw	low _tx_buf
 17329  014F94  0100               	movlb	0	; () banked
 17330  014F96  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
 17331  014F98  0E01               	movlw	high _tx_buf
 17332  014F9A  0100               	movlb	0	; () banked
 17333  014F9C  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 17334  014F9E  EC04  F0A2         	call	_ringbuf_pop	;wreg free
 17335  014FA2  0100               	movlb	0	; () banked
 17336  014FA4  6FCB               	movwf	USB_loop@data& (0+255),b
 17337  014FA6                     l10936:
 17338                           
 17339                           ; BSR set to: 0
 17340  014FA6  0ECB               	movlw	low USB_loop@data
 17341  014FA8  0100               	movlb	0	; () banked
 17342  014FAA  6FC1               	movwf	put_string_usb@s& (0+255),b
 17343  014FAC  0E00               	movlw	high USB_loop@data
 17344  014FAE  0100               	movlb	0	; () banked
 17345  014FB0  6FC2               	movwf	(put_string_usb@s+1)& (0+255),b
 17346  014FB2  0E00               	movlw	0
 17347  014FB4  0100               	movlb	0	; () banked
 17348  014FB6  6FC4               	movwf	(put_string_usb@len+1)& (0+255),b
 17349  014FB8  0E01               	movlw	1
 17350  014FBA  6FC3               	movwf	put_string_usb@len& (0+255),b
 17351  014FBC  ECFB  F0AD         	call	_put_string_usb	;wreg free
 17352  014FC0  0100               	movlb	0	; () banked
 17353  014FC2  51C1               	movf	?_put_string_usb& (0+255),w,b
 17354  014FC4  0100               	movlb	0	; () banked
 17355  014FC6  11C2               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 17356  014FC8  B4D8               	btfsc	status,2,c
 17357  014FCA  0012               	return	
 17358  014FCC  D7EC               	goto	l10936
 17359  014FCE                     __end_of_USB_loop:
 17360                           	opt stack 0
 17361                           tblptru	equ	0xFF8
 17362                           tblptrh	equ	0xFF7
 17363                           tblptrl	equ	0xFF6
 17364                           tablat	equ	0xFF5
 17365                           prodh	equ	0xFF4
 17366                           prodl	equ	0xFF3
 17367                           intcon	equ	0xFF2
 17368                           intcon2	equ	0xFF1
 17369                           postinc0	equ	0xFEE
 17370                           wreg	equ	0xFE8
 17371                           indf1	equ	0xFE7
 17372                           postinc1	equ	0xFE6
 17373                           postdec1	equ	0xFE5
 17374                           fsr1h	equ	0xFE2
 17375                           fsr1l	equ	0xFE1
 17376                           indf2	equ	0xFDF
 17377                           postinc2	equ	0xFDE
 17378                           postdec2	equ	0xFDD
 17379                           plusw2	equ	0xFDB
 17380                           fsr2h	equ	0xFDA
 17381                           fsr2l	equ	0xFD9
 17382                           status	equ	0xFD8
 17383                           
 17384 ;; *************** function _ringbuf_put *****************
 17385 ;; Defined at:
 17386 ;;		line 39 in file "../My_header\My_ringbuf.h"
 17387 ;; Parameters:    Size  Location     Type
 17388 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 17389 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 17390 ;;  asciicode       1   10[BANK0 ] unsigned char 
 17391 ;; Auto vars:     Size  Location     Type
 17392 ;;		None
 17393 ;; Return value:  Size  Location     Type
 17394 ;;		None               void
 17395 ;; Registers used:
 17396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17397 ;; Tracked objects:
 17398 ;;		On entry : 0/0
 17399 ;;		On exit  : 0/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17402 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17405 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17406 ;;Total ram usage:        7 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; Hardware stack levels required when called:   12
 17409 ;; This function calls:
 17410 ;;		_ringbuf_num
 17411 ;; This function is called by:
 17412 ;;		_tx_send
 17413 ;;		_tx_sends
 17414 ;;		_rx_loop
 17415 ;;		_USB_loop
 17416 ;;		_ringbuf_put_num
 17417 ;;		_ringbuf_put_str
 17418 ;;		_UART_ISR
 17419 ;; This function uses a non-reentrant model
 17420 ;;
 17421                           
 17422                           	psect	text73
 17423  0140C8                     __ptext73:
 17424                           	opt stack 0
 17425  0140C8                     _ringbuf_put:
 17426                           	opt stack 16
 17427                           
 17428                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 17429                           
 17430                           ; BSR set to: 0
 17431                           ;incstack = 0
 17432  0140C8  C0BD  F0B5         	movff	ringbuf_put@rb,ringbuf_num@rb
 17433  0140CC  C0BE  F0B6         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 17434  0140D0  EC0B  F09C         	call	_ringbuf_num	;wreg free
 17435  0140D4  0100               	movlb	0	; () banked
 17436  0140D6  EE20 F002          	lfsr	2,2
 17437  0140DA  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17438  0140DC  26D9               	addwf	fsr2l,f,c
 17439  0140DE  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17440  0140E0  22DA               	addwfc	fsr2h,f,c
 17441  0140E2  50DE               	movf	postinc2,w,c
 17442  0140E4  0100               	movlb	0	; () banked
 17443  0140E6  5DB5               	subwf	?_ringbuf_num& (0+255),w,b
 17444  0140E8  50DE               	movf	postinc2,w,c
 17445  0140EA  0100               	movlb	0	; () banked
 17446  0140EC  59B6               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 17447  0140EE  B0D8               	btfsc	status,0,c
 17448  0140F0  0012               	return	
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 17452  0140F2  0100               	movlb	0	; () banked
 17453  0140F4  EE20 F004          	lfsr	2,4
 17454  0140F8  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17455  0140FA  26D9               	addwf	fsr2l,f,c
 17456  0140FC  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17457  0140FE  22DA               	addwfc	fsr2h,f,c
 17458  014100  CFDE F0C0          	movff	postinc2,??_ringbuf_put
 17459  014104  CFDD F0C1          	movff	postdec2,??_ringbuf_put+1
 17460  014108  C0BD  FFD9         	movff	ringbuf_put@rb,fsr2l
 17461  01410C  C0BE  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 17462  014110  CFDE F0C2          	movff	postinc2,??_ringbuf_put+2
 17463  014114  CFDD F0C3          	movff	postdec2,??_ringbuf_put+3
 17464  014118  0100               	movlb	0	; () banked
 17465  01411A  51C0               	movf	??_ringbuf_put& (0+255),w,b
 17466  01411C  0100               	movlb	0	; () banked
 17467  01411E  25C2               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 17468  014120  6ED9               	movwf	fsr2l,c
 17469  014122  0100               	movlb	0	; () banked
 17470  014124  51C1               	movf	(??_ringbuf_put+1)& (0+255),w,b
 17471  014126  0100               	movlb	0	; () banked
 17472  014128  21C3               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 17473  01412A  6EDA               	movwf	fsr2h,c
 17474  01412C  C0BF  FFDF         	movff	ringbuf_put@asciicode,indf2
 17475                           
 17476                           ; BSR set to: 0
 17477                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 17478  014130  0100               	movlb	0	; () banked
 17479  014132  EE20 F002          	lfsr	2,2
 17480  014136  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17481  014138  26D9               	addwf	fsr2l,f,c
 17482  01413A  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17483  01413C  22DA               	addwfc	fsr2h,f,c
 17484  01413E  0100               	movlb	0	; () banked
 17485  014140  EE10 F004          	lfsr	1,4
 17486  014144  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17487  014146  26E1               	addwf	fsr1l,f,c
 17488  014148  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17489  01414A  22E2               	addwfc	fsr1h,f,c
 17490  01414C  CFE6 F0C2          	movff	postinc1,??_ringbuf_put+2
 17491  014150  CFE5 F0C3          	movff	postdec1,??_ringbuf_put+3
 17492  014154  0E01               	movlw	1
 17493  014156  0100               	movlb	0	; () banked
 17494  014158  27C2               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 17495  01415A  0E00               	movlw	0
 17496  01415C  23C3               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 17497  01415E  50DE               	movf	postinc2,w,c
 17498  014160  0100               	movlb	0	; () banked
 17499  014162  5DC2               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 17500  014164  50DE               	movf	postinc2,w,c
 17501  014166  0100               	movlb	0	; () banked
 17502  014168  59C3               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 17503  01416A  B0D8               	btfsc	status,0,c
 17504  01416C  D00B               	goto	l9022
 17505                           
 17506                           ; BSR set to: 0
 17507  01416E  0100               	movlb	0	; () banked
 17508  014170  EE20 F004          	lfsr	2,4
 17509  014174  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17510  014176  26D9               	addwf	fsr2l,f,c
 17511  014178  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17512  01417A  22DA               	addwfc	fsr2h,f,c
 17513  01417C  2ADE               	incf	postinc2,f,c
 17514  01417E  0E00               	movlw	0
 17515  014180  22DD               	addwfc	postdec2,f,c
 17516  014182  0012               	return	
 17517  014184                     l9022:
 17518                           
 17519                           ; BSR set to: 0
 17520                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 17521  014184  0100               	movlb	0	; () banked
 17522  014186  EE20 F004          	lfsr	2,4
 17523  01418A  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17524  01418C  26D9               	addwf	fsr2l,f,c
 17525  01418E  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17526  014190  22DA               	addwfc	fsr2h,f,c
 17527  014192  0E00               	movlw	0
 17528  014194  6EDE               	movwf	postinc2,c
 17529  014196  0E00               	movlw	0
 17530  014198  6EDD               	movwf	postdec2,c
 17531                           
 17532                           ; BSR set to: 0
 17533  01419A  0012               	return	
 17534  01419C                     __end_of_ringbuf_put:
 17535                           	opt stack 0
 17536                           tblptru	equ	0xFF8
 17537                           tblptrh	equ	0xFF7
 17538                           tblptrl	equ	0xFF6
 17539                           tablat	equ	0xFF5
 17540                           prodh	equ	0xFF4
 17541                           prodl	equ	0xFF3
 17542                           intcon	equ	0xFF2
 17543                           intcon2	equ	0xFF1
 17544                           postinc0	equ	0xFEE
 17545                           wreg	equ	0xFE8
 17546                           indf1	equ	0xFE7
 17547                           postinc1	equ	0xFE6
 17548                           postdec1	equ	0xFE5
 17549                           fsr1h	equ	0xFE2
 17550                           fsr1l	equ	0xFE1
 17551                           indf2	equ	0xFDF
 17552                           postinc2	equ	0xFDE
 17553                           postdec2	equ	0xFDD
 17554                           plusw2	equ	0xFDB
 17555                           fsr2h	equ	0xFDA
 17556                           fsr2l	equ	0xFD9
 17557                           status	equ	0xFD8
 17558                           
 17559 ;; *************** function _ringbuf_pop *****************
 17560 ;; Defined at:
 17561 ;;		line 64 in file "../My_header\My_ringbuf.h"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 17564 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 17565 ;; Auto vars:     Size  Location     Type
 17566 ;;  ret             1   14[BANK0 ] unsigned char 
 17567 ;; Return value:  Size  Location     Type
 17568 ;;                  1    wreg      unsigned char 
 17569 ;; Registers used:
 17570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17571 ;; Tracked objects:
 17572 ;;		On entry : 0/0
 17573 ;;		On exit  : 0/0
 17574 ;;		Unchanged: 0/0
 17575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17578 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17579 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17580 ;;Total ram usage:        7 bytes
 17581 ;; Hardware stack levels used:    1
 17582 ;; Hardware stack levels required when called:   12
 17583 ;; This function calls:
 17584 ;;		_ringbuf_num
 17585 ;; This function is called by:
 17586 ;;		_rx_loop
 17587 ;;		_USB_loop
 17588 ;;		_UART_ISR
 17589 ;; This function uses a non-reentrant model
 17590 ;;
 17591                           
 17592                           	psect	text74
 17593  014408                     __ptext74:
 17594                           	opt stack 0
 17595  014408                     _ringbuf_pop:
 17596                           	opt stack 17
 17597                           
 17598                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;incstack = 0
 17602  014408  C0BD  F0B5         	movff	ringbuf_pop@rb,ringbuf_num@rb
 17603  01440C  C0BE  F0B6         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 17604  014410  EC0B  F09C         	call	_ringbuf_num	;wreg free
 17605  014414  0100               	movlb	0	; () banked
 17606  014416  51B5               	movf	?_ringbuf_num& (0+255),w,b
 17607  014418  0100               	movlb	0	; () banked
 17608  01441A  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 17609  01441C  B4D8               	btfsc	status,2,c
 17610  01441E  D058               	goto	l10216
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 17614  014420  0100               	movlb	0	; () banked
 17615  014422  EE20 F006          	lfsr	2,6
 17616  014426  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 17617  014428  26D9               	addwf	fsr2l,f,c
 17618  01442A  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17619  01442C  22DA               	addwfc	fsr2h,f,c
 17620  01442E  CFDE F0BF          	movff	postinc2,??_ringbuf_pop
 17621  014432  CFDD F0C0          	movff	postdec2,??_ringbuf_pop+1
 17622  014436  C0BD  FFD9         	movff	ringbuf_pop@rb,fsr2l
 17623  01443A  C0BE  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 17624  01443E  CFDE F0C1          	movff	postinc2,??_ringbuf_pop+2
 17625  014442  CFDD F0C2          	movff	postdec2,??_ringbuf_pop+3
 17626  014446  0100               	movlb	0	; () banked
 17627  014448  51BF               	movf	??_ringbuf_pop& (0+255),w,b
 17628  01444A  0100               	movlb	0	; () banked
 17629  01444C  25C1               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 17630  01444E  6ED9               	movwf	fsr2l,c
 17631  014450  0100               	movlb	0	; () banked
 17632  014452  51C0               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 17633  014454  0100               	movlb	0	; () banked
 17634  014456  21C2               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 17635  014458  6EDA               	movwf	fsr2h,c
 17636  01445A  50DF               	movf	indf2,w,c
 17637  01445C  0100               	movlb	0	; () banked
 17638  01445E  6FC3               	movwf	ringbuf_pop@ret& (0+255),b
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 17642  014460  0100               	movlb	0	; () banked
 17643  014462  EE20 F002          	lfsr	2,2
 17644  014466  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 17645  014468  26D9               	addwf	fsr2l,f,c
 17646  01446A  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17647  01446C  22DA               	addwfc	fsr2h,f,c
 17648  01446E  0100               	movlb	0	; () banked
 17649  014470  EE10 F006          	lfsr	1,6
 17650  014474  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 17651  014476  26E1               	addwf	fsr1l,f,c
 17652  014478  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17653  01447A  22E2               	addwfc	fsr1h,f,c
 17654  01447C  CFE6 F0C1          	movff	postinc1,??_ringbuf_pop+2
 17655  014480  CFE5 F0C2          	movff	postdec1,??_ringbuf_pop+3
 17656  014484  0E01               	movlw	1
 17657  014486  0100               	movlb	0	; () banked
 17658  014488  27C1               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 17659  01448A  0E00               	movlw	0
 17660  01448C  23C2               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 17661  01448E  50DE               	movf	postinc2,w,c
 17662  014490  0100               	movlb	0	; () banked
 17663  014492  5DC1               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 17664  014494  50DE               	movf	postinc2,w,c
 17665  014496  0100               	movlb	0	; () banked
 17666  014498  59C2               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 17667  01449A  B0D8               	btfsc	status,0,c
 17668  01449C  D00B               	goto	l10208
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 17672  01449E  0100               	movlb	0	; () banked
 17673  0144A0  EE20 F006          	lfsr	2,6
 17674  0144A4  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 17675  0144A6  26D9               	addwf	fsr2l,f,c
 17676  0144A8  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17677  0144AA  22DA               	addwfc	fsr2h,f,c
 17678  0144AC  2ADE               	incf	postinc2,f,c
 17679  0144AE  0E00               	movlw	0
 17680  0144B0  22DD               	addwfc	postdec2,f,c
 17681                           
 17682                           ;My_header\My_ringbuf.h: 69: } else {
 17683  0144B2  D00B               	goto	l10210
 17684  0144B4                     l10208:
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 17688  0144B4  0100               	movlb	0	; () banked
 17689  0144B6  EE20 F006          	lfsr	2,6
 17690  0144BA  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 17691  0144BC  26D9               	addwf	fsr2l,f,c
 17692  0144BE  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17693  0144C0  22DA               	addwfc	fsr2h,f,c
 17694  0144C2  0E00               	movlw	0
 17695  0144C4  6EDE               	movwf	postinc2,c
 17696  0144C6  0E00               	movlw	0
 17697  0144C8  6EDD               	movwf	postdec2,c
 17698  0144CA                     l10210:
 17699                           
 17700                           ; BSR set to: 0
 17701                           ;My_header\My_ringbuf.h: 71: }
 17702                           ;My_header\My_ringbuf.h: 72: return ret;
 17703  0144CA  0100               	movlb	0	; () banked
 17704  0144CC  51C3               	movf	ringbuf_pop@ret& (0+255),w,b
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;My_header\My_ringbuf.h: 73: } else {
 17708                           
 17709                           ; BSR set to: 0
 17710  0144CE  0012               	return	
 17711  0144D0                     l10216:
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;My_header\My_ringbuf.h: 74: return 0;
 17715  0144D0  0E00               	movlw	0
 17716                           
 17717                           ; BSR set to: 0
 17718  0144D2  0012               	return	
 17719  0144D4                     __end_of_ringbuf_pop:
 17720                           	opt stack 0
 17721                           tblptru	equ	0xFF8
 17722                           tblptrh	equ	0xFF7
 17723                           tblptrl	equ	0xFF6
 17724                           tablat	equ	0xFF5
 17725                           prodh	equ	0xFF4
 17726                           prodl	equ	0xFF3
 17727                           intcon	equ	0xFF2
 17728                           intcon2	equ	0xFF1
 17729                           postinc0	equ	0xFEE
 17730                           wreg	equ	0xFE8
 17731                           indf1	equ	0xFE7
 17732                           postinc1	equ	0xFE6
 17733                           postdec1	equ	0xFE5
 17734                           fsr1h	equ	0xFE2
 17735                           fsr1l	equ	0xFE1
 17736                           indf2	equ	0xFDF
 17737                           postinc2	equ	0xFDE
 17738                           postdec2	equ	0xFDD
 17739                           plusw2	equ	0xFDB
 17740                           fsr2h	equ	0xFDA
 17741                           fsr2l	equ	0xFD9
 17742                           status	equ	0xFD8
 17743                           
 17744 ;; *************** function _ringbuf_num *****************
 17745 ;; Defined at:
 17746 ;;		line 31 in file "../My_header\My_ringbuf.h"
 17747 ;; Parameters:    Size  Location     Type
 17748 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17749 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 17750 ;; Auto vars:     Size  Location     Type
 17751 ;;		None
 17752 ;; Return value:  Size  Location     Type
 17753 ;;                  2    0[BANK0 ] unsigned int 
 17754 ;; Registers used:
 17755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17756 ;; Tracked objects:
 17757 ;;		On entry : 0/0
 17758 ;;		On exit  : 0/0
 17759 ;;		Unchanged: 0/0
 17760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17763 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17764 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17765 ;;Total ram usage:        8 bytes
 17766 ;; Hardware stack levels used:    1
 17767 ;; Hardware stack levels required when called:   11
 17768 ;; This function calls:
 17769 ;;		Nothing
 17770 ;; This function is called by:
 17771 ;;		_ringbuf_put
 17772 ;;		_ringbuf_pop
 17773 ;;		_ringbuf_backspace
 17774 ;;		_rx_loop
 17775 ;;		_USB_loop
 17776 ;;		_UART_ISR
 17777 ;; This function uses a non-reentrant model
 17778 ;;
 17779                           
 17780                           	psect	text75
 17781  013816                     __ptext75:
 17782                           	opt stack 0
 17783  013816                     _ringbuf_num:
 17784                           	opt stack 16
 17785                           
 17786                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;incstack = 0
 17790  013816  0100               	movlb	0	; () banked
 17791  013818  EE20 F006          	lfsr	2,6
 17792  01381C  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17793  01381E  26D9               	addwf	fsr2l,f,c
 17794  013820  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17795  013822  22DA               	addwfc	fsr2h,f,c
 17796  013824  0100               	movlb	0	; () banked
 17797  013826  EE10 F004          	lfsr	1,4
 17798  01382A  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17799  01382C  26E1               	addwf	fsr1l,f,c
 17800  01382E  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17801  013830  22E2               	addwfc	fsr1h,f,c
 17802  013832  50DE               	movf	postinc2,w,c
 17803  013834  5CE6               	subwf	postinc1,w,c
 17804  013836  50DE               	movf	postinc2,w,c
 17805  013838  58E6               	subwfb	postinc1,w,c
 17806  01383A  A0D8               	btfss	status,0,c
 17807  01383C  D028               	goto	l9010
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 17811  01383E  0100               	movlb	0	; () banked
 17812  013840  EE20 F004          	lfsr	2,4
 17813  013844  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17814  013846  26D9               	addwf	fsr2l,f,c
 17815  013848  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17816  01384A  22DA               	addwfc	fsr2h,f,c
 17817  01384C  CFDE F0B7          	movff	postinc2,??_ringbuf_num
 17818  013850  CFDD F0B8          	movff	postdec2,??_ringbuf_num+1
 17819  013854  0100               	movlb	0	; () banked
 17820  013856  EE20 F006          	lfsr	2,6
 17821  01385A  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17822  01385C  26D9               	addwf	fsr2l,f,c
 17823  01385E  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17824  013860  22DA               	addwfc	fsr2h,f,c
 17825  013862  CFDE F0B9          	movff	postinc2,??_ringbuf_num+2
 17826  013866  CFDD F0BA          	movff	postdec2,??_ringbuf_num+3
 17827  01386A  0100               	movlb	0	; () banked
 17828  01386C  1FB9               	comf	(??_ringbuf_num+2)& (0+255),f,b
 17829  01386E  1FBA               	comf	(??_ringbuf_num+3)& (0+255),f,b
 17830  013870  4BB9               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 17831  013872  2BBA               	incf	(??_ringbuf_num+3)& (0+255),f,b
 17832  013874  0100               	movlb	0	; () banked
 17833  013876  51B7               	movf	??_ringbuf_num& (0+255),w,b
 17834  013878  0100               	movlb	0	; () banked
 17835  01387A  25B9               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 17836  01387C  0100               	movlb	0	; () banked
 17837  01387E  6FB5               	movwf	?_ringbuf_num& (0+255),b
 17838  013880  0100               	movlb	0	; () banked
 17839  013882  51B8               	movf	(??_ringbuf_num+1)& (0+255),w,b
 17840  013884  0100               	movlb	0	; () banked
 17841  013886  21BA               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 17842  013888  0100               	movlb	0	; () banked
 17843  01388A  6FB6               	movwf	(?_ringbuf_num+1)& (0+255),b
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;My_header\My_ringbuf.h: 34: } else {
 17847                           
 17848                           ; BSR set to: 0
 17849  01388C  0012               	return	
 17850  01388E                     l9010:
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 17854  01388E  0100               	movlb	0	; () banked
 17855  013890  EE20 F004          	lfsr	2,4
 17856  013894  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17857  013896  26D9               	addwf	fsr2l,f,c
 17858  013898  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17859  01389A  22DA               	addwfc	fsr2h,f,c
 17860  01389C  CFDE F0B7          	movff	postinc2,??_ringbuf_num
 17861  0138A0  CFDD F0B8          	movff	postdec2,??_ringbuf_num+1
 17862  0138A4  0100               	movlb	0	; () banked
 17863  0138A6  EE20 F002          	lfsr	2,2
 17864  0138AA  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17865  0138AC  26D9               	addwf	fsr2l,f,c
 17866  0138AE  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17867  0138B0  22DA               	addwfc	fsr2h,f,c
 17868  0138B2  CFDE F0B9          	movff	postinc2,??_ringbuf_num+2
 17869  0138B6  CFDD F0BA          	movff	postdec2,??_ringbuf_num+3
 17870  0138BA  0100               	movlb	0	; () banked
 17871  0138BC  EE20 F006          	lfsr	2,6
 17872  0138C0  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 17873  0138C2  26D9               	addwf	fsr2l,f,c
 17874  0138C4  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17875  0138C6  22DA               	addwfc	fsr2h,f,c
 17876  0138C8  CFDE F0BB          	movff	postinc2,??_ringbuf_num+4
 17877  0138CC  CFDD F0BC          	movff	postdec2,??_ringbuf_num+5
 17878  0138D0  0100               	movlb	0	; () banked
 17879  0138D2  1FBB               	comf	(??_ringbuf_num+4)& (0+255),f,b
 17880  0138D4  1FBC               	comf	(??_ringbuf_num+5)& (0+255),f,b
 17881  0138D6  4BBB               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 17882  0138D8  2BBC               	incf	(??_ringbuf_num+5)& (0+255),f,b
 17883  0138DA  0100               	movlb	0	; () banked
 17884  0138DC  51B9               	movf	(??_ringbuf_num+2)& (0+255),w,b
 17885  0138DE  0100               	movlb	0	; () banked
 17886  0138E0  27BB               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 17887  0138E2  0100               	movlb	0	; () banked
 17888  0138E4  51BA               	movf	(??_ringbuf_num+3)& (0+255),w,b
 17889  0138E6  0100               	movlb	0	; () banked
 17890  0138E8  23BC               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 17891  0138EA  0100               	movlb	0	; () banked
 17892  0138EC  51B7               	movf	??_ringbuf_num& (0+255),w,b
 17893  0138EE  0100               	movlb	0	; () banked
 17894  0138F0  25BB               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 17895  0138F2  0100               	movlb	0	; () banked
 17896  0138F4  6FB5               	movwf	?_ringbuf_num& (0+255),b
 17897  0138F6  0100               	movlb	0	; () banked
 17898  0138F8  51B8               	movf	(??_ringbuf_num+1)& (0+255),w,b
 17899  0138FA  0100               	movlb	0	; () banked
 17900  0138FC  21BC               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 17901  0138FE  0100               	movlb	0	; () banked
 17902  013900  6FB6               	movwf	(?_ringbuf_num+1)& (0+255),b
 17903                           
 17904                           ; BSR set to: 0
 17905  013902  0012               	return	
 17906  013904                     __end_of_ringbuf_num:
 17907                           	opt stack 0
 17908                           tblptru	equ	0xFF8
 17909                           tblptrh	equ	0xFF7
 17910                           tblptrl	equ	0xFF6
 17911                           tablat	equ	0xFF5
 17912                           prodh	equ	0xFF4
 17913                           prodl	equ	0xFF3
 17914                           intcon	equ	0xFF2
 17915                           intcon2	equ	0xFF1
 17916                           postinc0	equ	0xFEE
 17917                           wreg	equ	0xFE8
 17918                           indf1	equ	0xFE7
 17919                           postinc1	equ	0xFE6
 17920                           postdec1	equ	0xFE5
 17921                           fsr1h	equ	0xFE2
 17922                           fsr1l	equ	0xFE1
 17923                           indf2	equ	0xFDF
 17924                           postinc2	equ	0xFDE
 17925                           postdec2	equ	0xFDD
 17926                           plusw2	equ	0xFDB
 17927                           fsr2h	equ	0xFDA
 17928                           fsr2l	equ	0xFD9
 17929                           status	equ	0xFD8
 17930                           
 17931 ;; *************** function _put_string_usb *****************
 17932 ;; Defined at:
 17933 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 17934 ;; Parameters:    Size  Location     Type
 17935 ;;  s               2   12[BANK0 ] PTR unsigned char 
 17936 ;;		 -> USB_loop@data(1), 
 17937 ;;  len             2   14[BANK0 ] int 
 17938 ;; Auto vars:     Size  Location     Type
 17939 ;;		None
 17940 ;; Return value:  Size  Location     Type
 17941 ;;                  2   12[BANK0 ] int 
 17942 ;; Registers used:
 17943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17944 ;; Tracked objects:
 17945 ;;		On entry : 0/0
 17946 ;;		On exit  : 0/0
 17947 ;;		Unchanged: 0/0
 17948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17949 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17953 ;;Total ram usage:        4 bytes
 17954 ;; Hardware stack levels used:    1
 17955 ;; Hardware stack levels required when called:   13
 17956 ;; This function calls:
 17957 ;;		_CDCTxService
 17958 ;;		_is_usb_available
 17959 ;;		_putUSBUSART
 17960 ;; This function is called by:
 17961 ;;		_USB_loop
 17962 ;; This function uses a non-reentrant model
 17963 ;;
 17964                           
 17965                           	psect	text76
 17966  015BF6                     __ptext76:
 17967                           	opt stack 0
 17968  015BF6                     _put_string_usb:
 17969                           	opt stack 16
 17970                           
 17971                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;incstack = 0
 17975  015BF6  ECD3  F0B0         	call	_is_usb_available	;wreg free
 17976  015BFA  0900               	iorlw	0
 17977  015BFC  A4D8               	btfss	status,2,c
 17978  015BFE  D008               	goto	l10768
 17979                           
 17980                           ;My_usb_cdc.c: 19: return 1;
 17981  015C00  0E00               	movlw	0
 17982  015C02  0100               	movlb	0	; () banked
 17983  015C04  6FC2               	movwf	(?_put_string_usb+1)& (0+255),b
 17984  015C06  0E01               	movlw	1
 17985  015C08  6FC1               	movwf	?_put_string_usb& (0+255),b
 17986                           
 17987                           ; BSR set to: 0
 17988  015C0A  0012               	return	
 17989  015C0C                     l10766:
 17990                           
 17991                           ; BSR set to: 0
 17992  015C0C  EC4D  F093         	call	_CDCTxService	;wreg free
 17993  015C10                     l10768:
 17994  015C10  0100               	movlb	0	; () banked
 17995  015C12  51A0               	movf	_cdc_trf_state& (0+255),w,b
 17996  015C14  A4D8               	btfss	status,2,c
 17997  015C16  D7FA               	goto	l10766
 17998                           
 17999                           ; BSR set to: 0
 18000                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 18001                           
 18002                           ; BSR set to: 0
 18003  015C18  C0C1  F0B5         	movff	put_string_usb@s,putUSBUSART@data
 18004  015C1C  C0C2  F0B6         	movff	put_string_usb@s+1,putUSBUSART@data+1
 18005  015C20  C0C3  F0B7         	movff	put_string_usb@len,putUSBUSART@length
 18006  015C24  EC4F  F0B0         	call	_putUSBUSART	;wreg free
 18007                           
 18008                           ;My_usb_cdc.c: 23: CDCTxService();
 18009  015C28  EC4D  F093         	call	_CDCTxService	;wreg free
 18010                           
 18011                           ;My_usb_cdc.c: 24: return 0;
 18012  015C2C  0E00               	movlw	0
 18013  015C2E  0100               	movlb	0	; () banked
 18014  015C30  6FC2               	movwf	(?_put_string_usb+1)& (0+255),b
 18015  015C32  0E00               	movlw	0
 18016  015C34  6FC1               	movwf	?_put_string_usb& (0+255),b
 18017  015C36  0012               	return	
 18018  015C38                     __end_of_put_string_usb:
 18019                           	opt stack 0
 18020                           tblptru	equ	0xFF8
 18021                           tblptrh	equ	0xFF7
 18022                           tblptrl	equ	0xFF6
 18023                           tablat	equ	0xFF5
 18024                           prodh	equ	0xFF4
 18025                           prodl	equ	0xFF3
 18026                           intcon	equ	0xFF2
 18027                           intcon2	equ	0xFF1
 18028                           postinc0	equ	0xFEE
 18029                           wreg	equ	0xFE8
 18030                           indf1	equ	0xFE7
 18031                           postinc1	equ	0xFE6
 18032                           postdec1	equ	0xFE5
 18033                           fsr1h	equ	0xFE2
 18034                           fsr1l	equ	0xFE1
 18035                           indf2	equ	0xFDF
 18036                           postinc2	equ	0xFDE
 18037                           postdec2	equ	0xFDD
 18038                           plusw2	equ	0xFDB
 18039                           fsr2h	equ	0xFDA
 18040                           fsr2l	equ	0xFD9
 18041                           status	equ	0xFD8
 18042                           
 18043 ;; *************** function _putUSBUSART *****************
 18044 ;; Defined at:
 18045 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 18046 ;; Parameters:    Size  Location     Type
 18047 ;;  data            2    0[BANK0 ] PTR unsigned char 
 18048 ;;		 -> USB_loop@data(1), 
 18049 ;;  length          1    2[BANK0 ] unsigned char 
 18050 ;; Auto vars:     Size  Location     Type
 18051 ;;		None
 18052 ;; Return value:  Size  Location     Type
 18053 ;;		None               void
 18054 ;; Registers used:
 18055 ;;		wreg, status,2, status,0
 18056 ;; Tracked objects:
 18057 ;;		On entry : 0/0
 18058 ;;		On exit  : 0/0
 18059 ;;		Unchanged: 0/0
 18060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18061 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18064 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18065 ;;Total ram usage:        3 bytes
 18066 ;; Hardware stack levels used:    1
 18067 ;; Hardware stack levels required when called:   11
 18068 ;; This function calls:
 18069 ;;		Nothing
 18070 ;; This function is called by:
 18071 ;;		_put_string_usb
 18072 ;; This function uses a non-reentrant model
 18073 ;;
 18074                           
 18075                           	psect	text77
 18076  01609E                     __ptext77:
 18077                           	opt stack 0
 18078  01609E                     _putUSBUSART:
 18079                           	opt stack 17
 18080                           
 18081                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;incstack = 0
 18085  01609E  98A0               	bcf	4000,4,c	;volatile
 18086                           
 18087                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 18088  0160A0  0100               	movlb	0	; () banked
 18089  0160A2  51A0               	movf	_cdc_trf_state& (0+255),w,b
 18090  0160A4  A4D8               	btfss	status,2,c
 18091  0160A6  D00C               	goto	l10098
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;usb_device_cdc.c: 640: {
 18095                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 18096  0160A8  C0B5  F093         	movff	putUSBUSART@data,_pCDCSrc
 18097  0160AC  C0B6  F094         	movff	putUSBUSART@data+1,_pCDCSrc+1
 18098                           
 18099                           ; BSR set to: 0
 18100  0160B0  C0B7  F0A1         	movff	putUSBUSART@length,_cdc_tx_len
 18101                           
 18102                           ; BSR set to: 0
 18103  0160B4  0E01               	movlw	1
 18104  0160B6  0100               	movlb	0	; () banked
 18105  0160B8  6F9E               	movwf	_cdc_mem_type& (0+255),b
 18106                           
 18107                           ; BSR set to: 0
 18108  0160BA  0E01               	movlw	1
 18109  0160BC  0100               	movlb	0	; () banked
 18110  0160BE  6FA0               	movwf	_cdc_trf_state& (0+255),b
 18111  0160C0                     l10098:
 18112                           
 18113                           ; BSR set to: 0
 18114                           ;usb_device_cdc.c: 642: }
 18115                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 18116  0160C0  88A0               	bsf	4000,4,c	;volatile
 18117                           
 18118                           ; BSR set to: 0
 18119  0160C2  0012               	return		;funcret
 18120  0160C4                     __end_of_putUSBUSART:
 18121                           	opt stack 0
 18122                           tblptru	equ	0xFF8
 18123                           tblptrh	equ	0xFF7
 18124                           tblptrl	equ	0xFF6
 18125                           tablat	equ	0xFF5
 18126                           prodh	equ	0xFF4
 18127                           prodl	equ	0xFF3
 18128                           intcon	equ	0xFF2
 18129                           intcon2	equ	0xFF1
 18130                           postinc0	equ	0xFEE
 18131                           wreg	equ	0xFE8
 18132                           indf1	equ	0xFE7
 18133                           postinc1	equ	0xFE6
 18134                           postdec1	equ	0xFE5
 18135                           fsr1h	equ	0xFE2
 18136                           fsr1l	equ	0xFE1
 18137                           indf2	equ	0xFDF
 18138                           postinc2	equ	0xFDE
 18139                           postdec2	equ	0xFDD
 18140                           plusw2	equ	0xFDB
 18141                           fsr2h	equ	0xFDA
 18142                           fsr2l	equ	0xFD9
 18143                           status	equ	0xFD8
 18144                           
 18145 ;; *************** function _get_string_usb *****************
 18146 ;; Defined at:
 18147 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 18148 ;; Parameters:    Size  Location     Type
 18149 ;;  s               2   13[BANK0 ] PTR unsigned char 
 18150 ;;		 -> USB_loop@data(1), 
 18151 ;;  len             2   15[BANK0 ] int 
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;  rx_len          2   18[BANK0 ] int 
 18154 ;; Return value:  Size  Location     Type
 18155 ;;                  2   13[BANK0 ] int 
 18156 ;; Registers used:
 18157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18158 ;; Tracked objects:
 18159 ;;		On entry : 0/0
 18160 ;;		On exit  : 0/0
 18161 ;;		Unchanged: 0/0
 18162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18166 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18167 ;;Total ram usage:        7 bytes
 18168 ;; Hardware stack levels used:    1
 18169 ;; Hardware stack levels required when called:   13
 18170 ;; This function calls:
 18171 ;;		_CDCTxService
 18172 ;;		_getsUSBUSART
 18173 ;;		_is_usb_available
 18174 ;; This function is called by:
 18175 ;;		_USB_loop
 18176 ;; This function uses a non-reentrant model
 18177 ;;
 18178                           
 18179                           	psect	text78
 18180  015A44                     __ptext78:
 18181                           	opt stack 0
 18182  015A44                     _get_string_usb:
 18183                           	opt stack 16
 18184                           
 18185                           ;My_usb_cdc.c: 28: int rx_len;
 18186                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 18187                           
 18188                           ; BSR set to: 0
 18189                           ;incstack = 0
 18190  015A44  ECD3  F0B0         	call	_is_usb_available	;wreg free
 18191  015A48  0900               	iorlw	0
 18192  015A4A  A4D8               	btfss	status,2,c
 18193  015A4C  D008               	goto	l10752
 18194                           
 18195                           ;My_usb_cdc.c: 31: return 0;
 18196  015A4E  0E00               	movlw	0
 18197  015A50  0100               	movlb	0	; () banked
 18198  015A52  6FC3               	movwf	(?_get_string_usb+1)& (0+255),b
 18199  015A54  0E00               	movlw	0
 18200  015A56  6FC2               	movwf	?_get_string_usb& (0+255),b
 18201                           
 18202                           ; BSR set to: 0
 18203  015A58  0012               	return	
 18204  015A5A                     l10750:
 18205                           
 18206                           ; BSR set to: 0
 18207  015A5A  EC4D  F093         	call	_CDCTxService	;wreg free
 18208  015A5E                     l10752:
 18209  015A5E  0100               	movlb	0	; () banked
 18210  015A60  51A0               	movf	_cdc_trf_state& (0+255),w,b
 18211  015A62  A4D8               	btfss	status,2,c
 18212  015A64  D7FA               	goto	l10750
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 18216                           
 18217                           ; BSR set to: 0
 18218  015A66  C0C2  F0BC         	movff	get_string_usb@s,getsUSBUSART@buffer
 18219  015A6A  C0C3  F0BD         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 18220  015A6E  C0C4  F0BE         	movff	get_string_usb@len,getsUSBUSART@len
 18221  015A72  EC82  F09C         	call	_getsUSBUSART	;wreg free
 18222  015A76  0100               	movlb	0	; () banked
 18223  015A78  6FC6               	movwf	??_get_string_usb& (0+255),b
 18224  015A7A  0100               	movlb	0	; () banked
 18225  015A7C  51C6               	movf	??_get_string_usb& (0+255),w,b
 18226  015A7E  0100               	movlb	0	; () banked
 18227  015A80  6FC7               	movwf	get_string_usb@rx_len& (0+255),b
 18228  015A82  6BC8               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 18229                           
 18230                           ;My_usb_cdc.c: 35: CDCTxService();
 18231  015A84  EC4D  F093         	call	_CDCTxService	;wreg free
 18232                           
 18233                           ;My_usb_cdc.c: 36: return rx_len;
 18234  015A88  C0C7  F0C2         	movff	get_string_usb@rx_len,?_get_string_usb
 18235  015A8C  C0C8  F0C3         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 18236  015A90  0012               	return	
 18237  015A92                     __end_of_get_string_usb:
 18238                           	opt stack 0
 18239                           tblptru	equ	0xFF8
 18240                           tblptrh	equ	0xFF7
 18241                           tblptrl	equ	0xFF6
 18242                           tablat	equ	0xFF5
 18243                           prodh	equ	0xFF4
 18244                           prodl	equ	0xFF3
 18245                           intcon	equ	0xFF2
 18246                           intcon2	equ	0xFF1
 18247                           postinc0	equ	0xFEE
 18248                           wreg	equ	0xFE8
 18249                           indf1	equ	0xFE7
 18250                           postinc1	equ	0xFE6
 18251                           postdec1	equ	0xFE5
 18252                           fsr1h	equ	0xFE2
 18253                           fsr1l	equ	0xFE1
 18254                           indf2	equ	0xFDF
 18255                           postinc2	equ	0xFDE
 18256                           postdec2	equ	0xFDD
 18257                           plusw2	equ	0xFDB
 18258                           fsr2h	equ	0xFDA
 18259                           fsr2l	equ	0xFD9
 18260                           status	equ	0xFD8
 18261                           
 18262 ;; *************** function _is_usb_available *****************
 18263 ;; Defined at:
 18264 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 18265 ;; Parameters:    Size  Location     Type
 18266 ;;		None
 18267 ;; Auto vars:     Size  Location     Type
 18268 ;;		None
 18269 ;; Return value:  Size  Location     Type
 18270 ;;                  1    wreg      unsigned char 
 18271 ;; Registers used:
 18272 ;;		wreg, status,2, status,0
 18273 ;; Tracked objects:
 18274 ;;		On entry : 0/0
 18275 ;;		On exit  : 0/0
 18276 ;;		Unchanged: 0/0
 18277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18282 ;;Total ram usage:        1 bytes
 18283 ;; Hardware stack levels used:    1
 18284 ;; Hardware stack levels required when called:   11
 18285 ;; This function calls:
 18286 ;;		Nothing
 18287 ;; This function is called by:
 18288 ;;		_put_string_usb
 18289 ;;		_get_string_usb
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           	psect	text79
 18294  0161A6                     __ptext79:
 18295                           	opt stack 0
 18296  0161A6                     _is_usb_available:
 18297                           	opt stack 17
 18298                           
 18299                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 18300                           
 18301                           ;incstack = 0
 18302  0161A6  0E00               	movlw	0
 18303  0161A8  0100               	movlb	0	; () banked
 18304  0161AA  6FB5               	movwf	_is_usb_available$2671& (0+255),b
 18305                           
 18306                           ; BSR set to: 0
 18307  0161AC  0E1F               	movlw	31
 18308  0161AE  6445               	cpfsgt	_USBDeviceState,c	;volatile
 18309  0161B0  D005               	goto	l952
 18310                           
 18311                           ; BSR set to: 0
 18312  0161B2  B265               	btfsc	3941,1,c	;volatile
 18313  0161B4  D003               	goto	l952
 18314                           
 18315                           ; BSR set to: 0
 18316  0161B6  0E01               	movlw	1
 18317  0161B8  0100               	movlb	0	; () banked
 18318  0161BA  6FB5               	movwf	_is_usb_available$2671& (0+255),b
 18319  0161BC                     l952:
 18320                           
 18321                           ; BSR set to: 0
 18322  0161BC  0100               	movlb	0	; () banked
 18323  0161BE  51B5               	movf	_is_usb_available$2671& (0+255),w,b
 18324  0161C0  0012               	return	
 18325  0161C2                     __end_of_is_usb_available:
 18326                           	opt stack 0
 18327                           tblptru	equ	0xFF8
 18328                           tblptrh	equ	0xFF7
 18329                           tblptrl	equ	0xFF6
 18330                           tablat	equ	0xFF5
 18331                           prodh	equ	0xFF4
 18332                           prodl	equ	0xFF3
 18333                           intcon	equ	0xFF2
 18334                           intcon2	equ	0xFF1
 18335                           postinc0	equ	0xFEE
 18336                           wreg	equ	0xFE8
 18337                           indf1	equ	0xFE7
 18338                           postinc1	equ	0xFE6
 18339                           postdec1	equ	0xFE5
 18340                           fsr1h	equ	0xFE2
 18341                           fsr1l	equ	0xFE1
 18342                           indf2	equ	0xFDF
 18343                           postinc2	equ	0xFDE
 18344                           postdec2	equ	0xFDD
 18345                           plusw2	equ	0xFDB
 18346                           fsr2h	equ	0xFDA
 18347                           fsr2l	equ	0xFD9
 18348                           status	equ	0xFD8
 18349                           
 18350 ;; *************** function _getsUSBUSART *****************
 18351 ;; Defined at:
 18352 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 18353 ;; Parameters:    Size  Location     Type
 18354 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 18355 ;;		 -> USB_loop@data(1), 
 18356 ;;  len             1    9[BANK0 ] unsigned char 
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;		None
 18359 ;; Return value:  Size  Location     Type
 18360 ;;                  1    wreg      unsigned char 
 18361 ;; Registers used:
 18362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18363 ;; Tracked objects:
 18364 ;;		On entry : 0/0
 18365 ;;		On exit  : 0/0
 18366 ;;		Unchanged: 0/0
 18367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18368 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18371 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18372 ;;Total ram usage:        6 bytes
 18373 ;; Hardware stack levels used:    1
 18374 ;; Hardware stack levels required when called:   12
 18375 ;; This function calls:
 18376 ;;		_USBTransferOnePacket
 18377 ;; This function is called by:
 18378 ;;		_get_string_usb
 18379 ;; This function uses a non-reentrant model
 18380 ;;
 18381                           
 18382                           	psect	text80
 18383  013904                     __ptext80:
 18384                           	opt stack 0
 18385  013904                     _getsUSBUSART:
 18386                           	opt stack 16
 18387                           
 18388                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;incstack = 0
 18392  013904  0E00               	movlw	0
 18393  013906  0100               	movlb	0	; () banked
 18394  013908  6F9F               	movwf	_cdc_rx_len& (0+255),b
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 18398  01390A  0100               	movlb	0	; () banked
 18399  01390C  5198               	movf	_CDCDataOutHandle& (0+255),w,b
 18400  01390E  0100               	movlb	0	; () banked
 18401  013910  1199               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18402  013912  B4D8               	btfsc	status,2,c
 18403  013914  D013               	goto	l10106
 18404                           
 18405                           ; BSR set to: 0
 18406  013916  C098  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18407  01391A  C099  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18408  01391E  0100               	movlb	0	; () banked
 18409  013920  AEDF               	btfss	indf2,7,c
 18410  013922  D004               	goto	u11140
 18411  013924  0100               	movlb	0	; () banked
 18412  013926  6BBF               	clrf	??_getsUSBUSART& (0+255),b
 18413  013928  2BBF               	incf	??_getsUSBUSART& (0+255),f,b
 18414  01392A  D002               	goto	u11148
 18415  01392C                     u11140:
 18416  01392C  0100               	movlb	0	; () banked
 18417  01392E  6BBF               	clrf	??_getsUSBUSART& (0+255),b
 18418  013930                     u11148:
 18419  013930  0100               	movlb	0	; () banked
 18420  013932  51BF               	movf	??_getsUSBUSART& (0+255),w,b
 18421  013934  0100               	movlb	0	; () banked
 18422  013936  6FC0               	movwf	_getsUSBUSART$4423& (0+255),b
 18423  013938  6BC1               	clrf	(_getsUSBUSART$4423+1)& (0+255),b
 18424  01393A  D005               	goto	l10108
 18425  01393C                     l10106:
 18426                           
 18427                           ; BSR set to: 0
 18428  01393C  0E00               	movlw	0
 18429  01393E  0100               	movlb	0	; () banked
 18430  013940  6FC1               	movwf	(_getsUSBUSART$4423+1)& (0+255),b
 18431  013942  0E00               	movlw	0
 18432  013944  6FC0               	movwf	_getsUSBUSART$4423& (0+255),b
 18433  013946                     l10108:
 18434                           
 18435                           ; BSR set to: 0
 18436  013946  0100               	movlb	0	; () banked
 18437  013948  51C0               	movf	_getsUSBUSART$4423& (0+255),w,b
 18438  01394A  0100               	movlb	0	; () banked
 18439  01394C  11C1               	iorwf	(_getsUSBUSART$4423+1)& (0+255),w,b
 18440  01394E  A4D8               	btfss	status,2,c
 18441  013950  D04B               	goto	l10124
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;usb_device_cdc.c: 547: {
 18445                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18446  013952  0100               	movlb	0	; () banked
 18447  013954  EE20 F001          	lfsr	2,1
 18448  013958  5198               	movf	_CDCDataOutHandle& (0+255),w,b
 18449  01395A  26D9               	addwf	fsr2l,f,c
 18450  01395C  5199               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18451  01395E  22DA               	addwfc	fsr2h,f,c
 18452  013960  0100               	movlb	0	; () banked
 18453  013962  51BE               	movf	getsUSBUSART@len& (0+255),w,b
 18454  013964  5CDE               	subwf	postinc2,w,c
 18455  013966  B0D8               	btfsc	status,0,c
 18456  013968  D00A               	goto	l10114
 18457                           
 18458                           ; BSR set to: 0
 18459                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18460  01396A  0100               	movlb	0	; () banked
 18461  01396C  EE20 F001          	lfsr	2,1
 18462  013970  5198               	movf	_CDCDataOutHandle& (0+255),w,b
 18463  013972  26D9               	addwf	fsr2l,f,c
 18464  013974  5199               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18465  013976  22DA               	addwfc	fsr2h,f,c
 18466  013978  50DF               	movf	indf2,w,c
 18467  01397A  0100               	movlb	0	; () banked
 18468  01397C  6FBE               	movwf	getsUSBUSART@len& (0+255),b
 18469  01397E                     l10114:
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18473  01397E  0E00               	movlw	0
 18474  013980  0100               	movlb	0	; () banked
 18475  013982  6F9F               	movwf	_cdc_rx_len& (0+255),b
 18476  013984  D018               	goto	l10120
 18477  013986                     l10116:
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18481  013986  0100               	movlb	0	; () banked
 18482  013988  519F               	movf	_cdc_rx_len& (0+255),w,b
 18483  01398A  0D01               	mullw	1
 18484  01398C  0E0A               	movlw	low _cdc_data_rx
 18485  01398E  24F3               	addwf	prodl,w,c
 18486  013990  6ED9               	movwf	fsr2l,c
 18487  013992  0E03               	movlw	high _cdc_data_rx
 18488  013994  20F4               	addwfc	prodh,w,c
 18489  013996  6EDA               	movwf	fsr2h,c
 18490  013998  0100               	movlb	0	; () banked
 18491  01399A  519F               	movf	_cdc_rx_len& (0+255),w,b
 18492  01399C  0D01               	mullw	1
 18493  01399E  50F3               	movf	prodl,w,c
 18494  0139A0  0100               	movlb	0	; () banked
 18495  0139A2  25BC               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18496  0139A4  6EE1               	movwf	fsr1l,c
 18497  0139A6  50F4               	movf	prodh,w,c
 18498  0139A8  0100               	movlb	0	; () banked
 18499  0139AA  21BD               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18500  0139AC  6EE2               	movwf	fsr1h,c
 18501  0139AE  CFDF FFE7          	movff	indf2,indf1
 18502                           
 18503                           ; BSR set to: 0
 18504  0139B2  0100               	movlb	0	; () banked
 18505  0139B4  2B9F               	incf	_cdc_rx_len& (0+255),f,b
 18506  0139B6                     l10120:
 18507                           
 18508                           ; BSR set to: 0
 18509  0139B6  0100               	movlb	0	; () banked
 18510  0139B8  51BE               	movf	getsUSBUSART@len& (0+255),w,b
 18511  0139BA  0100               	movlb	0	; () banked
 18512  0139BC  5D9F               	subwf	_cdc_rx_len& (0+255),w,b
 18513  0139BE  A0D8               	btfss	status,0,c
 18514  0139C0  D7E2               	goto	l10116
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18518                           
 18519                           ; BSR set to: 0
 18520  0139C2  0E00               	movlw	0
 18521  0139C4  0100               	movlb	0	; () banked
 18522  0139C6  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 18523  0139C8  0E0A               	movlw	low _cdc_data_rx
 18524  0139CA  0100               	movlb	0	; () banked
 18525  0139CC  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 18526  0139CE  0E03               	movlw	high _cdc_data_rx
 18527  0139D0  0100               	movlb	0	; () banked
 18528  0139D2  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18529  0139D4  0E40               	movlw	64
 18530  0139D6  0100               	movlb	0	; () banked
 18531  0139D8  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
 18532  0139DA  0E02               	movlw	2
 18533  0139DC  ECB7  F09E         	call	_USBTransferOnePacket
 18534  0139E0  C0B5  F098         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18535  0139E4  C0B6  F099         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18536  0139E8                     l10124:
 18537                           
 18538                           ;usb_device_cdc.c: 567: }
 18539                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 18540  0139E8  0100               	movlb	0	; () banked
 18541  0139EA  519F               	movf	_cdc_rx_len& (0+255),w,b
 18542  0139EC  0012               	return	
 18543  0139EE                     __end_of_getsUSBUSART:
 18544                           	opt stack 0
 18545                           tblptru	equ	0xFF8
 18546                           tblptrh	equ	0xFF7
 18547                           tblptrl	equ	0xFF6
 18548                           tablat	equ	0xFF5
 18549                           prodh	equ	0xFF4
 18550                           prodl	equ	0xFF3
 18551                           intcon	equ	0xFF2
 18552                           intcon2	equ	0xFF1
 18553                           postinc0	equ	0xFEE
 18554                           wreg	equ	0xFE8
 18555                           indf1	equ	0xFE7
 18556                           postinc1	equ	0xFE6
 18557                           postdec1	equ	0xFE5
 18558                           fsr1h	equ	0xFE2
 18559                           fsr1l	equ	0xFE1
 18560                           indf2	equ	0xFDF
 18561                           postinc2	equ	0xFDE
 18562                           postdec2	equ	0xFDD
 18563                           plusw2	equ	0xFDB
 18564                           fsr2h	equ	0xFDA
 18565                           fsr2l	equ	0xFD9
 18566                           status	equ	0xFD8
 18567                           
 18568 ;; *************** function _CDCTxService *****************
 18569 ;; Defined at:
 18570 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 18571 ;; Parameters:    Size  Location     Type
 18572 ;;		None
 18573 ;; Auto vars:     Size  Location     Type
 18574 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 18575 ;;  i               1   10[BANK0 ] unsigned char 
 18576 ;; Return value:  Size  Location     Type
 18577 ;;		None               void
 18578 ;; Registers used:
 18579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18580 ;; Tracked objects:
 18581 ;;		On entry : 0/0
 18582 ;;		On exit  : 0/0
 18583 ;;		Unchanged: 0/0
 18584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18586 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18588 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18589 ;;Total ram usage:        5 bytes
 18590 ;; Hardware stack levels used:    1
 18591 ;; Hardware stack levels required when called:   12
 18592 ;; This function calls:
 18593 ;;		_USBTransferOnePacket
 18594 ;; This function is called by:
 18595 ;;		_put_string_usb
 18596 ;;		_get_string_usb
 18597 ;; This function uses a non-reentrant model
 18598 ;;
 18599                           
 18600                           	psect	text81
 18601  01269A                     __ptext81:
 18602                           	opt stack 0
 18603  01269A                     _CDCTxService:
 18604                           	opt stack 16
 18605                           
 18606                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 18607                           ;usb_device_cdc.c: 896: uint8_t i;
 18608                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;incstack = 0
 18612  01269A  98A0               	bcf	4000,4,c	;volatile
 18613                           
 18614                           ;usb_device_cdc.c: 900: {};
 18615                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 18616  01269C  0100               	movlb	0	; () banked
 18617  01269E  5196               	movf	_CDCDataInHandle& (0+255),w,b
 18618  0126A0  0100               	movlb	0	; () banked
 18619  0126A2  1197               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 18620  0126A4  B4D8               	btfsc	status,2,c
 18621  0126A6  D013               	goto	l10022
 18622                           
 18623                           ; BSR set to: 0
 18624  0126A8  C096  FFD9         	movff	_CDCDataInHandle,fsr2l
 18625  0126AC  C097  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 18626  0126B0  0100               	movlb	0	; () banked
 18627  0126B2  AEDF               	btfss	indf2,7,c
 18628  0126B4  D004               	goto	u11000
 18629  0126B6  0100               	movlb	0	; () banked
 18630  0126B8  6BBC               	clrf	??_CDCTxService& (0+255),b
 18631  0126BA  2BBC               	incf	??_CDCTxService& (0+255),f,b
 18632  0126BC  D002               	goto	u11008
 18633  0126BE                     u11000:
 18634  0126BE  0100               	movlb	0	; () banked
 18635  0126C0  6BBC               	clrf	??_CDCTxService& (0+255),b
 18636  0126C2                     u11008:
 18637  0126C2  0100               	movlb	0	; () banked
 18638  0126C4  51BC               	movf	??_CDCTxService& (0+255),w,b
 18639  0126C6  0100               	movlb	0	; () banked
 18640  0126C8  6FBD               	movwf	_CDCTxService$4471& (0+255),b
 18641  0126CA  6BBE               	clrf	(_CDCTxService$4471+1)& (0+255),b
 18642  0126CC  D005               	goto	l10024
 18643  0126CE                     l10022:
 18644                           
 18645                           ; BSR set to: 0
 18646  0126CE  0E00               	movlw	0
 18647  0126D0  0100               	movlb	0	; () banked
 18648  0126D2  6FBE               	movwf	(_CDCTxService$4471+1)& (0+255),b
 18649  0126D4  0E00               	movlw	0
 18650  0126D6  6FBD               	movwf	_CDCTxService$4471& (0+255),b
 18651  0126D8                     l10024:
 18652                           
 18653                           ; BSR set to: 0
 18654  0126D8  0100               	movlb	0	; () banked
 18655  0126DA  51BD               	movf	_CDCTxService$4471& (0+255),w,b
 18656  0126DC  0100               	movlb	0	; () banked
 18657  0126DE  11BE               	iorwf	(_CDCTxService$4471+1)& (0+255),w,b
 18658  0126E0  B4D8               	btfsc	status,2,c
 18659  0126E2  D002               	goto	l10028
 18660                           
 18661                           ; BSR set to: 0
 18662                           ;usb_device_cdc.c: 903: {
 18663                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 18664  0126E4  88A0               	bsf	4000,4,c	;volatile
 18665                           
 18666                           ;usb_device_cdc.c: 905: return;
 18667  0126E6  0012               	return	
 18668  0126E8                     l10028:
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;usb_device_cdc.c: 906: }
 18672                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 18673  0126E8  0E03               	movlw	3
 18674  0126EA  0100               	movlb	0	; () banked
 18675  0126EC  19A0               	xorwf	_cdc_trf_state& (0+255),w,b
 18676  0126EE  A4D8               	btfss	status,2,c
 18677  0126F0  D003               	goto	l1471
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 18681  0126F2  0E00               	movlw	0
 18682  0126F4  0100               	movlb	0	; () banked
 18683  0126F6  6FA0               	movwf	_cdc_trf_state& (0+255),b
 18684  0126F8                     l1471:
 18685                           
 18686                           ; BSR set to: 0
 18687                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 18688  0126F8  0100               	movlb	0	; () banked
 18689  0126FA  51A0               	movf	_cdc_trf_state& (0+255),w,b
 18690  0126FC  A4D8               	btfss	status,2,c
 18691  0126FE  D002               	goto	l10034
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;usb_device_cdc.c: 920: {
 18695                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 18696  012700  88A0               	bsf	4000,4,c	;volatile
 18697                           
 18698                           ;usb_device_cdc.c: 922: return;
 18699  012702  0012               	return	
 18700  012704                     l10034:
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;usb_device_cdc.c: 923: }
 18704                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 18705  012704  0E02               	movlw	2
 18706  012706  0100               	movlb	0	; () banked
 18707  012708  19A0               	xorwf	_cdc_trf_state& (0+255),w,b
 18708  01270A  A4D8               	btfss	status,2,c
 18709  01270C  D017               	goto	l10040
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;usb_device_cdc.c: 929: {
 18713                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 18714  01270E  0E01               	movlw	1
 18715  012710  0100               	movlb	0	; () banked
 18716  012712  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 18717  012714  0E00               	movlw	0
 18718  012716  0100               	movlb	0	; () banked
 18719  012718  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 18720  01271A  0E00               	movlw	0
 18721  01271C  0100               	movlb	0	; () banked
 18722  01271E  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18723  012720  0E00               	movlw	0
 18724  012722  0100               	movlb	0	; () banked
 18725  012724  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
 18726  012726  0E02               	movlw	2
 18727  012728  ECB7  F09E         	call	_USBTransferOnePacket
 18728  01272C  C0B5  F096         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 18729  012730  C0B6  F097         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 18730                           
 18731                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 18732  012734  0E03               	movlw	3
 18733  012736  0100               	movlb	0	; () banked
 18734  012738  6FA0               	movwf	_cdc_trf_state& (0+255),b
 18735                           
 18736                           ;usb_device_cdc.c: 933: }
 18737  01273A  D073               	goto	l10084
 18738  01273C                     l10040:
 18739                           
 18740                           ; BSR set to: 0
 18741                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 18742  01273C  0100               	movlb	0	; () banked
 18743  01273E  05A0               	decf	_cdc_trf_state& (0+255),w,b
 18744  012740  A4D8               	btfss	status,2,c
 18745  012742  D06F               	goto	l10084
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;usb_device_cdc.c: 935: {
 18749                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 18750  012744  0E40               	movlw	64
 18751  012746  0100               	movlb	0	; () banked
 18752  012748  65A1               	cpfsgt	_cdc_tx_len& (0+255),b
 18753  01274A  D004               	goto	l1476
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 18757  01274C  0E40               	movlw	64
 18758  01274E  0100               	movlb	0	; () banked
 18759  012750  6FC0               	movwf	CDCTxService@byte_to_send& (0+255),b
 18760  012752  D002               	goto	l10046
 18761  012754                     l1476:
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;usb_device_cdc.c: 941: else
 18765                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 18766  012754  C0A1  F0C0         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 18767  012758                     l10046:
 18768                           
 18769                           ; BSR set to: 0
 18770                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 18771  012758  0100               	movlb	0	; () banked
 18772  01275A  51C0               	movf	CDCTxService@byte_to_send& (0+255),w,b
 18773  01275C  0800               	sublw	0
 18774  01275E  0100               	movlb	0	; () banked
 18775  012760  25A1               	addwf	_cdc_tx_len& (0+255),w,b
 18776  012762  0100               	movlb	0	; () banked
 18777  012764  6FA1               	movwf	_cdc_tx_len& (0+255),b
 18778                           
 18779                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 18780  012766  0E4A               	movlw	low _cdc_data_tx
 18781  012768  0100               	movlb	0	; () banked
 18782  01276A  6F90               	movwf	_pCDCDst& (0+255),b
 18783  01276C  0E03               	movlw	high _cdc_data_tx
 18784  01276E  0100               	movlb	0	; () banked
 18785  012770  6F91               	movwf	(_pCDCDst+1)& (0+255),b
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;usb_device_cdc.c: 951: i = byte_to_send;
 18789  012772  C0C0  F0BF         	movff	CDCTxService@byte_to_send,CDCTxService@i
 18790                           
 18791                           ; BSR set to: 0
 18792                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 18793  012776  0100               	movlb	0	; () banked
 18794  012778  519E               	movf	_cdc_mem_type& (0+255),w,b
 18795  01277A  0100               	movlb	0	; () banked
 18796  01277C  B4D8               	btfsc	status,2,c
 18797  01277E  D013               	goto	l10062
 18798  012780  D02A               	goto	l10072
 18799  012782                     l10054:
 18800                           
 18801                           ; BSR set to: 0
 18802                           ;usb_device_cdc.c: 955: {
 18803                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 18804  012782  C093  FFD9         	movff	_pCDCSrc,fsr2l
 18805  012786  C094  FFDA         	movff	_pCDCSrc+1,fsr2h
 18806  01278A  C090  FFE1         	movff	_pCDCDst,fsr1l
 18807  01278E  C091  FFE2         	movff	_pCDCDst+1,fsr1h
 18808  012792  CFDF FFE7          	movff	indf2,indf1
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 18812  012796  0100               	movlb	0	; () banked
 18813  012798  4B90               	infsnz	_pCDCDst& (0+255),f,b
 18814  01279A  2B91               	incf	(_pCDCDst+1)& (0+255),f,b
 18815                           
 18816                           ; BSR set to: 0
 18817                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 18818  01279C  0100               	movlb	0	; () banked
 18819  01279E  4B93               	infsnz	_pCDCSrc& (0+255),f,b
 18820  0127A0  2B94               	incf	(_pCDCSrc+1)& (0+255),f,b
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;usb_device_cdc.c: 959: i--;
 18824  0127A2  0100               	movlb	0	; () banked
 18825  0127A4  07BF               	decf	CDCTxService@i& (0+255),f,b
 18826  0127A6                     l10062:
 18827                           
 18828                           ; BSR set to: 0
 18829  0127A6  0100               	movlb	0	; () banked
 18830  0127A8  51BF               	movf	CDCTxService@i& (0+255),w,b
 18831  0127AA  0100               	movlb	0	; () banked
 18832  0127AC  B4D8               	btfsc	status,2,c
 18833  0127AE  D018               	goto	l10074
 18834  0127B0  D7E8               	goto	l10054
 18835  0127B2                     l10064:
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;usb_device_cdc.c: 965: {
 18839                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 18840  0127B2  C093  FFD9         	movff	_pCDCSrc,fsr2l
 18841  0127B6  C094  FFDA         	movff	_pCDCSrc+1,fsr2h
 18842  0127BA  C090  FFE1         	movff	_pCDCDst,fsr1l
 18843  0127BE  C091  FFE2         	movff	_pCDCDst+1,fsr1h
 18844  0127C2  CFDF FFE7          	movff	indf2,indf1
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 18848  0127C6  0100               	movlb	0	; () banked
 18849  0127C8  4B90               	infsnz	_pCDCDst& (0+255),f,b
 18850  0127CA  2B91               	incf	(_pCDCDst+1)& (0+255),f,b
 18851                           
 18852                           ; BSR set to: 0
 18853                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 18854  0127CC  0100               	movlb	0	; () banked
 18855  0127CE  4B93               	infsnz	_pCDCSrc& (0+255),f,b
 18856  0127D0  2B94               	incf	(_pCDCSrc+1)& (0+255),f,b
 18857                           
 18858                           ; BSR set to: 0
 18859                           ;usb_device_cdc.c: 969: i--;
 18860  0127D2  0100               	movlb	0	; () banked
 18861  0127D4  07BF               	decf	CDCTxService@i& (0+255),f,b
 18862  0127D6                     l10072:
 18863                           
 18864                           ; BSR set to: 0
 18865  0127D6  0100               	movlb	0	; () banked
 18866  0127D8  51BF               	movf	CDCTxService@i& (0+255),w,b
 18867  0127DA  0100               	movlb	0	; () banked
 18868  0127DC  A4D8               	btfss	status,2,c
 18869  0127DE  D7E9               	goto	l10064
 18870  0127E0                     l10074:
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;usb_device_cdc.c: 970: }
 18874                           ;usb_device_cdc.c: 971: }
 18875                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 18876  0127E0  0100               	movlb	0	; () banked
 18877  0127E2  51A1               	movf	_cdc_tx_len& (0+255),w,b
 18878  0127E4  0100               	movlb	0	; () banked
 18879  0127E6  A4D8               	btfss	status,2,c
 18880  0127E8  D00A               	goto	l10082
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;usb_device_cdc.c: 978: {
 18884                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 18885  0127EA  0E40               	movlw	64
 18886  0127EC  0100               	movlb	0	; () banked
 18887  0127EE  19C0               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 18888  0127F0  A4D8               	btfss	status,2,c
 18889  0127F2  D002               	goto	l10080
 18890                           
 18891                           ; BSR set to: 0
 18892                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 18893  0127F4  0E02               	movlw	2
 18894  0127F6  D001               	goto	L7
 18895  0127F8                     l10080:
 18896                           
 18897                           ; BSR set to: 0
 18898                           ;usb_device_cdc.c: 981: else
 18899                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 18900  0127F8  0E03               	movlw	3
 18901  0127FA                     L7:
 18902  0127FA  0100               	movlb	0	; () banked
 18903  0127FC  6FA0               	movwf	_cdc_trf_state& (0+255),b
 18904  0127FE                     l10082:
 18905                           
 18906                           ; BSR set to: 0
 18907                           ;usb_device_cdc.c: 983: }
 18908                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 18909  0127FE  0E01               	movlw	1
 18910  012800  0100               	movlb	0	; () banked
 18911  012802  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 18912  012804  0E4A               	movlw	low _cdc_data_tx
 18913  012806  0100               	movlb	0	; () banked
 18914  012808  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 18915  01280A  0E03               	movlw	high _cdc_data_tx
 18916  01280C  0100               	movlb	0	; () banked
 18917  01280E  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18918  012810  C0C0  F0B8         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 18919  012814  0E02               	movlw	2
 18920  012816  ECB7  F09E         	call	_USBTransferOnePacket
 18921  01281A  C0B5  F096         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 18922  01281E  C0B6  F097         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 18923  012822                     l10084:
 18924                           
 18925                           ;usb_device_cdc.c: 986: }
 18926                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 18927  012822  88A0               	bsf	4000,4,c	;volatile
 18928  012824  0012               	return		;funcret
 18929  012826                     __end_of_CDCTxService:
 18930                           	opt stack 0
 18931                           tblptru	equ	0xFF8
 18932                           tblptrh	equ	0xFF7
 18933                           tblptrl	equ	0xFF6
 18934                           tablat	equ	0xFF5
 18935                           prodh	equ	0xFF4
 18936                           prodl	equ	0xFF3
 18937                           intcon	equ	0xFF2
 18938                           intcon2	equ	0xFF1
 18939                           postinc0	equ	0xFEE
 18940                           wreg	equ	0xFE8
 18941                           indf1	equ	0xFE7
 18942                           postinc1	equ	0xFE6
 18943                           postdec1	equ	0xFE5
 18944                           fsr1h	equ	0xFE2
 18945                           fsr1l	equ	0xFE1
 18946                           indf2	equ	0xFDF
 18947                           postinc2	equ	0xFDE
 18948                           postdec2	equ	0xFDD
 18949                           plusw2	equ	0xFDB
 18950                           fsr2h	equ	0xFDA
 18951                           fsr2l	equ	0xFD9
 18952                           status	equ	0xFD8
 18953                           
 18954 ;; *************** function _USBTransferOnePacket *****************
 18955 ;; Defined at:
 18956 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 18957 ;; Parameters:    Size  Location     Type
 18958 ;;  ep              1    wreg     unsigned char 
 18959 ;;  dir             1    0[BANK0 ] unsigned char 
 18960 ;;  data            2    1[BANK0 ] PTR unsigned char 
 18961 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18962 ;;  len             1    3[BANK0 ] unsigned char 
 18963 ;; Auto vars:     Size  Location     Type
 18964 ;;  ep              1    4[BANK0 ] unsigned char 
 18965 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 18966 ;;		 -> NULL(0), BDT(48), 
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  2    0[BANK0 ] PTR void 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18977 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18980 ;;Total ram usage:        7 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:   11
 18983 ;; This function calls:
 18984 ;;		Nothing
 18985 ;; This function is called by:
 18986 ;;		_getsUSBUSART
 18987 ;;		_CDCTxService
 18988 ;;		_USBCDCEventHandler
 18989 ;; This function uses a non-reentrant model
 18990 ;;
 18991                           
 18992                           	psect	text82
 18993  013D6E                     __ptext82:
 18994                           	opt stack 0
 18995  013D6E                     _USBTransferOnePacket:
 18996                           	opt stack 16
 18997                           
 18998                           ;incstack = 0
 18999                           ;USBTransferOnePacket@ep stored from wreg
 19000  013D6E  0100               	movlb	0	; () banked
 19001  013D70  6FB9               	movwf	USBTransferOnePacket@ep& (0+255),b
 19002                           
 19003                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 19004                           ;usb_device.c: 1000: if(dir != 0)
 19005  013D72  0100               	movlb	0	; () banked
 19006  013D74  51B5               	movf	USBTransferOnePacket@dir& (0+255),w,b
 19007  013D76  0100               	movlb	0	; () banked
 19008  013D78  B4D8               	btfsc	status,2,c
 19009  013D7A  D008               	goto	l9536
 19010                           
 19011                           ; BSR set to: 0
 19012                           ;usb_device.c: 1001: {
 19013                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 19014  013D7C  0100               	movlb	0	; () banked
 19015  013D7E  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19016  013D80  0D02               	mullw	2
 19017  013D82  0E7B               	movlw	low _pBDTEntryIn
 19018  013D84  24F3               	addwf	prodl,w,c
 19019  013D86  6ED9               	movwf	fsr2l,c
 19020  013D88  0E00               	movlw	high _pBDTEntryIn
 19021  013D8A  D007               	goto	L8
 19022  013D8C                     l9536:
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;usb_device.c: 1005: else
 19026                           ;usb_device.c: 1006: {
 19027                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 19028  013D8C  0100               	movlb	0	; () banked
 19029  013D8E  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19030  013D90  0D02               	mullw	2
 19031  013D92  0E81               	movlw	low _pBDTEntryOut
 19032  013D94  24F3               	addwf	prodl,w,c
 19033  013D96  6ED9               	movwf	fsr2l,c
 19034  013D98  0E00               	movlw	high _pBDTEntryOut
 19035  013D9A                     L8:
 19036  013D9A  20F4               	addwfc	prodh,w,c
 19037  013D9C  6EDA               	movwf	fsr2h,c
 19038  013D9E  CFDE F0BA          	movff	postinc2,USBTransferOnePacket@handle
 19039  013DA2  CFDD F0BB          	movff	postdec2,USBTransferOnePacket@handle+1
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;usb_device.c: 1009: }
 19043                           ;usb_device.c: 1013: if(handle == 0)
 19044                           
 19045                           ; BSR set to: 0
 19046  013DA6  0100               	movlb	0	; () banked
 19047  013DA8  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19048  013DAA  0100               	movlb	0	; () banked
 19049  013DAC  11BB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19050  013DAE  A4D8               	btfss	status,2,c
 19051  013DB0  D007               	goto	l9544
 19052                           
 19053                           ; BSR set to: 0
 19054                           ;usb_device.c: 1014: {
 19055                           ;usb_device.c: 1015: return 0;
 19056  013DB2  0E00               	movlw	0
 19057  013DB4  0100               	movlb	0	; () banked
 19058  013DB6  6FB5               	movwf	?_USBTransferOnePacket& (0+255),b
 19059  013DB8  0E00               	movlw	0
 19060  013DBA  0100               	movlb	0	; () banked
 19061  013DBC  6FB6               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 19062                           
 19063                           ; BSR set to: 0
 19064  013DBE  0012               	return	
 19065  013DC0                     l9544:
 19066                           
 19067                           ; BSR set to: 0
 19068                           ;usb_device.c: 1016: }
 19069                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 19070  013DC0  0100               	movlb	0	; () banked
 19071  013DC2  EE20 F002          	lfsr	2,2
 19072  013DC6  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19073  013DC8  26D9               	addwf	fsr2l,f,c
 19074  013DCA  51BB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19075  013DCC  22DA               	addwfc	fsr2h,f,c
 19076  013DCE  C0B6  FFDE         	movff	USBTransferOnePacket@data,postinc2
 19077  013DD2  C0B7  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 19078                           
 19079                           ;usb_device.c: 1030: handle->CNT = len;
 19080  013DD6  0100               	movlb	0	; () banked
 19081  013DD8  EE20 F001          	lfsr	2,1
 19082  013DDC  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19083  013DDE  26D9               	addwf	fsr2l,f,c
 19084  013DE0  51BB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19085  013DE2  22DA               	addwfc	fsr2h,f,c
 19086  013DE4  C0B8  FFDF         	movff	USBTransferOnePacket@len,indf2
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 19090  013DE8  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19091  013DEC  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19092  013DF0  0E40               	movlw	64
 19093  013DF2  16DF               	andwf	indf2,f,c
 19094                           
 19095                           ; BSR set to: 0
 19096                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 19097  013DF4  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19098  013DF8  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19099  013DFC  0E00               	movlw	0
 19100  013DFE  86DB               	bsf	plusw2,3,c
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 19104  013E00  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19105  013E04  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19106  013E08  0E00               	movlw	0
 19107  013E0A  8EDB               	bsf	plusw2,7,c
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;usb_device.c: 1036: if(dir != 0)
 19111  013E0C  0100               	movlb	0	; () banked
 19112  013E0E  51B5               	movf	USBTransferOnePacket@dir& (0+255),w,b
 19113  013E10  0100               	movlb	0	; () banked
 19114  013E12  B4D8               	btfsc	status,2,c
 19115  013E14  D008               	goto	l9556
 19116                           
 19117                           ; BSR set to: 0
 19118                           ;usb_device.c: 1037: {
 19119                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19120  013E16  0100               	movlb	0	; () banked
 19121  013E18  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19122  013E1A  0D02               	mullw	2
 19123  013E1C  0E7B               	movlw	low _pBDTEntryIn
 19124  013E1E  24F3               	addwf	prodl,w,c
 19125  013E20  6ED9               	movwf	fsr2l,c
 19126  013E22  0E00               	movlw	high _pBDTEntryIn
 19127  013E24  D007               	goto	L9
 19128  013E26                     l9556:
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;usb_device.c: 1041: else
 19132                           ;usb_device.c: 1042: {
 19133                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19134  013E26  0100               	movlb	0	; () banked
 19135  013E28  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19136  013E2A  0D02               	mullw	2
 19137  013E2C  0E81               	movlw	low _pBDTEntryOut
 19138  013E2E  24F3               	addwf	prodl,w,c
 19139  013E30  6ED9               	movwf	fsr2l,c
 19140  013E32  0E00               	movlw	high _pBDTEntryOut
 19141  013E34                     L9:
 19142  013E34  20F4               	addwfc	prodh,w,c
 19143  013E36  6EDA               	movwf	fsr2h,c
 19144  013E38  0E04               	movlw	4
 19145  013E3A  1ADF               	xorwf	indf2,f,c
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;usb_device.c: 1045: }
 19149                           ;usb_device.c: 1046: return (void*)handle;
 19150                           
 19151                           ; BSR set to: 0
 19152  013E3C  C0BA  F0B5         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 19153  013E40  C0BB  F0B6         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 19154  013E44  0012               	return	
 19155  013E46                     __end_of_USBTransferOnePacket:
 19156                           	opt stack 0
 19157                           tblptru	equ	0xFF8
 19158                           tblptrh	equ	0xFF7
 19159                           tblptrl	equ	0xFF6
 19160                           tablat	equ	0xFF5
 19161                           prodh	equ	0xFF4
 19162                           prodl	equ	0xFF3
 19163                           intcon	equ	0xFF2
 19164                           intcon2	equ	0xFF1
 19165                           postinc0	equ	0xFEE
 19166                           wreg	equ	0xFE8
 19167                           indf1	equ	0xFE7
 19168                           postinc1	equ	0xFE6
 19169                           postdec1	equ	0xFE5
 19170                           fsr1h	equ	0xFE2
 19171                           fsr1l	equ	0xFE1
 19172                           indf2	equ	0xFDF
 19173                           postinc2	equ	0xFDE
 19174                           postdec2	equ	0xFDD
 19175                           plusw2	equ	0xFDB
 19176                           fsr2h	equ	0xFDA
 19177                           fsr2l	equ	0xFD9
 19178                           status	equ	0xFD8
 19179                           
 19180 ;; *************** function _RTCC_loop *****************
 19181 ;; Defined at:
 19182 ;;		line 387 in file "../My_header\My_RTCC.h"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;		None
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;		None
 19187 ;; Return value:  Size  Location     Type
 19188 ;;		None               void
 19189 ;; Registers used:
 19190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19200 ;;Total ram usage:        0 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; Hardware stack levels required when called:   15
 19203 ;; This function calls:
 19204 ;;		_RTCC_from_RTCC
 19205 ;; This function is called by:
 19206 ;;		_main
 19207 ;; This function uses a non-reentrant model
 19208 ;;
 19209                           
 19210                           	psect	text83
 19211  015B6A                     __ptext83:
 19212                           	opt stack 0
 19213  015B6A                     _RTCC_loop:
 19214                           	opt stack 15
 19215  015B6A                     l563:
 19216  015B6A  010F               	movlb	15	; () banked
 19217  015B6C  B93F               	btfsc	63,4,b	;volatile
 19218  015B6E  D7FD               	goto	l563
 19219                           
 19220                           ; BSR set to: 15
 19221                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 19222                           
 19223                           ; BSR set to: 15
 19224  015B70  0E00               	movlw	0
 19225  015B72  B73F               	btfsc	63,3,b	;volatile
 19226  015B74  0E01               	movlw	1
 19227  015B76  0100               	movlb	0	; () banked
 19228  015B78  6FA5               	movwf	_halfsec& (0+255),b
 19229                           
 19230                           ; BSR set to: 0
 19231                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 19232  015B7A  0100               	movlb	0	; () banked
 19233  015B7C  51A5               	movf	_halfsec& (0+255),w,b
 19234  015B7E  0100               	movlb	0	; () banked
 19235  015B80  199C               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
 19236  015B82  B4D8               	btfsc	status,2,c
 19237  015B84  0012               	return	
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 19241  015B86  C0A5  F09C         	movff	_halfsec,RTCC_loop@prev_halfsec
 19242                           
 19243                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 19244  015B8A  C0A5  F0A2         	movff	_halfsec,_colon
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 19248  015B8E  0E01               	movlw	1
 19249  015B90  6E50               	movwf	_time_change_flag,c
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 19253  015B92  0EAA               	movlw	low _caltime_now
 19254  015B94  0100               	movlb	0	; () banked
 19255  015B96  6FDD               	movwf	RTCC_from_RTCC@ct& (0+255),b
 19256  015B98  0E00               	movlw	high _caltime_now
 19257  015B9A  0100               	movlb	0	; () banked
 19258  015B9C  6FDE               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 19259  015B9E  0EB1               	movlw	low _epoch_now
 19260  015BA0  0100               	movlb	0	; () banked
 19261  015BA2  6FDF               	movwf	RTCC_from_RTCC@ep& (0+255),b
 19262  015BA4  0E00               	movlw	high _epoch_now
 19263  015BA6  0100               	movlb	0	; () banked
 19264  015BA8  6FE0               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 19265  015BAA  EC85  F0B0         	call	_RTCC_from_RTCC	;wreg free
 19266  015BAE  0012               	return	
 19267  015BB0                     __end_of_RTCC_loop:
 19268                           	opt stack 0
 19269                           tblptru	equ	0xFF8
 19270                           tblptrh	equ	0xFF7
 19271                           tblptrl	equ	0xFF6
 19272                           tablat	equ	0xFF5
 19273                           prodh	equ	0xFF4
 19274                           prodl	equ	0xFF3
 19275                           intcon	equ	0xFF2
 19276                           intcon2	equ	0xFF1
 19277                           postinc0	equ	0xFEE
 19278                           wreg	equ	0xFE8
 19279                           indf1	equ	0xFE7
 19280                           postinc1	equ	0xFE6
 19281                           postdec1	equ	0xFE5
 19282                           fsr1h	equ	0xFE2
 19283                           fsr1l	equ	0xFE1
 19284                           indf2	equ	0xFDF
 19285                           postinc2	equ	0xFDE
 19286                           postdec2	equ	0xFDD
 19287                           plusw2	equ	0xFDB
 19288                           fsr2h	equ	0xFDA
 19289                           fsr2l	equ	0xFD9
 19290                           status	equ	0xFD8
 19291                           
 19292 ;; *************** function _RTCC_from_RTCC *****************
 19293 ;; Defined at:
 19294 ;;		line 231 in file "../My_header\My_RTCC.h"
 19295 ;; Parameters:    Size  Location     Type
 19296 ;;  ct              2   40[BANK0 ] PTR struct .
 19297 ;;		 -> caltime_now(7), 
 19298 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 19299 ;;		 -> epoch_now(4), 
 19300 ;; Auto vars:     Size  Location     Type
 19301 ;;		None
 19302 ;; Return value:  Size  Location     Type
 19303 ;;		None               void
 19304 ;; Registers used:
 19305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19306 ;; Tracked objects:
 19307 ;;		On entry : 0/0
 19308 ;;		On exit  : 0/0
 19309 ;;		Unchanged: 0/0
 19310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19315 ;;Total ram usage:        4 bytes
 19316 ;; Hardware stack levels used:    1
 19317 ;; Hardware stack levels required when called:   14
 19318 ;; This function calls:
 19319 ;;		_RTCC_to_caltime
 19320 ;;		_caltime_to_epoch
 19321 ;; This function is called by:
 19322 ;;		_display_time_1602
 19323 ;;		_RTCC_adjust_time_inc
 19324 ;;		_RTCC_adjust_time_dec
 19325 ;;		_RTCC_loop
 19326 ;;		_main
 19327 ;;		_display_time_0802
 19328 ;;		_sleep_loop
 19329 ;; This function uses a non-reentrant model
 19330 ;;
 19331                           
 19332                           	psect	text84
 19333  01610A                     __ptext84:
 19334                           	opt stack 0
 19335  01610A                     _RTCC_from_RTCC:
 19336                           	opt stack 13
 19337                           
 19338                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 19339                           
 19340                           ;incstack = 0
 19341  01610A  C0DD  F0B7         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 19342  01610E  C0DE  F0B8         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 19343  016112  EC06  F0A5         	call	_RTCC_to_caltime	;wreg free
 19344                           
 19345                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 19346  016116  C0DD  F0CE         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 19347  01611A  C0DE  F0CF         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 19348  01611E  C0DF  F0D0         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 19349  016122  C0E0  F0D1         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 19350  016126  EC6D  F08D         	call	_caltime_to_epoch	;wreg free
 19351  01612A  0012               	return		;funcret
 19352  01612C                     __end_of_RTCC_from_RTCC:
 19353                           	opt stack 0
 19354                           tblptru	equ	0xFF8
 19355                           tblptrh	equ	0xFF7
 19356                           tblptrl	equ	0xFF6
 19357                           tablat	equ	0xFF5
 19358                           prodh	equ	0xFF4
 19359                           prodl	equ	0xFF3
 19360                           intcon	equ	0xFF2
 19361                           intcon2	equ	0xFF1
 19362                           postinc0	equ	0xFEE
 19363                           wreg	equ	0xFE8
 19364                           indf1	equ	0xFE7
 19365                           postinc1	equ	0xFE6
 19366                           postdec1	equ	0xFE5
 19367                           fsr1h	equ	0xFE2
 19368                           fsr1l	equ	0xFE1
 19369                           indf2	equ	0xFDF
 19370                           postinc2	equ	0xFDE
 19371                           postdec2	equ	0xFDD
 19372                           plusw2	equ	0xFDB
 19373                           fsr2h	equ	0xFDA
 19374                           fsr2l	equ	0xFD9
 19375                           status	equ	0xFD8
 19376                           
 19377 ;; *************** function _caltime_to_epoch *****************
 19378 ;; Defined at:
 19379 ;;		line 211 in file "../My_header\My_RTCC.h"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;  ct              2   25[BANK0 ] PTR struct .
 19382 ;;		 -> caltime_now(7), 
 19383 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 19384 ;;		 -> epoch_now(4), 
 19385 ;; Auto vars:     Size  Location     Type
 19386 ;;  month           1   39[BANK0 ] unsigned char 
 19387 ;;  month           1   34[BANK0 ] unsigned char 
 19388 ;;  year            1   33[BANK0 ] unsigned char 
 19389 ;;  epoch           4   35[BANK0 ] unsigned long 
 19390 ;; Return value:  Size  Location     Type
 19391 ;;		None               void
 19392 ;; Registers used:
 19393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19394 ;; Tracked objects:
 19395 ;;		On entry : 0/0
 19396 ;;		On exit  : 0/0
 19397 ;;		Unchanged: 0/0
 19398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19400 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19402 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19403 ;;Total ram usage:       15 bytes
 19404 ;; Hardware stack levels used:    1
 19405 ;; Hardware stack levels required when called:   13
 19406 ;; This function calls:
 19407 ;;		___lmul
 19408 ;;		_month_length
 19409 ;; This function is called by:
 19410 ;;		_RTCC_from_RTCC
 19411 ;;		_RTCC_from_caltime
 19412 ;; This function uses a non-reentrant model
 19413 ;;
 19414                           
 19415                           	psect	text85
 19416  011ADA                     __ptext85:
 19417                           	opt stack 0
 19418  011ADA                     _caltime_to_epoch:
 19419                           	opt stack 13
 19420                           
 19421                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 19422                           
 19423                           ;incstack = 0
 19424  011ADA  0E00               	movlw	0
 19425  011ADC  0100               	movlb	0	; () banked
 19426  011ADE  6FD8               	movwf	caltime_to_epoch@epoch& (0+255),b
 19427  011AE0  0E00               	movlw	0
 19428  011AE2  6FD9               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 19429  011AE4  0E00               	movlw	0
 19430  011AE6  6FDA               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 19431  011AE8  0E00               	movlw	0
 19432  011AEA  6FDB               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 19433                           
 19434                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 19435  011AEC  0E00               	movlw	0
 19436  011AEE  0100               	movlb	0	; () banked
 19437  011AF0  6FD6               	movwf	caltime_to_epoch@year& (0+255),b
 19438  011AF2  D037               	goto	l9384
 19439  011AF4                     l9370:
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 19443  011AF4  0E01               	movlw	1
 19444  011AF6  0100               	movlb	0	; () banked
 19445  011AF8  6FDC               	movwf	caltime_to_epoch@month& (0+255),b
 19446  011AFA                     l9372:
 19447                           
 19448                           ; BSR set to: 0
 19449  011AFA  0E0C               	movlw	12
 19450  011AFC  0100               	movlb	0	; () banked
 19451  011AFE  65DC               	cpfsgt	caltime_to_epoch@month& (0+255),b
 19452  011B00  D001               	goto	l9376
 19453  011B02  D02D               	goto	l9382
 19454  011B04                     l9376:
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 19458  011B04  C0DC  F0BB         	movff	caltime_to_epoch@month,month_length@month
 19459  011B08  0100               	movlb	0	; () banked
 19460  011B0A  51D6               	movf	caltime_to_epoch@year& (0+255),w,b
 19461  011B0C  ECDB  F09D         	call	_month_length
 19462  011B10  0100               	movlb	0	; () banked
 19463  011B12  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19464  011B14  0100               	movlb	0	; () banked
 19465  011B16  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19466  011B18  0100               	movlb	0	; () banked
 19467  011B1A  6FC2               	movwf	___lmul@multiplier& (0+255),b
 19468  011B1C  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 19469  011B1E  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 19470  011B20  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 19471  011B22  0E80               	movlw	128
 19472  011B24  0100               	movlb	0	; () banked
 19473  011B26  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19474  011B28  0E51               	movlw	81
 19475  011B2A  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19476  011B2C  0E01               	movlw	1
 19477  011B2E  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19478  011B30  0E00               	movlw	0
 19479  011B32  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19480  011B34  EC91  F0AA         	call	___lmul	;wreg free
 19481  011B38  0100               	movlb	0	; () banked
 19482  011B3A  51C2               	movf	?___lmul& (0+255),w,b
 19483  011B3C  0100               	movlb	0	; () banked
 19484  011B3E  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19485  011B40  0100               	movlb	0	; () banked
 19486  011B42  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19487  011B44  0100               	movlb	0	; () banked
 19488  011B46  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19489  011B48  0100               	movlb	0	; () banked
 19490  011B4A  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19491  011B4C  0100               	movlb	0	; () banked
 19492  011B4E  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19493  011B50  0100               	movlb	0	; () banked
 19494  011B52  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19495  011B54  0100               	movlb	0	; () banked
 19496  011B56  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19497                           
 19498                           ; BSR set to: 0
 19499  011B58  0100               	movlb	0	; () banked
 19500  011B5A  2BDC               	incf	caltime_to_epoch@month& (0+255),f,b
 19501  011B5C  D7CE               	goto	l9372
 19502  011B5E                     l9382:
 19503                           
 19504                           ; BSR set to: 0
 19505  011B5E  0100               	movlb	0	; () banked
 19506  011B60  2BD6               	incf	caltime_to_epoch@year& (0+255),f,b
 19507  011B62                     l9384:
 19508                           
 19509                           ; BSR set to: 0
 19510  011B62  0100               	movlb	0	; () banked
 19511  011B64  EE20 F006          	lfsr	2,6
 19512  011B68  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19513  011B6A  26D9               	addwf	fsr2l,f,c
 19514  011B6C  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19515  011B6E  22DA               	addwfc	fsr2h,f,c
 19516  011B70  50DE               	movf	postinc2,w,c
 19517  011B72  0100               	movlb	0	; () banked
 19518  011B74  5DD6               	subwf	caltime_to_epoch@year& (0+255),w,b
 19519  011B76  A0D8               	btfss	status,0,c
 19520  011B78  D7BD               	goto	l9370
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;My_header\My_RTCC.h: 216: }
 19524                           ;My_header\My_RTCC.h: 217: }
 19525                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 19526                           
 19527                           ; BSR set to: 0
 19528  011B7A  0E01               	movlw	1
 19529  011B7C  0100               	movlb	0	; () banked
 19530  011B7E  6FD7               	movwf	caltime_to_epoch@month_2019& (0+255),b
 19531  011B80  D032               	goto	l9392
 19532  011B82                     l9388:
 19533                           
 19534                           ; BSR set to: 0
 19535                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 19536  011B82  C0D7  F0BB         	movff	caltime_to_epoch@month_2019,month_length@month
 19537  011B86  0100               	movlb	0	; () banked
 19538  011B88  EE20 F006          	lfsr	2,6
 19539  011B8C  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19540  011B8E  26D9               	addwf	fsr2l,f,c
 19541  011B90  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19542  011B92  22DA               	addwfc	fsr2h,f,c
 19543  011B94  50DF               	movf	indf2,w,c
 19544  011B96  ECDB  F09D         	call	_month_length
 19545  011B9A  0100               	movlb	0	; () banked
 19546  011B9C  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19547  011B9E  0100               	movlb	0	; () banked
 19548  011BA0  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19549  011BA2  0100               	movlb	0	; () banked
 19550  011BA4  6FC2               	movwf	___lmul@multiplier& (0+255),b
 19551  011BA6  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 19552  011BA8  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 19553  011BAA  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 19554  011BAC  0E80               	movlw	128
 19555  011BAE  0100               	movlb	0	; () banked
 19556  011BB0  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19557  011BB2  0E51               	movlw	81
 19558  011BB4  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19559  011BB6  0E01               	movlw	1
 19560  011BB8  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19561  011BBA  0E00               	movlw	0
 19562  011BBC  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19563  011BBE  EC91  F0AA         	call	___lmul	;wreg free
 19564  011BC2  0100               	movlb	0	; () banked
 19565  011BC4  51C2               	movf	?___lmul& (0+255),w,b
 19566  011BC6  0100               	movlb	0	; () banked
 19567  011BC8  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19568  011BCA  0100               	movlb	0	; () banked
 19569  011BCC  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19570  011BCE  0100               	movlb	0	; () banked
 19571  011BD0  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19572  011BD2  0100               	movlb	0	; () banked
 19573  011BD4  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19574  011BD6  0100               	movlb	0	; () banked
 19575  011BD8  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19576  011BDA  0100               	movlb	0	; () banked
 19577  011BDC  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19578  011BDE  0100               	movlb	0	; () banked
 19579  011BE0  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19580                           
 19581                           ; BSR set to: 0
 19582  011BE2  0100               	movlb	0	; () banked
 19583  011BE4  2BD7               	incf	caltime_to_epoch@month_2019& (0+255),f,b
 19584  011BE6                     l9392:
 19585                           
 19586                           ; BSR set to: 0
 19587  011BE6  0100               	movlb	0	; () banked
 19588  011BE8  EE20 F005          	lfsr	2,5
 19589  011BEC  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19590  011BEE  26D9               	addwf	fsr2l,f,c
 19591  011BF0  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19592  011BF2  22DA               	addwfc	fsr2h,f,c
 19593  011BF4  50DE               	movf	postinc2,w,c
 19594  011BF6  0100               	movlb	0	; () banked
 19595  011BF8  5DD7               	subwf	caltime_to_epoch@month_2019& (0+255),w,b
 19596  011BFA  A0D8               	btfss	status,0,c
 19597  011BFC  D7C2               	goto	l9388
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;My_header\My_RTCC.h: 220: }
 19601                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 19602                           
 19603                           ; BSR set to: 0
 19604  011BFE  0EFF               	movlw	255
 19605  011C00  0100               	movlb	0	; () banked
 19606  011C02  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19607  011C04  0EFF               	movlw	255
 19608  011C06  0100               	movlb	0	; () banked
 19609  011C08  6FD3               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 19610  011C0A  0100               	movlb	0	; () banked
 19611  011C0C  EE20 F004          	lfsr	2,4
 19612  011C10  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19613  011C12  26D9               	addwf	fsr2l,f,c
 19614  011C14  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19615  011C16  22DA               	addwfc	fsr2h,f,c
 19616  011C18  50DF               	movf	indf2,w,c
 19617  011C1A  0100               	movlb	0	; () banked
 19618  011C1C  6FD4               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 19619  011C1E  6BD5               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 19620  011C20  0100               	movlb	0	; () banked
 19621  011C22  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19622  011C24  0100               	movlb	0	; () banked
 19623  011C26  27D4               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 19624  011C28  0100               	movlb	0	; () banked
 19625  011C2A  51D3               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 19626  011C2C  0100               	movlb	0	; () banked
 19627  011C2E  23D5               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 19628  011C30  C0D4  F0C2         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 19629  011C34  C0D5  F0C3         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 19630  011C38  0100               	movlb	0	; () banked
 19631  011C3A  0E00               	movlw	0
 19632  011C3C  BFC3               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 19633  011C3E  0EFF               	movlw	-1
 19634  011C40  6FC4               	movwf	(___lmul@multiplier+2)& (0+255),b
 19635  011C42  6FC5               	movwf	(___lmul@multiplier+3)& (0+255),b
 19636  011C44  0E80               	movlw	128
 19637  011C46  0100               	movlb	0	; () banked
 19638  011C48  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19639  011C4A  0E51               	movlw	81
 19640  011C4C  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19641  011C4E  0E01               	movlw	1
 19642  011C50  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19643  011C52  0E00               	movlw	0
 19644  011C54  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19645  011C56  EC91  F0AA         	call	___lmul	;wreg free
 19646  011C5A  0100               	movlb	0	; () banked
 19647  011C5C  51C2               	movf	?___lmul& (0+255),w,b
 19648  011C5E  0100               	movlb	0	; () banked
 19649  011C60  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19650  011C62  0100               	movlb	0	; () banked
 19651  011C64  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19652  011C66  0100               	movlb	0	; () banked
 19653  011C68  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19654  011C6A  0100               	movlb	0	; () banked
 19655  011C6C  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19656  011C6E  0100               	movlb	0	; () banked
 19657  011C70  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19658  011C72  0100               	movlb	0	; () banked
 19659  011C74  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19660  011C76  0100               	movlb	0	; () banked
 19661  011C78  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19662                           
 19663                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 19664  011C7A  0100               	movlb	0	; () banked
 19665  011C7C  EE20 F002          	lfsr	2,2
 19666  011C80  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19667  011C82  26D9               	addwf	fsr2l,f,c
 19668  011C84  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19669  011C86  22DA               	addwfc	fsr2h,f,c
 19670  011C88  50DF               	movf	indf2,w,c
 19671  011C8A  0100               	movlb	0	; () banked
 19672  011C8C  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19673  011C8E  0100               	movlb	0	; () banked
 19674  011C90  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19675  011C92  0100               	movlb	0	; () banked
 19676  011C94  6FC2               	movwf	___lmul@multiplier& (0+255),b
 19677  011C96  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 19678  011C98  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 19679  011C9A  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 19680  011C9C  0E10               	movlw	16
 19681  011C9E  0100               	movlb	0	; () banked
 19682  011CA0  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19683  011CA2  0E0E               	movlw	14
 19684  011CA4  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19685  011CA6  0E00               	movlw	0
 19686  011CA8  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19687  011CAA  0E00               	movlw	0
 19688  011CAC  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19689  011CAE  EC91  F0AA         	call	___lmul	;wreg free
 19690  011CB2  0100               	movlb	0	; () banked
 19691  011CB4  51C2               	movf	?___lmul& (0+255),w,b
 19692  011CB6  0100               	movlb	0	; () banked
 19693  011CB8  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19694  011CBA  0100               	movlb	0	; () banked
 19695  011CBC  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19696  011CBE  0100               	movlb	0	; () banked
 19697  011CC0  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19698  011CC2  0100               	movlb	0	; () banked
 19699  011CC4  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19700  011CC6  0100               	movlb	0	; () banked
 19701  011CC8  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19702  011CCA  0100               	movlb	0	; () banked
 19703  011CCC  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19704  011CCE  0100               	movlb	0	; () banked
 19705  011CD0  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19706                           
 19707                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 19708  011CD2  0100               	movlb	0	; () banked
 19709  011CD4  EE20 F001          	lfsr	2,1
 19710  011CD8  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19711  011CDA  26D9               	addwf	fsr2l,f,c
 19712  011CDC  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19713  011CDE  22DA               	addwfc	fsr2h,f,c
 19714  011CE0  50DF               	movf	indf2,w,c
 19715  011CE2  0100               	movlb	0	; () banked
 19716  011CE4  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19717  011CE6  0100               	movlb	0	; () banked
 19718  011CE8  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19719  011CEA  0100               	movlb	0	; () banked
 19720  011CEC  6FC2               	movwf	___lmul@multiplier& (0+255),b
 19721  011CEE  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 19722  011CF0  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 19723  011CF2  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 19724  011CF4  0E3C               	movlw	60
 19725  011CF6  0100               	movlb	0	; () banked
 19726  011CF8  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19727  011CFA  0E00               	movlw	0
 19728  011CFC  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19729  011CFE  0E00               	movlw	0
 19730  011D00  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19731  011D02  0E00               	movlw	0
 19732  011D04  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19733  011D06  EC91  F0AA         	call	___lmul	;wreg free
 19734  011D0A  0100               	movlb	0	; () banked
 19735  011D0C  51C2               	movf	?___lmul& (0+255),w,b
 19736  011D0E  0100               	movlb	0	; () banked
 19737  011D10  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19738  011D12  0100               	movlb	0	; () banked
 19739  011D14  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19740  011D16  0100               	movlb	0	; () banked
 19741  011D18  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19742  011D1A  0100               	movlb	0	; () banked
 19743  011D1C  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19744  011D1E  0100               	movlb	0	; () banked
 19745  011D20  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19746  011D22  0100               	movlb	0	; () banked
 19747  011D24  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19748  011D26  0100               	movlb	0	; () banked
 19749  011D28  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19750                           
 19751                           ; BSR set to: 0
 19752                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 19753  011D2A  C0CE  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 19754  011D2E  C0CF  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 19755  011D32  50DF               	movf	indf2,w,c
 19756  011D34  0100               	movlb	0	; () banked
 19757  011D36  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19758  011D38  0100               	movlb	0	; () banked
 19759  011D3A  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19760  011D3C  0100               	movlb	0	; () banked
 19761  011D3E  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19762  011D40  0E00               	movlw	0
 19763  011D42  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19764  011D44  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19765  011D46  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19766                           
 19767                           ; BSR set to: 0
 19768                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 19769  011D48  C0D0  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 19770  011D4C  C0D1  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 19771  011D50  C0D8  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 19772  011D54  C0D9  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 19773  011D58  C0DA  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 19774  011D5C  C0DB  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 19775                           
 19776                           ; BSR set to: 0
 19777  011D60  0012               	return		;funcret
 19778  011D62                     __end_of_caltime_to_epoch:
 19779                           	opt stack 0
 19780                           tblptru	equ	0xFF8
 19781                           tblptrh	equ	0xFF7
 19782                           tblptrl	equ	0xFF6
 19783                           tablat	equ	0xFF5
 19784                           prodh	equ	0xFF4
 19785                           prodl	equ	0xFF3
 19786                           intcon	equ	0xFF2
 19787                           intcon2	equ	0xFF1
 19788                           postinc0	equ	0xFEE
 19789                           wreg	equ	0xFE8
 19790                           indf1	equ	0xFE7
 19791                           postinc1	equ	0xFE6
 19792                           postdec1	equ	0xFE5
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           postinc2	equ	0xFDE
 19797                           postdec2	equ	0xFDD
 19798                           plusw2	equ	0xFDB
 19799                           fsr2h	equ	0xFDA
 19800                           fsr2l	equ	0xFD9
 19801                           status	equ	0xFD8
 19802                           
 19803 ;; *************** function _month_length *****************
 19804 ;; Defined at:
 19805 ;;		line 87 in file "../My_header\My_RTCC.h"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;  year            1    wreg     unsigned char 
 19808 ;;  month           1    6[BANK0 ] unsigned char 
 19809 ;; Auto vars:     Size  Location     Type
 19810 ;;  year            1   11[BANK0 ] unsigned char 
 19811 ;; Return value:  Size  Location     Type
 19812 ;;                  1    wreg      unsigned char 
 19813 ;; Registers used:
 19814 ;;		wreg, status,2, status,0, cstack
 19815 ;; Tracked objects:
 19816 ;;		On entry : 0/0
 19817 ;;		On exit  : 0/0
 19818 ;;		Unchanged: 0/0
 19819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19820 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19823 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19824 ;;Total ram usage:        6 bytes
 19825 ;; Hardware stack levels used:    1
 19826 ;; Hardware stack levels required when called:   12
 19827 ;; This function calls:
 19828 ;;		___awmod
 19829 ;; This function is called by:
 19830 ;;		_epoch_to_caltime
 19831 ;;		_caltime_to_epoch
 19832 ;;		_RTCC_adjust_time_inc
 19833 ;;		_RTCC_adjust_time_dec
 19834 ;;		_command_operation
 19835 ;; This function uses a non-reentrant model
 19836 ;;
 19837                           
 19838                           	psect	text86
 19839  013BB6                     __ptext86:
 19840                           	opt stack 0
 19841  013BB6                     _month_length:
 19842                           	opt stack 16
 19843                           
 19844                           ; BSR set to: 0
 19845                           ;incstack = 0
 19846                           ;month_length@year stored from wreg
 19847  013BB6  0100               	movlb	0	; () banked
 19848  013BB8  6FC0               	movwf	month_length@year& (0+255),b
 19849                           
 19850                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 19851  013BBA  0E02               	movlw	2
 19852  013BBC  0100               	movlb	0	; () banked
 19853  013BBE  19BB               	xorwf	month_length@month& (0+255),w,b
 19854  013BC0  A4D8               	btfss	status,2,c
 19855  013BC2  D03E               	goto	l9228
 19856                           
 19857                           ; BSR set to: 0
 19858  013BC4  C0C0  F0B5         	movff	month_length@year,___awmod@dividend
 19859  013BC8  0100               	movlb	0	; () banked
 19860  013BCA  6BB6               	clrf	(___awmod@dividend+1)& (0+255),b
 19861  013BCC  0E00               	movlw	0
 19862  013BCE  0100               	movlb	0	; () banked
 19863  013BD0  6FB8               	movwf	(___awmod@divisor+1)& (0+255),b
 19864  013BD2  0E64               	movlw	100
 19865  013BD4  6FB7               	movwf	___awmod@divisor& (0+255),b
 19866  013BD6  EC5D  F0A6         	call	___awmod	;wreg free
 19867  013BDA  0100               	movlb	0	; () banked
 19868  013BDC  51B5               	movf	?___awmod& (0+255),w,b
 19869  013BDE  0100               	movlb	0	; () banked
 19870  013BE0  11B6               	iorwf	(?___awmod+1)& (0+255),w,b
 19871  013BE2  A4D8               	btfss	status,2,c
 19872  013BE4  D002               	goto	u9940
 19873  013BE6  0E01               	movlw	1
 19874  013BE8  D001               	goto	u9950
 19875  013BEA                     u9940:
 19876  013BEA  0E00               	movlw	0
 19877  013BEC                     u9950:
 19878  013BEC  0800               	sublw	0
 19879  013BEE  0100               	movlb	0	; () banked
 19880  013BF0  6FBC               	movwf	??_month_length& (0+255),b
 19881  013BF2  C0C0  F0B5         	movff	month_length@year,___awmod@dividend
 19882  013BF6  0100               	movlb	0	; () banked
 19883  013BF8  6BB6               	clrf	(___awmod@dividend+1)& (0+255),b
 19884  013BFA  0E01               	movlw	1
 19885  013BFC  0100               	movlb	0	; () banked
 19886  013BFE  6FB8               	movwf	(___awmod@divisor+1)& (0+255),b
 19887  013C00  0E90               	movlw	144
 19888  013C02  6FB7               	movwf	___awmod@divisor& (0+255),b
 19889  013C04  EC5D  F0A6         	call	___awmod	;wreg free
 19890  013C08  0100               	movlb	0	; () banked
 19891  013C0A  51B5               	movf	?___awmod& (0+255),w,b
 19892  013C0C  0100               	movlb	0	; () banked
 19893  013C0E  11B6               	iorwf	(?___awmod+1)& (0+255),w,b
 19894  013C10  A4D8               	btfss	status,2,c
 19895  013C12  D004               	goto	u9960
 19896  013C14  0100               	movlb	0	; () banked
 19897  013C16  6BBD               	clrf	(??_month_length+1)& (0+255),b
 19898  013C18  2BBD               	incf	(??_month_length+1)& (0+255),f,b
 19899  013C1A  D002               	goto	u9978
 19900  013C1C                     u9960:
 19901  013C1C  0100               	movlb	0	; () banked
 19902  013C1E  6BBD               	clrf	(??_month_length+1)& (0+255),b
 19903  013C20                     u9978:
 19904  013C20  C0C0  F0BE         	movff	month_length@year,??_month_length+2
 19905  013C24  0E03               	movlw	3
 19906  013C26  0100               	movlb	0	; () banked
 19907  013C28  17BE               	andwf	(??_month_length+2)& (0+255),f,b
 19908  013C2A  A4D8               	btfss	status,2,c
 19909  013C2C  D002               	goto	u9980
 19910  013C2E  0E01               	movlw	1
 19911  013C30  D001               	goto	u9990
 19912  013C32                     u9980:
 19913  013C32  0E00               	movlw	0
 19914  013C34                     u9990:
 19915  013C34  0100               	movlb	0	; () banked
 19916  013C36  25BD               	addwf	(??_month_length+1)& (0+255),w,b
 19917  013C38  0100               	movlb	0	; () banked
 19918  013C3A  25BC               	addwf	??_month_length& (0+255),w,b
 19919  013C3C  0F1C               	addlw	28
 19920                           
 19921                           ; BSR set to: 0
 19922                           
 19923                           ; BSR set to: 0
 19924  013C3E  0012               	return	
 19925  013C40                     l9228:
 19926                           
 19927                           ; BSR set to: 0
 19928                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 19929  013C40  0100               	movlb	0	; () banked
 19930  013C42  51BB               	movf	month_length@month& (0+255),w,b
 19931  013C44  0B01               	andlw	1
 19932  013C46  0100               	movlb	0	; () banked
 19933  013C48  6FBC               	movwf	??_month_length& (0+255),b
 19934  013C4A  6BBD               	clrf	(??_month_length+1)& (0+255),b
 19935  013C4C  0100               	movlb	0	; () banked
 19936  013C4E  1FBC               	comf	??_month_length& (0+255),f,b
 19937  013C50  1FBD               	comf	(??_month_length+1)& (0+255),f,b
 19938  013C52  4BBC               	infsnz	??_month_length& (0+255),f,b
 19939  013C54  2BBD               	incf	(??_month_length+1)& (0+255),f,b
 19940  013C56  0100               	movlb	0	; () banked
 19941  013C58  51BB               	movf	month_length@month& (0+255),w,b
 19942  013C5A  0100               	movlb	0	; () banked
 19943  013C5C  6FBE               	movwf	(??_month_length+2)& (0+255),b
 19944  013C5E  6BBF               	clrf	(??_month_length+3)& (0+255),b
 19945  013C60  0100               	movlb	0	; () banked
 19946  013C62  51BC               	movf	??_month_length& (0+255),w,b
 19947  013C64  0100               	movlb	0	; () banked
 19948  013C66  1BBE               	xorwf	(??_month_length+2)& (0+255),f,b
 19949  013C68  0100               	movlb	0	; () banked
 19950  013C6A  51BD               	movf	(??_month_length+1)& (0+255),w,b
 19951  013C6C  0100               	movlb	0	; () banked
 19952  013C6E  1BBF               	xorwf	(??_month_length+3)& (0+255),f,b
 19953  013C70  0E0D               	movlw	13
 19954  013C72  0100               	movlb	0	; () banked
 19955  013C74  17BE               	andwf	(??_month_length+2)& (0+255),f,b
 19956  013C76  0E00               	movlw	0
 19957  013C78  17BF               	andwf	(??_month_length+3)& (0+255),f,b
 19958  013C7A  0E04               	movlw	4
 19959  013C7C  0100               	movlb	0	; () banked
 19960  013C7E  19BE               	xorwf	(??_month_length+2)& (0+255),w,b
 19961  013C80  0100               	movlb	0	; () banked
 19962  013C82  11BF               	iorwf	(??_month_length+3)& (0+255),w,b
 19963  013C84  A4D8               	btfss	status,2,c
 19964  013C86  D002               	goto	u10000
 19965  013C88  0E01               	movlw	1
 19966  013C8A  D001               	goto	u10010
 19967  013C8C                     u10000:
 19968  013C8C  0E00               	movlw	0
 19969  013C8E                     u10010:
 19970  013C8E  0800               	sublw	0
 19971  013C90  0F1F               	addlw	31
 19972                           
 19973                           ; BSR set to: 0
 19974  013C92  0012               	return	
 19975  013C94                     __end_of_month_length:
 19976                           	opt stack 0
 19977                           tblptru	equ	0xFF8
 19978                           tblptrh	equ	0xFF7
 19979                           tblptrl	equ	0xFF6
 19980                           tablat	equ	0xFF5
 19981                           prodh	equ	0xFF4
 19982                           prodl	equ	0xFF3
 19983                           intcon	equ	0xFF2
 19984                           intcon2	equ	0xFF1
 19985                           postinc0	equ	0xFEE
 19986                           wreg	equ	0xFE8
 19987                           indf1	equ	0xFE7
 19988                           postinc1	equ	0xFE6
 19989                           postdec1	equ	0xFE5
 19990                           fsr1h	equ	0xFE2
 19991                           fsr1l	equ	0xFE1
 19992                           indf2	equ	0xFDF
 19993                           postinc2	equ	0xFDE
 19994                           postdec2	equ	0xFDD
 19995                           plusw2	equ	0xFDB
 19996                           fsr2h	equ	0xFDA
 19997                           fsr2l	equ	0xFD9
 19998                           status	equ	0xFD8
 19999                           
 20000 ;; *************** function ___awmod *****************
 20001 ;; Defined at:
 20002 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  dividend        2    0[BANK0 ] int 
 20005 ;;  divisor         2    2[BANK0 ] int 
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;  sign            1    5[BANK0 ] unsigned char 
 20008 ;;  counter         1    4[BANK0 ] unsigned char 
 20009 ;; Return value:  Size  Location     Type
 20010 ;;                  2    0[BANK0 ] int 
 20011 ;; Registers used:
 20012 ;;		wreg, status,2, status,0
 20013 ;; Tracked objects:
 20014 ;;		On entry : 0/0
 20015 ;;		On exit  : 0/0
 20016 ;;		Unchanged: 0/0
 20017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20021 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20022 ;;Total ram usage:        6 bytes
 20023 ;; Hardware stack levels used:    1
 20024 ;; Hardware stack levels required when called:   11
 20025 ;; This function calls:
 20026 ;;		Nothing
 20027 ;; This function is called by:
 20028 ;;		_month_length
 20029 ;; This function uses a non-reentrant model
 20030 ;;
 20031                           
 20032                           	psect	text87
 20033  014CBA                     __ptext87:
 20034                           	opt stack 0
 20035  014CBA                     ___awmod:
 20036                           	opt stack 16
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;incstack = 0
 20040  014CBA  0E00               	movlw	0
 20041  014CBC  0100               	movlb	0	; () banked
 20042  014CBE  6FBA               	movwf	___awmod@sign& (0+255),b
 20043                           
 20044                           ; BSR set to: 0
 20045  014CC0  0100               	movlb	0	; () banked
 20046  014CC2  AFB6               	btfss	(___awmod@dividend+1)& (0+255),7,b
 20047  014CC4  D008               	goto	l9090
 20048                           
 20049                           ; BSR set to: 0
 20050  014CC6  0100               	movlb	0	; () banked
 20051  014CC8  6DB5               	negf	___awmod@dividend& (0+255),b
 20052  014CCA  1FB6               	comf	(___awmod@dividend+1)& (0+255),f,b
 20053  014CCC  B0D8               	btfsc	status,0,c
 20054  014CCE  2BB6               	incf	(___awmod@dividend+1)& (0+255),f,b
 20055                           
 20056                           ; BSR set to: 0
 20057  014CD0  0E01               	movlw	1
 20058  014CD2  0100               	movlb	0	; () banked
 20059  014CD4  6FBA               	movwf	___awmod@sign& (0+255),b
 20060  014CD6                     l9090:
 20061                           
 20062                           ; BSR set to: 0
 20063  014CD6  0100               	movlb	0	; () banked
 20064  014CD8  AFB8               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20065  014CDA  D005               	goto	l9094
 20066                           
 20067                           ; BSR set to: 0
 20068  014CDC  0100               	movlb	0	; () banked
 20069  014CDE  6DB7               	negf	___awmod@divisor& (0+255),b
 20070  014CE0  1FB8               	comf	(___awmod@divisor+1)& (0+255),f,b
 20071  014CE2  B0D8               	btfsc	status,0,c
 20072  014CE4  2BB8               	incf	(___awmod@divisor+1)& (0+255),f,b
 20073  014CE6                     l9094:
 20074                           
 20075                           ; BSR set to: 0
 20076  014CE6  0100               	movlb	0	; () banked
 20077  014CE8  51B7               	movf	___awmod@divisor& (0+255),w,b
 20078  014CEA  0100               	movlb	0	; () banked
 20079  014CEC  11B8               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 20080  014CEE  B4D8               	btfsc	status,2,c
 20081  014CF0  D026               	goto	l9110
 20082                           
 20083                           ; BSR set to: 0
 20084  014CF2  0E01               	movlw	1
 20085  014CF4  0100               	movlb	0	; () banked
 20086  014CF6  6FB9               	movwf	___awmod@counter& (0+255),b
 20087  014CF8  D006               	goto	l9100
 20088  014CFA                     l9098:
 20089                           
 20090                           ; BSR set to: 0
 20091  014CFA  0100               	movlb	0	; () banked
 20092  014CFC  90D8               	bcf	status,0,c
 20093  014CFE  37B7               	rlcf	___awmod@divisor& (0+255),f,b
 20094  014D00  37B8               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 20095  014D02  0100               	movlb	0	; () banked
 20096  014D04  2BB9               	incf	___awmod@counter& (0+255),f,b
 20097  014D06                     l9100:
 20098                           
 20099                           ; BSR set to: 0
 20100  014D06  0100               	movlb	0	; () banked
 20101  014D08  AFB8               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20102  014D0A  D7F7               	goto	l9098
 20103  014D0C                     l9102:
 20104                           
 20105                           ; BSR set to: 0
 20106  014D0C  0100               	movlb	0	; () banked
 20107  014D0E  51B7               	movf	___awmod@divisor& (0+255),w,b
 20108  014D10  0100               	movlb	0	; () banked
 20109  014D12  5DB5               	subwf	___awmod@dividend& (0+255),w,b
 20110  014D14  0100               	movlb	0	; () banked
 20111  014D16  51B8               	movf	(___awmod@divisor+1)& (0+255),w,b
 20112  014D18  0100               	movlb	0	; () banked
 20113  014D1A  59B6               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 20114  014D1C  A0D8               	btfss	status,0,c
 20115  014D1E  D008               	goto	l9106
 20116                           
 20117                           ; BSR set to: 0
 20118  014D20  0100               	movlb	0	; () banked
 20119  014D22  51B7               	movf	___awmod@divisor& (0+255),w,b
 20120  014D24  0100               	movlb	0	; () banked
 20121  014D26  5FB5               	subwf	___awmod@dividend& (0+255),f,b
 20122  014D28  0100               	movlb	0	; () banked
 20123  014D2A  51B8               	movf	(___awmod@divisor+1)& (0+255),w,b
 20124  014D2C  0100               	movlb	0	; () banked
 20125  014D2E  5BB6               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 20126  014D30                     l9106:
 20127                           
 20128                           ; BSR set to: 0
 20129  014D30  0100               	movlb	0	; () banked
 20130  014D32  90D8               	bcf	status,0,c
 20131  014D34  33B8               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 20132  014D36  33B7               	rrcf	___awmod@divisor& (0+255),f,b
 20133                           
 20134                           ; BSR set to: 0
 20135  014D38  0100               	movlb	0	; () banked
 20136  014D3A  2FB9               	decfsz	___awmod@counter& (0+255),f,b
 20137  014D3C  D7E7               	goto	l9102
 20138  014D3E                     l9110:
 20139                           
 20140                           ; BSR set to: 0
 20141  014D3E  0100               	movlb	0	; () banked
 20142  014D40  51BA               	movf	___awmod@sign& (0+255),w,b
 20143  014D42  0100               	movlb	0	; () banked
 20144  014D44  B4D8               	btfsc	status,2,c
 20145  014D46  D005               	goto	l9114
 20146                           
 20147                           ; BSR set to: 0
 20148  014D48  0100               	movlb	0	; () banked
 20149  014D4A  6DB5               	negf	___awmod@dividend& (0+255),b
 20150  014D4C  1FB6               	comf	(___awmod@dividend+1)& (0+255),f,b
 20151  014D4E  B0D8               	btfsc	status,0,c
 20152  014D50  2BB6               	incf	(___awmod@dividend+1)& (0+255),f,b
 20153  014D52                     l9114:
 20154                           
 20155                           ; BSR set to: 0
 20156  014D52  C0B5  F0B5         	movff	___awmod@dividend,?___awmod
 20157  014D56  C0B6  F0B6         	movff	___awmod@dividend+1,?___awmod+1
 20158  014D5A  0012               	return	
 20159  014D5C                     __end_of___awmod:
 20160                           	opt stack 0
 20161                           tblptru	equ	0xFF8
 20162                           tblptrh	equ	0xFF7
 20163                           tblptrl	equ	0xFF6
 20164                           tablat	equ	0xFF5
 20165                           prodh	equ	0xFF4
 20166                           prodl	equ	0xFF3
 20167                           intcon	equ	0xFF2
 20168                           intcon2	equ	0xFF1
 20169                           postinc0	equ	0xFEE
 20170                           wreg	equ	0xFE8
 20171                           indf1	equ	0xFE7
 20172                           postinc1	equ	0xFE6
 20173                           postdec1	equ	0xFE5
 20174                           fsr1h	equ	0xFE2
 20175                           fsr1l	equ	0xFE1
 20176                           indf2	equ	0xFDF
 20177                           postinc2	equ	0xFDE
 20178                           postdec2	equ	0xFDD
 20179                           plusw2	equ	0xFDB
 20180                           fsr2h	equ	0xFDA
 20181                           fsr2l	equ	0xFD9
 20182                           status	equ	0xFD8
 20183                           
 20184 ;; *************** function ___lmul *****************
 20185 ;; Defined at:
 20186 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 20187 ;; Parameters:    Size  Location     Type
 20188 ;;  multiplier      4   13[BANK0 ] unsigned long 
 20189 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 20190 ;; Auto vars:     Size  Location     Type
 20191 ;;  product         4   21[BANK0 ] unsigned long 
 20192 ;; Return value:  Size  Location     Type
 20193 ;;                  4   13[BANK0 ] unsigned long 
 20194 ;; Registers used:
 20195 ;;		wreg, status,2, status,0
 20196 ;; Tracked objects:
 20197 ;;		On entry : 0/0
 20198 ;;		On exit  : 0/0
 20199 ;;		Unchanged: 0/0
 20200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20201 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20204 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20205 ;;Total ram usage:       12 bytes
 20206 ;; Hardware stack levels used:    1
 20207 ;; Hardware stack levels required when called:   11
 20208 ;; This function calls:
 20209 ;;		Nothing
 20210 ;; This function is called by:
 20211 ;;		_get_quot_rem
 20212 ;;		_caltime_to_epoch
 20213 ;;		_RTCC_adjust_time_inc
 20214 ;;		_RTCC_adjust_time_dec
 20215 ;; This function uses a non-reentrant model
 20216 ;;
 20217                           
 20218                           	psect	text88
 20219  015522                     __ptext88:
 20220                           	opt stack 0
 20221  015522                     ___lmul:
 20222                           	opt stack 13
 20223                           
 20224                           ; BSR set to: 0
 20225                           ;incstack = 0
 20226  015522  0E00               	movlw	0
 20227  015524  0100               	movlb	0	; () banked
 20228  015526  6FCA               	movwf	___lmul@product& (0+255),b
 20229  015528  0E00               	movlw	0
 20230  01552A  6FCB               	movwf	(___lmul@product+1)& (0+255),b
 20231  01552C  0E00               	movlw	0
 20232  01552E  6FCC               	movwf	(___lmul@product+2)& (0+255),b
 20233  015530  0E00               	movlw	0
 20234  015532  6FCD               	movwf	(___lmul@product+3)& (0+255),b
 20235  015534                     l9030:
 20236                           
 20237                           ; BSR set to: 0
 20238  015534  0100               	movlb	0	; () banked
 20239  015536  A1C2               	btfss	___lmul@multiplier& (0+255),0,b
 20240  015538  D010               	goto	l9034
 20241                           
 20242                           ; BSR set to: 0
 20243  01553A  0100               	movlb	0	; () banked
 20244  01553C  51C6               	movf	___lmul@multiplicand& (0+255),w,b
 20245  01553E  0100               	movlb	0	; () banked
 20246  015540  27CA               	addwf	___lmul@product& (0+255),f,b
 20247  015542  0100               	movlb	0	; () banked
 20248  015544  51C7               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 20249  015546  0100               	movlb	0	; () banked
 20250  015548  23CB               	addwfc	(___lmul@product+1)& (0+255),f,b
 20251  01554A  0100               	movlb	0	; () banked
 20252  01554C  51C8               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 20253  01554E  0100               	movlb	0	; () banked
 20254  015550  23CC               	addwfc	(___lmul@product+2)& (0+255),f,b
 20255  015552  0100               	movlb	0	; () banked
 20256  015554  51C9               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 20257  015556  0100               	movlb	0	; () banked
 20258  015558  23CD               	addwfc	(___lmul@product+3)& (0+255),f,b
 20259  01555A                     l9034:
 20260                           
 20261                           ; BSR set to: 0
 20262  01555A  0100               	movlb	0	; () banked
 20263  01555C  90D8               	bcf	status,0,c
 20264  01555E  37C6               	rlcf	___lmul@multiplicand& (0+255),f,b
 20265  015560  37C7               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 20266  015562  37C8               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 20267  015564  37C9               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 20268                           
 20269                           ; BSR set to: 0
 20270  015566  0100               	movlb	0	; () banked
 20271  015568  90D8               	bcf	status,0,c
 20272  01556A  33C5               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 20273  01556C  33C4               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 20274  01556E  33C3               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 20275  015570  33C2               	rrcf	___lmul@multiplier& (0+255),f,b
 20276  015572  0100               	movlb	0	; () banked
 20277  015574  51C2               	movf	___lmul@multiplier& (0+255),w,b
 20278  015576  0100               	movlb	0	; () banked
 20279  015578  11C3               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 20280  01557A  0100               	movlb	0	; () banked
 20281  01557C  11C4               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 20282  01557E  0100               	movlb	0	; () banked
 20283  015580  11C5               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 20284  015582  A4D8               	btfss	status,2,c
 20285  015584  D7D7               	goto	l9030
 20286                           
 20287                           ; BSR set to: 0
 20288  015586  C0CA  F0C2         	movff	___lmul@product,?___lmul
 20289  01558A  C0CB  F0C3         	movff	___lmul@product+1,?___lmul+1
 20290  01558E  C0CC  F0C4         	movff	___lmul@product+2,?___lmul+2
 20291  015592  C0CD  F0C5         	movff	___lmul@product+3,?___lmul+3
 20292                           
 20293                           ; BSR set to: 0
 20294  015596  0012               	return		;funcret
 20295  015598                     __end_of___lmul:
 20296                           	opt stack 0
 20297                           tblptru	equ	0xFF8
 20298                           tblptrh	equ	0xFF7
 20299                           tblptrl	equ	0xFF6
 20300                           tablat	equ	0xFF5
 20301                           prodh	equ	0xFF4
 20302                           prodl	equ	0xFF3
 20303                           intcon	equ	0xFF2
 20304                           intcon2	equ	0xFF1
 20305                           postinc0	equ	0xFEE
 20306                           wreg	equ	0xFE8
 20307                           indf1	equ	0xFE7
 20308                           postinc1	equ	0xFE6
 20309                           postdec1	equ	0xFE5
 20310                           fsr1h	equ	0xFE2
 20311                           fsr1l	equ	0xFE1
 20312                           indf2	equ	0xFDF
 20313                           postinc2	equ	0xFDE
 20314                           postdec2	equ	0xFDD
 20315                           plusw2	equ	0xFDB
 20316                           fsr2h	equ	0xFDA
 20317                           fsr2l	equ	0xFD9
 20318                           status	equ	0xFD8
 20319                           
 20320 ;; *************** function _RTCC_to_caltime *****************
 20321 ;; Defined at:
 20322 ;;		line 121 in file "../My_header\My_RTCC.h"
 20323 ;; Parameters:    Size  Location     Type
 20324 ;;  ct              2    2[BANK0 ] PTR struct .
 20325 ;;		 -> caltime_now(7), 
 20326 ;; Auto vars:     Size  Location     Type
 20327 ;;  dumy            1    4[BANK0 ] unsigned char 
 20328 ;; Return value:  Size  Location     Type
 20329 ;;		None               void
 20330 ;; Registers used:
 20331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20332 ;; Tracked objects:
 20333 ;;		On entry : 0/0
 20334 ;;		On exit  : 0/0
 20335 ;;		Unchanged: 0/0
 20336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20341 ;;Total ram usage:        3 bytes
 20342 ;; Hardware stack levels used:    1
 20343 ;; Hardware stack levels required when called:   12
 20344 ;; This function calls:
 20345 ;;		_x_to_d
 20346 ;; This function is called by:
 20347 ;;		_RTCC_from_RTCC
 20348 ;; This function uses a non-reentrant model
 20349 ;;
 20350                           
 20351                           	psect	text89
 20352  014A0C                     __ptext89:
 20353                           	opt stack 0
 20354  014A0C                     _RTCC_to_caltime:
 20355                           	opt stack 14
 20356  014A0C                     l407:
 20357  014A0C  010F               	movlb	15	; () banked
 20358  014A0E  B93F               	btfsc	63,4,b	;volatile
 20359  014A10  D7FD               	goto	l407
 20360                           
 20361                           ; BSR set to: 15
 20362                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 20363  014A12  010F               	movlb	15	; () banked
 20364  014A14  813F               	bsf	63,0,b	;volatile
 20365                           
 20366                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 20367  014A16  010F               	movlb	15	; () banked
 20368  014A18  833F               	bsf	63,1,b	;volatile
 20369                           
 20370                           ; BSR set to: 15
 20371                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 20372  014A1A  0100               	movlb	0	; () banked
 20373  014A1C  EE20 F006          	lfsr	2,6
 20374  014A20  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20375  014A22  26D9               	addwf	fsr2l,f,c
 20376  014A24  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20377  014A26  22DA               	addwfc	fsr2h,f,c
 20378  014A28  010F               	movlb	15	; () banked
 20379  014A2A  513A               	movf	58,w,b	;volatile
 20380  014A2C  ECA6  F0B0         	call	_x_to_d
 20381  014A30  6EDF               	movwf	indf2,c
 20382                           
 20383                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 20384  014A32  CF3B F0B9          	movff	3899,RTCC_to_caltime@dumy	;volatile
 20385                           
 20386                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 20387  014A36  0100               	movlb	0	; () banked
 20388  014A38  EE20 F004          	lfsr	2,4
 20389  014A3C  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20390  014A3E  26D9               	addwf	fsr2l,f,c
 20391  014A40  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20392  014A42  22DA               	addwfc	fsr2h,f,c
 20393  014A44  010F               	movlb	15	; () banked
 20394  014A46  513A               	movf	58,w,b	;volatile
 20395  014A48  ECA6  F0B0         	call	_x_to_d
 20396  014A4C  6EDF               	movwf	indf2,c
 20397                           
 20398                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 20399  014A4E  0100               	movlb	0	; () banked
 20400  014A50  EE20 F005          	lfsr	2,5
 20401  014A54  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20402  014A56  26D9               	addwf	fsr2l,f,c
 20403  014A58  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20404  014A5A  22DA               	addwfc	fsr2h,f,c
 20405  014A5C  010F               	movlb	15	; () banked
 20406  014A5E  513B               	movf	59,w,b	;volatile
 20407  014A60  ECA6  F0B0         	call	_x_to_d
 20408  014A64  6EDF               	movwf	indf2,c
 20409                           
 20410                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 20411  014A66  0100               	movlb	0	; () banked
 20412  014A68  EE20 F002          	lfsr	2,2
 20413  014A6C  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20414  014A6E  26D9               	addwf	fsr2l,f,c
 20415  014A70  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20416  014A72  22DA               	addwfc	fsr2h,f,c
 20417  014A74  010F               	movlb	15	; () banked
 20418  014A76  513A               	movf	58,w,b	;volatile
 20419  014A78  ECA6  F0B0         	call	_x_to_d
 20420  014A7C  6EDF               	movwf	indf2,c
 20421                           
 20422                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 20423  014A7E  0100               	movlb	0	; () banked
 20424  014A80  EE20 F003          	lfsr	2,3
 20425  014A84  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20426  014A86  26D9               	addwf	fsr2l,f,c
 20427  014A88  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20428  014A8A  22DA               	addwfc	fsr2h,f,c
 20429  014A8C  010F               	movlb	15	; () banked
 20430  014A8E  513B               	movf	59,w,b	;volatile
 20431  014A90  ECA6  F0B0         	call	_x_to_d
 20432  014A94  6EDF               	movwf	indf2,c
 20433                           
 20434                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 20435  014A96  010F               	movlb	15	; () banked
 20436  014A98  513A               	movf	58,w,b	;volatile
 20437  014A9A  ECA6  F0B0         	call	_x_to_d
 20438  014A9E  C0B7  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 20439  014AA2  C0B8  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 20440  014AA6  6EDF               	movwf	indf2,c
 20441                           
 20442                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 20443  014AA8  0100               	movlb	0	; () banked
 20444  014AAA  EE20 F001          	lfsr	2,1
 20445  014AAE  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20446  014AB0  26D9               	addwf	fsr2l,f,c
 20447  014AB2  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20448  014AB4  22DA               	addwfc	fsr2h,f,c
 20449  014AB6  010F               	movlb	15	; () banked
 20450  014AB8  513B               	movf	59,w,b	;volatile
 20451  014ABA  ECA6  F0B0         	call	_x_to_d
 20452  014ABE  6EDF               	movwf	indf2,c
 20453  014AC0  0012               	return		;funcret
 20454  014AC2                     __end_of_RTCC_to_caltime:
 20455                           	opt stack 0
 20456                           tblptru	equ	0xFF8
 20457                           tblptrh	equ	0xFF7
 20458                           tblptrl	equ	0xFF6
 20459                           tablat	equ	0xFF5
 20460                           prodh	equ	0xFF4
 20461                           prodl	equ	0xFF3
 20462                           intcon	equ	0xFF2
 20463                           intcon2	equ	0xFF1
 20464                           postinc0	equ	0xFEE
 20465                           wreg	equ	0xFE8
 20466                           indf1	equ	0xFE7
 20467                           postinc1	equ	0xFE6
 20468                           postdec1	equ	0xFE5
 20469                           fsr1h	equ	0xFE2
 20470                           fsr1l	equ	0xFE1
 20471                           indf2	equ	0xFDF
 20472                           postinc2	equ	0xFDE
 20473                           postdec2	equ	0xFDD
 20474                           plusw2	equ	0xFDB
 20475                           fsr2h	equ	0xFDA
 20476                           fsr2l	equ	0xFD9
 20477                           status	equ	0xFD8
 20478                           
 20479 ;; *************** function _x_to_d *****************
 20480 ;; Defined at:
 20481 ;;		line 81 in file "../My_header\My_RTCC.h"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;  hex             1    wreg     unsigned char 
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;  hex             1    1[BANK0 ] unsigned char 
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      unsigned char 
 20488 ;; Registers used:
 20489 ;;		wreg, status,2, status,0, prodl, prodh
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/0
 20492 ;;		On exit  : 0/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20499 ;;Total ram usage:        2 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; Hardware stack levels required when called:   11
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_RTCC_to_caltime
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text90
 20510  01614C                     __ptext90:
 20511                           	opt stack 0
 20512  01614C                     _x_to_d:
 20513                           	opt stack 14
 20514                           
 20515                           ;incstack = 0
 20516                           ;x_to_d@hex stored from wreg
 20517  01614C  0100               	movlb	0	; () banked
 20518  01614E  6FB6               	movwf	x_to_d@hex& (0+255),b
 20519                           
 20520                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 20521  016150  C0B6  F0B5         	movff	x_to_d@hex,??_x_to_d
 20522  016154  0E0F               	movlw	15
 20523  016156  0100               	movlb	0	; () banked
 20524  016158  17B5               	andwf	??_x_to_d& (0+255),f,b
 20525  01615A  0100               	movlb	0	; () banked
 20526  01615C  39B6               	swapf	x_to_d@hex& (0+255),w,b
 20527  01615E  0B0F               	andlw	15
 20528  016160  0B0F               	andlw	15
 20529  016162  0D0A               	mullw	10
 20530  016164  50F3               	movf	prodl,w,c
 20531  016166  0100               	movlb	0	; () banked
 20532  016168  25B5               	addwf	??_x_to_d& (0+255),w,b
 20533  01616A  0012               	return	
 20534  01616C                     __end_of_x_to_d:
 20535                           	opt stack 0
 20536                           tblptru	equ	0xFF8
 20537                           tblptrh	equ	0xFF7
 20538                           tblptrl	equ	0xFF6
 20539                           tablat	equ	0xFF5
 20540                           prodh	equ	0xFF4
 20541                           prodl	equ	0xFF3
 20542                           intcon	equ	0xFF2
 20543                           intcon2	equ	0xFF1
 20544                           postinc0	equ	0xFEE
 20545                           wreg	equ	0xFE8
 20546                           indf1	equ	0xFE7
 20547                           postinc1	equ	0xFE6
 20548                           postdec1	equ	0xFE5
 20549                           fsr1h	equ	0xFE2
 20550                           fsr1l	equ	0xFE1
 20551                           indf2	equ	0xFDF
 20552                           postinc2	equ	0xFDE
 20553                           postdec2	equ	0xFDD
 20554                           plusw2	equ	0xFDB
 20555                           fsr2h	equ	0xFDA
 20556                           fsr2l	equ	0xFD9
 20557                           status	equ	0xFD8
 20558                           
 20559 ;; *************** function _ISR *****************
 20560 ;; Defined at:
 20561 ;;		line 68 in file "main.c"
 20562 ;; Parameters:    Size  Location     Type
 20563 ;;		None
 20564 ;; Auto vars:     Size  Location     Type
 20565 ;;		None
 20566 ;; Return value:  Size  Location     Type
 20567 ;;		None               void
 20568 ;; Registers used:
 20569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20570 ;; Tracked objects:
 20571 ;;		On entry : 0/0
 20572 ;;		On exit  : 0/0
 20573 ;;		Unchanged: 0/0
 20574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20577 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20578 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20579 ;;Total ram usage:       14 bytes
 20580 ;; Hardware stack levels used:    1
 20581 ;; Hardware stack levels required when called:   10
 20582 ;; This function calls:
 20583 ;;		_USB_ISR
 20584 ;;		_charge_time_count
 20585 ;;		_delay_timer_interrupt
 20586 ;;		_integrating
 20587 ;;		_lchika
 20588 ;; This function is called by:
 20589 ;;		Interrupt level 2
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	intcode
 20594  000008                     __pintcode:
 20595                           	opt stack 0
 20596  000008                     _ISR:
 20597                           	opt stack 12
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;incstack = 0
 20601  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20602  00000A  CFFA F01F          	movff	pclath,??_ISR
 20603  00000E  CFFB F020          	movff	pclatu,??_ISR+1
 20604  000012  CFE9 F021          	movff	fsr0l,??_ISR+2
 20605  000016  CFEA F022          	movff	fsr0h,??_ISR+3
 20606  00001A  CFE1 F023          	movff	fsr1l,??_ISR+4
 20607  00001E  CFE2 F024          	movff	fsr1h,??_ISR+5
 20608  000022  CFD9 F025          	movff	fsr2l,??_ISR+6
 20609  000026  CFDA F026          	movff	fsr2h,??_ISR+7
 20610  00002A  CFF3 F027          	movff	prodl,??_ISR+8
 20611  00002E  CFF4 F028          	movff	prodh,??_ISR+9
 20612  000032  CFF6 F029          	movff	tblptrl,??_ISR+10
 20613  000036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 20614  00003A  CFF8 F02B          	movff	tblptru,??_ISR+12
 20615  00003E  CFF5 F02C          	movff	tablat,??_ISR+13
 20616                           
 20617                           ;main.c: 70: USB_ISR();
 20618  000042  EC18  F0B1         	call	_USB_ISR	;wreg free
 20619                           
 20620                           ;main.c: 71: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 20621  000046  B4F2               	btfsc	intcon,2,c	;volatile
 20622  000048  AAF2               	btfss	intcon,5,c	;volatile
 20623  00004A  D00F               	goto	i2l8788
 20624                           
 20625                           ;main.c: 72: INTCONbits.T0IF = 0;
 20626  00004C  94F2               	bcf	intcon,2,c	;volatile
 20627                           
 20628                           ;main.c: 73: static uint16_t cnt_t0;
 20629                           ;main.c: 74: if (cnt_t0) {
 20630  00004E  5033               	movf	ISR@cnt_t0,w,c
 20631  000050  1034               	iorwf	ISR@cnt_t0+1,w,c
 20632  000052  B4D8               	btfsc	status,2,c
 20633  000054  D004               	goto	i2l8784
 20634                           
 20635                           ;main.c: 75: cnt_t0--;
 20636  000056  0633               	decf	ISR@cnt_t0,f,c
 20637  000058  A0D8               	btfss	status,0,c
 20638  00005A  0634               	decf	ISR@cnt_t0+1,f,c
 20639                           
 20640                           ;main.c: 76: } else {
 20641  00005C  D006               	goto	i2l8788
 20642  00005E                     i2l8784:
 20643                           
 20644                           ;main.c: 77: cnt_t0 = 120;
 20645  00005E  0E00               	movlw	0
 20646  000060  6E34               	movwf	ISR@cnt_t0+1,c
 20647  000062  0E78               	movlw	120
 20648  000064  6E33               	movwf	ISR@cnt_t0,c
 20649                           
 20650                           ;main.c: 78: lchika();
 20651  000066  EC98  F09A         	call	_lchika	;wreg free
 20652  00006A                     i2l8788:
 20653                           
 20654                           ;main.c: 79: }
 20655                           ;main.c: 80: }
 20656                           ;main.c: 81: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 20657  00006A  B09E               	btfsc	3998,0,c	;volatile
 20658  00006C  A09D               	btfss	3997,0,c	;volatile
 20659  00006E  D013               	goto	i2l8804
 20660                           
 20661                           ;main.c: 82: PIR1bits.TMR1IF = 0;
 20662  000070  909E               	bcf	3998,0,c	;volatile
 20663                           
 20664                           ;main.c: 83: TMR1H = 0xC0;
 20665  000072  0EC0               	movlw	192
 20666  000074  6ECF               	movwf	4047,c	;volatile
 20667                           
 20668                           ;main.c: 84: cut_time_flag = 1;
 20669  000076  0E01               	movlw	1
 20670  000078  6E4B               	movwf	_cut_time_flag,c
 20671                           
 20672                           ;main.c: 85: static uint8_t cnt_t1 = 0;
 20673                           ;main.c: 86: if (cnt_t1) {
 20674  00007A  503F               	movf	ISR@cnt_t1,w,c
 20675  00007C  B4D8               	btfsc	status,2,c
 20676  00007E  D003               	goto	i2l8798
 20677                           
 20678                           ;main.c: 87: cnt_t1 = 0;
 20679  000080  0E00               	movlw	0
 20680  000082  6E3F               	movwf	ISR@cnt_t1,c
 20681                           
 20682                           ;main.c: 88: } else {
 20683  000084  D008               	goto	i2l8804
 20684  000086                     i2l8798:
 20685                           
 20686                           ;main.c: 89: cnt_t1 = 1;
 20687  000086  0E01               	movlw	1
 20688  000088  6E3F               	movwf	ISR@cnt_t1,c
 20689                           
 20690                           ;main.c: 90: integrating();
 20691  00008A  ECE7  F0A7         	call	_integrating	;wreg free
 20692                           
 20693                           ;main.c: 91: charge_time_count();
 20694  00008E  EC91  F0AD         	call	_charge_time_count	;wreg free
 20695                           
 20696                           ;main.c: 92: display_flag = 1;
 20697  000092  0E01               	movlw	1
 20698  000094  6E4C               	movwf	_display_flag,c
 20699  000096                     i2l8804:
 20700                           
 20701                           ;main.c: 93: }
 20702                           ;main.c: 94: }
 20703                           ;main.c: 95: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 20704  000096  B2A1               	btfsc	4001,1,c	;volatile
 20705  000098  A2A0               	btfss	4000,1,c	;volatile
 20706  00009A  D00A               	goto	i2l903
 20707                           
 20708                           ;main.c: 96: PIR2bits.TMR3IF = 0;
 20709  00009C  92A1               	bcf	4001,1,c	;volatile
 20710                           
 20711                           ;main.c: 97: ctmu_flag = 1;
 20712  00009E  0E01               	movlw	1
 20713  0000A0  0100               	movlb	0	; () banked
 20714  0000A2  6FA3               	movwf	_ctmu_flag& (0+255),b
 20715                           
 20716                           ; BSR set to: 0
 20717                           ;main.c: 98: delay_timer_interrupt(&delay_display);
 20718  0000A4  0E51               	movlw	low _delay_display
 20719  0000A6  6E01               	movwf	delay_timer_interrupt@d,c
 20720  0000A8  0E00               	movlw	high _delay_display
 20721  0000AA  6E02               	movwf	delay_timer_interrupt@d+1,c
 20722  0000AC  EC6D  F0AD         	call	_delay_timer_interrupt	;wreg free
 20723  0000B0                     i2l903:
 20724  0000B0  C02C  FFF5         	movff	??_ISR+13,tablat
 20725  0000B4  C02B  FFF8         	movff	??_ISR+12,tblptru
 20726  0000B8  C02A  FFF7         	movff	??_ISR+11,tblptrh
 20727  0000BC  C029  FFF6         	movff	??_ISR+10,tblptrl
 20728  0000C0  C028  FFF4         	movff	??_ISR+9,prodh
 20729  0000C4  C027  FFF3         	movff	??_ISR+8,prodl
 20730  0000C8  C026  FFDA         	movff	??_ISR+7,fsr2h
 20731  0000CC  C025  FFD9         	movff	??_ISR+6,fsr2l
 20732  0000D0  C024  FFE2         	movff	??_ISR+5,fsr1h
 20733  0000D4  C023  FFE1         	movff	??_ISR+4,fsr1l
 20734  0000D8  C022  FFEA         	movff	??_ISR+3,fsr0h
 20735  0000DC  C021  FFE9         	movff	??_ISR+2,fsr0l
 20736  0000E0  C020  FFFB         	movff	??_ISR+1,pclatu
 20737  0000E4  C01F  FFFA         	movff	??_ISR,pclath
 20738  0000E8  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20739  0000EA  0011               	retfie		f
 20740  0000EC                     __end_of_ISR:
 20741                           	opt stack 0
 20742                           pclatu	equ	0xFFB
 20743                           pclath	equ	0xFFA
 20744                           tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           intcon	equ	0xFF2
 20751                           intcon2	equ	0xFF1
 20752                           postinc0	equ	0xFEE
 20753                           fsr0h	equ	0xFEA
 20754                           fsr0l	equ	0xFE9
 20755                           wreg	equ	0xFE8
 20756                           indf1	equ	0xFE7
 20757                           postinc1	equ	0xFE6
 20758                           postdec1	equ	0xFE5
 20759                           fsr1h	equ	0xFE2
 20760                           fsr1l	equ	0xFE1
 20761                           indf2	equ	0xFDF
 20762                           postinc2	equ	0xFDE
 20763                           postdec2	equ	0xFDD
 20764                           plusw2	equ	0xFDB
 20765                           fsr2h	equ	0xFDA
 20766                           fsr2l	equ	0xFD9
 20767                           status	equ	0xFD8
 20768                           
 20769 ;; *************** function _lchika *****************
 20770 ;; Defined at:
 20771 ;;		line 94 in file "tasks.h"
 20772 ;; Parameters:    Size  Location     Type
 20773 ;;		None
 20774 ;; Auto vars:     Size  Location     Type
 20775 ;;  i               1   11[COMRAM] unsigned char 
 20776 ;; Return value:  Size  Location     Type
 20777 ;;		None               void
 20778 ;; Registers used:
 20779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20780 ;; Tracked objects:
 20781 ;;		On entry : 0/0
 20782 ;;		On exit  : 0/0
 20783 ;;		Unchanged: 0/0
 20784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20787 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20789 ;;Total ram usage:        4 bytes
 20790 ;; Hardware stack levels used:    1
 20791 ;; Hardware stack levels required when called:    1
 20792 ;; This function calls:
 20793 ;;		i2_LED_OUT
 20794 ;;		i2___awdiv
 20795 ;;		i2___lwdiv
 20796 ;; This function is called by:
 20797 ;;		_ISR
 20798 ;; This function uses a non-reentrant model
 20799 ;;
 20800                           
 20801                           	psect	text92
 20802  013530                     __ptext92:
 20803                           	opt stack 0
 20804  013530                     _lchika:
 20805                           	opt stack 20
 20806                           
 20807                           ;tasks.h: 95: uint8_t i;
 20808                           ;tasks.h: 96: static uint8_t cnt[3];
 20809                           ;tasks.h: 97: static uint8_t cntf[3];
 20810                           ;tasks.h: 98: for (i = 0; i < 3; i++) {
 20811                           
 20812                           ;incstack = 0
 20813  013530  0E00               	movlw	0
 20814  013532  6E0C               	movwf	lchika@i,c
 20815  013534                     i2l8358:
 20816  013534  0E02               	movlw	2
 20817  013536  640C               	cpfsgt	lchika@i,c
 20818  013538  D001               	goto	i2l8362
 20819  01353A  0012               	return	
 20820  01353C                     i2l8362:
 20821                           
 20822                           ;tasks.h: 99: cnt[i]++;
 20823  01353C  500C               	movf	lchika@i,w,c
 20824  01353E  0D01               	mullw	1
 20825  013540  0ED5               	movlw	low lchika@cnt
 20826  013542  24F3               	addwf	prodl,w,c
 20827  013544  6ED9               	movwf	fsr2l,c
 20828  013546  0E01               	movlw	high lchika@cnt
 20829  013548  20F4               	addwfc	prodh,w,c
 20830  01354A  6EDA               	movwf	fsr2h,c
 20831  01354C  2ADF               	incf	indf2,f,c
 20832                           
 20833                           ;tasks.h: 100: if (cnt[i] % 2 == 1) {
 20834  01354E  500C               	movf	lchika@i,w,c
 20835  013550  0D01               	mullw	1
 20836  013552  0ED5               	movlw	low lchika@cnt
 20837  013554  24F3               	addwf	prodl,w,c
 20838  013556  6ED9               	movwf	fsr2l,c
 20839  013558  0E01               	movlw	high lchika@cnt
 20840  01355A  20F4               	addwfc	prodh,w,c
 20841  01355C  6EDA               	movwf	fsr2h,c
 20842  01355E  0101               	movlb	1	; () banked
 20843  013560  A0DF               	btfss	indf2,0,c
 20844  013562  D006               	goto	i2l8366
 20845                           
 20846                           ; BSR set to: 1
 20847                           ;tasks.h: 101: LED_OUT(i, 0);
 20848  013564  0E00               	movlw	0
 20849  013566  6E01               	movwf	i2LED_OUT@value,c
 20850  013568  500C               	movf	lchika@i,w,c
 20851  01356A  EC1C  F0AE         	call	i2_LED_OUT
 20852                           
 20853                           ;tasks.h: 102: } else {
 20854  01356E  D05E               	goto	i2l8380
 20855  013570                     i2l8366:
 20856                           
 20857                           ;tasks.h: 103: if (cnt[i] / 2 <= I[i] / 100) {
 20858  013570  500C               	movf	lchika@i,w,c
 20859  013572  0D02               	mullw	2
 20860  013574  0E2D               	movlw	low _I
 20861  013576  24F3               	addwf	prodl,w,c
 20862  013578  6ED9               	movwf	fsr2l,c
 20863  01357A  0E00               	movlw	high _I
 20864  01357C  20F4               	addwfc	prodh,w,c
 20865  01357E  6EDA               	movwf	fsr2h,c
 20866  013580  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 20867  013584  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 20868  013588  0E00               	movlw	0
 20869  01358A  6E04               	movwf	i2___lwdiv@divisor+1,c
 20870  01358C  0E64               	movlw	100
 20871  01358E  6E03               	movwf	i2___lwdiv@divisor,c
 20872  013590  ECD1  F0AC         	call	i2___lwdiv	;wreg free
 20873  013594  C001  F009         	movff	?i2___lwdiv,??_lchika
 20874  013598  C002  F00A         	movff	?i2___lwdiv+1,??_lchika+1
 20875  01359C  500C               	movf	lchika@i,w,c
 20876  01359E  0D01               	mullw	1
 20877  0135A0  0ED5               	movlw	low lchika@cnt
 20878  0135A2  24F3               	addwf	prodl,w,c
 20879  0135A4  6ED9               	movwf	fsr2l,c
 20880  0135A6  0E01               	movlw	high lchika@cnt
 20881  0135A8  20F4               	addwfc	prodh,w,c
 20882  0135AA  6EDA               	movwf	fsr2h,c
 20883  0135AC  50DF               	movf	indf2,w,c
 20884  0135AE  6E0B               	movwf	(??_lchika+2)& (0+255),c
 20885  0135B0  500B               	movf	??_lchika+2,w,c
 20886  0135B2  6E01               	movwf	i2___awdiv@dividend,c
 20887  0135B4  6A02               	clrf	i2___awdiv@dividend+1,c
 20888  0135B6  0E00               	movlw	0
 20889  0135B8  6E04               	movwf	i2___awdiv@divisor+1,c
 20890  0135BA  0E02               	movlw	2
 20891  0135BC  6E03               	movwf	i2___awdiv@divisor,c
 20892  0135BE  EC97  F0A9         	call	i2___awdiv	;wreg free
 20893  0135C2  5001               	movf	?i2___awdiv,w,c
 20894  0135C4  5C09               	subwf	??_lchika,w,c
 20895  0135C6  5002               	movf	?i2___awdiv+1,w,c
 20896  0135C8  580A               	subwfb	??_lchika+1,w,c
 20897  0135CA  A0D8               	btfss	status,0,c
 20898  0135CC  D00C               	goto	i2l8372
 20899                           
 20900                           ;tasks.h: 104: LED_OUT(i, 1);
 20901  0135CE  0E01               	movlw	1
 20902  0135D0  6E01               	movwf	i2LED_OUT@value,c
 20903  0135D2  500C               	movf	lchika@i,w,c
 20904  0135D4  EC1C  F0AE         	call	i2_LED_OUT
 20905                           
 20906                           ;tasks.h: 105: cntf[i] = 0;
 20907  0135D8  500C               	movf	lchika@i,w,c
 20908  0135DA  0D01               	mullw	1
 20909  0135DC  0ED8               	movlw	low lchika@cntf
 20910  0135DE  24F3               	addwf	prodl,w,c
 20911  0135E0  6ED9               	movwf	fsr2l,c
 20912  0135E2  0E01               	movlw	high lchika@cntf
 20913  0135E4  D01F               	goto	L10
 20914  0135E6                     i2l8372:
 20915                           
 20916                           ;tasks.h: 107: cntf[i]++;
 20917  0135E6  500C               	movf	lchika@i,w,c
 20918  0135E8  0D01               	mullw	1
 20919  0135EA  0ED8               	movlw	low lchika@cntf
 20920  0135EC  24F3               	addwf	prodl,w,c
 20921  0135EE  6ED9               	movwf	fsr2l,c
 20922  0135F0  0E01               	movlw	high lchika@cntf
 20923  0135F2  20F4               	addwfc	prodh,w,c
 20924  0135F4  6EDA               	movwf	fsr2h,c
 20925  0135F6  2ADF               	incf	indf2,f,c
 20926                           
 20927                           ;tasks.h: 108: LED_OUT(i, 0);
 20928  0135F8  0E00               	movlw	0
 20929  0135FA  6E01               	movwf	i2LED_OUT@value,c
 20930  0135FC  500C               	movf	lchika@i,w,c
 20931  0135FE  EC1C  F0AE         	call	i2_LED_OUT
 20932                           
 20933                           ;tasks.h: 109: if (cntf[i] >= 2) {
 20934  013602  500C               	movf	lchika@i,w,c
 20935  013604  0D01               	mullw	1
 20936  013606  0ED8               	movlw	low lchika@cntf
 20937  013608  24F3               	addwf	prodl,w,c
 20938  01360A  6ED9               	movwf	fsr2l,c
 20939  01360C  0E01               	movlw	high lchika@cntf
 20940  01360E  20F4               	addwfc	prodh,w,c
 20941  013610  6EDA               	movwf	fsr2h,c
 20942  013612  0E01               	movlw	1
 20943  013614  64DF               	cpfsgt	indf2,c
 20944  013616  D00A               	goto	i2l8380
 20945                           
 20946                           ;tasks.h: 110: cnt[i] = 0;
 20947  013618  500C               	movf	lchika@i,w,c
 20948  01361A  0D01               	mullw	1
 20949  01361C  0ED5               	movlw	low lchika@cnt
 20950  01361E  24F3               	addwf	prodl,w,c
 20951  013620  6ED9               	movwf	fsr2l,c
 20952  013622  0E01               	movlw	high lchika@cnt
 20953  013624                     L10:
 20954  013624  20F4               	addwfc	prodh,w,c
 20955  013626  6EDA               	movwf	fsr2h,c
 20956  013628  0E00               	movlw	0
 20957  01362A  6EDF               	movwf	indf2,c
 20958  01362C                     i2l8380:
 20959  01362C  2A0C               	incf	lchika@i,f,c
 20960  01362E  D782               	goto	i2l8358
 20961  013630                     __end_of_lchika:
 20962                           	opt stack 0
 20963                           pclatu	equ	0xFFB
 20964                           pclath	equ	0xFFA
 20965                           tblptru	equ	0xFF8
 20966                           tblptrh	equ	0xFF7
 20967                           tblptrl	equ	0xFF6
 20968                           tablat	equ	0xFF5
 20969                           prodh	equ	0xFF4
 20970                           prodl	equ	0xFF3
 20971                           intcon	equ	0xFF2
 20972                           intcon2	equ	0xFF1
 20973                           postinc0	equ	0xFEE
 20974                           fsr0h	equ	0xFEA
 20975                           fsr0l	equ	0xFE9
 20976                           wreg	equ	0xFE8
 20977                           indf1	equ	0xFE7
 20978                           postinc1	equ	0xFE6
 20979                           postdec1	equ	0xFE5
 20980                           fsr1h	equ	0xFE2
 20981                           fsr1l	equ	0xFE1
 20982                           indf2	equ	0xFDF
 20983                           postinc2	equ	0xFDE
 20984                           postdec2	equ	0xFDD
 20985                           plusw2	equ	0xFDB
 20986                           fsr2h	equ	0xFDA
 20987                           fsr2l	equ	0xFD9
 20988                           status	equ	0xFD8
 20989                           
 20990 ;; *************** function i2___lwdiv *****************
 20991 ;; Defined at:
 20992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 20993 ;; Parameters:    Size  Location     Type
 20994 ;;  dividend        2    0[COMRAM] unsigned int 
 20995 ;;  divisor         2    2[COMRAM] unsigned int 
 20996 ;; Auto vars:     Size  Location     Type
 20997 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 20998 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 20999 ;; Return value:  Size  Location     Type
 21000 ;;                  2    0[COMRAM] unsigned int 
 21001 ;; Registers used:
 21002 ;;		wreg, status,2, status,0
 21003 ;; Tracked objects:
 21004 ;;		On entry : 0/0
 21005 ;;		On exit  : 0/0
 21006 ;;		Unchanged: 0/0
 21007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21009 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21011 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;Total ram usage:        7 bytes
 21013 ;; Hardware stack levels used:    1
 21014 ;; This function calls:
 21015 ;;		Nothing
 21016 ;; This function is called by:
 21017 ;;		_lchika
 21018 ;; This function uses a non-reentrant model
 21019 ;;
 21020                           
 21021                           	psect	text93
 21022  0159A2                     __ptext93:
 21023                           	opt stack 0
 21024  0159A2                     i2___lwdiv:
 21025                           	opt stack 20
 21026                           
 21027                           ;incstack = 0
 21028  0159A2  0E00               	movlw	0
 21029  0159A4  6E06               	movwf	i2___lwdiv@quotient+1,c
 21030  0159A6  0E00               	movlw	0
 21031  0159A8  6E05               	movwf	i2___lwdiv@quotient,c
 21032  0159AA  5003               	movf	i2___lwdiv@divisor,w,c
 21033  0159AC  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 21034  0159AE  B4D8               	btfsc	status,2,c
 21035  0159B0  D01C               	goto	i2l1905
 21036  0159B2  0E01               	movlw	1
 21037  0159B4  6E07               	movwf	i2___lwdiv@counter,c
 21038  0159B6  D004               	goto	i2l8322
 21039  0159B8                     i2l8320:
 21040  0159B8  90D8               	bcf	status,0,c
 21041  0159BA  3603               	rlcf	i2___lwdiv@divisor,f,c
 21042  0159BC  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 21043  0159BE  2A07               	incf	i2___lwdiv@counter,f,c
 21044  0159C0                     i2l8322:
 21045  0159C0  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 21046  0159C2  D7FA               	goto	i2l8320
 21047  0159C4                     i2l8324:
 21048  0159C4  90D8               	bcf	status,0,c
 21049  0159C6  3605               	rlcf	i2___lwdiv@quotient,f,c
 21050  0159C8  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 21051  0159CA  5003               	movf	i2___lwdiv@divisor,w,c
 21052  0159CC  5C01               	subwf	i2___lwdiv@dividend,w,c
 21053  0159CE  5004               	movf	i2___lwdiv@divisor+1,w,c
 21054  0159D0  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 21055  0159D2  A0D8               	btfss	status,0,c
 21056  0159D4  D005               	goto	i2l8332
 21057  0159D6  5003               	movf	i2___lwdiv@divisor,w,c
 21058  0159D8  5E01               	subwf	i2___lwdiv@dividend,f,c
 21059  0159DA  5004               	movf	i2___lwdiv@divisor+1,w,c
 21060  0159DC  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 21061  0159DE  8005               	bsf	i2___lwdiv@quotient,0,c
 21062  0159E0                     i2l8332:
 21063  0159E0  90D8               	bcf	status,0,c
 21064  0159E2  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 21065  0159E4  3203               	rrcf	i2___lwdiv@divisor,f,c
 21066  0159E6  2E07               	decfsz	i2___lwdiv@counter,f,c
 21067  0159E8  D7ED               	goto	i2l8324
 21068  0159EA                     i2l1905:
 21069  0159EA  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 21070  0159EE  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 21071  0159F2  0012               	return		;funcret
 21072  0159F4                     __end_ofi2___lwdiv:
 21073                           	opt stack 0
 21074                           pclatu	equ	0xFFB
 21075                           pclath	equ	0xFFA
 21076                           tblptru	equ	0xFF8
 21077                           tblptrh	equ	0xFF7
 21078                           tblptrl	equ	0xFF6
 21079                           tablat	equ	0xFF5
 21080                           prodh	equ	0xFF4
 21081                           prodl	equ	0xFF3
 21082                           intcon	equ	0xFF2
 21083                           intcon2	equ	0xFF1
 21084                           postinc0	equ	0xFEE
 21085                           fsr0h	equ	0xFEA
 21086                           fsr0l	equ	0xFE9
 21087                           wreg	equ	0xFE8
 21088                           indf1	equ	0xFE7
 21089                           postinc1	equ	0xFE6
 21090                           postdec1	equ	0xFE5
 21091                           fsr1h	equ	0xFE2
 21092                           fsr1l	equ	0xFE1
 21093                           indf2	equ	0xFDF
 21094                           postinc2	equ	0xFDE
 21095                           postdec2	equ	0xFDD
 21096                           plusw2	equ	0xFDB
 21097                           fsr2h	equ	0xFDA
 21098                           fsr2l	equ	0xFD9
 21099                           status	equ	0xFD8
 21100                           
 21101 ;; *************** function i2___awdiv *****************
 21102 ;; Defined at:
 21103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 21104 ;; Parameters:    Size  Location     Type
 21105 ;;  dividend        2    0[COMRAM] int 
 21106 ;;  divisor         2    2[COMRAM] int 
 21107 ;; Auto vars:     Size  Location     Type
 21108 ;;  __awdiv         2    6[COMRAM] int 
 21109 ;;  __awdiv         1    5[COMRAM] unsigned char 
 21110 ;;  __awdiv         1    4[COMRAM] unsigned char 
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  2    0[COMRAM] int 
 21113 ;; Registers used:
 21114 ;;		wreg, status,2, status,0
 21115 ;; Tracked objects:
 21116 ;;		On entry : 0/0
 21117 ;;		On exit  : 0/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21124 ;;Total ram usage:        8 bytes
 21125 ;; Hardware stack levels used:    1
 21126 ;; This function calls:
 21127 ;;		Nothing
 21128 ;; This function is called by:
 21129 ;;		_lchika
 21130 ;; This function uses a non-reentrant model
 21131 ;;
 21132                           
 21133                           	psect	text94
 21134  01532E                     __ptext94:
 21135                           	opt stack 0
 21136  01532E                     i2___awdiv:
 21137                           	opt stack 20
 21138                           
 21139                           ;incstack = 0
 21140  01532E  0E00               	movlw	0
 21141  015330  6E06               	movwf	i2___awdiv@sign,c
 21142  015332  AE04               	btfss	i2___awdiv@divisor+1,7,c
 21143  015334  D006               	goto	i2l8256
 21144  015336  6C03               	negf	i2___awdiv@divisor,c
 21145  015338  1E04               	comf	i2___awdiv@divisor+1,f,c
 21146  01533A  B0D8               	btfsc	status,0,c
 21147  01533C  2A04               	incf	i2___awdiv@divisor+1,f,c
 21148  01533E  0E01               	movlw	1
 21149  015340  6E06               	movwf	i2___awdiv@sign,c
 21150  015342                     i2l8256:
 21151  015342  AE02               	btfss	i2___awdiv@dividend+1,7,c
 21152  015344  D006               	goto	i2l8262
 21153  015346  6C01               	negf	i2___awdiv@dividend,c
 21154  015348  1E02               	comf	i2___awdiv@dividend+1,f,c
 21155  01534A  B0D8               	btfsc	status,0,c
 21156  01534C  2A02               	incf	i2___awdiv@dividend+1,f,c
 21157  01534E  0E01               	movlw	1
 21158  015350  1A06               	xorwf	i2___awdiv@sign,f,c
 21159  015352                     i2l8262:
 21160  015352  0E00               	movlw	0
 21161  015354  6E08               	movwf	i2___awdiv@quotient+1,c
 21162  015356  0E00               	movlw	0
 21163  015358  6E07               	movwf	i2___awdiv@quotient,c
 21164  01535A  5003               	movf	i2___awdiv@divisor,w,c
 21165  01535C  1004               	iorwf	i2___awdiv@divisor+1,w,c
 21166  01535E  B4D8               	btfsc	status,2,c
 21167  015360  D01C               	goto	i2l8284
 21168  015362  0E01               	movlw	1
 21169  015364  6E05               	movwf	i2___awdiv@counter,c
 21170  015366  D004               	goto	i2l8270
 21171  015368                     i2l8268:
 21172  015368  90D8               	bcf	status,0,c
 21173  01536A  3603               	rlcf	i2___awdiv@divisor,f,c
 21174  01536C  3604               	rlcf	i2___awdiv@divisor+1,f,c
 21175  01536E  2A05               	incf	i2___awdiv@counter,f,c
 21176  015370                     i2l8270:
 21177  015370  AE04               	btfss	i2___awdiv@divisor+1,7,c
 21178  015372  D7FA               	goto	i2l8268
 21179  015374                     i2l8272:
 21180  015374  90D8               	bcf	status,0,c
 21181  015376  3607               	rlcf	i2___awdiv@quotient,f,c
 21182  015378  3608               	rlcf	i2___awdiv@quotient+1,f,c
 21183  01537A  5003               	movf	i2___awdiv@divisor,w,c
 21184  01537C  5C01               	subwf	i2___awdiv@dividend,w,c
 21185  01537E  5004               	movf	i2___awdiv@divisor+1,w,c
 21186  015380  5802               	subwfb	i2___awdiv@dividend+1,w,c
 21187  015382  A0D8               	btfss	status,0,c
 21188  015384  D005               	goto	i2l8280
 21189  015386  5003               	movf	i2___awdiv@divisor,w,c
 21190  015388  5E01               	subwf	i2___awdiv@dividend,f,c
 21191  01538A  5004               	movf	i2___awdiv@divisor+1,w,c
 21192  01538C  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 21193  01538E  8007               	bsf	i2___awdiv@quotient,0,c
 21194  015390                     i2l8280:
 21195  015390  90D8               	bcf	status,0,c
 21196  015392  3204               	rrcf	i2___awdiv@divisor+1,f,c
 21197  015394  3203               	rrcf	i2___awdiv@divisor,f,c
 21198  015396  2E05               	decfsz	i2___awdiv@counter,f,c
 21199  015398  D7ED               	goto	i2l8272
 21200  01539A                     i2l8284:
 21201  01539A  5006               	movf	i2___awdiv@sign,w,c
 21202  01539C  B4D8               	btfsc	status,2,c
 21203  01539E  D004               	goto	i2l8288
 21204  0153A0  6C07               	negf	i2___awdiv@quotient,c
 21205  0153A2  1E08               	comf	i2___awdiv@quotient+1,f,c
 21206  0153A4  B0D8               	btfsc	status,0,c
 21207  0153A6  2A08               	incf	i2___awdiv@quotient+1,f,c
 21208  0153A8                     i2l8288:
 21209  0153A8  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 21210  0153AC  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 21211  0153B0  0012               	return	
 21212  0153B2                     __end_ofi2___awdiv:
 21213                           	opt stack 0
 21214                           pclatu	equ	0xFFB
 21215                           pclath	equ	0xFFA
 21216                           tblptru	equ	0xFF8
 21217                           tblptrh	equ	0xFF7
 21218                           tblptrl	equ	0xFF6
 21219                           tablat	equ	0xFF5
 21220                           prodh	equ	0xFF4
 21221                           prodl	equ	0xFF3
 21222                           intcon	equ	0xFF2
 21223                           intcon2	equ	0xFF1
 21224                           postinc0	equ	0xFEE
 21225                           fsr0h	equ	0xFEA
 21226                           fsr0l	equ	0xFE9
 21227                           wreg	equ	0xFE8
 21228                           indf1	equ	0xFE7
 21229                           postinc1	equ	0xFE6
 21230                           postdec1	equ	0xFE5
 21231                           fsr1h	equ	0xFE2
 21232                           fsr1l	equ	0xFE1
 21233                           indf2	equ	0xFDF
 21234                           postinc2	equ	0xFDE
 21235                           postdec2	equ	0xFDD
 21236                           plusw2	equ	0xFDB
 21237                           fsr2h	equ	0xFDA
 21238                           fsr2l	equ	0xFD9
 21239                           status	equ	0xFD8
 21240                           
 21241 ;; *************** function i2_LED_OUT *****************
 21242 ;; Defined at:
 21243 ;;		line 80 in file "tasks.h"
 21244 ;; Parameters:    Size  Location     Type
 21245 ;;  b               1    wreg     unsigned char 
 21246 ;;  value           1    0[COMRAM] unsigned char 
 21247 ;; Auto vars:     Size  Location     Type
 21248 ;;  b               1    1[COMRAM] unsigned char 
 21249 ;; Return value:  Size  Location     Type
 21250 ;;		None               void
 21251 ;; Registers used:
 21252 ;;		wreg, status,2, status,0
 21253 ;; Tracked objects:
 21254 ;;		On entry : 0/0
 21255 ;;		On exit  : 0/0
 21256 ;;		Unchanged: 0/0
 21257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21258 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21262 ;;Total ram usage:        2 bytes
 21263 ;; Hardware stack levels used:    1
 21264 ;; This function calls:
 21265 ;;		Nothing
 21266 ;; This function is called by:
 21267 ;;		_lchika
 21268 ;; This function uses a non-reentrant model
 21269 ;;
 21270                           
 21271                           	psect	text95
 21272  015C38                     __ptext95:
 21273                           	opt stack 0
 21274  015C38                     i2_LED_OUT:
 21275                           	opt stack 20
 21276                           
 21277                           ;incstack = 0
 21278                           ;i2LED_OUT@b stored from wreg
 21279  015C38  6E02               	movwf	i2LED_OUT@b,c
 21280                           
 21281                           ;tasks.h: 81: switch (b) {
 21282  015C3A  D012               	goto	i2l8246
 21283  015C3C                     i2l627:
 21284                           
 21285                           ;tasks.h: 83: LATB7 = value;
 21286  015C3C  A001               	btfss	i2LED_OUT@value,0,c
 21287  015C3E  D002               	goto	i2u855_40
 21288  015C40  8E8A               	bsf	3978,7,c	;volatile
 21289  015C42  0012               	return	
 21290  015C44                     i2u855_40:
 21291  015C44  9E8A               	bcf	3978,7,c	;volatile
 21292                           
 21293                           ;tasks.h: 84: break;
 21294  015C46  0012               	return	
 21295  015C48                     i2l629:
 21296                           
 21297                           ;tasks.h: 86: LATB6 = value;
 21298  015C48  A001               	btfss	i2LED_OUT@value,0,c
 21299  015C4A  D002               	goto	i2u857_40
 21300  015C4C  8C8A               	bsf	3978,6,c	;volatile
 21301  015C4E  0012               	return	
 21302  015C50                     i2u857_40:
 21303  015C50  9C8A               	bcf	3978,6,c	;volatile
 21304                           
 21305                           ;tasks.h: 87: break;
 21306  015C52  0012               	return	
 21307  015C54                     i2l630:
 21308                           
 21309                           ;tasks.h: 89: LATC2 = value;
 21310  015C54  A001               	btfss	i2LED_OUT@value,0,c
 21311  015C56  D002               	goto	i2u859_40
 21312  015C58  848B               	bsf	3979,2,c	;volatile
 21313  015C5A  0012               	return	
 21314  015C5C                     i2u859_40:
 21315  015C5C  948B               	bcf	3979,2,c	;volatile
 21316                           
 21317                           ;tasks.h: 91: }
 21318                           
 21319                           ;tasks.h: 90: break;
 21320  015C5E  0012               	return	
 21321  015C60                     i2l8246:
 21322  015C60  5002               	movf	i2LED_OUT@b,w,c
 21323                           
 21324                           ; Switch size 1, requested type "space"
 21325                           ; Number of cases is 3, Range of values is 0 to 2
 21326                           ; switch strategies available:
 21327                           ; Name         Instructions Cycles
 21328                           ; simple_byte           10     6 (average)
 21329                           ;	Chosen strategy is simple_byte
 21330  015C62  0A00               	xorlw	0	; case 0
 21331  015C64  B4D8               	btfsc	status,2,c
 21332  015C66  D7EA               	goto	i2l627
 21333  015C68  0A01               	xorlw	1	; case 1
 21334  015C6A  B4D8               	btfsc	status,2,c
 21335  015C6C  D7ED               	goto	i2l629
 21336  015C6E  0A03               	xorlw	3	; case 2
 21337  015C70  A4D8               	btfss	status,2,c
 21338  015C72  0012               	return	
 21339  015C74  D7EF               	goto	i2l630
 21340  015C76                     __end_ofi2_LED_OUT:
 21341                           	opt stack 0
 21342                           pclatu	equ	0xFFB
 21343                           pclath	equ	0xFFA
 21344                           tblptru	equ	0xFF8
 21345                           tblptrh	equ	0xFF7
 21346                           tblptrl	equ	0xFF6
 21347                           tablat	equ	0xFF5
 21348                           prodh	equ	0xFF4
 21349                           prodl	equ	0xFF3
 21350                           intcon	equ	0xFF2
 21351                           intcon2	equ	0xFF1
 21352                           postinc0	equ	0xFEE
 21353                           fsr0h	equ	0xFEA
 21354                           fsr0l	equ	0xFE9
 21355                           wreg	equ	0xFE8
 21356                           indf1	equ	0xFE7
 21357                           postinc1	equ	0xFE6
 21358                           postdec1	equ	0xFE5
 21359                           fsr1h	equ	0xFE2
 21360                           fsr1l	equ	0xFE1
 21361                           indf2	equ	0xFDF
 21362                           postinc2	equ	0xFDE
 21363                           postdec2	equ	0xFDD
 21364                           plusw2	equ	0xFDB
 21365                           fsr2h	equ	0xFDA
 21366                           fsr2l	equ	0xFD9
 21367                           status	equ	0xFD8
 21368                           
 21369 ;; *************** function _integrating *****************
 21370 ;; Defined at:
 21371 ;;		line 133 in file "tasks.h"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;		None
 21374 ;; Auto vars:     Size  Location     Type
 21375 ;;  port            1   15[COMRAM] unsigned char 
 21376 ;; Return value:  Size  Location     Type
 21377 ;;		None               void
 21378 ;; Registers used:
 21379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21380 ;; Tracked objects:
 21381 ;;		On entry : 0/0
 21382 ;;		On exit  : 0/0
 21383 ;;		Unchanged: 0/0
 21384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21389 ;;Total ram usage:        3 bytes
 21390 ;; Hardware stack levels used:    1
 21391 ;; Hardware stack levels required when called:    1
 21392 ;; This function calls:
 21393 ;;		i2___lldiv
 21394 ;; This function is called by:
 21395 ;;		_ISR
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399                           	psect	text96
 21400  014FCE                     __ptext96:
 21401                           	opt stack 0
 21402  014FCE                     _integrating:
 21403                           	opt stack 20
 21404                           
 21405                           ;tasks.h: 134: for (uint8_t port = 0; port < 3; port++) {
 21406                           
 21407                           ;incstack = 0
 21408  014FCE  0E00               	movlw	0
 21409  014FD0  6E10               	movwf	integrating@port,c
 21410  014FD2                     i2l8386:
 21411  014FD2  0E02               	movlw	2
 21412  014FD4  6410               	cpfsgt	integrating@port,c
 21413  014FD6  D001               	goto	i2l8390
 21414  014FD8  0012               	return	
 21415  014FDA                     i2l8390:
 21416                           
 21417                           ;tasks.h: 135: s[port] += I[port];
 21418  014FDA  5010               	movf	integrating@port,w,c
 21419  014FDC  0D02               	mullw	2
 21420  014FDE  0E2D               	movlw	low _I
 21421  014FE0  24F3               	addwf	prodl,w,c
 21422  014FE2  6ED9               	movwf	fsr2l,c
 21423  014FE4  0E00               	movlw	high _I
 21424  014FE6  20F4               	addwfc	prodh,w,c
 21425  014FE8  6EDA               	movwf	fsr2h,c
 21426  014FEA  CFDE F00E          	movff	postinc2,??_integrating
 21427  014FEE  CFDD F00F          	movff	postdec2,??_integrating+1
 21428  014FF2  5010               	movf	integrating@port,w,c
 21429  014FF4  0D04               	mullw	4
 21430  014FF6  0ED7               	movlw	low _s
 21431  014FF8  24F3               	addwf	prodl,w,c
 21432  014FFA  6ED9               	movwf	fsr2l,c
 21433  014FFC  0E02               	movlw	high _s
 21434  014FFE  20F4               	addwfc	prodh,w,c
 21435  015000  6EDA               	movwf	fsr2h,c
 21436  015002  500E               	movf	??_integrating,w,c
 21437  015004  26DE               	addwf	postinc2,f,c
 21438  015006  500F               	movf	??_integrating+1,w,c
 21439  015008  22DE               	addwfc	postinc2,f,c
 21440  01500A  0E00               	movlw	0
 21441  01500C  22DE               	addwfc	postinc2,f,c
 21442  01500E  22DE               	addwfc	postinc2,f,c
 21443                           
 21444                           ;tasks.h: 136: S[port] = s[port] / 3600;
 21445  015010  5010               	movf	integrating@port,w,c
 21446  015012  0D04               	mullw	4
 21447  015014  0ED7               	movlw	low _s
 21448  015016  24F3               	addwf	prodl,w,c
 21449  015018  6ED9               	movwf	fsr2l,c
 21450  01501A  0E02               	movlw	high _s
 21451  01501C  20F4               	addwfc	prodh,w,c
 21452  01501E  6EDA               	movwf	fsr2h,c
 21453  015020  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 21454  015024  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 21455  015028  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 21456  01502C  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 21457  015030  0E10               	movlw	16
 21458  015032  6E05               	movwf	i2___lldiv@divisor,c
 21459  015034  0E0E               	movlw	14
 21460  015036  6E06               	movwf	i2___lldiv@divisor+1,c
 21461  015038  0E00               	movlw	0
 21462  01503A  6E07               	movwf	i2___lldiv@divisor+2,c
 21463  01503C  0E00               	movlw	0
 21464  01503E  6E08               	movwf	i2___lldiv@divisor+3,c
 21465  015040  ECD9  F0A9         	call	i2___lldiv	;wreg free
 21466  015044  5010               	movf	integrating@port,w,c
 21467  015046  0D04               	mullw	4
 21468  015048  0ECB               	movlw	low _S
 21469  01504A  24F3               	addwf	prodl,w,c
 21470  01504C  6ED9               	movwf	fsr2l,c
 21471  01504E  0E02               	movlw	high _S
 21472  015050  20F4               	addwfc	prodh,w,c
 21473  015052  6EDA               	movwf	fsr2h,c
 21474  015054  C001  FFDE         	movff	?i2___lldiv,postinc2
 21475  015058  C002  FFDE         	movff	?i2___lldiv+1,postinc2
 21476  01505C  C003  FFDE         	movff	?i2___lldiv+2,postinc2
 21477  015060  C004  FFDE         	movff	?i2___lldiv+3,postinc2
 21478  015064  2A10               	incf	integrating@port,f,c
 21479  015066  D7B5               	goto	i2l8386
 21480  015068                     __end_of_integrating:
 21481                           	opt stack 0
 21482                           pclatu	equ	0xFFB
 21483                           pclath	equ	0xFFA
 21484                           tblptru	equ	0xFF8
 21485                           tblptrh	equ	0xFF7
 21486                           tblptrl	equ	0xFF6
 21487                           tablat	equ	0xFF5
 21488                           prodh	equ	0xFF4
 21489                           prodl	equ	0xFF3
 21490                           intcon	equ	0xFF2
 21491                           intcon2	equ	0xFF1
 21492                           postinc0	equ	0xFEE
 21493                           fsr0h	equ	0xFEA
 21494                           fsr0l	equ	0xFE9
 21495                           wreg	equ	0xFE8
 21496                           indf1	equ	0xFE7
 21497                           postinc1	equ	0xFE6
 21498                           postdec1	equ	0xFE5
 21499                           fsr1h	equ	0xFE2
 21500                           fsr1l	equ	0xFE1
 21501                           indf2	equ	0xFDF
 21502                           postinc2	equ	0xFDE
 21503                           postdec2	equ	0xFDD
 21504                           plusw2	equ	0xFDB
 21505                           fsr2h	equ	0xFDA
 21506                           fsr2l	equ	0xFD9
 21507                           status	equ	0xFD8
 21508                           
 21509 ;; *************** function i2___lldiv *****************
 21510 ;; Defined at:
 21511 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 21512 ;; Parameters:    Size  Location     Type
 21513 ;;  dividend        4    0[COMRAM] unsigned long 
 21514 ;;  divisor         4    4[COMRAM] unsigned long 
 21515 ;; Auto vars:     Size  Location     Type
 21516 ;;  __lldiv         4    8[COMRAM] unsigned long 
 21517 ;;  __lldiv         1   12[COMRAM] unsigned char 
 21518 ;; Return value:  Size  Location     Type
 21519 ;;                  4    0[COMRAM] unsigned long 
 21520 ;; Registers used:
 21521 ;;		wreg, status,2, status,0
 21522 ;; Tracked objects:
 21523 ;;		On entry : 0/0
 21524 ;;		On exit  : 0/0
 21525 ;;		Unchanged: 0/0
 21526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21528 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21530 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21531 ;;Total ram usage:       13 bytes
 21532 ;; Hardware stack levels used:    1
 21533 ;; This function calls:
 21534 ;;		Nothing
 21535 ;; This function is called by:
 21536 ;;		_integrating
 21537 ;; This function uses a non-reentrant model
 21538 ;;
 21539                           
 21540                           	psect	text97
 21541  0153B2                     __ptext97:
 21542                           	opt stack 0
 21543  0153B2                     i2___lldiv:
 21544                           	opt stack 20
 21545                           
 21546                           ;incstack = 0
 21547  0153B2  0E00               	movlw	0
 21548  0153B4  6E09               	movwf	i2___lldiv@quotient,c
 21549  0153B6  0E00               	movlw	0
 21550  0153B8  6E0A               	movwf	i2___lldiv@quotient+1,c
 21551  0153BA  0E00               	movlw	0
 21552  0153BC  6E0B               	movwf	i2___lldiv@quotient+2,c
 21553  0153BE  0E00               	movlw	0
 21554  0153C0  6E0C               	movwf	i2___lldiv@quotient+3,c
 21555  0153C2  5005               	movf	i2___lldiv@divisor,w,c
 21556  0153C4  1006               	iorwf	i2___lldiv@divisor+1,w,c
 21557  0153C6  1007               	iorwf	i2___lldiv@divisor+2,w,c
 21558  0153C8  1008               	iorwf	i2___lldiv@divisor+3,w,c
 21559  0153CA  B4D8               	btfsc	status,2,c
 21560  0153CC  D02A               	goto	i2l1852
 21561  0153CE  0E01               	movlw	1
 21562  0153D0  6E0D               	movwf	i2___lldiv@counter,c
 21563  0153D2  D006               	goto	i2l8300
 21564  0153D4                     i2l8298:
 21565  0153D4  90D8               	bcf	status,0,c
 21566  0153D6  3605               	rlcf	i2___lldiv@divisor,f,c
 21567  0153D8  3606               	rlcf	i2___lldiv@divisor+1,f,c
 21568  0153DA  3607               	rlcf	i2___lldiv@divisor+2,f,c
 21569  0153DC  3608               	rlcf	i2___lldiv@divisor+3,f,c
 21570  0153DE  2A0D               	incf	i2___lldiv@counter,f,c
 21571  0153E0                     i2l8300:
 21572  0153E0  AE08               	btfss	i2___lldiv@divisor+3,7,c
 21573  0153E2  D7F8               	goto	i2l8298
 21574  0153E4                     i2l8302:
 21575  0153E4  90D8               	bcf	status,0,c
 21576  0153E6  3609               	rlcf	i2___lldiv@quotient,f,c
 21577  0153E8  360A               	rlcf	i2___lldiv@quotient+1,f,c
 21578  0153EA  360B               	rlcf	i2___lldiv@quotient+2,f,c
 21579  0153EC  360C               	rlcf	i2___lldiv@quotient+3,f,c
 21580  0153EE  5005               	movf	i2___lldiv@divisor,w,c
 21581  0153F0  5C01               	subwf	i2___lldiv@dividend,w,c
 21582  0153F2  5006               	movf	i2___lldiv@divisor+1,w,c
 21583  0153F4  5802               	subwfb	i2___lldiv@dividend+1,w,c
 21584  0153F6  5007               	movf	i2___lldiv@divisor+2,w,c
 21585  0153F8  5803               	subwfb	i2___lldiv@dividend+2,w,c
 21586  0153FA  5008               	movf	i2___lldiv@divisor+3,w,c
 21587  0153FC  5804               	subwfb	i2___lldiv@dividend+3,w,c
 21588  0153FE  A0D8               	btfss	status,0,c
 21589  015400  D009               	goto	i2l8310
 21590  015402  5005               	movf	i2___lldiv@divisor,w,c
 21591  015404  5E01               	subwf	i2___lldiv@dividend,f,c
 21592  015406  5006               	movf	i2___lldiv@divisor+1,w,c
 21593  015408  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 21594  01540A  5007               	movf	i2___lldiv@divisor+2,w,c
 21595  01540C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 21596  01540E  5008               	movf	i2___lldiv@divisor+3,w,c
 21597  015410  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 21598  015412  8009               	bsf	i2___lldiv@quotient,0,c
 21599  015414                     i2l8310:
 21600  015414  90D8               	bcf	status,0,c
 21601  015416  3208               	rrcf	i2___lldiv@divisor+3,f,c
 21602  015418  3207               	rrcf	i2___lldiv@divisor+2,f,c
 21603  01541A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 21604  01541C  3205               	rrcf	i2___lldiv@divisor,f,c
 21605  01541E  2E0D               	decfsz	i2___lldiv@counter,f,c
 21606  015420  D7E1               	goto	i2l8302
 21607  015422                     i2l1852:
 21608  015422  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 21609  015426  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 21610  01542A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 21611  01542E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 21612  015432  0012               	return		;funcret
 21613  015434                     __end_ofi2___lldiv:
 21614                           	opt stack 0
 21615                           pclatu	equ	0xFFB
 21616                           pclath	equ	0xFFA
 21617                           tblptru	equ	0xFF8
 21618                           tblptrh	equ	0xFF7
 21619                           tblptrl	equ	0xFF6
 21620                           tablat	equ	0xFF5
 21621                           prodh	equ	0xFF4
 21622                           prodl	equ	0xFF3
 21623                           intcon	equ	0xFF2
 21624                           intcon2	equ	0xFF1
 21625                           postinc0	equ	0xFEE
 21626                           fsr0h	equ	0xFEA
 21627                           fsr0l	equ	0xFE9
 21628                           wreg	equ	0xFE8
 21629                           indf1	equ	0xFE7
 21630                           postinc1	equ	0xFE6
 21631                           postdec1	equ	0xFE5
 21632                           fsr1h	equ	0xFE2
 21633                           fsr1l	equ	0xFE1
 21634                           indf2	equ	0xFDF
 21635                           postinc2	equ	0xFDE
 21636                           postdec2	equ	0xFDD
 21637                           plusw2	equ	0xFDB
 21638                           fsr2h	equ	0xFDA
 21639                           fsr2l	equ	0xFD9
 21640                           status	equ	0xFD8
 21641                           
 21642 ;; *************** function _delay_timer_interrupt *****************
 21643 ;; Defined at:
 21644 ;;		line 344 in file "../My_header\My_header.h"
 21645 ;; Parameters:    Size  Location     Type
 21646 ;;  d               2    0[COMRAM] PTR struct Delay
 21647 ;;		 -> delay_display(3), 
 21648 ;; Auto vars:     Size  Location     Type
 21649 ;;		None
 21650 ;; Return value:  Size  Location     Type
 21651 ;;		None               void
 21652 ;; Registers used:
 21653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21654 ;; Tracked objects:
 21655 ;;		On entry : 0/0
 21656 ;;		On exit  : 0/0
 21657 ;;		Unchanged: 0/0
 21658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21663 ;;Total ram usage:        4 bytes
 21664 ;; Hardware stack levels used:    1
 21665 ;; This function calls:
 21666 ;;		Nothing
 21667 ;; This function is called by:
 21668 ;;		_ISR
 21669 ;; This function uses a non-reentrant model
 21670 ;;
 21671                           
 21672                           	psect	text98
 21673  015ADA                     __ptext98:
 21674                           	opt stack 0
 21675  015ADA                     _delay_timer_interrupt:
 21676                           	opt stack 21
 21677                           
 21678                           ;My_header\My_header.h: 345: if (d->cnt == 1)d->flag = 1;
 21679                           
 21680                           ;incstack = 0
 21681  015ADA  EE20 F001          	lfsr	2,1
 21682  015ADE  5001               	movf	delay_timer_interrupt@d,w,c
 21683  015AE0  26D9               	addwf	fsr2l,f,c
 21684  015AE2  5002               	movf	delay_timer_interrupt@d+1,w,c
 21685  015AE4  22DA               	addwfc	fsr2h,f,c
 21686  015AE6  04DE               	decf	postinc2,w,c
 21687  015AE8  10DE               	iorwf	postinc2,w,c
 21688  015AEA  A4D8               	btfss	status,2,c
 21689  015AEC  D006               	goto	i2l8340
 21690  015AEE  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 21691  015AF2  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 21692  015AF6  0E01               	movlw	1
 21693  015AF8  6EDF               	movwf	indf2,c
 21694  015AFA                     i2l8340:
 21695                           
 21696                           ;My_header\My_header.h: 346: if (d->cnt)d->cnt--;
 21697  015AFA  EE20 F001          	lfsr	2,1
 21698  015AFE  5001               	movf	delay_timer_interrupt@d,w,c
 21699  015B00  26D9               	addwf	fsr2l,f,c
 21700  015B02  5002               	movf	delay_timer_interrupt@d+1,w,c
 21701  015B04  22DA               	addwfc	fsr2h,f,c
 21702  015B06  50DE               	movf	postinc2,w,c
 21703  015B08  10DE               	iorwf	postinc2,w,c
 21704  015B0A  B4D8               	btfsc	status,2,c
 21705  015B0C  0012               	return	
 21706  015B0E  EE20 F001          	lfsr	2,1
 21707  015B12  5001               	movf	delay_timer_interrupt@d,w,c
 21708  015B14  26D9               	addwf	fsr2l,f,c
 21709  015B16  5002               	movf	delay_timer_interrupt@d+1,w,c
 21710  015B18  22DA               	addwfc	fsr2h,f,c
 21711  015B1A  06DE               	decf	postinc2,f,c
 21712  015B1C  0E00               	movlw	0
 21713  015B1E  5ADD               	subwfb	postdec2,f,c
 21714  015B20  0012               	return	
 21715  015B22                     __end_of_delay_timer_interrupt:
 21716                           	opt stack 0
 21717                           pclatu	equ	0xFFB
 21718                           pclath	equ	0xFFA
 21719                           tblptru	equ	0xFF8
 21720                           tblptrh	equ	0xFF7
 21721                           tblptrl	equ	0xFF6
 21722                           tablat	equ	0xFF5
 21723                           prodh	equ	0xFF4
 21724                           prodl	equ	0xFF3
 21725                           intcon	equ	0xFF2
 21726                           intcon2	equ	0xFF1
 21727                           postinc0	equ	0xFEE
 21728                           fsr0h	equ	0xFEA
 21729                           fsr0l	equ	0xFE9
 21730                           wreg	equ	0xFE8
 21731                           indf1	equ	0xFE7
 21732                           postinc1	equ	0xFE6
 21733                           postdec1	equ	0xFE5
 21734                           fsr1h	equ	0xFE2
 21735                           fsr1l	equ	0xFE1
 21736                           indf2	equ	0xFDF
 21737                           postinc2	equ	0xFDE
 21738                           postdec2	equ	0xFDD
 21739                           plusw2	equ	0xFDB
 21740                           fsr2h	equ	0xFDA
 21741                           fsr2l	equ	0xFD9
 21742                           status	equ	0xFD8
 21743                           
 21744 ;; *************** function _charge_time_count *****************
 21745 ;; Defined at:
 21746 ;;		line 140 in file "tasks.h"
 21747 ;; Parameters:    Size  Location     Type
 21748 ;;		None
 21749 ;; Auto vars:     Size  Location     Type
 21750 ;;  i               1    2[COMRAM] unsigned char 
 21751 ;; Return value:  Size  Location     Type
 21752 ;;		None               void
 21753 ;; Registers used:
 21754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/0
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21764 ;;Total ram usage:        3 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; This function calls:
 21767 ;;		Nothing
 21768 ;; This function is called by:
 21769 ;;		_ISR
 21770 ;; This function uses a non-reentrant model
 21771 ;;
 21772                           
 21773                           	psect	text99
 21774  015B22                     __ptext99:
 21775                           	opt stack 0
 21776  015B22                     _charge_time_count:
 21777                           	opt stack 21
 21778                           
 21779                           ;tasks.h: 141: uint8_t i;
 21780                           ;tasks.h: 142: for (i = 0; i < 3; i++) {
 21781                           
 21782                           ;incstack = 0
 21783  015B22  0E00               	movlw	0
 21784  015B24  6E03               	movwf	charge_time_count@i,c
 21785  015B26                     i2l8400:
 21786  015B26  0E02               	movlw	2
 21787  015B28  6403               	cpfsgt	charge_time_count@i,c
 21788  015B2A  D001               	goto	i2l8404
 21789  015B2C  0012               	return	
 21790  015B2E                     i2l8404:
 21791                           
 21792                           ;tasks.h: 143: if (I[i] > 100)charge_time[i]++;
 21793  015B2E  5003               	movf	charge_time_count@i,w,c
 21794  015B30  0D02               	mullw	2
 21795  015B32  0E2D               	movlw	low _I
 21796  015B34  24F3               	addwf	prodl,w,c
 21797  015B36  6ED9               	movwf	fsr2l,c
 21798  015B38  0E00               	movlw	high _I
 21799  015B3A  20F4               	addwfc	prodh,w,c
 21800  015B3C  6EDA               	movwf	fsr2h,c
 21801  015B3E  0E01               	movlw	1
 21802  015B40  50DB               	movf	plusw2,w,c
 21803  015B42  E104               	bnz	i2u885_40
 21804  015B44  0E65               	movlw	101
 21805  015B46  5CDE               	subwf	postinc2,w,c
 21806  015B48  A0D8               	btfss	status,0,c
 21807  015B4A  D00D               	goto	i2l8408
 21808  015B4C                     i2u885_40:
 21809  015B4C  5003               	movf	charge_time_count@i,w,c
 21810  015B4E  0D04               	mullw	4
 21811  015B50  0E60               	movlw	low _charge_time
 21812  015B52  24F3               	addwf	prodl,w,c
 21813  015B54  6ED9               	movwf	fsr2l,c
 21814  015B56  0E00               	movlw	high _charge_time
 21815  015B58  20F4               	addwfc	prodh,w,c
 21816  015B5A  6EDA               	movwf	fsr2h,c
 21817  015B5C  2ADE               	incf	postinc2,f,c
 21818  015B5E  0E00               	movlw	0
 21819  015B60  22DE               	addwfc	postinc2,f,c
 21820  015B62  22DE               	addwfc	postinc2,f,c
 21821  015B64  22DE               	addwfc	postinc2,f,c
 21822  015B66                     i2l8408:
 21823  015B66  2A03               	incf	charge_time_count@i,f,c
 21824  015B68  D7DE               	goto	i2l8400
 21825  015B6A                     __end_of_charge_time_count:
 21826                           	opt stack 0
 21827                           pclatu	equ	0xFFB
 21828                           pclath	equ	0xFFA
 21829                           tblptru	equ	0xFF8
 21830                           tblptrh	equ	0xFF7
 21831                           tblptrl	equ	0xFF6
 21832                           tablat	equ	0xFF5
 21833                           prodh	equ	0xFF4
 21834                           prodl	equ	0xFF3
 21835                           intcon	equ	0xFF2
 21836                           intcon2	equ	0xFF1
 21837                           postinc0	equ	0xFEE
 21838                           fsr0h	equ	0xFEA
 21839                           fsr0l	equ	0xFE9
 21840                           wreg	equ	0xFE8
 21841                           indf1	equ	0xFE7
 21842                           postinc1	equ	0xFE6
 21843                           postdec1	equ	0xFE5
 21844                           fsr1h	equ	0xFE2
 21845                           fsr1l	equ	0xFE1
 21846                           indf2	equ	0xFDF
 21847                           postinc2	equ	0xFDE
 21848                           postdec2	equ	0xFDD
 21849                           plusw2	equ	0xFDB
 21850                           fsr2h	equ	0xFDA
 21851                           fsr2l	equ	0xFD9
 21852                           status	equ	0xFD8
 21853                           
 21854 ;; *************** function _USB_ISR *****************
 21855 ;; Defined at:
 21856 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 21857 ;; Parameters:    Size  Location     Type
 21858 ;;		None
 21859 ;; Auto vars:     Size  Location     Type
 21860 ;;		None
 21861 ;; Return value:  Size  Location     Type
 21862 ;;		None               void
 21863 ;; Registers used:
 21864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21865 ;; Tracked objects:
 21866 ;;		On entry : 0/0
 21867 ;;		On exit  : 0/0
 21868 ;;		Unchanged: 0/0
 21869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21874 ;;Total ram usage:        0 bytes
 21875 ;; Hardware stack levels used:    1
 21876 ;; Hardware stack levels required when called:    9
 21877 ;; This function calls:
 21878 ;;		_USBDeviceTasks
 21879 ;; This function is called by:
 21880 ;;		_ISR
 21881 ;; This function uses a non-reentrant model
 21882 ;;
 21883                           
 21884                           	psect	text100
 21885  016230                     __ptext100:
 21886                           	opt stack 0
 21887  016230                     _USB_ISR:
 21888                           	opt stack 12
 21889                           
 21890                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 21891                           
 21892                           ;incstack = 0
 21893  016230  EC12  F096         	call	_USBDeviceTasks	;wreg free
 21894  016234  0012               	return		;funcret
 21895  016236                     __end_of_USB_ISR:
 21896                           	opt stack 0
 21897                           pclatu	equ	0xFFB
 21898                           pclath	equ	0xFFA
 21899                           tblptru	equ	0xFF8
 21900                           tblptrh	equ	0xFF7
 21901                           tblptrl	equ	0xFF6
 21902                           tablat	equ	0xFF5
 21903                           prodh	equ	0xFF4
 21904                           prodl	equ	0xFF3
 21905                           intcon	equ	0xFF2
 21906                           intcon2	equ	0xFF1
 21907                           postinc0	equ	0xFEE
 21908                           fsr0h	equ	0xFEA
 21909                           fsr0l	equ	0xFE9
 21910                           wreg	equ	0xFE8
 21911                           indf1	equ	0xFE7
 21912                           postinc1	equ	0xFE6
 21913                           postdec1	equ	0xFE5
 21914                           fsr1h	equ	0xFE2
 21915                           fsr1l	equ	0xFE1
 21916                           indf2	equ	0xFDF
 21917                           postinc2	equ	0xFDE
 21918                           postdec2	equ	0xFDD
 21919                           plusw2	equ	0xFDB
 21920                           fsr2h	equ	0xFDA
 21921                           fsr2l	equ	0xFD9
 21922                           status	equ	0xFD8
 21923                           
 21924 ;; *************** function _USBDeviceTasks *****************
 21925 ;; Defined at:
 21926 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 21927 ;; Parameters:    Size  Location     Type
 21928 ;;		None
 21929 ;; Auto vars:     Size  Location     Type
 21930 ;;  i               1   29[COMRAM] unsigned char 
 21931 ;; Return value:  Size  Location     Type
 21932 ;;		None               void
 21933 ;; Registers used:
 21934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21935 ;; Tracked objects:
 21936 ;;		On entry : 0/0
 21937 ;;		On exit  : 0/0
 21938 ;;		Unchanged: 0/0
 21939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21944 ;;Total ram usage:        1 bytes
 21945 ;; Hardware stack levels used:    1
 21946 ;; Hardware stack levels required when called:    8
 21947 ;; This function calls:
 21948 ;;		_USBCtrlEPAllowStatusStage
 21949 ;;		_USBCtrlEPService
 21950 ;;		_USBStallHandler
 21951 ;;		_USBSuspend
 21952 ;;		_USBWakeFromSuspend
 21953 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21954 ;;		i2_USBDeviceInit
 21955 ;; This function is called by:
 21956 ;;		_USB_ISR
 21957 ;; This function uses a non-reentrant model
 21958 ;;
 21959                           
 21960                           	psect	text101
 21961  012C24                     __ptext101:
 21962                           	opt stack 0
 21963  012C24                     _USBDeviceTasks:
 21964                           	opt stack 12
 21965                           
 21966                           ;usb_device.c: 491: uint8_t i;
 21967                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 21968                           
 21969                           ;incstack = 0
 21970  012C24  0445               	decf	_USBDeviceState,w,c	;volatile
 21971  012C26  B4D8               	btfsc	status,2,c
 21972                           
 21973                           ;usb_device.c: 603: {
 21974                           ;usb_device.c: 613: if(!UCONbits.SE0)
 21975  012C28  BA65               	btfsc	3941,5,c	;volatile
 21976  012C2A  D008               	goto	i2l8150
 21977                           
 21978                           ;usb_device.c: 614: {
 21979                           ;usb_device.c: 615: {UIR = 0;};
 21980  012C2C  0E00               	movlw	0
 21981  012C2E  6E62               	movwf	3938,c	;volatile
 21982                           
 21983                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 21984  012C30  010F               	movlb	15	; () banked
 21985  012C32  8136               	bsf	54,0,b	;volatile
 21986                           
 21987                           ; BSR set to: 15
 21988                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 21989  012C34  010F               	movlb	15	; () banked
 21990  012C36  8936               	bsf	54,4,b	;volatile
 21991                           
 21992                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 21993  012C38  0E02               	movlw	2
 21994  012C3A  6E45               	movwf	_USBDeviceState,c	;volatile
 21995  012C3C                     i2l8150:
 21996                           
 21997                           ;usb_device.c: 622: }
 21998                           ;usb_device.c: 623: }
 21999                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 22000  012C3C  A462               	btfss	3938,2,c	;volatile
 22001  012C3E  D006               	goto	i2l8158
 22002  012C40  010F               	movlb	15	; () banked
 22003  012C42  A536               	btfss	54,2,b	;volatile
 22004  012C44  D003               	goto	i2l8158
 22005                           
 22006                           ; BSR set to: 15
 22007                           ;usb_device.c: 640: {
 22008                           ;usb_device.c: 641: (UIR &= 0xFB);
 22009  012C46  9462               	bcf	3938,2,c	;volatile
 22010                           
 22011                           ; BSR set to: 15
 22012                           ;usb_device.c: 645: USBWakeFromSuspend();
 22013  012C48  EC1A  F0AF         	call	_USBWakeFromSuspend	;wreg free
 22014  012C4C                     i2l8158:
 22015                           
 22016                           ;usb_device.c: 647: }
 22017                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 22018  012C4C  A265               	btfss	3941,1,c	;volatile
 22019  012C4E  D002               	goto	i2l1125
 22020                           
 22021                           ;usb_device.c: 653: {
 22022                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 22023  012C50  98A1               	bcf	4001,4,c	;volatile
 22024                           
 22025                           ;usb_device.c: 655: return;
 22026  012C52  0012               	return	
 22027  012C54                     i2l1125:
 22028                           
 22029                           ;usb_device.c: 656: }
 22030                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 22031  012C54  A062               	btfss	3938,0,c	;volatile
 22032  012C56  D009               	goto	i2l8172
 22033  012C58  010F               	movlb	15	; () banked
 22034  012C5A  A136               	btfss	54,0,b	;volatile
 22035  012C5C  D006               	goto	i2l8172
 22036                           
 22037                           ; BSR set to: 15
 22038                           ;usb_device.c: 669: {
 22039                           ;usb_device.c: 670: USBDeviceInit();
 22040  012C5E  ECB5  F096         	call	i2_USBDeviceInit	;wreg free
 22041                           
 22042                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 22043  012C62  88A0               	bsf	4000,4,c	;volatile
 22044                           
 22045                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 22046  012C64  0E04               	movlw	4
 22047  012C66  6E45               	movwf	_USBDeviceState,c	;volatile
 22048                           
 22049                           ;usb_device.c: 686: (UIR &= 0xFE);
 22050  012C68  9062               	bcf	3938,0,c	;volatile
 22051  012C6A                     i2l8172:
 22052                           
 22053                           ;usb_device.c: 687: }
 22054                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 22055  012C6A  A862               	btfss	3938,4,c	;volatile
 22056  012C6C  D006               	goto	i2l8180
 22057  012C6E  010F               	movlb	15	; () banked
 22058  012C70  A936               	btfss	54,4,b	;volatile
 22059  012C72  D003               	goto	i2l8180
 22060                           
 22061                           ; BSR set to: 15
 22062                           ;usb_device.c: 693: {
 22063                           ;usb_device.c: 698: USBSuspend();
 22064  012C74  ECE8  F0AF         	call	_USBSuspend	;wreg free
 22065                           
 22066                           ;usb_device.c: 701: (UIR &= 0xEF);
 22067  012C78  9862               	bcf	3938,4,c	;volatile
 22068  012C7A                     i2l8180:
 22069                           
 22070                           ;usb_device.c: 702: }
 22071                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 22072  012C7A  AC62               	btfss	3938,6,c	;volatile
 22073  012C7C  D019               	goto	i2l8196
 22074                           
 22075                           ;usb_device.c: 705: {
 22076                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 22077  012C7E  010F               	movlb	15	; () banked
 22078  012C80  AD36               	btfss	54,6,b	;volatile
 22079  012C82  D00E               	goto	i2l8186
 22080                           
 22081                           ; BSR set to: 15
 22082                           ;usb_device.c: 707: {
 22083                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 22084  012C84  0E00               	movlw	0
 22085  012C86  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22086  012C88  0E73               	movlw	115
 22087  012C8A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22088  012C8C  0E00               	movlw	0
 22089  012C8E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22090  012C90  0E00               	movlw	0
 22091  012C92  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22092  012C94  0E00               	movlw	0
 22093  012C96  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22094  012C98  0E01               	movlw	1
 22095  012C9A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22096  012C9C  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22097  012CA0                     i2l8186:
 22098                           
 22099                           ;usb_device.c: 709: }
 22100                           ;usb_device.c: 710: (UIR &= 0xBF);
 22101  012CA0  9C62               	bcf	3938,6,c	;volatile
 22102                           
 22103                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 22104  012CA2  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 22105  012CA4  A4D8               	btfss	status,2,c
 22106                           
 22107                           ;usb_device.c: 736: {
 22108                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 22109  012CA6  0648               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 22110                           
 22111                           ;usb_device.c: 738: }
 22112                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 22113  012CA8  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 22114  012CAA  B4D8               	btfsc	status,2,c
 22115                           
 22116                           ;usb_device.c: 745: {
 22117                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 22118  012CAC  EC6A  F0A2         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22119  012CB0                     i2l8196:
 22120                           
 22121                           ;usb_device.c: 747: }
 22122                           ;usb_device.c: 749: }
 22123                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 22124  012CB0  AA62               	btfss	3938,5,c	;volatile
 22125  012CB2  D004               	goto	i2l8202
 22126  012CB4  010F               	movlb	15	; () banked
 22127  012CB6  BB36               	btfsc	54,5,b	;volatile
 22128                           
 22129                           ; BSR set to: 15
 22130                           ;usb_device.c: 752: {
 22131                           ;usb_device.c: 753: USBStallHandler();
 22132  012CB8  ECD8  F0AD         	call	_USBStallHandler	;wreg free
 22133  012CBC                     i2l8202:
 22134                           
 22135                           ;usb_device.c: 754: }
 22136                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 22137  012CBC  A262               	btfss	3938,1,c	;volatile
 22138  012CBE  D012               	goto	i2l8210
 22139  012CC0  010F               	movlb	15	; () banked
 22140  012CC2  A336               	btfss	54,1,b	;volatile
 22141  012CC4  D00F               	goto	i2l8210
 22142                           
 22143                           ; BSR set to: 15
 22144                           ;usb_device.c: 757: {
 22145                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 22146  012CC6  0E7F               	movlw	127
 22147  012CC8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22148  012CCA  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22149  012CCC  0E00               	movlw	0
 22150  012CCE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22151  012CD0  0E00               	movlw	0
 22152  012CD2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22153  012CD4  0E00               	movlw	0
 22154  012CD6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22155  012CD8  0E01               	movlw	1
 22156  012CDA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22157  012CDC  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22158                           
 22159                           ;usb_device.c: 759: {UEIR = 0;};
 22160  012CE0  0E00               	movlw	0
 22161  012CE2  6E63               	movwf	3939,c	;volatile
 22162  012CE4                     i2l8210:
 22163                           
 22164                           ;usb_device.c: 767: }
 22165                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 22166  012CE4  0E04               	movlw	4
 22167  012CE6  6045               	cpfslt	_USBDeviceState,c	;volatile
 22168  012CE8  D002               	goto	i2l1135
 22169                           
 22170                           ;usb_device.c: 775: {
 22171                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 22172  012CEA  98A1               	bcf	4001,4,c	;volatile
 22173                           
 22174                           ;usb_device.c: 777: return;
 22175  012CEC  0012               	return	
 22176  012CEE                     i2l1135:
 22177                           
 22178                           ;usb_device.c: 778: }
 22179                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 22180  012CEE  010F               	movlb	15	; () banked
 22181  012CF0  A736               	btfss	54,3,b	;volatile
 22182  012CF2  D039               	goto	i2l1136
 22183                           
 22184                           ; BSR set to: 15
 22185                           ;usb_device.c: 784: {
 22186                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 22187  012CF4  0E00               	movlw	0
 22188  012CF6  6E1E               	movwf	USBDeviceTasks@i,c
 22189  012CF8                     i2l8216:
 22190                           
 22191                           ; BSR set to: 15
 22192  012CF8  0E03               	movlw	3
 22193  012CFA  641E               	cpfsgt	USBDeviceTasks@i,c
 22194  012CFC  D001               	goto	i2l1137
 22195  012CFE  D033               	goto	i2l1136
 22196  012D00                     i2l1137:
 22197                           
 22198                           ;usb_device.c: 786: {
 22199                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 22200  012D00  A662               	btfss	3938,3,c	;volatile
 22201  012D02  D031               	goto	i2l1136
 22202                           
 22203                           ;usb_device.c: 788: {
 22204                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 22205  012D04  CF64 F057          	movff	3940,_USTATcopy	;volatile
 22206                           
 22207                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 22208  012D08  3057               	rrcf	_USTATcopy,w,c	;volatile
 22209  012D0A  32E8               	rrcf	wreg,f,c
 22210  012D0C  32E8               	rrcf	wreg,f,c
 22211  012D0E  0B0F               	andlw	15
 22212  012D10  6E4D               	movwf	_endpoint_number,c	;volatile
 22213                           
 22214                           ;usb_device.c: 793: (UIR &= 0xF7);
 22215  012D12  9662               	bcf	3938,3,c	;volatile
 22216                           
 22217                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 22218  012D14  B457               	btfsc	_USTATcopy,2,c	;volatile
 22219  012D16  D007               	goto	i2l8230
 22220                           
 22221                           ;usb_device.c: 799: {
 22222                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 22223  012D18  504D               	movf	_endpoint_number,w,c	;volatile
 22224  012D1A  0D01               	mullw	1
 22225  012D1C  0E8D               	movlw	low _ep_data_out
 22226  012D1E  24F3               	addwf	prodl,w,c
 22227  012D20  6ED9               	movwf	fsr2l,c
 22228  012D22  0E00               	movlw	high _ep_data_out
 22229  012D24  D006               	goto	L11
 22230  012D26                     i2l8230:
 22231                           
 22232                           ;usb_device.c: 802: else
 22233                           ;usb_device.c: 803: {
 22234                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 22235  012D26  504D               	movf	_endpoint_number,w,c	;volatile
 22236  012D28  0D01               	mullw	1
 22237  012D2A  0E8A               	movlw	low _ep_data_in
 22238  012D2C  24F3               	addwf	prodl,w,c
 22239  012D2E  6ED9               	movwf	fsr2l,c
 22240  012D30  0E00               	movlw	high _ep_data_in
 22241  012D32                     L11:
 22242  012D32  20F4               	addwfc	prodh,w,c
 22243  012D34  6EDA               	movwf	fsr2h,c
 22244  012D36  0100               	movlb	0	; () banked
 22245  012D38  70DF               	btg	indf2,0,c
 22246                           
 22247                           ; BSR set to: 0
 22248                           ;usb_device.c: 805: }
 22249                           ;usb_device.c: 810: if(endpoint_number == 0)
 22250                           
 22251                           ; BSR set to: 0
 22252  012D3A  504D               	movf	_endpoint_number,w,c	;volatile
 22253  012D3C  A4D8               	btfss	status,2,c
 22254  012D3E  D003               	goto	i2l8236
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;usb_device.c: 811: {
 22258                           ;usb_device.c: 812: USBCtrlEPService();
 22259  012D40  EC9D  F0A1         	call	_USBCtrlEPService	;wreg free
 22260                           
 22261                           ;usb_device.c: 813: }
 22262  012D44  D00E               	goto	i2l8238
 22263  012D46                     i2l8236:
 22264                           
 22265                           ;usb_device.c: 814: else
 22266                           ;usb_device.c: 815: {
 22267                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 22268  012D46  0E00               	movlw	0
 22269  012D48  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22270  012D4A  0E72               	movlw	114
 22271  012D4C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22272  012D4E  0E57               	movlw	low _USTATcopy
 22273  012D50  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22274  012D52  0E00               	movlw	high _USTATcopy
 22275  012D54  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22276  012D56  0E00               	movlw	0
 22277  012D58  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22278  012D5A  0E00               	movlw	0
 22279  012D5C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22280  012D5E  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22281  012D62                     i2l8238:
 22282  012D62  2A1E               	incf	USBDeviceTasks@i,f,c
 22283  012D64  D7C9               	goto	i2l8216
 22284  012D66                     i2l1136:
 22285                           
 22286                           ;usb_device.c: 822: }
 22287                           ;usb_device.c: 823: }
 22288                           ;usb_device.c: 824: }
 22289                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 22290  012D66  98A1               	bcf	4001,4,c	;volatile
 22291  012D68  0012               	return		;funcret
 22292  012D6A                     __end_of_USBDeviceTasks:
 22293                           	opt stack 0
 22294                           pclatu	equ	0xFFB
 22295                           pclath	equ	0xFFA
 22296                           tblptru	equ	0xFF8
 22297                           tblptrh	equ	0xFF7
 22298                           tblptrl	equ	0xFF6
 22299                           tablat	equ	0xFF5
 22300                           prodh	equ	0xFF4
 22301                           prodl	equ	0xFF3
 22302                           intcon	equ	0xFF2
 22303                           intcon2	equ	0xFF1
 22304                           postinc0	equ	0xFEE
 22305                           fsr0h	equ	0xFEA
 22306                           fsr0l	equ	0xFE9
 22307                           wreg	equ	0xFE8
 22308                           indf1	equ	0xFE7
 22309                           postinc1	equ	0xFE6
 22310                           postdec1	equ	0xFE5
 22311                           fsr1h	equ	0xFE2
 22312                           fsr1l	equ	0xFE1
 22313                           indf2	equ	0xFDF
 22314                           postinc2	equ	0xFDE
 22315                           postdec2	equ	0xFDD
 22316                           plusw2	equ	0xFDB
 22317                           fsr2h	equ	0xFDA
 22318                           fsr2l	equ	0xFD9
 22319                           status	equ	0xFD8
 22320                           
 22321 ;; *************** function i2_USBDeviceInit *****************
 22322 ;; Defined at:
 22323 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 22324 ;; Parameters:    Size  Location     Type
 22325 ;;		None
 22326 ;; Auto vars:     Size  Location     Type
 22327 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 22328 ;; Return value:  Size  Location     Type
 22329 ;;		None               void
 22330 ;; Registers used:
 22331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22332 ;; Tracked objects:
 22333 ;;		On entry : 0/0
 22334 ;;		On exit  : 0/0
 22335 ;;		Unchanged: 0/0
 22336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22341 ;;Total ram usage:        1 bytes
 22342 ;; Hardware stack levels used:    1
 22343 ;; Hardware stack levels required when called:    1
 22344 ;; This function calls:
 22345 ;;		i2_memset
 22346 ;; This function is called by:
 22347 ;;		_USBDeviceTasks
 22348 ;; This function uses a non-reentrant model
 22349 ;;
 22350                           
 22351                           	psect	text102
 22352  012D6A                     __ptext102:
 22353                           	opt stack 0
 22354  012D6A                     i2_USBDeviceInit:
 22355                           	opt stack 18
 22356                           
 22357                           ;usb_device.c: 300: uint8_t i;
 22358                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 22359                           
 22360                           ;incstack = 0
 22361  012D6A  98A0               	bcf	4000,4,c	;volatile
 22362                           
 22363                           ;usb_device.c: 305: {UEIR = 0;};
 22364  012D6C  0E00               	movlw	0
 22365  012D6E  6E63               	movwf	3939,c	;volatile
 22366                           
 22367                           ;usb_device.c: 308: {UIR = 0;};
 22368  012D70  0E00               	movlw	0
 22369  012D72  6E62               	movwf	3938,c	;volatile
 22370                           
 22371                           ;usb_device.c: 311: UEP0 = 0;
 22372  012D74  0E00               	movlw	0
 22373  012D76  010F               	movlb	15	; () banked
 22374  012D78  6F26               	movwf	38,b	;volatile
 22375                           
 22376                           ; BSR set to: 15
 22377                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 22378  012D7A  0E27               	movlw	39
 22379  012D7C  6E01               	movwf	i2memset@p1,c
 22380  012D7E  0E0F               	movlw	15
 22381  012D80  6E02               	movwf	i2memset@p1+1,c
 22382  012D82  0E00               	movlw	0
 22383  012D84  6E04               	movwf	i2memset@c+1,c
 22384  012D86  0E00               	movlw	0
 22385  012D88  6E03               	movwf	i2memset@c,c
 22386  012D8A  0E00               	movlw	0
 22387  012D8C  6E06               	movwf	i2memset@n+1,c
 22388  012D8E  0E02               	movlw	2
 22389  012D90  6E05               	movwf	i2memset@n,c
 22390  012D92  ECFE  F0AF         	call	i2_memset	;wreg free
 22391                           
 22392                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22393  012D96  0E16               	movlw	22
 22394  012D98  010F               	movlb	15	; () banked
 22395  012D9A  6F39               	movwf	57,b	;volatile
 22396                           
 22397                           ; BSR set to: 15
 22398  012D9C  0E9F               	movlw	159
 22399  012D9E  010F               	movlb	15	; () banked
 22400  012DA0  6F37               	movwf	55,b	;volatile
 22401                           
 22402                           ; BSR set to: 15
 22403  012DA2  0E7B               	movlw	123
 22404  012DA4  010F               	movlb	15	; () banked
 22405  012DA6  6F36               	movwf	54,b	;volatile
 22406                           
 22407                           ; BSR set to: 15
 22408                           ;usb_device.c: 318: ;
 22409                           ;usb_device.c: 321: ;
 22410                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22411  012DA8  0E00               	movlw	0
 22412  012DAA  6E09               	movwf	i2USBDeviceInit@i,c
 22413  012DAC                     i2l7432:
 22414                           
 22415                           ; BSR set to: 15
 22416  012DAC  0E0B               	movlw	11
 22417  012DAE  6409               	cpfsgt	i2USBDeviceInit@i,c
 22418  012DB0  D001               	goto	i2l7436
 22419  012DB2  D00E               	goto	i2l1113
 22420  012DB4                     i2l7436:
 22421                           
 22422                           ;usb_device.c: 325: {
 22423                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 22424  012DB4  5009               	movf	i2USBDeviceInit@i,w,c
 22425  012DB6  0D04               	mullw	4
 22426  012DB8  0E00               	movlw	0
 22427  012DBA  24F3               	addwf	prodl,w,c
 22428  012DBC  6ED9               	movwf	fsr2l,c
 22429  012DBE  0E0D               	movlw	13
 22430  012DC0  20F4               	addwfc	prodh,w,c
 22431  012DC2  6EDA               	movwf	fsr2h,c
 22432  012DC4  6ADE               	clrf	postinc2,c
 22433  012DC6  6ADE               	clrf	postinc2,c
 22434  012DC8  6ADE               	clrf	postinc2,c
 22435  012DCA  6ADD               	clrf	postdec2,c
 22436  012DCC  2A09               	incf	i2USBDeviceInit@i,f,c
 22437  012DCE  D7EE               	goto	i2l7432
 22438  012DD0                     i2l1113:
 22439                           
 22440                           ;usb_device.c: 327: }
 22441                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 22442  012DD0  8C65               	bsf	3941,6,c	;volatile
 22443                           
 22444                           ;usb_device.c: 333: UADDR = 0x00;
 22445  012DD2  0E00               	movlw	0
 22446  012DD4  010F               	movlb	15	; () banked
 22447  012DD6  6F38               	movwf	56,b	;volatile
 22448                           
 22449                           ; BSR set to: 15
 22450                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 22451  012DD8  9865               	bcf	3941,4,c	;volatile
 22452                           
 22453                           ; BSR set to: 15
 22454                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 22455  012DDA  9C65               	bcf	3941,6,c	;volatile
 22456                           
 22457                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 22458  012DDC  D00C               	goto	i2l7456
 22459  012DDE                     i2l7448:
 22460                           
 22461                           ;usb_device.c: 343: {
 22462                           ;usb_device.c: 344: (UIR &= 0xF7);
 22463  012DDE  9662               	bcf	3938,3,c	;volatile
 22464                           
 22465                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 22466  012DE0  0E00               	movlw	0
 22467  012DE2  0100               	movlb	0	; () banked
 22468  012DE4  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22469                           
 22470                           ; BSR set to: 0
 22471                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 22472  012DE6  0E00               	movlw	0
 22473  012DE8  0100               	movlb	0	; () banked
 22474  012DEA  6F6F               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 22478  012DEC  0E00               	movlw	0
 22479  012DEE  0100               	movlb	0	; () banked
 22480  012DF0  6F71               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22481  012DF2  0E00               	movlw	0
 22482  012DF4  6F70               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22483  012DF6                     i2l7456:
 22484  012DF6  B662               	btfsc	3938,3,c	;volatile
 22485  012DF8  D7F2               	goto	i2l7448
 22486                           
 22487                           ;usb_device.c: 349: }
 22488                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 22489  012DFA  0E01               	movlw	1
 22490  012DFC  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22491                           
 22492                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 22493  012DFE  0E01               	movlw	1
 22494  012E00  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22495                           
 22496                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 22497  012E02  0E00               	movlw	0
 22498  012E04  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22499                           
 22500                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 22501  012E06  0E00               	movlw	0
 22502  012E08  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22503                           
 22504                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 22505  012E0A  0E00               	movlw	0
 22506  012E0C  0100               	movlb	0	; () banked
 22507  012E0E  6F9D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22508                           
 22509                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 22510  012E10  0E00               	movlw	0
 22511  012E12  6E09               	movwf	i2USBDeviceInit@i,c
 22512  012E14                     i2l7460:
 22513                           
 22514                           ; BSR set to: 0
 22515  012E14  0E02               	movlw	2
 22516  012E16  6409               	cpfsgt	i2USBDeviceInit@i,c
 22517  012E18  D001               	goto	i2l7464
 22518  012E1A  D02E               	goto	i2l7470
 22519  012E1C                     i2l7464:
 22520                           
 22521                           ;usb_device.c: 363: {
 22522                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 22523  012E1C  5009               	movf	i2USBDeviceInit@i,w,c
 22524  012E1E  0D02               	mullw	2
 22525  012E20  0E7B               	movlw	low _pBDTEntryIn
 22526  012E22  24F3               	addwf	prodl,w,c
 22527  012E24  6ED9               	movwf	fsr2l,c
 22528  012E26  0E00               	movlw	high _pBDTEntryIn
 22529  012E28  20F4               	addwfc	prodh,w,c
 22530  012E2A  6EDA               	movwf	fsr2h,c
 22531  012E2C  0E00               	movlw	0
 22532  012E2E  6EDE               	movwf	postinc2,c
 22533  012E30  0E00               	movlw	0
 22534  012E32  6EDD               	movwf	postdec2,c
 22535                           
 22536                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 22537  012E34  5009               	movf	i2USBDeviceInit@i,w,c
 22538  012E36  0D02               	mullw	2
 22539  012E38  0E81               	movlw	low _pBDTEntryOut
 22540  012E3A  24F3               	addwf	prodl,w,c
 22541  012E3C  6ED9               	movwf	fsr2l,c
 22542  012E3E  0E00               	movlw	high _pBDTEntryOut
 22543  012E40  20F4               	addwfc	prodh,w,c
 22544  012E42  6EDA               	movwf	fsr2h,c
 22545  012E44  0E00               	movlw	0
 22546  012E46  6EDE               	movwf	postinc2,c
 22547  012E48  0E00               	movlw	0
 22548  012E4A  6EDD               	movwf	postdec2,c
 22549                           
 22550                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 22551  012E4C  5009               	movf	i2USBDeviceInit@i,w,c
 22552  012E4E  0D01               	mullw	1
 22553  012E50  0E8A               	movlw	low _ep_data_in
 22554  012E52  24F3               	addwf	prodl,w,c
 22555  012E54  6ED9               	movwf	fsr2l,c
 22556  012E56  0E00               	movlw	high _ep_data_in
 22557  012E58  20F4               	addwfc	prodh,w,c
 22558  012E5A  6EDA               	movwf	fsr2h,c
 22559  012E5C  0E00               	movlw	0
 22560  012E5E  6EDF               	movwf	indf2,c
 22561                           
 22562                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 22563  012E60  5009               	movf	i2USBDeviceInit@i,w,c
 22564  012E62  0D01               	mullw	1
 22565  012E64  0E8D               	movlw	low _ep_data_out
 22566  012E66  24F3               	addwf	prodl,w,c
 22567  012E68  6ED9               	movwf	fsr2l,c
 22568  012E6A  0E00               	movlw	high _ep_data_out
 22569  012E6C  20F4               	addwfc	prodh,w,c
 22570  012E6E  6EDA               	movwf	fsr2h,c
 22571  012E70  0E00               	movlw	0
 22572  012E72  6EDF               	movwf	indf2,c
 22573  012E74  2A09               	incf	i2USBDeviceInit@i,f,c
 22574  012E76  D7CE               	goto	i2l7460
 22575  012E78                     i2l7470:
 22576                           
 22577                           ;usb_device.c: 368: }
 22578                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22579  012E78  0E08               	movlw	8
 22580  012E7A  0100               	movlb	0	; () banked
 22581  012E7C  6F7B               	movwf	_pBDTEntryIn& (0+255),b
 22582  012E7E  0E0D               	movlw	13
 22583  012E80  0100               	movlb	0	; () banked
 22584  012E82  6F7C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 22588  012E84  0E16               	movlw	22
 22589  012E86  010F               	movlb	15	; () banked
 22590  012E88  6F26               	movwf	38,b	;volatile
 22591                           
 22592                           ; BSR set to: 15
 22593                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22594  012E8A  0E0D               	movlw	13
 22595  012E8C  010D               	movlb	13	; () banked
 22596  012E8E  6F03               	movwf	3,b	;volatile
 22597  012E90  0E30               	movlw	48
 22598  012E92  6F02               	movwf	2,b	;volatile
 22599                           
 22600                           ; BSR set to: 13
 22601                           ;usb_device.c: 376: BDT[0].CNT = 8;
 22602  012E94  0E08               	movlw	8
 22603  012E96  010D               	movlb	13	; () banked
 22604  012E98  6F01               	movwf	1,b	;volatile
 22605                           
 22606                           ; BSR set to: 13
 22607                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 22608  012E9A  0E04               	movlw	4
 22609  012E9C  010D               	movlb	13	; () banked
 22610  012E9E  6F00               	movwf	0,b	;volatile
 22611                           
 22612                           ; BSR set to: 13
 22613                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 22614  012EA0  010D               	movlb	13	; () banked
 22615  012EA2  8F00               	bsf	0,7,b	;volatile
 22616                           
 22617                           ; BSR set to: 13
 22618                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 22619  012EA4  0E00               	movlw	0
 22620  012EA6  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 22621                           
 22622                           ; BSR set to: 13
 22623                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 22624  012EA8  0E00               	movlw	0
 22625  012EAA  6E45               	movwf	_USBDeviceState,c	;volatile
 22626                           
 22627                           ; BSR set to: 13
 22628  012EAC  0012               	return		;funcret
 22629  012EAE                     __end_ofi2_USBDeviceInit:
 22630                           	opt stack 0
 22631                           pclatu	equ	0xFFB
 22632                           pclath	equ	0xFFA
 22633                           tblptru	equ	0xFF8
 22634                           tblptrh	equ	0xFF7
 22635                           tblptrl	equ	0xFF6
 22636                           tablat	equ	0xFF5
 22637                           prodh	equ	0xFF4
 22638                           prodl	equ	0xFF3
 22639                           intcon	equ	0xFF2
 22640                           intcon2	equ	0xFF1
 22641                           postinc0	equ	0xFEE
 22642                           fsr0h	equ	0xFEA
 22643                           fsr0l	equ	0xFE9
 22644                           wreg	equ	0xFE8
 22645                           indf1	equ	0xFE7
 22646                           postinc1	equ	0xFE6
 22647                           postdec1	equ	0xFE5
 22648                           fsr1h	equ	0xFE2
 22649                           fsr1l	equ	0xFE1
 22650                           indf2	equ	0xFDF
 22651                           postinc2	equ	0xFDE
 22652                           postdec2	equ	0xFDD
 22653                           plusw2	equ	0xFDB
 22654                           fsr2h	equ	0xFDA
 22655                           fsr2l	equ	0xFD9
 22656                           status	equ	0xFD8
 22657                           
 22658 ;; *************** function _USBWakeFromSuspend *****************
 22659 ;; Defined at:
 22660 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 22661 ;; Parameters:    Size  Location     Type
 22662 ;;		None
 22663 ;; Auto vars:     Size  Location     Type
 22664 ;;		None
 22665 ;; Return value:  Size  Location     Type
 22666 ;;		None               void
 22667 ;; Registers used:
 22668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22669 ;; Tracked objects:
 22670 ;;		On entry : 0/0
 22671 ;;		On exit  : 0/0
 22672 ;;		Unchanged: 0/0
 22673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22678 ;;Total ram usage:        0 bytes
 22679 ;; Hardware stack levels used:    1
 22680 ;; Hardware stack levels required when called:    4
 22681 ;; This function calls:
 22682 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22683 ;; This function is called by:
 22684 ;;		_USBDeviceTasks
 22685 ;; This function uses a non-reentrant model
 22686 ;;
 22687                           
 22688                           	psect	text103
 22689  015E34                     __ptext103:
 22690                           	opt stack 0
 22691  015E34                     _USBWakeFromSuspend:
 22692                           	opt stack 15
 22693                           
 22694                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 22695                           
 22696                           ; BSR set to: 13
 22697                           ;incstack = 0
 22698  015E34  0E00               	movlw	0
 22699  015E36  0100               	movlb	0	; () banked
 22700  015E38  6F9D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22701                           
 22702                           ; BSR set to: 0
 22703                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 22704  015E3A  0E00               	movlw	0
 22705  015E3C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22706  015E3E  0E74               	movlw	116
 22707  015E40  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22708  015E42  0E00               	movlw	0
 22709  015E44  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22710  015E46  0E00               	movlw	0
 22711  015E48  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22712  015E4A  0E00               	movlw	0
 22713  015E4C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22714  015E4E  0E00               	movlw	0
 22715  015E50  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22716  015E52  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22717                           
 22718                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 22719  015E56  9265               	bcf	3941,1,c	;volatile
 22720                           
 22721                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 22722  015E58  010F               	movlb	15	; () banked
 22723  015E5A  9536               	bcf	54,2,b	;volatile
 22724                           
 22725                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 22726  015E5C  D001               	goto	i2l7358
 22727  015E5E                     i2l7356:
 22728                           
 22729                           ;usb_device.c: 2342: {
 22730                           ;usb_device.c: 2343: (UIR &= 0xFB);
 22731  015E5E  9462               	bcf	3938,2,c	;volatile
 22732  015E60                     i2l7358:
 22733  015E60  A462               	btfss	3938,2,c	;volatile
 22734  015E62  0012               	return	
 22735  015E64  D7FC               	goto	i2l7356
 22736  015E66                     __end_of_USBWakeFromSuspend:
 22737                           	opt stack 0
 22738                           pclatu	equ	0xFFB
 22739                           pclath	equ	0xFFA
 22740                           tblptru	equ	0xFF8
 22741                           tblptrh	equ	0xFF7
 22742                           tblptrl	equ	0xFF6
 22743                           tablat	equ	0xFF5
 22744                           prodh	equ	0xFF4
 22745                           prodl	equ	0xFF3
 22746                           intcon	equ	0xFF2
 22747                           intcon2	equ	0xFF1
 22748                           postinc0	equ	0xFEE
 22749                           fsr0h	equ	0xFEA
 22750                           fsr0l	equ	0xFE9
 22751                           wreg	equ	0xFE8
 22752                           indf1	equ	0xFE7
 22753                           postinc1	equ	0xFE6
 22754                           postdec1	equ	0xFE5
 22755                           fsr1h	equ	0xFE2
 22756                           fsr1l	equ	0xFE1
 22757                           indf2	equ	0xFDF
 22758                           postinc2	equ	0xFDE
 22759                           postdec2	equ	0xFDD
 22760                           plusw2	equ	0xFDB
 22761                           fsr2h	equ	0xFDA
 22762                           fsr2l	equ	0xFD9
 22763                           status	equ	0xFD8
 22764                           
 22765 ;; *************** function _USBSuspend *****************
 22766 ;; Defined at:
 22767 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 22768 ;; Parameters:    Size  Location     Type
 22769 ;;		None
 22770 ;; Auto vars:     Size  Location     Type
 22771 ;;		None
 22772 ;; Return value:  Size  Location     Type
 22773 ;;		None               void
 22774 ;; Registers used:
 22775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22776 ;; Tracked objects:
 22777 ;;		On entry : 0/0
 22778 ;;		On exit  : 0/0
 22779 ;;		Unchanged: 0/0
 22780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22785 ;;Total ram usage:        0 bytes
 22786 ;; Hardware stack levels used:    1
 22787 ;; Hardware stack levels required when called:    4
 22788 ;; This function calls:
 22789 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22790 ;; This function is called by:
 22791 ;;		_USBDeviceTasks
 22792 ;; This function uses a non-reentrant model
 22793 ;;
 22794                           
 22795                           	psect	text104
 22796  015FD0                     __ptext104:
 22797                           	opt stack 0
 22798  015FD0                     _USBSuspend:
 22799                           	opt stack 15
 22800                           
 22801                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 22802                           
 22803                           ;incstack = 0
 22804  015FD0  010F               	movlb	15	; () banked
 22805  015FD2  8536               	bsf	54,2,b	;volatile
 22806                           
 22807                           ; BSR set to: 15
 22808                           ;usb_device.c: 2271: (UIR &= 0xEF);
 22809  015FD4  9862               	bcf	3938,4,c	;volatile
 22810                           
 22811                           ; BSR set to: 15
 22812                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 22813  015FD6  8265               	bsf	3941,1,c	;volatile
 22814                           
 22815                           ; BSR set to: 15
 22816                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 22817  015FD8  0E01               	movlw	1
 22818  015FDA  0100               	movlb	0	; () banked
 22819  015FDC  6F9D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22820                           
 22821                           ; BSR set to: 0
 22822                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 22823  015FDE  0E00               	movlw	0
 22824  015FE0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22825  015FE2  0E75               	movlw	117
 22826  015FE4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22827  015FE6  0E00               	movlw	0
 22828  015FE8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22829  015FEA  0E00               	movlw	0
 22830  015FEC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22831  015FEE  0E00               	movlw	0
 22832  015FF0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22833  015FF2  0E00               	movlw	0
 22834  015FF4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22835  015FF6  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22836  015FFA  0012               	return		;funcret
 22837  015FFC                     __end_of_USBSuspend:
 22838                           	opt stack 0
 22839                           pclatu	equ	0xFFB
 22840                           pclath	equ	0xFFA
 22841                           tblptru	equ	0xFF8
 22842                           tblptrh	equ	0xFF7
 22843                           tblptrl	equ	0xFF6
 22844                           tablat	equ	0xFF5
 22845                           prodh	equ	0xFF4
 22846                           prodl	equ	0xFF3
 22847                           intcon	equ	0xFF2
 22848                           intcon2	equ	0xFF1
 22849                           postinc0	equ	0xFEE
 22850                           fsr0h	equ	0xFEA
 22851                           fsr0l	equ	0xFE9
 22852                           wreg	equ	0xFE8
 22853                           indf1	equ	0xFE7
 22854                           postinc1	equ	0xFE6
 22855                           postdec1	equ	0xFE5
 22856                           fsr1h	equ	0xFE2
 22857                           fsr1l	equ	0xFE1
 22858                           indf2	equ	0xFDF
 22859                           postinc2	equ	0xFDE
 22860                           postdec2	equ	0xFDD
 22861                           plusw2	equ	0xFDB
 22862                           fsr2h	equ	0xFDA
 22863                           fsr2l	equ	0xFD9
 22864                           status	equ	0xFD8
 22865                           
 22866 ;; *************** function _USBStallHandler *****************
 22867 ;; Defined at:
 22868 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;		None
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;		None               void
 22875 ;; Registers used:
 22876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22886 ;;Total ram usage:        1 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; This function calls:
 22889 ;;		Nothing
 22890 ;; This function is called by:
 22891 ;;		_USBDeviceTasks
 22892 ;; This function uses a non-reentrant model
 22893 ;;
 22894                           
 22895                           	psect	text105
 22896  015BB0                     __ptext105:
 22897                           	opt stack 0
 22898  015BB0                     _USBStallHandler:
 22899                           	opt stack 19
 22900                           
 22901                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 22902                           
 22903                           ;incstack = 0
 22904  015BB0  010F               	movlb	15	; () banked
 22905  015BB2  A126               	btfss	38,0,b	;volatile
 22906  015BB4  D01E               	goto	i2l1275
 22907                           
 22908                           ; BSR set to: 15
 22909                           ;usb_device.c: 2215: {
 22910                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 22911  015BB6  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22912  015BBA  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22913  015BBE  0E80               	movlw	128
 22914  015BC0  18DE               	xorwf	postinc2,w,c
 22915  015BC2  A4D8               	btfss	status,2,c
 22916  015BC4  D014               	goto	i2l7380
 22917                           
 22918                           ; BSR set to: 15
 22919  015BC6  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 22920  015BCA  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22921  015BCE  0E84               	movlw	132
 22922  015BD0  18DE               	xorwf	postinc2,w,c
 22923  015BD2  A4D8               	btfss	status,2,c
 22924  015BD4  D00C               	goto	i2l7380
 22925                           
 22926                           ; BSR set to: 15
 22927                           ;usb_device.c: 2218: {
 22928                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22929  015BD6  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22930  015BDA  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22931  015BDE  0E0C               	movlw	12
 22932  015BE0  6EDF               	movwf	indf2,c
 22933                           
 22934                           ; BSR set to: 15
 22935                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22936  015BE2  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22937  015BE6  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22938  015BEA  0E00               	movlw	0
 22939  015BEC  8EDB               	bsf	plusw2,7,c
 22940  015BEE                     i2l7380:
 22941                           
 22942                           ; BSR set to: 15
 22943                           ;usb_device.c: 2222: }
 22944                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 22945  015BEE  010F               	movlb	15	; () banked
 22946  015BF0  9126               	bcf	38,0,b	;volatile
 22947  015BF2                     i2l1275:
 22948                           
 22949                           ; BSR set to: 15
 22950                           ;usb_device.c: 2224: }
 22951                           ;usb_device.c: 2226: (UIR &= 0xDF);
 22952  015BF2  9A62               	bcf	3938,5,c	;volatile
 22953                           
 22954                           ; BSR set to: 15
 22955  015BF4  0012               	return		;funcret
 22956  015BF6                     __end_of_USBStallHandler:
 22957                           	opt stack 0
 22958                           pclatu	equ	0xFFB
 22959                           pclath	equ	0xFFA
 22960                           tblptru	equ	0xFF8
 22961                           tblptrh	equ	0xFF7
 22962                           tblptrl	equ	0xFF6
 22963                           tablat	equ	0xFF5
 22964                           prodh	equ	0xFF4
 22965                           prodl	equ	0xFF3
 22966                           intcon	equ	0xFF2
 22967                           intcon2	equ	0xFF1
 22968                           postinc0	equ	0xFEE
 22969                           fsr0h	equ	0xFEA
 22970                           fsr0l	equ	0xFE9
 22971                           wreg	equ	0xFE8
 22972                           indf1	equ	0xFE7
 22973                           postinc1	equ	0xFE6
 22974                           postdec1	equ	0xFE5
 22975                           fsr1h	equ	0xFE2
 22976                           fsr1l	equ	0xFE1
 22977                           indf2	equ	0xFDF
 22978                           postinc2	equ	0xFDE
 22979                           postdec2	equ	0xFDD
 22980                           plusw2	equ	0xFDB
 22981                           fsr2h	equ	0xFDA
 22982                           fsr2l	equ	0xFD9
 22983                           status	equ	0xFD8
 22984                           
 22985 ;; *************** function _USBCtrlEPService *****************
 22986 ;; Defined at:
 22987 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 22988 ;; Parameters:    Size  Location     Type
 22989 ;;		None
 22990 ;; Auto vars:     Size  Location     Type
 22991 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 22992 ;; Return value:  Size  Location     Type
 22993 ;;		None               void
 22994 ;; Registers used:
 22995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22996 ;; Tracked objects:
 22997 ;;		On entry : 0/0
 22998 ;;		On exit  : 0/0
 22999 ;;		Unchanged: 0/0
 23000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23005 ;;Total ram usage:        3 bytes
 23006 ;; Hardware stack levels used:    1
 23007 ;; Hardware stack levels required when called:    7
 23008 ;; This function calls:
 23009 ;;		_USBCtrlTrfInHandler
 23010 ;;		_USBCtrlTrfOutHandler
 23011 ;;		_USBCtrlTrfSetupHandler
 23012 ;; This function is called by:
 23013 ;;		_USBDeviceTasks
 23014 ;; This function uses a non-reentrant model
 23015 ;;
 23016                           
 23017                           	psect	text106
 23018  01433A                     __ptext106:
 23019                           	opt stack 0
 23020  01433A                     _USBCtrlEPService:
 23021                           	opt stack 12
 23022                           
 23023                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 23024                           
 23025                           ; BSR set to: 15
 23026                           ;incstack = 0
 23027  01433A  0E2D               	movlw	45
 23028  01433C  6E48               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 23029                           
 23030                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 23031  01433E  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 23032  014342  0EFD               	movlw	253
 23033  014344  161B               	andwf	??_USBCtrlEPService,f,c
 23034  014346  A4D8               	btfss	status,2,c
 23035  014348  D057               	goto	i2l7414
 23036                           
 23037                           ;usb_device.c: 2380: {
 23038                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 23039  01434A  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 23040  01434E  90D8               	bcf	status,0,c
 23041  014350  321B               	rrcf	??_USBCtrlEPService,f,c
 23042  014352  0E3F               	movlw	63
 23043  014354  161B               	andwf	??_USBCtrlEPService,f,c
 23044  014356  501B               	movf	??_USBCtrlEPService,w,c
 23045  014358  0D04               	mullw	4
 23046  01435A  0E00               	movlw	0
 23047  01435C  24F3               	addwf	prodl,w,c
 23048  01435E  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 23049  014360  0E0D               	movlw	13
 23050  014362  20F4               	addwfc	prodh,w,c
 23051  014364  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 23052                           
 23053                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 23054  014366  C037  F039         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 23055  01436A  C038  F03A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 23056                           
 23057                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 23058  01436E  0E04               	movlw	4
 23059  014370  1A39               	xorwf	_pBDTEntryEP0OutNext,f,c
 23060                           
 23061                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 23062  014372  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23063  014376  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23064  01437A  30DF               	rrcf	indf2,w,c
 23065  01437C  32E8               	rrcf	wreg,f,c
 23066  01437E  0B0F               	andlw	15
 23067  014380  0A0D               	xorlw	13
 23068  014382  A4D8               	btfss	status,2,c
 23069  014384  D036               	goto	i2l7412
 23070                           
 23071                           ;usb_device.c: 2397: {
 23072                           ;usb_device.c: 2398: unsigned char setup_cnt;
 23073                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 23074  014386  0E00               	movlw	0
 23075  014388  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 23076  01438A                     i2l7396:
 23077  01438A  0E07               	movlw	7
 23078  01438C  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 23079  01438E  D001               	goto	i2l7400
 23080  014390  D023               	goto	i2l7408
 23081  014392                     i2l7400:
 23082                           
 23083                           ;usb_device.c: 2405: {
 23084                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 23085  014392  EE20 F002          	lfsr	2,2
 23086  014396  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 23087  014398  26D9               	addwf	fsr2l,f,c
 23088  01439A  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23089  01439C  22DA               	addwfc	fsr2h,f,c
 23090  01439E  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 23091  0143A2  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 23092  0143A6  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 23093  0143AA  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 23094  0143AE  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 23095  0143B0  0D01               	mullw	1
 23096  0143B2  0E30               	movlw	48
 23097  0143B4  24F3               	addwf	prodl,w,c
 23098  0143B6  6EE1               	movwf	fsr1l,c
 23099  0143B8  0E0D               	movlw	13
 23100  0143BA  20F4               	addwfc	prodh,w,c
 23101  0143BC  6EE2               	movwf	fsr1h,c
 23102  0143BE  CFDF FFE7          	movff	indf2,indf1
 23103                           
 23104                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 23105  0143C2  EE20 F002          	lfsr	2,2
 23106  0143C6  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 23107  0143C8  26D9               	addwf	fsr2l,f,c
 23108  0143CA  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23109  0143CC  22DA               	addwfc	fsr2h,f,c
 23110  0143CE  2ADE               	incf	postinc2,f,c
 23111  0143D0  0E00               	movlw	0
 23112  0143D2  22DD               	addwfc	postdec2,f,c
 23113  0143D4  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 23114  0143D6  D7D9               	goto	i2l7396
 23115  0143D8                     i2l7408:
 23116                           
 23117                           ;usb_device.c: 2408: }
 23118                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23119  0143D8  EE20 F002          	lfsr	2,2
 23120  0143DC  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 23121  0143DE  26D9               	addwf	fsr2l,f,c
 23122  0143E0  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23123  0143E2  22DA               	addwfc	fsr2h,f,c
 23124  0143E4  0E30               	movlw	48
 23125  0143E6  6EDE               	movwf	postinc2,c
 23126  0143E8  0E0D               	movlw	13
 23127  0143EA  6EDD               	movwf	postdec2,c
 23128                           
 23129                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 23130  0143EC  EC0C  F0A9         	call	_USBCtrlTrfSetupHandler	;wreg free
 23131                           
 23132                           ;usb_device.c: 2413: }
 23133  0143F0  0012               	return	
 23134  0143F2                     i2l7412:
 23135                           
 23136                           ;usb_device.c: 2414: else
 23137                           ;usb_device.c: 2415: {
 23138                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 23139  0143F2  ECF5  F0AB         	call	_USBCtrlTrfOutHandler	;wreg free
 23140                           
 23141                           ;usb_device.c: 2418: }
 23142                           ;usb_device.c: 2419: }
 23143  0143F6  0012               	return	
 23144  0143F8                     i2l7414:
 23145                           
 23146                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 23147  0143F8  5057               	movf	_USTATcopy,w,c	;volatile
 23148  0143FA  0BFD               	andlw	253
 23149  0143FC  0A04               	xorlw	4
 23150  0143FE  A4D8               	btfss	status,2,c
 23151  014400  0012               	return	
 23152                           
 23153                           ;usb_device.c: 2421: {
 23154                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 23155  014402  ECCC  F0A2         	call	_USBCtrlTrfInHandler	;wreg free
 23156  014406  0012               	return	
 23157  014408                     __end_of_USBCtrlEPService:
 23158                           	opt stack 0
 23159                           pclatu	equ	0xFFB
 23160                           pclath	equ	0xFFA
 23161                           tblptru	equ	0xFF8
 23162                           tblptrh	equ	0xFF7
 23163                           tblptrl	equ	0xFF6
 23164                           tablat	equ	0xFF5
 23165                           prodh	equ	0xFF4
 23166                           prodl	equ	0xFF3
 23167                           intcon	equ	0xFF2
 23168                           intcon2	equ	0xFF1
 23169                           postinc0	equ	0xFEE
 23170                           fsr0h	equ	0xFEA
 23171                           fsr0l	equ	0xFE9
 23172                           wreg	equ	0xFE8
 23173                           indf1	equ	0xFE7
 23174                           postinc1	equ	0xFE6
 23175                           postdec1	equ	0xFE5
 23176                           fsr1h	equ	0xFE2
 23177                           fsr1l	equ	0xFE1
 23178                           indf2	equ	0xFDF
 23179                           postinc2	equ	0xFDE
 23180                           postdec2	equ	0xFDD
 23181                           plusw2	equ	0xFDB
 23182                           fsr2h	equ	0xFDA
 23183                           fsr2l	equ	0xFD9
 23184                           status	equ	0xFD8
 23185                           
 23186 ;; *************** function _USBCtrlTrfSetupHandler *****************
 23187 ;; Defined at:
 23188 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 23189 ;; Parameters:    Size  Location     Type
 23190 ;;		None
 23191 ;; Auto vars:     Size  Location     Type
 23192 ;;		None
 23193 ;; Return value:  Size  Location     Type
 23194 ;;		None               void
 23195 ;; Registers used:
 23196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23197 ;; Tracked objects:
 23198 ;;		On entry : 0/0
 23199 ;;		On exit  : 0/0
 23200 ;;		Unchanged: 0/0
 23201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23206 ;;Total ram usage:        0 bytes
 23207 ;; Hardware stack levels used:    1
 23208 ;; Hardware stack levels required when called:    6
 23209 ;; This function calls:
 23210 ;;		_USBCheckStdRequest
 23211 ;;		_USBCtrlEPServiceComplete
 23212 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23213 ;; This function is called by:
 23214 ;;		_USBCtrlEPService
 23215 ;; This function uses a non-reentrant model
 23216 ;;
 23217                           
 23218                           	psect	text107
 23219  015218                     __ptext107:
 23220                           	opt stack 0
 23221  015218                     _USBCtrlTrfSetupHandler:
 23222                           	opt stack 12
 23223                           
 23224                           ;usb_device.c: 2474: shortPacketStatus = 0;
 23225                           
 23226                           ;incstack = 0
 23227  015218  0E00               	movlw	0
 23228  01521A  6E4F               	movwf	_shortPacketStatus,c	;volatile
 23229                           
 23230                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 23231  01521C  0E00               	movlw	0
 23232  01521E  6E44               	movwf	_USBDeferStatusStagePacket,c	;volatile
 23233                           
 23234                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 23235  015220  0E00               	movlw	0
 23236  015222  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 23237                           
 23238                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 23239  015224  0E00               	movlw	0
 23240  015226  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 23241                           
 23242                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 23243  015228  0E00               	movlw	0
 23244  01522A  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 23245                           
 23246                           ;usb_device.c: 2479: controlTransferState = 0;
 23247  01522C  0E00               	movlw	0
 23248  01522E  6E49               	movwf	_controlTransferState,c	;volatile
 23249                           
 23250                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 23251  015230  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23252  015234  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23253  015238  0E7F               	movlw	127
 23254  01523A  16DF               	andwf	indf2,f,c
 23255                           
 23256                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23257  01523C  0E04               	movlw	4
 23258  01523E  0100               	movlb	0	; () banked
 23259  015240  1B7B               	xorwf	_pBDTEntryIn& (0+255),f,b
 23260                           
 23261                           ; BSR set to: 0
 23262                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 23263  015242  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23264  015246  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23265  01524A  0E7F               	movlw	127
 23266  01524C  16DF               	andwf	indf2,f,c
 23267                           
 23268                           ; BSR set to: 0
 23269                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23270  01524E  0E04               	movlw	4
 23271  015250  0100               	movlb	0	; () banked
 23272  015252  1B7B               	xorwf	_pBDTEntryIn& (0+255),f,b
 23273                           
 23274                           ; BSR set to: 0
 23275                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 23276  015254  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23277  015258  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23278  01525C  0E7F               	movlw	127
 23279  01525E  16DF               	andwf	indf2,f,c
 23280                           
 23281                           ; BSR set to: 0
 23282                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 23283  015260  0E00               	movlw	0
 23284  015262  0100               	movlb	0	; () banked
 23285  015264  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 23289  015266  0E00               	movlw	0
 23290  015268  0100               	movlb	0	; () banked
 23291  01526A  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 23292  01526C  0E00               	movlw	0
 23293  01526E  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23294                           
 23295                           ; BSR set to: 0
 23296                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 23297  015270  0E00               	movlw	0
 23298  015272  0100               	movlb	0	; () banked
 23299  015274  6F6F               	movwf	(_outPipes+3)& (0+255),b	;volatile
 23300                           
 23301                           ; BSR set to: 0
 23302                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 23303  015276  0E00               	movlw	0
 23304  015278  0100               	movlb	0	; () banked
 23305  01527A  6F71               	movwf	(_outPipes+5)& (0+255),b	;volatile
 23306  01527C  0E00               	movlw	0
 23307  01527E  6F70               	movwf	(_outPipes+4)& (0+255),b	;volatile
 23308                           
 23309                           ; BSR set to: 0
 23310                           ;usb_device.c: 2503: USBCheckStdRequest();
 23311  015280  EC92  F09B         	call	_USBCheckStdRequest	;wreg free
 23312                           
 23313                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 23314  015284  0E00               	movlw	0
 23315  015286  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23316  015288  0E03               	movlw	3
 23317  01528A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23318  01528C  0E00               	movlw	0
 23319  01528E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23320  015290  0E00               	movlw	0
 23321  015292  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23322  015294  0E00               	movlw	0
 23323  015296  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23324  015298  0E00               	movlw	0
 23325  01529A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23326  01529C  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23327                           
 23328                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 23329  0152A0  EC18  F09B         	call	_USBCtrlEPServiceComplete	;wreg free
 23330  0152A4  0012               	return		;funcret
 23331  0152A6                     __end_of_USBCtrlTrfSetupHandler:
 23332                           	opt stack 0
 23333                           pclatu	equ	0xFFB
 23334                           pclath	equ	0xFFA
 23335                           tblptru	equ	0xFF8
 23336                           tblptrh	equ	0xFF7
 23337                           tblptrl	equ	0xFF6
 23338                           tablat	equ	0xFF5
 23339                           prodh	equ	0xFF4
 23340                           prodl	equ	0xFF3
 23341                           intcon	equ	0xFF2
 23342                           intcon2	equ	0xFF1
 23343                           postinc0	equ	0xFEE
 23344                           fsr0h	equ	0xFEA
 23345                           fsr0l	equ	0xFE9
 23346                           wreg	equ	0xFE8
 23347                           indf1	equ	0xFE7
 23348                           postinc1	equ	0xFE6
 23349                           postdec1	equ	0xFE5
 23350                           fsr1h	equ	0xFE2
 23351                           fsr1l	equ	0xFE1
 23352                           indf2	equ	0xFDF
 23353                           postinc2	equ	0xFDE
 23354                           postdec2	equ	0xFDD
 23355                           plusw2	equ	0xFDB
 23356                           fsr2h	equ	0xFDA
 23357                           fsr2l	equ	0xFD9
 23358                           status	equ	0xFD8
 23359                           
 23360 ;; *************** function _USBCtrlEPServiceComplete *****************
 23361 ;; Defined at:
 23362 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;		None
 23365 ;; Auto vars:     Size  Location     Type
 23366 ;;		None
 23367 ;; Return value:  Size  Location     Type
 23368 ;;		None               void
 23369 ;; Registers used:
 23370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23371 ;; Tracked objects:
 23372 ;;		On entry : 0/0
 23373 ;;		On exit  : 0/0
 23374 ;;		Unchanged: 0/0
 23375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23380 ;;Total ram usage:        0 bytes
 23381 ;; Hardware stack levels used:    1
 23382 ;; Hardware stack levels required when called:    2
 23383 ;; This function calls:
 23384 ;;		_USBCtrlEPAllowDataStage
 23385 ;;		_USBCtrlEPAllowStatusStage
 23386 ;; This function is called by:
 23387 ;;		_USBCtrlTrfSetupHandler
 23388 ;; This function uses a non-reentrant model
 23389 ;;
 23390                           
 23391                           	psect	text108
 23392  013630                     __ptext108:
 23393                           	opt stack 0
 23394  013630                     _USBCtrlEPServiceComplete:
 23395                           	opt stack 15
 23396                           
 23397                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 23398                           
 23399                           ;incstack = 0
 23400  013630  9865               	bcf	3941,4,c	;volatile
 23401                           
 23402                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 23403  013632  0100               	movlb	0	; () banked
 23404  013634  BF78               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 23405  013636  D039               	goto	i2l1199
 23406                           
 23407                           ; BSR set to: 0
 23408                           ;usb_device.c: 1629: {
 23409                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 23410  013638  0100               	movlb	0	; () banked
 23411  01363A  AF6F               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 23412  01363C  D00B               	goto	i2l6430
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;usb_device.c: 1631: {
 23416                           ;usb_device.c: 1632: controlTransferState = 2;
 23417  01363E  0E02               	movlw	2
 23418  013640  6E49               	movwf	_controlTransferState,c	;volatile
 23419                           
 23420                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 23421  013642  5043               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 23422  013644  B4D8               	btfsc	status,2,c
 23423                           
 23424                           ; BSR set to: 0
 23425                           ;usb_device.c: 1644: {
 23426                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 23427  013646  ECFE  F0A6         	call	_USBCtrlEPAllowDataStage	;wreg free
 23428                           
 23429                           ;usb_device.c: 1646: }
 23430                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 23431  01364A  0E00               	movlw	0
 23432  01364C  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 23433                           
 23434                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 23435  01364E  0E00               	movlw	0
 23436  013650  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23437                           
 23438                           ;usb_device.c: 1652: }
 23439  013652  0012               	return	
 23440  013654                     i2l6430:
 23441                           
 23442                           ;usb_device.c: 1653: else
 23443                           ;usb_device.c: 1654: {
 23444                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 23445  013654  EE20 F001          	lfsr	2,1
 23446  013658  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23447  01365A  26D9               	addwf	fsr2l,f,c
 23448  01365C  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23449  01365E  22DA               	addwfc	fsr2h,f,c
 23450  013660  0E08               	movlw	8
 23451  013662  6EDF               	movwf	indf2,c
 23452                           
 23453                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23454  013664  EE20 F002          	lfsr	2,2
 23455  013668  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23456  01366A  26D9               	addwf	fsr2l,f,c
 23457  01366C  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23458  01366E  22DA               	addwfc	fsr2h,f,c
 23459  013670  0E30               	movlw	48
 23460  013672  6EDE               	movwf	postinc2,c
 23461  013674  0E0D               	movlw	13
 23462  013676  6EDD               	movwf	postdec2,c
 23463                           
 23464                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23465  013678  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23466  01367C  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23467  013680  0E0C               	movlw	12
 23468  013682  6EDF               	movwf	indf2,c
 23469                           
 23470                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23471  013684  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23472  013688  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23473  01368C  0E00               	movlw	0
 23474  01368E  8EDB               	bsf	plusw2,7,c
 23475                           
 23476                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 23477  013690  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23478  013694  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23479  013698  0E04               	movlw	4
 23480  01369A  6EDF               	movwf	indf2,c
 23481                           
 23482                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23483  01369C  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23484  0136A0  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23485  0136A4  0E00               	movlw	0
 23486  0136A6  8EDB               	bsf	plusw2,7,c
 23487                           
 23488                           ;usb_device.c: 1665: }
 23489                           ;usb_device.c: 1666: }
 23490  0136A8  0012               	return	
 23491  0136AA                     i2l1199:
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;usb_device.c: 1667: else
 23495                           ;usb_device.c: 1668: {
 23496                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 23497  0136AA  010D               	movlb	13	; () banked
 23498  0136AC  AF30               	btfss	48,7,b	;volatile
 23499  0136AE  D010               	goto	i2l6450
 23500                           
 23501                           ; BSR set to: 13
 23502                           ;usb_device.c: 1670: {
 23503                           ;usb_device.c: 1671: controlTransferState = 1;
 23504  0136B0  0E01               	movlw	1
 23505  0136B2  6E49               	movwf	_controlTransferState,c	;volatile
 23506                           
 23507                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 23508  0136B4  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 23509  0136B6  B4D8               	btfsc	status,2,c
 23510                           
 23511                           ; BSR set to: 13
 23512                           ;usb_device.c: 1686: {
 23513                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 23514  0136B8  ECFE  F0A6         	call	_USBCtrlEPAllowDataStage	;wreg free
 23515                           
 23516                           ;usb_device.c: 1688: }
 23517                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 23518  0136BC  0E00               	movlw	0
 23519  0136BE  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 23520                           
 23521                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 23522  0136C0  0E00               	movlw	0
 23523  0136C2  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23524                           
 23525                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 23526  0136C4  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23527  0136C6  A4D8               	btfss	status,2,c
 23528  0136C8  0012               	return	
 23529                           
 23530                           ;usb_device.c: 1713: {
 23531                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 23532  0136CA  EC6A  F0A2         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23533                           
 23534                           ;usb_device.c: 1715: }
 23535                           ;usb_device.c: 1716: }
 23536  0136CE  0012               	return	
 23537  0136D0                     i2l6450:
 23538                           
 23539                           ;usb_device.c: 1717: else
 23540                           ;usb_device.c: 1718: {
 23541                           ;usb_device.c: 1729: controlTransferState = 2;
 23542  0136D0  0E02               	movlw	2
 23543  0136D2  6E49               	movwf	_controlTransferState,c	;volatile
 23544                           
 23545                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 23546  0136D4  EE20 F001          	lfsr	2,1
 23547  0136D8  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23548  0136DA  26D9               	addwf	fsr2l,f,c
 23549  0136DC  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23550  0136DE  22DA               	addwfc	fsr2h,f,c
 23551  0136E0  0E08               	movlw	8
 23552  0136E2  6EDF               	movwf	indf2,c
 23553                           
 23554                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23555  0136E4  EE20 F002          	lfsr	2,2
 23556  0136E8  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23557  0136EA  26D9               	addwf	fsr2l,f,c
 23558  0136EC  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23559  0136EE  22DA               	addwfc	fsr2h,f,c
 23560  0136F0  0E30               	movlw	48
 23561  0136F2  6EDE               	movwf	postinc2,c
 23562  0136F4  0E0D               	movlw	13
 23563  0136F6  6EDD               	movwf	postdec2,c
 23564                           
 23565                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23566  0136F8  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23567  0136FC  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23568  013700  0E04               	movlw	4
 23569  013702  6EDF               	movwf	indf2,c
 23570                           
 23571                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23572  013704  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23573  013708  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23574  01370C  0E00               	movlw	0
 23575  01370E  8EDB               	bsf	plusw2,7,c
 23576                           
 23577                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 23578  013710  0E00               	movlw	0
 23579  013712  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 23580                           
 23581                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 23582  013714  0E00               	movlw	0
 23583  013716  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23584                           
 23585                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 23586  013718  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23587  01371A  A4D8               	btfss	status,2,c
 23588  01371C  0012               	return	
 23589                           
 23590                           ;usb_device.c: 1741: {
 23591                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 23592  01371E  EC6A  F0A2         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23593  013722  0012               	return	
 23594  013724                     __end_of_USBCtrlEPServiceComplete:
 23595                           	opt stack 0
 23596                           pclatu	equ	0xFFB
 23597                           pclath	equ	0xFFA
 23598                           tblptru	equ	0xFF8
 23599                           tblptrh	equ	0xFF7
 23600                           tblptrl	equ	0xFF6
 23601                           tablat	equ	0xFF5
 23602                           prodh	equ	0xFF4
 23603                           prodl	equ	0xFF3
 23604                           intcon	equ	0xFF2
 23605                           intcon2	equ	0xFF1
 23606                           postinc0	equ	0xFEE
 23607                           fsr0h	equ	0xFEA
 23608                           fsr0l	equ	0xFE9
 23609                           wreg	equ	0xFE8
 23610                           indf1	equ	0xFE7
 23611                           postinc1	equ	0xFE6
 23612                           postdec1	equ	0xFE5
 23613                           fsr1h	equ	0xFE2
 23614                           fsr1l	equ	0xFE1
 23615                           indf2	equ	0xFDF
 23616                           postinc2	equ	0xFDE
 23617                           postdec2	equ	0xFDD
 23618                           plusw2	equ	0xFDB
 23619                           fsr2h	equ	0xFDA
 23620                           fsr2l	equ	0xFD9
 23621                           status	equ	0xFD8
 23622                           
 23623 ;; *************** function _USBCtrlEPAllowDataStage *****************
 23624 ;; Defined at:
 23625 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;		None
 23628 ;; Auto vars:     Size  Location     Type
 23629 ;;		None
 23630 ;; Return value:  Size  Location     Type
 23631 ;;		None               void
 23632 ;; Registers used:
 23633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23634 ;; Tracked objects:
 23635 ;;		On entry : 0/0
 23636 ;;		On exit  : 0/0
 23637 ;;		Unchanged: 0/0
 23638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23643 ;;Total ram usage:        0 bytes
 23644 ;; Hardware stack levels used:    1
 23645 ;; Hardware stack levels required when called:    1
 23646 ;; This function calls:
 23647 ;;		_USBCtrlTrfTxService
 23648 ;; This function is called by:
 23649 ;;		_USBCtrlEPServiceComplete
 23650 ;; This function uses a non-reentrant model
 23651 ;;
 23652                           
 23653                           	psect	text109
 23654  014DFC                     __ptext109:
 23655                           	opt stack 0
 23656  014DFC                     _USBCtrlEPAllowDataStage:
 23657                           	opt stack 15
 23658                           
 23659                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 23660                           
 23661                           ;incstack = 0
 23662  014DFC  0E00               	movlw	0
 23663  014DFE  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 23664                           
 23665                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 23666  014E00  0E00               	movlw	0
 23667  014E02  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 23668                           
 23669                           ;usb_device.c: 1493: if(controlTransferState == 2)
 23670  014E04  0E02               	movlw	2
 23671  014E06  1849               	xorwf	_controlTransferState,w,c	;volatile
 23672  014E08  A4D8               	btfss	status,2,c
 23673  014E0A  D01F               	goto	i2l6068
 23674                           
 23675                           ;usb_device.c: 1494: {
 23676                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 23677  014E0C  EE20 F001          	lfsr	2,1
 23678  014E10  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23679  014E12  26D9               	addwf	fsr2l,f,c
 23680  014E14  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23681  014E16  22DA               	addwfc	fsr2h,f,c
 23682  014E18  0E08               	movlw	8
 23683  014E1A  6EDF               	movwf	indf2,c
 23684                           
 23685                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23686  014E1C  EE20 F002          	lfsr	2,2
 23687  014E20  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23688  014E22  26D9               	addwf	fsr2l,f,c
 23689  014E24  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23690  014E26  22DA               	addwfc	fsr2h,f,c
 23691  014E28  0E38               	movlw	56
 23692  014E2A  6EDE               	movwf	postinc2,c
 23693  014E2C  0E0D               	movlw	13
 23694  014E2E  6EDD               	movwf	postdec2,c
 23695                           
 23696                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23697  014E30  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23698  014E34  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23699  014E38  0E48               	movlw	72
 23700  014E3A  6EDF               	movwf	indf2,c
 23701                           
 23702                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23703  014E3C  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23704  014E40  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23705  014E44  0E00               	movlw	0
 23706  014E46  8EDB               	bsf	plusw2,7,c
 23707                           
 23708                           ;usb_device.c: 1500: }
 23709  014E48  0012               	return	
 23710  014E4A                     i2l6068:
 23711                           
 23712                           ;usb_device.c: 1501: else
 23713                           ;usb_device.c: 1502: {
 23714                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 23715  014E4A  0100               	movlb	0	; () banked
 23716  014E4C  5179               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 23717  014E4E  010D               	movlb	13	; () banked
 23718  014E50  5D36               	subwf	54,w,b	;volatile
 23719  014E52  0100               	movlb	0	; () banked
 23720  014E54  517A               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 23721  014E56  010D               	movlb	13	; () banked
 23722  014E58  5937               	subwfb	55,w,b	;volatile
 23723  014E5A  B0D8               	btfsc	status,0,c
 23724  014E5C  D004               	goto	i2l6072
 23725                           
 23726                           ; BSR set to: 13
 23727                           ;usb_device.c: 1506: {
 23728                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 23729  014E5E  CD36 F079          	movff	3382,_inPipes+4	;volatile
 23730  014E62  CD37 F07A          	movff	3383,_inPipes+5	;volatile
 23731  014E66                     i2l6072:
 23732                           
 23733                           ; BSR set to: 13
 23734                           ;usb_device.c: 1508: }
 23735                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 23736  014E66  EC23  F09F         	call	_USBCtrlTrfTxService	;wreg free
 23737                           
 23738                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 23739  014E6A  0100               	movlb	0	; () banked
 23740  014E6C  EE20 F002          	lfsr	2,2
 23741  014E70  517B               	movf	_pBDTEntryIn& (0+255),w,b
 23742  014E72  26D9               	addwf	fsr2l,f,c
 23743  014E74  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 23744  014E76  22DA               	addwfc	fsr2h,f,c
 23745  014E78  0E38               	movlw	56
 23746  014E7A  6EDE               	movwf	postinc2,c
 23747  014E7C  0E0D               	movlw	13
 23748  014E7E  6EDD               	movwf	postdec2,c
 23749                           
 23750                           ; BSR set to: 0
 23751                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23752  014E80  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23753  014E84  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23754  014E88  0E48               	movlw	72
 23755  014E8A  6EDF               	movwf	indf2,c
 23756                           
 23757                           ; BSR set to: 0
 23758                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23759  014E8C  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23760  014E90  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23761  014E94  0E00               	movlw	0
 23762  014E96  8EDB               	bsf	plusw2,7,c
 23763  014E98  0012               	return	
 23764  014E9A                     __end_of_USBCtrlEPAllowDataStage:
 23765                           	opt stack 0
 23766                           pclatu	equ	0xFFB
 23767                           pclath	equ	0xFFA
 23768                           tblptru	equ	0xFF8
 23769                           tblptrh	equ	0xFF7
 23770                           tblptrl	equ	0xFF6
 23771                           tablat	equ	0xFF5
 23772                           prodh	equ	0xFF4
 23773                           prodl	equ	0xFF3
 23774                           intcon	equ	0xFF2
 23775                           intcon2	equ	0xFF1
 23776                           postinc0	equ	0xFEE
 23777                           fsr0h	equ	0xFEA
 23778                           fsr0l	equ	0xFE9
 23779                           wreg	equ	0xFE8
 23780                           indf1	equ	0xFE7
 23781                           postinc1	equ	0xFE6
 23782                           postdec1	equ	0xFE5
 23783                           fsr1h	equ	0xFE2
 23784                           fsr1l	equ	0xFE1
 23785                           indf2	equ	0xFDF
 23786                           postinc2	equ	0xFDE
 23787                           postdec2	equ	0xFDD
 23788                           plusw2	equ	0xFDB
 23789                           fsr2h	equ	0xFDA
 23790                           fsr2l	equ	0xFD9
 23791                           status	equ	0xFD8
 23792                           
 23793 ;; *************** function _USBCheckStdRequest *****************
 23794 ;; Defined at:
 23795 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 23796 ;; Parameters:    Size  Location     Type
 23797 ;;		None
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;		None
 23800 ;; Return value:  Size  Location     Type
 23801 ;;		None               void
 23802 ;; Registers used:
 23803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/0
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23813 ;;Total ram usage:        0 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:    5
 23816 ;; This function calls:
 23817 ;;		_USBStdFeatureReqHandler
 23818 ;;		_USBStdGetDscHandler
 23819 ;;		_USBStdGetStatusHandler
 23820 ;;		_USBStdSetCfgHandler
 23821 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23822 ;; This function is called by:
 23823 ;;		_USBCtrlTrfSetupHandler
 23824 ;; This function uses a non-reentrant model
 23825 ;;
 23826                           
 23827                           	psect	text110
 23828  013724                     __ptext110:
 23829                           	opt stack 0
 23830  013724                     _USBCheckStdRequest:
 23831                           	opt stack 12
 23832                           
 23833                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 23834                           
 23835                           ;incstack = 0
 23836  013724  010D               	movlb	13	; () banked
 23837  013726  3930               	swapf	48,w,b	;volatile
 23838  013728  32E8               	rrcf	wreg,f,c
 23839  01372A  0B03               	andlw	3
 23840  01372C  0900               	iorlw	0
 23841  01372E  A4D8               	btfss	status,2,c
 23842  013730  0012               	return	
 23843  013732  D04F               	goto	i2l6548
 23844  013734                     i2l1326:
 23845                           
 23846                           ; BSR set to: 13
 23847                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 23848  013734  0100               	movlb	0	; () banked
 23849  013736  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23850                           
 23851                           ; BSR set to: 0
 23852                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 23853  013738  0E08               	movlw	8
 23854  01373A  6E45               	movwf	_USBDeviceState,c	;volatile
 23855                           
 23856                           ;usb_device.c: 2699: break;
 23857  01373C  0012               	return	
 23858  01373E                     i2l6518:
 23859                           
 23860                           ;usb_device.c: 2701: USBStdGetDscHandler();
 23861  01373E  EC6B  F095         	call	_USBStdGetDscHandler	;wreg free
 23862                           
 23863                           ;usb_device.c: 2702: break;
 23864  013742  0012               	return	
 23865  013744                     i2l6520:
 23866                           
 23867                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 23868  013744  EC6A  F09D         	call	_USBStdSetCfgHandler	;wreg free
 23869                           
 23870                           ;usb_device.c: 2705: break;
 23871  013748  0012               	return	
 23872  01374A                     i2l6522:
 23873                           
 23874                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 23875  01374A  0E56               	movlw	low _USBActiveConfiguration
 23876  01374C  0100               	movlb	0	; () banked
 23877  01374E  6F75               	movwf	_inPipes& (0+255),b	;volatile
 23878  013750  0E00               	movlw	high _USBActiveConfiguration
 23879  013752  0100               	movlb	0	; () banked
 23880  013754  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23881                           
 23882                           ; BSR set to: 0
 23883                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23884  013756  0100               	movlb	0	; () banked
 23885  013758  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 23889  01375A  0E01               	movlw	1
 23890  01375C  0100               	movlb	0	; () banked
 23891  01375E  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23892                           
 23893                           ; BSR set to: 0
 23894                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 23895  013760  0100               	movlb	0	; () banked
 23896  013762  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23897                           
 23898                           ;usb_device.c: 2711: break;
 23899  013764  0012               	return	
 23900  013766                     i2l6530:
 23901                           
 23902                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 23903  013766  EC4C  F0A4         	call	_USBStdGetStatusHandler	;wreg free
 23904                           
 23905                           ;usb_device.c: 2714: break;
 23906  01376A  0012               	return	
 23907  01376C                     i2l6532:
 23908                           
 23909                           ;usb_device.c: 2716: case 3:
 23910                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 23911  01376C  ECB1  F08E         	call	_USBStdFeatureReqHandler	;wreg free
 23912                           
 23913                           ;usb_device.c: 2718: break;
 23914  013770  0012               	return	
 23915  013772                     i2l6534:
 23916                           
 23917                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 23918  013772  010D               	movlb	13	; () banked
 23919  013774  5134               	movf	52,w,b	;volatile
 23920  013776  0D01               	mullw	1
 23921  013778  0E54               	movlw	low _USBAlternateInterface
 23922  01377A  24F3               	addwf	prodl,w,c
 23923  01377C  0100               	movlb	0	; () banked
 23924  01377E  6F75               	movwf	_inPipes& (0+255),b	;volatile
 23925  013780  0E00               	movlw	high _USBAlternateInterface
 23926  013782  20F4               	addwfc	prodh,w,c
 23927  013784  0100               	movlb	0	; () banked
 23928  013786  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23929                           
 23930                           ; BSR set to: 0
 23931                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23932  013788  0100               	movlb	0	; () banked
 23933  01378A  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23934                           
 23935                           ; BSR set to: 0
 23936                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 23937  01378C  0E01               	movlw	1
 23938  01378E  0100               	movlb	0	; () banked
 23939  013790  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23940                           
 23941                           ; BSR set to: 0
 23942                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 23943  013792  0100               	movlb	0	; () banked
 23944  013794  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23945                           
 23946                           ;usb_device.c: 2724: break;
 23947  013796  0012               	return	
 23948  013798                     i2l1335:
 23949                           
 23950                           ; BSR set to: 13
 23951                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 23952  013798  0100               	movlb	0	; () banked
 23953  01379A  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 23957  01379C  010D               	movlb	13	; () banked
 23958  01379E  5134               	movf	52,w,b	;volatile
 23959  0137A0  0D01               	mullw	1
 23960  0137A2  0E54               	movlw	low _USBAlternateInterface
 23961  0137A4  24F3               	addwf	prodl,w,c
 23962  0137A6  6ED9               	movwf	fsr2l,c
 23963  0137A8  0E00               	movlw	high _USBAlternateInterface
 23964  0137AA  20F4               	addwfc	prodh,w,c
 23965  0137AC  6EDA               	movwf	fsr2h,c
 23966  0137AE  CD32 FFDF          	movff	3378,indf2	;volatile
 23967                           
 23968                           ;usb_device.c: 2728: break;
 23969  0137B2  0012               	return	
 23970  0137B4                     i2l6544:
 23971                           
 23972                           ; BSR set to: 13
 23973                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 23974  0137B4  0E00               	movlw	0
 23975  0137B6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23976  0137B8  0E02               	movlw	2
 23977  0137BA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23978  0137BC  0E00               	movlw	0
 23979  0137BE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23980  0137C0  0E00               	movlw	0
 23981  0137C2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23982  0137C4  0E00               	movlw	0
 23983  0137C6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23984  0137C8  0E00               	movlw	0
 23985  0137CA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23986  0137CC  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23987                           
 23988                           ;usb_device.c: 2735: }
 23989                           
 23990                           ;usb_device.c: 2734: break;
 23991                           
 23992                           ;usb_device.c: 2733: default:
 23993                           
 23994                           ;usb_device.c: 2732: case 12:
 23995                           
 23996                           ;usb_device.c: 2731: break;
 23997  0137D0  0012               	return	
 23998  0137D2                     i2l6548:
 23999  0137D2  010D               	movlb	13	; () banked
 24000  0137D4  5131               	movf	49,w,b	;volatile
 24001                           
 24002                           ; Switch size 1, requested type "space"
 24003                           ; Number of cases is 11, Range of values is 0 to 12
 24004                           ; switch strategies available:
 24005                           ; Name         Instructions Cycles
 24006                           ; simple_byte           34    18 (average)
 24007                           ;	Chosen strategy is simple_byte
 24008  0137D6  0A00               	xorlw	0	; case 0
 24009  0137D8  B4D8               	btfsc	status,2,c
 24010  0137DA  D7C5               	goto	i2l6530
 24011  0137DC  0A01               	xorlw	1	; case 1
 24012  0137DE  B4D8               	btfsc	status,2,c
 24013  0137E0  D7C5               	goto	i2l6532
 24014  0137E2  0A02               	xorlw	2	; case 3
 24015  0137E4  B4D8               	btfsc	status,2,c
 24016  0137E6  D7C2               	goto	i2l6532
 24017  0137E8  0A06               	xorlw	6	; case 5
 24018  0137EA  B4D8               	btfsc	status,2,c
 24019  0137EC  D7A3               	goto	i2l1326
 24020  0137EE  0A03               	xorlw	3	; case 6
 24021  0137F0  B4D8               	btfsc	status,2,c
 24022  0137F2  D7A5               	goto	i2l6518
 24023  0137F4  0A01               	xorlw	1	; case 7
 24024  0137F6  B4D8               	btfsc	status,2,c
 24025  0137F8  D7DD               	goto	i2l6544
 24026  0137FA  0A0F               	xorlw	15	; case 8
 24027  0137FC  B4D8               	btfsc	status,2,c
 24028  0137FE  D7A5               	goto	i2l6522
 24029  013800  0A01               	xorlw	1	; case 9
 24030  013802  B4D8               	btfsc	status,2,c
 24031  013804  D79F               	goto	i2l6520
 24032  013806  0A03               	xorlw	3	; case 10
 24033  013808  B4D8               	btfsc	status,2,c
 24034  01380A  D7B3               	goto	i2l6534
 24035  01380C  0A01               	xorlw	1	; case 11
 24036  01380E  B4D8               	btfsc	status,2,c
 24037  013810  D7C3               	goto	i2l1335
 24038  013812  0A07               	xorlw	7	; case 12
 24039  013814  0012               	return	
 24040  013816                     __end_of_USBCheckStdRequest:
 24041                           	opt stack 0
 24042                           pclatu	equ	0xFFB
 24043                           pclath	equ	0xFFA
 24044                           tblptru	equ	0xFF8
 24045                           tblptrh	equ	0xFF7
 24046                           tblptrl	equ	0xFF6
 24047                           tablat	equ	0xFF5
 24048                           prodh	equ	0xFF4
 24049                           prodl	equ	0xFF3
 24050                           intcon	equ	0xFF2
 24051                           intcon2	equ	0xFF1
 24052                           postinc0	equ	0xFEE
 24053                           fsr0h	equ	0xFEA
 24054                           fsr0l	equ	0xFE9
 24055                           wreg	equ	0xFE8
 24056                           indf1	equ	0xFE7
 24057                           postinc1	equ	0xFE6
 24058                           postdec1	equ	0xFE5
 24059                           fsr1h	equ	0xFE2
 24060                           fsr1l	equ	0xFE1
 24061                           indf2	equ	0xFDF
 24062                           postinc2	equ	0xFDE
 24063                           postdec2	equ	0xFDD
 24064                           plusw2	equ	0xFDB
 24065                           fsr2h	equ	0xFDA
 24066                           fsr2l	equ	0xFD9
 24067                           status	equ	0xFD8
 24068                           
 24069 ;; *************** function _USBStdSetCfgHandler *****************
 24070 ;; Defined at:
 24071 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 24072 ;; Parameters:    Size  Location     Type
 24073 ;;		None
 24074 ;; Auto vars:     Size  Location     Type
 24075 ;;  i               1   20[COMRAM] unsigned char 
 24076 ;; Return value:  Size  Location     Type
 24077 ;;		None               void
 24078 ;; Registers used:
 24079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24080 ;; Tracked objects:
 24081 ;;		On entry : 0/0
 24082 ;;		On exit  : 0/0
 24083 ;;		Unchanged: 0/0
 24084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24089 ;;Total ram usage:        1 bytes
 24090 ;; Hardware stack levels used:    1
 24091 ;; Hardware stack levels required when called:    4
 24092 ;; This function calls:
 24093 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24094 ;;		i2_memset
 24095 ;; This function is called by:
 24096 ;;		_USBCheckStdRequest
 24097 ;; This function uses a non-reentrant model
 24098 ;;
 24099                           
 24100                           	psect	text111
 24101  013AD4                     __ptext111:
 24102                           	opt stack 0
 24103  013AD4                     _USBStdSetCfgHandler:
 24104                           	opt stack 12
 24105                           
 24106                           ;usb_device.c: 1970: uint8_t i;
 24107                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 24108                           
 24109                           ;incstack = 0
 24110  013AD4  0100               	movlb	0	; () banked
 24111  013AD6  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24112                           
 24113                           ; BSR set to: 0
 24114                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 24115  013AD8  0E27               	movlw	39
 24116  013ADA  6E01               	movwf	i2memset@p1,c
 24117  013ADC  0E0F               	movlw	15
 24118  013ADE  6E02               	movwf	i2memset@p1+1,c
 24119  013AE0  0E00               	movlw	0
 24120  013AE2  6E04               	movwf	i2memset@c+1,c
 24121  013AE4  0E00               	movlw	0
 24122  013AE6  6E03               	movwf	i2memset@c,c
 24123  013AE8  0E00               	movlw	0
 24124  013AEA  6E06               	movwf	i2memset@n+1,c
 24125  013AEC  0E02               	movlw	2
 24126  013AEE  6E05               	movwf	i2memset@n,c
 24127  013AF0  ECFE  F0AF         	call	i2_memset	;wreg free
 24128                           
 24129                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 24130  013AF4  0E00               	movlw	0
 24131  013AF6  6E01               	movwf	i2memset@p1,c
 24132  013AF8  0E0D               	movlw	13
 24133  013AFA  6E02               	movwf	i2memset@p1+1,c
 24134  013AFC  0E00               	movlw	0
 24135  013AFE  6E04               	movwf	i2memset@c+1,c
 24136  013B00  0E00               	movlw	0
 24137  013B02  6E03               	movwf	i2memset@c,c
 24138  013B04  0E00               	movlw	0
 24139  013B06  6E06               	movwf	i2memset@n+1,c
 24140  013B08  0E30               	movlw	48
 24141  013B0A  6E05               	movwf	i2memset@n,c
 24142  013B0C  ECFE  F0AF         	call	i2_memset	;wreg free
 24143                           
 24144                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 24145  013B10  8C65               	bsf	3941,6,c	;volatile
 24146                           
 24147                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 24148  013B12  0E00               	movlw	0
 24149  013B14  6E15               	movwf	USBStdSetCfgHandler@i,c
 24150  013B16                     i2l6088:
 24151  013B16  0E02               	movlw	2
 24152  013B18  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 24153  013B1A  D001               	goto	i2l6092
 24154  013B1C  D016               	goto	i2l6098
 24155  013B1E                     i2l6092:
 24156                           
 24157                           ;usb_device.c: 1988: {
 24158                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 24159  013B1E  5015               	movf	USBStdSetCfgHandler@i,w,c
 24160  013B20  0D01               	mullw	1
 24161  013B22  0E8A               	movlw	low _ep_data_in
 24162  013B24  24F3               	addwf	prodl,w,c
 24163  013B26  6ED9               	movwf	fsr2l,c
 24164  013B28  0E00               	movlw	high _ep_data_in
 24165  013B2A  20F4               	addwfc	prodh,w,c
 24166  013B2C  6EDA               	movwf	fsr2h,c
 24167  013B2E  0E00               	movlw	0
 24168  013B30  6EDF               	movwf	indf2,c
 24169                           
 24170                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 24171  013B32  5015               	movf	USBStdSetCfgHandler@i,w,c
 24172  013B34  0D01               	mullw	1
 24173  013B36  0E8D               	movlw	low _ep_data_out
 24174  013B38  24F3               	addwf	prodl,w,c
 24175  013B3A  6ED9               	movwf	fsr2l,c
 24176  013B3C  0E00               	movlw	high _ep_data_out
 24177  013B3E  20F4               	addwfc	prodh,w,c
 24178  013B40  6EDA               	movwf	fsr2h,c
 24179  013B42  0E00               	movlw	0
 24180  013B44  6EDF               	movwf	indf2,c
 24181  013B46  2A15               	incf	USBStdSetCfgHandler@i,f,c
 24182  013B48  D7E6               	goto	i2l6088
 24183  013B4A                     i2l6098:
 24184                           
 24185                           ;usb_device.c: 1991: }
 24186                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 24187  013B4A  0E54               	movlw	low _USBAlternateInterface
 24188  013B4C  6E01               	movwf	i2memset@p1,c
 24189  013B4E  0E00               	movlw	high _USBAlternateInterface
 24190  013B50  6E02               	movwf	i2memset@p1+1,c
 24191  013B52  0E00               	movlw	0
 24192  013B54  6E04               	movwf	i2memset@c+1,c
 24193  013B56  0E00               	movlw	0
 24194  013B58  6E03               	movwf	i2memset@c,c
 24195  013B5A  0E00               	movlw	0
 24196  013B5C  6E06               	movwf	i2memset@n+1,c
 24197  013B5E  0E02               	movlw	2
 24198  013B60  6E05               	movwf	i2memset@n,c
 24199  013B62  ECFE  F0AF         	call	i2_memset	;wreg free
 24200                           
 24201                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 24202  013B66  9C65               	bcf	3941,6,c	;volatile
 24203                           
 24204                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24205  013B68  0E08               	movlw	8
 24206  013B6A  0100               	movlb	0	; () banked
 24207  013B6C  6F7B               	movwf	_pBDTEntryIn& (0+255),b
 24208  013B6E  0E0D               	movlw	13
 24209  013B70  0100               	movlb	0	; () banked
 24210  013B72  6F7C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24211                           
 24212                           ; BSR set to: 0
 24213                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 24214  013B74  0E00               	movlw	0
 24215  013B76  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 24216  013B78  0E0D               	movlw	13
 24217  013B7A  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24218                           
 24219                           ; BSR set to: 0
 24220                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24221  013B7C  C037  F039         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24222  013B80  C038  F03A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24223                           
 24224                           ; BSR set to: 0
 24225                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 24226  013B84  CD32 F056          	movff	3378,_USBActiveConfiguration	;volatile
 24227                           
 24228                           ; BSR set to: 0
 24229                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 24230  013B88  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 24231  013B8A  A4D8               	btfss	status,2,c
 24232  013B8C  D003               	goto	i2l6114
 24233                           
 24234                           ; BSR set to: 0
 24235                           ;usb_device.c: 2010: {
 24236                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 24237  013B8E  0E10               	movlw	16
 24238  013B90  6E45               	movwf	_USBDeviceState,c	;volatile
 24239                           
 24240                           ;usb_device.c: 2013: }
 24241  013B92  0012               	return	
 24242  013B94                     i2l6114:
 24243                           
 24244                           ; BSR set to: 0
 24245                           ;usb_device.c: 2014: else
 24246                           ;usb_device.c: 2015: {
 24247                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 24248  013B94  0E00               	movlw	0
 24249  013B96  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24250  013B98  0E01               	movlw	1
 24251  013B9A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24252  013B9C  0E56               	movlw	low _USBActiveConfiguration
 24253  013B9E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24254  013BA0  0E00               	movlw	high _USBActiveConfiguration
 24255  013BA2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24256  013BA4  0E00               	movlw	0
 24257  013BA6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24258  013BA8  0E01               	movlw	1
 24259  013BAA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24260  013BAC  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24261                           
 24262                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 24263  013BB0  0E20               	movlw	32
 24264  013BB2  6E45               	movwf	_USBDeviceState,c	;volatile
 24265  013BB4  0012               	return	
 24266  013BB6                     __end_of_USBStdSetCfgHandler:
 24267                           	opt stack 0
 24268                           pclatu	equ	0xFFB
 24269                           pclath	equ	0xFFA
 24270                           tblptru	equ	0xFF8
 24271                           tblptrh	equ	0xFF7
 24272                           tblptrl	equ	0xFF6
 24273                           tablat	equ	0xFF5
 24274                           prodh	equ	0xFF4
 24275                           prodl	equ	0xFF3
 24276                           intcon	equ	0xFF2
 24277                           intcon2	equ	0xFF1
 24278                           postinc0	equ	0xFEE
 24279                           fsr0h	equ	0xFEA
 24280                           fsr0l	equ	0xFE9
 24281                           wreg	equ	0xFE8
 24282                           indf1	equ	0xFE7
 24283                           postinc1	equ	0xFE6
 24284                           postdec1	equ	0xFE5
 24285                           fsr1h	equ	0xFE2
 24286                           fsr1l	equ	0xFE1
 24287                           indf2	equ	0xFDF
 24288                           postinc2	equ	0xFDE
 24289                           postdec2	equ	0xFDD
 24290                           plusw2	equ	0xFDB
 24291                           fsr2h	equ	0xFDA
 24292                           fsr2l	equ	0xFD9
 24293                           status	equ	0xFD8
 24294                           
 24295 ;; *************** function i2_memset *****************
 24296 ;; Defined at:
 24297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;  p1              2    0[COMRAM] PTR void 
 24300 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24301 ;;  c               2    2[COMRAM] int 
 24302 ;;  n               2    4[COMRAM] unsigned int 
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;  memset          2    6[COMRAM] PTR unsigned char 
 24305 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24306 ;; Return value:  Size  Location     Type
 24307 ;;                  2    0[COMRAM] PTR void 
 24308 ;; Registers used:
 24309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24310 ;; Tracked objects:
 24311 ;;		On entry : 0/0
 24312 ;;		On exit  : 0/0
 24313 ;;		Unchanged: 0/0
 24314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24315 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24318 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24319 ;;Total ram usage:        8 bytes
 24320 ;; Hardware stack levels used:    1
 24321 ;; This function calls:
 24322 ;;		Nothing
 24323 ;; This function is called by:
 24324 ;;		_USBStdSetCfgHandler
 24325 ;;		i2_USBDeviceInit
 24326 ;; This function uses a non-reentrant model
 24327 ;;
 24328                           
 24329                           	psect	text112
 24330  015FFC                     __ptext112:
 24331                           	opt stack 0
 24332  015FFC                     i2_memset:
 24333                           	opt stack 18
 24334                           
 24335                           ;incstack = 0
 24336  015FFC  C001  F007         	movff	i2memset@p1,i2memset@p
 24337  016000  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 24338  016004  D008               	goto	i2l5946
 24339  016006                     i2l5942:
 24340  016006  C007  FFD9         	movff	i2memset@p,fsr2l
 24341  01600A  C008  FFDA         	movff	i2memset@p+1,fsr2h
 24342  01600E  C003  FFDF         	movff	i2memset@c,indf2
 24343  016012  4A07               	infsnz	i2memset@p,f,c
 24344  016014  2A08               	incf	i2memset@p+1,f,c
 24345  016016                     i2l5946:
 24346  016016  0605               	decf	i2memset@n,f,c
 24347  016018  A0D8               	btfss	status,0,c
 24348  01601A  0606               	decf	i2memset@n+1,f,c
 24349  01601C  2805               	incf	i2memset@n,w,c
 24350  01601E  E1F3               	bnz	i2l5942
 24351  016020  2806               	incf	i2memset@n+1,w,c
 24352  016022  B4D8               	btfsc	status,2,c
 24353  016024  0012               	return	
 24354  016026  D7EF               	goto	i2l5942
 24355  016028                     __end_ofi2_memset:
 24356                           	opt stack 0
 24357                           pclatu	equ	0xFFB
 24358                           pclath	equ	0xFFA
 24359                           tblptru	equ	0xFF8
 24360                           tblptrh	equ	0xFF7
 24361                           tblptrl	equ	0xFF6
 24362                           tablat	equ	0xFF5
 24363                           prodh	equ	0xFF4
 24364                           prodl	equ	0xFF3
 24365                           intcon	equ	0xFF2
 24366                           intcon2	equ	0xFF1
 24367                           postinc0	equ	0xFEE
 24368                           fsr0h	equ	0xFEA
 24369                           fsr0l	equ	0xFE9
 24370                           wreg	equ	0xFE8
 24371                           indf1	equ	0xFE7
 24372                           postinc1	equ	0xFE6
 24373                           postdec1	equ	0xFE5
 24374                           fsr1h	equ	0xFE2
 24375                           fsr1l	equ	0xFE1
 24376                           indf2	equ	0xFDF
 24377                           postinc2	equ	0xFDE
 24378                           postdec2	equ	0xFDD
 24379                           plusw2	equ	0xFDB
 24380                           fsr2h	equ	0xFDA
 24381                           fsr2l	equ	0xFD9
 24382                           status	equ	0xFD8
 24383                           
 24384 ;; *************** function _USBStdGetStatusHandler *****************
 24385 ;; Defined at:
 24386 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;  p               2    1[COMRAM] PTR struct __BDT
 24391 ;;		 -> NULL(0), BDT(48), 
 24392 ;; Return value:  Size  Location     Type
 24393 ;;		None               void
 24394 ;; Registers used:
 24395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24396 ;; Tracked objects:
 24397 ;;		On entry : 0/0
 24398 ;;		On exit  : 0/0
 24399 ;;		Unchanged: 0/0
 24400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24405 ;;Total ram usage:        3 bytes
 24406 ;; Hardware stack levels used:    1
 24407 ;; This function calls:
 24408 ;;		Nothing
 24409 ;; This function is called by:
 24410 ;;		_USBCheckStdRequest
 24411 ;; This function uses a non-reentrant model
 24412 ;;
 24413                           
 24414                           	psect	text113
 24415  014898                     __ptext113:
 24416                           	opt stack 0
 24417  014898                     _USBStdGetStatusHandler:
 24418                           	opt stack 16
 24419                           
 24420                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 24421                           
 24422                           ;incstack = 0
 24423  014898  0E00               	movlw	0
 24424  01489A  010D               	movlb	13	; () banked
 24425  01489C  6F38               	movwf	56,b	;volatile
 24426                           
 24427                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 24428  01489E  0E00               	movlw	0
 24429  0148A0  010D               	movlb	13	; () banked
 24430  0148A2  6F39               	movwf	57,b	;volatile
 24431                           
 24432                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 24433  0148A4  D03B               	goto	i2l6170
 24434  0148A6                     i2l1262:
 24435                           
 24436                           ; BSR set to: 13
 24437                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 24438  0148A6  0100               	movlb	0	; () banked
 24439  0148A8  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24440                           
 24441                           ;usb_device.c: 2145: }
 24442                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 24443                           
 24444                           ; BSR set to: 13
 24445                           
 24446                           ; BSR set to: 0
 24447                           ;usb_device.c: 2143: {
 24448                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 24449                           
 24450                           ;usb_device.c: 2142: if(0 == 1)
 24451  0148AA  0441               	decf	_RemoteWakeup,w,c	;volatile
 24452  0148AC  A4D8               	btfss	status,2,c
 24453  0148AE  D042               	goto	i2l1265
 24454                           
 24455                           ;usb_device.c: 2148: {
 24456                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 24457  0148B0  010D               	movlb	13	; () banked
 24458  0148B2  8338               	bsf	56,1,b	;volatile
 24459                           
 24460                           ; BSR set to: 13
 24461                           ;usb_device.c: 2150: }
 24462                           ;usb_device.c: 2151: break;
 24463  0148B4  D03F               	goto	i2l1265
 24464  0148B6                     i2l1266:
 24465                           
 24466                           ; BSR set to: 13
 24467                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 24468  0148B6  0100               	movlb	0	; () banked
 24469  0148B8  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24470                           
 24471                           ;usb_device.c: 2154: break;
 24472  0148BA  D03C               	goto	i2l1265
 24473  0148BC                     i2l1267:
 24474                           
 24475                           ; BSR set to: 13
 24476                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 24477  0148BC  0100               	movlb	0	; () banked
 24478  0148BE  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24479                           
 24480                           ;usb_device.c: 2160: {
 24481                           ;usb_device.c: 2161: BDT_ENTRY *p;
 24482                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 24483  0148C0  010D               	movlb	13	; () banked
 24484  0148C2  BF34               	btfsc	52,7,b	;volatile
 24485  0148C4  D00B               	goto	i2l6160
 24486                           
 24487                           ; BSR set to: 13
 24488                           ;usb_device.c: 2164: {
 24489                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 24490  0148C6  010D               	movlb	13	; () banked
 24491  0148C8  5134               	movf	52,w,b	;volatile
 24492  0148CA  0B0F               	andlw	15
 24493  0148CC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 24494  0148CE  5001               	movf	??_USBStdGetStatusHandler,w,c
 24495  0148D0  0D02               	mullw	2
 24496  0148D2  0E81               	movlw	low _pBDTEntryOut
 24497  0148D4  24F3               	addwf	prodl,w,c
 24498  0148D6  6ED9               	movwf	fsr2l,c
 24499  0148D8  0E00               	movlw	high _pBDTEntryOut
 24500  0148DA  D00A               	goto	L12
 24501  0148DC                     i2l6160:
 24502                           
 24503                           ; BSR set to: 13
 24504                           ;usb_device.c: 2167: else
 24505                           ;usb_device.c: 2168: {
 24506                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 24507  0148DC  010D               	movlb	13	; () banked
 24508  0148DE  5134               	movf	52,w,b	;volatile
 24509  0148E0  0B0F               	andlw	15
 24510  0148E2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 24511  0148E4  5001               	movf	??_USBStdGetStatusHandler,w,c
 24512  0148E6  0D02               	mullw	2
 24513  0148E8  0E7B               	movlw	low _pBDTEntryIn
 24514  0148EA  24F3               	addwf	prodl,w,c
 24515  0148EC  6ED9               	movwf	fsr2l,c
 24516  0148EE  0E00               	movlw	high _pBDTEntryIn
 24517  0148F0                     L12:
 24518  0148F0  20F4               	addwfc	prodh,w,c
 24519  0148F2  6EDA               	movwf	fsr2h,c
 24520  0148F4  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 24521  0148F8  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 24522                           
 24523                           ; BSR set to: 13
 24524                           ;usb_device.c: 2170: }
 24525                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 24526                           
 24527                           ; BSR set to: 13
 24528  0148FC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 24529  014900  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 24530  014904  AEDF               	btfss	indf2,7,c
 24531  014906  D016               	goto	i2l1265
 24532                           
 24533                           ; BSR set to: 13
 24534  014908  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 24535  01490C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 24536  014910  A4DF               	btfss	indf2,2,c
 24537  014912  D010               	goto	i2l1265
 24538                           
 24539                           ; BSR set to: 13
 24540                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 24541  014914  0E01               	movlw	1
 24542  014916  010D               	movlb	13	; () banked
 24543  014918  6F38               	movwf	56,b	;volatile
 24544                           
 24545                           ; BSR set to: 13
 24546                           ;usb_device.c: 2175: }
 24547                           ;usb_device.c: 2176: }
 24548                           
 24549                           ; BSR set to: 13
 24550                           ;usb_device.c: 2174: break;
 24551  01491A  D00C               	goto	i2l1265
 24552  01491C                     i2l6170:
 24553                           
 24554                           ; BSR set to: 13
 24555  01491C  010D               	movlb	13	; () banked
 24556  01491E  5130               	movf	48,w,b	;volatile
 24557  014920  0B1F               	andlw	31
 24558                           
 24559                           ; Switch size 1, requested type "space"
 24560                           ; Number of cases is 3, Range of values is 0 to 2
 24561                           ; switch strategies available:
 24562                           ; Name         Instructions Cycles
 24563                           ; simple_byte           10     6 (average)
 24564                           ;	Chosen strategy is simple_byte
 24565  014922  0A00               	xorlw	0	; case 0
 24566  014924  B4D8               	btfsc	status,2,c
 24567  014926  D7BF               	goto	i2l1262
 24568  014928  0A01               	xorlw	1	; case 1
 24569  01492A  B4D8               	btfsc	status,2,c
 24570  01492C  D7C4               	goto	i2l1266
 24571  01492E  0A03               	xorlw	3	; case 2
 24572  014930  B4D8               	btfsc	status,2,c
 24573  014932  D7C4               	goto	i2l1267
 24574  014934                     i2l1265:
 24575                           
 24576                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 24577  014934  0100               	movlb	0	; () banked
 24578  014936  AF78               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 24579  014938  0012               	return	
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;usb_device.c: 2179: {
 24583                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 24584  01493A  0E38               	movlw	56
 24585  01493C  0100               	movlb	0	; () banked
 24586  01493E  6F75               	movwf	_inPipes& (0+255),b	;volatile
 24587  014940  0E0D               	movlw	13
 24588  014942  0100               	movlb	0	; () banked
 24589  014944  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24590                           
 24591                           ; BSR set to: 0
 24592                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24593  014946  0100               	movlb	0	; () banked
 24594  014948  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 24598  01494A  0E02               	movlw	2
 24599  01494C  0100               	movlb	0	; () banked
 24600  01494E  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24601  014950  0012               	return	
 24602  014952                     __end_of_USBStdGetStatusHandler:
 24603                           	opt stack 0
 24604                           pclatu	equ	0xFFB
 24605                           pclath	equ	0xFFA
 24606                           tblptru	equ	0xFF8
 24607                           tblptrh	equ	0xFF7
 24608                           tblptrl	equ	0xFF6
 24609                           tablat	equ	0xFF5
 24610                           prodh	equ	0xFF4
 24611                           prodl	equ	0xFF3
 24612                           intcon	equ	0xFF2
 24613                           intcon2	equ	0xFF1
 24614                           postinc0	equ	0xFEE
 24615                           fsr0h	equ	0xFEA
 24616                           fsr0l	equ	0xFE9
 24617                           wreg	equ	0xFE8
 24618                           indf1	equ	0xFE7
 24619                           postinc1	equ	0xFE6
 24620                           postdec1	equ	0xFE5
 24621                           fsr1h	equ	0xFE2
 24622                           fsr1l	equ	0xFE1
 24623                           indf2	equ	0xFDF
 24624                           postinc2	equ	0xFDE
 24625                           postdec2	equ	0xFDD
 24626                           plusw2	equ	0xFDB
 24627                           fsr2h	equ	0xFDA
 24628                           fsr2l	equ	0xFD9
 24629                           status	equ	0xFD8
 24630                           
 24631 ;; *************** function _USBStdGetDscHandler *****************
 24632 ;; Defined at:
 24633 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;		None
 24636 ;; Auto vars:     Size  Location     Type
 24637 ;;		None
 24638 ;; Return value:  Size  Location     Type
 24639 ;;		None               void
 24640 ;; Registers used:
 24641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24642 ;; Tracked objects:
 24643 ;;		On entry : 0/0
 24644 ;;		On exit  : 0/0
 24645 ;;		Unchanged: 0/0
 24646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;Total ram usage:        2 bytes
 24652 ;; Hardware stack levels used:    1
 24653 ;; This function calls:
 24654 ;;		Nothing
 24655 ;; This function is called by:
 24656 ;;		_USBCheckStdRequest
 24657 ;; This function uses a non-reentrant model
 24658 ;;
 24659                           
 24660                           	psect	text114
 24661  012AD6                     __ptext114:
 24662                           	opt stack 0
 24663  012AD6                     _USBStdGetDscHandler:
 24664                           	opt stack 16
 24665                           
 24666                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 24667                           
 24668                           ; BSR set to: 0
 24669                           ;incstack = 0
 24670  012AD6  0E80               	movlw	128
 24671  012AD8  010D               	movlb	13	; () banked
 24672  012ADA  1930               	xorwf	48,w,b	;volatile
 24673  012ADC  A4D8               	btfss	status,2,c
 24674  012ADE  0012               	return	
 24675                           
 24676                           ; BSR set to: 13
 24677                           ;usb_device.c: 2046: {
 24678                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 24679  012AE0  0EC0               	movlw	192
 24680  012AE2  0100               	movlb	0	; () banked
 24681  012AE4  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24682                           
 24683                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 24684  012AE6  D092               	goto	i2l6148
 24685  012AE8                     i2l6122:
 24686                           
 24687                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 24688  012AE8  0E1E               	movlw	low _device_dsc
 24689  012AEA  0100               	movlb	0	; () banked
 24690  012AEC  6F75               	movwf	_inPipes& (0+255),b	;volatile
 24691  012AEE  0EFC               	movlw	high _device_dsc
 24692  012AF0  0100               	movlb	0	; () banked
 24693  012AF2  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24694                           
 24695                           ; BSR set to: 0
 24696                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 24697  012AF4  0E00               	movlw	0
 24698  012AF6  0100               	movlb	0	; () banked
 24699  012AF8  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24700  012AFA  0E12               	movlw	18
 24701  012AFC  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24702                           
 24703                           ;usb_device.c: 2058: break;
 24704  012AFE  0012               	return	
 24705  012B00                     i2l6126:
 24706                           
 24707                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 24708  012B00  010D               	movlb	13	; () banked
 24709  012B02  5132               	movf	50,w,b	;volatile
 24710  012B04  A4D8               	btfss	status,2,c
 24711  012B06  D049               	goto	i2l6134
 24712                           
 24713                           ; BSR set to: 13
 24714                           ;usb_device.c: 2064: {
 24715                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 24716  012B08  010D               	movlb	13	; () banked
 24717  012B0A  5132               	movf	50,w,b	;volatile
 24718  012B0C  0D02               	mullw	2
 24719  012B0E  0E55               	movlw	low _USB_CD_Ptr
 24720  012B10  24F3               	addwf	prodl,w,c
 24721  012B12  6EF6               	movwf	tblptrl,c
 24722  012B14  0EFB               	movlw	high _USB_CD_Ptr
 24723  012B16  20F4               	addwfc	prodh,w,c
 24724  012B18  6EF7               	movwf	tblptrh,c
 24725  012B1A                     	if	1	;There are 3 active tblptr bytes
 24726  012B1A  6AF8               	clrf	tblptru,c
 24727  012B1C  0E00               	movlw	low (__mediumconst shr (0+16))
 24728  012B1E  22F8               	addwfc	tblptru,f,c
 24729  012B20                     	endif
 24730  012B20  0009               	tblrd		*+
 24731  012B22  CFF5 F075          	movff	tablat,_inPipes	;volatile
 24732  012B26  000A               	tblrd		*-
 24733  012B28  CFF5 F076          	movff	tablat,_inPipes+1	;volatile
 24734                           
 24735                           ; BSR set to: 13
 24736                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 24737  012B2C  0E02               	movlw	2
 24738  012B2E  0100               	movlb	0	; () banked
 24739  012B30  2575               	addwf	_inPipes& (0+255),w,b	;volatile
 24740  012B32  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 24741  012B34  0E00               	movlw	0
 24742  012B36  0100               	movlb	0	; () banked
 24743  012B38  2176               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 24744  012B3A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 24745  012B3C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 24746  012B40  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 24747  012B44  0E00               	movlw	low (__mediumconst shr (0+16))
 24748  012B46  6EF8               	movwf	tblptru,c
 24749  012B48  0E0E               	movlw	(high __ramtop+-1)
 24750  012B4A  64F7               	cpfsgt	tblptrh,c
 24751  012B4C  D003               	bra	i2u555_47
 24752  012B4E  0008               	tblrd		*
 24753  012B50  50F5               	movf	tablat,w,c
 24754  012B52  D005               	bra	i2u555_40
 24755  012B54                     i2u555_47:
 24756  012B54  CFF6 FFE1          	movff	tblptrl,fsr1l
 24757  012B58  CFF7 FFE2          	movff	tblptrh,fsr1h
 24758  012B5C  50E7               	movf	indf1,w,c
 24759  012B5E                     i2u555_40:
 24760  012B5E  0100               	movlb	0	; () banked
 24761  012B60  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24762                           
 24763                           ; BSR set to: 0
 24764                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 24765  012B62  0E03               	movlw	3
 24766  012B64  0100               	movlb	0	; () banked
 24767  012B66  2575               	addwf	_inPipes& (0+255),w,b	;volatile
 24768  012B68  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 24769  012B6A  0E00               	movlw	0
 24770  012B6C  0100               	movlb	0	; () banked
 24771  012B6E  2176               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 24772  012B70  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 24773  012B72  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 24774  012B76  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 24775  012B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 24776  012B7C  6EF8               	movwf	tblptru,c
 24777  012B7E  0E0E               	movlw	(high __ramtop+-1)
 24778  012B80  64F7               	cpfsgt	tblptrh,c
 24779  012B82  D003               	bra	i2u556_47
 24780  012B84  0008               	tblrd		*
 24781  012B86  50F5               	movf	tablat,w,c
 24782  012B88  D005               	bra	i2u556_40
 24783  012B8A                     i2u556_47:
 24784  012B8A  CFF6 FFE1          	movff	tblptrl,fsr1l
 24785  012B8E  CFF7 FFE2          	movff	tblptrh,fsr1h
 24786  012B92  50E7               	movf	indf1,w,c
 24787  012B94                     i2u556_40:
 24788  012B94  0100               	movlb	0	; () banked
 24789  012B96  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24790                           
 24791                           ;usb_device.c: 2076: }
 24792  012B98  0012               	return	
 24793  012B9A                     i2l6134:
 24794                           
 24795                           ;usb_device.c: 2077: else
 24796                           ;usb_device.c: 2078: {
 24797                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 24798  012B9A  0E00               	movlw	0
 24799  012B9C  0100               	movlb	0	; () banked
 24800  012B9E  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24801                           
 24802                           ; BSR set to: 0
 24803                           ;usb_device.c: 2080: }
 24804                           ;usb_device.c: 2081: break;
 24805  012BA0  0012               	return	
 24806  012BA2                     i2l6136:
 24807                           
 24808                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 24809  012BA2  0E03               	movlw	3
 24810  012BA4  010D               	movlb	13	; () banked
 24811  012BA6  6132               	cpfslt	50,b	;volatile
 24812  012BA8  D029               	goto	i2l6142
 24813                           
 24814                           ; BSR set to: 13
 24815                           ;usb_device.c: 2087: {
 24816                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 24817  012BAA  010D               	movlb	13	; () banked
 24818  012BAC  5132               	movf	50,w,b	;volatile
 24819  012BAE  0D02               	mullw	2
 24820  012BB0  0E4F               	movlw	low _USB_SD_Ptr
 24821  012BB2  24F3               	addwf	prodl,w,c
 24822  012BB4  6EF6               	movwf	tblptrl,c
 24823  012BB6  0EFB               	movlw	high _USB_SD_Ptr
 24824  012BB8  20F4               	addwfc	prodh,w,c
 24825  012BBA  6EF7               	movwf	tblptrh,c
 24826  012BBC                     	if	1	;There are 3 active tblptr bytes
 24827  012BBC  6AF8               	clrf	tblptru,c
 24828  012BBE  0E00               	movlw	low (__mediumconst shr (0+16))
 24829  012BC0  22F8               	addwfc	tblptru,f,c
 24830  012BC2                     	endif
 24831  012BC2  0009               	tblrd		*+
 24832  012BC4  CFF5 F075          	movff	tablat,_inPipes	;volatile
 24833  012BC8  000A               	tblrd		*-
 24834  012BCA  CFF5 F076          	movff	tablat,_inPipes+1	;volatile
 24835                           
 24836                           ; BSR set to: 13
 24837                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 24838  012BCE  C075  FFF6         	movff	_inPipes,tblptrl	;volatile
 24839  012BD2  C076  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24840  012BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 24841  012BD8  6EF8               	movwf	tblptru,c
 24842  012BDA  0E0E               	movlw	(high __ramtop+-1)
 24843  012BDC  64F7               	cpfsgt	tblptrh,c
 24844  012BDE  D003               	bra	i2u558_47
 24845  012BE0  0008               	tblrd		*
 24846  012BE2  50F5               	movf	tablat,w,c
 24847  012BE4  D005               	bra	i2u558_40
 24848  012BE6                     i2u558_47:
 24849  012BE6  CFF6 FFE1          	movff	tblptrl,fsr1l
 24850  012BEA  CFF7 FFE2          	movff	tblptrh,fsr1h
 24851  012BEE  50E7               	movf	indf1,w,c
 24852  012BF0                     i2u558_40:
 24853  012BF0  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 24854  012BF2  5001               	movf	??_USBStdGetDscHandler,w,c
 24855  012BF4  0100               	movlb	0	; () banked
 24856  012BF6  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24857  012BF8  6B7A               	clrf	(_inPipes+5)& (0+255),b	;volatile
 24858                           
 24859                           ;usb_device.c: 2092: }
 24860  012BFA  0012               	return	
 24861  012BFC                     i2l6142:
 24862                           
 24863                           ;usb_device.c: 2102: else
 24864                           ;usb_device.c: 2103: {
 24865                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 24866  012BFC  0E00               	movlw	0
 24867  012BFE  0100               	movlb	0	; () banked
 24868  012C00  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24869                           
 24870                           ; BSR set to: 0
 24871                           ;usb_device.c: 2105: }
 24872                           ;usb_device.c: 2106: break;
 24873  012C02  0012               	return	
 24874  012C04                     i2l6144:
 24875                           
 24876                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 24877  012C04  0E00               	movlw	0
 24878  012C06  0100               	movlb	0	; () banked
 24879  012C08  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24880                           
 24881                           ; BSR set to: 0
 24882                           ;usb_device.c: 2110: }
 24883                           
 24884                           ;usb_device.c: 2109: break;
 24885  012C0A  0012               	return	
 24886  012C0C                     i2l6148:
 24887                           
 24888                           ; BSR set to: 0
 24889  012C0C  010D               	movlb	13	; () banked
 24890  012C0E  5133               	movf	51,w,b	;volatile
 24891                           
 24892                           ; Switch size 1, requested type "space"
 24893                           ; Number of cases is 3, Range of values is 1 to 3
 24894                           ; switch strategies available:
 24895                           ; Name         Instructions Cycles
 24896                           ; simple_byte           10     6 (average)
 24897                           ;	Chosen strategy is simple_byte
 24898  012C10  0A01               	xorlw	1	; case 1
 24899  012C12  B4D8               	btfsc	status,2,c
 24900  012C14  D769               	goto	i2l6122
 24901  012C16  0A03               	xorlw	3	; case 2
 24902  012C18  B4D8               	btfsc	status,2,c
 24903  012C1A  D772               	goto	i2l6126
 24904  012C1C  0A01               	xorlw	1	; case 3
 24905  012C1E  B4D8               	btfsc	status,2,c
 24906  012C20  D7C0               	goto	i2l6136
 24907  012C22  D7F0               	goto	i2l6144
 24908  012C24                     __end_of_USBStdGetDscHandler:
 24909                           	opt stack 0
 24910                           pclatu	equ	0xFFB
 24911                           pclath	equ	0xFFA
 24912                           tblptru	equ	0xFF8
 24913                           tblptrh	equ	0xFF7
 24914                           tblptrl	equ	0xFF6
 24915                           tablat	equ	0xFF5
 24916                           prodh	equ	0xFF4
 24917                           prodl	equ	0xFF3
 24918                           intcon	equ	0xFF2
 24919                           intcon2	equ	0xFF1
 24920                           postinc0	equ	0xFEE
 24921                           fsr0h	equ	0xFEA
 24922                           fsr0l	equ	0xFE9
 24923                           wreg	equ	0xFE8
 24924                           indf1	equ	0xFE7
 24925                           postinc1	equ	0xFE6
 24926                           postdec1	equ	0xFE5
 24927                           fsr1h	equ	0xFE2
 24928                           fsr1l	equ	0xFE1
 24929                           indf2	equ	0xFDF
 24930                           postinc2	equ	0xFDE
 24931                           postdec2	equ	0xFDD
 24932                           plusw2	equ	0xFDB
 24933                           fsr2h	equ	0xFDA
 24934                           fsr2l	equ	0xFD9
 24935                           status	equ	0xFD8
 24936                           
 24937 ;; *************** function _USBStdFeatureReqHandler *****************
 24938 ;; Defined at:
 24939 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 24940 ;; Parameters:    Size  Location     Type
 24941 ;;		None
 24942 ;; Auto vars:     Size  Location     Type
 24943 ;;  p               2   24[COMRAM] PTR struct __BDT
 24944 ;;		 -> NULL(0), BDT(48), 
 24945 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 24946 ;;		 -> UEP0(1), 
 24947 ;;  current_ep_d    1   23[COMRAM] struct .
 24948 ;; Return value:  Size  Location     Type
 24949 ;;		None               void
 24950 ;; Registers used:
 24951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24952 ;; Tracked objects:
 24953 ;;		On entry : 0/0
 24954 ;;		On exit  : 0/0
 24955 ;;		Unchanged: 0/0
 24956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24958 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24961 ;;Total ram usage:        6 bytes
 24962 ;; Hardware stack levels used:    1
 24963 ;; Hardware stack levels required when called:    4
 24964 ;; This function calls:
 24965 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24966 ;; This function is called by:
 24967 ;;		_USBCheckStdRequest
 24968 ;; This function uses a non-reentrant model
 24969 ;;
 24970                           
 24971                           	psect	text115
 24972  011D62                     __ptext115:
 24973                           	opt stack 0
 24974  011D62                     _USBStdFeatureReqHandler:
 24975                           	opt stack 12
 24976                           
 24977                           ;usb_device.c: 2759: BDT_ENTRY *p;
 24978                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 24979                           ;usb_device.c: 2764: unsigned char* pUEP;
 24980                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 24981                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 24982                           
 24983                           ;incstack = 0
 24984  011D62  010D               	movlb	13	; () banked
 24985  011D64  0532               	decf	50,w,b	;volatile
 24986  011D66  A4D8               	btfss	status,2,c
 24987  011D68  D011               	goto	i2l1341
 24988                           
 24989                           ; BSR set to: 13
 24990  011D6A  010D               	movlb	13	; () banked
 24991  011D6C  5130               	movf	48,w,b	;volatile
 24992  011D6E  0B1F               	andlw	31
 24993  011D70  0900               	iorlw	0
 24994  011D72  A4D8               	btfss	status,2,c
 24995  011D74  D00B               	goto	i2l1341
 24996                           
 24997                           ; BSR set to: 13
 24998                           ;usb_device.c: 2804: {
 24999                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 25000  011D76  0100               	movlb	0	; () banked
 25001  011D78  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25002                           
 25003                           ; BSR set to: 0
 25004                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 25005  011D7A  0E03               	movlw	3
 25006  011D7C  010D               	movlb	13	; () banked
 25007  011D7E  1931               	xorwf	49,w,b	;volatile
 25008  011D80  A4D8               	btfss	status,2,c
 25009  011D82  D002               	goto	i2l6188
 25010                           
 25011                           ; BSR set to: 13
 25012                           ;usb_device.c: 2807: RemoteWakeup = 1;
 25013  011D84  0E01               	movlw	1
 25014  011D86  D001               	goto	L13
 25015  011D88                     i2l6188:
 25016                           
 25017                           ; BSR set to: 13
 25018                           ;usb_device.c: 2808: else
 25019                           ;usb_device.c: 2809: RemoteWakeup = 0;
 25020  011D88  0E00               	movlw	0
 25021  011D8A                     L13:
 25022  011D8A  6E41               	movwf	_RemoteWakeup,c	;volatile
 25023  011D8C                     i2l1341:
 25024                           
 25025                           ; BSR set to: 13
 25026                           ;usb_device.c: 2810: }
 25027                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 25028                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 25029                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 25030                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 25031  011D8C  010D               	movlb	13	; () banked
 25032  011D8E  5132               	movf	50,w,b	;volatile
 25033  011D90  A4D8               	btfss	status,2,c
 25034  011D92  0012               	return	
 25035                           
 25036                           ; BSR set to: 13
 25037  011D94  010D               	movlb	13	; () banked
 25038  011D96  5130               	movf	48,w,b	;volatile
 25039  011D98  0B1F               	andlw	31
 25040  011D9A  0A02               	xorlw	2
 25041  011D9C  A4D8               	btfss	status,2,c
 25042  011D9E  0012               	return	
 25043                           
 25044                           ; BSR set to: 13
 25045  011DA0  010D               	movlb	13	; () banked
 25046  011DA2  5134               	movf	52,w,b	;volatile
 25047  011DA4  0B0F               	andlw	15
 25048  011DA6  0900               	iorlw	0
 25049  011DA8  B4D8               	btfsc	status,2,c
 25050  011DAA  0012               	return	
 25051                           
 25052                           ; BSR set to: 13
 25053  011DAC  010D               	movlb	13	; () banked
 25054  011DAE  5134               	movf	52,w,b	;volatile
 25055  011DB0  0B0F               	andlw	15
 25056  011DB2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25057  011DB4  0E03               	movlw	3
 25058  011DB6  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 25059  011DB8  0012               	return	
 25060                           
 25061                           ; BSR set to: 13
 25062  011DBA  0E20               	movlw	32
 25063  011DBC  1845               	xorwf	_USBDeviceState,w,c	;volatile
 25064  011DBE  A4D8               	btfss	status,2,c
 25065  011DC0  0012               	return	
 25066                           
 25067                           ; BSR set to: 13
 25068                           ;usb_device.c: 2817: {
 25069                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 25070  011DC2  0100               	movlb	0	; () banked
 25071  011DC4  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25072                           
 25073                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 25074  011DC6  010D               	movlb	13	; () banked
 25075  011DC8  BF34               	btfsc	52,7,b	;volatile
 25076  011DCA  D01B               	goto	i2l6202
 25077                           
 25078                           ; BSR set to: 13
 25079                           ;usb_device.c: 2824: {
 25080                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 25081  011DCC  010D               	movlb	13	; () banked
 25082  011DCE  5134               	movf	52,w,b	;volatile
 25083  011DD0  0B0F               	andlw	15
 25084  011DD2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25085  011DD4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25086  011DD6  0D02               	mullw	2
 25087  011DD8  0E81               	movlw	low _pBDTEntryOut
 25088  011DDA  24F3               	addwf	prodl,w,c
 25089  011DDC  6ED9               	movwf	fsr2l,c
 25090  011DDE  0E00               	movlw	high _pBDTEntryOut
 25091  011DE0  20F4               	addwfc	prodh,w,c
 25092  011DE2  6EDA               	movwf	fsr2h,c
 25093  011DE4  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 25094  011DE8  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 25095                           
 25096                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 25097  011DEC  010D               	movlb	13	; () banked
 25098  011DEE  5134               	movf	52,w,b	;volatile
 25099  011DF0  0B0F               	andlw	15
 25100  011DF2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25101  011DF4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25102  011DF6  0D01               	mullw	1
 25103  011DF8  0E8D               	movlw	low _ep_data_out
 25104  011DFA  24F3               	addwf	prodl,w,c
 25105  011DFC  6ED9               	movwf	fsr2l,c
 25106  011DFE  0E00               	movlw	high _ep_data_out
 25107  011E00  D01A               	goto	L14
 25108  011E02                     i2l6202:
 25109                           
 25110                           ; BSR set to: 13
 25111                           ;usb_device.c: 2828: else
 25112                           ;usb_device.c: 2829: {
 25113                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 25114  011E02  010D               	movlb	13	; () banked
 25115  011E04  5134               	movf	52,w,b	;volatile
 25116  011E06  0B0F               	andlw	15
 25117  011E08  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25118  011E0A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25119  011E0C  0D02               	mullw	2
 25120  011E0E  0E7B               	movlw	low _pBDTEntryIn
 25121  011E10  24F3               	addwf	prodl,w,c
 25122  011E12  6ED9               	movwf	fsr2l,c
 25123  011E14  0E00               	movlw	high _pBDTEntryIn
 25124  011E16  20F4               	addwfc	prodh,w,c
 25125  011E18  6EDA               	movwf	fsr2h,c
 25126  011E1A  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 25127  011E1E  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 25128                           
 25129                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 25130  011E22  010D               	movlb	13	; () banked
 25131  011E24  5134               	movf	52,w,b	;volatile
 25132  011E26  0B0F               	andlw	15
 25133  011E28  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25134  011E2A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25135  011E2C  0D01               	mullw	1
 25136  011E2E  0E8A               	movlw	low _ep_data_in
 25137  011E30  24F3               	addwf	prodl,w,c
 25138  011E32  6ED9               	movwf	fsr2l,c
 25139  011E34  0E00               	movlw	high _ep_data_in
 25140  011E36                     L14:
 25141  011E36  20F4               	addwfc	prodh,w,c
 25142  011E38  6EDA               	movwf	fsr2h,c
 25143  011E3A  50DF               	movf	indf2,w,c
 25144  011E3C  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 25145                           
 25146                           ; BSR set to: 13
 25147                           ;usb_device.c: 2832: }
 25148                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 25149                           
 25150                           ; BSR set to: 13
 25151  011E3E  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 25152  011E40  D002               	goto	i2l6208
 25153                           
 25154                           ; BSR set to: 13
 25155                           ;usb_device.c: 2839: {
 25156                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 25157  011E42  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 25158                           
 25159                           ;usb_device.c: 2841: }
 25160  011E44  D001               	goto	i2l6210
 25161  011E46                     i2l6208:
 25162                           
 25163                           ; BSR set to: 13
 25164                           ;usb_device.c: 2842: else
 25165                           ;usb_device.c: 2843: {
 25166                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 25167  011E46  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 25168  011E48                     i2l6210:
 25169                           
 25170                           ; BSR set to: 13
 25171                           ;usb_device.c: 2845: }
 25172                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 25173  011E48  010D               	movlb	13	; () banked
 25174  011E4A  BF34               	btfsc	52,7,b	;volatile
 25175  011E4C  D00B               	goto	i2l6214
 25176                           
 25177                           ; BSR set to: 13
 25178                           ;usb_device.c: 2851: {
 25179                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 25180  011E4E  010D               	movlb	13	; () banked
 25181  011E50  5134               	movf	52,w,b	;volatile
 25182  011E52  0B0F               	andlw	15
 25183  011E54  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25184  011E56  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25185  011E58  0D02               	mullw	2
 25186  011E5A  0E81               	movlw	low _pBDTEntryOut
 25187  011E5C  24F3               	addwf	prodl,w,c
 25188  011E5E  6ED9               	movwf	fsr2l,c
 25189  011E60  0E00               	movlw	high _pBDTEntryOut
 25190  011E62  D00A               	goto	L15
 25191  011E64                     i2l6214:
 25192                           
 25193                           ; BSR set to: 13
 25194                           ;usb_device.c: 2854: else
 25195                           ;usb_device.c: 2855: {
 25196                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 25197  011E64  010D               	movlb	13	; () banked
 25198  011E66  5134               	movf	52,w,b	;volatile
 25199  011E68  0B0F               	andlw	15
 25200  011E6A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25201  011E6C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25202  011E6E  0D02               	mullw	2
 25203  011E70  0E7B               	movlw	low _pBDTEntryIn
 25204  011E72  24F3               	addwf	prodl,w,c
 25205  011E74  6ED9               	movwf	fsr2l,c
 25206  011E76  0E00               	movlw	high _pBDTEntryIn
 25207  011E78                     L15:
 25208  011E78  20F4               	addwfc	prodh,w,c
 25209  011E7A  6EDA               	movwf	fsr2h,c
 25210  011E7C  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 25211  011E80  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 25212                           
 25213                           ; BSR set to: 13
 25214                           ;usb_device.c: 2857: }
 25215                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 25216                           
 25217                           ; BSR set to: 13
 25218  011E84  0E03               	movlw	3
 25219  011E86  010D               	movlb	13	; () banked
 25220  011E88  1931               	xorwf	49,w,b	;volatile
 25221  011E8A  A4D8               	btfss	status,2,c
 25222  011E8C  D02F               	goto	i2l6230
 25223                           
 25224                           ; BSR set to: 13
 25225                           ;usb_device.c: 2861: {
 25226                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 25227  011E8E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25228  011E92  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25229  011E96  AEDF               	btfss	indf2,7,c
 25230  011E98  D01C               	goto	i2l6226
 25231                           
 25232                           ; BSR set to: 13
 25233                           ;usb_device.c: 2863: {
 25234                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 25235  011E9A  010D               	movlb	13	; () banked
 25236  011E9C  BF34               	btfsc	52,7,b	;volatile
 25237  011E9E  D00B               	goto	i2l6224
 25238                           
 25239                           ; BSR set to: 13
 25240                           ;usb_device.c: 2867: {
 25241                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 25242  011EA0  010D               	movlb	13	; () banked
 25243  011EA2  5134               	movf	52,w,b	;volatile
 25244  011EA4  0B0F               	andlw	15
 25245  011EA6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25246  011EA8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25247  011EAA  0D01               	mullw	1
 25248  011EAC  0E8D               	movlw	low _ep_data_out
 25249  011EAE  24F3               	addwf	prodl,w,c
 25250  011EB0  6ED9               	movwf	fsr2l,c
 25251  011EB2  0E00               	movlw	high _ep_data_out
 25252  011EB4  D00A               	goto	L16
 25253  011EB6                     i2l6224:
 25254                           
 25255                           ;usb_device.c: 2870: else
 25256                           ;usb_device.c: 2871: {
 25257                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 25258  011EB6  010D               	movlb	13	; () banked
 25259  011EB8  5134               	movf	52,w,b	;volatile
 25260  011EBA  0B0F               	andlw	15
 25261  011EBC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25262  011EBE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25263  011EC0  0D01               	mullw	1
 25264  011EC2  0E8A               	movlw	low _ep_data_in
 25265  011EC4  24F3               	addwf	prodl,w,c
 25266  011EC6  6ED9               	movwf	fsr2l,c
 25267  011EC8  0E00               	movlw	high _ep_data_in
 25268  011ECA                     L16:
 25269  011ECA  20F4               	addwfc	prodh,w,c
 25270  011ECC  6EDA               	movwf	fsr2h,c
 25271  011ECE  0100               	movlb	0	; () banked
 25272  011ED0  82DF               	bsf	indf2,1,c
 25273  011ED2                     i2l6226:
 25274                           
 25275                           ;usb_device.c: 2873: }
 25276                           ;usb_device.c: 2874: }
 25277                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 25278  011ED2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25279  011ED6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25280  011EDA  0E00               	movlw	0
 25281  011EDC  84DB               	bsf	plusw2,2,c
 25282                           
 25283                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 25284  011EDE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25285  011EE2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25286  011EE6  0E00               	movlw	0
 25287  011EE8  8EDB               	bsf	plusw2,7,c
 25288                           
 25289                           ;usb_device.c: 2879: }
 25290  011EEA  0012               	return	
 25291  011EEC                     i2l6230:
 25292                           
 25293                           ;usb_device.c: 2880: else
 25294                           ;usb_device.c: 2881: {
 25295                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 25296  011EEC  0E04               	movlw	4
 25297  011EEE  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 25298                           
 25299                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 25300  011EF0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25301  011EF4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25302  011EF8  AEDF               	btfss	indf2,7,c
 25303  011EFA  D01B               	goto	i2l6240
 25304                           
 25305                           ;usb_device.c: 2888: {
 25306                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 25307  011EFC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25308  011F00  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25309  011F04  0E7F               	movlw	127
 25310  011F06  16DF               	andwf	indf2,f,c
 25311                           
 25312                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 25313  011F08  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25314  011F0C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25315  011F10  0E00               	movlw	0
 25316  011F12  8CDB               	bsf	plusw2,6,c
 25317                           
 25318                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 25319  011F14  0E00               	movlw	0
 25320  011F16  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25321  011F18  0E05               	movlw	5
 25322  011F1A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25323  011F1C  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 25324  011F20  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 25325  011F24  0E00               	movlw	0
 25326  011F26  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25327  011F28  0E02               	movlw	2
 25328  011F2A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25329  011F2C  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25330                           
 25331                           ;usb_device.c: 2894: }
 25332  011F30  D006               	goto	i2l6242
 25333  011F32                     i2l6240:
 25334                           
 25335                           ;usb_device.c: 2895: else
 25336                           ;usb_device.c: 2896: {
 25337                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 25338  011F32  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25339  011F36  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25340  011F3A  0E00               	movlw	0
 25341  011F3C  8CDB               	bsf	plusw2,6,c
 25342  011F3E                     i2l6242:
 25343                           
 25344                           ;usb_device.c: 2899: }
 25345                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 25346  011F3E  0E04               	movlw	4
 25347  011F40  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 25348                           
 25349                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 25350  011F42  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 25351  011F44  D006               	goto	i2l1360
 25352  011F46  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25353  011F4A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25354  011F4E  AEDF               	btfss	indf2,7,c
 25355  011F50  D031               	goto	i2l6256
 25356  011F52                     i2l1360:
 25357                           
 25358                           ;usb_device.c: 2910: {
 25359                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 25360  011F52  010D               	movlb	13	; () banked
 25361  011F54  BF34               	btfsc	52,7,b	;volatile
 25362  011F56  D00B               	goto	i2l6250
 25363                           
 25364                           ; BSR set to: 13
 25365                           ;usb_device.c: 2912: {
 25366                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 25367  011F58  010D               	movlb	13	; () banked
 25368  011F5A  5134               	movf	52,w,b	;volatile
 25369  011F5C  0B0F               	andlw	15
 25370  011F5E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25371  011F60  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25372  011F62  0D01               	mullw	1
 25373  011F64  0E8D               	movlw	low _ep_data_out
 25374  011F66  24F3               	addwf	prodl,w,c
 25375  011F68  6ED9               	movwf	fsr2l,c
 25376  011F6A  0E00               	movlw	high _ep_data_out
 25377  011F6C  D00A               	goto	L17
 25378  011F6E                     i2l6250:
 25379                           
 25380                           ;usb_device.c: 2915: else
 25381                           ;usb_device.c: 2916: {
 25382                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 25383  011F6E  010D               	movlb	13	; () banked
 25384  011F70  5134               	movf	52,w,b	;volatile
 25385  011F72  0B0F               	andlw	15
 25386  011F74  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25387  011F76  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25388  011F78  0D01               	mullw	1
 25389  011F7A  0E8A               	movlw	low _ep_data_in
 25390  011F7C  24F3               	addwf	prodl,w,c
 25391  011F7E  6ED9               	movwf	fsr2l,c
 25392  011F80  0E00               	movlw	high _ep_data_in
 25393  011F82                     L17:
 25394  011F82  20F4               	addwfc	prodh,w,c
 25395  011F84  6EDA               	movwf	fsr2h,c
 25396  011F86  0100               	movlb	0	; () banked
 25397  011F88  92DF               	bcf	indf2,1,c
 25398                           
 25399                           ; BSR set to: 0
 25400                           ;usb_device.c: 2918: }
 25401                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 25402                           
 25403                           ; BSR set to: 0
 25404  011F8A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25405  011F8E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25406  011F92  0E3B               	movlw	59
 25407  011F94  16DF               	andwf	indf2,f,c
 25408                           
 25409                           ; BSR set to: 0
 25410                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 25411  011F96  0E00               	movlw	0
 25412  011F98  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25413  011F9A  0E05               	movlw	5
 25414  011F9C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25415  011F9E  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 25416  011FA2  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 25417  011FA6  0E00               	movlw	0
 25418  011FA8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25419  011FAA  0E02               	movlw	2
 25420  011FAC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25421  011FAE  EC79  F0AF         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25422                           
 25423                           ;usb_device.c: 2924: }
 25424  011FB2  D006               	goto	i2l6258
 25425  011FB4                     i2l6256:
 25426                           
 25427                           ;usb_device.c: 2925: else
 25428                           ;usb_device.c: 2926: {
 25429                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 25430  011FB4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25431  011FB8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25432  011FBC  0E3B               	movlw	59
 25433  011FBE  16DF               	andwf	indf2,f,c
 25434  011FC0                     i2l6258:
 25435                           
 25436                           ;usb_device.c: 2929: }
 25437                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 25438  011FC0  010D               	movlb	13	; () banked
 25439  011FC2  5134               	movf	52,w,b	;volatile
 25440  011FC4  0B0F               	andlw	15
 25441  011FC6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25442  011FC8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 25443  011FCA  0D01               	mullw	1
 25444  011FCC  0E26               	movlw	38
 25445  011FCE  24F3               	addwf	prodl,w,c
 25446  011FD0  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 25447  011FD2  0E0F               	movlw	15
 25448  011FD4  20F4               	addwfc	prodh,w,c
 25449  011FD6  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 25450                           
 25451                           ; BSR set to: 13
 25452                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 25453  011FD8  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 25454  011FDC  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 25455  011FE0  0EFE               	movlw	254
 25456  011FE2  16DF               	andwf	indf2,f,c
 25457                           
 25458                           ; BSR set to: 13
 25459  011FE4  0012               	return	
 25460  011FE6                     __end_of_USBStdFeatureReqHandler:
 25461                           	opt stack 0
 25462                           pclatu	equ	0xFFB
 25463                           pclath	equ	0xFFA
 25464                           tblptru	equ	0xFF8
 25465                           tblptrh	equ	0xFF7
 25466                           tblptrl	equ	0xFF6
 25467                           tablat	equ	0xFF5
 25468                           prodh	equ	0xFF4
 25469                           prodl	equ	0xFF3
 25470                           intcon	equ	0xFF2
 25471                           intcon2	equ	0xFF1
 25472                           postinc0	equ	0xFEE
 25473                           fsr0h	equ	0xFEA
 25474                           fsr0l	equ	0xFE9
 25475                           wreg	equ	0xFE8
 25476                           indf1	equ	0xFE7
 25477                           postinc1	equ	0xFE6
 25478                           postdec1	equ	0xFE5
 25479                           fsr1h	equ	0xFE2
 25480                           fsr1l	equ	0xFE1
 25481                           indf2	equ	0xFDF
 25482                           postinc2	equ	0xFDE
 25483                           postdec2	equ	0xFDD
 25484                           plusw2	equ	0xFDB
 25485                           fsr2h	equ	0xFDA
 25486                           fsr2l	equ	0xFD9
 25487                           status	equ	0xFD8
 25488                           
 25489 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 25490 ;; Defined at:
 25491 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 25492 ;; Parameters:    Size  Location     Type
 25493 ;;  event           2   12[COMRAM] enum E8545
 25494 ;;  pdata           2   14[COMRAM] PTR void 
 25495 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 25496 ;;  size            2   16[COMRAM] unsigned int 
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;		None
 25499 ;; Return value:  Size  Location     Type
 25500 ;;                  1    wreg      unsigned char 
 25501 ;; Registers used:
 25502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25503 ;; Tracked objects:
 25504 ;;		On entry : 0/0
 25505 ;;		On exit  : 0/0
 25506 ;;		Unchanged: 0/0
 25507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25508 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25512 ;;Total ram usage:        8 bytes
 25513 ;; Hardware stack levels used:    1
 25514 ;; Hardware stack levels required when called:    3
 25515 ;; This function calls:
 25516 ;;		_CDCInitEP
 25517 ;;		_USBCheckCDCRequest
 25518 ;; This function is called by:
 25519 ;;		_USBDeviceTasks
 25520 ;;		_USBStdSetCfgHandler
 25521 ;;		_USBSuspend
 25522 ;;		_USBWakeFromSuspend
 25523 ;;		_USBCtrlTrfSetupHandler
 25524 ;;		_USBCheckStdRequest
 25525 ;;		_USBStdFeatureReqHandler
 25526 ;; This function uses a non-reentrant model
 25527 ;;
 25528                           
 25529                           	psect	text116
 25530  015EF2                     __ptext116:
 25531                           	opt stack 0
 25532  015EF2                     _USER_USB_CALLBACK_EVENT_HANDLER:
 25533                           	opt stack 16
 25534                           
 25535                           ;My_usb_cdc.c: 40: switch ((int) event) {
 25536                           
 25537                           ;incstack = 0
 25538  015EF2  D006               	goto	i2l5740
 25539  015EF4                     i2l5734:
 25540                           
 25541                           ;My_usb_cdc.c: 42: CDCInitEP();
 25542  015EF4  ECCC  F0AA         	call	_CDCInitEP	;wreg free
 25543                           
 25544                           ;My_usb_cdc.c: 43: break;
 25545  015EF8  0012               	return	
 25546  015EFA                     i2l5736:
 25547                           
 25548                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 25549  015EFA  EC8F  F09F         	call	_USBCheckCDCRequest	;wreg free
 25550                           
 25551                           ;My_usb_cdc.c: 47: }
 25552                           
 25553                           ;My_usb_cdc.c: 46: break;
 25554  015EFE  0012               	return	
 25555  015F00                     i2l5740:
 25556  015F00  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 25557  015F04  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 25558                           
 25559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25560                           ; Switch size 1, requested type "space"
 25561                           ; Number of cases is 1, Range of values is 0 to 0
 25562                           ; switch strategies available:
 25563                           ; Name         Instructions Cycles
 25564                           ; simple_byte            4     3 (average)
 25565                           ;	Chosen strategy is simple_byte
 25566  015F08  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 25567  015F0A  0A00               	xorlw	0	; case 0
 25568  015F0C  A4D8               	btfss	status,2,c
 25569  015F0E  0012               	return	
 25570                           
 25571                           ; Switch size 1, requested type "space"
 25572                           ; Number of cases is 2, Range of values is 1 to 3
 25573                           ; switch strategies available:
 25574                           ; Name         Instructions Cycles
 25575                           ; simple_byte            7     4 (average)
 25576                           ;	Chosen strategy is simple_byte
 25577  015F10  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 25578  015F12  0A01               	xorlw	1	; case 1
 25579  015F14  B4D8               	btfsc	status,2,c
 25580  015F16  D7EE               	goto	i2l5734
 25581  015F18  0A02               	xorlw	2	; case 3
 25582  015F1A  A4D8               	btfss	status,2,c
 25583  015F1C  0012               	return	
 25584  015F1E  D7ED               	goto	i2l5736
 25585  015F20                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 25586                           	opt stack 0
 25587                           pclatu	equ	0xFFB
 25588                           pclath	equ	0xFFA
 25589                           tblptru	equ	0xFF8
 25590                           tblptrh	equ	0xFF7
 25591                           tblptrl	equ	0xFF6
 25592                           tablat	equ	0xFF5
 25593                           prodh	equ	0xFF4
 25594                           prodl	equ	0xFF3
 25595                           intcon	equ	0xFF2
 25596                           intcon2	equ	0xFF1
 25597                           postinc0	equ	0xFEE
 25598                           fsr0h	equ	0xFEA
 25599                           fsr0l	equ	0xFE9
 25600                           wreg	equ	0xFE8
 25601                           indf1	equ	0xFE7
 25602                           postinc1	equ	0xFE6
 25603                           postdec1	equ	0xFE5
 25604                           fsr1h	equ	0xFE2
 25605                           fsr1l	equ	0xFE1
 25606                           indf2	equ	0xFDF
 25607                           postinc2	equ	0xFDE
 25608                           postdec2	equ	0xFDD
 25609                           plusw2	equ	0xFDB
 25610                           fsr2h	equ	0xFDA
 25611                           fsr2l	equ	0xFD9
 25612                           status	equ	0xFD8
 25613                           
 25614 ;; *************** function _USBCheckCDCRequest *****************
 25615 ;; Defined at:
 25616 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 25617 ;; Parameters:    Size  Location     Type
 25618 ;;		None
 25619 ;; Auto vars:     Size  Location     Type
 25620 ;;		None
 25621 ;; Return value:  Size  Location     Type
 25622 ;;		None               void
 25623 ;; Registers used:
 25624 ;;		wreg, status,2, status,0
 25625 ;; Tracked objects:
 25626 ;;		On entry : 0/0
 25627 ;;		On exit  : 0/0
 25628 ;;		Unchanged: 0/0
 25629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25634 ;;Total ram usage:        0 bytes
 25635 ;; Hardware stack levels used:    1
 25636 ;; This function calls:
 25637 ;;		Nothing
 25638 ;; This function is called by:
 25639 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25640 ;; This function uses a non-reentrant model
 25641 ;;
 25642                           
 25643                           	psect	text117
 25644  013F1E                     __ptext117:
 25645                           	opt stack 0
 25646  013F1E                     _USBCheckCDCRequest:
 25647                           	opt stack 18
 25648                           
 25649                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 25650                           
 25651                           ;incstack = 0
 25652  013F1E  010D               	movlb	13	; () banked
 25653  013F20  5130               	movf	48,w,b	;volatile
 25654  013F22  0B1F               	andlw	31
 25655  013F24  06E8               	decf	wreg,f,c
 25656  013F26  A4D8               	btfss	status,2,c
 25657  013F28  0012               	return	
 25658                           
 25659                           ; BSR set to: 13
 25660                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 25661                           
 25662                           ; BSR set to: 13
 25663                           
 25664                           ; BSR set to: 13
 25665  013F2A  010D               	movlb	13	; () banked
 25666  013F2C  3930               	swapf	48,w,b	;volatile
 25667  013F2E  32E8               	rrcf	wreg,f,c
 25668  013F30  0B03               	andlw	3
 25669  013F32  06E8               	decf	wreg,f,c
 25670  013F34  A4D8               	btfss	status,2,c
 25671  013F36  0012               	return	
 25672                           
 25673                           ; BSR set to: 13
 25674                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 25675                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 25676                           
 25677                           ; BSR set to: 13
 25678                           
 25679                           ; BSR set to: 13
 25680  013F38  010D               	movlb	13	; () banked
 25681  013F3A  5134               	movf	52,w,b	;volatile
 25682  013F3C  B4D8               	btfsc	status,2,c
 25683  013F3E  D048               	goto	i2l5716
 25684                           
 25685                           ; BSR set to: 13
 25686  013F40  010D               	movlb	13	; () banked
 25687  013F42  0534               	decf	52,w,b	;volatile
 25688  013F44  A4D8               	btfss	status,2,c
 25689  013F46  0012               	return	
 25690  013F48  D043               	goto	i2l5716
 25691  013F4A                     i2l5692:
 25692                           
 25693                           ; BSR set to: 13
 25694                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 25695  013F4A  0E8A               	movlw	low _dummy_encapsulated_cmd_response
 25696  013F4C  0100               	movlb	0	; () banked
 25697  013F4E  6F75               	movwf	_inPipes& (0+255),b	;volatile
 25698  013F50  0E03               	movlw	high _dummy_encapsulated_cmd_response
 25699  013F52  0100               	movlb	0	; () banked
 25700  013F54  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25701                           
 25702                           ; BSR set to: 0
 25703                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 25704  013F56  0E00               	movlw	0
 25705  013F58  0100               	movlb	0	; () banked
 25706  013F5A  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25707  013F5C  0E08               	movlw	8
 25708  013F5E  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25709                           
 25710                           ; BSR set to: 0
 25711                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25712  013F60  0100               	movlb	0	; () banked
 25713  013F62  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25714                           
 25715                           ; BSR set to: 0
 25716                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 25717  013F64  0100               	movlb	0	; () banked
 25718  013F66  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25719                           
 25720                           ;usb_device_cdc.c: 232: break;
 25721  013F68  0012               	return	
 25722  013F6A                     i2l5700:
 25723                           
 25724                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 25725  013F6A  0E8A               	movlw	low _dummy_encapsulated_cmd_response
 25726  013F6C  0100               	movlb	0	; () banked
 25727  013F6E  6F75               	movwf	_inPipes& (0+255),b	;volatile
 25728  013F70  0E03               	movlw	high _dummy_encapsulated_cmd_response
 25729  013F72  0100               	movlb	0	; () banked
 25730  013F74  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25731                           
 25732                           ; BSR set to: 0
 25733                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 25734  013F76  0100               	movlb	0	; () banked
 25735  013F78  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25736                           
 25737                           ;usb_device_cdc.c: 237: break;
 25738  013F7A  0012               	return	
 25739  013F7C                     i2l1417:
 25740                           
 25741                           ; BSR set to: 13
 25742                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 25743  013F7C  CD36 F070          	movff	3382,_outPipes+4	;volatile
 25744  013F80  CD37 F071          	movff	3383,_outPipes+5	;volatile
 25745                           
 25746                           ; BSR set to: 13
 25747                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 25748  013F84  0EF9               	movlw	low _line_coding
 25749  013F86  0100               	movlb	0	; () banked
 25750  013F88  6F6C               	movwf	_outPipes& (0+255),b	;volatile
 25751  013F8A  0E02               	movlw	high _line_coding
 25752  013F8C  0100               	movlb	0	; () banked
 25753  013F8E  6F6D               	movwf	(_outPipes+1)& (0+255),b	;volatile
 25754                           
 25755                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 25756  013F90  0E00               	movlw	0
 25757  013F92  0100               	movlb	0	; () banked
 25758  013F94  6F72               	movwf	(_outPipes+6)& (0+255),b	;volatile
 25759  013F96  0E00               	movlw	0
 25760  013F98  0100               	movlb	0	; () banked
 25761  013F9A  6F73               	movwf	(_outPipes+7)& (0+255),b	;volatile
 25762  013F9C  0E00               	movlw	0
 25763  013F9E  0100               	movlb	0	; () banked
 25764  013FA0  6F74               	movwf	(_outPipes+8)& (0+255),b	;volatile
 25765                           
 25766                           ; BSR set to: 0
 25767                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 25768  013FA2  0100               	movlb	0	; () banked
 25769  013FA4  8F6F               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 25770                           
 25771                           ;usb_device_cdc.c: 246: break;
 25772  013FA6  0012               	return	
 25773  013FA8                     i2l5708:
 25774                           
 25775                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 25776  013FA8  0EF9               	movlw	low _line_coding
 25777  013FAA  0100               	movlb	0	; () banked
 25778  013FAC  6F75               	movwf	_inPipes& (0+255),b	;volatile
 25779  013FAE  0E02               	movlw	high _line_coding
 25780  013FB0  0100               	movlb	0	; () banked
 25781  013FB2  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25782                           
 25783                           ; BSR set to: 0
 25784  013FB4  0E00               	movlw	0
 25785  013FB6  0100               	movlb	0	; () banked
 25786  013FB8  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25787  013FBA  0E07               	movlw	7
 25788  013FBC  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25789                           
 25790                           ; BSR set to: 0
 25791  013FBE  0EC1               	movlw	193
 25792  013FC0  0100               	movlb	0	; () banked
 25793  013FC2  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25794                           
 25795                           ;usb_device_cdc.c: 253: break;
 25796  013FC4  0012               	return	
 25797  013FC6                     i2l1419:
 25798                           
 25799                           ; BSR set to: 13
 25800                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 25801  013FC6  CD32 F04A          	movff	3378,_control_signal_bitmap	;volatile
 25802                           
 25803                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 25804  013FCA  0100               	movlb	0	; () banked
 25805  013FCC  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25806                           
 25807                           ; BSR set to: 0
 25808                           ;usb_device_cdc.c: 315: }
 25809                           
 25810                           ; BSR set to: 0
 25811                           ;usb_device_cdc.c: 314: break;
 25812                           
 25813                           ;usb_device_cdc.c: 313: default:
 25814                           
 25815                           ;usb_device_cdc.c: 289: break;
 25816  013FCE  0012               	return	
 25817  013FD0                     i2l5716:
 25818  013FD0  010D               	movlb	13	; () banked
 25819  013FD2  5131               	movf	49,w,b	;volatile
 25820                           
 25821                           ; Switch size 1, requested type "space"
 25822                           ; Number of cases is 5, Range of values is 0 to 34
 25823                           ; switch strategies available:
 25824                           ; Name         Instructions Cycles
 25825                           ; simple_byte           16     9 (average)
 25826                           ;	Chosen strategy is simple_byte
 25827  013FD4  0A00               	xorlw	0	; case 0
 25828  013FD6  B4D8               	btfsc	status,2,c
 25829  013FD8  D7B8               	goto	i2l5692
 25830  013FDA  0A01               	xorlw	1	; case 1
 25831  013FDC  B4D8               	btfsc	status,2,c
 25832  013FDE  D7C5               	goto	i2l5700
 25833  013FE0  0A21               	xorlw	33	; case 32
 25834  013FE2  B4D8               	btfsc	status,2,c
 25835  013FE4  D7CB               	goto	i2l1417
 25836  013FE6  0A01               	xorlw	1	; case 33
 25837  013FE8  B4D8               	btfsc	status,2,c
 25838  013FEA  D7DE               	goto	i2l5708
 25839  013FEC  0A03               	xorlw	3	; case 34
 25840  013FEE  A4D8               	btfss	status,2,c
 25841  013FF0  0012               	return	
 25842  013FF2  D7E9               	goto	i2l1419
 25843  013FF4                     __end_of_USBCheckCDCRequest:
 25844                           	opt stack 0
 25845                           pclatu	equ	0xFFB
 25846                           pclath	equ	0xFFA
 25847                           tblptru	equ	0xFF8
 25848                           tblptrh	equ	0xFF7
 25849                           tblptrl	equ	0xFF6
 25850                           tablat	equ	0xFF5
 25851                           prodh	equ	0xFF4
 25852                           prodl	equ	0xFF3
 25853                           intcon	equ	0xFF2
 25854                           intcon2	equ	0xFF1
 25855                           postinc0	equ	0xFEE
 25856                           fsr0h	equ	0xFEA
 25857                           fsr0l	equ	0xFE9
 25858                           wreg	equ	0xFE8
 25859                           indf1	equ	0xFE7
 25860                           postinc1	equ	0xFE6
 25861                           postdec1	equ	0xFE5
 25862                           fsr1h	equ	0xFE2
 25863                           fsr1l	equ	0xFE1
 25864                           indf2	equ	0xFDF
 25865                           postinc2	equ	0xFDE
 25866                           postdec2	equ	0xFDD
 25867                           plusw2	equ	0xFDB
 25868                           fsr2h	equ	0xFDA
 25869                           fsr2l	equ	0xFD9
 25870                           status	equ	0xFD8
 25871                           
 25872 ;; *************** function _CDCInitEP *****************
 25873 ;; Defined at:
 25874 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 25875 ;; Parameters:    Size  Location     Type
 25876 ;;		None
 25877 ;; Auto vars:     Size  Location     Type
 25878 ;;		None
 25879 ;; Return value:  Size  Location     Type
 25880 ;;		None               void
 25881 ;; Registers used:
 25882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25883 ;; Tracked objects:
 25884 ;;		On entry : 0/0
 25885 ;;		On exit  : 0/0
 25886 ;;		Unchanged: 0/0
 25887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25892 ;;Total ram usage:        0 bytes
 25893 ;; Hardware stack levels used:    1
 25894 ;; Hardware stack levels required when called:    2
 25895 ;; This function calls:
 25896 ;;		_USBEnableEndpoint
 25897 ;;		i2_USBTransferOnePacket
 25898 ;; This function is called by:
 25899 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25900 ;; This function uses a non-reentrant model
 25901 ;;
 25902                           
 25903                           	psect	text118
 25904  015598                     __ptext118:
 25905                           	opt stack 0
 25906  015598                     _CDCInitEP:
 25907                           	opt stack 16
 25908                           
 25909                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 25910                           
 25911                           ;incstack = 0
 25912  015598  0E00               	movlw	0
 25913  01559A  0102               	movlb	2	; () banked
 25914  01559C  6FF9               	movwf	_line_coding& (0+255),b
 25915  01559E  0E4B               	movlw	75
 25916  0155A0  6FFA               	movwf	(_line_coding+1)& (0+255),b
 25917  0155A2  0E00               	movlw	0
 25918  0155A4  6FFB               	movwf	(_line_coding+2)& (0+255),b
 25919  0155A6  0E00               	movlw	0
 25920  0155A8  6FFC               	movwf	(_line_coding+3)& (0+255),b
 25921                           
 25922                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 25923  0155AA  0E00               	movlw	0
 25924  0155AC  0102               	movlb	2	; () banked
 25925  0155AE  6FFD               	movwf	(_line_coding+4)& (0+255),b
 25926                           
 25927                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 25928  0155B0  0E00               	movlw	0
 25929  0155B2  0102               	movlb	2	; () banked
 25930  0155B4  6FFE               	movwf	(_line_coding+5)& (0+255),b
 25931                           
 25932                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 25933  0155B6  0E08               	movlw	8
 25934  0155B8  0102               	movlb	2	; () banked
 25935  0155BA  6FFF               	movwf	(_line_coding+6)& (0+255),b
 25936                           
 25937                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 25938  0155BC  0E00               	movlw	0
 25939  0155BE  0100               	movlb	0	; () banked
 25940  0155C0  6F9F               	movwf	_cdc_rx_len& (0+255),b
 25941                           
 25942                           ; BSR set to: 0
 25943                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 25944  0155C2  0E1A               	movlw	26
 25945  0155C4  6E09               	movwf	USBEnableEndpoint@options,c
 25946  0155C6  0E01               	movlw	1
 25947  0155C8  EC3B  F0AE         	call	_USBEnableEndpoint
 25948                           
 25949                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 25950  0155CC  0E1E               	movlw	30
 25951  0155CE  6E09               	movwf	USBEnableEndpoint@options,c
 25952  0155D0  0E02               	movlw	2
 25953  0155D2  EC3B  F0AE         	call	_USBEnableEndpoint
 25954                           
 25955                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 25956  0155D6  0E00               	movlw	0
 25957  0155D8  6E01               	movwf	i2USBTransferOnePacket@dir,c
 25958  0155DA  0E0A               	movlw	low _cdc_data_rx
 25959  0155DC  6E02               	movwf	i2USBTransferOnePacket@data,c
 25960  0155DE  0E03               	movlw	high _cdc_data_rx
 25961  0155E0  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 25962  0155E2  0E40               	movlw	64
 25963  0155E4  6E04               	movwf	i2USBTransferOnePacket@len,c
 25964  0155E6  0E02               	movlw	2
 25965  0155E8  ECA9  F0A4         	call	i2_USBTransferOnePacket
 25966  0155EC  C001  F098         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 25967  0155F0  C002  F099         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 25968                           
 25969                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 25970  0155F4  0E00               	movlw	0
 25971  0155F6  0100               	movlb	0	; () banked
 25972  0155F8  6F96               	movwf	_CDCDataInHandle& (0+255),b
 25973  0155FA  0E00               	movlw	0
 25974  0155FC  0100               	movlb	0	; () banked
 25975  0155FE  6F97               	movwf	(_CDCDataInHandle+1)& (0+255),b
 25976                           
 25977                           ; BSR set to: 0
 25978                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 25979  015600  0E00               	movlw	0
 25980  015602  0100               	movlb	0	; () banked
 25981  015604  6FA0               	movwf	_cdc_trf_state& (0+255),b
 25982                           
 25983                           ; BSR set to: 0
 25984  015606  0012               	return		;funcret
 25985  015608                     __end_of_CDCInitEP:
 25986                           	opt stack 0
 25987                           pclatu	equ	0xFFB
 25988                           pclath	equ	0xFFA
 25989                           tblptru	equ	0xFF8
 25990                           tblptrh	equ	0xFF7
 25991                           tblptrl	equ	0xFF6
 25992                           tablat	equ	0xFF5
 25993                           prodh	equ	0xFF4
 25994                           prodl	equ	0xFF3
 25995                           intcon	equ	0xFF2
 25996                           intcon2	equ	0xFF1
 25997                           postinc0	equ	0xFEE
 25998                           fsr0h	equ	0xFEA
 25999                           fsr0l	equ	0xFE9
 26000                           wreg	equ	0xFE8
 26001                           indf1	equ	0xFE7
 26002                           postinc1	equ	0xFE6
 26003                           postdec1	equ	0xFE5
 26004                           fsr1h	equ	0xFE2
 26005                           fsr1l	equ	0xFE1
 26006                           indf2	equ	0xFDF
 26007                           postinc2	equ	0xFDE
 26008                           postdec2	equ	0xFDD
 26009                           plusw2	equ	0xFDB
 26010                           fsr2h	equ	0xFDA
 26011                           fsr2l	equ	0xFD9
 26012                           status	equ	0xFD8
 26013                           
 26014 ;; *************** function i2_USBTransferOnePacket *****************
 26015 ;; Defined at:
 26016 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 26017 ;; Parameters:    Size  Location     Type
 26018 ;;  ep              1    wreg     unsigned char 
 26019 ;;  dir             1    0[COMRAM] unsigned char 
 26020 ;;  data            2    1[COMRAM] PTR unsigned char 
 26021 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 26022 ;;  len             1    3[COMRAM] unsigned char 
 26023 ;; Auto vars:     Size  Location     Type
 26024 ;;  ep              1    4[COMRAM] unsigned char 
 26025 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 26026 ;;		 -> NULL(0), BDT(48), 
 26027 ;; Return value:  Size  Location     Type
 26028 ;;                  2    0[COMRAM] PTR void 
 26029 ;; Registers used:
 26030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26031 ;; Tracked objects:
 26032 ;;		On entry : 0/0
 26033 ;;		On exit  : 0/0
 26034 ;;		Unchanged: 0/0
 26035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26037 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26040 ;;Total ram usage:        7 bytes
 26041 ;; Hardware stack levels used:    1
 26042 ;; This function calls:
 26043 ;;		Nothing
 26044 ;; This function is called by:
 26045 ;;		_CDCInitEP
 26046 ;; This function uses a non-reentrant model
 26047 ;;
 26048                           
 26049                           	psect	text119
 26050  014952                     __ptext119:
 26051                           	opt stack 0
 26052  014952                     i2_USBTransferOnePacket:
 26053                           	opt stack 17
 26054                           
 26055                           ; BSR set to: 0
 26056                           ;incstack = 0
 26057                           ;i2USBTransferOnePacket@ep stored from wreg
 26058  014952  6E05               	movwf	i2USBTransferOnePacket@ep,c
 26059                           
 26060                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 26061                           ;usb_device.c: 1000: if(dir != 0)
 26062  014954  5001               	movf	i2USBTransferOnePacket@dir,w,c
 26063  014956  B4D8               	btfsc	status,2,c
 26064  014958  D007               	goto	i2l5628
 26065                           
 26066                           ;usb_device.c: 1001: {
 26067                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 26068  01495A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 26069  01495C  0D02               	mullw	2
 26070  01495E  0E7B               	movlw	low _pBDTEntryIn
 26071  014960  24F3               	addwf	prodl,w,c
 26072  014962  6ED9               	movwf	fsr2l,c
 26073  014964  0E00               	movlw	high _pBDTEntryIn
 26074  014966  D006               	goto	L18
 26075  014968                     i2l5628:
 26076                           
 26077                           ;usb_device.c: 1005: else
 26078                           ;usb_device.c: 1006: {
 26079                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 26080  014968  5005               	movf	i2USBTransferOnePacket@ep,w,c
 26081  01496A  0D02               	mullw	2
 26082  01496C  0E81               	movlw	low _pBDTEntryOut
 26083  01496E  24F3               	addwf	prodl,w,c
 26084  014970  6ED9               	movwf	fsr2l,c
 26085  014972  0E00               	movlw	high _pBDTEntryOut
 26086  014974                     L18:
 26087  014974  20F4               	addwfc	prodh,w,c
 26088  014976  6EDA               	movwf	fsr2h,c
 26089  014978  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 26090  01497C  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 26091                           
 26092                           ;usb_device.c: 1009: }
 26093                           ;usb_device.c: 1013: if(handle == 0)
 26094  014980  5006               	movf	i2USBTransferOnePacket@handle,w,c
 26095  014982  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 26096  014984  A4D8               	btfss	status,2,c
 26097  014986  D005               	goto	i2l5636
 26098                           
 26099                           ;usb_device.c: 1014: {
 26100                           ;usb_device.c: 1015: return 0;
 26101  014988  0E00               	movlw	0
 26102  01498A  6E01               	movwf	?i2_USBTransferOnePacket,c
 26103  01498C  0E00               	movlw	0
 26104  01498E  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 26105  014990  0012               	return	
 26106  014992                     i2l5636:
 26107                           
 26108                           ;usb_device.c: 1016: }
 26109                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 26110  014992  EE20 F002          	lfsr	2,2
 26111  014996  5006               	movf	i2USBTransferOnePacket@handle,w,c
 26112  014998  26D9               	addwf	fsr2l,f,c
 26113  01499A  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 26114  01499C  22DA               	addwfc	fsr2h,f,c
 26115  01499E  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 26116  0149A2  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 26117                           
 26118                           ;usb_device.c: 1030: handle->CNT = len;
 26119  0149A6  EE20 F001          	lfsr	2,1
 26120  0149AA  5006               	movf	i2USBTransferOnePacket@handle,w,c
 26121  0149AC  26D9               	addwf	fsr2l,f,c
 26122  0149AE  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 26123  0149B0  22DA               	addwfc	fsr2h,f,c
 26124  0149B2  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 26125                           
 26126                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 26127  0149B6  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 26128  0149BA  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 26129  0149BE  0E40               	movlw	64
 26130  0149C0  16DF               	andwf	indf2,f,c
 26131                           
 26132                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 26133  0149C2  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 26134  0149C6  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 26135  0149CA  0E00               	movlw	0
 26136  0149CC  86DB               	bsf	plusw2,3,c
 26137                           
 26138                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 26139  0149CE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 26140  0149D2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 26141  0149D6  0E00               	movlw	0
 26142  0149D8  8EDB               	bsf	plusw2,7,c
 26143                           
 26144                           ;usb_device.c: 1036: if(dir != 0)
 26145  0149DA  5001               	movf	i2USBTransferOnePacket@dir,w,c
 26146  0149DC  B4D8               	btfsc	status,2,c
 26147  0149DE  D007               	goto	i2l5648
 26148                           
 26149                           ;usb_device.c: 1037: {
 26150                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 26151  0149E0  5005               	movf	i2USBTransferOnePacket@ep,w,c
 26152  0149E2  0D02               	mullw	2
 26153  0149E4  0E7B               	movlw	low _pBDTEntryIn
 26154  0149E6  24F3               	addwf	prodl,w,c
 26155  0149E8  6ED9               	movwf	fsr2l,c
 26156  0149EA  0E00               	movlw	high _pBDTEntryIn
 26157  0149EC  D006               	goto	L19
 26158  0149EE                     i2l5648:
 26159                           
 26160                           ;usb_device.c: 1041: else
 26161                           ;usb_device.c: 1042: {
 26162                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 26163  0149EE  5005               	movf	i2USBTransferOnePacket@ep,w,c
 26164  0149F0  0D02               	mullw	2
 26165  0149F2  0E81               	movlw	low _pBDTEntryOut
 26166  0149F4  24F3               	addwf	prodl,w,c
 26167  0149F6  6ED9               	movwf	fsr2l,c
 26168  0149F8  0E00               	movlw	high _pBDTEntryOut
 26169  0149FA                     L19:
 26170  0149FA  20F4               	addwfc	prodh,w,c
 26171  0149FC  6EDA               	movwf	fsr2h,c
 26172  0149FE  0E04               	movlw	4
 26173  014A00  1ADF               	xorwf	indf2,f,c
 26174                           
 26175                           ;usb_device.c: 1045: }
 26176                           ;usb_device.c: 1046: return (void*)handle;
 26177  014A02  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 26178  014A06  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 26179  014A0A  0012               	return	
 26180  014A0C                     __end_ofi2_USBTransferOnePacket:
 26181                           	opt stack 0
 26182                           pclatu	equ	0xFFB
 26183                           pclath	equ	0xFFA
 26184                           tblptru	equ	0xFF8
 26185                           tblptrh	equ	0xFF7
 26186                           tblptrl	equ	0xFF6
 26187                           tablat	equ	0xFF5
 26188                           prodh	equ	0xFF4
 26189                           prodl	equ	0xFF3
 26190                           intcon	equ	0xFF2
 26191                           intcon2	equ	0xFF1
 26192                           postinc0	equ	0xFEE
 26193                           fsr0h	equ	0xFEA
 26194                           fsr0l	equ	0xFE9
 26195                           wreg	equ	0xFE8
 26196                           indf1	equ	0xFE7
 26197                           postinc1	equ	0xFE6
 26198                           postdec1	equ	0xFE5
 26199                           fsr1h	equ	0xFE2
 26200                           fsr1l	equ	0xFE1
 26201                           indf2	equ	0xFDF
 26202                           postinc2	equ	0xFDE
 26203                           postdec2	equ	0xFDD
 26204                           plusw2	equ	0xFDB
 26205                           fsr2h	equ	0xFDA
 26206                           fsr2l	equ	0xFD9
 26207                           status	equ	0xFD8
 26208                           
 26209 ;; *************** function _USBEnableEndpoint *****************
 26210 ;; Defined at:
 26211 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 26212 ;; Parameters:    Size  Location     Type
 26213 ;;  ep              1    wreg     unsigned char 
 26214 ;;  options         1    8[COMRAM] unsigned char 
 26215 ;; Auto vars:     Size  Location     Type
 26216 ;;  ep              1   11[COMRAM] unsigned char 
 26217 ;;  p               2    9[COMRAM] PTR unsigned char 
 26218 ;;		 -> UEP0(1), 
 26219 ;; Return value:  Size  Location     Type
 26220 ;;		None               void
 26221 ;; Registers used:
 26222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26223 ;; Tracked objects:
 26224 ;;		On entry : 0/0
 26225 ;;		On exit  : 0/0
 26226 ;;		Unchanged: 0/0
 26227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26228 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26229 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26232 ;;Total ram usage:        4 bytes
 26233 ;; Hardware stack levels used:    1
 26234 ;; Hardware stack levels required when called:    1
 26235 ;; This function calls:
 26236 ;;		_USBConfigureEndpoint
 26237 ;; This function is called by:
 26238 ;;		_CDCInitEP
 26239 ;; This function uses a non-reentrant model
 26240 ;;
 26241                           
 26242                           	psect	text120
 26243  015C76                     __ptext120:
 26244                           	opt stack 0
 26245  015C76                     _USBEnableEndpoint:
 26246                           	opt stack 16
 26247                           
 26248                           ;incstack = 0
 26249                           ;USBEnableEndpoint@ep stored from wreg
 26250  015C76  6E0C               	movwf	USBEnableEndpoint@ep,c
 26251                           
 26252                           ;usb_device.c: 880: unsigned char* p;
 26253                           ;usb_device.c: 884: if(options & 0x04)
 26254  015C78  A409               	btfss	USBEnableEndpoint@options,2,c
 26255  015C7A  D005               	goto	i2l5616
 26256                           
 26257                           ;usb_device.c: 885: {
 26258                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 26259  015C7C  0E00               	movlw	0
 26260  015C7E  6E01               	movwf	USBConfigureEndpoint@direction,c
 26261  015C80  500C               	movf	USBEnableEndpoint@ep,w,c
 26262  015C82  EC34  F0A8         	call	_USBConfigureEndpoint
 26263  015C86                     i2l5616:
 26264                           
 26265                           ;usb_device.c: 887: }
 26266                           ;usb_device.c: 888: if(options & 0x02)
 26267  015C86  A209               	btfss	USBEnableEndpoint@options,1,c
 26268  015C88  D005               	goto	i2l5620
 26269                           
 26270                           ;usb_device.c: 889: {
 26271                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 26272  015C8A  0E01               	movlw	1
 26273  015C8C  6E01               	movwf	USBConfigureEndpoint@direction,c
 26274  015C8E  500C               	movf	USBEnableEndpoint@ep,w,c
 26275  015C90  EC34  F0A8         	call	_USBConfigureEndpoint
 26276  015C94                     i2l5620:
 26277                           
 26278                           ;usb_device.c: 891: }
 26279                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 26280  015C94  500C               	movf	USBEnableEndpoint@ep,w,c
 26281  015C96  0D01               	mullw	1
 26282  015C98  0E26               	movlw	38
 26283  015C9A  24F3               	addwf	prodl,w,c
 26284  015C9C  6E0A               	movwf	USBEnableEndpoint@p,c
 26285  015C9E  0E0F               	movlw	15
 26286  015CA0  20F4               	addwfc	prodh,w,c
 26287  015CA2  6E0B               	movwf	USBEnableEndpoint@p+1,c
 26288                           
 26289                           ;usb_device.c: 901: *p = options;
 26290  015CA4  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 26291  015CA8  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 26292  015CAC  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 26293  015CB0  0012               	return		;funcret
 26294  015CB2                     __end_of_USBEnableEndpoint:
 26295                           	opt stack 0
 26296                           pclatu	equ	0xFFB
 26297                           pclath	equ	0xFFA
 26298                           tblptru	equ	0xFF8
 26299                           tblptrh	equ	0xFF7
 26300                           tblptrl	equ	0xFF6
 26301                           tablat	equ	0xFF5
 26302                           prodh	equ	0xFF4
 26303                           prodl	equ	0xFF3
 26304                           intcon	equ	0xFF2
 26305                           intcon2	equ	0xFF1
 26306                           postinc0	equ	0xFEE
 26307                           fsr0h	equ	0xFEA
 26308                           fsr0l	equ	0xFE9
 26309                           wreg	equ	0xFE8
 26310                           indf1	equ	0xFE7
 26311                           postinc1	equ	0xFE6
 26312                           postdec1	equ	0xFE5
 26313                           fsr1h	equ	0xFE2
 26314                           fsr1l	equ	0xFE1
 26315                           indf2	equ	0xFDF
 26316                           postinc2	equ	0xFDE
 26317                           postdec2	equ	0xFDD
 26318                           plusw2	equ	0xFDB
 26319                           fsr2h	equ	0xFDA
 26320                           fsr2l	equ	0xFD9
 26321                           status	equ	0xFD8
 26322                           
 26323 ;; *************** function _USBConfigureEndpoint *****************
 26324 ;; Defined at:
 26325 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 26326 ;; Parameters:    Size  Location     Type
 26327 ;;  EPNum           1    wreg     unsigned char 
 26328 ;;  direction       1    0[COMRAM] unsigned char 
 26329 ;; Auto vars:     Size  Location     Type
 26330 ;;  EPNum           1    5[COMRAM] unsigned char 
 26331 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 26332 ;;		 -> BDT(48), 
 26333 ;; Return value:  Size  Location     Type
 26334 ;;		None               void
 26335 ;; Registers used:
 26336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26337 ;; Tracked objects:
 26338 ;;		On entry : 0/0
 26339 ;;		On exit  : 0/0
 26340 ;;		Unchanged: 0/0
 26341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26342 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26343 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26344 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26345 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26346 ;;Total ram usage:        8 bytes
 26347 ;; Hardware stack levels used:    1
 26348 ;; This function calls:
 26349 ;;		Nothing
 26350 ;; This function is called by:
 26351 ;;		_USBEnableEndpoint
 26352 ;; This function uses a non-reentrant model
 26353 ;;
 26354                           
 26355                           	psect	text121
 26356  015068                     __ptext121:
 26357                           	opt stack 0
 26358  015068                     _USBConfigureEndpoint:
 26359                           	opt stack 16
 26360                           
 26361                           ;incstack = 0
 26362                           ;USBConfigureEndpoint@EPNum stored from wreg
 26363  015068  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 26364                           
 26365                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 26366                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 26367  01506A  0E00               	movlw	0
 26368  01506C  6E07               	movwf	USBConfigureEndpoint@handle,c
 26369  01506E  0E0D               	movlw	13
 26370  015070  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 26371                           
 26372                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 26373  015072  5001               	movf	USBConfigureEndpoint@direction,w,c
 26374  015074  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 26375  015076  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 26376  015078  90D8               	bcf	status,0,c
 26377  01507A  3602               	rlcf	??_USBConfigureEndpoint,f,c
 26378  01507C  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 26379  01507E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 26380  015080  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 26381  015082  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 26382  015084  90D8               	bcf	status,0,c
 26383  015086  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 26384  015088  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 26385  01508A  90D8               	bcf	status,0,c
 26386  01508C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 26387  01508E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 26388  015090  5002               	movf	??_USBConfigureEndpoint,w,c
 26389  015092  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 26390  015094  5003               	movf	??_USBConfigureEndpoint+1,w,c
 26391  015096  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 26392  015098  90D8               	bcf	status,0,c
 26393  01509A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 26394  01509C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 26395  01509E  90D8               	bcf	status,0,c
 26396  0150A0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 26397  0150A2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 26398  0150A4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 26399  0150A6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 26400  0150A8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 26401  0150AA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 26402                           
 26403                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 26404  0150AC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 26405  0150B0  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 26406  0150B4  9EDF               	bcf	indf2,7,c
 26407                           
 26408                           ;usb_device.c: 1557: if(direction == 0)
 26409  0150B6  5001               	movf	USBConfigureEndpoint@direction,w,c
 26410  0150B8  A4D8               	btfss	status,2,c
 26411  0150BA  D007               	goto	i2l5606
 26412                           
 26413                           ;usb_device.c: 1558: {
 26414                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 26415  0150BC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 26416  0150BE  0D02               	mullw	2
 26417  0150C0  0E81               	movlw	low _pBDTEntryOut
 26418  0150C2  24F3               	addwf	prodl,w,c
 26419  0150C4  6ED9               	movwf	fsr2l,c
 26420  0150C6  0E00               	movlw	high _pBDTEntryOut
 26421  0150C8  D006               	goto	L20
 26422  0150CA                     i2l5606:
 26423                           
 26424                           ;usb_device.c: 1561: else
 26425                           ;usb_device.c: 1562: {
 26426                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 26427  0150CA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 26428  0150CC  0D02               	mullw	2
 26429  0150CE  0E7B               	movlw	low _pBDTEntryIn
 26430  0150D0  24F3               	addwf	prodl,w,c
 26431  0150D2  6ED9               	movwf	fsr2l,c
 26432  0150D4  0E00               	movlw	high _pBDTEntryIn
 26433  0150D6                     L20:
 26434  0150D6  20F4               	addwfc	prodh,w,c
 26435  0150D8  6EDA               	movwf	fsr2h,c
 26436  0150DA  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 26437  0150DE  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 26438                           
 26439                           ;usb_device.c: 1564: }
 26440                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 26441  0150E2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 26442  0150E6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 26443  0150EA  9CDF               	bcf	indf2,6,c
 26444                           
 26445                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 26446  0150EC  EE20 F004          	lfsr	2,4
 26447  0150F0  5007               	movf	USBConfigureEndpoint@handle,w,c
 26448  0150F2  26D9               	addwf	fsr2l,f,c
 26449  0150F4  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 26450  0150F6  22DA               	addwfc	fsr2h,f,c
 26451  0150F8  8CDF               	bsf	indf2,6,c
 26452  0150FA  0012               	return		;funcret
 26453  0150FC                     __end_of_USBConfigureEndpoint:
 26454                           	opt stack 0
 26455                           pclatu	equ	0xFFB
 26456                           pclath	equ	0xFFA
 26457                           tblptru	equ	0xFF8
 26458                           tblptrh	equ	0xFF7
 26459                           tblptrl	equ	0xFF6
 26460                           tablat	equ	0xFF5
 26461                           prodh	equ	0xFF4
 26462                           prodl	equ	0xFF3
 26463                           intcon	equ	0xFF2
 26464                           intcon2	equ	0xFF1
 26465                           postinc0	equ	0xFEE
 26466                           fsr0h	equ	0xFEA
 26467                           fsr0l	equ	0xFE9
 26468                           wreg	equ	0xFE8
 26469                           indf1	equ	0xFE7
 26470                           postinc1	equ	0xFE6
 26471                           postdec1	equ	0xFE5
 26472                           fsr1h	equ	0xFE2
 26473                           fsr1l	equ	0xFE1
 26474                           indf2	equ	0xFDF
 26475                           postinc2	equ	0xFDE
 26476                           postdec2	equ	0xFDD
 26477                           plusw2	equ	0xFDB
 26478                           fsr2h	equ	0xFDA
 26479                           fsr2l	equ	0xFD9
 26480                           status	equ	0xFD8
 26481                           
 26482 ;; *************** function _USBCtrlTrfOutHandler *****************
 26483 ;; Defined at:
 26484 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 26485 ;; Parameters:    Size  Location     Type
 26486 ;;		None
 26487 ;; Auto vars:     Size  Location     Type
 26488 ;;		None
 26489 ;; Return value:  Size  Location     Type
 26490 ;;		None               void
 26491 ;; Registers used:
 26492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26493 ;; Tracked objects:
 26494 ;;		On entry : 0/0
 26495 ;;		On exit  : 0/0
 26496 ;;		Unchanged: 0/0
 26497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26502 ;;Total ram usage:        0 bytes
 26503 ;; Hardware stack levels used:    1
 26504 ;; Hardware stack levels required when called:    2
 26505 ;; This function calls:
 26506 ;;		_USBCtrlTrfRxService
 26507 ;; This function is called by:
 26508 ;;		_USBCtrlEPService
 26509 ;; This function uses a non-reentrant model
 26510 ;;
 26511                           
 26512                           	psect	text122
 26513  0157EA                     __ptext122:
 26514                           	opt stack 0
 26515  0157EA                     _USBCtrlTrfOutHandler:
 26516                           	opt stack 16
 26517                           
 26518                           ;usb_device.c: 2543: if(controlTransferState == 2)
 26519                           
 26520                           ;incstack = 0
 26521  0157EA  0E02               	movlw	2
 26522  0157EC  1849               	xorwf	_controlTransferState,w,c	;volatile
 26523  0157EE  A4D8               	btfss	status,2,c
 26524  0157F0  D003               	goto	i2l6732
 26525                           
 26526                           ;usb_device.c: 2544: {
 26527                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 26528  0157F2  EC02  F099         	call	_USBCtrlTrfRxService	;wreg free
 26529                           
 26530                           ;usb_device.c: 2546: }
 26531  0157F6  0012               	return	
 26532  0157F8                     i2l6732:
 26533                           
 26534                           ;usb_device.c: 2547: else
 26535                           ;usb_device.c: 2548: {
 26536                           ;usb_device.c: 2551: controlTransferState = 0;
 26537  0157F8  0E00               	movlw	0
 26538  0157FA  6E49               	movwf	_controlTransferState,c	;volatile
 26539                           
 26540                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 26541  0157FC  5040               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 26542  0157FE  A4D8               	btfss	status,2,c
 26543  015800  D01F               	goto	i2l6740
 26544                           
 26545                           ;usb_device.c: 2559: {
 26546                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 26547  015802  EE20 F001          	lfsr	2,1
 26548  015806  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26549  015808  26D9               	addwf	fsr2l,f,c
 26550  01580A  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26551  01580C  22DA               	addwfc	fsr2h,f,c
 26552  01580E  0E08               	movlw	8
 26553  015810  6EDF               	movwf	indf2,c
 26554                           
 26555                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26556  015812  EE20 F002          	lfsr	2,2
 26557  015816  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26558  015818  26D9               	addwf	fsr2l,f,c
 26559  01581A  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26560  01581C  22DA               	addwfc	fsr2h,f,c
 26561  01581E  0E30               	movlw	48
 26562  015820  6EDE               	movwf	postinc2,c
 26563  015822  0E0D               	movlw	13
 26564  015824  6EDD               	movwf	postdec2,c
 26565                           
 26566                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26567  015826  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26568  01582A  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26569  01582E  0E0C               	movlw	12
 26570  015830  6EDF               	movwf	indf2,c
 26571                           
 26572                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26573  015832  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26574  015836  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26575  01583A  0E00               	movlw	0
 26576  01583C  8EDB               	bsf	plusw2,7,c
 26577                           
 26578                           ;usb_device.c: 2564: }
 26579  01583E  0012               	return	
 26580  015840                     i2l6740:
 26581                           
 26582                           ;usb_device.c: 2565: else
 26583                           ;usb_device.c: 2566: {
 26584                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 26585  015840  0E00               	movlw	0
 26586  015842  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26587  015844  0012               	return	
 26588  015846                     __end_of_USBCtrlTrfOutHandler:
 26589                           	opt stack 0
 26590                           pclatu	equ	0xFFB
 26591                           pclath	equ	0xFFA
 26592                           tblptru	equ	0xFF8
 26593                           tblptrh	equ	0xFF7
 26594                           tblptrl	equ	0xFF6
 26595                           tablat	equ	0xFF5
 26596                           prodh	equ	0xFF4
 26597                           prodl	equ	0xFF3
 26598                           intcon	equ	0xFF2
 26599                           intcon2	equ	0xFF1
 26600                           postinc0	equ	0xFEE
 26601                           fsr0h	equ	0xFEA
 26602                           fsr0l	equ	0xFE9
 26603                           wreg	equ	0xFE8
 26604                           indf1	equ	0xFE7
 26605                           postinc1	equ	0xFE6
 26606                           postdec1	equ	0xFE5
 26607                           fsr1h	equ	0xFE2
 26608                           fsr1l	equ	0xFE1
 26609                           indf2	equ	0xFDF
 26610                           postinc2	equ	0xFDE
 26611                           postdec2	equ	0xFDD
 26612                           plusw2	equ	0xFDB
 26613                           fsr2h	equ	0xFDA
 26614                           fsr2l	equ	0xFD9
 26615                           status	equ	0xFD8
 26616                           
 26617 ;; *************** function _USBCtrlTrfRxService *****************
 26618 ;; Defined at:
 26619 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 26620 ;; Parameters:    Size  Location     Type
 26621 ;;		None
 26622 ;; Auto vars:     Size  Location     Type
 26623 ;;  byteToRead      1    1[COMRAM] unsigned char 
 26624 ;;  i               1    0[COMRAM] unsigned char 
 26625 ;; Return value:  Size  Location     Type
 26626 ;;		None               void
 26627 ;; Registers used:
 26628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26629 ;; Tracked objects:
 26630 ;;		On entry : 0/0
 26631 ;;		On exit  : 0/0
 26632 ;;		Unchanged: 0/0
 26633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26638 ;;Total ram usage:        2 bytes
 26639 ;; Hardware stack levels used:    1
 26640 ;; Hardware stack levels required when called:    1
 26641 ;; This function calls:
 26642 ;;		_USBCtrlEPAllowStatusStage
 26643 ;; This function is called by:
 26644 ;;		_USBCtrlTrfOutHandler
 26645 ;; This function uses a non-reentrant model
 26646 ;;
 26647                           
 26648                           	psect	text123
 26649  013204                     __ptext123:
 26650                           	opt stack 0
 26651  013204                     _USBCtrlTrfRxService:
 26652                           	opt stack 16
 26653                           
 26654                           ;usb_device.c: 1854: uint8_t byteToRead;
 26655                           ;usb_device.c: 1855: uint8_t i;
 26656                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 26657                           
 26658                           ;incstack = 0
 26659  013204  EE20 F001          	lfsr	2,1
 26660  013208  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 26661  01320A  26D9               	addwf	fsr2l,f,c
 26662  01320C  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26663  01320E  22DA               	addwfc	fsr2h,f,c
 26664  013210  50DF               	movf	indf2,w,c
 26665  013212  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 26666                           
 26667                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 26668  013214  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26669  013216  0100               	movlb	0	; () banked
 26670  013218  5D70               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 26671  01321A  0E00               	movlw	0
 26672  01321C  5971               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 26673  01321E  A0D8               	btfss	status,0,c
 26674                           
 26675                           ; BSR set to: 0
 26676                           ;usb_device.c: 1866: {
 26677                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 26678  013220  C070  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 26679                           
 26680                           ; BSR set to: 0
 26681                           ;usb_device.c: 1868: }
 26682                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 26683                           
 26684                           ; BSR set to: 0
 26685  013224  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26686  013226  0100               	movlb	0	; () banked
 26687  013228  5F70               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 26688  01322A  0E00               	movlw	0
 26689  01322C  5B71               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 26690                           
 26691                           ; BSR set to: 0
 26692                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 26693  01322E  0E00               	movlw	0
 26694  013230  6E01               	movwf	USBCtrlTrfRxService@i,c
 26695  013232  D012               	goto	i2l6484
 26696  013234                     i2l6478:
 26697                           
 26698                           ; BSR set to: 0
 26699                           ;usb_device.c: 1875: {
 26700                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 26701  013234  5001               	movf	USBCtrlTrfRxService@i,w,c
 26702  013236  0D01               	mullw	1
 26703  013238  0E38               	movlw	56
 26704  01323A  24F3               	addwf	prodl,w,c
 26705  01323C  6ED9               	movwf	fsr2l,c
 26706  01323E  0E0D               	movlw	13
 26707  013240  20F4               	addwfc	prodh,w,c
 26708  013242  6EDA               	movwf	fsr2h,c
 26709  013244  C06C  FFE1         	movff	_outPipes,fsr1l	;volatile
 26710  013248  C06D  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 26711  01324C  CFDF FFE7          	movff	indf2,indf1
 26712                           
 26713                           ; BSR set to: 0
 26714  013250  0100               	movlb	0	; () banked
 26715  013252  4B6C               	infsnz	_outPipes& (0+255),f,b	;volatile
 26716  013254  2B6D               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 26717                           
 26718                           ; BSR set to: 0
 26719  013256  2A01               	incf	USBCtrlTrfRxService@i,f,c
 26720  013258                     i2l6484:
 26721                           
 26722                           ; BSR set to: 0
 26723  013258  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26724  01325A  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 26725  01325C  A0D8               	btfss	status,0,c
 26726  01325E  D7EA               	goto	i2l6478
 26727                           
 26728                           ; BSR set to: 0
 26729                           ;usb_device.c: 1877: }
 26730                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 26731                           
 26732                           ; BSR set to: 0
 26733  013260  0100               	movlb	0	; () banked
 26734  013262  5170               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 26735  013264  0100               	movlb	0	; () banked
 26736  013266  1171               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 26737  013268  B4D8               	btfsc	status,2,c
 26738  01326A  D032               	goto	i2l6500
 26739                           
 26740                           ; BSR set to: 0
 26741                           ;usb_device.c: 1882: {
 26742                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 26743  01326C  EE20 F001          	lfsr	2,1
 26744  013270  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26745  013272  26D9               	addwf	fsr2l,f,c
 26746  013274  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26747  013276  22DA               	addwfc	fsr2h,f,c
 26748  013278  0E08               	movlw	8
 26749  01327A  6EDF               	movwf	indf2,c
 26750                           
 26751                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26752  01327C  EE20 F002          	lfsr	2,2
 26753  013280  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26754  013282  26D9               	addwf	fsr2l,f,c
 26755  013284  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26756  013286  22DA               	addwfc	fsr2h,f,c
 26757  013288  0E38               	movlw	56
 26758  01328A  6EDE               	movwf	postinc2,c
 26759  01328C  0E0D               	movlw	13
 26760  01328E  6EDD               	movwf	postdec2,c
 26761                           
 26762                           ; BSR set to: 0
 26763                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 26764  013290  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26765  013294  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26766  013298  BCDF               	btfsc	indf2,6,c
 26767  01329A  D00D               	goto	i2l6496
 26768                           
 26769                           ; BSR set to: 0
 26770                           ;usb_device.c: 1886: {
 26771                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26772  01329C  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26773  0132A0  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26774  0132A4  0E48               	movlw	72
 26775  0132A6  6EDF               	movwf	indf2,c
 26776                           
 26777                           ; BSR set to: 0
 26778                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26779  0132A8  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26780  0132AC  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26781  0132B0  0E00               	movlw	0
 26782  0132B2  8EDB               	bsf	plusw2,7,c
 26783                           
 26784                           ;usb_device.c: 1889: }
 26785  0132B4  0012               	return	
 26786  0132B6                     i2l6496:
 26787                           
 26788                           ; BSR set to: 0
 26789                           ;usb_device.c: 1890: else
 26790                           ;usb_device.c: 1891: {
 26791                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 26792  0132B6  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26793  0132BA  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26794  0132BE  0E08               	movlw	8
 26795  0132C0  6EDF               	movwf	indf2,c
 26796                           
 26797                           ; BSR set to: 0
 26798                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26799  0132C2  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26800  0132C6  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26801  0132CA  0E00               	movlw	0
 26802  0132CC  8EDB               	bsf	plusw2,7,c
 26803                           
 26804                           ; BSR set to: 0
 26805                           ;usb_device.c: 1894: }
 26806                           ;usb_device.c: 1895: }
 26807  0132CE  0012               	return	
 26808  0132D0                     i2l6500:
 26809                           
 26810                           ; BSR set to: 0
 26811                           ;usb_device.c: 1896: else
 26812                           ;usb_device.c: 1897: {
 26813                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 26814  0132D0  EE20 F001          	lfsr	2,1
 26815  0132D4  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26816  0132D6  26D9               	addwf	fsr2l,f,c
 26817  0132D8  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26818  0132DA  22DA               	addwfc	fsr2h,f,c
 26819  0132DC  0E08               	movlw	8
 26820  0132DE  6EDF               	movwf	indf2,c
 26821                           
 26822                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26823  0132E0  EE20 F002          	lfsr	2,2
 26824  0132E4  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26825  0132E6  26D9               	addwf	fsr2l,f,c
 26826  0132E8  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26827  0132EA  22DA               	addwfc	fsr2h,f,c
 26828  0132EC  0E30               	movlw	48
 26829  0132EE  6EDE               	movwf	postinc2,c
 26830  0132F0  0E0D               	movlw	13
 26831  0132F2  6EDD               	movwf	postdec2,c
 26832                           
 26833                           ; BSR set to: 0
 26834                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26835  0132F4  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26836  0132F8  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26837  0132FC  0E04               	movlw	4
 26838  0132FE  6EDF               	movwf	indf2,c
 26839                           
 26840                           ; BSR set to: 0
 26841                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26842  013300  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26843  013304  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26844  013308  0E00               	movlw	0
 26845  01330A  8EDB               	bsf	plusw2,7,c
 26846                           
 26847                           ; BSR set to: 0
 26848                           ;usb_device.c: 1926: }
 26849                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 26850                           
 26851                           ; BSR set to: 0
 26852                           ;usb_device.c: 1915: {
 26853                           ;usb_device.c: 1921: outPipes[0].pFunc();
 26854  01330C  0100               	movlb	0	; () banked
 26855  01330E  9F6F               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 26856                           
 26857                           ; BSR set to: 0
 26858                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 26859  013310  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26860  013312  A4D8               	btfss	status,2,c
 26861  013314  0012               	return	
 26862                           
 26863                           ; BSR set to: 0
 26864                           ;usb_device.c: 1942: {
 26865                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 26866  013316  EC6A  F0A2         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26867  01331A  0012               	return	
 26868  01331C                     __end_of_USBCtrlTrfRxService:
 26869                           	opt stack 0
 26870                           pclatu	equ	0xFFB
 26871                           pclath	equ	0xFFA
 26872                           tblptru	equ	0xFF8
 26873                           tblptrh	equ	0xFF7
 26874                           tblptrl	equ	0xFF6
 26875                           tablat	equ	0xFF5
 26876                           prodh	equ	0xFF4
 26877                           prodl	equ	0xFF3
 26878                           intcon	equ	0xFF2
 26879                           intcon2	equ	0xFF1
 26880                           postinc0	equ	0xFEE
 26881                           fsr0h	equ	0xFEA
 26882                           fsr0l	equ	0xFE9
 26883                           wreg	equ	0xFE8
 26884                           indf1	equ	0xFE7
 26885                           postinc1	equ	0xFE6
 26886                           postdec1	equ	0xFE5
 26887                           fsr1h	equ	0xFE2
 26888                           fsr1l	equ	0xFE1
 26889                           indf2	equ	0xFDF
 26890                           postinc2	equ	0xFDE
 26891                           postdec2	equ	0xFDD
 26892                           plusw2	equ	0xFDB
 26893                           fsr2h	equ	0xFDA
 26894                           fsr2l	equ	0xFD9
 26895                           status	equ	0xFD8
 26896                           
 26897 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 26898 ;; Defined at:
 26899 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 26900 ;; Parameters:    Size  Location     Type
 26901 ;;		None
 26902 ;; Auto vars:     Size  Location     Type
 26903 ;;		None
 26904 ;; Return value:  Size  Location     Type
 26905 ;;		None               void
 26906 ;; Registers used:
 26907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26908 ;; Tracked objects:
 26909 ;;		On entry : 0/0
 26910 ;;		On exit  : 0/0
 26911 ;;		Unchanged: 0/0
 26912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26917 ;;Total ram usage:        0 bytes
 26918 ;; Hardware stack levels used:    1
 26919 ;; This function calls:
 26920 ;;		Nothing
 26921 ;; This function is called by:
 26922 ;;		_USBDeviceTasks
 26923 ;;		_USBCtrlEPServiceComplete
 26924 ;;		_USBCtrlTrfRxService
 26925 ;; This function uses a non-reentrant model
 26926 ;;
 26927                           
 26928                           	psect	text124
 26929  0144D4                     __ptext124:
 26930                           	opt stack 0
 26931  0144D4                     _USBCtrlEPAllowStatusStage:
 26932                           	opt stack 16
 26933                           
 26934                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 26935                           
 26936                           ;incstack = 0
 26937  0144D4  5046               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 26938  0144D6  A4D8               	btfss	status,2,c
 26939  0144D8  0012               	return	
 26940                           
 26941                           ;usb_device.c: 1424: {
 26942                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 26943  0144DA  0E01               	movlw	1
 26944  0144DC  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26945                           
 26946                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 26947  0144DE  5047               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 26948  0144E0  A4D8               	btfss	status,2,c
 26949  0144E2  0012               	return	
 26950                           
 26951                           ;usb_device.c: 1427: {
 26952                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 26953  0144E4  0E01               	movlw	1
 26954  0144E6  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26955                           
 26956                           ;usb_device.c: 1432: if(controlTransferState == 2)
 26957  0144E8  0E02               	movlw	2
 26958  0144EA  1849               	xorwf	_controlTransferState,w,c	;volatile
 26959  0144EC  A4D8               	btfss	status,2,c
 26960  0144EE  D016               	goto	i2l6038
 26961                           
 26962                           ;usb_device.c: 1433: {
 26963                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 26964  0144F0  0100               	movlb	0	; () banked
 26965  0144F2  EE20 F001          	lfsr	2,1
 26966  0144F6  517B               	movf	_pBDTEntryIn& (0+255),w,b
 26967  0144F8  26D9               	addwf	fsr2l,f,c
 26968  0144FA  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26969  0144FC  22DA               	addwfc	fsr2h,f,c
 26970  0144FE  0E00               	movlw	0
 26971  014500  6EDF               	movwf	indf2,c
 26972                           
 26973                           ; BSR set to: 0
 26974                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26975  014502  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26976  014506  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26977  01450A  0E48               	movlw	72
 26978  01450C  6EDF               	movwf	indf2,c
 26979                           
 26980                           ; BSR set to: 0
 26981                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26982  01450E  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26983  014512  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26984  014516  0E00               	movlw	0
 26985  014518  8EDB               	bsf	plusw2,7,c
 26986                           
 26987                           ;usb_device.c: 1437: }
 26988  01451A  0012               	return	
 26989  01451C                     i2l6038:
 26990                           
 26991                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 26992  01451C  0449               	decf	_controlTransferState,w,c	;volatile
 26993  01451E  A4D8               	btfss	status,2,c
 26994  014520  0012               	return	
 26995                           
 26996                           ;usb_device.c: 1439: {
 26997                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 26998  014522  0E00               	movlw	0
 26999  014524  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 27000                           
 27001                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 27002  014526  EE20 F001          	lfsr	2,1
 27003  01452A  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 27004  01452C  26D9               	addwf	fsr2l,f,c
 27005  01452E  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27006  014530  22DA               	addwfc	fsr2h,f,c
 27007  014532  0E08               	movlw	8
 27008  014534  6EDF               	movwf	indf2,c
 27009                           
 27010                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 27011  014536  EE20 F002          	lfsr	2,2
 27012  01453A  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 27013  01453C  26D9               	addwf	fsr2l,f,c
 27014  01453E  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27015  014540  22DA               	addwfc	fsr2h,f,c
 27016  014542  0E30               	movlw	48
 27017  014544  6EDE               	movwf	postinc2,c
 27018  014546  0E0D               	movlw	13
 27019  014548  6EDD               	movwf	postdec2,c
 27020                           
 27021                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 27022  01454A  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27023  01454E  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27024  014552  0E04               	movlw	4
 27025  014554  6EDF               	movwf	indf2,c
 27026                           
 27027                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 27028  014556  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27029  01455A  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27030  01455E  0E00               	movlw	0
 27031  014560  8EDB               	bsf	plusw2,7,c
 27032                           
 27033                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 27034  014562  0E01               	movlw	1
 27035  014564  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 27036                           
 27037                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 27038  014566  EE20 F001          	lfsr	2,1
 27039  01456A  5039               	movf	_pBDTEntryEP0OutNext,w,c
 27040  01456C  26D9               	addwf	fsr2l,f,c
 27041  01456E  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 27042  014570  22DA               	addwfc	fsr2h,f,c
 27043  014572  0E08               	movlw	8
 27044  014574  6EDF               	movwf	indf2,c
 27045                           
 27046                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27047  014576  EE20 F002          	lfsr	2,2
 27048  01457A  5039               	movf	_pBDTEntryEP0OutNext,w,c
 27049  01457C  26D9               	addwf	fsr2l,f,c
 27050  01457E  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 27051  014580  22DA               	addwfc	fsr2h,f,c
 27052  014582  0E30               	movlw	48
 27053  014584  6EDE               	movwf	postinc2,c
 27054  014586  0E0D               	movlw	13
 27055  014588  6EDD               	movwf	postdec2,c
 27056                           
 27057                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 27058  01458A  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27059  01458E  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27060  014592  0E80               	movlw	128
 27061  014594  6EDF               	movwf	indf2,c
 27062  014596  0012               	return	
 27063  014598                     __end_of_USBCtrlEPAllowStatusStage:
 27064                           	opt stack 0
 27065                           pclatu	equ	0xFFB
 27066                           pclath	equ	0xFFA
 27067                           tblptru	equ	0xFF8
 27068                           tblptrh	equ	0xFF7
 27069                           tblptrl	equ	0xFF6
 27070                           tablat	equ	0xFF5
 27071                           prodh	equ	0xFF4
 27072                           prodl	equ	0xFF3
 27073                           intcon	equ	0xFF2
 27074                           intcon2	equ	0xFF1
 27075                           postinc0	equ	0xFEE
 27076                           fsr0h	equ	0xFEA
 27077                           fsr0l	equ	0xFE9
 27078                           wreg	equ	0xFE8
 27079                           indf1	equ	0xFE7
 27080                           postinc1	equ	0xFE6
 27081                           postdec1	equ	0xFE5
 27082                           fsr1h	equ	0xFE2
 27083                           fsr1l	equ	0xFE1
 27084                           indf2	equ	0xFDF
 27085                           postinc2	equ	0xFDE
 27086                           postdec2	equ	0xFDD
 27087                           plusw2	equ	0xFDB
 27088                           fsr2h	equ	0xFDA
 27089                           fsr2l	equ	0xFD9
 27090                           status	equ	0xFD8
 27091                           
 27092 ;; *************** function _USBCtrlTrfInHandler *****************
 27093 ;; Defined at:
 27094 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 27095 ;; Parameters:    Size  Location     Type
 27096 ;;		None
 27097 ;; Auto vars:     Size  Location     Type
 27098 ;;  lastDTS         1    1[COMRAM] unsigned char 
 27099 ;; Return value:  Size  Location     Type
 27100 ;;		None               void
 27101 ;; Registers used:
 27102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27103 ;; Tracked objects:
 27104 ;;		On entry : 0/0
 27105 ;;		On exit  : 0/0
 27106 ;;		Unchanged: 0/0
 27107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27112 ;;Total ram usage:        1 bytes
 27113 ;; Hardware stack levels used:    1
 27114 ;; Hardware stack levels required when called:    1
 27115 ;; This function calls:
 27116 ;;		_USBCtrlTrfTxService
 27117 ;; This function is called by:
 27118 ;;		_USBCtrlEPService
 27119 ;; This function uses a non-reentrant model
 27120 ;;
 27121                           
 27122                           	psect	text125
 27123  014598                     __ptext125:
 27124                           	opt stack 0
 27125  014598                     _USBCtrlTrfInHandler:
 27126                           	opt stack 17
 27127                           
 27128                           ;usb_device.c: 2597: uint8_t lastDTS;
 27129                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 27130                           
 27131                           ;incstack = 0
 27132  014598  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27133  01459C  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27134  0145A0  0E00               	movlw	0
 27135  0145A2  BCDF               	btfsc	indf2,6,c
 27136  0145A4  0E01               	movlw	1
 27137  0145A6  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 27138                           
 27139                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27140  0145A8  0E04               	movlw	4
 27141  0145AA  0100               	movlb	0	; () banked
 27142  0145AC  1B7B               	xorwf	_pBDTEntryIn& (0+255),f,b
 27143                           
 27144                           ; BSR set to: 0
 27145                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 27146  0145AE  0E08               	movlw	8
 27147  0145B0  1845               	xorwf	_USBDeviceState,w,c	;volatile
 27148  0145B2  A4D8               	btfss	status,2,c
 27149  0145B4  D00D               	goto	i2l6756
 27150                           
 27151                           ; BSR set to: 0
 27152                           ;usb_device.c: 2608: {
 27153                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 27154  0145B6  010D               	movlb	13	; () banked
 27155  0145B8  5132               	movf	50,w,b	;volatile
 27156  0145BA  0B7F               	andlw	127
 27157  0145BC  010F               	movlb	15	; () banked
 27158  0145BE  6F38               	movwf	56,b	;volatile
 27159                           
 27160                           ; BSR set to: 15
 27161                           ;usb_device.c: 2610: if(UADDR != 0u)
 27162  0145C0  010F               	movlb	15	; () banked
 27163  0145C2  5138               	movf	56,w,b	;volatile
 27164  0145C4  B4D8               	btfsc	status,2,c
 27165  0145C6  D002               	goto	i2l6754
 27166                           
 27167                           ; BSR set to: 15
 27168                           ;usb_device.c: 2611: {
 27169                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 27170  0145C8  0E10               	movlw	16
 27171  0145CA  D001               	goto	L21
 27172  0145CC                     i2l6754:
 27173                           
 27174                           ; BSR set to: 15
 27175                           ;usb_device.c: 2614: else
 27176                           ;usb_device.c: 2615: {
 27177                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 27178  0145CC  0E04               	movlw	4
 27179  0145CE                     L21:
 27180  0145CE  6E45               	movwf	_USBDeviceState,c	;volatile
 27181  0145D0                     i2l6756:
 27182                           
 27183                           ;usb_device.c: 2617: }
 27184                           ;usb_device.c: 2618: }
 27185                           ;usb_device.c: 2621: if(controlTransferState == 1)
 27186  0145D0  0449               	decf	_controlTransferState,w,c	;volatile
 27187  0145D2  A4D8               	btfss	status,2,c
 27188  0145D4  D03B               	goto	i2l1312
 27189                           
 27190                           ;usb_device.c: 2622: {
 27191                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 27192  0145D6  0100               	movlb	0	; () banked
 27193  0145D8  EE20 F002          	lfsr	2,2
 27194  0145DC  517B               	movf	_pBDTEntryIn& (0+255),w,b
 27195  0145DE  26D9               	addwf	fsr2l,f,c
 27196  0145E0  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 27197  0145E2  22DA               	addwfc	fsr2h,f,c
 27198  0145E4  0E38               	movlw	56
 27199  0145E6  6EDE               	movwf	postinc2,c
 27200  0145E8  0E0D               	movlw	13
 27201  0145EA  6EDD               	movwf	postdec2,c
 27202                           
 27203                           ; BSR set to: 0
 27204                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 27205  0145EC  EC23  F09F         	call	_USBCtrlTrfTxService	;wreg free
 27206                           
 27207                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 27208  0145F0  0E02               	movlw	2
 27209  0145F2  184F               	xorwf	_shortPacketStatus,w,c	;volatile
 27210  0145F4  A4D8               	btfss	status,2,c
 27211  0145F6  D00D               	goto	i2l6768
 27212                           
 27213                           ;usb_device.c: 2631: {
 27214                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 27215  0145F8  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27216  0145FC  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27217  014600  0E04               	movlw	4
 27218  014602  6EDF               	movwf	indf2,c
 27219                           
 27220                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27221  014604  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27222  014608  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27223  01460C  0E00               	movlw	0
 27224  01460E  8EDB               	bsf	plusw2,7,c
 27225                           
 27226                           ;usb_device.c: 2636: }
 27227  014610  0012               	return	
 27228  014612                     i2l6768:
 27229                           
 27230                           ;usb_device.c: 2637: else
 27231                           ;usb_device.c: 2638: {
 27232                           ;usb_device.c: 2639: if(lastDTS == 0)
 27233  014612  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 27234  014614  A4D8               	btfss	status,2,c
 27235  014616  D00D               	goto	i2l6774
 27236                           
 27237                           ;usb_device.c: 2640: {
 27238                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 27239  014618  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27240  01461C  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27241  014620  0E48               	movlw	72
 27242  014622  6EDF               	movwf	indf2,c
 27243                           
 27244                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27245  014624  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27246  014628  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27247  01462C  0E00               	movlw	0
 27248  01462E  8EDB               	bsf	plusw2,7,c
 27249                           
 27250                           ;usb_device.c: 2643: }
 27251  014630  0012               	return	
 27252  014632                     i2l6774:
 27253                           
 27254                           ;usb_device.c: 2644: else
 27255                           ;usb_device.c: 2645: {
 27256                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 27257  014632  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27258  014636  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27259  01463A  0E08               	movlw	8
 27260  01463C  6EDF               	movwf	indf2,c
 27261                           
 27262                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27263  01463E  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 27264  014642  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27265  014646  0E00               	movlw	0
 27266  014648  8EDB               	bsf	plusw2,7,c
 27267                           
 27268                           ;usb_device.c: 2648: }
 27269                           ;usb_device.c: 2649: }
 27270                           ;usb_device.c: 2650: }
 27271  01464A  0012               	return	
 27272  01464C                     i2l1312:
 27273                           
 27274                           ;usb_device.c: 2651: else
 27275                           ;usb_device.c: 2652: {
 27276                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 27277  01464C  0100               	movlb	0	; () banked
 27278  01464E  AF6F               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 27279  014650  D002               	goto	i2l6780
 27280                           
 27281                           ; BSR set to: 0
 27282                           ;usb_device.c: 2661: }
 27283                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 27284                           
 27285                           ; BSR set to: 0
 27286                           ;usb_device.c: 2659: {
 27287                           ;usb_device.c: 2660: outPipes[0].pFunc();
 27288  014652  0100               	movlb	0	; () banked
 27289  014654  9F6F               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 27290  014656                     i2l6780:
 27291                           
 27292                           ; BSR set to: 0
 27293                           ;usb_device.c: 2663: }
 27294                           ;usb_device.c: 2665: controlTransferState = 0;
 27295  014656  0E00               	movlw	0
 27296  014658  6E49               	movwf	_controlTransferState,c	;volatile
 27297  01465A  0012               	return	
 27298  01465C                     __end_of_USBCtrlTrfInHandler:
 27299                           	opt stack 0
 27300                           pclatu	equ	0xFFB
 27301                           pclath	equ	0xFFA
 27302                           tblptru	equ	0xFF8
 27303                           tblptrh	equ	0xFF7
 27304                           tblptrl	equ	0xFF6
 27305                           tablat	equ	0xFF5
 27306                           prodh	equ	0xFF4
 27307                           prodl	equ	0xFF3
 27308                           intcon	equ	0xFF2
 27309                           intcon2	equ	0xFF1
 27310                           postinc0	equ	0xFEE
 27311                           fsr0h	equ	0xFEA
 27312                           fsr0l	equ	0xFE9
 27313                           wreg	equ	0xFE8
 27314                           indf1	equ	0xFE7
 27315                           postinc1	equ	0xFE6
 27316                           postdec1	equ	0xFE5
 27317                           fsr1h	equ	0xFE2
 27318                           fsr1l	equ	0xFE1
 27319                           indf2	equ	0xFDF
 27320                           postinc2	equ	0xFDE
 27321                           postdec2	equ	0xFDD
 27322                           plusw2	equ	0xFDB
 27323                           fsr2h	equ	0xFDA
 27324                           fsr2l	equ	0xFD9
 27325                           status	equ	0xFD8
 27326                           
 27327 ;; *************** function _USBCtrlTrfTxService *****************
 27328 ;; Defined at:
 27329 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 27330 ;; Parameters:    Size  Location     Type
 27331 ;;		None
 27332 ;; Auto vars:     Size  Location     Type
 27333 ;;  byteToSend      1    0[COMRAM] unsigned char 
 27334 ;; Return value:  Size  Location     Type
 27335 ;;		None               void
 27336 ;; Registers used:
 27337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27338 ;; Tracked objects:
 27339 ;;		On entry : 0/0
 27340 ;;		On exit  : 0/0
 27341 ;;		Unchanged: 0/0
 27342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;Total ram usage:        1 bytes
 27348 ;; Hardware stack levels used:    1
 27349 ;; This function calls:
 27350 ;;		Nothing
 27351 ;; This function is called by:
 27352 ;;		_USBCtrlEPAllowDataStage
 27353 ;;		_USBCtrlTrfInHandler
 27354 ;; This function uses a non-reentrant model
 27355 ;;
 27356                           
 27357                           	psect	text126
 27358  013E46                     __ptext126:
 27359                           	opt stack 0
 27360  013E46                     _USBCtrlTrfTxService:
 27361                           	opt stack 15
 27362                           
 27363                           ;usb_device.c: 1773: uint8_t byteToSend;
 27364                           ;usb_device.c: 1777: byteToSend = 8;
 27365                           
 27366                           ;incstack = 0
 27367  013E46  0E08               	movlw	8
 27368  013E48  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 27369                           
 27370                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 27371  013E4A  0100               	movlb	0	; () banked
 27372  013E4C  517A               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 27373  013E4E  E111               	bnz	i2l5760
 27374  013E50  0E08               	movlw	8
 27375  013E52  0100               	movlb	0	; () banked
 27376  013E54  5D79               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 27377  013E56  B0D8               	btfsc	status,0,c
 27378  013E58  D00C               	goto	i2l5760
 27379                           
 27380                           ; BSR set to: 0
 27381                           ;usb_device.c: 1779: {
 27382                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 27383  013E5A  C079  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 27387  013E5E  504F               	movf	_shortPacketStatus,w,c	;volatile
 27388  013E60  A4D8               	btfss	status,2,c
 27389  013E62  D002               	goto	i2l5756
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;usb_device.c: 1788: {
 27393                           ;usb_device.c: 1789: shortPacketStatus = 1;
 27394  013E64  0E01               	movlw	1
 27395  013E66  D004               	goto	L22
 27396  013E68                     i2l5756:
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 27400  013E68  044F               	decf	_shortPacketStatus,w,c	;volatile
 27401  013E6A  A4D8               	btfss	status,2,c
 27402  013E6C  D002               	goto	i2l5760
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;usb_device.c: 1792: {
 27406                           ;usb_device.c: 1793: shortPacketStatus = 2;
 27407  013E6E  0E02               	movlw	2
 27408  013E70                     L22:
 27409  013E70  6E4F               	movwf	_shortPacketStatus,c	;volatile
 27410  013E72                     i2l5760:
 27411                           
 27412                           ; BSR set to: 0
 27413                           ;usb_device.c: 1794: }
 27414                           ;usb_device.c: 1795: }
 27415                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 27416  013E72  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 27417  013E74  0100               	movlb	0	; () banked
 27418  013E76  5F79               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 27419  013E78  0E00               	movlw	0
 27420  013E7A  5B7A               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 27424  013E7C  0100               	movlb	0	; () banked
 27425  013E7E  EE20 F001          	lfsr	2,1
 27426  013E82  517B               	movf	_pBDTEntryIn& (0+255),w,b
 27427  013E84  26D9               	addwf	fsr2l,f,c
 27428  013E86  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 27429  013E88  22DA               	addwfc	fsr2h,f,c
 27430  013E8A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 27431                           
 27432                           ; BSR set to: 0
 27433                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 27434  013E8E  0E38               	movlw	56
 27435  013E90  6E3B               	movwf	_pDst,c
 27436  013E92  0E0D               	movlw	13
 27437  013E94  6E3C               	movwf	_pDst+1,c
 27438                           
 27439                           ; BSR set to: 0
 27440                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 27441  013E96  0100               	movlb	0	; () banked
 27442  013E98  A178               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 27443  013E9A  D01D               	goto	i2l5778
 27444  013E9C  D03C               	goto	i2l5788
 27445  013E9E                     i2l5770:
 27446                           
 27447                           ; BSR set to: 0
 27448                           ;usb_device.c: 1812: {
 27449                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 27450  013E9E  C075  FFF6         	movff	_inPipes,tblptrl	;volatile
 27451  013EA2  C076  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27452  013EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 27453  013EA8  6EF8               	movwf	tblptru,c
 27454  013EAA  C03B  FFD9         	movff	_pDst,fsr2l
 27455  013EAE  C03C  FFDA         	movff	_pDst+1,fsr2h
 27456  013EB2  0E0E               	movlw	(high __ramtop+-1)
 27457  013EB4  64F7               	cpfsgt	tblptrh,c
 27458  013EB6  D003               	bra	i2u499_47
 27459  013EB8  0008               	tblrd		*
 27460  013EBA  50F5               	movf	tablat,w,c
 27461  013EBC  D005               	bra	i2u499_40
 27462  013EBE                     i2u499_47:
 27463  013EBE  CFF6 FFE1          	movff	tblptrl,fsr1l
 27464  013EC2  CFF7 FFE2          	movff	tblptrh,fsr1h
 27465  013EC6  50E7               	movf	indf1,w,c
 27466  013EC8                     i2u499_40:
 27467  013EC8  6EDF               	movwf	indf2,c
 27468  013ECA  0100               	movlb	0	; () banked
 27469  013ECC  4B75               	infsnz	_inPipes& (0+255),f,b	;volatile
 27470  013ECE  2B76               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 27471                           
 27472                           ; BSR set to: 0
 27473  013ED0  4A3B               	infsnz	_pDst,f,c
 27474  013ED2  2A3C               	incf	_pDst+1,f,c
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;usb_device.c: 1814: byteToSend--;
 27478  013ED4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 27479  013ED6                     i2l5778:
 27480                           
 27481                           ; BSR set to: 0
 27482  013ED6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 27483  013ED8  B4D8               	btfsc	status,2,c
 27484  013EDA  0012               	return	
 27485  013EDC  D7E0               	goto	i2l5770
 27486  013EDE                     i2l5780:
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;usb_device.c: 1820: {
 27490                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 27491  013EDE  C075  FFF6         	movff	_inPipes,tblptrl	;volatile
 27492  013EE2  C076  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27493  013EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 27494  013EE8  6EF8               	movwf	tblptru,c
 27495  013EEA  C03B  FFD9         	movff	_pDst,fsr2l
 27496  013EEE  C03C  FFDA         	movff	_pDst+1,fsr2h
 27497  013EF2  0E0E               	movlw	(high __ramtop+-1)
 27498  013EF4  64F7               	cpfsgt	tblptrh,c
 27499  013EF6  D003               	bra	i2u501_47
 27500  013EF8  0008               	tblrd		*
 27501  013EFA  50F5               	movf	tablat,w,c
 27502  013EFC  D005               	bra	i2u501_40
 27503  013EFE                     i2u501_47:
 27504  013EFE  CFF6 FFE1          	movff	tblptrl,fsr1l
 27505  013F02  CFF7 FFE2          	movff	tblptrh,fsr1h
 27506  013F06  50E7               	movf	indf1,w,c
 27507  013F08                     i2u501_40:
 27508  013F08  6EDF               	movwf	indf2,c
 27509  013F0A  0100               	movlb	0	; () banked
 27510  013F0C  4B75               	infsnz	_inPipes& (0+255),f,b	;volatile
 27511  013F0E  2B76               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 27512                           
 27513                           ; BSR set to: 0
 27514  013F10  4A3B               	infsnz	_pDst,f,c
 27515  013F12  2A3C               	incf	_pDst+1,f,c
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;usb_device.c: 1822: byteToSend--;
 27519  013F14  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 27520  013F16                     i2l5788:
 27521                           
 27522                           ; BSR set to: 0
 27523  013F16  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 27524  013F18  B4D8               	btfsc	status,2,c
 27525  013F1A  0012               	return	
 27526  013F1C  D7E0               	goto	i2l5780
 27527  013F1E                     __end_of_USBCtrlTrfTxService:
 27528                           	opt stack 0
 27529                           pclatu	equ	0xFFB
 27530                           pclath	equ	0xFFA
 27531                           tblptru	equ	0xFF8
 27532                           tblptrh	equ	0xFF7
 27533                           tblptrl	equ	0xFF6
 27534                           tablat	equ	0xFF5
 27535                           prodh	equ	0xFF4
 27536                           prodl	equ	0xFF3
 27537                           intcon	equ	0xFF2
 27538                           intcon2	equ	0xFF1
 27539                           postinc0	equ	0xFEE
 27540                           fsr0h	equ	0xFEA
 27541                           fsr0l	equ	0xFE9
 27542                           wreg	equ	0xFE8
 27543                           indf1	equ	0xFE7
 27544                           postinc1	equ	0xFE6
 27545                           postdec1	equ	0xFE5
 27546                           fsr1h	equ	0xFE2
 27547                           fsr1l	equ	0xFE1
 27548                           indf2	equ	0xFDF
 27549                           postinc2	equ	0xFDE
 27550                           postdec2	equ	0xFDD
 27551                           plusw2	equ	0xFDB
 27552                           fsr2h	equ	0xFDA
 27553                           fsr2l	equ	0xFD9
 27554                           status	equ	0xFD8
 27555                           pclatu	equ	0xFFB
 27556                           pclath	equ	0xFFA
 27557                           tblptru	equ	0xFF8
 27558                           tblptrh	equ	0xFF7
 27559                           tblptrl	equ	0xFF6
 27560                           tablat	equ	0xFF5
 27561                           prodh	equ	0xFF4
 27562                           prodl	equ	0xFF3
 27563                           intcon	equ	0xFF2
 27564                           intcon2	equ	0xFF1
 27565                           postinc0	equ	0xFEE
 27566                           fsr0h	equ	0xFEA
 27567                           fsr0l	equ	0xFE9
 27568                           wreg	equ	0xFE8
 27569                           indf1	equ	0xFE7
 27570                           postinc1	equ	0xFE6
 27571                           postdec1	equ	0xFE5
 27572                           fsr1h	equ	0xFE2
 27573                           fsr1l	equ	0xFE1
 27574                           indf2	equ	0xFDF
 27575                           postinc2	equ	0xFDE
 27576                           postdec2	equ	0xFDD
 27577                           plusw2	equ	0xFDB
 27578                           fsr2h	equ	0xFDA
 27579                           fsr2l	equ	0xFD9
 27580                           status	equ	0xFD8
 27581                           
 27582                           	psect	rparam
 27583  0000                     pclatu	equ	0xFFB
 27584                           pclath	equ	0xFFA
 27585                           tblptru	equ	0xFF8
 27586                           tblptrh	equ	0xFF7
 27587                           tblptrl	equ	0xFF6
 27588                           tablat	equ	0xFF5
 27589                           prodh	equ	0xFF4
 27590                           prodl	equ	0xFF3
 27591                           intcon	equ	0xFF2
 27592                           intcon2	equ	0xFF1
 27593                           postinc0	equ	0xFEE
 27594                           fsr0h	equ	0xFEA
 27595                           fsr0l	equ	0xFE9
 27596                           wreg	equ	0xFE8
 27597                           indf1	equ	0xFE7
 27598                           postinc1	equ	0xFE6
 27599                           postdec1	equ	0xFE5
 27600                           fsr1h	equ	0xFE2
 27601                           fsr1l	equ	0xFE1
 27602                           indf2	equ	0xFDF
 27603                           postinc2	equ	0xFDE
 27604                           postdec2	equ	0xFDD
 27605                           plusw2	equ	0xFDB
 27606                           fsr2h	equ	0xFDA
 27607                           fsr2l	equ	0xFD9
 27608                           status	equ	0xFD8
 27609                           
 27610                           	psect	temp
 27611  000059                     btemp:
 27612                           	opt stack 0
 27613  000059                     	ds	1
 27614  0000                     int$flags	set	btemp
 27615                           pclatu	equ	0xFFB
 27616                           pclath	equ	0xFFA
 27617                           tblptru	equ	0xFF8
 27618                           tblptrh	equ	0xFF7
 27619                           tblptrl	equ	0xFF6
 27620                           tablat	equ	0xFF5
 27621                           prodh	equ	0xFF4
 27622                           prodl	equ	0xFF3
 27623                           intcon	equ	0xFF2
 27624                           intcon2	equ	0xFF1
 27625                           postinc0	equ	0xFEE
 27626                           fsr0h	equ	0xFEA
 27627                           fsr0l	equ	0xFE9
 27628                           wreg	equ	0xFE8
 27629                           indf1	equ	0xFE7
 27630                           postinc1	equ	0xFE6
 27631                           postdec1	equ	0xFE5
 27632                           fsr1h	equ	0xFE2
 27633                           fsr1l	equ	0xFE1
 27634                           indf2	equ	0xFDF
 27635                           postinc2	equ	0xFDE
 27636                           postdec2	equ	0xFDD
 27637                           plusw2	equ	0xFDB
 27638                           fsr2h	equ	0xFDA
 27639                           fsr2l	equ	0xFD9
 27640                           status	equ	0xFD8


Data Sizes:
    Strings     971
    Constant    229
    Data        6
    BSS         2479
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160     73     160
    BANK1           256    201     256
    BANK2           256    203     256
    BANK3           256    101     247
    BANK4           256      0     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    command_operation@opland3	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland3(BANK2[100]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4034_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4034_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4034_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4034_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2767$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S2757$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2757$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2733$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2733$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2733$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2733$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    F9635.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    command_operation@opland2	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK3[100]), 

    command_operation@opland1	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), 

    command_operation@opcode	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opcode(BANK1[100]), 

    comm_at@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_adjust_time_button@cnt_dec	PTR struct button size(2) Largest target is 12
		 -> ctmu(BANK1[12]), 

    RTCC_adjust_time_button@cnt_inc	PTR struct button size(2) Largest target is 12
		 -> ctmu(BANK1[12]), 

    RTCC_adjust_time_button@mode	PTR struct button size(2) Largest target is 4
		 -> ctmu_m(BANK1[4]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_89(CODE[2]), STR_88(CODE[11]), STR_87(CODE[3]), STR_86(CODE[16]), 
		 -> STR_85(CODE[3]), STR_84(CODE[19]), STR_83(CODE[2]), STR_82(CODE[8]), 
		 -> STR_81(CODE[2]), STR_80(CODE[6]), STR_79(CODE[3]), STR_78(CODE[16]), 
		 -> STR_77(CODE[3]), STR_76(CODE[19]), STR_75(CODE[2]), STR_74(CODE[8]), 
		 -> STR_73(CODE[2]), STR_72(CODE[7]), STR_71(CODE[3]), STR_70(CODE[16]), 
		 -> STR_69(CODE[3]), STR_68(CODE[19]), STR_67(CODE[2]), STR_66(CODE[8]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[2]), STR_62(CODE[8]), 
		 -> STR_60(CODE[2]), STR_59(CODE[6]), STR_56(CODE[5]), STR_55(CODE[11]), 
		 -> STR_54(CODE[6]), STR_53(CODE[2]), STR_52(CODE[2]), STR_51(CODE[2]), 
		 -> STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[2]), STR_47(CODE[12]), 
		 -> STR_46(CODE[3]), STR_45(CODE[9]), STR_44(CODE[10]), STR_43(CODE[4]), 
		 -> STR_42(CODE[9]), STR_40(CODE[2]), STR_39(CODE[5]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK3[100]), rx_loop@opland1(BANK2[100]), rx_loop@opcode(BANK1[100]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK3[100]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> comm_disp@str(BANK0[10]), tx_send_dec@str(BANK0[10]), display_LCD@str(BANK1[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_94(CODE[9]), STR_93(CODE[17]), STR_21(CODE[14]), STR_20(CODE[13]), 
		 -> STR_19(CODE[16]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[16]), 
		 -> STR_15(CODE[2]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[4]), display_LCD@str(BANK1[10]), STR_10(CODE[15]), STR_9(CODE[13]), 
		 -> STR_8(CODE[17]), STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[12]), 
		 -> STR_4(CODE[12]), STR_3(CODE[10]), STR_2(CODE[10]), weekday_3char(CODE[28]), 
		 -> STR_1(CODE[3]), display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 12
		 -> ctmu_m(BANK1[4]), ctmu(BANK1[12]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 472
		 -> STR_92(CODE[4]), STR_91(CODE[4]), STR_90(CODE[3]), STR_61(CODE[18]), 
		 -> STR_58(CODE[36]), STR_57(CODE[24]), STR_41(CODE[472]), STR_38(CODE[2]), 
		 -> STR_37(CODE[3]), STR_36(CODE[3]), STR_35(CODE[3]), comm_disp@str(BANK0[10]), 
		 -> STR_34(CODE[2]), STR_33(CODE[5]), STR_32(CODE[2]), STR_31(CODE[3]), 
		 -> STR_30(CODE[2]), STR_29(CODE[8]), STR_28(CODE[2]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[3]), tx_send_dec@str(BANK0[10]), weekday_3char(CODE[28]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK2[8]), tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK2[8]), tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK2[8]), tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK2[8]), tx_buf(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _lchika->i2___awdiv
    _integrating->i2___lldiv
    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_rx_loop
    _rx_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_comm_at
    _my_atoi->___wmul
    _ctmu_set_ratio->___lwdiv
    _comm_disp->_my_utoa
    _tx_sendn->___lwdiv
    _print_time->_tx_send_dec
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _tx_send->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _normal_mode_loop->_RTCC_adjust_time_button
    _port_loop->_delay_set
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _my_utoa->___lwdiv
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    ___llmod->___lldiv
    _RTCC_adjust_time_button->_RTCC_adjust_time_dec
    _RTCC_adjust_time_button->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_loop->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_loop
    _normal_mode_loop->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_loop

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_rx_loop

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  392561
                                            100 BANK3      1     1      0
                            _LED_OUT
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                           _USB_loop
                          _ctmu_loop
                     _ctmu_set_ratio
                          _delay_set
                          _main_init
                   _normal_mode_loop
                            _rx_loop
 ---------------------------------------------------------------------------------
 (1) _rx_loop                                            507   507      0  196086
                                             70 BANK0      3     3      0
                                              0 BANK1    201   201      0
                                              0 BANK2    203   203      0
                                              0 BANK3    100   100      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   10     2      8  166274
                                             60 BANK0     10     2      8
                            _comm_at
                          _comm_disp
                     _ctmu_set_ratio
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4   10030
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    9034
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   14950
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _comm_disp                                           16    15      1   42427
                                             43 BANK0     16    15      1
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sendn                                             6     3      3   10314
                                             35 BANK0      6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (3) _comm_at                                              5     0      5   52048
                                             55 BANK0      5     0      5
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _print_time                                           0     0      0   27032
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (4) _tx_send_dec                                         12    11      1   17416
                                             43 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sends                                             2     0      2    6385
                                             15 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    3231
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_caltime                                    4     0      4   15949
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _normal_mode_loop                                     0     0      0  126374
                           _Auto_cut
            _RTCC_adjust_time_button
                        _display_LCD
                          _port_loop
 ---------------------------------------------------------------------------------
 (2) _port_loop                                            1     1      0    3564
                                              4 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                          _delay_set
 ---------------------------------------------------------------------------------
 (3) _delay_set                                            4     0      4    1341
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LED_OUT                                              2     1      1     643
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   66407
                                              0 BANK1     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                            _my_utoa
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   30426
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   15580
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5   10161
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2520
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         0     0      0    6667
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2742
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Puts                                         5     3      2    3925
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1688
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _RTCC_adjust_time_button                              6     0      6   47211
                                             63 BANK0      6     0      6
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   23279
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   23279
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_epoch                                      4     0      4   11213
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    9218
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    5648
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9192
                                             28 BANK0      3     3      0
                                _ADC
                                 _IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8108
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _CTMU_read (ARG)
                                 _IN (ARG)
 ---------------------------------------------------------------------------------
 (3) _OUT                                                  2     1      1     706
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _IN                                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    4377
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8697
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (2) _button_timer_interrupt                               5     2      3    1979
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    3915
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2803
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    2667
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   13932
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    3200
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2028
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    7025
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 14    14      0   30452
                                             30 COMRAM    14    14      0
                            _USB_ISR
                  _charge_time_count
              _delay_timer_interrupt
                        _integrating
                             _lchika
 ---------------------------------------------------------------------------------
 (10) _lchika                                              4     4      0    1020
                                              8 COMRAM     4     4      0
                          i2_LED_OUT
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_LED_OUT                                           2     1      1     166
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (10) _integrating                                         3     3      0     348
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (11) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) _delay_timer_interrupt                               4     2      2     177
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _charge_time_count                                   3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_OUT
   _OUT
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _ctmu_loop
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _button_timer_interrupt
       _CTMU_read (ARG)
         ___lldiv
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
   _ctmu_set_ratio
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     ___wmul
       _ADC (ARG)
       _CTMU_read (ARG)
         ___lldiv
       _IN (ARG)
   _delay_set
   _main_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_mode_loop
     _Auto_cut
       _ADC
       _IN
       _OUT
       ___wmul
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _RTCC_adjust_time_button
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod (ARG)
     _port_loop
       _LED_OUT
       _OUT
       _delay_set
   _rx_loop
     _command_operation
       _comm_at
         _RTCC_from_caltime
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         _print_time (ARG)
           _tx_send
             _ringbuf_put
               _ringbuf_num
           _tx_send_dec
             _my_utoa
               ___lldiv (ARG)
               ___llmod (ARG)
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   _IN (ARG)
               ___lwmod (ARG)
             _tx_sends
               _ringbuf_put
                 _ringbuf_num
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends (ARG)
           _ringbuf_put
             _ringbuf_num
       _comm_disp
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod (ARG)
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_sendn
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod
           _tx_send
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _month_length
         ___awmod
       _my_atoi
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _my_strcmp
       _print_time
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_send_dec
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_sendn
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _tx_send
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _charge_time_count
   _delay_timer_interrupt
   _integrating
     i2___lldiv
   _lchika
     i2_LED_OUT
     i2___awdiv
     i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     65      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100     CB     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     453       8        0.0%
DATA                 0      0     C23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 22:40:47 2015

                         get_string_usb@s 00C2                                         _I 002D  
                              _USB_SD_Ptr FB4F                                         _S 02CB  
                                       _s 02D7                              ?_display_LCD 0001  
                       _charge_time_count 5B22                        __size_of_I2C_Start 0030  
                            ?_display_dec 00E0                             my_strcmp@str1 00B5  
                           my_strcmp@str2 00B7                                        _IN 5F4C  
                                      _d1 02EB                              ___awdiv@sign 00BA  
               __size_of_normal_mode_loop 00CE                                        _ms 02E7  
                           _USBDeviceInit 2826                       ___wmul@multiplicand 00CD  
                      i2___lwdiv@dividend 0001                         ??_RTCC_from_epoch 00EA  
                      __size_of_CDCInitEP 0070                        ?_charge_time_count 0001  
                            __CFG_CP0$OFF 000000                                       ?_IN 0001  
                            _rx_loop$5308 02C8                                       IN@b 00B5  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                                     l142 5A1E                                       l137 5CCA  
                                     l234 54AE                                       l413 419C  
             __end_of_USBStdGetDscHandler 2C24                                       l334 61EC  
                                     l510 57AA                                       l407 4A0C  
                                     l247 46B6                                       l319 5E86  
                                     l343 5D88                                       l159 5EB6  
                                     l503 6204                                       _ADC 5E96  
                                     l512 57B8                                       l282 1844  
                                     l514 57C6                                       l426 2594  
                                     l283 186C                                       l611 56F0  
                                     l355 5D18                                       l284 1892  
                                     l516 57D4                                       l508 579C  
                                     l285 18B8                                       l613 56FE  
                                     l286 18DC                                       l614 570C  
                                     l630 5AB4                                       l287 1900  
                                     l455 52A8                                       l288 1924  
                                     l289 1948                                       l563 5B6A  
                                     l627 5A98                                       l629 5AA6  
                                     l832 11D0                                       l841 128C  
                                     l843 1390                                       l915 30B6  
                                     _BDT 000D00                                       l952 61BC  
                                     l873 4F76                                       l867 4318  
                                     l868 432A                                       _GIE 007F97  
                                     _ISR 0008                                       _UIE 000F36  
                             comm_at@hand 00EC                                       _UIR 000F62  
                                     _OUT 56D4                         get_string_usb@len 00C4  
                           ?_get_quot_rem 00CE                             ?_display_port 0001  
                      caltime_to_epoch@ep 00D0                        caltime_to_epoch@ct 00CE  
                              _USBSuspend 5FD0                         _RTCC_from_caltime 5D94  
                            ___awmod@sign 00BA                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 2C24                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0045               RTCC_adjust_time_button@mode 00F4  
                     ??_charge_time_count 0001                   _RTCC_adjust_time_button 2EAE  
                 _RTCC_adjust_time_cursor 578E                        ?_RTCC_from_caltime 00E6  
                                    ??_IN 00B5                     ??_USBCtrlTrfRxService 0001  
                            _I2C_LCD_Putc 5CEC                              _I2C_LCD_Puts 518A  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 00BF  
                                    ?_ADC 00B5                  USBEnableEndpoint@options 0009  
                 _RTCC_adjust_time_toggle 61F4                         ??_I2C_LCD_Command 00B9  
                         __end_of_LED_OUT 5ADA                                      ?_ISR 0001  
                  __end_of_get_string_usb 5A92                                      ?_OUT 00B5  
                            _I2C_LCD_init 58F6                                      l1113 289C  
                                    l1174 5D52                                      l1175 5D50  
                                    l1471 26F8                                      l1476 2754  
              USBConfigureEndpoint@handle 0007                                      l1905 54A2  
                                    l1915 56CA                                      l1852 4886  
                                    l1862 4F22                                      OUT@b 00B6  
                                    l9010 388E                                      l9100 4D06  
                                    l9030 5534                                      l9102 4D0C  
                                    l9110 4D3E                                      l9022 4184  
                      __CFG_WPFP$PAGE_127 000000                                      l9034 555A  
                                    l9114 4D52                                      l9106 4D30  
                                    l9026 6170                                      l9124 480A  
                                    l9060 477A                                      l9052 4750  
                                    l9126 481A                                      l9150 5464  
                                    l9070 47B0                                      l9062 4780  
                                    l9046 473A                                      l9136 4874  
                                    l9128 4820                                      l9240 52B6  
                                    l9090 4CD6                                      l9146 5452  
                                    l9058 476E                                      l9074 47BE  
                                    l9170 5698                                      l9242 52D4  
                                    l9250 5314                                      l9228 3C40  
                                    l9148 545E                                      l9180 560A  
                                    l9094 4CE6                                      l9158 5494  
                                    l9078 47D2                                      l9350 2606  
                                    l9174 56BC                                      l9166 5686  
                                    l9414 54BE                                      l9432 4682  
                                    l9352 260A                                      l9272 51B8  
                                    l9280 5212                                      l9168 5692  
                                    l9184 5646                                      l9408 588C  
                                    l9512 31C0                                      l9424 5514  
                                    l9098 4CFA                                      l9370 1AF4  
                                    l9530 5E1C                                      l9514 31C6  
                                    l9418 54E0                                      l9372 1AFA  
                                    l9460 46D8                                      l9428 4678  
                                    l9356 2612                                      l9382 1B5E  
                                    l9526 5E0A                                      l9710 2068  
                                    l9702 202C                                      l9278 51EA  
                                    l9622 4C18                                      l9630 4C70  
                                    l9392 1BE6                                      l9376 1B04  
                                    l9384 1B62                                      l9544 3DC0  
                                    l9536 3D8C                                      l9800 571A  
                                    l9616 4DDE                                      l9608 4D68  
                                    l9730 2170                                      l9722 2102  
                                    l9714 20DE                                      l9706 204A  
                                    l9618 4DE4                                      l9634 4C94  
                                    l9388 1B82                                      l9556 3E26  
                                    l9812 5F5A                                      l9804 5F52  
                                    l9740 2228                                      l9580 4F10  
                                    l9572 4EB6                                      l9628 4C64  
                                    l9750 2276                                      l9734 21DC  
                                    l9718 20F8                                      l9574 4EC6  
                                    l9808 5F56                                      l9728 2168  
                                    l9736 21F4                                      l9576 4ECC  
                                    l9832 3CA2                                      l9496 58E4  
                                    l9594 5FA6                                      l9818 5F5E  
                                    l9690 57E2                                      l9770 235C  
                                    l9762 22CC                                      l9754 2290  
                                    l9842 3D08                                      l9666 2A92  
                                    l9922 1106                                      l9596 5FB8  
                                    l9780 23CC                                      l9844 3D1A  
                                    l9836 3CCC                                      l9852 3D56  
                                    l9668 2A98                                      l9828 5AC2  
                                    l9942 287C                                      l9782 23D4  
                                    l9766 2342                                      l9758 22AE  
                                    l9838 3CDE                                      STR_1 FFDB  
                                    l9792 248C                                      l9848 3D44  
                                    l9872 0D22                                      STR_2 FF6B  
                                    STR_3 FF57                                      l9970 28EC  
                                    l9954 28AA                                      l9962 28C2  
                                    l9938 2872                                      l9786 2440  
                                    l9698 2012                                      STR_4 FF1F  
                                    STR_5 FF07                                      l9788 2458  
                                    l9868 577C                                      l9892 0E9A  
                                    STR_6 FF4C                                      STR_7 FF2B  
                                    l9966 28E2                                      l9886 0E54  
                                    STR_8 FE6D                                      STR_9 FEED  
                                    l9976 2952                     ??_USBCtrlTrfTxService 0001  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    u9910 5E92                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9940 3BEA  
                                    u9950 3BEC                                      u9870 5638  
                                    u9960 3C1C                                      u9880 5668  
                                    u9980 3C32                                      u9877 562E  
                                    u9990 3C34                                      u9887 565E  
                                    u9978 3C20                           _CDCDataInHandle 0096  
                            comm_at@value 00F0                       ??_RTCC_from_caltime 00EA  
  USBStdFeatureReqHandler@current_ep_data 0018                                      _pDst 003B  
                                    _main 2FD2                                      _ctmu 01DD  
                ??i2_USBTransferOnePacket 0005                  button_timer_interrupt@bt 00D8  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0005                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 02E3                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 61F4                           _USBDeviceAttach 5D24  
                                    btemp 0059                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 6236                          __end_of_I2C_Stop 6230  
                                    pclat 000FFA                               _tx_send_dec 5846  
                        __end_of_I2C_init 621C                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00EC  
                        __end_of_ADC_init 614C                             __CFG_IESO$OFF 000000  
                        comm_disp@content 00EF                RTCC_adjust_time_dec@i_2114 00F2  
                      __size_of_CTMU_init 0028                        __size_of_CTMU_read 00C2  
              __end_of_USBCheckStdRequest 3816                    ??_USBCtrlTrfOutHandler 0003  
               __end_of_charge_time_count 5B6A                              comm_disp@str 00E1  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0015  
                           _I2C_LCD_Clear 61C2                                     ??_ADC 00B7  
                                   ADC@ch 00B8                             ADC_init@p_ref 00B5  
                                   ??_ISR 001F                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 00B6                  ??_USBStdGetStatusHandler 0001  
                          ?_USBDeviceInit 0001                        __size_ofi2_LED_OUT 003E  
                       ??_RTCC_to_caltime 00B9                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                                     l10022 26CE  
                                   l10040 273C                                     l10024 26D8  
                                   l10120 39B6                                     l10034 2704  
                                   l10114 397E                                     l10106 393C  
                                   l10210 44CA                                     l10028 26E8  
                                   l10116 3986                                     l10124 39E8  
                                   l10108 3946                                     l10054 2782  
                                   l10062 27A6                                     l10046 2758  
                                   l10080 27F8                                     l10064 27B2  
                                   l10072 27D6                                     l10208 44B4  
                                   l10216 44D0                                     l10136 5CE2  
                                   l10082 27FE                                     l10074 27E0  
                                   l10314 5EDA                                     l10226 5140  
                                   l10084 2822                                     l10148 5A20  
                                   l10342 2F4C                                     l10334 2F1A  
                                   l10510 0148                                     l10280 1A0C  
                                   l10272 19BC                                     l10264 196C  
                                   l10360 343C                                     l10408 0936  
                                   l10600 05F0                                     l10520 01F2  
                                   l10098 60C0                                     l10370 3510  
                                   l10418 0998                                     l10610 0674  
                                   l10514 0196                                     l10506 00FA  
                                   l10292 1A8A                                     l10284 1A36  
                                   l10276 19E4                                     l10268 1994  
                                   l10372 352A                                     l10356 3432  
                                   l10348 2F8E                                     l10460 0C48  
                                   l10620 06F8                                     l10604 062C  
                                   l10524 0240                                     l10532 02DC  
                                   l11164 305A                                     l11156 3030  
                                   l10454 0C26                                     l10622 0704  
                                   l10614 06B0                                     l10606 0638  
                                   l10550 0380                                     l10288 1A60  
                                   l10296 1AB2                                     l10472 0C8C  
                                   l10448 0C04                                     l10392 080E  
                                   l10384 07CE                                     l10640 112E  
                                   l10632 0788                                     l10616 06BC  
                                   l10528 028E                                     l10800 1518  
                                   l11168 3064                                     l10466 0C6A  
                                   l10386 07EC                                     l10378 0794  
                                   l10626 0740                                     l10570 0488  
                                   l10562 0410                                     l10554 03BC  
                                   l10538 0336                                     l10490 003C  
                                   l10810 15B4                                     l10484 0CCE  
                                   l10740 14DC                                     l10652 11AC  
                                   l10644 115C                                     l10636 1124  
                                   l10900 42A4                                     l10572 0494  
                                   l10628 074C                                     l10548 0370  
                                   l10492 004C                                     l10820 160A  
                                   l10812 15B8                                     l10804 154A  
                                   l10750 5A5A                                     l10478 0CAC  
                                   l10726 146E                                     l10718 1434  
                                   l10654 11B0                                     l10662 11BC  
                                   l10910 42FC                                     l10582 0518  
                                   l10566 044C                                     l10558 03D4  
                                   l10752 5A5E                                     l10728 1472  
                                   l10672 1214                                     l10664 11D4  
                                   l10904 42A8                                     l10592 059C  
                                   l10576 04D0                                     l10584 0524  
                                   l10496 0088                                     l10658 11B8  
                                   l10906 42CC                                     l10594 05A8  
                                   l10578 04DC                                     l10498 00A0  
                                   l10850 1772                                     l10842 172A  
                                   l10834 16AA                                     l10826 1658  
                                   l10818 1606                                     l10916 430A  
                                   l10588 0560                                     l10844 1748  
                                   l10836 16AE                                     l10828 165C  
                                   l10766 5C0C                                     l10678 1240  
                                   l10598 05E4                                     l10854 1786  
                                   l10768 5C10                                     l10936 4FA6  
                                   l10696 1344                                     l10848 176A  
                                   l10890 4290                                     l10858 17C6  
                                   l10866 17F4                                     l10892 4294  
                                   l10894 4298                                     l10896 429C  
               __end_of_RTCC_from_caltime 5DCA                                     ?_main 0001  
                 __size_of_put_string_usb 0042                            ??_get_quot_rem 00D2  
                          ??_display_port 00BF                           __end_of___awdiv 47DC  
                                   _ADRES 000FC3                                     STR_10 FED0  
                                   STR_11 FFD1                                     STR_12 FFE1  
                                   STR_20 FEFA                                     STR_13 FFE4  
                                   STR_21 FEDF                                     STR_30 FFF3  
                                   STR_22 FFDB                                     STR_14 FFE7  
                                   STR_15 FF8E                                     STR_23 FFF3  
                                   STR_31 FFD8                                     STR_32 FFF3  
                                   STR_40 FE8D                                     STR_24 FFF7  
                                   STR_16 FEA0                                     STR_25 FFF7  
                                   STR_33 FFB9                                     STR_17 FE8F  
                                   STR_41 FC34                                     STR_34 FFF3  
                                   STR_50 FE9E                                     STR_26 FFEA  
                                   STR_42 FF87                                     STR_18 FE7E  
                                   STR_35 FFE1                                     STR_51 FFD3  
                                   STR_43 FFAF                                     STR_27 FFDE  
                                   STR_19 FEC0                                     STR_36 FFE4  
                                   STR_60 FFA5                                     STR_52 FFFD  
                                   STR_28 FFF5                                     STR_44 FF61  
                         __end_of___awmod 4D5C                                     STR_37 FFE7  
                                   STR_53 FF8E                                     STR_29 FF90  
                                   STR_45 FF75                                     STR_61 FE5B  
                                   STR_38 FF8E                                     STR_46 FFF0  
                                   STR_54 FFA7                                     STR_62 FF98  
                                   STR_70 FEB0                                     STR_63 FE9E  
                                   STR_71 FFCA                                     STR_39 FFBE  
                                   STR_55 FF41                                     STR_47 FF13  
                                   STR_48 FF9E                                     STR_56 FFC8  
                                   STR_64 FFC3                                     STR_80 FFB3  
                                   STR_72 FFA0                                     STR_73 FFEE  
                                   STR_81 FFA5                                     STR_65 FFFB  
                                   STR_49 FFF9                                     STR_57 FE30  
                                   STR_82 FE53                                     STR_74 FE53  
                                   STR_66 FE53                                     STR_90 FFD5  
                                   STR_58 FE0C                                     STR_83 FFEE  
                                   STR_75 FFEE                                     STR_67 FFEE  
                                   STR_91 FFCD                                     STR_59 FFAD  
                                   STR_92 FFCD                                     STR_84 FE48  
                                   STR_76 FE48                                     STR_68 FE48  
                                   STR_85 FFED                                     STR_77 FFED  
                                   STR_69 FFED                                     STR_86 FEB0  
                                   STR_78 FEB0                                     STR_94 FF7E  
                                   STR_87 FFCA                                     STR_79 FFCA  
                                   STR_88 FF36                                     STR_89 FFF1  
       __size_of_USBCtrlEPServiceComplete 00F4                                     u10000 3C8C  
                                   u10010 3C8E                           __end_of___lldiv 4898  
                                   u11000 26BE                                     u10060 51DA  
                                   u10070 520C                                     u11008 26C2  
                                   u10250 4710                                     u10067 51D0  
                                   u11140 392C                                     u11205 613C  
                                   u10077 5202                                     u11206 613E  
                                   u10255 4702                                     u11400 1A4C  
                                   u11410 1A76                                     u11148 3930  
                                   u11420 1AA0                                     u12300 3360  
                         ___awdiv@divisor 00B7                                     u12310 3362  
                                   u12320 33A0                                     u11505 3464  
                         __end_of___llmod 4F34                    __end_of_USBDeviceTasks 2D6A  
                                   u12330 33A2                                     u10730 56FA  
                                   u11530 3500                                     u10810 5AB0  
                                   u12340 33E0                                     u11390 1A22  
                                   u12350 33E2                                     u10750 5708  
                                   u10830 5ABE                                     u12360 3420  
                                   u12370 3422                                     u10770 5716  
                                   u10790 5AA2                                     _LATB2 007C52  
                                   _LATA5 007C4D                                     _LATC2 007C5A  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   _LATB6 007C56                                     _LATB7 007C57  
                                   u12807 5FAE                                     u12817 46A2  
               ?_USBCtrlEPServiceComplete 0001                                     u12827 46AC  
                                   u12767 5D1E                                     u12777 51E6  
                                   u12787 61D0                                     u12797 5D8E  
                         __end_of___lwdiv 54AC                           __end_of___lwmod 56D4  
                                   i2l630 5C54                                     i2l627 5C3C  
                                   i2l629 5C48                                     i2l903 00B0  
                                   _UADDR 000F38                           ___awdiv@counter 00B9  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 00C6                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 4E9A                           __end_of_comm_at 578E  
                                   _sd000 FC30                                     _sd001 FB9A  
                                   _sd002 FBCE                      caltime_to_epoch@year 00D6  
                              i2memset@p1 0001                                     _colon 00A2  
                      __size_of_RTCC_init 002E                           ?_get_string_usb 00C2  
                      __size_of_RTCC_loop 0046                          ringbuf_delete@rb 00B5  
                                   main@i 03F6                         __end_of_I2C_Start 5E96  
                         __end_of_my_atoi 4DFC                                     tablat 000FF5  
                         __end_of_my_utoa 532E                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5608                    ?_delay_timer_interrupt 0001  
                        __end_of_USB_init 6226                          __end_of_USB_loop 4FCE  
              __size_of_ringbuf_backspace 008E                           __end_of_rx_loop 1812  
                            ?_integrating 0001                                     status 000FD8  
                         __end_of_tx_send 61A6                          __end_ofi2_memset 6028  
                        __end_of_Delay_ms 5FD0                            delay_set@value 00B7  
                      __size_ofi2___awdiv 0084                         month_length@month 00BB  
                             CTMU_read@ch 00C5                        __size_ofi2___lldiv 0082  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 00B5  
            __size_of_USBStdSetCfgHandler 00E2                              LED_OUT@value 00B5  
                          ?_I2C_LCD_Clear 0001                           __initialization 4AC2  
                           comm_disp@port 00E0                         i2___lldiv@divisor 0005  
                            __end_of_main 30EC                         i2___lldiv@counter 000D  
                   _control_signal_bitmap 004A                          __end_of_Auto_cut 3530  
                     ringbuf_init@bufsize 00B9                          RTCC_from_RTCC@ep 00DF  
                        RTCC_from_RTCC@ct 00DD                RTCC_adjust_time_inc@i_2101 00F2  
                ctmu_set_ratio@percentage 00D8                 __size_of_USBCtrlEPService 00CE  
                                  ??_main 00FE                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001                 ??_RTCC_adjust_time_button 00FA  
               ??_RTCC_adjust_time_cursor 00B5                                 ??_LED_OUT 00B6  
                             ?_USBSuspend 0001                 ??_RTCC_adjust_time_toggle 00B5  
                       __end_of_CTMU_init 6078                         __end_of_CTMU_read 471E  
                            _cdc_mem_type 009E                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 616C                   __end_of_USBDeviceAttach 5D5C  
                        _CDCDataOutHandle 0098                         _getsUSBUSART$4423 00C0  
                        ___llmod@dividend 00C2                         _I2C_LCD_SetCursor 5F20  
                     display_time_1602@ep 00EE                       display_time_1602@ct 00EC  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 00B5  
                               ??_USB_ISR 001F                        I2C_LCD_Command@ans 00BA  
                         getsUSBUSART@len 00BE                     __size_of_CDCTxService 018C  
                                  i2l1113 2DD0                                    i2l1125 2C54  
                                  i2l1135 2CEE                                    i2l1312 464C  
                                  i2l1136 2D66                                    i2l1137 2D00  
                                  i2l1341 1D8C                                    i2l1262 48A6  
                                  i2l1326 3734                                    i2l1335 3798  
                                  i2l1360 1F52                                    i2l1417 3F7C  
                                  i2l1265 4934                                    i2l1266 48B6  
                                  i2l1419 3FC6                                    i2l1267 48BC  
                                  i2l1275 5BF2                                    i2l1199 36AA  
                       __end_ofi2_LED_OUT 5C76                            __CFG_WDTEN$OFF 000000  
                                  i2l1905 59EA                                    i2l1852 5422  
                                  i2l6210 1E48                                    i2l6202 1E02  
                                  i2l6122 2AE8                                    i2l6114 3B94  
                                  i2l6038 451C                                    i2l6230 1EEC  
                                  i2l6214 1E64                                    i2l6142 2BFC  
                                  i2l6134 2B9A                                    i2l6126 2B00  
                                  i2l6240 1F32                                    i2l6224 1EB6  
                                  i2l6208 1E46                                    i2l6144 2C04  
                                  i2l6136 2BA2                                    i2l6160 48DC  
                                  i2l6072 4E66                                    i2l6250 1F6E  
                                  i2l6242 1F3E                                    i2l6226 1ED2  
                                  i2l6170 491C                                    i2l6500 32D0  
                                  i2l5620 5C94                                    i2l5700 3F6A  
                                  i2l6148 2C0C                                    i2l6092 3B1E  
                                  i2l6068 4E4A                                    i2l5606 50CA  
                                  i2l6430 3654                                    i2l5616 5C86  
                                  i2l6256 1FB4                                    i2l6088 3B16  
                                  i2l6520 3744                                    i2l7400 4392  
                                  i2l6258 1FC0                                    i2l6098 3B4A  
                                  i2l6530 3766                                    i2l6522 374A  
                                  i2l6450 36D0                                    i2l8210 2CE4  
                                  i2l8202 2CBC                                    i2l5636 4992  
                                  i2l5628 4968                                    i2l5708 3FA8  
                                  i2l5716 3FD0                                    i2l5740 5F00  
                                  i2l6188 1D88                                    i2l6532 376C  
                                  i2l7412 43F2                                    i2l8300 53E0  
                                  i2l5734 5EF4                                    i2l6534 3772  
                                  i2l6518 373E                                    i2l7414 43F8  
                                  i2l8230 2D26                                    i2l8150 2C3C  
                                  i2l8310 5414                                    i2l8302 53E4  
                                  i2l5760 3E72                                    i2l5648 49EE  
                                  i2l5736 5EFA                                    i2l6544 37B4  
                                  i2l7408 43D8                                    i2l7432 2DAC  
                                  i2l8216 2CF8                                    i2l8400 5B26  
                                  i2l8320 59B8                                    i2l5770 3E9E  
                                  i2l8322 59C0                                    i2l5780 3EDE  
                                  i2l5756 3E68                                    i2l6484 3258  
                                  i2l6740 5840                                    i2l6732 57F8  
                                  i2l5692 3F4A                                    i2l6548 37D2  
                                  i2l7380 5BEE                                    i2l7356 5E5E  
                                  i2l7460 2E14                                    i2l7436 2DB4  
                                  i2l8236 2D46                                    i2l8180 2C7A  
                                  i2l8172 2C6A                                    i2l8404 5B2E  
                                  i2l8340 5AFA                                    i2l8332 59E0  
                                  i2l8324 59C4                                    i2l6478 3234  
                                  i2l5942 6006                                    i2l7358 5E60  
                                  i2l7470 2E78                                    i2l8238 2D62  
                                  i2l8158 2C4C                                    i2l8246 5C60  
                                  i2l8270 5370                                    i2l8262 5352  
                                  i2l6496 32B6                                    i2l7464 2E1C  
                                  i2l7448 2DDE                                    i2l7456 2DF6  
                                  i2l8408 5B66                                    i2l8280 5390  
                                  i2l8272 5374                                    i2l8256 5342  
                                  i2l5778 3ED6                                    i2l6754 45CC  
                                  i2l5946 6016                                    i2l8186 2CA0  
                                  i2l8362 353C                                    i2l5788 3F16  
                                  i2l6780 4656                                    i2l6756 45D0  
                                  i2l7396 438A                                    i2l8196 2CB0  
                                  i2l8268 5368                                    i2l8284 539A  
                                  i2l8372 35E6                                    i2l8380 362C  
                                  i2l6774 4632                                    i2l8390 4FDA  
                                  i2l8366 3570                                    i2l8358 3534  
                                  i2l6768 4612                                    i2l8288 53A8  
                                  i2l8298 53D4                                    i2l8386 4FD2  
                                  i2l8804 0096                                    i2l8784 005E  
                                  i2l8788 006A                                    i2l8798 0086  
                      ?_I2C_LCD_SetCursor 00BB                                    _RCREG1 000FAF  
                           CDCTxService@i 00BF                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0005                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 00BA                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 61C2                        epoch_to_caltime@ep 00D8  
                      epoch_to_caltime@ct 00D6                      get_string_usb@rx_len 00C7  
                       _shortPacketStatus 004F                       ??_I2C_LCD_SetCursor 00BC  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 00D6  
                 __size_of_ctmu_set_ratio 00E6                __size_of_charge_time_count 0048  
                         USBDeviceTasks@i 001E                     caltime_to_epoch@epoch 00D8  
             USBStdFeatureReqHandler@pUEP 0016                  USBTransferOnePacket@data 00B6  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 00BD  
                            ?_ringbuf_pop 00BD                              ?_ringbuf_num 00B5  
                            ?_ringbuf_put 00BD                     caltime_to_epoch@month 00DC  
                                  ___lmul 5522                              ?_putUSBUSART 00B5  
                         _caltime_to_RTCC 419C                                    ___wmul 5DCA  
                      ??_epoch_to_caltime 00DA                                 ??___awdiv 00B9  
                               ??___awmod 00B9              __end_of_RTCC_adjust_time_dec 24AE  
            __end_of_RTCC_adjust_time_inc 224A                                    _d_to_x 6028  
                               ??___lldiv 00BD                      __end_of_getsUSBUSART 39EE  
                            ?_timer0_init 0001                                 ??___llmod 00CA  
                       __end_of_RTCC_init 5EF2                              ?_timer1_init 00B5  
                               ??___lwdiv 00D5                         __end_of_RTCC_loop 5BB0  
                               ??___lwmod 00B9                              ?_timer3_init 0001  
                       _USBEnableEndpoint 5C76           __size_of_USBStdGetStatusHandler 00BA  
                                  _lchika 3530                          _normal_mode_loop 426C  
                                  _ctmu_m 01F9                                    _memset 5E00  
                                  clear_0 4ACA                                    clear_1 4ADC  
                                  clear_2 4AE8                           put_string_usb@s 00C1  
                                  clear_3 4AF4                                    clear_4 4B00  
                                  clear_5 4B0C                                    clear_6 4B18  
                         __CFG_CLKOEC$OFF 000000                              rx_loop@ascii 01C8  
                        ___awdiv@quotient 00BB                           ___awmod@divisor 00B7  
                    __size_of_display_LCD 058E                           ___awmod@counter 00B9  
                                  _x_to_d 614C                        ?_USBEnableEndpoint 0009  
                                  _rx_buf 02F1                __size_of_RTCC_from_caltime 0036  
                       _command_operation 0000                                    _tx_buf 01E9  
                    __size_of_display_dec 0058                                 ??_comm_at 00F1  
                          i2___awdiv@sign 0006             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 0288                      rx_loop@comm_buf_init 01FF  
                            __pdataCOMRAM 0058                        ?_command_operation 00F1  
                       __end_ofi2___awdiv 53B2                                 ?_I2C_Send 0001  
                            _CDCTxService 269A                                 ?_I2C_Stop 0001  
                       __end_ofi2___lldiv 5434                         __end_ofi2___lwdiv 59F4  
                            __mediumconst FB4E                             _cut_time_flag 004B  
                               ?_I2C_init 0001                 __end_of_I2C_LCD_SetCursor 5F4C  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                               ??_my_atoi 00D3                                    tblptru 000FF8  
                               ?_ADC_init 0001                       ??_USBEnableEndpoint 000A  
                          ?_I2C_IdleCheck 0001                                 ??_my_utoa 00DD  
                               ??_rx_loop 00FB                    delay_timer_interrupt@d 0001  
                               ??_tx_send 00C4                               _CtrlTrfData 000D38  
                        __end_of_tx_sendn 5522                          __end_of_tx_sends 5672  
                     ??_command_operation 00F9                      _controlTransferState 0049  
          RTCC_adjust_time_button@cnt_dec 00F8                      __CFG_LS48MHZ$SYS48X8 000000  
          RTCC_adjust_time_button@cnt_inc 00F6                                __accesstop 0060  
                 __end_of__initialization 4B66                              __pbssBIGRAMl 0464  
                            CTMU_read@sum 00C6                      __end_of_get_quot_rem 40C8  
                    __end_of_display_port 3D6E                             ___rparam_used 000001  
                         ??_I2C_LCD_Clear 00BB                           _RTCC_from_epoch 60E8  
                __size_of_USBStallHandler 0046                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5CB2                        i2___lldiv@dividend 0001  
                           __end_of_sd000 FC34                             __end_of_sd001 FBCE  
                           __end_of_sd002 FC02                              __pidataBANK0 6239  
                            __pidataBANK1 6236                  command_operation@opland1 00F3  
                command_operation@opland2 00F5                  command_operation@opland3 00F7  
        __size_of_USBCtrlEPAllowDataStage 009E                 __end_of_command_operation 078E  
           __size_of_USBConfigureEndpoint 0094               __end_of_USBCtrlTrfInHandler 465C  
                         __CFG_DSWDTPS$G2 000000                                __end_of_IN 5F78  
                         _I2C_LCD_Command 5D5C                            _put_string_usb 5BF6  
                      __size_of_delay_set 0024                    i2_USBTransferOnePacket 4952  
                               ?_USB_init 0001                                 ?_USB_loop 0001  
                 sleep_loop@prev_power_sw 0058                          I2C_LCD_Command@c 00B9  
                              ??_I2C_Send 00B7                         _CDCTxService$4471 00BD  
                              ??_I2C_Stop 00B7                                _cdc_notice 0300  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 0001  
                              _cdc_rx_len 009F                                ??_I2C_init 00B5  
                               ?_Delay_ms 00B5                                _cdc_tx_len 00A1  
                              ??_ADC_init 00B5                caltime_to_epoch@month_2019 00D7  
                      __size_of_comm_disp 0402                  ??_USBCtrlTrfSetupHandler 001B  
                  RTCC_adjust_time_dec@ep 00EC                    RTCC_adjust_time_dec@ct 00EA  
                        ?_USBDeviceAttach 0001                    _USBStdGetStatusHandler 4898  
                      i2___lldiv@quotient 0009                    RTCC_adjust_time_inc@ep 00EC  
                  RTCC_adjust_time_inc@ct 00EA                        __size_of_main_init 00A6  
                              __pbssBANK0 0060                                __pbssBANK1 01C9  
                              __pbssBANK2 02CB                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                 ?_Auto_cut 0001  
                      __size_of_ctmu_loop 0110                                 ISR@cnt_t0 0033  
                               ISR@cnt_t1 003F                   __end_of_caltime_to_RTCC 426C  
                         _RTCC_to_caltime 4A0C                              ?_tx_send_dec 00E0  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 007B  
                    __size_of_integrating 009A          __end_of_USBCtrlEPServiceComplete 3724  
             __size_of_USBCheckCDCRequest 00D6                     __end_of_weekday_3char FC1E  
                    USBCtrlTrfRxService@i 0001                                   ?___lmul 00C2  
                                 ?___wmul 00CB                                   ?_d_to_x 0001  
                          i2LED_OUT@value 0001                    __end_of_put_string_usb 5C38  
                                 ?_lchika 0001                                   ?_memset 00B5  
                    I2C_LCD_SetCursor@col 00BE                            ___lmul@product 00CA  
                              _device_dsc FC1E                      I2C_LCD_SetCursor@row 00BB  
                        _USBCtrlEPService 433A                                   ?_x_to_d 0001  
                            I2C_Send@data 00B7                                _ep_data_in 008A  
             __end_of_USBCtrlTrfRxService 331C                        _USBCheckStdRequest 3724  
                              ??_USB_init 00BE                         _configDescriptor1 FB57  
                              ??_USB_loop 00C9                                   _LED_OUT 5A92  
                        ??_get_string_usb 00C6                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 00B5                        __size_of_my_strcmp 00A4  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 3F1E  
                              ??_Delay_ms 00B7                       _USBStdSetCfgHandler 3AD4  
              __size_of_I2C_LCD_SetCursor 002C                        __size_of_port_loop 03C4  
                  I2C_LCD_SetCursor@F8672 01FD                           __CFG_WDTPS$1024 000000  
                            tx_sendn@temp 00DC                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                 ??_delay_timer_interrupt 0003                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 6230                   __end_of_RTCC_from_epoch 610A  
                    timer1_init@prescaler 00B7                      _RTCC_adjust_time_dec 224A  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 1FE6  
                              ??_Auto_cut 00D1                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 00DB                             _cdc_trf_state 00A0  
                         integrating@port 0010                         __end_of_delay_set 60E8  
                           ?_month_length 00BB                       epoch_to_caltime@day 00DE  
                       RTCC_from_epoch@ep 00E8                         RTCC_from_epoch@ct 00E6  
                     epoch_to_caltime@num 00E2                                 _I2C_Start 5E66  
                                 _pCDCDst 0090                                   _pCDCSrc 0093  
                   __size_of_getsUSBUSART 00EA                                   __Hparam 0000  
                          _ctmu_set_ratio 39EE                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 5598                                   __Lparam 0000  
                            USB_loop@data 00CB                                _ctmu_ratio 00FE  
                              _ctmu_value 01C9                   __end_of_I2C_LCD_Command 5D94  
                          display_LCD@str 0100                __size_of_USBEnableEndpoint 003C  
                       __end_of_comm_disp 111E                      ??_USBCheckStdRequest 001B  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 00B5  
                                 ___awdiv 471E                           __size_of___lmul 0076  
                                 ___awmod 4CBA                                   ___lldiv 47DC  
                        ??_USBDeviceTasks 001E                           __size_of___wmul 0036  
                                 ___llmod 4E9A                                   ___lwdiv 5434  
                         ?_put_string_usb 00C1                         ??_USBStallHandler 0001  
                                 ___lwmod 5672                           __size_of_d_to_x 0028  
              __size_of_command_operation 078E                      __size_of_ringbuf_pop 00CC  
                    __size_of_ringbuf_num 00EE                      __size_of_ringbuf_put 00D4  
                         __CFG_STVREN$OFF 000000                           __size_of_lchika 0100  
                       __end_of_main_init 4C16                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 00FF                                   __pcinit 4AC2  
                      getsUSBUSART@buffer 00BC                                 ?_tx_sendn 00D8  
                               ?_tx_sends 00C4                           __size_of_memset 0034  
                           rx_loop@i_2442 00FD                 __end_of_configDescriptor1 FB9A  
                                 __ramtop 0F00                      __size_of_timer0_init 003A  
                                 _halfsec 00A5                      __size_of_timer1_init 0050  
                                 __ptext0 2FD2                                   __ptext1 14E2  
                                 __ptext2 6078                                   __ptext3 50FC  
                                 __ptext4 0000                                   __ptext5 4C16  
                                 __ptext6 4D5C                                   __ptext7 39EE  
                                 __ptext8 0D1C                                   __ptext9 54AC  
                           I2C_LCD_Putc@c 00B9                                   _inPipes 0075  
                    __size_of_timer3_init 002C                         __end_of_ctmu_loop 342C  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 00B9  
                                 _comm_at 5732               _USBDeferOUTDataStagePackets 0043  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                        _time_change_flag 0050                          _caltime_to_epoch 1ADA  
                            __size_of_ISR 00E4                                 _T1CONbits 000FCD  
                            __size_of_OUT 005E                                   _cut_cnt 01CF  
                            ??_USBSuspend 0015                   __size_of_RTCC_from_RTCC 0022  
                               _T3CONbits 000F79                          ___awmod@dividend 00B5  
                               _T5CONbits 000F22                                   _my_atoi 4D5C  
                         i2_USBDeviceInit 2D6A                          i2USBDeviceInit@i 0009  
                                 _my_utoa 52A6                             rx_loop@opcode 0164  
                      __end_of_USB_CD_Ptr FB57                                   _rx_loop 14E2  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 4AC2  
                                 _tx_send 618A                                   lchika@i 000C  
                   ?_RTCC_adjust_time_dec 00EA                     ?_RTCC_adjust_time_inc 00EA  
                   __size_of_get_quot_rem 00D4                     __size_of_display_port 00DA  
                    end_of_initialization 4B66                              _getsUSBUSART 3904  
                              delay_set@d 00B5                                 _CTMU_init 6050  
                               _CTMU_read 465C                  __end_of_normal_mode_loop 433A  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FB55  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0039  
                          ??_month_length 00BC                            display_dec@dec 00EB  
                                 memset@c 00B7                                   memset@n 00B9  
                                 memset@p 00BB                            display_dec@str 00E1  
         _dummy_encapsulated_cmd_response 038A                    __end_of_ctmu_set_ratio 3AD4  
                ?_USBStdFeatureReqHandler 0001                          ?_caltime_to_RTCC 00BE  
                              ?_I2C_Start 00B7                                 i2_LED_OUT 5C38  
                   ??_USBStdSetCfgHandler 0015                           ___lldiv@divisor 00B9  
                    timer3_init@prescaler 00B6                         __end_of_my_strcmp 4CBA  
                              ?_CDCInitEP 0001                           ___lldiv@counter 00C1  
                       ?_is_usb_available 0001                            tx_send_dec@dec 00EB  
                          tx_sendn@digits 00DA                            tx_send_dec@str 00E1  
                      __end_of_USBSuspend 5FFC                            ??_ringbuf_init 00BB  
                 _USBCtrlEPAllowDataStage 4DFC                         __end_of_port_loop 14E2  
                              _sleep_flag 00A8                        ??_is_usb_available 00B5  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 3630  
                              ??_tx_sendn 00DB                                ??_tx_sends 00C6  
              _USBStatusStageEnabledFlag1 0046                _USBStatusStageEnabledFlag2 0047  
                      USBEnableEndpoint@p 000A                                 _PORTBbits 000F81  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 5EC4  
                               _RTCC_loop 5B6A                              _display_flag 004C  
               epoch_to_caltime@day_cache 01DB                              _get_quot_rem 3FF4  
                            _display_port 3C94                                _print_time 30EC  
                              _print_port 00A7                            _ringbuf_delete 6078  
               __size_of_epoch_to_caltime 01EC                          __CFG_CPUDIV$OSC1 000000  
                     RTCC_from_caltime@ep 00E8                       RTCC_from_caltime@ct 00E6  
                      _BothEP0OutUOWNsSet 0040                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                 i2___awdiv 532E  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0006  
                       i2___lwdiv@divisor 0003                                 i2___lldiv 53B2  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 0001  
                               i2___lwdiv 59A2                         i2___lwdiv@counter 0007  
                        ?_RTCC_from_epoch 00E6                                ?_CTMU_init 0001  
                              ?_CTMU_read 00C2       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                              comm_at@max 00EF                                comm_at@min 00EE  
                               _USTATcopy 0057                                 Auto_cut@i 00D3  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 00B5  
            __end_of_USBTransferOnePacket 3E46                           ?_ctmu_set_ratio 0001  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 0001  
                              ?i2_LED_OUT 0001                         putUSBUSART@length 00B7  
                    __size_of_tx_send_dec 0058                       __CFG_MSSP7B_EN$MSK7 000000  
                        ?_I2C_LCD_Command 0001                            ringbuf_init@rb 00B5  
                              lchika@cntf 01D8                    _USBCtrlTrfSetupHandler 5218  
                           ??_display_LCD 00F1                            ringbuf_pop@ret 00C3  
                           ??_display_dec 00E1                   ?i2_USBTransferOnePacket 0001  
                   __end_of_USBDeviceInit 2988                            __end_of___lmul 5598  
                ?_RTCC_adjust_time_button 00F4                  ?_RTCC_adjust_time_cursor 0001  
                          __end_of___wmul 5E00                            __end_of_d_to_x 6050  
                           __pidataCOMRAM 623B                  ?_RTCC_adjust_time_toggle 0001  
                 __end_ofi2_USBDeviceInit 2EAE                            __end_of_lchika 3630  
                  __end_of_ringbuf_delete 609E                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memset 5E34                                ?_RTCC_init 0001  
                              ?_RTCC_loop 0001                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 009D                            __end_of_x_to_d 616C  
                   epoch_to_caltime@month 00E1                       start_initialization 4AC2  
                              CTMU_read@i 00CA                          month_length@year 00C0  
                 ?_USBStdGetStatusHandler 0001                               __end_of_ADC 5EC4  
                      i2___awdiv@quotient 0007                               __end_of_ISR 00EC  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_OUT 5732  
                       __size_of_USB_init 000A                         __size_of_USB_loop 009A  
                           ?_I2C_LCD_Putc 0001                             ?_I2C_LCD_Puts 00B9  
                  ??_RTCC_adjust_time_dec 00EE                    ??_RTCC_adjust_time_inc 00EE  
                           ?_I2C_LCD_init 0001                               _cdc_data_rx 030A  
                             _cdc_data_tx 034A                         __size_ofi2_memset 002C  
                              ?i2___awdiv 0001              __end_of_USBConfigureEndpoint 50FC  
                       __size_of_Delay_ms 002C                                ?i2___lldiv 0001  
                        ?_RTCC_to_caltime 00B7                                ?i2___lwdiv 0001  
         __end_of_USBStdFeatureReqHandler 1FE6         __end_of_USBCtrlEPAllowStatusStage 4598  
                __end_of_USBCtrlEPService 4408                           ___llmod@divisor 00C6  
                       __size_of_Auto_cut 0104                               ??_I2C_Start 00B8  
                         ___llmod@counter 00CA                 ??_USBCtrlEPAllowDataStage 0002  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 00BD  
                   __end_of_I2C_LCD_Clear 61DC                    _pBDTEntryEP0OutCurrent 0037  
                            _ctmu_value_m 009A                   USBTransferOnePacket@dir 00B5  
                 USBTransferOnePacket@len 00B8            __end_ofi2_USBTransferOnePacket 4A0C  
                                ??___lmul 00CA                                  ??___wmul 00CF  
                          USB_loop@rx_len 00C9                       _USBStdGetDscHandler 2AD6  
                                ??_d_to_x 00BD                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK0 00FE                               __pdataBANK1 01FD  
                                ??_lchika 0009                                  ??_memset 00BB  
                  _button_timer_interrupt 1812                                  ??_x_to_d 00B5  
                         ?_ringbuf_delete 00B5                      __end_of_month_length 3C94  
                          _RTCC_from_RTCC 610A                       __end_of_display_LCD 0D1C  
                  _USBActiveConfiguration 0056            __end_of_USBStdGetStatusHandler 4952  
                             ?_print_time 0001                                  ?_LED_OUT 00B5  
                     __end_of_display_dec 58F6                               __pbssCOMRAM 002D  
                     RTCC_to_caltime@dumy 00B9                             __pcstackBANK0 00B5  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
                           __pcstackBANK3 0392              __size_of_USBCtrlTrfInHandler 00C4  
                          ??_I2C_LCD_Putc 00B9                            ??_I2C_LCD_Puts 00BB  
                                LED_OUT@b 00B6                            ??_I2C_LCD_init 00BC  
                 command_operation@opcode 00F1                               _caltime_now 00AA  
                           _delay_display 0051                      __end_of_ringbuf_init 59A2  
                    ?_USBStdGetDscHandler 0001                               _charge_time 0060  
                        tx_send@asciicode 00C4                                  ?_USB_ISR 0001  
                             ??_CTMU_init 00B5                               ??_CTMU_read 00C4  
          __size_of_delay_timer_interrupt 0048             __end_of_delay_timer_interrupt 5B22  
              __end_of_USBWakeFromSuspend 5E66                             ??_integrating 000E  
                   RTCC_adjust_time_dec@i 00F3                           _USBStallHandler 5BB0  
                            _pBDTEntryOut 0081                     RTCC_adjust_time_inc@i 00F3  
              __end_of_USBCheckCDCRequest 3FF4                  __end_of_caltime_to_epoch 1D62  
                             ??i2_LED_OUT 0002                           millis_timer@cnt 003D  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 00C5  
                        ___lwdiv@dividend 00D1           __end_of_RTCC_adjust_time_button 2FD2  
         __end_of_RTCC_adjust_time_cursor 57EA                                 _delay_set 60C4  
                               _edit_flag 00A4                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 620A                             __pmediumconst FB4E  
                                ?___awdiv 00B5                                 __ptext100 6230  
                               __ptext101 2C24                                 __ptext110 3724  
                               __ptext102 2D6A                                 __ptext111 3AD4  
                               __ptext103 5E34                                 __ptext120 5C76  
                               __ptext112 5FFC                                 __ptext104 5FD0  
                               __ptext121 5068                                 __ptext113 4898  
                               __ptext105 5BB0                                 __ptext122 57EA  
                               __ptext114 2AD6                                 __ptext106 433A  
                               __ptext123 3204                                 __ptext115 1D62  
                               __ptext107 5218                                 __ptext124 44D4  
                               __ptext116 5EF2                                 __ptext108 3630  
                               __ptext125 4598                                 __ptext117 3F1E  
                               __ptext109 4DFC                                 __ptext126 3E46  
                               __ptext118 5598                                 __ptext119 4952  
                                ?___awmod 00B5                                  ?___lldiv 00B5  
                      charge_time_count@i 0003                                  ?___llmod 00C2  
                                ?___lwdiv 00D1                                  ?___lwmod 00B5  
                   _is_usb_available$2671 00B5                           I2C_LCD_Putc@ans 00BA  
                  __end_of_RTCC_from_RTCC 612C                           I2C_LCD_Puts@ans 00BC  
                               _comm_disp 0D1C                          ?i2_USBDeviceInit 0001  
              USBCBSendResume@delay_count 0035                                  ?_comm_at 00EC  
                             ??_RTCC_init 00B5                               ??_RTCC_loop 00E1  
                    _USBTransferOnePacket 3D6E                         __size_of_tx_sendn 0076  
                       __size_of_tx_sends 006A                                 _epoch_now 00B1  
                               _main_init 4B70                               I2C_Start@rw 00B7  
                        _epoch_to_caltime 24AE                                  _I2C_Send 61DC  
                                OUT@value 00B5                                  _I2C_Stop 6226  
                    __CFG_RTCOSC$T1OSCREF 000000                                 _ctmu_flag 00A3  
                                _I2C_init 620A                          _display_LCD$5305 010A  
                               _ctmu_loop 331C                                  ?_my_atoi 00D1  
                                _ADC_init 612C                     __end_of_I2C_IdleCheck 618A  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 5846  
                                ?_my_utoa 00D8                       ringbuf_backspace@rb 00BD  
                   ??_USBStdGetDscHandler 0001                               _ep_data_out 008D  
                        ___lwdiv@quotient 00D6                                  ?_rx_loop 0001  
             command_operation@percentage 00FA                               ??i2___awdiv 0005  
                                ?_tx_send 0001                               ??i2___lldiv 0009  
            __size_of_USBCtrlTrfRxService 0118                                my_atoi@ret 00D7  
           USBConfigureEndpoint@direction 0001                                my_atoi@str 00D1  
                             ??i2___lwdiv 0005                               __size_of_IN 002C  
                               d_to_x@dec 00BD                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
                       ?_normal_mode_loop 0001              __size_of_USBCtrlTrfTxService 00D8  
                ringbuf_init@internal_buf 00B7                            ___wmul@product 00CF  
              ??_USBCtrlEPServiceComplete 0002                        ??_normal_mode_loop 00FA  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                         rx_loop@comm_buf 01F1                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 0118  
                                i2u501_40 3F08                                  i2u501_47 3EFE  
                              ?_delay_set 00B5                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 00A9                                  i2u555_40 2B5E  
                                i2u555_47 2B54                                  i2u556_40 2B94  
                                i2u556_47 2B8A                                  i2u558_40 2BF0  
                                i2u558_47 2BE6                 USBCtrlEPService@setup_cnt 001D  
                                i2u499_40 3EC8                                  i2u499_47 3EBE  
                                i2u855_40 5C44                             ??_ringbuf_pop 00BF  
                           ??_ringbuf_num 00B7                                  i2u857_40 5C50  
                           ??_ringbuf_put 00C0                                  i2u859_40 5C5C  
                     __end_of_integrating 5068                                  i2u885_40 5B4C  
                                _RCONbits 000FD0                         _display_time_1602 2988  
                           ??_putUSBUSART 00B8                                  _UEP0bits 000F26  
                           tx_sendn@value 00D8                _USBDeferINDataStagePackets 0042  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 00B5                             ??_timer1_init 00B6  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 078E  
                           ??_timer3_init 00B5                                 _my_strcmp 4C16  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00EC                               _display_dec 589E  
                    _USBConfigureEndpoint 5068                                 _port_loop 111E  
                         ?_RTCC_from_RTCC 00DD                                my_utoa@str 00D8  
                              ?_comm_disp 00E0          __size_of_USBStdFeatureReqHandler 0284  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 00CB                     ?_USBTransferOnePacket 00B5  
                        __CFG_SOSCSEL$LOW 000000            button_timer_interrupt@sw_value 00DA  
                                _USB_init 621C                                  _USB_loop 4F34  
                              ?_main_init 0001                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 0001                       ??_display_time_1602 00F0  
                            _RemoteWakeup 0041                         i2___awdiv@divisor 0003  
                                i2_memset 5FFC                          __size_of_LED_OUT 0048  
                                _Delay_ms 5FA4                         i2___awdiv@counter 0005  
                              ?_ctmu_loop 0001                                 lchika@cnt 01D5  
                           ringbuf_pop@rb 00BD                             ringbuf_num@rb 00B5  
                 __end_of_USBStallHandler 5BF6                             I2C_Start@adrs 00B8  
                           ringbuf_put@rb 00BD                         ___lmul@multiplier 00C2  
                        ??_ctmu_set_ratio 00D8                               _INTCON2bits 000FF1  
                              port_loop@i 00B9               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 3BB6                          __size_of_USB_ISR 0006  
                                _Auto_cut 342C                      epoch_to_caltime@year 00E0  
                 __size_of_get_string_usb 004E                               _auto_cut_ON 0087  
                      _next_print_content 004E                        __end_of_device_dsc FC30  
                 ?_USBCtrlTrfSetupHandler 0001                 __end_of_display_time_1602 2AD6  
                 USBStdGetStatusHandler@p 0002                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 00B9  
                    __end_of_I2C_LCD_Putc 5D24                      __end_of_I2C_LCD_Puts 5218  
                              rx_loop@buf 0100                                  _SetupPkt 000D30  
                           _weekday_3char FC02                      __end_of_I2C_LCD_init 594E  
                   __size_of_month_length 00DE                                ?_my_strcmp 00B5  
                   ?_USBConfigureEndpoint 0001                  __size_of_caltime_to_RTCC 00D0  
                       ??_USBDeviceAttach 00B5                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 00B6  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                              ?_port_loop 0001                         tx_sends@asciicode 00C4  
                     __end_of_ringbuf_pop 44D4                       __end_of_ringbuf_num 3904  
                     __end_of_ringbuf_put 419C                       __end_of_putUSBUSART 60C4  
                             _line_coding 02F9                            ??_CDCTxService 00BC  
                     __end_of_timer0_init 5CEC                     __size_of_ringbuf_init 0054  
                        __size_of_comm_at 005C                       __end_of_timer1_init 5A44  
                     __end_of_timer3_init 5FA4                   __size_of_USBDeviceTasks 0146  
                              i2LED_OUT@b 0002                           ___lwdiv@divisor 00D3  
                         ___lwdiv@counter 00D5                      timer0_init@prescaler 00B6  
                                __ptext10 5732                                  __ptext11 30EC  
                                __ptext20 078E                                  __ptext12 5846  
                                __ptext21 2988                                  __ptext13 5608  
                                __ptext30 2EAE                                  __ptext22 589E  
                                __ptext14 618A                                  __ptext31 61F4  
                                __ptext23 52A6                                  __ptext15 5D94  
                                __ptext40 578E                                  __ptext32 1FE6  
                                __ptext24 5672                                  __ptext16 426C  
                                __ptext41 342C                                  __ptext33 224A  
                                __ptext25 5CEC                                  __ptext17 111E  
                                __ptext50 594E                                  __ptext42 5DCA  
                                __ptext34 60E8                                  __ptext26 3C94  
                                __ptext18 60C4                                  __ptext51 621C  
                                __ptext43 56D4                                  __ptext35 24AE  
                                __ptext27 5F20                                  __ptext19 5A92  
                                __ptext60 6226                                  __ptext52 2826  
                                __ptext44 5F4C                                  __ptext36 3FF4  
                                __ptext28 518A                                  __ptext61 5E66  
                                __ptext53 5E00                                  __ptext45 5E96  
                                __ptext37 419C                                  __ptext29 4E9A  
                                __ptext70 465C                                  __ptext62 61DC  
                                __ptext54 5D24                                  __ptext46 4B70  
                                __ptext38 6028                                  __ptext71 47DC  
                                __ptext63 616C                                  __ptext55 5EC4  
                                __ptext47 5F78                                  __ptext39 471E  
                                __ptext80 3904                                  __ptext72 4F34  
                                __ptext64 5FA4                                  __ptext56 620A  
                                __ptext48 59F4                                  __ptext81 269A  
                                __ptext73 40C8                                  __ptext65 6050  
                                __ptext57 58F6                                  __ptext49 5CB2  
                                __ptext90 614C                                  __ptext82 3D6E  
                                __ptext74 4408                                  __ptext66 612C  
                                __ptext58 61C2                                  __ptext83 5B6A  
                                __ptext75 3816                                  __ptext67 331C  
                                __ptext59 5D5C                                  __ptext92 3530  
                                __ptext84 610A                                  __ptext76 5BF6  
                                __ptext68 1812                                  __ptext93 59A2  
                                __ptext85 1ADA                                  __ptext77 609E  
                                __ptext69 5434                                  __ptext94 532E  
                                __ptext86 3BB6                                  __ptext78 5A44  
                                __ptext95 5C38                                  __ptext87 4CBA  
                                __ptext79 61A6                                  __ptext96 4FCE  
                                __ptext88 5522                                  __ptext97 53B2  
                                __ptext89 4A0C                                  __ptext98 5ADA  
                                __ptext99 5B22                          __size_of_my_atoi 00A0  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_button 0124  
        __size_of_RTCC_adjust_time_cursor 005C                          __size_of_my_utoa 0088  
                          _comm_disp$5306 00EB                          __size_of_rx_loop 0330  
        __size_of_RTCC_adjust_time_toggle 0016                     RTCC_loop@prev_halfsec 009C  
                        __size_of_tx_send 001C                               _integrating 4FCE  
          __end_of_USBCtrlTrfSetupHandler 52A6                             __size_of_main 011A  
                       ?_USBCtrlEPService 0001                             ??_tx_send_dec 00E1  
                            _month_length 3BB6                         put_string_usb@len 00C3  
                      ??_USBCtrlEPService 001B                  __size_of_RTCC_from_epoch 0022  
                             ??_delay_set 00B9                       _USBCtrlTrfInHandler 4598  
                                _outPipes 006C                          ??_ringbuf_delete 00B7  
                 ?_button_timer_interrupt 00D8                      _USBCtrlTrfOutHandler 57EA  
                                int$flags 0059                            rx_loop@opland1 0264  
                          rx_loop@opland2 0392                            rx_loop@opland3 0200  
                                _out_flag 02EE                              _ringbuf_init 594E  
               _USBCtrlEPAllowStatusStage 44D4                                 x_to_d@hex 00B6  
                  ??_USBTransferOnePacket 00B9                                  _tx_sendn 54AC  
                                _tx_sends 5608                               ??_comm_disp 00E1  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0044  
                            ??_print_time 00EC                  CDCTxService@byte_to_send 00C0  
                          main_init@rxbuf 0400                            main_init@txbuf 0464  
                             ??_main_init 00BE                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 00BF  
                    ?_USBCtrlTrfInHandler 0001                               ??_ctmu_loop 00DD  
           USBCtrlTrfTxService@byteToSend 0001              I2C_LCD_SetCursor@row_offsets 00BC  
                              Delay_ms@ms 00B5                           display_dec@edit 00E0  
                                memset@p1 00B5                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                          get_quot_rem@quot 00CE  
                       RTCC_to_caltime@ct 00B7             __size_of_RTCC_adjust_time_dec 0264  
           __size_of_RTCC_adjust_time_inc 0264                                  intlevel2 0000  
                  __size_of_USBDeviceInit 0162   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5F20  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 5EF2  
                        ___lwmod@dividend 00B5              i2USBTransferOnePacket@handle 0006  
                        ___lldiv@dividend 00B5                                 tx_sendn@i 00DB  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 00CE  
                       _ringbuf_backspace 50FC                __size_of_display_time_1602 014E  
                __end_of_epoch_to_caltime 269A                  __size_of_RTCC_to_caltime 00B6  
                           _print_content 00A6                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 1ADA                           tx_send_dec@edit 00E0  
                      __end_of_print_time 3204                i2USBTransferOnePacket@data 0002  
                      ??_caltime_to_epoch 00D2                        ?_ringbuf_backspace 00BD  
                  ??_USBConfigureEndpoint 0002                                  my_utoa@d 00DD  
                   ?_USBCtrlTrfOutHandler 0001                                  my_utoa@v 00DE  
                             _ringbuf_pop 4408                               _ringbuf_num 3816  
                             _ringbuf_put 40C8                               _putUSBUSART 609E  
                     __end_of_tx_send_dec 589E                               ??_my_strcmp 00B9  
                     _USBCtrlTrfRxService 3204                               _timer0_init 5CB2  
                      _USBWakeFromSuspend 5E34                               _timer1_init 59F4  
                             _timer3_init 5F78                   _USBStdFeatureReqHandler 1D62  
                             ??_port_loop 00B9                        _USBCheckCDCRequest 3F1E  
                     _USBCtrlTrfTxService 3E46                                  rx_loop@i 02CA  
                     ??_ringbuf_backspace 00BF                           get_quot_rem@div 00D0  
                         get_quot_rem@num 00D2                                _RTCCFGbits 000F3F  
                     ?_USBWakeFromSuspend 0001                          _is_usb_available 61A6  
                        ___lldiv@quotient 00BD                         caltime_to_RTCC@ct 00BE  
                         ___lwmod@divisor 00B7                         ??_caltime_to_RTCC 00C0  
                   ??_USBCtrlTrfInHandler 0002                     _USBAlternateInterface 0054  
                         ___lwmod@counter 00B9                       ?_USBCheckCDCRequest 0001  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 004D  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 0001  
         epoch_to_caltime@day_since_epoch 00DC                             ?_getsUSBUSART 00BC  
                ?_USBCtrlEPAllowDataStage 0001                            _get_string_usb 5A44  
                    ?_USBCtrlTrfTxService 0001                             my_utoa@digits 00DC  
               __end_of_ringbuf_backspace 518A              _USBStatusStageTimeoutCounter 0048  
                   __size_of_I2C_LCD_Putc 0038                     __size_of_I2C_LCD_Puts 008E  
                   _delay_timer_interrupt 5ADA                     __size_of_I2C_LCD_init 0058  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 00BA  
                    __end_of_CDCTxService 2826                              my_utoa@value 00DA  
                  _command_operation$5307 00F9                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr FB55                          ??_RTCC_from_RTCC 00E1  
