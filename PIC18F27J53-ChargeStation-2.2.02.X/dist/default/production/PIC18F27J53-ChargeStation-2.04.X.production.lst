

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 22:45:43 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   151                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   152                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   153                           	dabs	1,0xD00,48,_BDT
   154                           	dabs	1,0xD38,8,_CtrlTrfData
   155                           	dabs	1,0xD30,8,_SetupPkt
   156  0000                     
   157                           	psect	idataCOMRAM
   158  015FEB                     __pidataCOMRAM:
   159                           	opt stack 0
   160                           
   161                           ;initializer for sleep_loop@prev_power_sw
   162  015FEB  01                 	db	1
   163                           
   164                           	psect	idataBANK0
   165  015FEC                     __pidataBANK0:
   166                           	opt stack 0
   167                           
   168                           ;initializer for epoch_to_caltime@month_cache
   169  015FEC  01                 	db	1
   170                           
   171                           	psect	idataBANK1
   172  015FE8                     __pidataBANK1:
   173                           	opt stack 0
   174                           
   175                           ;initializer for I2C_LCD_SetCursor@F8672
   176  015FE8  00                 	db	0
   177  015FE9  40                 	db	64
   178                           
   179                           ;initializer for rx_loop@comm_buf_init
   180  015FEA  01                 	db	1
   181                           
   182                           	psect	mediumconst
   183  00FC48                     __pmediumconst:
   184                           	opt stack 0
   185  00FC48  00                 	db	0
   186  00FC49                     _USB_SD_Ptr:
   187                           	opt stack 0
   188  00FC49  2A                 	db	low _sd000
   189  00FC4A  FD                 	db	high _sd000
   190  00FC4B  94                 	db	low _sd001
   191  00FC4C  FC                 	db	high _sd001
   192  00FC4D  C8                 	db	low _sd002
   193  00FC4E  FC                 	db	high _sd002
   194  00FC4F                     __end_of_USB_SD_Ptr:
   195                           	opt stack 0
   196  00FC4F                     _USB_CD_Ptr:
   197                           	opt stack 0
   198  00FC4F  51                 	db	low _configDescriptor1
   199  00FC50  FC                 	db	high _configDescriptor1
   200  00FC51                     __end_of_USB_CD_Ptr:
   201                           	opt stack 0
   202  00FC51                     _configDescriptor1:
   203                           	opt stack 0
   204  00FC51  09                 	db	9
   205  00FC52  02                 	db	2
   206  00FC53  43                 	db	67
   207  00FC54  00                 	db	0
   208  00FC55  02                 	db	2
   209  00FC56  01                 	db	1
   210  00FC57  00                 	db	0
   211  00FC58  C0                 	db	192
   212  00FC59  32                 	db	50
   213  00FC5A  09                 	db	9
   214  00FC5B  04                 	db	4
   215  00FC5C  00                 	db	0
   216  00FC5D  00                 	db	0
   217  00FC5E  01                 	db	1
   218  00FC5F  02                 	db	2
   219  00FC60  02                 	db	2
   220  00FC61  01                 	db	1
   221  00FC62  00                 	db	0
   222  00FC63  05                 	db	5
   223  00FC64  24                 	db	36
   224  00FC65  00                 	db	0
   225  00FC66  10                 	db	16
   226  00FC67  01                 	db	1
   227  00FC68  04                 	db	4
   228  00FC69  24                 	db	36
   229  00FC6A  02                 	db	2
   230  00FC6B  02                 	db	2
   231  00FC6C  05                 	db	5
   232  00FC6D  24                 	db	36
   233  00FC6E  06                 	db	6
   234  00FC6F  00                 	db	0
   235  00FC70  01                 	db	1
   236  00FC71  05                 	db	5
   237  00FC72  24                 	db	36
   238  00FC73  01                 	db	1
   239  00FC74  00                 	db	0
   240  00FC75  01                 	db	1
   241  00FC76  07                 	db	7
   242  00FC77  05                 	db	5
   243  00FC78  81                 	db	129
   244  00FC79  03                 	db	3
   245  00FC7A  08                 	db	8
   246  00FC7B  00                 	db	0
   247  00FC7C  02                 	db	2
   248  00FC7D  09                 	db	9
   249  00FC7E  04                 	db	4
   250  00FC7F  01                 	db	1
   251  00FC80  00                 	db	0
   252  00FC81  02                 	db	2
   253  00FC82  0A                 	db	10
   254  00FC83  00                 	db	0
   255  00FC84  00                 	db	0
   256  00FC85  00                 	db	0
   257  00FC86  07                 	db	7
   258  00FC87  05                 	db	5
   259  00FC88  02                 	db	2
   260  00FC89  02                 	db	2
   261  00FC8A  40                 	db	64
   262  00FC8B  00                 	db	0
   263  00FC8C  00                 	db	0
   264  00FC8D  07                 	db	7
   265  00FC8E  05                 	db	5
   266  00FC8F  82                 	db	130
   267  00FC90  02                 	db	2
   268  00FC91  40                 	db	64
   269  00FC92  00                 	db	0
   270  00FC93  00                 	db	0
   271  00FC94                     __end_of_configDescriptor1:
   272                           	opt stack 0
   273  00FC94                     _sd001:
   274                           	opt stack 0
   275  00FC94  34                 	db	52
   276  00FC95  03                 	db	3
   277  00FC96  004D               	dw	77
   278  00FC98  0069               	dw	105
   279  00FC9A  0063               	dw	99
   280  00FC9C  0072               	dw	114
   281  00FC9E  006F               	dw	111
   282  00FCA0  0063               	dw	99
   283  00FCA2  0068               	dw	104
   284  00FCA4  0069               	dw	105
   285  00FCA6  0070               	dw	112
   286  00FCA8  0020               	dw	32
   287  00FCAA  0054               	dw	84
   288  00FCAC  0065               	dw	101
   289  00FCAE  0063               	dw	99
   290  00FCB0  0068               	dw	104
   291  00FCB2  006E               	dw	110
   292  00FCB4  006F               	dw	111
   293  00FCB6  006C               	dw	108
   294  00FCB8  006F               	dw	111
   295  00FCBA  0067               	dw	103
   296  00FCBC  0079               	dw	121
   297  00FCBE  0020               	dw	32
   298  00FCC0  0049               	dw	73
   299  00FCC2  006E               	dw	110
   300  00FCC4  0063               	dw	99
   301  00FCC6  002E               	dw	46
   302  00FCC8                     __end_of_sd001:
   303                           	opt stack 0
   304  00FCC8                     _sd002:
   305                           	opt stack 0
   306  00FCC8  34                 	db	52
   307  00FCC9  03                 	db	3
   308  00FCCA  0043               	dw	67
   309  00FCCC  0044               	dw	68
   310  00FCCE  0043               	dw	67
   311  00FCD0  0020               	dw	32
   312  00FCD2  0052               	dw	82
   313  00FCD4  0053               	dw	83
   314  00FCD6  002D               	dw	45
   315  00FCD8  0032               	dw	50
   316  00FCDA  0033               	dw	51
   317  00FCDC  0032               	dw	50
   318  00FCDE  0020               	dw	32
   319  00FCE0  0045               	dw	69
   320  00FCE2  006D               	dw	109
   321  00FCE4  0075               	dw	117
   322  00FCE6  006C               	dw	108
   323  00FCE8  0061               	dw	97
   324  00FCEA  0074               	dw	116
   325  00FCEC  0069               	dw	105
   326  00FCEE  006F               	dw	111
   327  00FCF0  006E               	dw	110
   328  00FCF2  0020               	dw	32
   329  00FCF4  0044               	dw	68
   330  00FCF6  0065               	dw	101
   331  00FCF8  006D               	dw	109
   332  00FCFA  006F               	dw	111
   333  00FCFC                     __end_of_sd002:
   334                           	opt stack 0
   335  00FCFC                     _weekday_3char:
   336                           	opt stack 0
   337  00FCFC  53                 	db	83
   338  00FCFD  55                 	db	85
   339  00FCFE  4E                 	db	78
   340  00FCFF  00                 	db	0
   341  00FD00  4D                 	db	77
   342  00FD01  4F                 	db	79
   343  00FD02  4E                 	db	78
   344  00FD03  00                 	db	0
   345  00FD04  54                 	db	84
   346  00FD05  55                 	db	85
   347  00FD06  45                 	db	69
   348  00FD07  00                 	db	0
   349  00FD08  57                 	db	87
   350  00FD09  45                 	db	69
   351  00FD0A  44                 	db	68
   352  00FD0B  00                 	db	0
   353  00FD0C  54                 	db	84
   354  00FD0D  48                 	db	72
   355  00FD0E  55                 	db	85
   356  00FD0F  00                 	db	0
   357  00FD10  46                 	db	70
   358  00FD11  52                 	db	82
   359  00FD12  49                 	db	73
   360  00FD13  00                 	db	0
   361  00FD14  53                 	db	83
   362  00FD15  41                 	db	65
   363  00FD16  54                 	db	84
   364  00FD17  00                 	db	0
   365  00FD18                     __end_of_weekday_3char:
   366                           	opt stack 0
   367  00FD18                     _device_dsc:
   368                           	opt stack 0
   369  00FD18  12                 	db	18
   370  00FD19  01                 	db	1
   371  00FD1A  0200               	dw	512
   372  00FD1C  02                 	db	2
   373  00FD1D  00                 	db	0
   374  00FD1E  00                 	db	0
   375  00FD1F  08                 	db	8
   376  00FD20  04D8               	dw	1240
   377  00FD22  000A               	dw	10
   378  00FD24  0100               	dw	256
   379  00FD26  01                 	db	1
   380  00FD27  02                 	db	2
   381  00FD28  00                 	db	0
   382  00FD29  01                 	db	1
   383  00FD2A                     __end_of_device_dsc:
   384                           	opt stack 0
   385  00FD2A                     _sd000:
   386                           	opt stack 0
   387  00FD2A  04                 	db	4
   388  00FD2B  03                 	db	3
   389  00FD2C  0409               	dw	1033
   390  00FD2E                     __end_of_sd000:
   391                           	opt stack 0
   392  0000                     _ANCON0	set	3912
   393  0000                     _ANCON1	set	3913
   394  0000                     _PADCFG1bits	set	3900
   395  0000                     _RTCCAL	set	3902
   396  0000                     _RTCCFGbits	set	3903
   397  0000                     _RTCVALH	set	3899
   398  0000                     _RTCVALL	set	3898
   399  0000                     _T5CONbits	set	3874
   400  0000                     _UADDR	set	3896
   401  0000                     _UCFG	set	3897
   402  0000                     _UEIE	set	3895
   403  0000                     _UEP0bits	set	3878
   404  0000                     _UIE	set	3894
   405  0000                     _UIEbits	set	3894
   406  0000                     _UEP0	set	3878
   407  0000                     _UEP1	set	3879
   408  0000                     _ADRES	set	4035
   409  0000                     _ADCON0bits	set	4034
   410  0000                     _ADCON1bits	set	4033
   411  0000                     _BAUDCON1bits	set	3966
   412  0000                     _CTMUCONH	set	4019
   413  0000                     _CTMUCONHbits	set	4019
   414  0000                     _CTMUCONL	set	4018
   415  0000                     _CTMUCONLbits	set	4018
   416  0000                     _CTMUICON	set	4017
   417  0000                     _EECON2	set	4007
   418  0000                     _INTCON2bits	set	4081
   419  0000                     _INTCONbits	set	4082
   420  0000                     _IPR1bits	set	3999
   421  0000                     _IPR2bits	set	4002
   422  0000                     _IPR5bits	set	3993
   423  0000                     _OSCCONbits	set	4051
   424  0000                     _OSCTUNEbits	set	3995
   425  0000                     _PIE1bits	set	3997
   426  0000                     _PIE2bits	set	4000
   427  0000                     _PIE5bits	set	3985
   428  0000                     _PIR1bits	set	3998
   429  0000                     _PIR2bits	set	4001
   430  0000                     _PIR5bits	set	3992
   431  0000                     _PORTBbits	set	3969
   432  0000                     _RCONbits	set	4048
   433  0000                     _RCREG1	set	4015
   434  0000                     _RCSTA1bits	set	4012
   435  0000                     _SPBRG1	set	4016
   436  0000                     _SPBRGH1	set	3967
   437  0000                     _SSP1ADD	set	4040
   438  0000                     _SSP1BUF	set	4041
   439  0000                     _SSP1CON1	set	4038
   440  0000                     _SSP1CON2	set	4037
   441  0000                     _SSP1CON2bits	set	4037
   442  0000                     _SSP1STAT	set	4039
   443  0000                     _T0CONbits	set	4053
   444  0000                     _T1CONbits	set	4045
   445  0000                     _T3CONbits	set	3961
   446  0000                     _TMR1H	set	4047
   447  0000                     _TRISA	set	3986
   448  0000                     _TRISB	set	3987
   449  0000                     _TRISC	set	3988
   450  0000                     _TXREG1	set	4014
   451  0000                     _TXSTA1bits	set	4013
   452  0000                     _UCON	set	3941
   453  0000                     _UCONbits	set	3941
   454  0000                     _UEIR	set	3939
   455  0000                     _UIR	set	3938
   456  0000                     _UIRbits	set	3938
   457  0000                     _USTAT	set	3940
   458  0000                     _BCL1IF	set	32011
   459  0000                     _GIE	set	32663
   460  0000                     _LATA5	set	31821
   461  0000                     _LATA6	set	31822
   462  0000                     _LATA7	set	31823
   463  0000                     _LATB2	set	31826
   464  0000                     _LATB6	set	31830
   465  0000                     _LATB7	set	31831
   466  0000                     _LATC2	set	31834
   467  0000                     _SSP1IF	set	31987
   468  00FD2E                     STR_39:
   469                           
   470                           ; BSR set to: 0
   471  00FD2E  09                 	db	9
   472  00FD2F  2A                 	db	42
   473  00FD30  2A                 	db	42
   474  00FD31  2A                 	db	42
   475  00FD32  2A                 	db	42
   476  00FD33  20                 	db	32
   477  00FD34  43                 	db	67	;'C'
   478  00FD35  68                 	db	104	;'h'
   479  00FD36  61                 	db	97	;'a'
   480  00FD37  72                 	db	114	;'r'
   481  00FD38  67                 	db	103	;'g'
   482  00FD39  65                 	db	101	;'e'
   483  00FD3A  20                 	db	32
   484  00FD3B  53                 	db	83	;'S'
   485  00FD3C  74                 	db	116	;'t'
   486  00FD3D  61                 	db	97	;'a'
   487  00FD3E  74                 	db	116	;'t'
   488  00FD3F  69                 	db	105	;'i'
   489  00FD40  6F                 	db	111	;'o'
   490  00FD41  6E                 	db	110	;'n'
   491  00FD42  20                 	db	32
   492  00FD43  36                 	db	54	;'6'
   493  00FD44  20                 	db	32
   494  00FD45  2D                 	db	45
   495  00FD46  2D                 	db	45
   496  00FD47  2D                 	db	45
   497  00FD48  2D                 	db	45
   498  00FD49  20                 	db	32
   499  00FD4A  4D                 	db	77	;'M'
   500  00FD4B  61                 	db	97	;'a'
   501  00FD4C  64                 	db	100	;'d'
   502  00FD4D  65                 	db	101	;'e'
   503  00FD4E  20                 	db	32
   504  00FD4F  62                 	db	98	;'b'
   505  00FD50  79                 	db	121	;'y'
   506  00FD51  20                 	db	32
   507  00FD52  40                 	db	64	;'@'
   508  00FD53  52                 	db	82	;'R'
   509  00FD54  79                 	db	121	;'y'
   510  00FD55  6F                 	db	111	;'o'
   511  00FD56  6B                 	db	107	;'k'
   512  00FD57  65                 	db	101	;'e'
   513  00FD58  72                 	db	114	;'r'
   514  00FD59  69                 	db	105	;'i'
   515  00FD5A  20                 	db	32
   516  00FD5B  2A                 	db	42
   517  00FD5C  2A                 	db	42
   518  00FD5D  2A                 	db	42
   519  00FD5E  2A                 	db	42
   520  00FD5F  0A                 	db	10
   521  00FD60  09                 	db	9
   522  00FD61  63                 	db	99	;'c'
   523  00FD62  6F                 	db	111	;'o'
   524  00FD63  6D                 	db	109	;'m'
   525  00FD64  6D                 	db	109	;'m'
   526  00FD65  61                 	db	97	;'a'
   527  00FD66  6E                 	db	110	;'n'
   528  00FD67  64                 	db	100	;'d'
   529  00FD68  20                 	db	32
   530  00FD69  6F                 	db	111	;'o'
   531  00FD6A  70                 	db	112	;'p'
   532  00FD6B  65                 	db	101	;'e'
   533  00FD6C  6C                 	db	108	;'l'
   534  00FD6D  61                 	db	97	;'a'
   535  00FD6E  6E                 	db	110	;'n'
   536  00FD6F  64                 	db	100	;'d'
   537  00FD70  31                 	db	49	;'1'
   538  00FD71  20                 	db	32
   539  00FD72  6F                 	db	111	;'o'
   540  00FD73  70                 	db	112	;'p'
   541  00FD74  65                 	db	101	;'e'
   542  00FD75  6C                 	db	108	;'l'
   543  00FD76  61                 	db	97	;'a'
   544  00FD77  6E                 	db	110	;'n'
   545  00FD78  64                 	db	100	;'d'
   546  00FD79  32                 	db	50	;'2'
   547  00FD7A  0A                 	db	10
   548  00FD7B  0A                 	db	10
   549  00FD7C  09                 	db	9
   550  00FD7D  70                 	db	112	;'p'
   551  00FD7E  72                 	db	114	;'r'
   552  00FD7F  69                 	db	105	;'i'
   553  00FD80  6E                 	db	110	;'n'
   554  00FD81  74                 	db	116	;'t'
   555  00FD82  5F                 	db	95	;'_'
   556  00FD83  74                 	db	116	;'t'
   557  00FD84  69                 	db	105	;'i'
   558  00FD85  6D                 	db	109	;'m'
   559  00FD86  65                 	db	101	;'e'
   560  00FD87  28                 	db	40
   561  00FD88  74                 	db	116	;'t'
   562  00FD89  29                 	db	41
   563  00FD8A  0A                 	db	10
   564  00FD8B  09                 	db	9
   565  00FD8C  61                 	db	97	;'a'
   566  00FD8D  64                 	db	100	;'d'
   567  00FD8E  6A                 	db	106	;'j'
   568  00FD8F  75                 	db	117	;'u'
   569  00FD90  73                 	db	115	;'s'
   570  00FD91  74                 	db	116	;'t'
   571  00FD92  5F                 	db	95	;'_'
   572  00FD93  74                 	db	116	;'t'
   573  00FD94  69                 	db	105	;'i'
   574  00FD95  6D                 	db	109	;'m'
   575  00FD96  65                 	db	101	;'e'
   576  00FD97  28                 	db	40
   577  00FD98  61                 	db	97	;'a'
   578  00FD99  74                 	db	116	;'t'
   579  00FD9A  29                 	db	41
   580  00FD9B  20                 	db	32
   581  00FD9C  5B                 	db	91	;'['
   582  00FD9D  68                 	db	104	;'h'
   583  00FD9E  61                 	db	97	;'a'
   584  00FD9F  6E                 	db	110	;'n'
   585  00FDA0  64                 	db	100	;'d'
   586  00FDA1  3A                 	db	58	;':'
   587  00FDA2  79                 	db	121	;'y'
   588  00FDA3  2C                 	db	44
   589  00FDA4  4D                 	db	77	;'M'
   590  00FDA5  2C                 	db	44
   591  00FDA6  64                 	db	100	;'d'
   592  00FDA7  2C                 	db	44
   593  00FDA8  68                 	db	104	;'h'
   594  00FDA9  2C                 	db	44
   595  00FDAA  6D                 	db	109	;'m'
   596  00FDAB  2C                 	db	44
   597  00FDAC  73                 	db	115	;'s'
   598  00FDAD  5D                 	db	93	;']'
   599  00FDAE  20                 	db	32
   600  00FDAF  5B                 	db	91	;'['
   601  00FDB0  76                 	db	118	;'v'
   602  00FDB1  61                 	db	97	;'a'
   603  00FDB2  6C                 	db	108	;'l'
   604  00FDB3  75                 	db	117	;'u'
   605  00FDB4  65                 	db	101	;'e'
   606  00FDB5  28                 	db	40
   607  00FDB6  64                 	db	100	;'d'
   608  00FDB7  65                 	db	101	;'e'
   609  00FDB8  63                 	db	99	;'c'
   610  00FDB9  69                 	db	105	;'i'
   611  00FDBA  6D                 	db	109	;'m'
   612  00FDBB  61                 	db	97	;'a'
   613  00FDBC  6C                 	db	108	;'l'
   614  00FDBD  29                 	db	41
   615  00FDBE  5D                 	db	93	;']'
   616  00FDBF  0A                 	db	10
   617  00FDC0  09                 	db	9
   618  00FDC1  73                 	db	115	;'s'
   619  00FDC2  65                 	db	101	;'e'
   620  00FDC3  74                 	db	116	;'t'
   621  00FDC4  74                 	db	116	;'t'
   622  00FDC5  69                 	db	105	;'i'
   623  00FDC6  6E                 	db	110	;'n'
   624  00FDC7  67                 	db	103	;'g'
   625  00FDC8  73                 	db	115	;'s'
   626  00FDC9  28                 	db	40
   627  00FDCA  73                 	db	115	;'s'
   628  00FDCB  65                 	db	101	;'e'
   629  00FDCC  74                 	db	116	;'t'
   630  00FDCD  29                 	db	41
   631  00FDCE  20                 	db	32
   632  00FDCF  5B                 	db	91	;'['
   633  00FDD0  70                 	db	112	;'p'
   634  00FDD1  6F                 	db	111	;'o'
   635  00FDD2  72                 	db	114	;'r'
   636  00FDD3  74                 	db	116	;'t'
   637  00FDD4  3A                 	db	58	;':'
   638  00FDD5  6C                 	db	108	;'l'
   639  00FDD6  65                 	db	101	;'e'
   640  00FDD7  66                 	db	102	;'f'
   641  00FDD8  74                 	db	116	;'t'
   642  00FDD9  28                 	db	40
   643  00FDDA  6C                 	db	108	;'l'
   644  00FDDB  29                 	db	41
   645  00FDDC  2C                 	db	44
   646  00FDDD  63                 	db	99	;'c'
   647  00FDDE  65                 	db	101	;'e'
   648  00FDDF  6E                 	db	110	;'n'
   649  00FDE0  74                 	db	116	;'t'
   650  00FDE1  65                 	db	101	;'e'
   651  00FDE2  72                 	db	114	;'r'
   652  00FDE3  28                 	db	40
   653  00FDE4  63                 	db	99	;'c'
   654  00FDE5  29                 	db	41
   655  00FDE6  2C                 	db	44
   656  00FDE7  72                 	db	114	;'r'
   657  00FDE8  69                 	db	105	;'i'
   658  00FDE9  67                 	db	103	;'g'
   659  00FDEA  68                 	db	104	;'h'
   660  00FDEB  74                 	db	116	;'t'
   661  00FDEC  28                 	db	40
   662  00FDED  72                 	db	114	;'r'
   663  00FDEE  29                 	db	41
   664  00FDEF  5D                 	db	93	;']'
   665  00FDF0  0A                 	db	10
   666  00FDF1  09                 	db	9
   667  00FDF2  09                 	db	9
   668  00FDF3  5B                 	db	91	;'['
   669  00FDF4  61                 	db	97	;'a'
   670  00FDF5  75                 	db	117	;'u'
   671  00FDF6  74                 	db	116	;'t'
   672  00FDF7  6F                 	db	111	;'o'
   673  00FDF8  5F                 	db	95	;'_'
   674  00FDF9  73                 	db	115	;'s'
   675  00FDFA  74                 	db	116	;'t'
   676  00FDFB  6F                 	db	111	;'o'
   677  00FDFC  70                 	db	112	;'p'
   678  00FDFD  28                 	db	40
   679  00FDFE  61                 	db	97	;'a'
   680  00FDFF  73                 	db	115	;'s'
   681  00FE00  29                 	db	41
   682  00FE01  2C                 	db	44
   683  00FE02  61                 	db	97	;'a'
   684  00FE03  6C                 	db	108	;'l'
   685  00FE04  77                 	db	119	;'w'
   686  00FE05  61                 	db	97	;'a'
   687  00FE06  79                 	db	121	;'y'
   688  00FE07  73                 	db	115	;'s'
   689  00FE08  5F                 	db	95	;'_'
   690  00FE09  6F                 	db	111	;'o'
   691  00FE0A  6E                 	db	110	;'n'
   692  00FE0B  28                 	db	40
   693  00FE0C  61                 	db	97	;'a'
   694  00FE0D  6F                 	db	111	;'o'
   695  00FE0E  29                 	db	41
   696  00FE0F  2C                 	db	44
   697  00FE10  69                 	db	105	;'i'
   698  00FE11  6E                 	db	110	;'n'
   699  00FE12  74                 	db	116	;'t'
   700  00FE13  65                 	db	101	;'e'
   701  00FE14  67                 	db	103	;'g'
   702  00FE15  72                 	db	114	;'r'
   703  00FE16  61                 	db	97	;'a'
   704  00FE17  74                 	db	116	;'t'
   705  00FE18  69                 	db	105	;'i'
   706  00FE19  6E                 	db	110	;'n'
   707  00FE1A  67                 	db	103	;'g'
   708  00FE1B  5F                 	db	95	;'_'
   709  00FE1C  72                 	db	114	;'r'
   710  00FE1D  65                 	db	101	;'e'
   711  00FE1E  73                 	db	115	;'s'
   712  00FE1F  65                 	db	101	;'e'
   713  00FE20  74                 	db	116	;'t'
   714  00FE21  28                 	db	40
   715  00FE22  69                 	db	105	;'i'
   716  00FE23  72                 	db	114	;'r'
   717  00FE24  29                 	db	41
   718  00FE25  5D                 	db	93	;']'
   719  00FE26  0A                 	db	10
   720  00FE27  09                 	db	9
   721  00FE28  64                 	db	100	;'d'
   722  00FE29  69                 	db	105	;'i'
   723  00FE2A  73                 	db	115	;'s'
   724  00FE2B  70                 	db	112	;'p'
   725  00FE2C  6C                 	db	108	;'l'
   726  00FE2D  61                 	db	97	;'a'
   727  00FE2E  79                 	db	121	;'y'
   728  00FE2F  28                 	db	40
   729  00FE30  64                 	db	100	;'d'
   730  00FE31  29                 	db	41
   731  00FE32  20                 	db	32
   732  00FE33  5B                 	db	91	;'['
   733  00FE34  70                 	db	112	;'p'
   734  00FE35  6F                 	db	111	;'o'
   735  00FE36  72                 	db	114	;'r'
   736  00FE37  74                 	db	116	;'t'
   737  00FE38  3A                 	db	58	;':'
   738  00FE39  6C                 	db	108	;'l'
   739  00FE3A  65                 	db	101	;'e'
   740  00FE3B  66                 	db	102	;'f'
   741  00FE3C  74                 	db	116	;'t'
   742  00FE3D  28                 	db	40
   743  00FE3E  6C                 	db	108	;'l'
   744  00FE3F  29                 	db	41
   745  00FE40  2C                 	db	44
   746  00FE41  63                 	db	99	;'c'
   747  00FE42  65                 	db	101	;'e'
   748  00FE43  6E                 	db	110	;'n'
   749  00FE44  74                 	db	116	;'t'
   750  00FE45  65                 	db	101	;'e'
   751  00FE46  72                 	db	114	;'r'
   752  00FE47  28                 	db	40
   753  00FE48  63                 	db	99	;'c'
   754  00FE49  29                 	db	41
   755  00FE4A  2C                 	db	44
   756  00FE4B  72                 	db	114	;'r'
   757  00FE4C  69                 	db	105	;'i'
   758  00FE4D  67                 	db	103	;'g'
   759  00FE4E  68                 	db	104	;'h'
   760  00FE4F  74                 	db	116	;'t'
   761  00FE50  28                 	db	40
   762  00FE51  72                 	db	114	;'r'
   763  00FE52  29                 	db	41
   764  00FE53  5D                 	db	93	;']'
   765  00FE54  0A                 	db	10
   766  00FE55  09                 	db	9
   767  00FE56  09                 	db	9
   768  00FE57  5B                 	db	91	;'['
   769  00FE58  63                 	db	99	;'c'
   770  00FE59  6F                 	db	111	;'o'
   771  00FE5A  6E                 	db	110	;'n'
   772  00FE5B  74                 	db	116	;'t'
   773  00FE5C  65                 	db	101	;'e'
   774  00FE5D  6E                 	db	110	;'n'
   775  00FE5E  74                 	db	116	;'t'
   776  00FE5F  3A                 	db	58	;':'
   777  00FE60  63                 	db	99	;'c'
   778  00FE61  75                 	db	117	;'u'
   779  00FE62  72                 	db	114	;'r'
   780  00FE63  72                 	db	114	;'r'
   781  00FE64  65                 	db	101	;'e'
   782  00FE65  6E                 	db	110	;'n'
   783  00FE66  74                 	db	116	;'t'
   784  00FE67  28                 	db	40
   785  00FE68  63                 	db	99	;'c'
   786  00FE69  29                 	db	41
   787  00FE6A  2C                 	db	44
   788  00FE6B  69                 	db	105	;'i'
   789  00FE6C  6E                 	db	110	;'n'
   790  00FE6D  74                 	db	116	;'t'
   791  00FE6E  65                 	db	101	;'e'
   792  00FE6F  67                 	db	103	;'g'
   793  00FE70  72                 	db	114	;'r'
   794  00FE71  61                 	db	97	;'a'
   795  00FE72  74                 	db	116	;'t'
   796  00FE73  65                 	db	101	;'e'
   797  00FE74  64                 	db	100	;'d'
   798  00FE75  5F                 	db	95	;'_'
   799  00FE76  63                 	db	99	;'c'
   800  00FE77  75                 	db	117	;'u'
   801  00FE78  72                 	db	114	;'r'
   802  00FE79  72                 	db	114	;'r'
   803  00FE7A  65                 	db	101	;'e'
   804  00FE7B  6E                 	db	110	;'n'
   805  00FE7C  74                 	db	116	;'t'
   806  00FE7D  28                 	db	40
   807  00FE7E  69                 	db	105	;'i'
   808  00FE7F  63                 	db	99	;'c'
   809  00FE80  29                 	db	41
   810  00FE81  2C                 	db	44
   811  00FE82  69                 	db	105	;'i'
   812  00FE83  6E                 	db	110	;'n'
   813  00FE84  74                 	db	116	;'t'
   814  00FE85  65                 	db	101	;'e'
   815  00FE86  67                 	db	103	;'g'
   816  00FE87  72                 	db	114	;'r'
   817  00FE88  61                 	db	97	;'a'
   818  00FE89  74                 	db	116	;'t'
   819  00FE8A  65                 	db	101	;'e'
   820  00FE8B  64                 	db	100	;'d'
   821  00FE8C  5F                 	db	95	;'_'
   822  00FE8D  74                 	db	116	;'t'
   823  00FE8E  69                 	db	105	;'i'
   824  00FE8F  6D                 	db	109	;'m'
   825  00FE90  65                 	db	101	;'e'
   826  00FE91  28                 	db	40
   827  00FE92  69                 	db	105	;'i'
   828  00FE93  74                 	db	116	;'t'
   829  00FE94  29                 	db	41
   830  00FE95  5D                 	db	93	;']'
   831  00FE96  0A                 	db	10
   832  00FE97  00                 	db	0
   833  00FE98                     STR_57:
   834                           
   835                           ; BSR set to: 0
   836  00FE98  69                 	db	105	;'i'
   837  00FE99  6E                 	db	110	;'n'
   838  00FE9A  74                 	db	116	;'t'
   839  00FE9B  65                 	db	101	;'e'
   840  00FE9C  67                 	db	103	;'g'
   841  00FE9D  72                 	db	114	;'r'
   842  00FE9E  61                 	db	97	;'a'
   843  00FE9F  74                 	db	116	;'t'
   844  00FEA0  65                 	db	101	;'e'
   845  00FEA1  64                 	db	100	;'d'
   846  00FEA2  5F                 	db	95	;'_'
   847  00FEA3  63                 	db	99	;'c'
   848  00FEA4  75                 	db	117	;'u'
   849  00FEA5  72                 	db	114	;'r'
   850  00FEA6  72                 	db	114	;'r'
   851  00FEA7  65                 	db	101	;'e'
   852  00FEA8  6E                 	db	110	;'n'
   853  00FEA9  74                 	db	116	;'t'
   854  00FEAA  00                 	db	0
   855  00FEAB                     STR_8:
   856                           
   857                           ; BSR set to: 0
   858  00FEAB  43                 	db	67	;'C'
   859  00FEAC  68                 	db	104	;'h'
   860  00FEAD  61                 	db	97	;'a'
   861  00FEAE  72                 	db	114	;'r'
   862  00FEAF  67                 	db	103	;'g'
   863  00FEB0  65                 	db	101	;'e'
   864  00FEB1  20                 	db	32
   865  00FEB2  53                 	db	83	;'S'
   866  00FEB3  74                 	db	116	;'t'
   867  00FEB4  61                 	db	97	;'a'
   868  00FEB5  74                 	db	116	;'t'
   869  00FEB6  69                 	db	105	;'i'
   870  00FEB7  6F                 	db	111	;'o'
   871  00FEB8  6E                 	db	110	;'n'
   872  00FEB9  20                 	db	32
   873  00FEBA  36                 	db	54	;'6'
   874  00FEBB  00                 	db	0
   875  00FEBC                     STR_16:
   876                           
   877                           ; BSR set to: 0
   878  00FEBC  49                 	db	73	;'I'
   879  00FEBD  6E                 	db	110	;'n'
   880  00FEBE  74                 	db	116	;'t'
   881  00FEBF  65                 	db	101	;'e'
   882  00FEC0  67                 	db	103	;'g'
   883  00FEC1  72                 	db	114	;'r'
   884  00FEC2  61                 	db	97	;'a'
   885  00FEC3  74                 	db	116	;'t'
   886  00FEC4  20                 	db	32
   887  00FEC5  52                 	db	82	;'R'
   888  00FEC6  65                 	db	101	;'e'
   889  00FEC7  73                 	db	115	;'s'
   890  00FEC8  65                 	db	101	;'e'
   891  00FEC9  74                 	db	116	;'t'
   892  00FECA  65                 	db	101	;'e'
   893  00FECB  64                 	db	100	;'d'
   894  00FECC  00                 	db	0
   895  00FECD                     STR_15:
   896                           
   897                           ; BSR set to: 0
   898  00FECD  49                 	db	73	;'I'
   899  00FECE  6E                 	db	110	;'n'
   900  00FECF  74                 	db	116	;'t'
   901  00FED0  65                 	db	101	;'e'
   902  00FED1  67                 	db	103	;'g'
   903  00FED2  72                 	db	114	;'r'
   904  00FED3  61                 	db	97	;'a'
   905  00FED4  74                 	db	116	;'t'
   906  00FED5  20                 	db	32
   907  00FED6  52                 	db	82	;'R'
   908  00FED7  65                 	db	101	;'e'
   909  00FED8  73                 	db	115	;'s'
   910  00FED9  65                 	db	101	;'e'
   911  00FEDA  74                 	db	116	;'t'
   912  00FEDB  3F                 	db	63	;'?'
   913  00FEDC  00                 	db	0
   914  00FEDD                     STR_59:
   915                           
   916                           ; BSR set to: 0
   917  00FEDD  69                 	db	105	;'i'
   918  00FEDE  6E                 	db	110	;'n'
   919  00FEDF  74                 	db	116	;'t'
   920  00FEE0  65                 	db	101	;'e'
   921  00FEE1  67                 	db	103	;'g'
   922  00FEE2  72                 	db	114	;'r'
   923  00FEE3  61                 	db	97	;'a'
   924  00FEE4  74                 	db	116	;'t'
   925  00FEE5  65                 	db	101	;'e'
   926  00FEE6  64                 	db	100	;'d'
   927  00FEE7  5F                 	db	95	;'_'
   928  00FEE8  74                 	db	116	;'t'
   929  00FEE9  69                 	db	105	;'i'
   930  00FEEA  6D                 	db	109	;'m'
   931  00FEEB  65                 	db	101	;'e'
   932  00FEEC  00                 	db	0
   933  00FEED                     STR_17:
   934                           
   935                           ; BSR set to: 0
   936  00FEED  41                 	db	65	;'A'
   937  00FEEE  6C                 	db	108	;'l'
   938  00FEEF  77                 	db	119	;'w'
   939  00FEF0  61                 	db	97	;'a'
   940  00FEF1  79                 	db	121	;'y'
   941  00FEF2  73                 	db	115	;'s'
   942  00FEF3  20                 	db	32
   943  00FEF4  43                 	db	67	;'C'
   944  00FEF5  68                 	db	104	;'h'
   945  00FEF6  61                 	db	97	;'a'
   946  00FEF7  72                 	db	114	;'r'
   947  00FEF8  67                 	db	103	;'g'
   948  00FEF9  69                 	db	105	;'i'
   949  00FEFA  6E                 	db	110	;'n'
   950  00FEFB  67                 	db	103	;'g'
   951  00FEFC  00                 	db	0
   952  00FEFD                     STR_19:
   953                           
   954                           ; BSR set to: 0
   955  00FEFD  4E                 	db	78	;'N'
   956  00FEFE  6F                 	db	111	;'o'
   957  00FEFF  74                 	db	116	;'t'
   958  00FF00  68                 	db	104	;'h'
   959  00FF01  69                 	db	105	;'i'
   960  00FF02  6E                 	db	110	;'n'
   961  00FF03  67                 	db	103	;'g'
   962  00FF04  20                 	db	32
   963  00FF05  64                 	db	100	;'d'
   964  00FF06  6F                 	db	111	;'o'
   965  00FF07  6E                 	db	110	;'n'
   966  00FF08  65                 	db	101	;'e'
   967  00FF09  2E                 	db	46
   968  00FF0A  00                 	db	0
   969  00FF0B                     STR_9:
   970                           
   971                           ; BSR set to: 0
   972  00FF0B  4D                 	db	77	;'M'
   973  00FF0C  61                 	db	97	;'a'
   974  00FF0D  64                 	db	100	;'d'
   975  00FF0E  65                 	db	101	;'e'
   976  00FF0F  20                 	db	32
   977  00FF10  62                 	db	98	;'b'
   978  00FF11  79                 	db	121	;'y'
   979  00FF12  20                 	db	32
   980  00FF13  4B                 	db	75	;'K'
   981  00FF14  45                 	db	69	;'E'
   982  00FF15  52                 	db	82	;'R'
   983  00FF16  49                 	db	73	;'I'
   984  00FF17  00                 	db	0
   985  00FF18                     STR_18:
   986                           
   987                           ; BSR set to: 0
   988  00FF18  41                 	db	65	;'A'
   989  00FF19  75                 	db	117	;'u'
   990  00FF1A  74                 	db	116	;'t'
   991  00FF1B  6F                 	db	111	;'o'
   992  00FF1C  20                 	db	32
   993  00FF1D  53                 	db	83	;'S'
   994  00FF1E  74                 	db	116	;'t'
   995  00FF1F  6F                 	db	111	;'o'
   996  00FF20  70                 	db	112	;'p'
   997  00FF21  20                 	db	32
   998  00FF22  4F                 	db	79	;'O'
   999  00FF23  4E                 	db	78	;'N'
  1000  00FF24  00                 	db	0
  1001  00FF25                     STR_5:
  1002                           
  1003                           ; BSR set to: 0
  1004  00FF25  43                 	db	67	;'C'
  1005  00FF26  45                 	db	69	;'E'
  1006  00FF27  4E                 	db	78	;'N'
  1007  00FF28  54                 	db	84	;'T'
  1008  00FF29  45                 	db	69	;'E'
  1009  00FF2A  52                 	db	82	;'R'
  1010  00FF2B  20                 	db	32
  1011  00FF2C  50                 	db	80	;'P'
  1012  00FF2D  4F                 	db	79	;'O'
  1013  00FF2E  52                 	db	82	;'R'
  1014  00FF2F  54                 	db	84	;'T'
  1015  00FF30  00                 	db	0
  1016  00FF31                     STR_44:
  1017                           
  1018                           ; BSR set to: 0
  1019  00FF31  61                 	db	97	;'a'
  1020  00FF32  64                 	db	100	;'d'
  1021  00FF33  6A                 	db	106	;'j'
  1022  00FF34  75                 	db	117	;'u'
  1023  00FF35  73                 	db	115	;'s'
  1024  00FF36  74                 	db	116	;'t'
  1025  00FF37  5F                 	db	95	;'_'
  1026  00FF38  74                 	db	116	;'t'
  1027  00FF39  69                 	db	105	;'i'
  1028  00FF3A  6D                 	db	109	;'m'
  1029  00FF3B  65                 	db	101	;'e'
  1030  00FF3C  00                 	db	0
  1031  00FF3D                     STR_4:
  1032                           
  1033                           ; BSR set to: 0
  1034  00FF3D  43                 	db	67	;'C'
  1035  00FF3E  65                 	db	101	;'e'
  1036  00FF3F  6E                 	db	110	;'n'
  1037  00FF40  74                 	db	116	;'t'
  1038  00FF41  65                 	db	101	;'e'
  1039  00FF42  72                 	db	114	;'r'
  1040  00FF43  20                 	db	32
  1041  00FF44  50                 	db	80	;'P'
  1042  00FF45  6F                 	db	111	;'o'
  1043  00FF46  72                 	db	114	;'r'
  1044  00FF47  74                 	db	116	;'t'
  1045  00FF48  00                 	db	0
  1046  00FF49                     STR_7:
  1047                           
  1048                           ; BSR set to: 0
  1049  00FF49  52                 	db	82	;'R'
  1050  00FF4A  49                 	db	73	;'I'
  1051  00FF4B  47                 	db	71	;'G'
  1052  00FF4C  48                 	db	72	;'H'
  1053  00FF4D  54                 	db	84	;'T'
  1054  00FF4E  20                 	db	32
  1055  00FF4F  50                 	db	80	;'P'
  1056  00FF50  4F                 	db	79	;'O'
  1057  00FF51  52                 	db	82	;'R'
  1058  00FF52  54                 	db	84	;'T'
  1059  00FF53  00                 	db	0
  1060  00FF54                     STR_77:
  1061                           
  1062                           ; BSR set to: 0
  1063  00FF54  70                 	db	112	;'p'
  1064  00FF55  72                 	db	114	;'r'
  1065  00FF56  69                 	db	105	;'i'
  1066  00FF57  6E                 	db	110	;'n'
  1067  00FF58  74                 	db	116	;'t'
  1068  00FF59  5F                 	db	95	;'_'
  1069  00FF5A  74                 	db	116	;'t'
  1070  00FF5B  69                 	db	105	;'i'
  1071  00FF5C  6D                 	db	109	;'m'
  1072  00FF5D  65                 	db	101	;'e'
  1073  00FF5E  00                 	db	0
  1074  00FF5F                     STR_6:
  1075                           
  1076                           ; BSR set to: 0
  1077  00FF5F  52                 	db	82	;'R'
  1078  00FF60  69                 	db	105	;'i'
  1079  00FF61  67                 	db	103	;'g'
  1080  00FF62  68                 	db	104	;'h'
  1081  00FF63  74                 	db	116	;'t'
  1082  00FF64  20                 	db	32
  1083  00FF65  50                 	db	80	;'P'
  1084  00FF66  6F                 	db	111	;'o'
  1085  00FF67  72                 	db	114	;'r'
  1086  00FF68  74                 	db	116	;'t'
  1087  00FF69  00                 	db	0
  1088  00FF6A                     STR_3:
  1089                           
  1090                           ; BSR set to: 0
  1091  00FF6A  4C                 	db	76	;'L'
  1092  00FF6B  45                 	db	69	;'E'
  1093  00FF6C  46                 	db	70	;'F'
  1094  00FF6D  54                 	db	84	;'T'
  1095  00FF6E  20                 	db	32
  1096  00FF6F  50                 	db	80	;'P'
  1097  00FF70  4F                 	db	79	;'O'
  1098  00FF71  52                 	db	82	;'R'
  1099  00FF72  54                 	db	84	;'T'
  1100  00FF73  00                 	db	0
  1101  00FF74                     STR_42:
  1102                           
  1103                           ; BSR set to: 0
  1104  00FF74  61                 	db	97	;'a'
  1105  00FF75  75                 	db	117	;'u'
  1106  00FF76  74                 	db	116	;'t'
  1107  00FF77  6F                 	db	111	;'o'
  1108  00FF78  5F                 	db	95	;'_'
  1109  00FF79  73                 	db	115	;'s'
  1110  00FF7A  74                 	db	116	;'t'
  1111  00FF7B  6F                 	db	111	;'o'
  1112  00FF7C  70                 	db	112	;'p'
  1113  00FF7D  00                 	db	0
  1114  00FF7E                     STR_2:
  1115                           
  1116                           ; BSR set to: 0
  1117  00FF7E  4C                 	db	76	;'L'
  1118  00FF7F  65                 	db	101	;'e'
  1119  00FF80  66                 	db	102	;'f'
  1120  00FF81  74                 	db	116	;'t'
  1121  00FF82  20                 	db	32
  1122  00FF83  50                 	db	80	;'P'
  1123  00FF84  6F                 	db	111	;'o'
  1124  00FF85  72                 	db	114	;'r'
  1125  00FF86  74                 	db	116	;'t'
  1126  00FF87  00                 	db	0
  1127  00FF88                     
  1128                           ; BSR set to: 0
  1129  00FF88  53                 	db	83	;'S'
  1130  00FF89  4C                 	db	76	;'L'
  1131  00FF8A  45                 	db	69	;'E'
  1132  00FF8B  45                 	db	69	;'E'
  1133  00FF8C  50                 	db	80	;'P'
  1134  00FF8D  49                 	db	73	;'I'
  1135  00FF8E  4E                 	db	78	;'N'
  1136  00FF8F  47                 	db	71	;'G'
  1137  00FF90  00                 	db	0
  1138  00FF91                     STR_40:
  1139                           
  1140                           ; BSR set to: 0
  1141  00FF91  73                 	db	115	;'s'
  1142  00FF92  65                 	db	101	;'e'
  1143  00FF93  74                 	db	116	;'t'
  1144  00FF94  74                 	db	116	;'t'
  1145  00FF95  69                 	db	105	;'i'
  1146  00FF96  6E                 	db	110	;'n'
  1147  00FF97  67                 	db	103	;'g'
  1148  00FF98  73                 	db	115	;'s'
  1149  00FF99  00                 	db	0
  1150  00FF9A                     STR_27:
  1151                           
  1152                           ; BSR set to: 0
  1153  00FF9A  09                 	db	9
  1154  00FF9B  65                 	db	101	;'e'
  1155  00FF9C  72                 	db	114	;'r'
  1156  00FF9D  72                 	db	114	;'r'
  1157  00FF9E  6F                 	db	111	;'o'
  1158  00FF9F  72                 	db	114	;'r'
  1159  00FFA0  0A                 	db	10
  1160  00FFA1  00                 	db	0
  1161  00FFA2                     STR_51:
  1162                           
  1163                           ; BSR set to: 0
  1164  00FFA2  64                 	db	100	;'d'
  1165  00FFA3  69                 	db	105	;'i'
  1166  00FFA4  73                 	db	115	;'s'
  1167  00FFA5  70                 	db	112	;'p'
  1168  00FFA6  6C                 	db	108	;'l'
  1169  00FFA7  61                 	db	97	;'a'
  1170  00FFA8  79                 	db	121	;'y'
  1171  00FFA9  00                 	db	0
  1172  00FFAA                     STR_61:
  1173                           
  1174                           ; BSR set to: 0
  1175  00FFAA  63                 	db	99	;'c'
  1176  00FFAB  65                 	db	101	;'e'
  1177  00FFAC  6E                 	db	110	;'n'
  1178  00FFAD  74                 	db	116	;'t'
  1179  00FFAE  65                 	db	101	;'e'
  1180  00FFAF  72                 	db	114	;'r'
  1181  00FFB0  00                 	db	0
  1182  00FFB1                     STR_69:
  1183                           
  1184                           ; BSR set to: 0
  1185  00FFB1  72                 	db	114	;'r'
  1186  00FFB2  69                 	db	105	;'i'
  1187  00FFB3  67                 	db	103	;'g'
  1188  00FFB4  68                 	db	104	;'h'
  1189  00FFB5  74                 	db	116	;'t'
  1190  00FFB6  00                 	db	0
  1191  00FFB7                     STR_31:
  1192                           
  1193                           ; BSR set to: 0
  1194  00FFB7  6D                 	db	109	;'m'
  1195  00FFB8  41                 	db	65	;'A'
  1196  00FFB9  68                 	db	104	;'h'
  1197  00FFBA  0A                 	db	10
  1198  00FFBB  00                 	db	0
  1199  00FFBC                     STR_37:
  1200                           
  1201                           ; BSR set to: 0
  1202  00FFBC  68                 	db	104	;'h'
  1203  00FFBD  65                 	db	101	;'e'
  1204  00FFBE  6C                 	db	108	;'l'
  1205  00FFBF  70                 	db	112	;'p'
  1206  00FFC0  00                 	db	0
  1207  00FFC1                     STR_53:
  1208                           
  1209                           ; BSR set to: 0
  1210  00FFC1  6C                 	db	108	;'l'
  1211  00FFC2  65                 	db	101	;'e'
  1212  00FFC3  66                 	db	102	;'f'
  1213  00FFC4  74                 	db	116	;'t'
  1214  00FFC5  00                 	db	0
  1215  00FFC6                     STR_80:
  1216                           
  1217                           ; BSR set to: 0
  1218  00FFC6  08                 	db	8
  1219  00FFC7  20                 	db	32
  1220  00FFC8  08                 	db	8
  1221  00FFC9  00                 	db	0
  1222  00FFCA                     STR_10:
  1223                           
  1224                           ; BSR set to: 0
  1225  00FFCA  6D                 	db	109	;'m'
  1226  00FFCB  41                 	db	65	;'A'
  1227  00FFCC  68                 	db	104	;'h'
  1228  00FFCD  00                 	db	0
  1229  00FFCE                     STR_41:
  1230                           
  1231                           ; BSR set to: 0
  1232  00FFCE  73                 	db	115	;'s'
  1233  00FFCF  65                 	db	101	;'e'
  1234  00FFD0  74                 	db	116	;'t'
  1235  00FFD1  00                 	db	0
  1236  00FFD2                     STR_79:
  1237                           
  1238                           ; BSR set to: 0
  1239  00FFD2  0A                 	db	10
  1240  00FFD3  0A                 	db	10
  1241  00FFD4  00                 	db	0
  1242  00FFD5                     STR_29:
  1243                           
  1244                           ; BSR set to: 0
  1245  00FFD5  41                 	db	65	;'A'
  1246  00FFD6  0A                 	db	10
  1247  00FFD7  00                 	db	0
  1248  00FFD8                     STR_1:
  1249                           
  1250                           ; BSR set to: 0
  1251  00FFD8  20                 	db	32
  1252  00FFD9  20                 	db	32
  1253  00FFDA  00                 	db	0
  1254  00FFDB                     STR_25:
  1255                           
  1256                           ; BSR set to: 0
  1257  00FFDB  29                 	db	41
  1258  00FFDC  20                 	db	32
  1259  00FFDD  00                 	db	0
  1260  00FFDE                     STR_11:
  1261                           
  1262                           ; BSR set to: 0
  1263  00FFDE  64                 	db	100	;'d'
  1264  00FFDF  20                 	db	32
  1265  00FFE0  00                 	db	0
  1266  00FFE1                     STR_12:
  1267                           
  1268                           ; BSR set to: 0
  1269  00FFE1  68                 	db	104	;'h'
  1270  00FFE2  20                 	db	32
  1271  00FFE3  00                 	db	0
  1272  00FFE4                     STR_13:
  1273                           
  1274                           ; BSR set to: 0
  1275  00FFE4  6D                 	db	109	;'m'
  1276  00FFE5  20                 	db	32
  1277  00FFE6  00                 	db	0
  1278  00FFE7                     STR_24:
  1279                           
  1280                           ; BSR set to: 0
  1281  00FFE7  20                 	db	32
  1282  00FFE8  28                 	db	40
  1283  00FFE9  00                 	db	0
  1284  00FFEA                     STR_58:
  1285                           
  1286                           ; BSR set to: 0
  1287  00FFEA  69                 	db	105	;'i'
  1288  00FFEB  63                 	db	99	;'c'
  1289  00FFEC  00                 	db	0
  1290  00FFED                     STR_43:
  1291                           
  1292                           ; BSR set to: 0
  1293  00FFED  61                 	db	97	;'a'
  1294  00FFEE  74                 	db	116	;'t'
  1295  00FFEF  00                 	db	0
  1296  00FFF0                     STR_60:
  1297                           
  1298                           ; BSR set to: 0
  1299  00FFF0  69                 	db	105	;'i'
  1300  00FFF1  74                 	db	116	;'t'
  1301  00FFF2  00                 	db	0
  1302  00FFF3                     STR_21:
  1303                           
  1304                           ; BSR set to: 0
  1305  00FFF3  09                 	db	9
  1306  00FFF4  00                 	db	0
  1307  00FFF5                     STR_26:
  1308                           
  1309                           ; BSR set to: 0
  1310  00FFF5  2D                 	db	45
  1311  00FFF6  00                 	db	0
  1312  00FFF7                     STR_22:
  1313                           
  1314                           ; BSR set to: 0
  1315  00FFF7  2F                 	db	47
  1316  00FFF8  00                 	db	0
  1317  00FFF9                     STR_46:
  1318                           
  1319                           ; BSR set to: 0
  1320  00FFF9  4D                 	db	77	;'M'
  1321  00FFFA  00                 	db	0
  1322  00FFFB                     STR_54:
  1323                           
  1324                           ; BSR set to: 0
  1325  00FFFB  6C                 	db	108	;'l'
  1326  00FFFC  00                 	db	0
  1327  00FFFD                     STR_49:
  1328                           
  1329                           ; BSR set to: 0
  1330  00FFFD  6D                 	db	109	;'m'
  1331  00FFFE  00                 	db	0
  1332  0000                     
  1333                           ; #config settings
  1334  00FFFF  00                 	db	0	; dummy byte at the end
  1335  0000                     
  1336                           	psect	cinit
  1337  014F90                     __pcinit:
  1338                           	opt stack 0
  1339  014F90                     start_initialization:
  1340                           	opt stack 0
  1341  014F90                     __initialization:
  1342                           	opt stack 0
  1343                           
  1344                           ; Clear objects allocated to BANK3 (245 bytes)
  1345  014F90  EE03  F000         	lfsr	0,__pbssBANK3
  1346  014F94  0EF5               	movlw	245
  1347  014F96                     clear_0:
  1348  014F96  6AEE               	clrf	postinc0,c
  1349  014F98  06E8               	decf	wreg,f,c
  1350  014F9A  E1FD               	bnz	clear_0
  1351                           
  1352                           ; Clear objects allocated to BANK2 (6 bytes)
  1353  014F9C  0102               	movlb	2
  1354  014F9E  6BFF               	clrf	(__pbssBANK2+5)& (0+255),b
  1355  014FA0  6BFE               	clrf	(__pbssBANK2+4)& (0+255),b
  1356  014FA2  6BFD               	clrf	(__pbssBANK2+3)& (0+255),b
  1357  014FA4  6BFC               	clrf	(__pbssBANK2+2)& (0+255),b
  1358  014FA6  6BFB               	clrf	(__pbssBANK2+1)& (0+255),b
  1359  014FA8  6BFA               	clrf	__pbssBANK2& (0+255),b
  1360                           
  1361                           ; Clear objects allocated to BANK1 (2 bytes)
  1362  014FAA  0101               	movlb	1
  1363  014FAC  6BFF               	clrf	(__pbssBANK1+1)& (0+255),b
  1364  014FAE  6BFE               	clrf	__pbssBANK1& (0+255),b
  1365                           
  1366                           ; Clear objects allocated to BANK0 (89 bytes)
  1367  014FB0  EE00  F060         	lfsr	0,__pbssBANK0
  1368  014FB4  0E59               	movlw	89
  1369  014FB6                     clear_1:
  1370  014FB6  6AEE               	clrf	postinc0,c
  1371  014FB8  06E8               	decf	wreg,f,c
  1372  014FBA  E1FD               	bnz	clear_1
  1373                           
  1374                           ; Clear objects allocated to COMRAM (42 bytes)
  1375  014FBC  EE00  F02D         	lfsr	0,__pbssCOMRAM
  1376  014FC0  0E2A               	movlw	42
  1377  014FC2                     clear_2:
  1378  014FC2  6AEE               	clrf	postinc0,c
  1379  014FC4  06E8               	decf	wreg,f,c
  1380  014FC6  E1FD               	bnz	clear_2
  1381                           
  1382                           ; Initialize objects allocated to BANK1 (3 bytes)
  1383                           ; load TBLPTR registers with __pidataBANK1
  1384  014FC8  0EE8               	movlw	low __pidataBANK1
  1385  014FCA  6EF6               	movwf	tblptrl,c
  1386  014FCC  0E5F               	movlw	high __pidataBANK1
  1387  014FCE  6EF7               	movwf	tblptrh,c
  1388  014FD0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1389  014FD2  6EF8               	movwf	tblptru,c
  1390  014FD4  0009               	tblrd		*+	;fetch initializer
  1391  014FD6  CFF5 F1FB          	movff	tablat,__pdataBANK1
  1392  014FDA  0009               	tblrd		*+	;fetch initializer
  1393  014FDC  CFF5 F1FC          	movff	tablat,__pdataBANK1+1
  1394  014FE0  0009               	tblrd		*+	;fetch initializer
  1395  014FE2  CFF5 F1FD          	movff	tablat,__pdataBANK1+2
  1396                           
  1397                           ; Initialize objects allocated to BANK0 (1 bytes)
  1398                           ; load TBLPTR registers with __pidataBANK0
  1399  014FE6  0EEC               	movlw	low __pidataBANK0
  1400  014FE8  6EF6               	movwf	tblptrl,c
  1401  014FEA  0E5F               	movlw	high __pidataBANK0
  1402  014FEC  6EF7               	movwf	tblptrh,c
  1403  014FEE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1404  014FF0  6EF8               	movwf	tblptru,c
  1405  014FF2  0009               	tblrd		*+	;fetch initializer
  1406  014FF4  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1407                           
  1408                           ; Initialize objects allocated to COMRAM (1 bytes)
  1409                           ; load TBLPTR registers with __pidataCOMRAM
  1410  014FF8  0EEB               	movlw	low __pidataCOMRAM
  1411  014FFA  6EF6               	movwf	tblptrl,c
  1412  014FFC  0E5F               	movlw	high __pidataCOMRAM
  1413  014FFE  6EF7               	movwf	tblptrh,c
  1414  015000  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1415  015002  6EF8               	movwf	tblptru,c
  1416  015004  0009               	tblrd		*+	;fetch initializer
  1417  015006  CFF5 F057          	movff	tablat,__pdataCOMRAM
  1418  01500A                     end_of_initialization:
  1419                           	opt stack 0
  1420  01500A                     __end_of__initialization:
  1421                           	opt stack 0
  1422  01500A  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1423  01500C  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1424  01500E  0100               	movlb	0
  1425  015010  EFF5  F091         	goto	_main	;jump to C main() function
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           
  1433                           	psect	bssCOMRAM
  1434  00002D                     __pbssCOMRAM:
  1435                           	opt stack 0
  1436  00002D                     _I:
  1437                           	opt stack 0
  1438  00002D                     	ds	6
  1439  000033                     ISR@cnt_t0:
  1440                           	opt stack 0
  1441  000033                     	ds	2
  1442  000035                     _ctmu_valuem:
  1443                           	opt stack 0
  1444  000035                     	ds	2
  1445  000037                     _pBDTEntryEP0OutCurrent:
  1446                           	opt stack 0
  1447  000037                     	ds	2
  1448  000039                     _pBDTEntryEP0OutNext:
  1449                           	opt stack 0
  1450  000039                     	ds	2
  1451  00003B                     _pDst:
  1452                           	opt stack 0
  1453  00003B                     	ds	2
  1454  00003D                     millis_timer@cnt:
  1455                           	opt stack 0
  1456  00003D                     	ds	2
  1457  00003F                     ISR@cnt_t1:
  1458                           	opt stack 0
  1459  00003F                     	ds	1
  1460  000040                     _BothEP0OutUOWNsSet:
  1461                           	opt stack 0
  1462  000040                     	ds	1
  1463  000041                     _RemoteWakeup:
  1464                           	opt stack 0
  1465  000041                     	ds	1
  1466  000042                     _USBDeferINDataStagePackets:
  1467                           	opt stack 0
  1468  000042                     	ds	1
  1469  000043                     _USBDeferOUTDataStagePackets:
  1470                           	opt stack 0
  1471  000043                     	ds	1
  1472  000044                     _USBDeferStatusStagePacket:
  1473                           	opt stack 0
  1474  000044                     	ds	1
  1475  000045                     _USBDeviceState:
  1476                           	opt stack 0
  1477  000045                     	ds	1
  1478  000046                     _USBStatusStageEnabledFlag1:
  1479                           	opt stack 0
  1480  000046                     	ds	1
  1481  000047                     _USBStatusStageEnabledFlag2:
  1482                           	opt stack 0
  1483  000047                     	ds	1
  1484  000048                     _USBStatusStageTimeoutCounter:
  1485                           	opt stack 0
  1486  000048                     	ds	1
  1487  000049                     _controlTransferState:
  1488                           	opt stack 0
  1489  000049                     	ds	1
  1490  00004A                     _control_signal_bitmap:
  1491                           	opt stack 0
  1492  00004A                     	ds	1
  1493  00004B                     _cut_time_flag:
  1494                           	opt stack 0
  1495  00004B                     	ds	1
  1496  00004C                     _display_flag:
  1497                           	opt stack 0
  1498  00004C                     	ds	1
  1499  00004D                     _endpoint_number:
  1500                           	opt stack 0
  1501  00004D                     	ds	1
  1502  00004E                     _shortPacketStatus:
  1503                           	opt stack 0
  1504  00004E                     	ds	1
  1505  00004F                     _time_change_flag:
  1506                           	opt stack 0
  1507  00004F                     	ds	1
  1508  000050                     _delay_display:
  1509                           	opt stack 0
  1510  000050                     	ds	3
  1511  000053                     _USBAlternateInterface:
  1512                           	opt stack 0
  1513  000053                     	ds	2
  1514  000055                     _USBActiveConfiguration:
  1515                           	opt stack 0
  1516  000055                     	ds	1
  1517  000056                     _USTATcopy:
  1518                           	opt stack 0
  1519  000056                     	ds	1
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           
  1527                           	psect	dataCOMRAM
  1528  000057                     __pdataCOMRAM:
  1529                           	opt stack 0
  1530  000057                     sleep_loop@prev_power_sw:
  1531                           	opt stack 0
  1532  000057                     	ds	1
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           
  1540                           	psect	bssBANK0
  1541  000060                     __pbssBANK0:
  1542                           	opt stack 0
  1543  000060                     _charge_time:
  1544                           	opt stack 0
  1545  000060                     	ds	12
  1546  00006C                     _outPipes:
  1547                           	opt stack 0
  1548  00006C                     	ds	9
  1549  000075                     _inPipes:
  1550                           	opt stack 0
  1551  000075                     	ds	6
  1552  00007B                     _pBDTEntryIn:
  1553                           	opt stack 0
  1554  00007B                     	ds	6
  1555  000081                     _pBDTEntryOut:
  1556                           	opt stack 0
  1557  000081                     	ds	6
  1558  000087                     _auto_cut_ON:
  1559                           	opt stack 0
  1560  000087                     	ds	3
  1561  00008A                     _ep_data_in:
  1562                           	opt stack 0
  1563  00008A                     	ds	3
  1564  00008D                     _ep_data_out:
  1565                           	opt stack 0
  1566  00008D                     	ds	3
  1567  000090                     _pCDCDst:
  1568                           	opt stack 0
  1569  000090                     	ds	3
  1570  000093                     _pCDCSrc:
  1571                           	opt stack 0
  1572  000093                     	ds	3
  1573  000096                     _CDCDataInHandle:
  1574                           	opt stack 0
  1575  000096                     	ds	2
  1576  000098                     _CDCDataOutHandle:
  1577                           	opt stack 0
  1578  000098                     	ds	2
  1579  00009A                     _ctmu_value0:
  1580                           	opt stack 0
  1581  00009A                     	ds	2
  1582  00009C                     _ctmu_value1:
  1583                           	opt stack 0
  1584  00009C                     	ds	2
  1585  00009E                     _ctmu_value2:
  1586                           	opt stack 0
  1587  00009E                     	ds	2
  1588  0000A0                     RTCC_loop@prev_halfsec:
  1589                           	opt stack 0
  1590  0000A0                     	ds	1
  1591  0000A1                     _USBBusIsSuspended:
  1592                           	opt stack 0
  1593  0000A1                     	ds	1
  1594  0000A2                     _cdc_mem_type:
  1595                           	opt stack 0
  1596  0000A2                     	ds	1
  1597  0000A3                     _cdc_rx_len:
  1598                           	opt stack 0
  1599  0000A3                     	ds	1
  1600  0000A4                     _cdc_trf_state:
  1601                           	opt stack 0
  1602  0000A4                     	ds	1
  1603  0000A5                     _cdc_tx_len:
  1604                           	opt stack 0
  1605  0000A5                     	ds	1
  1606  0000A6                     _colon:
  1607                           	opt stack 0
  1608  0000A6                     	ds	1
  1609  0000A7                     _ctmu_flag:
  1610                           	opt stack 0
  1611  0000A7                     	ds	1
  1612  0000A8                     _edit_flag:
  1613                           	opt stack 0
  1614  0000A8                     	ds	1
  1615  0000A9                     _halfsec:
  1616                           	opt stack 0
  1617  0000A9                     	ds	1
  1618  0000AA                     _print_content:
  1619                           	opt stack 0
  1620  0000AA                     	ds	1
  1621  0000AB                     _print_port:
  1622                           	opt stack 0
  1623  0000AB                     	ds	1
  1624  0000AC                     _sleep_flag:
  1625                           	opt stack 0
  1626  0000AC                     	ds	1
  1627  0000AD                     epoch_to_caltime@year_cache:
  1628                           	opt stack 0
  1629  0000AD                     	ds	1
  1630  0000AE                     _caltime_now:
  1631                           	opt stack 0
  1632  0000AE                     	ds	7
  1633  0000B5                     _epoch_now:
  1634                           	opt stack 0
  1635  0000B5                     	ds	4
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           
  1643                           	psect	dataBANK0
  1644  0000FF                     __pdataBANK0:
  1645                           	opt stack 0
  1646  0000FF                     epoch_to_caltime@month_cache:
  1647                           	opt stack 0
  1648  0000FF                     	ds	1
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           
  1656                           	psect	bssBANK1
  1657  0001FE                     __pbssBANK1:
  1658                           	opt stack 0
  1659  0001FE                     USBCBSendResume@delay_count:
  1660                           	opt stack 0
  1661  0001FE                     	ds	2
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           
  1669                           	psect	dataBANK1
  1670  0001FB                     __pdataBANK1:
  1671                           	opt stack 0
  1672  0001FB                     I2C_LCD_SetCursor@F8672:
  1673                           	opt stack 0
  1674  0001FB                     	ds	2
  1675  0001FD                     rx_loop@comm_buf_init:
  1676                           	opt stack 0
  1677  0001FD                     	ds	1
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           
  1685                           	psect	bssBANK2
  1686  0002FA                     __pbssBANK2:
  1687                           	opt stack 0
  1688  0002FA                     epoch_to_caltime@day_cache:
  1689                           	opt stack 0
  1690  0002FA                     	ds	2
  1691  0002FC                     _ct0:
  1692                           	opt stack 0
  1693  0002FC                     	ds	4
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           
  1701                           	psect	bssBANK3
  1702  000300                     __pbssBANK3:
  1703                           	opt stack 0
  1704  000300                     _S:
  1705                           	opt stack 0
  1706  000300                     	ds	12
  1707  00030C                     _s:
  1708                           	opt stack 0
  1709  00030C                     	ds	12
  1710  000318                     _cdc_notice:
  1711                           	opt stack 0
  1712  000318                     	ds	10
  1713  000322                     _ctmu_value:
  1714                           	opt stack 0
  1715  000322                     	ds	6
  1716  000328                     _cut_cnt:
  1717                           	opt stack 0
  1718  000328                     	ds	6
  1719  00032E                     _BaudRateGen:
  1720                           	opt stack 0
  1721  00032E                     	ds	4
  1722  000332                     _ms:
  1723                           	opt stack 0
  1724  000332                     	ds	4
  1725  000336                     _d1:
  1726                           	opt stack 0
  1727  000336                     	ds	3
  1728  000339                     _out_flag:
  1729                           	opt stack 0
  1730  000339                     	ds	3
  1731  00033C                     lchika@cnt:
  1732                           	opt stack 0
  1733  00033C                     	ds	3
  1734  00033F                     lchika@cntf:
  1735                           	opt stack 0
  1736  00033F                     	ds	3
  1737  000342                     _cdc_data_rx:
  1738                           	opt stack 0
  1739  000342                     	ds	64
  1740  000382                     _cdc_data_tx:
  1741                           	opt stack 0
  1742  000382                     	ds	64
  1743  0003C2                     _dummy_encapsulated_cmd_response:
  1744                           	opt stack 0
  1745  0003C2                     	ds	8
  1746  0003CA                     _rx_buf:
  1747                           	opt stack 0
  1748  0003CA                     	ds	8
  1749  0003D2                     _tx_buf:
  1750                           	opt stack 0
  1751  0003D2                     	ds	8
  1752  0003DA                     rx_loop@comm_buf:
  1753                           	opt stack 0
  1754  0003DA                     	ds	8
  1755  0003E2                     _line_coding:
  1756                           	opt stack 0
  1757  0003E2                     	ds	7
  1758  0003E9                     _ct1:
  1759                           	opt stack 0
  1760  0003E9                     	ds	4
  1761  0003ED                     _ct2:
  1762                           	opt stack 0
  1763  0003ED                     	ds	4
  1764  0003F1                     _ctm:
  1765                           	opt stack 0
  1766  0003F1                     	ds	4
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           
  1774                           	psect	cstackBANK2
  1775  000200                     __pcstackBANK2:
  1776                           	opt stack 0
  1777  000200                     rx_loop@opland1:
  1778                           	opt stack 0
  1779  000200                     main_init@rxbuf:
  1780                           	opt stack 0
  1781                           
  1782                           ; 250 bytes @ 0x0
  1783  000200                     	ds	100
  1784  000264                     rx_loop@opland2:
  1785                           	opt stack 0
  1786                           
  1787                           ; 100 bytes @ 0x64
  1788  000264                     	ds	150
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           
  1796                           	psect	cstackBANK1
  1797  000100                     __pcstackBANK1:
  1798                           	opt stack 0
  1799  000100                     display_LCD@str:
  1800                           	opt stack 0
  1801  000100                     rx_loop@buf:
  1802                           	opt stack 0
  1803  000100                     main_init@txbuf:
  1804                           	opt stack 0
  1805                           
  1806                           ; 250 bytes @ 0x0
  1807  000100                     	ds	10
  1808  00010A                     _display_LCD$5323:
  1809                           	opt stack 0
  1810                           
  1811                           ; 4 bytes @ 0xA
  1812  00010A                     	ds	90
  1813  000164                     rx_loop@opcode:
  1814                           	opt stack 0
  1815                           
  1816                           ; 100 bytes @ 0x64
  1817  000164                     	ds	100
  1818  0001C8                     _rx_loop$5326:
  1819                           	opt stack 0
  1820                           
  1821                           ; 2 bytes @ 0xC8
  1822  0001C8                     	ds	2
  1823  0001CA                     rx_loop@ascii:
  1824                           	opt stack 0
  1825                           
  1826                           ; 1 bytes @ 0xCA
  1827  0001CA                     	ds	1
  1828  0001CB                     rx_loop@i:
  1829                           	opt stack 0
  1830                           
  1831                           ; 1 bytes @ 0xCB
  1832  0001CB                     	ds	47
  1833  0001FA                     main@i:
  1834                           	opt stack 0
  1835                           
  1836                           ; 1 bytes @ 0xFA
  1837  0001FA                     	ds	1
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           
  1845                           	psect	cstackBANK0
  1846  0000B9                     __pcstackBANK0:
  1847                           	opt stack 0
  1848  0000B9                     ??_timer0_init:
  1849  0000B9                     ??_timer3_init:
  1850  0000B9                     ??_I2C_IdleCheck:
  1851  0000B9                     ??_x_to_d:
  1852  0000B9                     ?_ADC:
  1853                           	opt stack 0
  1854  0000B9                     ?_ringbuf_num:
  1855                           	opt stack 0
  1856  0000B9                     ?_sw_flag_read:
  1857                           	opt stack 0
  1858  0000B9                     ?_USBTransferOnePacket:
  1859                           	opt stack 0
  1860  0000B9                     ?___awdiv:
  1861                           	opt stack 0
  1862  0000B9                     ?___awmod:
  1863                           	opt stack 0
  1864  0000B9                     ?___lwmod:
  1865                           	opt stack 0
  1866  0000B9                     ?___lldiv:
  1867                           	opt stack 0
  1868  0000B9                     timer1_init@clock_select:
  1869                           	opt stack 0
  1870  0000B9                     ADC_init@p_ref:
  1871                           	opt stack 0
  1872  0000B9                     OUT@value:
  1873                           	opt stack 0
  1874  0000B9                     IN@b:
  1875                           	opt stack 0
  1876  0000B9                     LED_OUT@value:
  1877                           	opt stack 0
  1878  0000B9                     _is_usb_available$2687:
  1879                           	opt stack 0
  1880  0000B9                     USBTransferOnePacket@dir:
  1881                           	opt stack 0
  1882  0000B9                     ringbuf_init@rb:
  1883                           	opt stack 0
  1884  0000B9                     ringbuf_num@rb:
  1885                           	opt stack 0
  1886  0000B9                     ringbuf_delete@rb:
  1887                           	opt stack 0
  1888  0000B9                     Delay_ms@ms:
  1889                           	opt stack 0
  1890  0000B9                     delay_set@d:
  1891                           	opt stack 0
  1892  0000B9                     my_strcmp@str1:
  1893                           	opt stack 0
  1894  0000B9                     sw_flag_read@bit_and:
  1895                           	opt stack 0
  1896  0000B9                     sw_flag_clear@bit_and:
  1897                           	opt stack 0
  1898  0000B9                     putUSBUSART@data:
  1899                           	opt stack 0
  1900  0000B9                     ___awdiv@dividend:
  1901                           	opt stack 0
  1902  0000B9                     ___awmod@dividend:
  1903                           	opt stack 0
  1904  0000B9                     ___lwmod@dividend:
  1905                           	opt stack 0
  1906  0000B9                     memset@p1:
  1907                           	opt stack 0
  1908  0000B9                     ___lldiv@dividend:
  1909                           	opt stack 0
  1910                           
  1911                           ; 4 bytes @ 0x0
  1912  0000B9                     	ds	1
  1913  0000BA                     ??_timer1_init:
  1914  0000BA                     timer0_init@prescaler:
  1915                           	opt stack 0
  1916  0000BA                     timer3_init@prescaler:
  1917                           	opt stack 0
  1918  0000BA                     I2C_IdleCheck@mask:
  1919                           	opt stack 0
  1920  0000BA                     x_to_d@hex:
  1921                           	opt stack 0
  1922  0000BA                     OUT@b:
  1923                           	opt stack 0
  1924  0000BA                     LED_OUT@b:
  1925                           	opt stack 0
  1926  0000BA                     USBTransferOnePacket@data:
  1927                           	opt stack 0
  1928                           
  1929                           ; 2 bytes @ 0x1
  1930  0000BA                     	ds	1
  1931  0000BB                     ??_ADC:
  1932  0000BB                     ??_ringbuf_num:
  1933  0000BB                     ??_Delay_ms:
  1934  0000BB                     timer1_init@prescaler:
  1935                           	opt stack 0
  1936  0000BB                     I2C_Start@rw:
  1937                           	opt stack 0
  1938  0000BB                     I2C_Send@data:
  1939                           	opt stack 0
  1940  0000BB                     sw_flag_read@port:
  1941                           	opt stack 0
  1942  0000BB                     sw_flag_clear@port:
  1943                           	opt stack 0
  1944  0000BB                     putUSBUSART@length:
  1945                           	opt stack 0
  1946  0000BB                     ringbuf_init@internal_buf:
  1947                           	opt stack 0
  1948  0000BB                     delay_set@value:
  1949                           	opt stack 0
  1950  0000BB                     RTCC_to_caltime@ct:
  1951                           	opt stack 0
  1952  0000BB                     my_strcmp@str2:
  1953                           	opt stack 0
  1954  0000BB                     ___awdiv@divisor:
  1955                           	opt stack 0
  1956  0000BB                     ___awmod@divisor:
  1957                           	opt stack 0
  1958  0000BB                     ___lwmod@divisor:
  1959                           	opt stack 0
  1960  0000BB                     memset@c:
  1961                           	opt stack 0
  1962                           
  1963                           ; 2 bytes @ 0x2
  1964  0000BB                     	ds	1
  1965  0000BC                     ADC@ch:
  1966                           	opt stack 0
  1967  0000BC                     I2C_Start@adrs:
  1968                           	opt stack 0
  1969  0000BC                     USBTransferOnePacket@len:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0x3
  1973  0000BC                     	ds	1
  1974  0000BD                     ??_my_strcmp:
  1975  0000BD                     I2C_LCD_Command@c:
  1976                           	opt stack 0
  1977  0000BD                     I2C_LCD_Putc@c:
  1978                           	opt stack 0
  1979  0000BD                     RTCC_to_caltime@dumy:
  1980                           	opt stack 0
  1981  0000BD                     port_loop@i:
  1982                           	opt stack 0
  1983  0000BD                     USBTransferOnePacket@ep:
  1984                           	opt stack 0
  1985  0000BD                     ___awdiv@counter:
  1986                           	opt stack 0
  1987  0000BD                     ___awmod@counter:
  1988                           	opt stack 0
  1989  0000BD                     ___lwmod@counter:
  1990                           	opt stack 0
  1991  0000BD                     ringbuf_init@bufsize:
  1992                           	opt stack 0
  1993  0000BD                     I2C_LCD_Puts@s:
  1994                           	opt stack 0
  1995  0000BD                     memset@n:
  1996                           	opt stack 0
  1997  0000BD                     ___lldiv@divisor:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0x4
  2001  0000BD                     	ds	1
  2002  0000BE                     I2C_LCD_Command@ans:
  2003                           	opt stack 0
  2004  0000BE                     I2C_LCD_Putc@ans:
  2005                           	opt stack 0
  2006  0000BE                     ___awdiv@sign:
  2007                           	opt stack 0
  2008  0000BE                     ___awmod@sign:
  2009                           	opt stack 0
  2010  0000BE                     USBTransferOnePacket@handle:
  2011                           	opt stack 0
  2012                           
  2013                           ; 2 bytes @ 0x5
  2014  0000BE                     	ds	1
  2015  0000BF                     ??_I2C_LCD_Clear:
  2016  0000BF                     ??_I2C_LCD_Puts:
  2017  0000BF                     I2C_LCD_SetCursor@row:
  2018                           	opt stack 0
  2019  0000BF                     month_length@month:
  2020                           	opt stack 0
  2021  0000BF                     ___awdiv@quotient:
  2022                           	opt stack 0
  2023  0000BF                     memset@p:
  2024                           	opt stack 0
  2025                           
  2026                           ; 2 bytes @ 0x6
  2027  0000BF                     	ds	1
  2028  0000C0                     ??_CDCTxService:
  2029  0000C0                     ??_month_length:
  2030  0000C0                     I2C_LCD_SetCursor@row_offsets:
  2031                           	opt stack 0
  2032  0000C0                     I2C_LCD_Puts@ans:
  2033                           	opt stack 0
  2034  0000C0                     getsUSBUSART@buffer:
  2035                           	opt stack 0
  2036                           
  2037                           ; 2 bytes @ 0x7
  2038  0000C0                     	ds	1
  2039  0000C1                     d_to_x@dec:
  2040                           	opt stack 0
  2041  0000C1                     USBDeviceInit@i:
  2042                           	opt stack 0
  2043  0000C1                     ringbuf_put@rb:
  2044                           	opt stack 0
  2045  0000C1                     ringbuf_pop@rb:
  2046                           	opt stack 0
  2047  0000C1                     ringbuf_backspace@rb:
  2048                           	opt stack 0
  2049  0000C1                     _CDCTxService$4487:
  2050                           	opt stack 0
  2051  0000C1                     ___lldiv@quotient:
  2052                           	opt stack 0
  2053                           
  2054                           ; 4 bytes @ 0x8
  2055  0000C1                     	ds	1
  2056  0000C2                     I2C_LCD_SetCursor@col:
  2057                           	opt stack 0
  2058  0000C2                     getsUSBUSART@len:
  2059                           	opt stack 0
  2060  0000C2                     caltime_to_RTCC@ct:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x9
  2064  0000C2                     	ds	1
  2065  0000C3                     ??_getsUSBUSART:
  2066  0000C3                     ??_ringbuf_pop:
  2067  0000C3                     ??_ringbuf_backspace:
  2068  0000C3                     ringbuf_put@asciicode:
  2069                           	opt stack 0
  2070  0000C3                     CDCTxService@i:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0xA
  2074  0000C3                     	ds	1
  2075  0000C4                     ??_ringbuf_put:
  2076  0000C4                     month_length@year:
  2077                           	opt stack 0
  2078  0000C4                     CDCTxService@byte_to_send:
  2079                           	opt stack 0
  2080  0000C4                     _getsUSBUSART$4439:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0xB
  2084  0000C4                     	ds	1
  2085  0000C5                     ?_put_string_usb:
  2086                           	opt stack 0
  2087  0000C5                     ___lldiv@counter:
  2088                           	opt stack 0
  2089  0000C5                     put_string_usb@s:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0xC
  2093  0000C5                     	ds	1
  2094  0000C6                     ?_get_string_usb:
  2095                           	opt stack 0
  2096  0000C6                     ?_CTMU_read:
  2097                           	opt stack 0
  2098  0000C6                     ?___lmul:
  2099                           	opt stack 0
  2100  0000C6                     ?___llmod:
  2101                           	opt stack 0
  2102  0000C6                     get_string_usb@s:
  2103                           	opt stack 0
  2104  0000C6                     ___lmul@multiplier:
  2105                           	opt stack 0
  2106  0000C6                     ___llmod@dividend:
  2107                           	opt stack 0
  2108                           
  2109                           ; 4 bytes @ 0xD
  2110  0000C6                     	ds	1
  2111  0000C7                     ringbuf_pop@ret:
  2112                           	opt stack 0
  2113  0000C7                     put_string_usb@len:
  2114                           	opt stack 0
  2115                           
  2116                           ; 2 bytes @ 0xE
  2117  0000C7                     	ds	1
  2118  0000C8                     ??_CTMU_read:
  2119  0000C8                     tx_send@asciicode:
  2120                           	opt stack 0
  2121  0000C8                     tx_sends@asciicode:
  2122                           	opt stack 0
  2123  0000C8                     get_string_usb@len:
  2124                           	opt stack 0
  2125                           
  2126                           ; 2 bytes @ 0xF
  2127  0000C8                     	ds	1
  2128  0000C9                     CTMU_read@ch:
  2129                           	opt stack 0
  2130                           
  2131                           ; 1 bytes @ 0x10
  2132  0000C9                     	ds	1
  2133  0000CA                     ??_get_string_usb:
  2134  0000CA                     CTMU_read@sum:
  2135                           	opt stack 0
  2136  0000CA                     ___lmul@multiplicand:
  2137                           	opt stack 0
  2138  0000CA                     ___llmod@divisor:
  2139                           	opt stack 0
  2140                           
  2141                           ; 4 bytes @ 0x11
  2142  0000CA                     	ds	1
  2143  0000CB                     get_string_usb@rx_len:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x12
  2147  0000CB                     	ds	2
  2148  0000CD                     USB_loop@rx_len:
  2149                           	opt stack 0
  2150                           
  2151                           ; 2 bytes @ 0x14
  2152  0000CD                     	ds	1
  2153  0000CE                     CTMU_read@i:
  2154                           	opt stack 0
  2155  0000CE                     ___llmod@counter:
  2156                           	opt stack 0
  2157  0000CE                     ___lmul@product:
  2158                           	opt stack 0
  2159                           
  2160                           ; 4 bytes @ 0x15
  2161  0000CE                     	ds	1
  2162  0000CF                     ?___wmul:
  2163                           	opt stack 0
  2164  0000CF                     USB_loop@data:
  2165                           	opt stack 0
  2166  0000CF                     ___wmul@multiplier:
  2167                           	opt stack 0
  2168                           
  2169                           ; 2 bytes @ 0x16
  2170  0000CF                     	ds	2
  2171  0000D1                     ___wmul@multiplicand:
  2172                           	opt stack 0
  2173                           
  2174                           ; 2 bytes @ 0x18
  2175  0000D1                     	ds	1
  2176  0000D2                     ?_get_quot_rem:
  2177                           	opt stack 0
  2178  0000D2                     get_quot_rem@quot:
  2179                           	opt stack 0
  2180  0000D2                     caltime_to_epoch@ct:
  2181                           	opt stack 0
  2182                           
  2183                           ; 2 bytes @ 0x19
  2184  0000D2                     	ds	1
  2185  0000D3                     ___wmul@product:
  2186                           	opt stack 0
  2187                           
  2188                           ; 2 bytes @ 0x1A
  2189  0000D3                     	ds	1
  2190  0000D4                     get_quot_rem@div:
  2191                           	opt stack 0
  2192  0000D4                     caltime_to_epoch@ep:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x1B
  2196  0000D4                     	ds	1
  2197  0000D5                     ??_Auto_cut:
  2198  0000D5                     ?_my_atoi:
  2199                           	opt stack 0
  2200  0000D5                     ?___lwdiv:
  2201                           	opt stack 0
  2202  0000D5                     my_atoi@str:
  2203                           	opt stack 0
  2204  0000D5                     ___lwdiv@dividend:
  2205                           	opt stack 0
  2206                           
  2207                           ; 2 bytes @ 0x1C
  2208  0000D5                     	ds	1
  2209  0000D6                     ??_caltime_to_epoch:
  2210  0000D6                     get_quot_rem@num:
  2211                           	opt stack 0
  2212                           
  2213                           ; 4 bytes @ 0x1D
  2214  0000D6                     	ds	1
  2215  0000D7                     ??_my_atoi:
  2216  0000D7                     Auto_cut@i:
  2217                           	opt stack 0
  2218  0000D7                     ___lwdiv@divisor:
  2219                           	opt stack 0
  2220                           
  2221                           ; 2 bytes @ 0x1E
  2222  0000D7                     	ds	2
  2223  0000D9                     ___lwdiv@counter:
  2224                           	opt stack 0
  2225                           
  2226                           ; 1 bytes @ 0x20
  2227  0000D9                     	ds	1
  2228  0000DA                     caltime_to_epoch@year:
  2229                           	opt stack 0
  2230  0000DA                     epoch_to_caltime@ct:
  2231                           	opt stack 0
  2232  0000DA                     ___lwdiv@quotient:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x21
  2236  0000DA                     	ds	1
  2237  0000DB                     caltime_to_epoch@month_2017:
  2238                           	opt stack 0
  2239  0000DB                     my_atoi@ret:
  2240                           	opt stack 0
  2241                           
  2242                           ; 2 bytes @ 0x22
  2243  0000DB                     	ds	1
  2244  0000DC                     tx_sendn@value:
  2245                           	opt stack 0
  2246  0000DC                     button_timer_interrupt@bt:
  2247                           	opt stack 0
  2248  0000DC                     epoch_to_caltime@ep:
  2249                           	opt stack 0
  2250  0000DC                     my_utoa@str:
  2251                           	opt stack 0
  2252  0000DC                     caltime_to_epoch@epoch:
  2253                           	opt stack 0
  2254                           
  2255                           ; 4 bytes @ 0x23
  2256  0000DC                     	ds	2
  2257  0000DE                     ??_epoch_to_caltime:
  2258  0000DE                     tx_sendn@digits:
  2259                           	opt stack 0
  2260  0000DE                     button_timer_interrupt@sw_value:
  2261                           	opt stack 0
  2262  0000DE                     my_utoa@value:
  2263                           	opt stack 0
  2264                           
  2265                           ; 2 bytes @ 0x25
  2266  0000DE                     	ds	1
  2267  0000DF                     tx_sendn@i:
  2268                           	opt stack 0
  2269                           
  2270                           ; 1 bytes @ 0x26
  2271  0000DF                     	ds	1
  2272  0000E0                     caltime_to_epoch@month:
  2273                           	opt stack 0
  2274  0000E0                     my_utoa@digits:
  2275                           	opt stack 0
  2276  0000E0                     tx_sendn@temp:
  2277                           	opt stack 0
  2278  0000E0                     epoch_to_caltime@day_since_epoch:
  2279                           	opt stack 0
  2280                           
  2281                           ; 2 bytes @ 0x27
  2282  0000E0                     	ds	1
  2283  0000E1                     my_utoa@d:
  2284                           	opt stack 0
  2285  0000E1                     RTCC_from_RTCC@ct:
  2286                           	opt stack 0
  2287                           
  2288                           ; 2 bytes @ 0x28
  2289  0000E1                     	ds	1
  2290  0000E2                     epoch_to_caltime@day:
  2291                           	opt stack 0
  2292  0000E2                     my_utoa@v:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x29
  2296  0000E2                     	ds	1
  2297  0000E3                     RTCC_from_RTCC@ep:
  2298                           	opt stack 0
  2299                           
  2300                           ; 2 bytes @ 0x2A
  2301  0000E3                     	ds	1
  2302  0000E4                     epoch_to_caltime@year:
  2303                           	opt stack 0
  2304  0000E4                     display_dec@edit:
  2305                           	opt stack 0
  2306  0000E4                     tx_send_dec@edit:
  2307                           	opt stack 0
  2308  0000E4                     comm_d@port:
  2309                           	opt stack 0
  2310                           
  2311                           ; 1 bytes @ 0x2B
  2312  0000E4                     	ds	1
  2313  0000E5                     epoch_to_caltime@month:
  2314                           	opt stack 0
  2315  0000E5                     display_dec@str:
  2316                           	opt stack 0
  2317  0000E5                     tx_send_dec@str:
  2318                           	opt stack 0
  2319  0000E5                     comm_d@str:
  2320                           	opt stack 0
  2321                           
  2322                           ; 10 bytes @ 0x2C
  2323  0000E5                     	ds	1
  2324  0000E6                     epoch_to_caltime@num:
  2325                           	opt stack 0
  2326                           
  2327                           ; 4 bytes @ 0x2D
  2328  0000E6                     	ds	4
  2329  0000EA                     RTCC_from_caltime@ct:
  2330                           	opt stack 0
  2331  0000EA                     RTCC_from_epoch@ct:
  2332                           	opt stack 0
  2333                           
  2334                           ; 2 bytes @ 0x31
  2335  0000EA                     	ds	2
  2336  0000EC                     RTCC_from_caltime@ep:
  2337                           	opt stack 0
  2338  0000EC                     RTCC_from_epoch@ep:
  2339                           	opt stack 0
  2340                           
  2341                           ; 2 bytes @ 0x33
  2342  0000EC                     	ds	2
  2343  0000EE                     RTCC_adjust_time_inc@ct:
  2344                           	opt stack 0
  2345  0000EE                     RTCC_adjust_time_dec@ct:
  2346                           	opt stack 0
  2347                           
  2348                           ; 2 bytes @ 0x35
  2349  0000EE                     	ds	1
  2350  0000EF                     display_dec@dec:
  2351                           	opt stack 0
  2352  0000EF                     tx_send_dec@dec:
  2353                           	opt stack 0
  2354  0000EF                     _comm_d$5324:
  2355                           	opt stack 0
  2356                           
  2357                           ; 4 bytes @ 0x36
  2358  0000EF                     	ds	1
  2359  0000F0                     display_time_1602@ct:
  2360                           	opt stack 0
  2361  0000F0                     RTCC_adjust_time_inc@ep:
  2362                           	opt stack 0
  2363  0000F0                     RTCC_adjust_time_dec@ep:
  2364                           	opt stack 0
  2365  0000F0                     comm_at@hand:
  2366                           	opt stack 0
  2367                           
  2368                           ; 2 bytes @ 0x37
  2369  0000F0                     	ds	2
  2370  0000F2                     ??_RTCC_adjust_time_inc:
  2371  0000F2                     ??_RTCC_adjust_time_dec:
  2372  0000F2                     comm_at@min:
  2373                           	opt stack 0
  2374  0000F2                     display_time_1602@ep:
  2375                           	opt stack 0
  2376                           
  2377                           ; 2 bytes @ 0x39
  2378  0000F2                     	ds	1
  2379  0000F3                     comm_at@max:
  2380                           	opt stack 0
  2381  0000F3                     comm_d@content:
  2382                           	opt stack 0
  2383                           
  2384                           ; 1 bytes @ 0x3A
  2385  0000F3                     	ds	1
  2386  0000F4                     ??_display_time_1602:
  2387  0000F4                     comm_at@value:
  2388                           	opt stack 0
  2389                           
  2390                           ; 1 bytes @ 0x3B
  2391  0000F4                     	ds	1
  2392  0000F5                     command_operation@opcode:
  2393                           	opt stack 0
  2394                           
  2395                           ; 2 bytes @ 0x3C
  2396  0000F5                     	ds	1
  2397  0000F6                     RTCC_adjust_time_inc@i_2099:
  2398                           	opt stack 0
  2399  0000F6                     RTCC_adjust_time_dec@i_2112:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x3D
  2403  0000F6                     	ds	1
  2404  0000F7                     RTCC_adjust_time_inc@i:
  2405                           	opt stack 0
  2406  0000F7                     RTCC_adjust_time_dec@i:
  2407                           	opt stack 0
  2408  0000F7                     command_operation@opland1:
  2409                           	opt stack 0
  2410                           
  2411                           ; 2 bytes @ 0x3E
  2412  0000F7                     	ds	1
  2413  0000F8                     RTCC_adjust_time_button@mode:
  2414                           	opt stack 0
  2415                           
  2416                           ; 2 bytes @ 0x3F
  2417  0000F8                     	ds	1
  2418  0000F9                     command_operation@opland2:
  2419                           	opt stack 0
  2420                           
  2421                           ; 2 bytes @ 0x40
  2422  0000F9                     	ds	1
  2423  0000FA                     RTCC_adjust_time_button@cnt_inc:
  2424                           	opt stack 0
  2425                           
  2426                           ; 2 bytes @ 0x41
  2427  0000FA                     	ds	1
  2428  0000FB                     _command_operation$5325:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x42
  2432  0000FB                     	ds	1
  2433  0000FC                     ??_rx_loop:
  2434  0000FC                     RTCC_adjust_time_button@cnt_dec:
  2435                           	opt stack 0
  2436                           
  2437                           ; 2 bytes @ 0x43
  2438  0000FC                     	ds	2
  2439  0000FE                     rx_loop@i_2491:
  2440                           	opt stack 0
  2441                           
  2442                           ; 1 bytes @ 0x45
  2443  0000FE                     	ds	1
  2444  0000FF                     tblptru	equ	0xFF8
  2445                           tblptrh	equ	0xFF7
  2446                           tblptrl	equ	0xFF6
  2447                           tablat	equ	0xFF5
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           
  2451                           ; 0 bytes @ 0x46
  2452                           
  2453                           	psect	cstackCOMRAM
  2454  000001                     __pcstackCOMRAM:
  2455                           	opt stack 0
  2456  000001                     ??_USBStdGetDscHandler:
  2457  000001                     ??_USBStdGetStatusHandler:
  2458  000001                     ?i2_USBTransferOnePacket:
  2459                           	opt stack 0
  2460  000001                     ?i2___awdiv:
  2461                           	opt stack 0
  2462  000001                     ?i2___lwdiv:
  2463                           	opt stack 0
  2464  000001                     ?i2___lldiv:
  2465                           	opt stack 0
  2466  000001                     USBConfigureEndpoint@direction:
  2467                           	opt stack 0
  2468  000001                     USBCtrlTrfTxService@byteToSend:
  2469                           	opt stack 0
  2470  000001                     USBCtrlTrfRxService@i:
  2471                           	opt stack 0
  2472  000001                     i2LED_OUT@value:
  2473                           	opt stack 0
  2474  000001                     i2USBTransferOnePacket@dir:
  2475                           	opt stack 0
  2476  000001                     delay_timer_interrupt@d:
  2477                           	opt stack 0
  2478  000001                     i2___awdiv@dividend:
  2479                           	opt stack 0
  2480  000001                     i2___lwdiv@dividend:
  2481                           	opt stack 0
  2482  000001                     i2memset@p1:
  2483                           	opt stack 0
  2484  000001                     i2___lldiv@dividend:
  2485                           	opt stack 0
  2486                           
  2487                           ; 4 bytes @ 0x0
  2488  000001                     	ds	1
  2489  000002                     ??_USBConfigureEndpoint:
  2490  000002                     USBCtrlTrfRxService@byteToRead:
  2491                           	opt stack 0
  2492  000002                     USBCtrlTrfInHandler@lastDTS:
  2493                           	opt stack 0
  2494  000002                     i2LED_OUT@b:
  2495                           	opt stack 0
  2496  000002                     USBStdGetStatusHandler@p:
  2497                           	opt stack 0
  2498  000002                     i2USBTransferOnePacket@data:
  2499                           	opt stack 0
  2500                           
  2501                           ; 2 bytes @ 0x1
  2502  000002                     	ds	1
  2503  000003                     charge_time_count@i:
  2504                           	opt stack 0
  2505  000003                     i2___awdiv@divisor:
  2506                           	opt stack 0
  2507  000003                     i2___lwdiv@divisor:
  2508                           	opt stack 0
  2509  000003                     i2memset@c:
  2510                           	opt stack 0
  2511                           
  2512                           ; 2 bytes @ 0x2
  2513  000003                     	ds	1
  2514  000004                     i2USBTransferOnePacket@len:
  2515                           	opt stack 0
  2516                           
  2517                           ; 1 bytes @ 0x3
  2518  000004                     	ds	1
  2519  000005                     i2USBTransferOnePacket@ep:
  2520                           	opt stack 0
  2521  000005                     i2___awdiv@counter:
  2522                           	opt stack 0
  2523  000005                     i2___lwdiv@quotient:
  2524                           	opt stack 0
  2525  000005                     i2memset@n:
  2526                           	opt stack 0
  2527  000005                     i2___lldiv@divisor:
  2528                           	opt stack 0
  2529                           
  2530                           ; 4 bytes @ 0x4
  2531  000005                     	ds	1
  2532  000006                     USBConfigureEndpoint@EPNum:
  2533                           	opt stack 0
  2534  000006                     i2___awdiv@sign:
  2535                           	opt stack 0
  2536  000006                     i2USBTransferOnePacket@handle:
  2537                           	opt stack 0
  2538                           
  2539                           ; 2 bytes @ 0x5
  2540  000006                     	ds	1
  2541  000007                     i2___lwdiv@counter:
  2542                           	opt stack 0
  2543  000007                     USBConfigureEndpoint@handle:
  2544                           	opt stack 0
  2545  000007                     i2___awdiv@quotient:
  2546                           	opt stack 0
  2547  000007                     i2memset@p:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x6
  2551  000007                     	ds	2
  2552  000009                     ??_lchika:
  2553  000009                     USBEnableEndpoint@options:
  2554                           	opt stack 0
  2555  000009                     i2USBDeviceInit@i:
  2556                           	opt stack 0
  2557  000009                     i2___lldiv@quotient:
  2558                           	opt stack 0
  2559                           
  2560                           ; 4 bytes @ 0x8
  2561  000009                     	ds	1
  2562  00000A                     USBEnableEndpoint@p:
  2563                           	opt stack 0
  2564                           
  2565                           ; 2 bytes @ 0x9
  2566  00000A                     	ds	2
  2567  00000C                     lchika@i:
  2568                           	opt stack 0
  2569  00000C                     USBEnableEndpoint@ep:
  2570                           	opt stack 0
  2571                           
  2572                           ; 1 bytes @ 0xB
  2573  00000C                     	ds	1
  2574  00000D                     i2___lldiv@counter:
  2575                           	opt stack 0
  2576  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2577                           	opt stack 0
  2578                           
  2579                           ; 2 bytes @ 0xC
  2580  00000D                     	ds	1
  2581  00000E                     ??_integrating:
  2582                           
  2583                           ; 0 bytes @ 0xD
  2584  00000E                     	ds	1
  2585  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2586                           	opt stack 0
  2587                           
  2588                           ; 2 bytes @ 0xE
  2589  00000F                     	ds	1
  2590  000010                     integrating@port:
  2591                           	opt stack 0
  2592                           
  2593                           ; 1 bytes @ 0xF
  2594  000010                     	ds	1
  2595  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2596                           	opt stack 0
  2597                           
  2598                           ; 2 bytes @ 0x10
  2599  000011                     	ds	2
  2600  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2601                           
  2602                           ; 0 bytes @ 0x12
  2603  000013                     	ds	2
  2604  000015                     ??_USBStdFeatureReqHandler:
  2605  000015                     USBStdSetCfgHandler@i:
  2606                           	opt stack 0
  2607                           
  2608                           ; 1 bytes @ 0x14
  2609  000015                     	ds	1
  2610  000016                     USBStdFeatureReqHandler@pUEP:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0x15
  2614  000016                     	ds	2
  2615  000018                     USBStdFeatureReqHandler@current_ep_data:
  2616                           	opt stack 0
  2617                           
  2618                           ; 1 bytes @ 0x17
  2619  000018                     	ds	1
  2620  000019                     USBStdFeatureReqHandler@p:
  2621                           	opt stack 0
  2622                           
  2623                           ; 2 bytes @ 0x18
  2624  000019                     	ds	2
  2625  00001B                     ??_USBCtrlEPService:
  2626  00001B                     
  2627                           ; 0 bytes @ 0x1A
  2628  00001B                     	ds	2
  2629  00001D                     USBCtrlEPService@setup_cnt:
  2630                           	opt stack 0
  2631                           
  2632                           ; 1 bytes @ 0x1C
  2633  00001D                     	ds	1
  2634  00001E                     USBDeviceTasks@i:
  2635                           	opt stack 0
  2636                           
  2637                           ; 1 bytes @ 0x1D
  2638  00001E                     	ds	1
  2639  00001F                     ??_ISR:
  2640                           
  2641                           ; 0 bytes @ 0x1E
  2642  00001F                     	ds	14
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           
  2650 ;;
  2651 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2652 ;;
  2653 ;; *************** function _main *****************
  2654 ;; Defined at:
  2655 ;;		line 132 in file "main.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  i               1  250[BANK1 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2  907[None  ] int 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2670 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2672 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;Total ram usage:        1 bytes
  2674 ;; Hardware stack levels required when called:   19
  2675 ;; This function calls:
  2676 ;;		_CTMU_read
  2677 ;;		_LED_OUT
  2678 ;;		_OUT
  2679 ;;		_RTCC_from_RTCC
  2680 ;;		_RTCC_from_epoch
  2681 ;;		_RTCC_loop
  2682 ;;		_USB_loop
  2683 ;;		___lwdiv
  2684 ;;		___wmul
  2685 ;;		_ctmu_loop
  2686 ;;		_main_init
  2687 ;;		_normal_mode_loop
  2688 ;;		_rx_loop
  2689 ;; This function is called by:
  2690 ;;		Startup code after reset
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text0
  2695  0123EA                     __ptext0:
  2696                           	opt stack 0
  2697  0123EA                     _main:
  2698                           	opt stack 12
  2699                           
  2700                           ;main.c: 133: main_init();
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;incstack = 0
  2704  0123EA  ECE9  F0A3         	call	_main_init	;wreg free
  2705                           
  2706                           ;main.c: 135: ctmu_value0 = 9 * CTMU_read(0) / 10;
  2707  0123EE  0E00               	movlw	0
  2708  0123F0  EC5D  F0A1         	call	_CTMU_read
  2709  0123F4  C0C6  F0CF         	movff	?_CTMU_read,___wmul@multiplier
  2710  0123F8  C0C7  F0D0         	movff	?_CTMU_read+1,___wmul@multiplier+1
  2711  0123FC  0E00               	movlw	0
  2712  0123FE  0100               	movlb	0	; () banked
  2713  012400  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2714  012402  0E09               	movlw	9
  2715  012404  6FD1               	movwf	___wmul@multiplicand& (0+255),b
  2716  012406  ECBE  F0AD         	call	___wmul	;wreg free
  2717  01240A  C0CF  F0D5         	movff	?___wmul,___lwdiv@dividend
  2718  01240E  C0D0  F0D6         	movff	?___wmul+1,___lwdiv@dividend+1
  2719  012412  0E00               	movlw	0
  2720  012414  0100               	movlb	0	; () banked
  2721  012416  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2722  012418  0E0A               	movlw	10
  2723  01241A  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  2724  01241C  ECC9  F0A8         	call	___lwdiv	;wreg free
  2725  012420  C0D5  F09A         	movff	?___lwdiv,_ctmu_value0
  2726  012424  C0D6  F09B         	movff	?___lwdiv+1,_ctmu_value0+1
  2727                           
  2728                           ;main.c: 136: ctmu_value1 = 9 * CTMU_read(1) / 10;
  2729  012428  0E01               	movlw	1
  2730  01242A  EC5D  F0A1         	call	_CTMU_read
  2731  01242E  C0C6  F0CF         	movff	?_CTMU_read,___wmul@multiplier
  2732  012432  C0C7  F0D0         	movff	?_CTMU_read+1,___wmul@multiplier+1
  2733  012436  0E00               	movlw	0
  2734  012438  0100               	movlb	0	; () banked
  2735  01243A  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2736  01243C  0E09               	movlw	9
  2737  01243E  6FD1               	movwf	___wmul@multiplicand& (0+255),b
  2738  012440  ECBE  F0AD         	call	___wmul	;wreg free
  2739  012444  C0CF  F0D5         	movff	?___wmul,___lwdiv@dividend
  2740  012448  C0D0  F0D6         	movff	?___wmul+1,___lwdiv@dividend+1
  2741  01244C  0E00               	movlw	0
  2742  01244E  0100               	movlb	0	; () banked
  2743  012450  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2744  012452  0E0A               	movlw	10
  2745  012454  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  2746  012456  ECC9  F0A8         	call	___lwdiv	;wreg free
  2747  01245A  C0D5  F09C         	movff	?___lwdiv,_ctmu_value1
  2748  01245E  C0D6  F09D         	movff	?___lwdiv+1,_ctmu_value1+1
  2749                           
  2750                           ;main.c: 137: ctmu_value2 = 9 * CTMU_read(2) / 10;
  2751  012462  0E02               	movlw	2
  2752  012464  EC5D  F0A1         	call	_CTMU_read
  2753  012468  C0C6  F0CF         	movff	?_CTMU_read,___wmul@multiplier
  2754  01246C  C0C7  F0D0         	movff	?_CTMU_read+1,___wmul@multiplier+1
  2755  012470  0E00               	movlw	0
  2756  012472  0100               	movlb	0	; () banked
  2757  012474  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2758  012476  0E09               	movlw	9
  2759  012478  6FD1               	movwf	___wmul@multiplicand& (0+255),b
  2760  01247A  ECBE  F0AD         	call	___wmul	;wreg free
  2761  01247E  C0CF  F0D5         	movff	?___wmul,___lwdiv@dividend
  2762  012482  C0D0  F0D6         	movff	?___wmul+1,___lwdiv@dividend+1
  2763  012486  0E00               	movlw	0
  2764  012488  0100               	movlb	0	; () banked
  2765  01248A  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2766  01248C  0E0A               	movlw	10
  2767  01248E  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  2768  012490  ECC9  F0A8         	call	___lwdiv	;wreg free
  2769  012494  C0D5  F09E         	movff	?___lwdiv,_ctmu_value2
  2770  012498  C0D6  F09F         	movff	?___lwdiv+1,_ctmu_value2+1
  2771                           
  2772                           ;main.c: 138: ctmu_valuem = 9 * CTMU_read(3) / 10;
  2773  01249C  0E03               	movlw	3
  2774  01249E  EC5D  F0A1         	call	_CTMU_read
  2775  0124A2  C0C6  F0CF         	movff	?_CTMU_read,___wmul@multiplier
  2776  0124A6  C0C7  F0D0         	movff	?_CTMU_read+1,___wmul@multiplier+1
  2777  0124AA  0E00               	movlw	0
  2778  0124AC  0100               	movlb	0	; () banked
  2779  0124AE  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2780  0124B0  0E09               	movlw	9
  2781  0124B2  6FD1               	movwf	___wmul@multiplicand& (0+255),b
  2782  0124B4  ECBE  F0AD         	call	___wmul	;wreg free
  2783  0124B8  C0CF  F0D5         	movff	?___wmul,___lwdiv@dividend
  2784  0124BC  C0D0  F0D6         	movff	?___wmul+1,___lwdiv@dividend+1
  2785  0124C0  0E00               	movlw	0
  2786  0124C2  0100               	movlb	0	; () banked
  2787  0124C4  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2788  0124C6  0E0A               	movlw	10
  2789  0124C8  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  2790  0124CA  ECC9  F0A8         	call	___lwdiv	;wreg free
  2791  0124CE  C0D5  F035         	movff	?___lwdiv,_ctmu_valuem
  2792  0124D2  C0D6  F036         	movff	?___lwdiv+1,_ctmu_valuem+1
  2793                           
  2794                           ;main.c: 140: RTCC_from_RTCC(&caltime_now, &epoch_now);
  2795  0124D6  0EAE               	movlw	low _caltime_now
  2796  0124D8  0100               	movlb	0	; () banked
  2797  0124DA  6FE1               	movwf	RTCC_from_RTCC@ct& (0+255),b
  2798  0124DC  0E00               	movlw	high _caltime_now
  2799  0124DE  0100               	movlb	0	; () banked
  2800  0124E0  6FE2               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  2801  0124E2  0EB5               	movlw	low _epoch_now
  2802  0124E4  0100               	movlb	0	; () banked
  2803  0124E6  6FE3               	movwf	RTCC_from_RTCC@ep& (0+255),b
  2804  0124E8  0E00               	movlw	high _epoch_now
  2805  0124EA  0100               	movlb	0	; () banked
  2806  0124EC  6FE4               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  2807  0124EE  EC5E  F0AF         	call	_RTCC_from_RTCC	;wreg free
  2808                           
  2809                           ;main.c: 141: if (caltime_now.DD == 0) {
  2810  0124F2  0100               	movlb	0	; () banked
  2811  0124F4  51B2               	movf	(_caltime_now+4)& (0+255),w,b
  2812  0124F6  A4D8               	btfss	status,2,c
  2813  0124F8  D017               	goto	l11031
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;main.c: 142: epoch_now = 0;
  2817  0124FA  0E00               	movlw	0
  2818  0124FC  0100               	movlb	0	; () banked
  2819  0124FE  6FB5               	movwf	_epoch_now& (0+255),b
  2820  012500  0E00               	movlw	0
  2821  012502  6FB6               	movwf	(_epoch_now+1)& (0+255),b
  2822  012504  0E00               	movlw	0
  2823  012506  6FB7               	movwf	(_epoch_now+2)& (0+255),b
  2824  012508  0E00               	movlw	0
  2825  01250A  6FB8               	movwf	(_epoch_now+3)& (0+255),b
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;main.c: 143: RTCC_from_epoch(&caltime_now, &epoch_now);
  2829  01250C  0EAE               	movlw	low _caltime_now
  2830  01250E  0100               	movlb	0	; () banked
  2831  012510  6FEA               	movwf	RTCC_from_epoch@ct& (0+255),b
  2832  012512  0E00               	movlw	high _caltime_now
  2833  012514  0100               	movlb	0	; () banked
  2834  012516  6FEB               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  2835  012518  0EB5               	movlw	low _epoch_now
  2836  01251A  0100               	movlb	0	; () banked
  2837  01251C  6FEC               	movwf	RTCC_from_epoch@ep& (0+255),b
  2838  01251E  0E00               	movlw	high _epoch_now
  2839  012520  0100               	movlb	0	; () banked
  2840  012522  6FED               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  2841  012524  EC4D  F0AF         	call	_RTCC_from_epoch	;wreg free
  2842  012528                     l11031:
  2843                           
  2844                           ;main.c: 144: }
  2845                           ;main.c: 145: print_content = TIME;
  2846  012528  0E01               	movlw	1
  2847  01252A  0100               	movlb	0	; () banked
  2848  01252C  6FAA               	movwf	_print_content& (0+255),b
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;main.c: 147: for (uint8_t i = 0; i < 3; i++) {
  2852  01252E  0E00               	movlw	0
  2853  012530  0101               	movlb	1	; () banked
  2854  012532  6FFA               	movwf	main@i& (0+255),b
  2855  012534                     l11035:
  2856                           
  2857                           ; BSR set to: 1
  2858  012534  0E02               	movlw	2
  2859  012536  0101               	movlb	1	; () banked
  2860  012538  65FA               	cpfsgt	main@i& (0+255),b
  2861  01253A  D001               	goto	l11039
  2862  01253C  D029               	goto	l910
  2863  01253E                     l11039:
  2864                           
  2865                           ; BSR set to: 1
  2866                           ;main.c: 148: OUT(i, 1);
  2867  01253E  0E01               	movlw	1
  2868  012540  0100               	movlb	0	; () banked
  2869  012542  6FB9               	movwf	OUT@value& (0+255),b
  2870  012544  0101               	movlb	1	; () banked
  2871  012546  51FA               	movf	main@i& (0+255),w,b
  2872  012548  EC19  F0AA         	call	_OUT
  2873                           
  2874                           ;main.c: 149: LED_OUT(i, 1);
  2875  01254C  0E01               	movlw	1
  2876  01254E  0100               	movlb	0	; () banked
  2877  012550  6FB9               	movwf	LED_OUT@value& (0+255),b
  2878  012552  0101               	movlb	1	; () banked
  2879  012554  51FA               	movf	main@i& (0+255),w,b
  2880  012556  EC22  F0AC         	call	_LED_OUT
  2881                           
  2882                           ;main.c: 150: cut_cnt[i] = 0;
  2883  01255A  0101               	movlb	1	; () banked
  2884  01255C  51FA               	movf	main@i& (0+255),w,b
  2885  01255E  0D02               	mullw	2
  2886  012560  0E28               	movlw	low _cut_cnt
  2887  012562  24F3               	addwf	prodl,w,c
  2888  012564  6ED9               	movwf	fsr2l,c
  2889  012566  0E03               	movlw	high _cut_cnt
  2890  012568  20F4               	addwfc	prodh,w,c
  2891  01256A  6EDA               	movwf	fsr2h,c
  2892  01256C  0E00               	movlw	0
  2893  01256E  6EDE               	movwf	postinc2,c
  2894  012570  0E00               	movlw	0
  2895  012572  6EDD               	movwf	postdec2,c
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;main.c: 151: auto_cut_ON[i] = 1;
  2899  012574  0101               	movlb	1	; () banked
  2900  012576  51FA               	movf	main@i& (0+255),w,b
  2901  012578  0D01               	mullw	1
  2902  01257A  0E87               	movlw	low _auto_cut_ON
  2903  01257C  24F3               	addwf	prodl,w,c
  2904  01257E  6ED9               	movwf	fsr2l,c
  2905  012580  0E00               	movlw	high _auto_cut_ON
  2906  012582  20F4               	addwfc	prodh,w,c
  2907  012584  6EDA               	movwf	fsr2h,c
  2908  012586  0E01               	movlw	1
  2909  012588  6EDF               	movwf	indf2,c
  2910                           
  2911                           ; BSR set to: 1
  2912  01258A  0101               	movlb	1	; () banked
  2913  01258C  2BFA               	incf	main@i& (0+255),f,b
  2914  01258E  D7D2               	goto	l11035
  2915  012590                     l910:
  2916                           
  2917                           ; BSR set to: 1
  2918                           ;main.c: 152: }
  2919                           ;main.c: 154: INTCONbits.GIE = 1;
  2920  012590  8EF2               	bsf	intcon,7,c	;volatile
  2921                           
  2922                           ;main.c: 158: INTCONbits.GIE = 0;
  2923                           
  2924                           ;main.c: 156: while (1) {
  2925  012592  9EF2               	bcf	intcon,7,c	;volatile
  2926                           
  2927                           ;main.c: 159: if (!sleep_flag) {
  2928  012594  0100               	movlb	0	; () banked
  2929  012596  51AC               	movf	_sleep_flag& (0+255),w,b
  2930  012598  A4D8               	btfss	status,2,c
  2931  01259A  D7FA               	goto	l910
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;main.c: 160: INTCONbits.GIE = 1;
  2935  01259C  8EF2               	bsf	intcon,7,c	;volatile
  2936                           
  2937                           ;main.c: 161: INTCONbits.GIE = 0;
  2938  01259E  9EF2               	bcf	intcon,7,c	;volatile
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;main.c: 162: USB_loop();
  2942  0125A0  ECCB  F0A5         	call	_USB_loop	;wreg free
  2943                           
  2944                           ;main.c: 163: INTCONbits.GIE = 1;
  2945  0125A4  8EF2               	bsf	intcon,7,c	;volatile
  2946                           
  2947                           ;main.c: 164: INTCONbits.GIE = 0;
  2948  0125A6  9EF2               	bcf	intcon,7,c	;volatile
  2949                           
  2950                           ;main.c: 165: rx_loop();
  2951  0125A8  ECB2  F08A         	call	_rx_loop	;wreg free
  2952                           
  2953                           ;main.c: 166: INTCONbits.GIE = 1;
  2954  0125AC  8EF2               	bsf	intcon,7,c	;volatile
  2955                           
  2956                           ;main.c: 167: INTCONbits.GIE = 0;
  2957  0125AE  9EF2               	bcf	intcon,7,c	;volatile
  2958                           
  2959                           ;main.c: 168: normal_mode_loop();
  2960  0125B0  EC90  F0A3         	call	_normal_mode_loop	;wreg free
  2961                           
  2962                           ;main.c: 169: INTCONbits.GIE = 1;
  2963  0125B4  8EF2               	bsf	intcon,7,c	;volatile
  2964                           
  2965                           ;main.c: 170: INTCONbits.GIE = 0;
  2966  0125B6  9EF2               	bcf	intcon,7,c	;volatile
  2967                           
  2968                           ;main.c: 171: RTCC_loop();
  2969  0125B8  EC8E  F0AC         	call	_RTCC_loop	;wreg free
  2970                           
  2971                           ;main.c: 172: INTCONbits.GIE = 1;
  2972  0125BC  8EF2               	bsf	intcon,7,c	;volatile
  2973                           
  2974                           ;main.c: 173: INTCONbits.GIE = 0;
  2975  0125BE  9EF2               	bcf	intcon,7,c	;volatile
  2976                           
  2977                           ;main.c: 174: ctmu_loop();
  2978  0125C0  EC97  F098         	call	_ctmu_loop	;wreg free
  2979  0125C4  D7E5               	goto	l910
  2980  0125C6                     __end_of_main:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           prodh	equ	0xFF4
  2987                           prodl	equ	0xFF3
  2988                           intcon	equ	0xFF2
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           indf2	equ	0xFDF
  2992                           postinc2	equ	0xFDE
  2993                           postdec2	equ	0xFDD
  2994                           fsr2h	equ	0xFDA
  2995                           fsr2l	equ	0xFD9
  2996                           status	equ	0xFD8
  2997                           
  2998 ;; *************** function _rx_loop *****************
  2999 ;; Defined at:
  3000 ;;		line 454 in file "tasks.h"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  i               1   69[BANK0 ] unsigned char 
  3005 ;;  opland2       100  100[BANK2 ] unsigned char [100]
  3006 ;;  opland1       100    0[BANK2 ] unsigned char [100]
  3007 ;;  opcode        100  100[BANK1 ] unsigned char [100]
  3008 ;;  i               1  203[BANK1 ] unsigned char 
  3009 ;;  ascii           1  202[BANK1 ] unsigned char 
  3010 ;;  buf           100    0[BANK1 ] unsigned char [100]
  3011 ;; Return value:  Size  Location     Type
  3012 ;;		None               void
  3013 ;; Registers used:
  3014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Locals:         0       1     204     200       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3023 ;;      Totals:         0       3     204     200       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3024 ;;Total ram usage:      407 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:   18
  3027 ;; This function calls:
  3028 ;;		_command_operation
  3029 ;;		_ringbuf_backspace
  3030 ;;		_ringbuf_delete
  3031 ;;		_ringbuf_init
  3032 ;;		_ringbuf_num
  3033 ;;		_ringbuf_pop
  3034 ;;		_ringbuf_put
  3035 ;;		_tx_send
  3036 ;;		_tx_sendn
  3037 ;;		_tx_sends
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text1
  3044  011564                     __ptext1:
  3045                           	opt stack 0
  3046  011564                     _rx_loop:
  3047                           	opt stack 12
  3048                           
  3049                           ;tasks.h: 455: static ringbuf_t comm_buf;
  3050                           ;tasks.h: 456: static uint8_t comm_buf_init = 1;
  3051                           ;tasks.h: 457: if (comm_buf_init) {
  3052                           
  3053                           ;incstack = 0
  3054  011564  0101               	movlb	1	; () banked
  3055  011566  51FD               	movf	rx_loop@comm_buf_init& (0+255),w,b
  3056  011568  0101               	movlb	1	; () banked
  3057  01156A  B4D8               	btfsc	status,2,c
  3058  01156C  D016               	goto	l10685
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;tasks.h: 458: comm_buf_init = 0;
  3062  01156E  0E00               	movlw	0
  3063  011570  0101               	movlb	1	; () banked
  3064  011572  6FFD               	movwf	rx_loop@comm_buf_init& (0+255),b
  3065                           
  3066                           ; BSR set to: 1
  3067                           ;tasks.h: 459: char buf[100];
  3068                           ;tasks.h: 460: ringbuf_init(&comm_buf, buf, sizeof (buf));
  3069  011574  0EDA               	movlw	low rx_loop@comm_buf
  3070  011576  0100               	movlb	0	; () banked
  3071  011578  6FB9               	movwf	ringbuf_init@rb& (0+255),b
  3072  01157A  0E03               	movlw	high rx_loop@comm_buf
  3073  01157C  0100               	movlb	0	; () banked
  3074  01157E  6FBA               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3075  011580  0E00               	movlw	low rx_loop@buf
  3076  011582  0100               	movlb	0	; () banked
  3077  011584  6FBB               	movwf	ringbuf_init@internal_buf& (0+255),b
  3078  011586  0E01               	movlw	high rx_loop@buf
  3079  011588  0100               	movlb	0	; () banked
  3080  01158A  6FBC               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3081  01158C  0E00               	movlw	0
  3082  01158E  0100               	movlb	0	; () banked
  3083  011590  6FBE               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3084  011592  0E64               	movlw	100
  3085  011594  6FBD               	movwf	ringbuf_init@bufsize& (0+255),b
  3086  011596  EC80  F0AB         	call	_ringbuf_init	;wreg free
  3087  01159A                     l10685:
  3088                           
  3089                           ;tasks.h: 461: }
  3090                           ;tasks.h: 462: if (ringbuf_num(&rx_buf)) {
  3091  01159A  0ECA               	movlw	low _rx_buf
  3092  01159C  0100               	movlb	0	; () banked
  3093  01159E  6FB9               	movwf	ringbuf_num@rb& (0+255),b
  3094  0115A0  0E03               	movlw	high _rx_buf
  3095  0115A2  0100               	movlb	0	; () banked
  3096  0115A4  6FBA               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3097  0115A6  EC14  F09B         	call	_ringbuf_num	;wreg free
  3098  0115AA  0100               	movlb	0	; () banked
  3099  0115AC  51B9               	movf	?_ringbuf_num& (0+255),w,b
  3100  0115AE  0100               	movlb	0	; () banked
  3101  0115B0  11BA               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3102  0115B2  B4D8               	btfsc	status,2,c
  3103  0115B4  0012               	return	
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;tasks.h: 463: char ascii = ringbuf_pop(&rx_buf);
  3107  0115B6  0ECA               	movlw	low _rx_buf
  3108  0115B8  0100               	movlb	0	; () banked
  3109  0115BA  6FC1               	movwf	ringbuf_pop@rb& (0+255),b
  3110  0115BC  0E03               	movlw	high _rx_buf
  3111  0115BE  0100               	movlb	0	; () banked
  3112  0115C0  6FC2               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3113  0115C2  EC33  F0A0         	call	_ringbuf_pop	;wreg free
  3114  0115C6  0101               	movlb	1	; () banked
  3115  0115C8  6FCA               	movwf	rx_loop@ascii& (0+255),b
  3116                           
  3117                           ;tasks.h: 464: switch (ascii) {
  3118  0115CA  D120               	goto	l10743
  3119  0115CC                     l10689:
  3120                           
  3121                           ; BSR set to: 1
  3122                           ;tasks.h: 466: ringbuf_put(&comm_buf, '\0');
  3123  0115CC  0EDA               	movlw	low rx_loop@comm_buf
  3124  0115CE  0100               	movlb	0	; () banked
  3125  0115D0  6FC1               	movwf	ringbuf_put@rb& (0+255),b
  3126  0115D2  0E03               	movlw	high rx_loop@comm_buf
  3127  0115D4  0100               	movlb	0	; () banked
  3128  0115D6  6FC2               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3129  0115D8  0E00               	movlw	0
  3130  0115DA  0100               	movlb	0	; () banked
  3131  0115DC  6FC3               	movwf	ringbuf_put@asciicode& (0+255),b
  3132  0115DE  ECFA  F09E         	call	_ringbuf_put	;wreg free
  3133                           
  3134                           ;tasks.h: 467: tx_send('\t');
  3135  0115E2  0E09               	movlw	9
  3136  0115E4  EC9E  F0AF         	call	_tx_send
  3137                           
  3138                           ;tasks.h: 468: tx_sendn(ringbuf_num(&comm_buf), 3);
  3139  0115E8  0EDA               	movlw	low rx_loop@comm_buf
  3140  0115EA  0100               	movlb	0	; () banked
  3141  0115EC  6FB9               	movwf	ringbuf_num@rb& (0+255),b
  3142  0115EE  0E03               	movlw	high rx_loop@comm_buf
  3143  0115F0  0100               	movlb	0	; () banked
  3144  0115F2  6FBA               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3145  0115F4  EC14  F09B         	call	_ringbuf_num	;wreg free
  3146  0115F8  C0B9  F1C8         	movff	?_ringbuf_num,_rx_loop$5326
  3147  0115FC  C0BA  F1C9         	movff	?_ringbuf_num+1,_rx_loop$5326+1
  3148                           
  3149                           ;tasks.h: 468: tx_sendn(ringbuf_num(&comm_buf), 3);
  3150  011600  C1C8  F0DC         	movff	_rx_loop$5326,tx_sendn@value
  3151  011604  C1C9  F0DD         	movff	_rx_loop$5326+1,tx_sendn@value+1
  3152  011608  0E03               	movlw	3
  3153  01160A  0100               	movlb	0	; () banked
  3154  01160C  6FDE               	movwf	tx_sendn@digits& (0+255),b
  3155  01160E  EC05  F0A9         	call	_tx_sendn	;wreg free
  3156                           
  3157                           ;tasks.h: 469: tx_sends("\n\n");
  3158  011612  0ED2               	movlw	low STR_79
  3159  011614  0100               	movlb	0	; () banked
  3160  011616  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  3161  011618  0EFF               	movlw	high STR_79
  3162  01161A  0100               	movlb	0	; () banked
  3163  01161C  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3164  01161E  ECB3  F0A9         	call	_tx_sends	;wreg free
  3165                           
  3166                           ;tasks.h: 470: char opcode[100];
  3167                           ;tasks.h: 471: char opland1[100];
  3168                           ;tasks.h: 472: char opland2[100];
  3169                           ;tasks.h: 473: uint8_t i;
  3170                           ;tasks.h: 474: for (i = 0; opcode[i] = ringbuf_pop(&comm_buf); i++);
  3171  011622  0E00               	movlw	0
  3172  011624  0101               	movlb	1	; () banked
  3173  011626  6FCB               	movwf	rx_loop@i& (0+255),b
  3174  011628  D002               	goto	l10697
  3175  01162A                     l10695:
  3176                           
  3177                           ; BSR set to: 1
  3178  01162A  0101               	movlb	1	; () banked
  3179  01162C  2BCB               	incf	rx_loop@i& (0+255),f,b
  3180  01162E                     l10697:
  3181                           
  3182                           ; BSR set to: 1
  3183  01162E  0EDA               	movlw	low rx_loop@comm_buf
  3184  011630  0100               	movlb	0	; () banked
  3185  011632  6FC1               	movwf	ringbuf_pop@rb& (0+255),b
  3186  011634  0E03               	movlw	high rx_loop@comm_buf
  3187  011636  0100               	movlb	0	; () banked
  3188  011638  6FC2               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3189  01163A  EC33  F0A0         	call	_ringbuf_pop	;wreg free
  3190  01163E  0100               	movlb	0	; () banked
  3191  011640  6FFC               	movwf	??_rx_loop& (0+255),b
  3192  011642  0101               	movlb	1	; () banked
  3193  011644  51CB               	movf	rx_loop@i& (0+255),w,b
  3194  011646  0D01               	mullw	1
  3195  011648  0E64               	movlw	low rx_loop@opcode
  3196  01164A  24F3               	addwf	prodl,w,c
  3197  01164C  6ED9               	movwf	fsr2l,c
  3198  01164E  0E01               	movlw	high rx_loop@opcode
  3199  011650  20F4               	addwfc	prodh,w,c
  3200  011652  6EDA               	movwf	fsr2h,c
  3201  011654  C0FC  FFDF         	movff	??_rx_loop,indf2
  3202  011658  50DF               	movf	indf2,w,c
  3203  01165A  A4D8               	btfss	status,2,c
  3204  01165C  D7E6               	goto	l10695
  3205                           
  3206                           ; BSR set to: 1
  3207                           ;tasks.h: 475: opcode[i] = '\0';
  3208                           
  3209                           ; BSR set to: 1
  3210  01165E  0101               	movlb	1	; () banked
  3211  011660  51CB               	movf	rx_loop@i& (0+255),w,b
  3212  011662  0D01               	mullw	1
  3213  011664  0E64               	movlw	low rx_loop@opcode
  3214  011666  24F3               	addwf	prodl,w,c
  3215  011668  6ED9               	movwf	fsr2l,c
  3216  01166A  0E01               	movlw	high rx_loop@opcode
  3217  01166C  20F4               	addwfc	prodh,w,c
  3218  01166E  6EDA               	movwf	fsr2h,c
  3219  011670  0E00               	movlw	0
  3220  011672  6EDF               	movwf	indf2,c
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;tasks.h: 476: for (i = 0; opland1[i] = ringbuf_pop(&comm_buf); i++);
  3224  011674  0E00               	movlw	0
  3225  011676  0101               	movlb	1	; () banked
  3226  011678  6FCB               	movwf	rx_loop@i& (0+255),b
  3227  01167A  D002               	goto	l10705
  3228  01167C                     l10703:
  3229                           
  3230                           ; BSR set to: 1
  3231  01167C  0101               	movlb	1	; () banked
  3232  01167E  2BCB               	incf	rx_loop@i& (0+255),f,b
  3233  011680                     l10705:
  3234                           
  3235                           ; BSR set to: 1
  3236  011680  0EDA               	movlw	low rx_loop@comm_buf
  3237  011682  0100               	movlb	0	; () banked
  3238  011684  6FC1               	movwf	ringbuf_pop@rb& (0+255),b
  3239  011686  0E03               	movlw	high rx_loop@comm_buf
  3240  011688  0100               	movlb	0	; () banked
  3241  01168A  6FC2               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3242  01168C  EC33  F0A0         	call	_ringbuf_pop	;wreg free
  3243  011690  0100               	movlb	0	; () banked
  3244  011692  6FFC               	movwf	??_rx_loop& (0+255),b
  3245  011694  0101               	movlb	1	; () banked
  3246  011696  51CB               	movf	rx_loop@i& (0+255),w,b
  3247  011698  0D01               	mullw	1
  3248  01169A  0E00               	movlw	low rx_loop@opland1
  3249  01169C  24F3               	addwf	prodl,w,c
  3250  01169E  6ED9               	movwf	fsr2l,c
  3251  0116A0  0E02               	movlw	high rx_loop@opland1
  3252  0116A2  20F4               	addwfc	prodh,w,c
  3253  0116A4  6EDA               	movwf	fsr2h,c
  3254  0116A6  C0FC  FFDF         	movff	??_rx_loop,indf2
  3255  0116AA  50DF               	movf	indf2,w,c
  3256  0116AC  A4D8               	btfss	status,2,c
  3257  0116AE  D7E6               	goto	l10703
  3258                           
  3259                           ; BSR set to: 1
  3260                           ;tasks.h: 477: opland1[i] = '\0';
  3261                           
  3262                           ; BSR set to: 1
  3263  0116B0  0101               	movlb	1	; () banked
  3264  0116B2  51CB               	movf	rx_loop@i& (0+255),w,b
  3265  0116B4  0D01               	mullw	1
  3266  0116B6  0E00               	movlw	low rx_loop@opland1
  3267  0116B8  24F3               	addwf	prodl,w,c
  3268  0116BA  6ED9               	movwf	fsr2l,c
  3269  0116BC  0E02               	movlw	high rx_loop@opland1
  3270  0116BE  20F4               	addwfc	prodh,w,c
  3271  0116C0  6EDA               	movwf	fsr2h,c
  3272  0116C2  0E00               	movlw	0
  3273  0116C4  6EDF               	movwf	indf2,c
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;tasks.h: 478: for (i = 0; opland2[i] = ringbuf_pop(&comm_buf); i++);
  3277  0116C6  0E00               	movlw	0
  3278  0116C8  0101               	movlb	1	; () banked
  3279  0116CA  6FCB               	movwf	rx_loop@i& (0+255),b
  3280  0116CC  D002               	goto	l10713
  3281  0116CE                     l10711:
  3282                           
  3283                           ; BSR set to: 1
  3284  0116CE  0101               	movlb	1	; () banked
  3285  0116D0  2BCB               	incf	rx_loop@i& (0+255),f,b
  3286  0116D2                     l10713:
  3287                           
  3288                           ; BSR set to: 1
  3289  0116D2  0EDA               	movlw	low rx_loop@comm_buf
  3290  0116D4  0100               	movlb	0	; () banked
  3291  0116D6  6FC1               	movwf	ringbuf_pop@rb& (0+255),b
  3292  0116D8  0E03               	movlw	high rx_loop@comm_buf
  3293  0116DA  0100               	movlb	0	; () banked
  3294  0116DC  6FC2               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3295  0116DE  EC33  F0A0         	call	_ringbuf_pop	;wreg free
  3296  0116E2  0100               	movlb	0	; () banked
  3297  0116E4  6FFC               	movwf	??_rx_loop& (0+255),b
  3298  0116E6  0101               	movlb	1	; () banked
  3299  0116E8  51CB               	movf	rx_loop@i& (0+255),w,b
  3300  0116EA  0D01               	mullw	1
  3301  0116EC  0E64               	movlw	low rx_loop@opland2
  3302  0116EE  24F3               	addwf	prodl,w,c
  3303  0116F0  6ED9               	movwf	fsr2l,c
  3304  0116F2  0E02               	movlw	high rx_loop@opland2
  3305  0116F4  20F4               	addwfc	prodh,w,c
  3306  0116F6  6EDA               	movwf	fsr2h,c
  3307  0116F8  C0FC  FFDF         	movff	??_rx_loop,indf2
  3308  0116FC  50DF               	movf	indf2,w,c
  3309  0116FE  A4D8               	btfss	status,2,c
  3310  011700  D7E6               	goto	l10711
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;tasks.h: 479: opland2[i] = '\0';
  3314                           
  3315                           ; BSR set to: 1
  3316  011702  0101               	movlb	1	; () banked
  3317  011704  51CB               	movf	rx_loop@i& (0+255),w,b
  3318  011706  0D01               	mullw	1
  3319  011708  0E64               	movlw	low rx_loop@opland2
  3320  01170A  24F3               	addwf	prodl,w,c
  3321  01170C  6ED9               	movwf	fsr2l,c
  3322  01170E  0E02               	movlw	high rx_loop@opland2
  3323  011710  20F4               	addwfc	prodh,w,c
  3324  011712  6EDA               	movwf	fsr2h,c
  3325  011714  0E00               	movlw	0
  3326  011716  6EDF               	movwf	indf2,c
  3327                           
  3328                           ; BSR set to: 1
  3329                           ;tasks.h: 480: command_operation(opcode, opland1, opland2);
  3330  011718  0E64               	movlw	low rx_loop@opcode
  3331  01171A  0100               	movlb	0	; () banked
  3332  01171C  6FF5               	movwf	command_operation@opcode& (0+255),b
  3333  01171E  0E01               	movlw	high rx_loop@opcode
  3334  011720  0100               	movlb	0	; () banked
  3335  011722  6FF6               	movwf	(command_operation@opcode+1)& (0+255),b
  3336  011724  0E00               	movlw	low rx_loop@opland1
  3337  011726  0100               	movlb	0	; () banked
  3338  011728  6FF7               	movwf	command_operation@opland1& (0+255),b
  3339  01172A  0E02               	movlw	high rx_loop@opland1
  3340  01172C  0100               	movlb	0	; () banked
  3341  01172E  6FF8               	movwf	(command_operation@opland1+1)& (0+255),b
  3342  011730  0E64               	movlw	low rx_loop@opland2
  3343  011732  0100               	movlb	0	; () banked
  3344  011734  6FF9               	movwf	command_operation@opland2& (0+255),b
  3345  011736  0E02               	movlw	high rx_loop@opland2
  3346  011738  0100               	movlb	0	; () banked
  3347  01173A  6FFA               	movwf	(command_operation@opland2+1)& (0+255),b
  3348  01173C  EC00  F080         	call	_command_operation	;wreg free
  3349                           
  3350                           ;tasks.h: 481: break;
  3351  011740  0012               	return	
  3352  011742                     l10719:
  3353                           
  3354                           ;tasks.h: 483: ringbuf_put(&comm_buf, '\0');
  3355  011742  0EDA               	movlw	low rx_loop@comm_buf
  3356  011744  0100               	movlb	0	; () banked
  3357  011746  6FC1               	movwf	ringbuf_put@rb& (0+255),b
  3358  011748  0E03               	movlw	high rx_loop@comm_buf
  3359  01174A  0100               	movlb	0	; () banked
  3360  01174C  6FC2               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3361  01174E  0E00               	movlw	0
  3362  011750  0100               	movlb	0	; () banked
  3363  011752  6FC3               	movwf	ringbuf_put@asciicode& (0+255),b
  3364  011754  ECFA  F09E         	call	_ringbuf_put	;wreg free
  3365                           
  3366                           ;tasks.h: 484: tx_send(' ');
  3367  011758  0E20               	movlw	32
  3368  01175A  EC9E  F0AF         	call	_tx_send
  3369                           
  3370                           ;tasks.h: 485: break;
  3371  01175E  0012               	return	
  3372  011760                     l10721:
  3373                           
  3374                           ;tasks.h: 487: ringbuf_backspace(&comm_buf);
  3375  011760  0EDA               	movlw	low rx_loop@comm_buf
  3376  011762  0100               	movlb	0	; () banked
  3377  011764  6FC1               	movwf	ringbuf_backspace@rb& (0+255),b
  3378  011766  0E03               	movlw	high rx_loop@comm_buf
  3379  011768  0100               	movlb	0	; () banked
  3380  01176A  6FC2               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3381  01176C  ECAF  F0A6         	call	_ringbuf_backspace	;wreg free
  3382                           
  3383                           ;tasks.h: 488: tx_sends("\b \b");
  3384  011770  0EC6               	movlw	low STR_80
  3385  011772  0100               	movlb	0	; () banked
  3386  011774  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  3387  011776  0EFF               	movlw	high STR_80
  3388  011778  0100               	movlb	0	; () banked
  3389  01177A  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3390  01177C  ECB3  F0A9         	call	_tx_sends	;wreg free
  3391                           
  3392                           ;tasks.h: 489: break;
  3393  011780  0012               	return	
  3394  011782                     l10725:
  3395                           
  3396                           ;tasks.h: 491: for (uint8_t i = 0; i < ringbuf_num(&comm_buf); i++) tx_sends("\b \b");
  3397  011782  0E00               	movlw	0
  3398  011784  0100               	movlb	0	; () banked
  3399  011786  6FFE               	movwf	rx_loop@i_2491& (0+255),b
  3400  011788  D00A               	goto	l10731
  3401  01178A                     l10727:
  3402                           
  3403                           ; BSR set to: 0
  3404  01178A  0EC6               	movlw	low STR_80
  3405  01178C  0100               	movlb	0	; () banked
  3406  01178E  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  3407  011790  0EFF               	movlw	high STR_80
  3408  011792  0100               	movlb	0	; () banked
  3409  011794  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3410  011796  ECB3  F0A9         	call	_tx_sends	;wreg free
  3411  01179A  0100               	movlb	0	; () banked
  3412  01179C  2BFE               	incf	rx_loop@i_2491& (0+255),f,b
  3413  01179E                     l10731:
  3414                           
  3415                           ; BSR set to: 0
  3416  01179E  0EDA               	movlw	low rx_loop@comm_buf
  3417  0117A0  0100               	movlb	0	; () banked
  3418  0117A2  6FB9               	movwf	ringbuf_num@rb& (0+255),b
  3419  0117A4  0E03               	movlw	high rx_loop@comm_buf
  3420  0117A6  0100               	movlb	0	; () banked
  3421  0117A8  6FBA               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3422  0117AA  EC14  F09B         	call	_ringbuf_num	;wreg free
  3423  0117AE  0100               	movlb	0	; () banked
  3424  0117B0  51FE               	movf	rx_loop@i_2491& (0+255),w,b
  3425  0117B2  0100               	movlb	0	; () banked
  3426  0117B4  6FFC               	movwf	??_rx_loop& (0+255),b
  3427  0117B6  6BFD               	clrf	(??_rx_loop+1)& (0+255),b
  3428  0117B8  0100               	movlb	0	; () banked
  3429  0117BA  51B9               	movf	?_ringbuf_num& (0+255),w,b
  3430  0117BC  0100               	movlb	0	; () banked
  3431  0117BE  5DFC               	subwf	??_rx_loop& (0+255),w,b
  3432  0117C0  0100               	movlb	0	; () banked
  3433  0117C2  51BA               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3434  0117C4  0100               	movlb	0	; () banked
  3435  0117C6  59FD               	subwfb	(??_rx_loop+1)& (0+255),w,b
  3436  0117C8  A0D8               	btfss	status,0,c
  3437  0117CA  D7DF               	goto	l10727
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;tasks.h: 492: ringbuf_delete(&comm_buf);
  3441                           
  3442                           ; BSR set to: 0
  3443  0117CC  0EDA               	movlw	low rx_loop@comm_buf
  3444  0117CE  0100               	movlb	0	; () banked
  3445  0117D0  6FB9               	movwf	ringbuf_delete@rb& (0+255),b
  3446  0117D2  0E03               	movlw	high rx_loop@comm_buf
  3447  0117D4  0100               	movlb	0	; () banked
  3448  0117D6  6FBA               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3449  0117D8  EC15  F0AF         	call	_ringbuf_delete	;wreg free
  3450                           
  3451                           ;tasks.h: 493: break;
  3452  0117DC  0012               	return	
  3453  0117DE                     l10735:
  3454                           
  3455                           ;tasks.h: 495: if (ascii >= ' ' && ascii <= '~') {
  3456  0117DE  0E1F               	movlw	31
  3457  0117E0  0101               	movlb	1	; () banked
  3458  0117E2  65CA               	cpfsgt	rx_loop@ascii& (0+255),b
  3459  0117E4  0012               	return	
  3460                           
  3461                           ; BSR set to: 1
  3462  0117E6  0E7F               	movlw	127
  3463  0117E8  0101               	movlb	1	; () banked
  3464  0117EA  61CA               	cpfslt	rx_loop@ascii& (0+255),b
  3465  0117EC  0012               	return	
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;tasks.h: 496: ringbuf_put(&comm_buf, ascii);
  3469  0117EE  0EDA               	movlw	low rx_loop@comm_buf
  3470  0117F0  0100               	movlb	0	; () banked
  3471  0117F2  6FC1               	movwf	ringbuf_put@rb& (0+255),b
  3472  0117F4  0E03               	movlw	high rx_loop@comm_buf
  3473  0117F6  0100               	movlb	0	; () banked
  3474  0117F8  6FC2               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3475  0117FA  C1CA  F0C3         	movff	rx_loop@ascii,ringbuf_put@asciicode
  3476  0117FE  ECFA  F09E         	call	_ringbuf_put	;wreg free
  3477                           
  3478                           ;tasks.h: 497: tx_send(ascii);
  3479  011802  0101               	movlb	1	; () banked
  3480  011804  51CA               	movf	rx_loop@ascii& (0+255),w,b
  3481  011806  EC9E  F0AF         	call	_tx_send
  3482                           
  3483                           ;tasks.h: 500: }
  3484                           
  3485                           ;tasks.h: 498: }
  3486                           ;tasks.h: 499: break;
  3487  01180A  0012               	return	
  3488  01180C                     l10743:
  3489  01180C  0101               	movlb	1	; () banked
  3490  01180E  51CA               	movf	rx_loop@ascii& (0+255),w,b
  3491                           
  3492                           ; Switch size 1, requested type "space"
  3493                           ; Number of cases is 4, Range of values is 8 to 127
  3494                           ; switch strategies available:
  3495                           ; Name         Instructions Cycles
  3496                           ; simple_byte           13     7 (average)
  3497                           ;	Chosen strategy is simple_byte
  3498  011810  0A08               	xorlw	8	; case 8
  3499  011812  B4D8               	btfsc	status,2,c
  3500  011814  D7A5               	goto	l10721
  3501  011816  0A05               	xorlw	5	; case 13
  3502  011818  B4D8               	btfsc	status,2,c
  3503  01181A  D6D8               	goto	l10689
  3504  01181C  0A2D               	xorlw	45	; case 32
  3505  01181E  B4D8               	btfsc	status,2,c
  3506  011820  D790               	goto	l10719
  3507  011822  0A5F               	xorlw	95	; case 127
  3508  011824  B4D8               	btfsc	status,2,c
  3509  011826  D7AD               	goto	l10725
  3510  011828  D7DA               	goto	l10735
  3511  01182A                     __end_of_rx_loop:
  3512                           	opt stack 0
  3513                           tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           prodh	equ	0xFF4
  3518                           prodl	equ	0xFF3
  3519                           intcon	equ	0xFF2
  3520                           postinc0	equ	0xFEE
  3521                           wreg	equ	0xFE8
  3522                           indf2	equ	0xFDF
  3523                           postinc2	equ	0xFDE
  3524                           postdec2	equ	0xFDD
  3525                           fsr2h	equ	0xFDA
  3526                           fsr2l	equ	0xFD9
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function _ringbuf_delete *****************
  3530 ;; Defined at:
  3531 ;;		line 85 in file "../My_header\My_ringbuf.h"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  3534 ;;		 -> rx_loop@comm_buf(8), 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:   11
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_rx_loop
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text2
  3561  015E2A                     __ptext2:
  3562                           	opt stack 0
  3563  015E2A                     _ringbuf_delete:
  3564                           	opt stack 18
  3565                           
  3566                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  3567                           
  3568                           ;incstack = 0
  3569  015E2A  0100               	movlb	0	; () banked
  3570  015E2C  EE20 F006          	lfsr	2,6
  3571  015E30  51B9               	movf	ringbuf_delete@rb& (0+255),w,b
  3572  015E32  26D9               	addwf	fsr2l,f,c
  3573  015E34  51BA               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  3574  015E36  22DA               	addwfc	fsr2h,f,c
  3575  015E38  0100               	movlb	0	; () banked
  3576  015E3A  EE10 F004          	lfsr	1,4
  3577  015E3E  51B9               	movf	ringbuf_delete@rb& (0+255),w,b
  3578  015E40  26E1               	addwf	fsr1l,f,c
  3579  015E42  51BA               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  3580  015E44  22E2               	addwfc	fsr1h,f,c
  3581  015E46  CFDE FFE6          	movff	postinc2,postinc1
  3582  015E4A  CFDD FFE5          	movff	postdec2,postdec1
  3583                           
  3584                           ; BSR set to: 0
  3585  015E4E  0012               	return		;funcret
  3586  015E50                     __end_of_ringbuf_delete:
  3587                           	opt stack 0
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           intcon	equ	0xFF2
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postinc1	equ	0xFE6
  3598                           postdec1	equ	0xFE5
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function _ringbuf_backspace *****************
  3609 ;; Defined at:
  3610 ;;		line 78 in file "../My_header\My_ringbuf.h"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  3613 ;;		 -> rx_loop@comm_buf(8), 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;		None               void
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:   12
  3632 ;; This function calls:
  3633 ;;		_ringbuf_num
  3634 ;; This function is called by:
  3635 ;;		_rx_loop
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text3
  3640  014D5E                     __ptext3:
  3641                           	opt stack 0
  3642  014D5E                     _ringbuf_backspace:
  3643                           	opt stack 17
  3644                           
  3645                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;incstack = 0
  3649  014D5E  C0C1  F0B9         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  3650  014D62  C0C2  F0BA         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  3651  014D66  EC14  F09B         	call	_ringbuf_num	;wreg free
  3652  014D6A  0100               	movlb	0	; () banked
  3653  014D6C  51B9               	movf	?_ringbuf_num& (0+255),w,b
  3654  014D6E  0100               	movlb	0	; () banked
  3655  014D70  11BA               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3656  014D72  B4D8               	btfsc	status,2,c
  3657  014D74  0012               	return	
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  3661  014D76  0100               	movlb	0	; () banked
  3662  014D78  EE20 F004          	lfsr	2,4
  3663  014D7C  51C1               	movf	ringbuf_backspace@rb& (0+255),w,b
  3664  014D7E  26D9               	addwf	fsr2l,f,c
  3665  014D80  51C2               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  3666  014D82  22DA               	addwfc	fsr2h,f,c
  3667  014D84  50DE               	movf	postinc2,w,c
  3668  014D86  10DE               	iorwf	postinc2,w,c
  3669  014D88  B4D8               	btfsc	status,2,c
  3670  014D8A  D00B               	goto	l10131
  3671                           
  3672                           ; BSR set to: 0
  3673  014D8C  0100               	movlb	0	; () banked
  3674  014D8E  EE20 F004          	lfsr	2,4
  3675  014D92  51C1               	movf	ringbuf_backspace@rb& (0+255),w,b
  3676  014D94  26D9               	addwf	fsr2l,f,c
  3677  014D96  51C2               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  3678  014D98  22DA               	addwfc	fsr2h,f,c
  3679  014D9A  06DE               	decf	postinc2,f,c
  3680  014D9C  0E00               	movlw	0
  3681  014D9E  5ADD               	subwfb	postdec2,f,c
  3682  014DA0  0012               	return	
  3683  014DA2                     l10131:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  3687  014DA2  0EFF               	movlw	255
  3688  014DA4  0100               	movlb	0	; () banked
  3689  014DA6  6FC3               	movwf	??_ringbuf_backspace& (0+255),b
  3690  014DA8  0EFF               	movlw	255
  3691  014DAA  0100               	movlb	0	; () banked
  3692  014DAC  6FC4               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  3693  014DAE  0100               	movlb	0	; () banked
  3694  014DB0  EE20 F002          	lfsr	2,2
  3695  014DB4  51C1               	movf	ringbuf_backspace@rb& (0+255),w,b
  3696  014DB6  26D9               	addwf	fsr2l,f,c
  3697  014DB8  51C2               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  3698  014DBA  22DA               	addwfc	fsr2h,f,c
  3699  014DBC  CFDE F0C5          	movff	postinc2,??_ringbuf_backspace+2
  3700  014DC0  CFDD F0C6          	movff	postdec2,??_ringbuf_backspace+3
  3701  014DC4  0100               	movlb	0	; () banked
  3702  014DC6  51C3               	movf	??_ringbuf_backspace& (0+255),w,b
  3703  014DC8  0100               	movlb	0	; () banked
  3704  014DCA  27C5               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  3705  014DCC  0100               	movlb	0	; () banked
  3706  014DCE  51C4               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  3707  014DD0  0100               	movlb	0	; () banked
  3708  014DD2  23C6               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  3709  014DD4  0100               	movlb	0	; () banked
  3710  014DD6  EE20 F004          	lfsr	2,4
  3711  014DDA  51C1               	movf	ringbuf_backspace@rb& (0+255),w,b
  3712  014DDC  26D9               	addwf	fsr2l,f,c
  3713  014DDE  51C2               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  3714  014DE0  22DA               	addwfc	fsr2h,f,c
  3715  014DE2  C0C5  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  3716  014DE6  C0C6  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  3717                           
  3718                           ; BSR set to: 0
  3719  014DEA  0012               	return	
  3720  014DEC                     __end_of_ringbuf_backspace:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           postinc1	equ	0xFE6
  3732                           postdec1	equ	0xFE5
  3733                           fsr1h	equ	0xFE2
  3734                           fsr1l	equ	0xFE1
  3735                           indf2	equ	0xFDF
  3736                           postinc2	equ	0xFDE
  3737                           postdec2	equ	0xFDD
  3738                           fsr2h	equ	0xFDA
  3739                           fsr2l	equ	0xFD9
  3740                           status	equ	0xFD8
  3741                           
  3742 ;; *************** function _command_operation *****************
  3743 ;; Defined at:
  3744 ;;		line 378 in file "tasks.h"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  opcode          2   60[BANK0 ] PTR unsigned char 
  3747 ;;		 -> rx_loop@opcode(100), 
  3748 ;;  opland1         2   62[BANK0 ] PTR unsigned char 
  3749 ;;		 -> rx_loop@opland1(100), 
  3750 ;;  opland2         2   64[BANK0 ] PTR unsigned char 
  3751 ;;		 -> rx_loop@opland2(100), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3763 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;Total ram usage:        7 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:   17
  3770 ;; This function calls:
  3771 ;;		_comm_at
  3772 ;;		_comm_d
  3773 ;;		_month_length
  3774 ;;		_my_atoi
  3775 ;;		_my_strcmp
  3776 ;;		_print_time
  3777 ;;		_tx_sends
  3778 ;; This function is called by:
  3779 ;;		_rx_loop
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text4
  3784  010000                     __ptext4:
  3785                           	opt stack 0
  3786  010000                     _command_operation:
  3787                           	opt stack 12
  3788                           
  3789                           ;tasks.h: 379: if (!my_strcmp(opcode, "help") || !my_strcmp(opcode, "?")) {
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;incstack = 0
  3793  010000  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  3794  010004  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3795  010008  0EBC               	movlw	low STR_37
  3796  01000A  0100               	movlb	0	; () banked
  3797  01000C  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3798  01000E  0EFF               	movlw	high STR_37
  3799  010010  0100               	movlb	0	; () banked
  3800  010012  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3801  010014  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3802  010018  0900               	iorlw	0
  3803  01001A  B4D8               	btfsc	status,2,c
  3804  01001C  D00F               	goto	l10421
  3805  01001E  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  3806  010022  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3807  010026  0EDB               	movlw	low (STR_15+14)
  3808  010028  0100               	movlb	0	; () banked
  3809  01002A  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3810  01002C  0EFE               	movlw	high (STR_15+14)
  3811  01002E  0100               	movlb	0	; () banked
  3812  010030  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3813  010032  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3814  010036  0900               	iorlw	0
  3815  010038  A4D8               	btfss	status,2,c
  3816  01003A  D008               	goto	l10423
  3817  01003C                     l10421:
  3818                           
  3819                           ;tasks.h: 380: tx_sends(
  3820                           ;tasks.h: 381: "\t**** Charge Station 6 ---- Made by @Ryokeri ****\n"
  3821                           ;tasks.h: 382: "\tcommand opeland1 opeland2\n\n"
  3822                           ;tasks.h: 383: "\tprint_time(t)\n"
  3823                           ;tasks.h: 384: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  3824                           ;tasks.h: 385: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
  3825                           ;tasks.h: 386: "\tdisplay(d) [port:left(l),center(c),right(r)]\n\t\t[content:current(c),
      +                          integrated_current(ic),integrated_time(it)]\n"
  3826  01003C  0E2E               	movlw	low STR_39
  3827  01003E  0100               	movlb	0	; () banked
  3828  010040  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  3829  010042  0EFD               	movlw	high STR_39
  3830  010044  0100               	movlb	0	; () banked
  3831  010046  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3832  010048  ECB3  F0A9         	call	_tx_sends	;wreg free
  3833  01004C                     l10423:
  3834                           
  3835                           ;tasks.h: 388: }
  3836                           ;tasks.h: 389: if (!my_strcmp(opcode, "settings") || !my_strcmp(opcode, "set")) {
  3837  01004C  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  3838  010050  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3839  010054  0E91               	movlw	low STR_40
  3840  010056  0100               	movlb	0	; () banked
  3841  010058  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3842  01005A  0EFF               	movlw	high STR_40
  3843  01005C  0100               	movlb	0	; () banked
  3844  01005E  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3845  010060  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3846  010064  0900               	iorlw	0
  3847  010066  B4D8               	btfsc	status,2,c
  3848  010068  D00F               	goto	l10427
  3849  01006A  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  3850  01006E  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3851  010072  0ECE               	movlw	low STR_41
  3852  010074  0100               	movlb	0	; () banked
  3853  010076  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3854  010078  0EFF               	movlw	high STR_41
  3855  01007A  0100               	movlb	0	; () banked
  3856  01007C  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3857  01007E  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3858  010082  0900               	iorlw	0
  3859  010084  A4D8               	btfss	status,2,c
  3860  010086  D00C               	goto	l10429
  3861  010088                     l10427:
  3862                           
  3863                           ;tasks.h: 390: if (!my_strcmp(opland1, "auto_stop")) {
  3864  010088  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  3865  01008C  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3866  010090  0E74               	movlw	low STR_42
  3867  010092  0100               	movlb	0	; () banked
  3868  010094  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3869  010096  0EFF               	movlw	high STR_42
  3870  010098  0100               	movlb	0	; () banked
  3871  01009A  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3872  01009C  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3873  0100A0                     l10429:
  3874                           
  3875                           ;tasks.h: 391: }
  3876                           ;tasks.h: 392: }
  3877                           ;tasks.h: 393: if (!my_strcmp(opcode, "at") || !my_strcmp(opcode, "adjust_time")) {
  3878  0100A0  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  3879  0100A4  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3880  0100A8  0EED               	movlw	low STR_43
  3881  0100AA  0100               	movlb	0	; () banked
  3882  0100AC  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3883  0100AE  0EFF               	movlw	high STR_43
  3884  0100B0  0100               	movlb	0	; () banked
  3885  0100B2  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3886  0100B4  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3887  0100B8  0900               	iorlw	0
  3888  0100BA  B4D8               	btfsc	status,2,c
  3889  0100BC  D00F               	goto	l10433
  3890  0100BE  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  3891  0100C2  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3892  0100C6  0E31               	movlw	low STR_44
  3893  0100C8  0100               	movlb	0	; () banked
  3894  0100CA  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3895  0100CC  0EFF               	movlw	high STR_44
  3896  0100CE  0100               	movlb	0	; () banked
  3897  0100D0  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3898  0100D2  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3899  0100D6  0900               	iorlw	0
  3900  0100D8  A4D8               	btfss	status,2,c
  3901  0100DA  D0F1               	goto	l10459
  3902  0100DC                     l10433:
  3903                           
  3904                           ;tasks.h: 394: if (!my_strcmp(opland1, "y")) {
  3905  0100DC  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  3906  0100E0  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3907  0100E4  0EA8               	movlw	low (STR_51+6)
  3908  0100E6  0100               	movlb	0	; () banked
  3909  0100E8  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3910  0100EA  0EFF               	movlw	high (STR_51+6)
  3911  0100EC  0100               	movlb	0	; () banked
  3912  0100EE  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3913  0100F0  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3914  0100F4  0900               	iorlw	0
  3915  0100F6  A4D8               	btfss	status,2,c
  3916  0100F8  D018               	goto	l10437
  3917                           
  3918                           ;tasks.h: 395: comm_at(&caltime_now.YY, 0, 99, my_atoi(opland2));
  3919  0100FA  0EB4               	movlw	low (_caltime_now+6)
  3920  0100FC  0100               	movlb	0	; () banked
  3921  0100FE  6FF0               	movwf	comm_at@hand& (0+255),b
  3922  010100  0E00               	movlw	high (_caltime_now+6)
  3923  010102  0100               	movlb	0	; () banked
  3924  010104  6FF1               	movwf	(comm_at@hand+1)& (0+255),b
  3925  010106  0E00               	movlw	0
  3926  010108  0100               	movlb	0	; () banked
  3927  01010A  6FF2               	movwf	comm_at@min& (0+255),b
  3928  01010C  0E63               	movlw	99
  3929  01010E  0100               	movlb	0	; () banked
  3930  010110  6FF3               	movwf	comm_at@max& (0+255),b
  3931  010112  C0F9  F0D5         	movff	command_operation@opland2,my_atoi@str
  3932  010116  C0FA  F0D6         	movff	command_operation@opland2+1,my_atoi@str+1
  3933  01011A  ECDF  F0A4         	call	_my_atoi	;wreg free
  3934  01011E  0100               	movlb	0	; () banked
  3935  010120  51D5               	movf	?_my_atoi& (0+255),w,b
  3936  010122  0100               	movlb	0	; () banked
  3937  010124  6FF4               	movwf	comm_at@value& (0+255),b
  3938  010126  EC48  F0AA         	call	_comm_at	;wreg free
  3939  01012A                     l10437:
  3940                           
  3941                           ;tasks.h: 396: }
  3942                           ;tasks.h: 397: if (!my_strcmp(opland1, "M")) {
  3943  01012A  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  3944  01012E  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3945  010132  0EF9               	movlw	low STR_46
  3946  010134  0100               	movlb	0	; () banked
  3947  010136  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3948  010138  0EFF               	movlw	high STR_46
  3949  01013A  0100               	movlb	0	; () banked
  3950  01013C  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3951  01013E  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3952  010142  0900               	iorlw	0
  3953  010144  A4D8               	btfss	status,2,c
  3954  010146  D018               	goto	l10441
  3955                           
  3956                           ;tasks.h: 398: comm_at(&caltime_now.MM, 1, 12, my_atoi(opland2));
  3957  010148  0EB3               	movlw	low (_caltime_now+5)
  3958  01014A  0100               	movlb	0	; () banked
  3959  01014C  6FF0               	movwf	comm_at@hand& (0+255),b
  3960  01014E  0E00               	movlw	high (_caltime_now+5)
  3961  010150  0100               	movlb	0	; () banked
  3962  010152  6FF1               	movwf	(comm_at@hand+1)& (0+255),b
  3963  010154  0E01               	movlw	1
  3964  010156  0100               	movlb	0	; () banked
  3965  010158  6FF2               	movwf	comm_at@min& (0+255),b
  3966  01015A  0E0C               	movlw	12
  3967  01015C  0100               	movlb	0	; () banked
  3968  01015E  6FF3               	movwf	comm_at@max& (0+255),b
  3969  010160  C0F9  F0D5         	movff	command_operation@opland2,my_atoi@str
  3970  010164  C0FA  F0D6         	movff	command_operation@opland2+1,my_atoi@str+1
  3971  010168  ECDF  F0A4         	call	_my_atoi	;wreg free
  3972  01016C  0100               	movlb	0	; () banked
  3973  01016E  51D5               	movf	?_my_atoi& (0+255),w,b
  3974  010170  0100               	movlb	0	; () banked
  3975  010172  6FF4               	movwf	comm_at@value& (0+255),b
  3976  010174  EC48  F0AA         	call	_comm_at	;wreg free
  3977  010178                     l10441:
  3978                           
  3979                           ;tasks.h: 399: }
  3980                           ;tasks.h: 400: if (!my_strcmp(opland1, "d")) {
  3981  010178  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  3982  01017C  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3983  010180  0ECB               	movlw	low (STR_16+15)
  3984  010182  0100               	movlb	0	; () banked
  3985  010184  6FBB               	movwf	my_strcmp@str2& (0+255),b
  3986  010186  0EFE               	movlw	high (STR_16+15)
  3987  010188  0100               	movlb	0	; () banked
  3988  01018A  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  3989  01018C  EC3C  F0A4         	call	_my_strcmp	;wreg free
  3990  010190  0900               	iorlw	0
  3991  010192  A4D8               	btfss	status,2,c
  3992  010194  D01F               	goto	l10447
  3993                           
  3994                           ;tasks.h: 401: comm_at(&caltime_now.DD, 1, month_length(caltime_now.YY, caltime_now.MM),
      +                           my_atoi(opland2));
  3995  010196  C0B3  F0BF         	movff	_caltime_now+5,month_length@month
  3996  01019A  0100               	movlb	0	; () banked
  3997  01019C  51B4               	movf	(_caltime_now+6)& (0+255),w,b
  3998  01019E  EC71  F09C         	call	_month_length
  3999  0101A2  0100               	movlb	0	; () banked
  4000  0101A4  6FFB               	movwf	_command_operation$5325& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;tasks.h: 401: comm_at(&caltime_now.DD, 1, month_length(caltime_now.YY, caltime_now.MM),
      +                           my_atoi(opland2));
  4004  0101A6  0EB2               	movlw	low (_caltime_now+4)
  4005  0101A8  0100               	movlb	0	; () banked
  4006  0101AA  6FF0               	movwf	comm_at@hand& (0+255),b
  4007  0101AC  0E00               	movlw	high (_caltime_now+4)
  4008  0101AE  0100               	movlb	0	; () banked
  4009  0101B0  6FF1               	movwf	(comm_at@hand+1)& (0+255),b
  4010  0101B2  0E01               	movlw	1
  4011  0101B4  0100               	movlb	0	; () banked
  4012  0101B6  6FF2               	movwf	comm_at@min& (0+255),b
  4013  0101B8  C0FB  F0F3         	movff	_command_operation$5325,comm_at@max
  4014  0101BC  C0F9  F0D5         	movff	command_operation@opland2,my_atoi@str
  4015  0101C0  C0FA  F0D6         	movff	command_operation@opland2+1,my_atoi@str+1
  4016  0101C4  ECDF  F0A4         	call	_my_atoi	;wreg free
  4017  0101C8  0100               	movlb	0	; () banked
  4018  0101CA  51D5               	movf	?_my_atoi& (0+255),w,b
  4019  0101CC  0100               	movlb	0	; () banked
  4020  0101CE  6FF4               	movwf	comm_at@value& (0+255),b
  4021  0101D0  EC48  F0AA         	call	_comm_at	;wreg free
  4022  0101D4                     l10447:
  4023                           
  4024                           ;tasks.h: 402: }
  4025                           ;tasks.h: 403: if (!my_strcmp(opland1, "h")) {
  4026  0101D4  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4027  0101D8  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4028  0101DC  0ECC               	movlw	low (STR_10+2)
  4029  0101DE  0100               	movlb	0	; () banked
  4030  0101E0  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4031  0101E2  0EFF               	movlw	high (STR_10+2)
  4032  0101E4  0100               	movlb	0	; () banked
  4033  0101E6  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4034  0101E8  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4035  0101EC  0900               	iorlw	0
  4036  0101EE  A4D8               	btfss	status,2,c
  4037  0101F0  D018               	goto	l10451
  4038                           
  4039                           ;tasks.h: 404: comm_at(&caltime_now.hh, 0, 23, my_atoi(opland2));
  4040  0101F2  0EB0               	movlw	low (_caltime_now+2)
  4041  0101F4  0100               	movlb	0	; () banked
  4042  0101F6  6FF0               	movwf	comm_at@hand& (0+255),b
  4043  0101F8  0E00               	movlw	high (_caltime_now+2)
  4044  0101FA  0100               	movlb	0	; () banked
  4045  0101FC  6FF1               	movwf	(comm_at@hand+1)& (0+255),b
  4046  0101FE  0E00               	movlw	0
  4047  010200  0100               	movlb	0	; () banked
  4048  010202  6FF2               	movwf	comm_at@min& (0+255),b
  4049  010204  0E17               	movlw	23
  4050  010206  0100               	movlb	0	; () banked
  4051  010208  6FF3               	movwf	comm_at@max& (0+255),b
  4052  01020A  C0F9  F0D5         	movff	command_operation@opland2,my_atoi@str
  4053  01020E  C0FA  F0D6         	movff	command_operation@opland2+1,my_atoi@str+1
  4054  010212  ECDF  F0A4         	call	_my_atoi	;wreg free
  4055  010216  0100               	movlb	0	; () banked
  4056  010218  51D5               	movf	?_my_atoi& (0+255),w,b
  4057  01021A  0100               	movlb	0	; () banked
  4058  01021C  6FF4               	movwf	comm_at@value& (0+255),b
  4059  01021E  EC48  F0AA         	call	_comm_at	;wreg free
  4060  010222                     l10451:
  4061                           
  4062                           ;tasks.h: 405: }
  4063                           ;tasks.h: 406: if (!my_strcmp(opland1, "m")) {
  4064  010222  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4065  010226  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4066  01022A  0EFD               	movlw	low STR_49
  4067  01022C  0100               	movlb	0	; () banked
  4068  01022E  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4069  010230  0EFF               	movlw	high STR_49
  4070  010232  0100               	movlb	0	; () banked
  4071  010234  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4072  010236  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4073  01023A  0900               	iorlw	0
  4074  01023C  A4D8               	btfss	status,2,c
  4075  01023E  D018               	goto	l10455
  4076                           
  4077                           ;tasks.h: 407: comm_at(&caltime_now.mm, 0, 59, my_atoi(opland2));
  4078  010240  0EAF               	movlw	low (_caltime_now+1)
  4079  010242  0100               	movlb	0	; () banked
  4080  010244  6FF0               	movwf	comm_at@hand& (0+255),b
  4081  010246  0E00               	movlw	high (_caltime_now+1)
  4082  010248  0100               	movlb	0	; () banked
  4083  01024A  6FF1               	movwf	(comm_at@hand+1)& (0+255),b
  4084  01024C  0E00               	movlw	0
  4085  01024E  0100               	movlb	0	; () banked
  4086  010250  6FF2               	movwf	comm_at@min& (0+255),b
  4087  010252  0E3B               	movlw	59
  4088  010254  0100               	movlb	0	; () banked
  4089  010256  6FF3               	movwf	comm_at@max& (0+255),b
  4090  010258  C0F9  F0D5         	movff	command_operation@opland2,my_atoi@str
  4091  01025C  C0FA  F0D6         	movff	command_operation@opland2+1,my_atoi@str+1
  4092  010260  ECDF  F0A4         	call	_my_atoi	;wreg free
  4093  010264  0100               	movlb	0	; () banked
  4094  010266  51D5               	movf	?_my_atoi& (0+255),w,b
  4095  010268  0100               	movlb	0	; () banked
  4096  01026A  6FF4               	movwf	comm_at@value& (0+255),b
  4097  01026C  EC48  F0AA         	call	_comm_at	;wreg free
  4098  010270                     l10455:
  4099                           
  4100                           ;tasks.h: 408: }
  4101                           ;tasks.h: 409: if (!my_strcmp(opland1, "s")) {
  4102  010270  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4103  010274  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4104  010278  0E98               	movlw	low (STR_40+7)
  4105  01027A  0100               	movlb	0	; () banked
  4106  01027C  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4107  01027E  0EFF               	movlw	high (STR_40+7)
  4108  010280  0100               	movlb	0	; () banked
  4109  010282  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4110  010284  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4111  010288  0900               	iorlw	0
  4112  01028A  A4D8               	btfss	status,2,c
  4113  01028C  D018               	goto	l10459
  4114                           
  4115                           ;tasks.h: 410: comm_at(&caltime_now.ss, 0, 59, my_atoi(opland2));
  4116  01028E  0EAE               	movlw	low _caltime_now
  4117  010290  0100               	movlb	0	; () banked
  4118  010292  6FF0               	movwf	comm_at@hand& (0+255),b
  4119  010294  0E00               	movlw	high _caltime_now
  4120  010296  0100               	movlb	0	; () banked
  4121  010298  6FF1               	movwf	(comm_at@hand+1)& (0+255),b
  4122  01029A  0E00               	movlw	0
  4123  01029C  0100               	movlb	0	; () banked
  4124  01029E  6FF2               	movwf	comm_at@min& (0+255),b
  4125  0102A0  0E3B               	movlw	59
  4126  0102A2  0100               	movlb	0	; () banked
  4127  0102A4  6FF3               	movwf	comm_at@max& (0+255),b
  4128  0102A6  C0F9  F0D5         	movff	command_operation@opland2,my_atoi@str
  4129  0102AA  C0FA  F0D6         	movff	command_operation@opland2+1,my_atoi@str+1
  4130  0102AE  ECDF  F0A4         	call	_my_atoi	;wreg free
  4131  0102B2  0100               	movlb	0	; () banked
  4132  0102B4  51D5               	movf	?_my_atoi& (0+255),w,b
  4133  0102B6  0100               	movlb	0	; () banked
  4134  0102B8  6FF4               	movwf	comm_at@value& (0+255),b
  4135  0102BA  EC48  F0AA         	call	_comm_at	;wreg free
  4136  0102BE                     l10459:
  4137                           
  4138                           ;tasks.h: 411: }
  4139                           ;tasks.h: 412: }
  4140                           ;tasks.h: 413: if (!my_strcmp(opcode, "display") || !my_strcmp(opcode, "d")) {
  4141  0102BE  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  4142  0102C2  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4143  0102C6  0EA2               	movlw	low STR_51
  4144  0102C8  0100               	movlb	0	; () banked
  4145  0102CA  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4146  0102CC  0EFF               	movlw	high STR_51
  4147  0102CE  0100               	movlb	0	; () banked
  4148  0102D0  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4149  0102D2  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4150  0102D6  0900               	iorlw	0
  4151  0102D8  B4D8               	btfsc	status,2,c
  4152  0102DA  D00F               	goto	l10463
  4153  0102DC  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  4154  0102E0  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4155  0102E4  0ECB               	movlw	low (STR_16+15)
  4156  0102E6  0100               	movlb	0	; () banked
  4157  0102E8  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4158  0102EA  0EFE               	movlw	high (STR_16+15)
  4159  0102EC  0100               	movlb	0	; () banked
  4160  0102EE  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4161  0102F0  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4162  0102F4  0900               	iorlw	0
  4163  0102F6  A4D8               	btfss	status,2,c
  4164  0102F8  D19E               	goto	l10529
  4165  0102FA                     l10463:
  4166                           
  4167                           ;tasks.h: 414: if (!my_strcmp(opland1, "left") || !my_strcmp(opland1, "l")) {
  4168  0102FA  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4169  0102FE  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4170  010302  0EC1               	movlw	low STR_53
  4171  010304  0100               	movlb	0	; () banked
  4172  010306  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4173  010308  0EFF               	movlw	high STR_53
  4174  01030A  0100               	movlb	0	; () banked
  4175  01030C  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4176  01030E  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4177  010312  0900               	iorlw	0
  4178  010314  B4D8               	btfsc	status,2,c
  4179  010316  D00F               	goto	l10467
  4180  010318  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4181  01031C  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4182  010320  0EFB               	movlw	low STR_54
  4183  010322  0100               	movlb	0	; () banked
  4184  010324  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4185  010326  0EFF               	movlw	high STR_54
  4186  010328  0100               	movlb	0	; () banked
  4187  01032A  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4188  01032C  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4189  010330  0900               	iorlw	0
  4190  010332  A4D8               	btfss	status,2,c
  4191  010334  D06C               	goto	l10485
  4192  010336                     l10467:
  4193                           
  4194                           ;tasks.h: 415: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  4195  010336  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4196  01033A  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4197  01033E  0EA3               	movlw	low (STR_57+11)
  4198  010340  0100               	movlb	0	; () banked
  4199  010342  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4200  010344  0EFE               	movlw	high (STR_57+11)
  4201  010346  0100               	movlb	0	; () banked
  4202  010348  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4203  01034A  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4204  01034E  0900               	iorlw	0
  4205  010350  B4D8               	btfsc	status,2,c
  4206  010352  D00F               	goto	l10471
  4207  010354  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4208  010358  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4209  01035C  0EEB               	movlw	low (STR_58+1)
  4210  01035E  0100               	movlb	0	; () banked
  4211  010360  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4212  010362  0EFF               	movlw	high (STR_58+1)
  4213  010364  0100               	movlb	0	; () banked
  4214  010366  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4215  010368  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4216  01036C  0900               	iorlw	0
  4217  01036E  A4D8               	btfss	status,2,c
  4218  010370  D006               	goto	l10473
  4219  010372                     l10471:
  4220                           
  4221                           ;tasks.h: 416: comm_d(0, 0);
  4222  010372  0E00               	movlw	0
  4223  010374  0100               	movlb	0	; () banked
  4224  010376  6FE4               	movwf	comm_d@port& (0+255),b
  4225  010378  0E00               	movlw	0
  4226  01037A  ECDB  F085         	call	_comm_d
  4227  01037E                     l10473:
  4228                           
  4229                           ;tasks.h: 417: }
  4230                           ;tasks.h: 418: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  4231  01037E  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4232  010382  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4233  010386  0E98               	movlw	low STR_57
  4234  010388  0100               	movlb	0	; () banked
  4235  01038A  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4236  01038C  0EFE               	movlw	high STR_57
  4237  01038E  0100               	movlb	0	; () banked
  4238  010390  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4239  010392  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4240  010396  0900               	iorlw	0
  4241  010398  B4D8               	btfsc	status,2,c
  4242  01039A  D00F               	goto	l10477
  4243  01039C  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4244  0103A0  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4245  0103A4  0EEA               	movlw	low STR_58
  4246  0103A6  0100               	movlb	0	; () banked
  4247  0103A8  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4248  0103AA  0EFF               	movlw	high STR_58
  4249  0103AC  0100               	movlb	0	; () banked
  4250  0103AE  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4251  0103B0  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4252  0103B4  0900               	iorlw	0
  4253  0103B6  A4D8               	btfss	status,2,c
  4254  0103B8  D006               	goto	l10479
  4255  0103BA                     l10477:
  4256                           
  4257                           ;tasks.h: 419: comm_d(1, 0);
  4258  0103BA  0E00               	movlw	0
  4259  0103BC  0100               	movlb	0	; () banked
  4260  0103BE  6FE4               	movwf	comm_d@port& (0+255),b
  4261  0103C0  0E01               	movlw	1
  4262  0103C2  ECDB  F085         	call	_comm_d
  4263  0103C6                     l10479:
  4264                           
  4265                           ;tasks.h: 420: }
  4266                           ;tasks.h: 421: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  4267  0103C6  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4268  0103CA  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4269  0103CE  0EDD               	movlw	low STR_59
  4270  0103D0  0100               	movlb	0	; () banked
  4271  0103D2  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4272  0103D4  0EFE               	movlw	high STR_59
  4273  0103D6  0100               	movlb	0	; () banked
  4274  0103D8  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4275  0103DA  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4276  0103DE  0900               	iorlw	0
  4277  0103E0  B4D8               	btfsc	status,2,c
  4278  0103E2  D00F               	goto	l10483
  4279  0103E4  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4280  0103E8  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4281  0103EC  0EF0               	movlw	low STR_60
  4282  0103EE  0100               	movlb	0	; () banked
  4283  0103F0  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4284  0103F2  0EFF               	movlw	high STR_60
  4285  0103F4  0100               	movlb	0	; () banked
  4286  0103F6  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4287  0103F8  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4288  0103FC  0900               	iorlw	0
  4289  0103FE  A4D8               	btfss	status,2,c
  4290  010400  D006               	goto	l10485
  4291  010402                     l10483:
  4292                           
  4293                           ;tasks.h: 422: comm_d(2, 0);
  4294  010402  0E00               	movlw	0
  4295  010404  0100               	movlb	0	; () banked
  4296  010406  6FE4               	movwf	comm_d@port& (0+255),b
  4297  010408  0E02               	movlw	2
  4298  01040A  ECDB  F085         	call	_comm_d
  4299  01040E                     l10485:
  4300                           
  4301                           ;tasks.h: 423: }
  4302                           ;tasks.h: 425: }
  4303                           ;tasks.h: 426: if (!my_strcmp(opland1, "center") || !my_strcmp(opland1, "c")) {
  4304  01040E  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4305  010412  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4306  010416  0EAA               	movlw	low STR_61
  4307  010418  0100               	movlb	0	; () banked
  4308  01041A  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4309  01041C  0EFF               	movlw	high STR_61
  4310  01041E  0100               	movlb	0	; () banked
  4311  010420  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4312  010422  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4313  010426  0900               	iorlw	0
  4314  010428  B4D8               	btfsc	status,2,c
  4315  01042A  D00F               	goto	l10489
  4316  01042C  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4317  010430  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4318  010434  0EEB               	movlw	low (STR_58+1)
  4319  010436  0100               	movlb	0	; () banked
  4320  010438  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4321  01043A  0EFF               	movlw	high (STR_58+1)
  4322  01043C  0100               	movlb	0	; () banked
  4323  01043E  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4324  010440  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4325  010444  0900               	iorlw	0
  4326  010446  A4D8               	btfss	status,2,c
  4327  010448  D06C               	goto	l10507
  4328  01044A                     l10489:
  4329                           
  4330                           ;tasks.h: 427: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  4331  01044A  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4332  01044E  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4333  010452  0EA3               	movlw	low (STR_57+11)
  4334  010454  0100               	movlb	0	; () banked
  4335  010456  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4336  010458  0EFE               	movlw	high (STR_57+11)
  4337  01045A  0100               	movlb	0	; () banked
  4338  01045C  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4339  01045E  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4340  010462  0900               	iorlw	0
  4341  010464  B4D8               	btfsc	status,2,c
  4342  010466  D00F               	goto	l10493
  4343  010468  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4344  01046C  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4345  010470  0EEB               	movlw	low (STR_58+1)
  4346  010472  0100               	movlb	0	; () banked
  4347  010474  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4348  010476  0EFF               	movlw	high (STR_58+1)
  4349  010478  0100               	movlb	0	; () banked
  4350  01047A  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4351  01047C  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4352  010480  0900               	iorlw	0
  4353  010482  A4D8               	btfss	status,2,c
  4354  010484  D006               	goto	l10495
  4355  010486                     l10493:
  4356                           
  4357                           ;tasks.h: 428: comm_d(0, 1);
  4358  010486  0E01               	movlw	1
  4359  010488  0100               	movlb	0	; () banked
  4360  01048A  6FE4               	movwf	comm_d@port& (0+255),b
  4361  01048C  0E00               	movlw	0
  4362  01048E  ECDB  F085         	call	_comm_d
  4363  010492                     l10495:
  4364                           
  4365                           ;tasks.h: 429: }
  4366                           ;tasks.h: 430: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  4367  010492  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4368  010496  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4369  01049A  0E98               	movlw	low STR_57
  4370  01049C  0100               	movlb	0	; () banked
  4371  01049E  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4372  0104A0  0EFE               	movlw	high STR_57
  4373  0104A2  0100               	movlb	0	; () banked
  4374  0104A4  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4375  0104A6  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4376  0104AA  0900               	iorlw	0
  4377  0104AC  B4D8               	btfsc	status,2,c
  4378  0104AE  D00F               	goto	l10499
  4379  0104B0  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4380  0104B4  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4381  0104B8  0EEA               	movlw	low STR_58
  4382  0104BA  0100               	movlb	0	; () banked
  4383  0104BC  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4384  0104BE  0EFF               	movlw	high STR_58
  4385  0104C0  0100               	movlb	0	; () banked
  4386  0104C2  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4387  0104C4  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4388  0104C8  0900               	iorlw	0
  4389  0104CA  A4D8               	btfss	status,2,c
  4390  0104CC  D006               	goto	l10501
  4391  0104CE                     l10499:
  4392                           
  4393                           ;tasks.h: 431: comm_d(1, 1);
  4394  0104CE  0E01               	movlw	1
  4395  0104D0  0100               	movlb	0	; () banked
  4396  0104D2  6FE4               	movwf	comm_d@port& (0+255),b
  4397  0104D4  0E01               	movlw	1
  4398  0104D6  ECDB  F085         	call	_comm_d
  4399  0104DA                     l10501:
  4400                           
  4401                           ;tasks.h: 432: }
  4402                           ;tasks.h: 433: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  4403  0104DA  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4404  0104DE  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4405  0104E2  0EDD               	movlw	low STR_59
  4406  0104E4  0100               	movlb	0	; () banked
  4407  0104E6  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4408  0104E8  0EFE               	movlw	high STR_59
  4409  0104EA  0100               	movlb	0	; () banked
  4410  0104EC  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4411  0104EE  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4412  0104F2  0900               	iorlw	0
  4413  0104F4  B4D8               	btfsc	status,2,c
  4414  0104F6  D00F               	goto	l10505
  4415  0104F8  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4416  0104FC  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4417  010500  0EF0               	movlw	low STR_60
  4418  010502  0100               	movlb	0	; () banked
  4419  010504  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4420  010506  0EFF               	movlw	high STR_60
  4421  010508  0100               	movlb	0	; () banked
  4422  01050A  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4423  01050C  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4424  010510  0900               	iorlw	0
  4425  010512  A4D8               	btfss	status,2,c
  4426  010514  D006               	goto	l10507
  4427  010516                     l10505:
  4428                           
  4429                           ;tasks.h: 434: comm_d(2, 1);
  4430  010516  0E01               	movlw	1
  4431  010518  0100               	movlb	0	; () banked
  4432  01051A  6FE4               	movwf	comm_d@port& (0+255),b
  4433  01051C  0E02               	movlw	2
  4434  01051E  ECDB  F085         	call	_comm_d
  4435  010522                     l10507:
  4436                           
  4437                           ;tasks.h: 435: }
  4438                           ;tasks.h: 436: }
  4439                           ;tasks.h: 437: if (!my_strcmp(opland1, "right") || !my_strcmp(opland1, "r")) {
  4440  010522  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4441  010526  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4442  01052A  0EB1               	movlw	low STR_69
  4443  01052C  0100               	movlb	0	; () banked
  4444  01052E  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4445  010530  0EFF               	movlw	high STR_69
  4446  010532  0100               	movlb	0	; () banked
  4447  010534  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4448  010536  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4449  01053A  0900               	iorlw	0
  4450  01053C  B4D8               	btfsc	status,2,c
  4451  01053E  D00F               	goto	l10511
  4452  010540  C0F7  F0B9         	movff	command_operation@opland1,my_strcmp@str1
  4453  010544  C0F8  F0BA         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4454  010548  0EAF               	movlw	low (STR_61+5)
  4455  01054A  0100               	movlb	0	; () banked
  4456  01054C  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4457  01054E  0EFF               	movlw	high (STR_61+5)
  4458  010550  0100               	movlb	0	; () banked
  4459  010552  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4460  010554  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4461  010558  0900               	iorlw	0
  4462  01055A  A4D8               	btfss	status,2,c
  4463  01055C  D06C               	goto	l10529
  4464  01055E                     l10511:
  4465                           
  4466                           ;tasks.h: 438: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  4467  01055E  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4468  010562  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4469  010566  0EA3               	movlw	low (STR_57+11)
  4470  010568  0100               	movlb	0	; () banked
  4471  01056A  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4472  01056C  0EFE               	movlw	high (STR_57+11)
  4473  01056E  0100               	movlb	0	; () banked
  4474  010570  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4475  010572  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4476  010576  0900               	iorlw	0
  4477  010578  B4D8               	btfsc	status,2,c
  4478  01057A  D00F               	goto	l10515
  4479  01057C  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4480  010580  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4481  010584  0EEB               	movlw	low (STR_58+1)
  4482  010586  0100               	movlb	0	; () banked
  4483  010588  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4484  01058A  0EFF               	movlw	high (STR_58+1)
  4485  01058C  0100               	movlb	0	; () banked
  4486  01058E  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4487  010590  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4488  010594  0900               	iorlw	0
  4489  010596  A4D8               	btfss	status,2,c
  4490  010598  D006               	goto	l10517
  4491  01059A                     l10515:
  4492                           
  4493                           ;tasks.h: 439: comm_d(0, 2);
  4494  01059A  0E02               	movlw	2
  4495  01059C  0100               	movlb	0	; () banked
  4496  01059E  6FE4               	movwf	comm_d@port& (0+255),b
  4497  0105A0  0E00               	movlw	0
  4498  0105A2  ECDB  F085         	call	_comm_d
  4499  0105A6                     l10517:
  4500                           
  4501                           ;tasks.h: 440: }
  4502                           ;tasks.h: 441: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  4503  0105A6  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4504  0105AA  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4505  0105AE  0E98               	movlw	low STR_57
  4506  0105B0  0100               	movlb	0	; () banked
  4507  0105B2  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4508  0105B4  0EFE               	movlw	high STR_57
  4509  0105B6  0100               	movlb	0	; () banked
  4510  0105B8  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4511  0105BA  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4512  0105BE  0900               	iorlw	0
  4513  0105C0  B4D8               	btfsc	status,2,c
  4514  0105C2  D00F               	goto	l10521
  4515  0105C4  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4516  0105C8  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4517  0105CC  0EEA               	movlw	low STR_58
  4518  0105CE  0100               	movlb	0	; () banked
  4519  0105D0  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4520  0105D2  0EFF               	movlw	high STR_58
  4521  0105D4  0100               	movlb	0	; () banked
  4522  0105D6  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4523  0105D8  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4524  0105DC  0900               	iorlw	0
  4525  0105DE  A4D8               	btfss	status,2,c
  4526  0105E0  D006               	goto	l10523
  4527  0105E2                     l10521:
  4528                           
  4529                           ;tasks.h: 442: comm_d(1, 2);
  4530  0105E2  0E02               	movlw	2
  4531  0105E4  0100               	movlb	0	; () banked
  4532  0105E6  6FE4               	movwf	comm_d@port& (0+255),b
  4533  0105E8  0E01               	movlw	1
  4534  0105EA  ECDB  F085         	call	_comm_d
  4535  0105EE                     l10523:
  4536                           
  4537                           ;tasks.h: 443: }
  4538                           ;tasks.h: 444: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  4539  0105EE  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4540  0105F2  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4541  0105F6  0EDD               	movlw	low STR_59
  4542  0105F8  0100               	movlb	0	; () banked
  4543  0105FA  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4544  0105FC  0EFE               	movlw	high STR_59
  4545  0105FE  0100               	movlb	0	; () banked
  4546  010600  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4547  010602  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4548  010606  0900               	iorlw	0
  4549  010608  B4D8               	btfsc	status,2,c
  4550  01060A  D00F               	goto	l10527
  4551  01060C  C0F9  F0B9         	movff	command_operation@opland2,my_strcmp@str1
  4552  010610  C0FA  F0BA         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4553  010614  0EF0               	movlw	low STR_60
  4554  010616  0100               	movlb	0	; () banked
  4555  010618  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4556  01061A  0EFF               	movlw	high STR_60
  4557  01061C  0100               	movlb	0	; () banked
  4558  01061E  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4559  010620  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4560  010624  0900               	iorlw	0
  4561  010626  A4D8               	btfss	status,2,c
  4562  010628  D006               	goto	l10529
  4563  01062A                     l10527:
  4564                           
  4565                           ;tasks.h: 445: comm_d(2, 2);
  4566  01062A  0E02               	movlw	2
  4567  01062C  0100               	movlb	0	; () banked
  4568  01062E  6FE4               	movwf	comm_d@port& (0+255),b
  4569  010630  0E02               	movlw	2
  4570  010632  ECDB  F085         	call	_comm_d
  4571  010636                     l10529:
  4572                           
  4573                           ;tasks.h: 446: }
  4574                           ;tasks.h: 447: }
  4575                           ;tasks.h: 448: }
  4576                           ;tasks.h: 449: if (!my_strcmp(opcode, "print_time") || !my_strcmp(opcode, "t")) {
  4577  010636  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  4578  01063A  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4579  01063E  0E54               	movlw	low STR_77
  4580  010640  0100               	movlb	0	; () banked
  4581  010642  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4582  010644  0EFF               	movlw	high STR_77
  4583  010646  0100               	movlb	0	; () banked
  4584  010648  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4585  01064A  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4586  01064E  0900               	iorlw	0
  4587  010650  B4D8               	btfsc	status,2,c
  4588  010652  D00F               	goto	l10533
  4589  010654  C0F5  F0B9         	movff	command_operation@opcode,my_strcmp@str1
  4590  010658  C0F6  F0BA         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4591  01065C  0EEE               	movlw	low (STR_43+1)
  4592  01065E  0100               	movlb	0	; () banked
  4593  010660  6FBB               	movwf	my_strcmp@str2& (0+255),b
  4594  010662  0EFF               	movlw	high (STR_43+1)
  4595  010664  0100               	movlb	0	; () banked
  4596  010666  6FBC               	movwf	(my_strcmp@str2+1)& (0+255),b
  4597  010668  EC3C  F0A4         	call	_my_strcmp	;wreg free
  4598  01066C  0900               	iorlw	0
  4599  01066E  A4D8               	btfss	status,2,c
  4600  010670  0012               	return	
  4601  010672                     l10533:
  4602                           
  4603                           ;tasks.h: 450: print_time();
  4604  010672  EC7F  F097         	call	_print_time	;wreg free
  4605  010676  0012               	return	
  4606  010678                     __end_of_command_operation:
  4607                           	opt stack 0
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           intcon	equ	0xFF2
  4615                           postinc0	equ	0xFEE
  4616                           wreg	equ	0xFE8
  4617                           postinc1	equ	0xFE6
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           indf2	equ	0xFDF
  4622                           postinc2	equ	0xFDE
  4623                           postdec2	equ	0xFDD
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _my_strcmp *****************
  4629 ;; Defined at:
  4630 ;;		line 53 in file "../My_header\My_stdlib.h"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
  4633 ;;		 -> rx_loop@opland2(100), rx_loop@opland1(100), rx_loop@opcode(100), 
  4634 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
  4635 ;;		 -> STR_78(2), STR_77(11), STR_76(3), STR_75(16), 
  4636 ;;		 -> STR_74(3), STR_73(19), STR_72(2), STR_71(8), 
  4637 ;;		 -> STR_70(2), STR_69(6), STR_68(3), STR_67(16), 
  4638 ;;		 -> STR_66(3), STR_65(19), STR_64(2), STR_63(8), 
  4639 ;;		 -> STR_62(2), STR_61(7), STR_60(3), STR_59(16), 
  4640 ;;		 -> STR_58(3), STR_57(19), STR_56(2), STR_55(8), 
  4641 ;;		 -> STR_54(2), STR_53(5), STR_52(2), STR_51(8), 
  4642 ;;		 -> STR_50(2), STR_49(2), STR_48(2), STR_47(2), 
  4643 ;;		 -> STR_46(2), STR_45(2), STR_44(12), STR_43(3), 
  4644 ;;		 -> STR_42(10), STR_41(4), STR_40(9), STR_38(2), 
  4645 ;;		 -> STR_37(5), 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      char 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;Total ram usage:        5 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:   11
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_command_operation
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text5
  4672  014878                     __ptext5:
  4673                           	opt stack 0
  4674  014878                     _my_strcmp:
  4675                           	opt stack 17
  4676                           
  4677                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  4678                           
  4679                           ;incstack = 0
  4680  014878  D02C               	goto	l9503
  4681  01487A                     l9495:
  4682                           
  4683                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  4684  01487A  C0B9  FFD9         	movff	my_strcmp@str1,fsr2l
  4685  01487E  C0BA  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4686  014882  50DF               	movf	indf2,w,c
  4687  014884  0100               	movlb	0	; () banked
  4688  014886  6FBD               	movwf	??_my_strcmp& (0+255),b
  4689  014888  C0BB  FFF6         	movff	my_strcmp@str2,tblptrl
  4690  01488C  C0BC  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4691  014890                     	if	0	;tblptru may be non-zero
  4692  014890                     	endif
  4693  014890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4694  014890  0E00               	movlw	low (__mediumconst shr (0+16))
  4695  014892  6EF8               	movwf	tblptru,c
  4696  014894                     	endif
  4697  014894  0008               	tblrd		*
  4698  014896  50F5               	movf	tablat,w,c
  4699  014898  0100               	movlb	0	; () banked
  4700  01489A  19BD               	xorwf	??_my_strcmp& (0+255),w,b
  4701  01489C  B4D8               	btfsc	status,2,c
  4702  01489E  D013               	goto	l9501
  4703                           
  4704                           ; BSR set to: 0
  4705  0148A0  C0B9  FFD9         	movff	my_strcmp@str1,fsr2l
  4706  0148A4  C0BA  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4707  0148A8  50DF               	movf	indf2,w,c
  4708  0148AA  0100               	movlb	0	; () banked
  4709  0148AC  6FBD               	movwf	??_my_strcmp& (0+255),b
  4710  0148AE  C0BB  FFF6         	movff	my_strcmp@str2,tblptrl
  4711  0148B2  C0BC  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4712  0148B6                     	if	0	;tblptru may be non-zero
  4713  0148B6                     	endif
  4714  0148B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4715  0148B6  0E00               	movlw	low (__mediumconst shr (0+16))
  4716  0148B8  6EF8               	movwf	tblptru,c
  4717  0148BA                     	endif
  4718  0148BA  0008               	tblrd		*
  4719  0148BC  50F5               	movf	tablat,w,c
  4720  0148BE  0800               	sublw	0
  4721  0148C0  0100               	movlb	0	; () banked
  4722  0148C2  25BD               	addwf	??_my_strcmp& (0+255),w,b
  4723                           
  4724                           ; BSR set to: 0
  4725  0148C4  0012               	return	
  4726  0148C6                     l9501:
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;My_header\My_stdlib.h: 56: str1++;
  4730  0148C6  0100               	movlb	0	; () banked
  4731  0148C8  4BB9               	infsnz	my_strcmp@str1& (0+255),f,b
  4732  0148CA  2BBA               	incf	(my_strcmp@str1+1)& (0+255),f,b
  4733                           
  4734                           ;My_header\My_stdlib.h: 57: str2++;
  4735  0148CC  0100               	movlb	0	; () banked
  4736  0148CE  4BBB               	infsnz	my_strcmp@str2& (0+255),f,b
  4737  0148D0  2BBC               	incf	(my_strcmp@str2+1)& (0+255),f,b
  4738  0148D2                     l9503:
  4739  0148D2  C0B9  FFD9         	movff	my_strcmp@str1,fsr2l
  4740  0148D6  C0BA  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4741  0148DA  50DF               	movf	indf2,w,c
  4742  0148DC  B4D8               	btfsc	status,2,c
  4743  0148DE  D00B               	goto	l9507
  4744  0148E0  C0BB  FFF6         	movff	my_strcmp@str2,tblptrl
  4745  0148E4  C0BC  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4746  0148E8                     	if	0	;tblptru may be non-zero
  4747  0148E8                     	endif
  4748  0148E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4749  0148E8  0E00               	movlw	low (__mediumconst shr (0+16))
  4750  0148EA  6EF8               	movwf	tblptru,c
  4751  0148EC                     	endif
  4752  0148EC  0008               	tblrd		*
  4753  0148EE  50F5               	movf	tablat,w,c
  4754  0148F0  0900               	iorlw	0
  4755  0148F2  A4D8               	btfss	status,2,c
  4756  0148F4  D7C2               	goto	l9495
  4757  0148F6                     l9507:
  4758                           
  4759                           ;My_header\My_stdlib.h: 58: }
  4760                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  4761  0148F6  C0B9  FFD9         	movff	my_strcmp@str1,fsr2l
  4762  0148FA  C0BA  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4763  0148FE  50DF               	movf	indf2,w,c
  4764  014900  0100               	movlb	0	; () banked
  4765  014902  6FBD               	movwf	??_my_strcmp& (0+255),b
  4766  014904  C0BB  FFF6         	movff	my_strcmp@str2,tblptrl
  4767  014908  C0BC  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4768  01490C                     	if	0	;tblptru may be non-zero
  4769  01490C                     	endif
  4770  01490C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4771  01490C  0E00               	movlw	low (__mediumconst shr (0+16))
  4772  01490E  6EF8               	movwf	tblptru,c
  4773  014910                     	endif
  4774  014910  0008               	tblrd		*
  4775  014912  50F5               	movf	tablat,w,c
  4776  014914  0800               	sublw	0
  4777  014916  0100               	movlb	0	; () banked
  4778  014918  25BD               	addwf	??_my_strcmp& (0+255),w,b
  4779  01491A  0012               	return	
  4780  01491C                     __end_of_my_strcmp:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           postinc1	equ	0xFE6
  4792                           postdec1	equ	0xFE5
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           indf2	equ	0xFDF
  4796                           postinc2	equ	0xFDE
  4797                           postdec2	equ	0xFDD
  4798                           fsr2h	equ	0xFDA
  4799                           fsr2l	equ	0xFD9
  4800                           status	equ	0xFD8
  4801                           
  4802 ;; *************** function _my_atoi *****************
  4803 ;; Defined at:
  4804 ;;		line 41 in file "../My_header\My_stdlib.h"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  str             2   28[BANK0 ] PTR const unsigned char 
  4807 ;;		 -> rx_loop@opland2(100), 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  ret             2   34[BANK0 ] unsigned int 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2   28[BANK0 ] unsigned int 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4822 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;Total ram usage:        8 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:   12
  4826 ;; This function calls:
  4827 ;;		___wmul
  4828 ;; This function is called by:
  4829 ;;		_command_operation
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text6
  4834  0149BE                     __ptext6:
  4835                           	opt stack 0
  4836  0149BE                     _my_atoi:
  4837                           	opt stack 16
  4838                           
  4839                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;incstack = 0
  4843  0149BE  0E00               	movlw	0
  4844  0149C0  0100               	movlb	0	; () banked
  4845  0149C2  6FDC               	movwf	(my_atoi@ret+1)& (0+255),b
  4846  0149C4  0E00               	movlw	0
  4847  0149C6  6FDB               	movwf	my_atoi@ret& (0+255),b
  4848                           
  4849                           ;My_header\My_stdlib.h: 43: while (*str) {
  4850  0149C8  D03E               	goto	l9491
  4851  0149CA                     l9481:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  4855  0149CA  C0D5  FFD9         	movff	my_atoi@str,fsr2l
  4856  0149CE  C0D6  FFDA         	movff	my_atoi@str+1,fsr2h
  4857  0149D2  0E2F               	movlw	47
  4858  0149D4  64DF               	cpfsgt	indf2,c
  4859  0149D6  D034               	goto	l9489
  4860                           
  4861                           ; BSR set to: 0
  4862  0149D8  C0D5  FFD9         	movff	my_atoi@str,fsr2l
  4863  0149DC  C0D6  FFDA         	movff	my_atoi@str+1,fsr2h
  4864  0149E0  0E3A               	movlw	58
  4865  0149E2  60DF               	cpfslt	indf2,c
  4866  0149E4  D02D               	goto	l9489
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;My_header\My_stdlib.h: 45: ret *= 10;
  4870  0149E6  C0DB  F0CF         	movff	my_atoi@ret,___wmul@multiplier
  4871  0149EA  C0DC  F0D0         	movff	my_atoi@ret+1,___wmul@multiplier+1
  4872  0149EE  0E00               	movlw	0
  4873  0149F0  0100               	movlb	0	; () banked
  4874  0149F2  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4875  0149F4  0E0A               	movlw	10
  4876  0149F6  6FD1               	movwf	___wmul@multiplicand& (0+255),b
  4877  0149F8  ECBE  F0AD         	call	___wmul	;wreg free
  4878  0149FC  C0CF  F0DB         	movff	?___wmul,my_atoi@ret
  4879  014A00  C0D0  F0DC         	movff	?___wmul+1,my_atoi@ret+1
  4880                           
  4881                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  4882  014A04  0ED0               	movlw	208
  4883  014A06  0100               	movlb	0	; () banked
  4884  014A08  6FD7               	movwf	??_my_atoi& (0+255),b
  4885  014A0A  0EFF               	movlw	255
  4886  014A0C  0100               	movlb	0	; () banked
  4887  014A0E  6FD8               	movwf	(??_my_atoi+1)& (0+255),b
  4888  014A10  C0D5  FFD9         	movff	my_atoi@str,fsr2l
  4889  014A14  C0D6  FFDA         	movff	my_atoi@str+1,fsr2h
  4890  014A18  50DF               	movf	indf2,w,c
  4891  014A1A  0100               	movlb	0	; () banked
  4892  014A1C  6FD9               	movwf	(??_my_atoi+2)& (0+255),b
  4893  014A1E  6BDA               	clrf	(??_my_atoi+3)& (0+255),b
  4894  014A20  0100               	movlb	0	; () banked
  4895  014A22  51D7               	movf	??_my_atoi& (0+255),w,b
  4896  014A24  0100               	movlb	0	; () banked
  4897  014A26  27D9               	addwf	(??_my_atoi+2)& (0+255),f,b
  4898  014A28  0100               	movlb	0	; () banked
  4899  014A2A  51D8               	movf	(??_my_atoi+1)& (0+255),w,b
  4900  014A2C  0100               	movlb	0	; () banked
  4901  014A2E  23DA               	addwfc	(??_my_atoi+3)& (0+255),f,b
  4902  014A30  0100               	movlb	0	; () banked
  4903  014A32  51D9               	movf	(??_my_atoi+2)& (0+255),w,b
  4904  014A34  0100               	movlb	0	; () banked
  4905  014A36  27DB               	addwf	my_atoi@ret& (0+255),f,b
  4906  014A38  0100               	movlb	0	; () banked
  4907  014A3A  51DA               	movf	(??_my_atoi+3)& (0+255),w,b
  4908  014A3C  0100               	movlb	0	; () banked
  4909  014A3E  23DC               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  4910  014A40                     l9489:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;My_header\My_stdlib.h: 47: }
  4914                           ;My_header\My_stdlib.h: 48: str++;
  4915  014A40  0100               	movlb	0	; () banked
  4916  014A42  4BD5               	infsnz	my_atoi@str& (0+255),f,b
  4917  014A44  2BD6               	incf	(my_atoi@str+1)& (0+255),f,b
  4918  014A46                     l9491:
  4919                           
  4920                           ; BSR set to: 0
  4921  014A46  C0D5  FFD9         	movff	my_atoi@str,fsr2l
  4922  014A4A  C0D6  FFDA         	movff	my_atoi@str+1,fsr2h
  4923  014A4E  50DF               	movf	indf2,w,c
  4924  014A50  A4D8               	btfss	status,2,c
  4925  014A52  D7BB               	goto	l9481
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;My_header\My_stdlib.h: 49: }
  4929                           ;My_header\My_stdlib.h: 50: return ret;
  4930  014A54  C0DB  F0D5         	movff	my_atoi@ret,?_my_atoi
  4931  014A58  C0DC  F0D6         	movff	my_atoi@ret+1,?_my_atoi+1
  4932                           
  4933                           ; BSR set to: 0
  4934  014A5C  0012               	return		;funcret
  4935  014A5E                     __end_of_my_atoi:
  4936                           	opt stack 0
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           postinc1	equ	0xFE6
  4947                           postdec1	equ	0xFE5
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           indf2	equ	0xFDF
  4951                           postinc2	equ	0xFDE
  4952                           postdec2	equ	0xFDD
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957 ;; *************** function _comm_d *****************
  4958 ;; Defined at:
  4959 ;;		line 343 in file "tasks.h"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  content         1    wreg     unsigned char 
  4962 ;;  port            1   43[BANK0 ] unsigned char 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  content         1   58[BANK0 ] unsigned char 
  4965 ;;  str            10   44[BANK0 ] unsigned char [10]
  4966 ;; Return value:  Size  Location     Type
  4967 ;;		None               void
  4968 ;; Registers used:
  4969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4975 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4978 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;Total ram usage:       16 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:   15
  4982 ;; This function calls:
  4983 ;;		___lldiv
  4984 ;;		___llmod
  4985 ;;		___lwdiv
  4986 ;;		___lwmod
  4987 ;;		_my_utoa
  4988 ;;		_tx_send
  4989 ;;		_tx_sendn
  4990 ;;		_tx_sends
  4991 ;; This function is called by:
  4992 ;;		_command_operation
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text7
  4997  010BB6                     __ptext7:
  4998                           	opt stack 0
  4999  010BB6                     _comm_d:
  5000                           	opt stack 13
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;incstack = 0
  5004                           ;comm_d@content stored from wreg
  5005  010BB6  0100               	movlb	0	; () banked
  5006  010BB8  6FF3               	movwf	comm_d@content& (0+255),b
  5007                           
  5008                           ;tasks.h: 344: switch (content) {
  5009  010BBA  D1F2               	goto	l9827
  5010  010BBC                     l9777:
  5011                           
  5012                           ;tasks.h: 346: tx_sends("\t");
  5013  010BBC  0EF3               	movlw	low STR_21
  5014  010BBE  0100               	movlb	0	; () banked
  5015  010BC0  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5016  010BC2  0EFF               	movlw	high STR_21
  5017  010BC4  0100               	movlb	0	; () banked
  5018  010BC6  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5019  010BC8  ECB3  F0A9         	call	_tx_sends	;wreg free
  5020                           
  5021                           ;tasks.h: 347: tx_send((I[port] % 10000) / 1000 + '0');
  5022  010BCC  0E27               	movlw	39
  5023  010BCE  0100               	movlb	0	; () banked
  5024  010BD0  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  5025  010BD2  0E10               	movlw	16
  5026  010BD4  6FBB               	movwf	___lwmod@divisor& (0+255),b
  5027  010BD6  0100               	movlb	0	; () banked
  5028  010BD8  51E4               	movf	comm_d@port& (0+255),w,b
  5029  010BDA  0D02               	mullw	2
  5030  010BDC  0E2D               	movlw	low _I
  5031  010BDE  24F3               	addwf	prodl,w,c
  5032  010BE0  6ED9               	movwf	fsr2l,c
  5033  010BE2  0E00               	movlw	high _I
  5034  010BE4  20F4               	addwfc	prodh,w,c
  5035  010BE6  6EDA               	movwf	fsr2h,c
  5036  010BE8  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  5037  010BEC  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  5038  010BF0  ECE8  F0A9         	call	___lwmod	;wreg free
  5039  010BF4  C0B9  F0D5         	movff	?___lwmod,___lwdiv@dividend
  5040  010BF8  C0BA  F0D6         	movff	?___lwmod+1,___lwdiv@dividend+1
  5041  010BFC  0E03               	movlw	3
  5042  010BFE  0100               	movlb	0	; () banked
  5043  010C00  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5044  010C02  0EE8               	movlw	232
  5045  010C04  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  5046  010C06  ECC9  F0A8         	call	___lwdiv	;wreg free
  5047  010C0A  0100               	movlb	0	; () banked
  5048  010C0C  51D5               	movf	?___lwdiv& (0+255),w,b
  5049  010C0E  0F30               	addlw	48
  5050  010C10  EC9E  F0AF         	call	_tx_send
  5051                           
  5052                           ;tasks.h: 348: tx_send('.');
  5053  010C14  0E2E               	movlw	46
  5054  010C16  EC9E  F0AF         	call	_tx_send
  5055                           
  5056                           ;tasks.h: 349: tx_send((I[port] % 1000) / 100 + '0');
  5057  010C1A  0E03               	movlw	3
  5058  010C1C  0100               	movlb	0	; () banked
  5059  010C1E  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  5060  010C20  0EE8               	movlw	232
  5061  010C22  6FBB               	movwf	___lwmod@divisor& (0+255),b
  5062  010C24  0100               	movlb	0	; () banked
  5063  010C26  51E4               	movf	comm_d@port& (0+255),w,b
  5064  010C28  0D02               	mullw	2
  5065  010C2A  0E2D               	movlw	low _I
  5066  010C2C  24F3               	addwf	prodl,w,c
  5067  010C2E  6ED9               	movwf	fsr2l,c
  5068  010C30  0E00               	movlw	high _I
  5069  010C32  20F4               	addwfc	prodh,w,c
  5070  010C34  6EDA               	movwf	fsr2h,c
  5071  010C36  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  5072  010C3A  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  5073  010C3E  ECE8  F0A9         	call	___lwmod	;wreg free
  5074  010C42  C0B9  F0D5         	movff	?___lwmod,___lwdiv@dividend
  5075  010C46  C0BA  F0D6         	movff	?___lwmod+1,___lwdiv@dividend+1
  5076  010C4A  0E00               	movlw	0
  5077  010C4C  0100               	movlb	0	; () banked
  5078  010C4E  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5079  010C50  0E64               	movlw	100
  5080  010C52  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  5081  010C54  ECC9  F0A8         	call	___lwdiv	;wreg free
  5082  010C58  0100               	movlb	0	; () banked
  5083  010C5A  51D5               	movf	?___lwdiv& (0+255),w,b
  5084  010C5C  0F30               	addlw	48
  5085  010C5E  EC9E  F0AF         	call	_tx_send
  5086                           
  5087                           ;tasks.h: 350: tx_send((I[port] % 100) / 10 + '0');
  5088  010C62  0E00               	movlw	0
  5089  010C64  0100               	movlb	0	; () banked
  5090  010C66  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  5091  010C68  0E64               	movlw	100
  5092  010C6A  6FBB               	movwf	___lwmod@divisor& (0+255),b
  5093  010C6C  0100               	movlb	0	; () banked
  5094  010C6E  51E4               	movf	comm_d@port& (0+255),w,b
  5095  010C70  0D02               	mullw	2
  5096  010C72  0E2D               	movlw	low _I
  5097  010C74  24F3               	addwf	prodl,w,c
  5098  010C76  6ED9               	movwf	fsr2l,c
  5099  010C78  0E00               	movlw	high _I
  5100  010C7A  20F4               	addwfc	prodh,w,c
  5101  010C7C  6EDA               	movwf	fsr2h,c
  5102  010C7E  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  5103  010C82  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  5104  010C86  ECE8  F0A9         	call	___lwmod	;wreg free
  5105  010C8A  C0B9  F0D5         	movff	?___lwmod,___lwdiv@dividend
  5106  010C8E  C0BA  F0D6         	movff	?___lwmod+1,___lwdiv@dividend+1
  5107  010C92  0E00               	movlw	0
  5108  010C94  0100               	movlb	0	; () banked
  5109  010C96  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5110  010C98  0E0A               	movlw	10
  5111  010C9A  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  5112  010C9C  ECC9  F0A8         	call	___lwdiv	;wreg free
  5113  010CA0  0100               	movlb	0	; () banked
  5114  010CA2  51D5               	movf	?___lwdiv& (0+255),w,b
  5115  010CA4  0F30               	addlw	48
  5116  010CA6  EC9E  F0AF         	call	_tx_send
  5117                           
  5118                           ;tasks.h: 351: tx_send((I[port] % 10) / 1 + '0');
  5119  010CAA  0100               	movlb	0	; () banked
  5120  010CAC  51E4               	movf	comm_d@port& (0+255),w,b
  5121  010CAE  0D02               	mullw	2
  5122  010CB0  0E2D               	movlw	low _I
  5123  010CB2  24F3               	addwf	prodl,w,c
  5124  010CB4  6ED9               	movwf	fsr2l,c
  5125  010CB6  0E00               	movlw	high _I
  5126  010CB8  20F4               	addwfc	prodh,w,c
  5127  010CBA  6EDA               	movwf	fsr2h,c
  5128  010CBC  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  5129  010CC0  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  5130  010CC4  0E00               	movlw	0
  5131  010CC6  0100               	movlb	0	; () banked
  5132  010CC8  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  5133  010CCA  0E0A               	movlw	10
  5134  010CCC  6FBB               	movwf	___lwmod@divisor& (0+255),b
  5135  010CCE  ECE8  F0A9         	call	___lwmod	;wreg free
  5136  010CD2  0100               	movlb	0	; () banked
  5137  010CD4  51B9               	movf	?___lwmod& (0+255),w,b
  5138  010CD6  0F30               	addlw	48
  5139  010CD8  EC9E  F0AF         	call	_tx_send
  5140                           
  5141                           ;tasks.h: 352: tx_sends("A\n");
  5142  010CDC  0ED5               	movlw	low STR_29
  5143  010CDE  0100               	movlb	0	; () banked
  5144  010CE0  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5145  010CE2  0EFF               	movlw	high STR_29
  5146  010CE4  0100               	movlb	0	; () banked
  5147  010CE6  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5148  010CE8  ECB3  F0A9         	call	_tx_sends	;wreg free
  5149                           
  5150                           ;tasks.h: 353: break;
  5151  010CEC  0012               	return	
  5152  010CEE                     l9791:
  5153                           
  5154                           ;tasks.h: 355: tx_sends("\t");
  5155  010CEE  0EF3               	movlw	low STR_21
  5156  010CF0  0100               	movlb	0	; () banked
  5157  010CF2  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5158  010CF4  0EFF               	movlw	high STR_21
  5159  010CF6  0100               	movlb	0	; () banked
  5160  010CF8  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5161  010CFA  ECB3  F0A9         	call	_tx_sends	;wreg free
  5162                           
  5163                           ;tasks.h: 356: tx_sendn(S[port], 5);
  5164  010CFE  0100               	movlb	0	; () banked
  5165  010D00  51E4               	movf	comm_d@port& (0+255),w,b
  5166  010D02  0D04               	mullw	4
  5167  010D04  0E00               	movlw	low _S
  5168  010D06  24F3               	addwf	prodl,w,c
  5169  010D08  6ED9               	movwf	fsr2l,c
  5170  010D0A  0E03               	movlw	high _S
  5171  010D0C  20F4               	addwfc	prodh,w,c
  5172  010D0E  6EDA               	movwf	fsr2h,c
  5173  010D10  CFDE F0DC          	movff	postinc2,tx_sendn@value
  5174  010D14  CFDD F0DD          	movff	postdec2,tx_sendn@value+1
  5175  010D18  0E05               	movlw	5
  5176  010D1A  0100               	movlb	0	; () banked
  5177  010D1C  6FDE               	movwf	tx_sendn@digits& (0+255),b
  5178  010D1E  EC05  F0A9         	call	_tx_sendn	;wreg free
  5179                           
  5180                           ;tasks.h: 357: tx_sends("mAh\n");
  5181  010D22  0EB7               	movlw	low STR_31
  5182  010D24  0100               	movlb	0	; () banked
  5183  010D26  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5184  010D28  0EFF               	movlw	high STR_31
  5185  010D2A  0100               	movlb	0	; () banked
  5186  010D2C  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5187  010D2E  ECB3  F0A9         	call	_tx_sends	;wreg free
  5188                           
  5189                           ;tasks.h: 358: break;
  5190  010D32  0012               	return	
  5191  010D34                     l9797:
  5192                           
  5193                           ;tasks.h: 360: tx_sends("\t");
  5194  010D34  0EF3               	movlw	low STR_21
  5195  010D36  0100               	movlb	0	; () banked
  5196  010D38  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5197  010D3A  0EFF               	movlw	high STR_21
  5198  010D3C  0100               	movlb	0	; () banked
  5199  010D3E  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5200  010D40  ECB3  F0A9         	call	_tx_sends	;wreg free
  5201                           
  5202                           ;tasks.h: 361: char str[10];
  5203                           ;tasks.h: 362: my_utoa(str, charge_time[port] / 3600 / 24, 2);
  5204  010D44  0E10               	movlw	16
  5205  010D46  0100               	movlb	0	; () banked
  5206  010D48  6FBD               	movwf	___lldiv@divisor& (0+255),b
  5207  010D4A  0E0E               	movlw	14
  5208  010D4C  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  5209  010D4E  0E00               	movlw	0
  5210  010D50  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  5211  010D52  0E00               	movlw	0
  5212  010D54  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  5213  010D56  0100               	movlb	0	; () banked
  5214  010D58  51E4               	movf	comm_d@port& (0+255),w,b
  5215  010D5A  0D04               	mullw	4
  5216  010D5C  0E60               	movlw	low _charge_time
  5217  010D5E  24F3               	addwf	prodl,w,c
  5218  010D60  6ED9               	movwf	fsr2l,c
  5219  010D62  0E00               	movlw	high _charge_time
  5220  010D64  20F4               	addwfc	prodh,w,c
  5221  010D66  6EDA               	movwf	fsr2h,c
  5222  010D68  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  5223  010D6C  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  5224  010D70  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  5225  010D74  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  5226  010D78  EC1D  F0A2         	call	___lldiv	;wreg free
  5227  010D7C  C0B9  F0EF         	movff	?___lldiv,_comm_d$5324
  5228  010D80  C0BA  F0F0         	movff	?___lldiv+1,_comm_d$5324+1
  5229  010D84  C0BB  F0F1         	movff	?___lldiv+2,_comm_d$5324+2
  5230  010D88  C0BC  F0F2         	movff	?___lldiv+3,_comm_d$5324+3
  5231                           
  5232                           ;tasks.h: 361: char str[10];
  5233                           ;tasks.h: 362: my_utoa(str, charge_time[port] / 3600 / 24, 2);
  5234  010D8C  0EE5               	movlw	low comm_d@str
  5235  010D8E  0100               	movlb	0	; () banked
  5236  010D90  6FDC               	movwf	my_utoa@str& (0+255),b
  5237  010D92  0E00               	movlw	high comm_d@str
  5238  010D94  0100               	movlb	0	; () banked
  5239  010D96  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  5240  010D98  C0EF  F0B9         	movff	_comm_d$5324,___lldiv@dividend
  5241  010D9C  C0F0  F0BA         	movff	_comm_d$5324+1,___lldiv@dividend+1
  5242  010DA0  C0F1  F0BB         	movff	_comm_d$5324+2,___lldiv@dividend+2
  5243  010DA4  C0F2  F0BC         	movff	_comm_d$5324+3,___lldiv@dividend+3
  5244  010DA8  0E18               	movlw	24
  5245  010DAA  0100               	movlb	0	; () banked
  5246  010DAC  6FBD               	movwf	___lldiv@divisor& (0+255),b
  5247  010DAE  0E00               	movlw	0
  5248  010DB0  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  5249  010DB2  0E00               	movlw	0
  5250  010DB4  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  5251  010DB6  0E00               	movlw	0
  5252  010DB8  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  5253  010DBA  EC1D  F0A2         	call	___lldiv	;wreg free
  5254  010DBE  C0B9  F0DE         	movff	?___lldiv,my_utoa@value
  5255  010DC2  C0BA  F0DF         	movff	?___lldiv+1,my_utoa@value+1
  5256  010DC6  0E02               	movlw	2
  5257  010DC8  0100               	movlb	0	; () banked
  5258  010DCA  6FE0               	movwf	my_utoa@digits& (0+255),b
  5259  010DCC  EC84  F0A7         	call	_my_utoa	;wreg free
  5260                           
  5261                           ;tasks.h: 363: tx_sends(str);
  5262  010DD0  0EE5               	movlw	low comm_d@str
  5263  010DD2  0100               	movlb	0	; () banked
  5264  010DD4  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5265  010DD6  0E00               	movlw	high comm_d@str
  5266  010DD8  0100               	movlb	0	; () banked
  5267  010DDA  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5268  010DDC  ECB3  F0A9         	call	_tx_sends	;wreg free
  5269                           
  5270                           ;tasks.h: 364: tx_sends("d ");
  5271  010DE0  0EDE               	movlw	low STR_11
  5272  010DE2  0100               	movlb	0	; () banked
  5273  010DE4  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5274  010DE6  0EFF               	movlw	high STR_11
  5275  010DE8  0100               	movlb	0	; () banked
  5276  010DEA  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5277  010DEC  ECB3  F0A9         	call	_tx_sends	;wreg free
  5278                           
  5279                           ;tasks.h: 365: my_utoa(str, (charge_time[port] / 3600) % 24, 2);
  5280  010DF0  0EE5               	movlw	low comm_d@str
  5281  010DF2  0100               	movlb	0	; () banked
  5282  010DF4  6FDC               	movwf	my_utoa@str& (0+255),b
  5283  010DF6  0E00               	movlw	high comm_d@str
  5284  010DF8  0100               	movlb	0	; () banked
  5285  010DFA  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  5286  010DFC  0E10               	movlw	16
  5287  010DFE  0100               	movlb	0	; () banked
  5288  010E00  6FBD               	movwf	___lldiv@divisor& (0+255),b
  5289  010E02  0E0E               	movlw	14
  5290  010E04  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  5291  010E06  0E00               	movlw	0
  5292  010E08  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  5293  010E0A  0E00               	movlw	0
  5294  010E0C  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  5295  010E0E  0100               	movlb	0	; () banked
  5296  010E10  51E4               	movf	comm_d@port& (0+255),w,b
  5297  010E12  0D04               	mullw	4
  5298  010E14  0E60               	movlw	low _charge_time
  5299  010E16  24F3               	addwf	prodl,w,c
  5300  010E18  6ED9               	movwf	fsr2l,c
  5301  010E1A  0E00               	movlw	high _charge_time
  5302  010E1C  20F4               	addwfc	prodh,w,c
  5303  010E1E  6EDA               	movwf	fsr2h,c
  5304  010E20  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  5305  010E24  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  5306  010E28  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  5307  010E2C  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  5308  010E30  EC1D  F0A2         	call	___lldiv	;wreg free
  5309  010E34  C0B9  F0C6         	movff	?___lldiv,___llmod@dividend
  5310  010E38  C0BA  F0C7         	movff	?___lldiv+1,___llmod@dividend+1
  5311  010E3C  C0BB  F0C8         	movff	?___lldiv+2,___llmod@dividend+2
  5312  010E40  C0BC  F0C9         	movff	?___lldiv+3,___llmod@dividend+3
  5313  010E44  0E18               	movlw	24
  5314  010E46  0100               	movlb	0	; () banked
  5315  010E48  6FCA               	movwf	___llmod@divisor& (0+255),b
  5316  010E4A  0E00               	movlw	0
  5317  010E4C  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  5318  010E4E  0E00               	movlw	0
  5319  010E50  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  5320  010E52  0E00               	movlw	0
  5321  010E54  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  5322  010E56  EC7E  F0A5         	call	___llmod	;wreg free
  5323  010E5A  C0C6  F0DE         	movff	?___llmod,my_utoa@value
  5324  010E5E  C0C7  F0DF         	movff	?___llmod+1,my_utoa@value+1
  5325  010E62  0E02               	movlw	2
  5326  010E64  0100               	movlb	0	; () banked
  5327  010E66  6FE0               	movwf	my_utoa@digits& (0+255),b
  5328  010E68  EC84  F0A7         	call	_my_utoa	;wreg free
  5329                           
  5330                           ;tasks.h: 366: tx_sends(str);
  5331  010E6C  0EE5               	movlw	low comm_d@str
  5332  010E6E  0100               	movlb	0	; () banked
  5333  010E70  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5334  010E72  0E00               	movlw	high comm_d@str
  5335  010E74  0100               	movlb	0	; () banked
  5336  010E76  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5337  010E78  ECB3  F0A9         	call	_tx_sends	;wreg free
  5338                           
  5339                           ;tasks.h: 367: tx_sends("h ");
  5340  010E7C  0EE1               	movlw	low STR_12
  5341  010E7E  0100               	movlb	0	; () banked
  5342  010E80  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5343  010E82  0EFF               	movlw	high STR_12
  5344  010E84  0100               	movlb	0	; () banked
  5345  010E86  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5346  010E88  ECB3  F0A9         	call	_tx_sends	;wreg free
  5347                           
  5348                           ;tasks.h: 368: my_utoa(str, (charge_time[port] / 60) % 60, 2);
  5349  010E8C  0EE5               	movlw	low comm_d@str
  5350  010E8E  0100               	movlb	0	; () banked
  5351  010E90  6FDC               	movwf	my_utoa@str& (0+255),b
  5352  010E92  0E00               	movlw	high comm_d@str
  5353  010E94  0100               	movlb	0	; () banked
  5354  010E96  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  5355  010E98  0E3C               	movlw	60
  5356  010E9A  0100               	movlb	0	; () banked
  5357  010E9C  6FBD               	movwf	___lldiv@divisor& (0+255),b
  5358  010E9E  0E00               	movlw	0
  5359  010EA0  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  5360  010EA2  0E00               	movlw	0
  5361  010EA4  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  5362  010EA6  0E00               	movlw	0
  5363  010EA8  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  5364  010EAA  0100               	movlb	0	; () banked
  5365  010EAC  51E4               	movf	comm_d@port& (0+255),w,b
  5366  010EAE  0D04               	mullw	4
  5367  010EB0  0E60               	movlw	low _charge_time
  5368  010EB2  24F3               	addwf	prodl,w,c
  5369  010EB4  6ED9               	movwf	fsr2l,c
  5370  010EB6  0E00               	movlw	high _charge_time
  5371  010EB8  20F4               	addwfc	prodh,w,c
  5372  010EBA  6EDA               	movwf	fsr2h,c
  5373  010EBC  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  5374  010EC0  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  5375  010EC4  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  5376  010EC8  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  5377  010ECC  EC1D  F0A2         	call	___lldiv	;wreg free
  5378  010ED0  C0B9  F0C6         	movff	?___lldiv,___llmod@dividend
  5379  010ED4  C0BA  F0C7         	movff	?___lldiv+1,___llmod@dividend+1
  5380  010ED8  C0BB  F0C8         	movff	?___lldiv+2,___llmod@dividend+2
  5381  010EDC  C0BC  F0C9         	movff	?___lldiv+3,___llmod@dividend+3
  5382  010EE0  0E3C               	movlw	60
  5383  010EE2  0100               	movlb	0	; () banked
  5384  010EE4  6FCA               	movwf	___llmod@divisor& (0+255),b
  5385  010EE6  0E00               	movlw	0
  5386  010EE8  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  5387  010EEA  0E00               	movlw	0
  5388  010EEC  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  5389  010EEE  0E00               	movlw	0
  5390  010EF0  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  5391  010EF2  EC7E  F0A5         	call	___llmod	;wreg free
  5392  010EF6  C0C6  F0DE         	movff	?___llmod,my_utoa@value
  5393  010EFA  C0C7  F0DF         	movff	?___llmod+1,my_utoa@value+1
  5394  010EFE  0E02               	movlw	2
  5395  010F00  0100               	movlb	0	; () banked
  5396  010F02  6FE0               	movwf	my_utoa@digits& (0+255),b
  5397  010F04  EC84  F0A7         	call	_my_utoa	;wreg free
  5398                           
  5399                           ;tasks.h: 369: tx_sends(str);
  5400  010F08  0EE5               	movlw	low comm_d@str
  5401  010F0A  0100               	movlb	0	; () banked
  5402  010F0C  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5403  010F0E  0E00               	movlw	high comm_d@str
  5404  010F10  0100               	movlb	0	; () banked
  5405  010F12  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5406  010F14  ECB3  F0A9         	call	_tx_sends	;wreg free
  5407                           
  5408                           ;tasks.h: 370: tx_sends("m ");
  5409  010F18  0EE4               	movlw	low STR_13
  5410  010F1A  0100               	movlb	0	; () banked
  5411  010F1C  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5412  010F1E  0EFF               	movlw	high STR_13
  5413  010F20  0100               	movlb	0	; () banked
  5414  010F22  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5415  010F24  ECB3  F0A9         	call	_tx_sends	;wreg free
  5416                           
  5417                           ;tasks.h: 371: my_utoa(str, charge_time[port] % 60, 2);
  5418  010F28  0EE5               	movlw	low comm_d@str
  5419  010F2A  0100               	movlb	0	; () banked
  5420  010F2C  6FDC               	movwf	my_utoa@str& (0+255),b
  5421  010F2E  0E00               	movlw	high comm_d@str
  5422  010F30  0100               	movlb	0	; () banked
  5423  010F32  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  5424  010F34  0100               	movlb	0	; () banked
  5425  010F36  51E4               	movf	comm_d@port& (0+255),w,b
  5426  010F38  0D04               	mullw	4
  5427  010F3A  0E60               	movlw	low _charge_time
  5428  010F3C  24F3               	addwf	prodl,w,c
  5429  010F3E  6ED9               	movwf	fsr2l,c
  5430  010F40  0E00               	movlw	high _charge_time
  5431  010F42  20F4               	addwfc	prodh,w,c
  5432  010F44  6EDA               	movwf	fsr2h,c
  5433  010F46  CFDE F0C6          	movff	postinc2,___llmod@dividend
  5434  010F4A  CFDE F0C7          	movff	postinc2,___llmod@dividend+1
  5435  010F4E  CFDE F0C8          	movff	postinc2,___llmod@dividend+2
  5436  010F52  CFDE F0C9          	movff	postinc2,___llmod@dividend+3
  5437  010F56  0E3C               	movlw	60
  5438  010F58  0100               	movlb	0	; () banked
  5439  010F5A  6FCA               	movwf	___llmod@divisor& (0+255),b
  5440  010F5C  0E00               	movlw	0
  5441  010F5E  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  5442  010F60  0E00               	movlw	0
  5443  010F62  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  5444  010F64  0E00               	movlw	0
  5445  010F66  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  5446  010F68  EC7E  F0A5         	call	___llmod	;wreg free
  5447  010F6C  C0C6  F0DE         	movff	?___llmod,my_utoa@value
  5448  010F70  C0C7  F0DF         	movff	?___llmod+1,my_utoa@value+1
  5449  010F74  0E02               	movlw	2
  5450  010F76  0100               	movlb	0	; () banked
  5451  010F78  6FE0               	movwf	my_utoa@digits& (0+255),b
  5452  010F7A  EC84  F0A7         	call	_my_utoa	;wreg free
  5453                           
  5454                           ;tasks.h: 372: tx_sends(str);
  5455  010F7E  0EE5               	movlw	low comm_d@str
  5456  010F80  0100               	movlb	0	; () banked
  5457  010F82  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5458  010F84  0E00               	movlw	high comm_d@str
  5459  010F86  0100               	movlb	0	; () banked
  5460  010F88  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5461  010F8A  ECB3  F0A9         	call	_tx_sends	;wreg free
  5462                           
  5463                           ;tasks.h: 373: tx_sends("s");
  5464  010F8E  0E98               	movlw	low (STR_40+7)
  5465  010F90  0100               	movlb	0	; () banked
  5466  010F92  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5467  010F94  0EFF               	movlw	high (STR_40+7)
  5468  010F96  0100               	movlb	0	; () banked
  5469  010F98  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5470  010F9A  ECB3  F0A9         	call	_tx_sends	;wreg free
  5471                           
  5472                           ;tasks.h: 375: }
  5473                           
  5474                           ;tasks.h: 374: break;
  5475  010F9E  0012               	return	
  5476  010FA0                     l9827:
  5477  010FA0  0100               	movlb	0	; () banked
  5478  010FA2  51F3               	movf	comm_d@content& (0+255),w,b
  5479                           
  5480                           ; Switch size 1, requested type "space"
  5481                           ; Number of cases is 3, Range of values is 0 to 2
  5482                           ; switch strategies available:
  5483                           ; Name         Instructions Cycles
  5484                           ; simple_byte           10     6 (average)
  5485                           ;	Chosen strategy is simple_byte
  5486  010FA4  0A00               	xorlw	0	; case 0
  5487  010FA6  B4D8               	btfsc	status,2,c
  5488  010FA8  D609               	goto	l9777
  5489  010FAA  0A01               	xorlw	1	; case 1
  5490  010FAC  B4D8               	btfsc	status,2,c
  5491  010FAE  D69F               	goto	l9791
  5492  010FB0  0A03               	xorlw	3	; case 2
  5493  010FB2  A4D8               	btfss	status,2,c
  5494  010FB4  0012               	return	
  5495  010FB6  D6BE               	goto	l9797
  5496  010FB8                     __end_of_comm_d:
  5497                           	opt stack 0
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           prodh	equ	0xFF4
  5503                           prodl	equ	0xFF3
  5504                           intcon	equ	0xFF2
  5505                           postinc0	equ	0xFEE
  5506                           wreg	equ	0xFE8
  5507                           postinc1	equ	0xFE6
  5508                           postdec1	equ	0xFE5
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           indf2	equ	0xFDF
  5512                           postinc2	equ	0xFDE
  5513                           postdec2	equ	0xFDD
  5514                           fsr2h	equ	0xFDA
  5515                           fsr2l	equ	0xFD9
  5516                           status	equ	0xFD8
  5517                           
  5518 ;; *************** function _tx_sendn *****************
  5519 ;; Defined at:
  5520 ;;		line 272 in file "../My_header\My_header.h"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  value           2   35[BANK0 ] const unsigned int 
  5523 ;;  digits          1   37[BANK0 ] unsigned char 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  i               1   38[BANK0 ] unsigned char 
  5526 ;;  temp            2   39[BANK0 ] unsigned int 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;		None               void
  5529 ;; Registers used:
  5530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5536 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5537 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;Total ram usage:        6 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:   14
  5543 ;; This function calls:
  5544 ;;		___lwdiv
  5545 ;;		___lwmod
  5546 ;;		_tx_send
  5547 ;; This function is called by:
  5548 ;;		_comm_d
  5549 ;;		_rx_loop
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text8
  5554  01520A                     __ptext8:
  5555                           	opt stack 0
  5556  01520A                     _tx_sendn:
  5557                           	opt stack 15
  5558                           
  5559                           ;My_header\My_header.h: 273: while (digits--) {
  5560                           
  5561                           ;incstack = 0
  5562  01520A  D033               	goto	l9335
  5563  01520C                     l234:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;My_header\My_header.h: 274: uint16_t temp = value;
  5567  01520C  C0DC  F0E0         	movff	tx_sendn@value,tx_sendn@temp
  5568  015210  C0DD  F0E1         	movff	tx_sendn@value+1,tx_sendn@temp+1
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  5572  015214  0E00               	movlw	0
  5573  015216  0100               	movlb	0	; () banked
  5574  015218  6FDF               	movwf	tx_sendn@i& (0+255),b
  5575  01521A  D011               	goto	l9329
  5576  01521C                     l9325:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;My_header\My_header.h: 276: temp /= 10;
  5580  01521C  C0E0  F0D5         	movff	tx_sendn@temp,___lwdiv@dividend
  5581  015220  C0E1  F0D6         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
  5582  015224  0E00               	movlw	0
  5583  015226  0100               	movlb	0	; () banked
  5584  015228  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5585  01522A  0E0A               	movlw	10
  5586  01522C  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  5587  01522E  ECC9  F0A8         	call	___lwdiv	;wreg free
  5588  015232  C0D5  F0E0         	movff	?___lwdiv,tx_sendn@temp
  5589  015236  C0D6  F0E1         	movff	?___lwdiv+1,tx_sendn@temp+1
  5590  01523A  0100               	movlb	0	; () banked
  5591  01523C  2BDF               	incf	tx_sendn@i& (0+255),f,b
  5592  01523E                     l9329:
  5593                           
  5594                           ; BSR set to: 0
  5595  01523E  0100               	movlb	0	; () banked
  5596  015240  51DE               	movf	tx_sendn@digits& (0+255),w,b
  5597  015242  0100               	movlb	0	; () banked
  5598  015244  5DDF               	subwf	tx_sendn@i& (0+255),w,b
  5599  015246  A0D8               	btfss	status,0,c
  5600  015248  D7E9               	goto	l9325
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;My_header\My_header.h: 277: }
  5604                           ;My_header\My_header.h: 278: temp %= 10;
  5605                           
  5606                           ; BSR set to: 0
  5607  01524A  C0E0  F0B9         	movff	tx_sendn@temp,___lwmod@dividend
  5608  01524E  C0E1  F0BA         	movff	tx_sendn@temp+1,___lwmod@dividend+1
  5609  015252  0E00               	movlw	0
  5610  015254  0100               	movlb	0	; () banked
  5611  015256  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  5612  015258  0E0A               	movlw	10
  5613  01525A  6FBB               	movwf	___lwmod@divisor& (0+255),b
  5614  01525C  ECE8  F0A9         	call	___lwmod	;wreg free
  5615  015260  C0B9  F0E0         	movff	?___lwmod,tx_sendn@temp
  5616  015264  C0BA  F0E1         	movff	?___lwmod+1,tx_sendn@temp+1
  5617                           
  5618                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  5619  015268  0100               	movlb	0	; () banked
  5620  01526A  51E0               	movf	tx_sendn@temp& (0+255),w,b
  5621  01526C  0F30               	addlw	48
  5622  01526E  EC9E  F0AF         	call	_tx_send
  5623  015272                     l9335:
  5624  015272  0100               	movlb	0	; () banked
  5625  015274  07DE               	decf	tx_sendn@digits& (0+255),f,b
  5626  015276  0100               	movlb	0	; () banked
  5627  015278  29DE               	incf	tx_sendn@digits& (0+255),w,b
  5628  01527A  B4D8               	btfsc	status,2,c
  5629  01527C  0012               	return	
  5630  01527E  D7C6               	goto	l234
  5631  015280                     __end_of_tx_sendn:
  5632                           	opt stack 0
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           postinc0	equ	0xFEE
  5641                           wreg	equ	0xFE8
  5642                           postinc1	equ	0xFE6
  5643                           postdec1	equ	0xFE5
  5644                           fsr1h	equ	0xFE2
  5645                           fsr1l	equ	0xFE1
  5646                           indf2	equ	0xFDF
  5647                           postinc2	equ	0xFDE
  5648                           postdec2	equ	0xFDD
  5649                           fsr2h	equ	0xFDA
  5650                           fsr2l	equ	0xFD9
  5651                           status	equ	0xFD8
  5652                           
  5653 ;; *************** function _comm_at *****************
  5654 ;; Defined at:
  5655 ;;		line 331 in file "tasks.h"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  hand            2   55[BANK0 ] PTR unsigned char 
  5658 ;;		 -> caltime_now(7), 
  5659 ;;  min             1   57[BANK0 ] unsigned char 
  5660 ;;  max             1   58[BANK0 ] unsigned char 
  5661 ;;  value           1   59[BANK0 ] unsigned char 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;		None               void
  5666 ;; Registers used:
  5667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5673 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;Total ram usage:        5 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:   16
  5680 ;; This function calls:
  5681 ;;		_RTCC_from_caltime
  5682 ;;		_print_time
  5683 ;;		_tx_sends
  5684 ;; This function is called by:
  5685 ;;		_command_operation
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text9
  5690  015490                     __ptext9:
  5691                           	opt stack 0
  5692  015490                     _comm_at:
  5693                           	opt stack 12
  5694                           
  5695                           ;tasks.h: 332: if (value >= min && value <= max) {
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;incstack = 0
  5699  015490  0100               	movlb	0	; () banked
  5700  015492  51F2               	movf	comm_at@min& (0+255),w,b
  5701  015494  0100               	movlb	0	; () banked
  5702  015496  5DF4               	subwf	comm_at@value& (0+255),w,b
  5703  015498  A0D8               	btfss	status,0,c
  5704  01549A  D01F               	goto	l9773
  5705                           
  5706                           ; BSR set to: 0
  5707  01549C  0100               	movlb	0	; () banked
  5708  01549E  51F4               	movf	comm_at@value& (0+255),w,b
  5709  0154A0  0100               	movlb	0	; () banked
  5710  0154A2  5DF3               	subwf	comm_at@max& (0+255),w,b
  5711  0154A4  A0D8               	btfss	status,0,c
  5712  0154A6  D019               	goto	l9773
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;tasks.h: 333: *hand = value;
  5716  0154A8  C0F0  FFD9         	movff	comm_at@hand,fsr2l
  5717  0154AC  C0F1  FFDA         	movff	comm_at@hand+1,fsr2h
  5718  0154B0  C0F4  FFDF         	movff	comm_at@value,indf2
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;tasks.h: 334: RTCC_from_caltime(&caltime_now, &epoch_now);
  5722  0154B4  0EAE               	movlw	low _caltime_now
  5723  0154B6  0100               	movlb	0	; () banked
  5724  0154B8  6FEA               	movwf	RTCC_from_caltime@ct& (0+255),b
  5725  0154BA  0E00               	movlw	high _caltime_now
  5726  0154BC  0100               	movlb	0	; () banked
  5727  0154BE  6FEB               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  5728  0154C0  0EB5               	movlw	low _epoch_now
  5729  0154C2  0100               	movlb	0	; () banked
  5730  0154C4  6FEC               	movwf	RTCC_from_caltime@ep& (0+255),b
  5731  0154C6  0E00               	movlw	high _epoch_now
  5732  0154C8  0100               	movlb	0	; () banked
  5733  0154CA  6FED               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  5734  0154CC  ECA3  F0AD         	call	_RTCC_from_caltime	;wreg free
  5735                           
  5736                           ;tasks.h: 335: time_change_flag = 1;
  5737  0154D0  0E01               	movlw	1
  5738  0154D2  6E4F               	movwf	_time_change_flag,c
  5739                           
  5740                           ;tasks.h: 336: print_time();
  5741  0154D4  EC7F  F097         	call	_print_time	;wreg free
  5742                           
  5743                           ;tasks.h: 337: } else {
  5744  0154D8  0012               	return	
  5745  0154DA                     l9773:
  5746                           
  5747                           ;tasks.h: 338: tx_sends("\terror\n");
  5748  0154DA  0E9A               	movlw	low STR_27
  5749  0154DC  0100               	movlb	0	; () banked
  5750  0154DE  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5751  0154E0  0EFF               	movlw	high STR_27
  5752  0154E2  0100               	movlb	0	; () banked
  5753  0154E4  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5754  0154E6  ECB3  F0A9         	call	_tx_sends	;wreg free
  5755  0154EA  0012               	return	
  5756  0154EC                     __end_of_comm_at:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           intcon	equ	0xFF2
  5765                           postinc0	equ	0xFEE
  5766                           wreg	equ	0xFE8
  5767                           postinc1	equ	0xFE6
  5768                           postdec1	equ	0xFE5
  5769                           fsr1h	equ	0xFE2
  5770                           fsr1l	equ	0xFE1
  5771                           indf2	equ	0xFDF
  5772                           postinc2	equ	0xFDE
  5773                           postdec2	equ	0xFDD
  5774                           fsr2h	equ	0xFDA
  5775                           fsr2l	equ	0xFD9
  5776                           status	equ	0xFD8
  5777                           
  5778 ;; *************** function _print_time *****************
  5779 ;; Defined at:
  5780 ;;		line 308 in file "tasks.h"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;		None               void
  5787 ;; Registers used:
  5788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:   15
  5801 ;; This function calls:
  5802 ;;		_tx_send
  5803 ;;		_tx_send_dec
  5804 ;;		_tx_sends
  5805 ;; This function is called by:
  5806 ;;		_comm_at
  5807 ;;		_command_operation
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text10
  5812  012EFE                     __ptext10:
  5813                           	opt stack 0
  5814  012EFE                     _print_time:
  5815                           	opt stack 13
  5816                           
  5817                           ;tasks.h: 309: GIE = 0;
  5818                           
  5819                           ;incstack = 0
  5820  012EFE  9EF2               	bcf	intcon,7,c	;volatile
  5821                           
  5822                           ;tasks.h: 310: tx_sends("\t");
  5823  012F00  0EF3               	movlw	low STR_21
  5824  012F02  0100               	movlb	0	; () banked
  5825  012F04  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5826  012F06  0EFF               	movlw	high STR_21
  5827  012F08  0100               	movlb	0	; () banked
  5828  012F0A  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5829  012F0C  ECB3  F0A9         	call	_tx_sends	;wreg free
  5830                           
  5831                           ;tasks.h: 311: tx_send_dec(20, edit_flag.flag.YY);
  5832  012F10  0E00               	movlw	0
  5833  012F12  BBA8               	btfsc	_edit_flag& (0+255),5,b
  5834  012F14  0E01               	movlw	1
  5835  012F16  0100               	movlb	0	; () banked
  5836  012F18  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5837  012F1A  0E14               	movlw	20
  5838  012F1C  ECD2  F0AA         	call	_tx_send_dec
  5839                           
  5840                           ;tasks.h: 312: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  5841  012F20  0E00               	movlw	0
  5842  012F22  BBA8               	btfsc	_edit_flag& (0+255),5,b
  5843  012F24  0E01               	movlw	1
  5844  012F26  0100               	movlb	0	; () banked
  5845  012F28  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5846  012F2A  0100               	movlb	0	; () banked
  5847  012F2C  51B4               	movf	(_caltime_now+6)& (0+255),w,b
  5848  012F2E  ECD2  F0AA         	call	_tx_send_dec
  5849                           
  5850                           ;tasks.h: 313: tx_sends("/");
  5851  012F32  0EF7               	movlw	low STR_22
  5852  012F34  0100               	movlb	0	; () banked
  5853  012F36  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5854  012F38  0EFF               	movlw	high STR_22
  5855  012F3A  0100               	movlb	0	; () banked
  5856  012F3C  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5857  012F3E  ECB3  F0A9         	call	_tx_sends	;wreg free
  5858                           
  5859                           ;tasks.h: 314: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  5860  012F42  0E00               	movlw	0
  5861  012F44  B9A8               	btfsc	_edit_flag& (0+255),4,b
  5862  012F46  0E01               	movlw	1
  5863  012F48  0100               	movlb	0	; () banked
  5864  012F4A  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5865  012F4C  0100               	movlb	0	; () banked
  5866  012F4E  51B3               	movf	(_caltime_now+5)& (0+255),w,b
  5867  012F50  ECD2  F0AA         	call	_tx_send_dec
  5868                           
  5869                           ;tasks.h: 315: tx_sends("/");
  5870  012F54  0EF7               	movlw	low STR_22
  5871  012F56  0100               	movlb	0	; () banked
  5872  012F58  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5873  012F5A  0EFF               	movlw	high STR_22
  5874  012F5C  0100               	movlb	0	; () banked
  5875  012F5E  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5876  012F60  ECB3  F0A9         	call	_tx_sends	;wreg free
  5877                           
  5878                           ;tasks.h: 316: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  5879  012F64  0E00               	movlw	0
  5880  012F66  B7A8               	btfsc	_edit_flag& (0+255),3,b
  5881  012F68  0E01               	movlw	1
  5882  012F6A  0100               	movlb	0	; () banked
  5883  012F6C  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5884  012F6E  0100               	movlb	0	; () banked
  5885  012F70  51B2               	movf	(_caltime_now+4)& (0+255),w,b
  5886  012F72  ECD2  F0AA         	call	_tx_send_dec
  5887                           
  5888                           ;tasks.h: 317: tx_sends(" (");
  5889  012F76  0EE7               	movlw	low STR_24
  5890  012F78  0100               	movlb	0	; () banked
  5891  012F7A  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5892  012F7C  0EFF               	movlw	high STR_24
  5893  012F7E  0100               	movlb	0	; () banked
  5894  012F80  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5895  012F82  ECB3  F0A9         	call	_tx_sends	;wreg free
  5896                           
  5897                           ;tasks.h: 318: tx_sends(weekday_3char[caltime_now.EE]);
  5898  012F86  0100               	movlb	0	; () banked
  5899  012F88  51B1               	movf	(_caltime_now+3)& (0+255),w,b
  5900  012F8A  0D04               	mullw	4
  5901  012F8C  0EFC               	movlw	low _weekday_3char
  5902  012F8E  24F3               	addwf	prodl,w,c
  5903  012F90  0100               	movlb	0	; () banked
  5904  012F92  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5905  012F94  0EFC               	movlw	high _weekday_3char
  5906  012F96  20F4               	addwfc	prodh,w,c
  5907  012F98  0100               	movlb	0	; () banked
  5908  012F9A  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5909  012F9C  ECB3  F0A9         	call	_tx_sends	;wreg free
  5910                           
  5911                           ;tasks.h: 319: tx_sends(") ");
  5912  012FA0  0EDB               	movlw	low STR_25
  5913  012FA2  0100               	movlb	0	; () banked
  5914  012FA4  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5915  012FA6  0EFF               	movlw	high STR_25
  5916  012FA8  0100               	movlb	0	; () banked
  5917  012FAA  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5918  012FAC  ECB3  F0A9         	call	_tx_sends	;wreg free
  5919                           
  5920                           ;tasks.h: 320: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  5921  012FB0  0E00               	movlw	0
  5922  012FB2  B5A8               	btfsc	_edit_flag& (0+255),2,b
  5923  012FB4  0E01               	movlw	1
  5924  012FB6  0100               	movlb	0	; () banked
  5925  012FB8  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5926  012FBA  0100               	movlb	0	; () banked
  5927  012FBC  51B0               	movf	(_caltime_now+2)& (0+255),w,b
  5928  012FBE  ECD2  F0AA         	call	_tx_send_dec
  5929                           
  5930                           ;tasks.h: 321: if (colon)tx_send(':');
  5931  012FC2  0100               	movlb	0	; () banked
  5932  012FC4  51A6               	movf	_colon& (0+255),w,b
  5933  012FC6  B4D8               	btfsc	status,2,c
  5934  012FC8  D004               	goto	l9385
  5935                           
  5936                           ; BSR set to: 0
  5937  012FCA  0E3A               	movlw	58
  5938  012FCC  EC9E  F0AF         	call	_tx_send
  5939  012FD0  D003               	goto	l9387
  5940  012FD2                     l9385:
  5941                           
  5942                           ;tasks.h: 322: else tx_send(' ');
  5943  012FD2  0E20               	movlw	32
  5944  012FD4  EC9E  F0AF         	call	_tx_send
  5945  012FD8                     l9387:
  5946                           
  5947                           ;tasks.h: 323: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  5948  012FD8  0E00               	movlw	0
  5949  012FDA  B3A8               	btfsc	_edit_flag& (0+255),1,b
  5950  012FDC  0E01               	movlw	1
  5951  012FDE  0100               	movlb	0	; () banked
  5952  012FE0  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5953  012FE2  0100               	movlb	0	; () banked
  5954  012FE4  51AF               	movf	(_caltime_now+1)& (0+255),w,b
  5955  012FE6  ECD2  F0AA         	call	_tx_send_dec
  5956                           
  5957                           ;tasks.h: 324: tx_sends("-");
  5958  012FEA  0EF5               	movlw	low STR_26
  5959  012FEC  0100               	movlb	0	; () banked
  5960  012FEE  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  5961  012FF0  0EFF               	movlw	high STR_26
  5962  012FF2  0100               	movlb	0	; () banked
  5963  012FF4  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5964  012FF6  ECB3  F0A9         	call	_tx_sends	;wreg free
  5965                           
  5966                           ;tasks.h: 325: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  5967  012FFA  0E00               	movlw	0
  5968  012FFC  B1A8               	btfsc	_edit_flag& (0+255),0,b
  5969  012FFE  0E01               	movlw	1
  5970  013000  0100               	movlb	0	; () banked
  5971  013002  6FE4               	movwf	tx_send_dec@edit& (0+255),b
  5972  013004  0100               	movlb	0	; () banked
  5973  013006  51AE               	movf	_caltime_now& (0+255),w,b
  5974  013008  ECD2  F0AA         	call	_tx_send_dec
  5975                           
  5976                           ;tasks.h: 326: tx_send('\n');
  5977  01300C  0E0A               	movlw	10
  5978  01300E  EC9E  F0AF         	call	_tx_send
  5979                           
  5980                           ;tasks.h: 327: GIE = 1;
  5981  013012  8EF2               	bsf	intcon,7,c	;volatile
  5982  013014  0012               	return		;funcret
  5983  013016                     __end_of_print_time:
  5984                           	opt stack 0
  5985                           tblptru	equ	0xFF8
  5986                           tblptrh	equ	0xFF7
  5987                           tblptrl	equ	0xFF6
  5988                           tablat	equ	0xFF5
  5989                           prodh	equ	0xFF4
  5990                           prodl	equ	0xFF3
  5991                           intcon	equ	0xFF2
  5992                           postinc0	equ	0xFEE
  5993                           wreg	equ	0xFE8
  5994                           postinc1	equ	0xFE6
  5995                           postdec1	equ	0xFE5
  5996                           fsr1h	equ	0xFE2
  5997                           fsr1l	equ	0xFE1
  5998                           indf2	equ	0xFDF
  5999                           postinc2	equ	0xFDE
  6000                           postdec2	equ	0xFDD
  6001                           fsr2h	equ	0xFDA
  6002                           fsr2l	equ	0xFD9
  6003                           status	equ	0xFD8
  6004                           
  6005 ;; *************** function _tx_send_dec *****************
  6006 ;; Defined at:
  6007 ;;		line 265 in file "tasks.h"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  dec             1    wreg     unsigned char 
  6010 ;;  edit            1   43[BANK0 ] unsigned char 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  dec             1   54[BANK0 ] unsigned char 
  6013 ;;  str            10   44[BANK0 ] unsigned char [10]
  6014 ;; Return value:  Size  Location     Type
  6015 ;;		None               void
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6023 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;Total ram usage:       12 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:   14
  6030 ;; This function calls:
  6031 ;;		_my_utoa
  6032 ;;		_tx_sends
  6033 ;; This function is called by:
  6034 ;;		_print_time
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text11
  6039  0155A4                     __ptext11:
  6040                           	opt stack 0
  6041  0155A4                     _tx_send_dec:
  6042                           	opt stack 13
  6043                           
  6044                           ;incstack = 0
  6045                           ;tx_send_dec@dec stored from wreg
  6046  0155A4  0100               	movlb	0	; () banked
  6047  0155A6  6FEF               	movwf	tx_send_dec@dec& (0+255),b
  6048                           
  6049                           ;tasks.h: 266: uint8_t str[10];
  6050                           ;tasks.h: 267: my_utoa(&str, dec, 2);
  6051  0155A8  0EE5               	movlw	low tx_send_dec@str
  6052  0155AA  0100               	movlb	0	; () banked
  6053  0155AC  6FDC               	movwf	my_utoa@str& (0+255),b
  6054  0155AE  0E00               	movlw	high tx_send_dec@str
  6055  0155B0  0100               	movlb	0	; () banked
  6056  0155B2  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  6057  0155B4  C0EF  F0DE         	movff	tx_send_dec@dec,my_utoa@value
  6058  0155B8  0100               	movlb	0	; () banked
  6059  0155BA  6BDF               	clrf	(my_utoa@value+1)& (0+255),b
  6060  0155BC  0E02               	movlw	2
  6061  0155BE  0100               	movlb	0	; () banked
  6062  0155C0  6FE0               	movwf	my_utoa@digits& (0+255),b
  6063  0155C2  EC84  F0A7         	call	_my_utoa	;wreg free
  6064                           
  6065                           ;tasks.h: 268: if (edit && halfsec)tx_sends("  ");
  6066  0155C6  0100               	movlb	0	; () banked
  6067  0155C8  51E4               	movf	tx_send_dec@edit& (0+255),w,b
  6068  0155CA  0100               	movlb	0	; () banked
  6069  0155CC  B4D8               	btfsc	status,2,c
  6070  0155CE  D00D               	goto	l9319
  6071                           
  6072                           ; BSR set to: 0
  6073  0155D0  0100               	movlb	0	; () banked
  6074  0155D2  51A9               	movf	_halfsec& (0+255),w,b
  6075  0155D4  B4D8               	btfsc	status,2,c
  6076  0155D6  D009               	goto	l9319
  6077                           
  6078                           ; BSR set to: 0
  6079  0155D8  0ED8               	movlw	low STR_1
  6080  0155DA  0100               	movlb	0	; () banked
  6081  0155DC  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  6082  0155DE  0EFF               	movlw	high STR_1
  6083  0155E0  0100               	movlb	0	; () banked
  6084  0155E2  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6085  0155E4  ECB3  F0A9         	call	_tx_sends	;wreg free
  6086  0155E8  0012               	return	
  6087  0155EA                     l9319:
  6088                           
  6089                           ;tasks.h: 269: else tx_sends(str);
  6090  0155EA  0EE5               	movlw	low tx_send_dec@str
  6091  0155EC  0100               	movlb	0	; () banked
  6092  0155EE  6FC8               	movwf	tx_sends@asciicode& (0+255),b
  6093  0155F0  0E00               	movlw	high tx_send_dec@str
  6094  0155F2  0100               	movlb	0	; () banked
  6095  0155F4  6FC9               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6096  0155F6  ECB3  F0A9         	call	_tx_sends	;wreg free
  6097  0155FA  0012               	return	
  6098  0155FC                     __end_of_tx_send_dec:
  6099                           	opt stack 0
  6100                           tblptru	equ	0xFF8
  6101                           tblptrh	equ	0xFF7
  6102                           tblptrl	equ	0xFF6
  6103                           tablat	equ	0xFF5
  6104                           prodh	equ	0xFF4
  6105                           prodl	equ	0xFF3
  6106                           intcon	equ	0xFF2
  6107                           postinc0	equ	0xFEE
  6108                           wreg	equ	0xFE8
  6109                           postinc1	equ	0xFE6
  6110                           postdec1	equ	0xFE5
  6111                           fsr1h	equ	0xFE2
  6112                           fsr1l	equ	0xFE1
  6113                           indf2	equ	0xFDF
  6114                           postinc2	equ	0xFDE
  6115                           postdec2	equ	0xFDD
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _tx_sends *****************
  6121 ;; Defined at:
  6122 ;;		line 227 in file "../My_header\My_header.h"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  asciicode       2   15[BANK0 ] PTR const unsigned char 
  6125 ;;		 -> STR_81(4), STR_80(4), STR_79(3), STR_39(362), 
  6126 ;;		 -> STR_36(2), STR_35(3), STR_34(3), STR_33(3), 
  6127 ;;		 -> comm_d@str(10), STR_32(2), STR_31(5), STR_30(2), 
  6128 ;;		 -> STR_29(3), STR_28(2), STR_27(8), STR_26(2), 
  6129 ;;		 -> STR_25(3), STR_24(3), STR_23(2), STR_22(2), 
  6130 ;;		 -> STR_21(2), STR_20(3), tx_send_dec@str(10), weekday_3char(28), 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;		None               void
  6135 ;; Registers used:
  6136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;Total ram usage:        2 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:   13
  6149 ;; This function calls:
  6150 ;;		_ringbuf_put
  6151 ;; This function is called by:
  6152 ;;		_tx_send_dec
  6153 ;;		_print_time
  6154 ;;		_comm_at
  6155 ;;		_comm_d
  6156 ;;		_command_operation
  6157 ;;		_rx_loop
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text12
  6162  015366                     __ptext12:
  6163                           	opt stack 0
  6164  015366                     _tx_sends:
  6165                           	opt stack 16
  6166                           
  6167                           ;My_header\My_header.h: 228: while (*asciicode) {
  6168                           
  6169                           ;incstack = 0
  6170  015366  D01E               	goto	l9095
  6171  015368                     l9091:
  6172                           
  6173                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  6174  015368  0ED2               	movlw	low _tx_buf
  6175  01536A  0100               	movlb	0	; () banked
  6176  01536C  6FC1               	movwf	ringbuf_put@rb& (0+255),b
  6177  01536E  0E03               	movlw	high _tx_buf
  6178  015370  0100               	movlb	0	; () banked
  6179  015372  6FC2               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6180  015374  C0C8  FFF6         	movff	tx_sends@asciicode,tblptrl
  6181  015378  C0C9  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  6182  01537C  0E00               	movlw	low (__mediumconst shr (0+16))
  6183  01537E  6EF8               	movwf	tblptru,c
  6184  015380  0E0E               	movlw	(high __ramtop+-1)
  6185  015382  64F7               	cpfsgt	tblptrh,c
  6186  015384  D003               	bra	u9707
  6187  015386  0008               	tblrd		*
  6188  015388  50F5               	movf	tablat,w,c
  6189  01538A  D005               	bra	u9700
  6190  01538C                     u9707:
  6191  01538C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6192  015390  CFF7 FFE2          	movff	tblptrh,fsr1h
  6193  015394  50E7               	movf	indf1,w,c
  6194  015396                     u9700:
  6195  015396  0100               	movlb	0	; () banked
  6196  015398  6FC3               	movwf	ringbuf_put@asciicode& (0+255),b
  6197  01539A  ECFA  F09E         	call	_ringbuf_put	;wreg free
  6198  01539E  0100               	movlb	0	; () banked
  6199  0153A0  4BC8               	infsnz	tx_sends@asciicode& (0+255),f,b
  6200  0153A2  2BC9               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  6201  0153A4                     l9095:
  6202  0153A4  C0C8  FFF6         	movff	tx_sends@asciicode,tblptrl
  6203  0153A8  C0C9  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  6204  0153AC  0E00               	movlw	low (__mediumconst shr (0+16))
  6205  0153AE  6EF8               	movwf	tblptru,c
  6206  0153B0  0E0E               	movlw	(high __ramtop+-1)
  6207  0153B2  64F7               	cpfsgt	tblptrh,c
  6208  0153B4  D003               	bra	u9717
  6209  0153B6  0008               	tblrd		*
  6210  0153B8  50F5               	movf	tablat,w,c
  6211  0153BA  D005               	bra	u9710
  6212  0153BC                     u9717:
  6213  0153BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6214  0153C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6215  0153C4  50E7               	movf	indf1,w,c
  6216  0153C6                     u9710:
  6217  0153C6  0900               	iorlw	0
  6218  0153C8  A4D8               	btfss	status,2,c
  6219  0153CA  D7CE               	goto	l9091
  6220                           
  6221                           ;My_header\My_header.h: 230: }
  6222                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  6223  0153CC  889D               	bsf	3997,4,c	;volatile
  6224  0153CE  0012               	return		;funcret
  6225  0153D0                     __end_of_tx_sends:
  6226                           	opt stack 0
  6227                           tblptru	equ	0xFF8
  6228                           tblptrh	equ	0xFF7
  6229                           tblptrl	equ	0xFF6
  6230                           tablat	equ	0xFF5
  6231                           prodh	equ	0xFF4
  6232                           prodl	equ	0xFF3
  6233                           intcon	equ	0xFF2
  6234                           postinc0	equ	0xFEE
  6235                           wreg	equ	0xFE8
  6236                           indf1	equ	0xFE7
  6237                           postinc1	equ	0xFE6
  6238                           postdec1	equ	0xFE5
  6239                           fsr1h	equ	0xFE2
  6240                           fsr1l	equ	0xFE1
  6241                           indf2	equ	0xFDF
  6242                           postinc2	equ	0xFDE
  6243                           postdec2	equ	0xFDD
  6244                           fsr2h	equ	0xFDA
  6245                           fsr2l	equ	0xFD9
  6246                           status	equ	0xFD8
  6247                           
  6248 ;; *************** function _tx_send *****************
  6249 ;; Defined at:
  6250 ;;		line 222 in file "../My_header\My_header.h"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  asciicode       1    wreg     const unsigned char 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  asciicode       1   15[BANK0 ] const unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;		None               void
  6257 ;; Registers used:
  6258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6268 ;;Total ram usage:        1 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:   13
  6271 ;; This function calls:
  6272 ;;		_ringbuf_put
  6273 ;; This function is called by:
  6274 ;;		_tx_sendn
  6275 ;;		_print_time
  6276 ;;		_comm_d
  6277 ;;		_rx_loop
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text13
  6282  015F3C                     __ptext13:
  6283                           	opt stack 0
  6284  015F3C                     _tx_send:
  6285                           	opt stack 15
  6286                           
  6287                           ;incstack = 0
  6288                           ;tx_send@asciicode stored from wreg
  6289  015F3C  0100               	movlb	0	; () banked
  6290  015F3E  6FC8               	movwf	tx_send@asciicode& (0+255),b
  6291                           
  6292                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  6293  015F40  0ED2               	movlw	low _tx_buf
  6294  015F42  0100               	movlb	0	; () banked
  6295  015F44  6FC1               	movwf	ringbuf_put@rb& (0+255),b
  6296  015F46  0E03               	movlw	high _tx_buf
  6297  015F48  0100               	movlb	0	; () banked
  6298  015F4A  6FC2               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6299  015F4C  C0C8  F0C3         	movff	tx_send@asciicode,ringbuf_put@asciicode
  6300  015F50  ECFA  F09E         	call	_ringbuf_put	;wreg free
  6301                           
  6302                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  6303  015F54  889D               	bsf	3997,4,c	;volatile
  6304  015F56  0012               	return		;funcret
  6305  015F58                     __end_of_tx_send:
  6306                           	opt stack 0
  6307                           tblptru	equ	0xFF8
  6308                           tblptrh	equ	0xFF7
  6309                           tblptrl	equ	0xFF6
  6310                           tablat	equ	0xFF5
  6311                           prodh	equ	0xFF4
  6312                           prodl	equ	0xFF3
  6313                           intcon	equ	0xFF2
  6314                           postinc0	equ	0xFEE
  6315                           wreg	equ	0xFE8
  6316                           indf1	equ	0xFE7
  6317                           postinc1	equ	0xFE6
  6318                           postdec1	equ	0xFE5
  6319                           fsr1h	equ	0xFE2
  6320                           fsr1l	equ	0xFE1
  6321                           indf2	equ	0xFDF
  6322                           postinc2	equ	0xFDE
  6323                           postdec2	equ	0xFDD
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _RTCC_from_caltime *****************
  6329 ;; Defined at:
  6330 ;;		line 236 in file "../My_header\My_RTCC.h"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  ct              2   49[BANK0 ] PTR struct .
  6333 ;;		 -> caltime_now(7), 
  6334 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  6335 ;;		 -> epoch_now(4), 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;		None               void
  6340 ;; Registers used:
  6341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;Total ram usage:        4 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:   14
  6354 ;; This function calls:
  6355 ;;		_caltime_to_RTCC
  6356 ;;		_caltime_to_epoch
  6357 ;;		_epoch_to_caltime
  6358 ;; This function is called by:
  6359 ;;		_comm_at
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text14
  6364  015B46                     __ptext14:
  6365                           	opt stack 0
  6366  015B46                     _RTCC_from_caltime:
  6367                           	opt stack 13
  6368                           
  6369                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  6370                           
  6371                           ;incstack = 0
  6372  015B46  C0EA  F0D2         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  6373  015B4A  C0EB  F0D3         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  6374  015B4E  C0EC  F0D4         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  6375  015B52  C0ED  F0D5         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  6376  015B56  EC15  F08C         	call	_caltime_to_epoch	;wreg free
  6377                           
  6378                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  6379  015B5A  C0EA  F0DA         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  6380  015B5E  C0EB  F0DB         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  6381  015B62  C0EC  F0DC         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  6382  015B66  C0ED  F0DD         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  6383  015B6A  ECFF  F090         	call	_epoch_to_caltime	;wreg free
  6384                           
  6385                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  6386  015B6E  C0EA  F0C2         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  6387  015B72  C0EB  F0C3         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  6388  015B76  EC64  F09F         	call	_caltime_to_RTCC	;wreg free
  6389  015B7A  0012               	return		;funcret
  6390  015B7C                     __end_of_RTCC_from_caltime:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           postinc0	equ	0xFEE
  6400                           wreg	equ	0xFE8
  6401                           indf1	equ	0xFE7
  6402                           postinc1	equ	0xFE6
  6403                           postdec1	equ	0xFE5
  6404                           fsr1h	equ	0xFE2
  6405                           fsr1l	equ	0xFE1
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           fsr2h	equ	0xFDA
  6410                           fsr2l	equ	0xFD9
  6411                           status	equ	0xFD8
  6412                           
  6413 ;; *************** function _normal_mode_loop *****************
  6414 ;; Defined at:
  6415 ;;		line 576 in file "tasks.h"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:   17
  6436 ;; This function calls:
  6437 ;;		_Auto_cut
  6438 ;;		_RTCC_adjust_time_button
  6439 ;;		_display_LCD
  6440 ;;		_port_loop
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text15
  6447  014720                     __ptext15:
  6448                           	opt stack 0
  6449  014720                     _normal_mode_loop:
  6450                           	opt stack 13
  6451                           
  6452                           ;tasks.h: 577: INTCONbits.GIE = 0;
  6453                           
  6454                           ;incstack = 0
  6455  014720  9EF2               	bcf	intcon,7,c	;volatile
  6456                           
  6457                           ;tasks.h: 578: if (!edit_flag.flags) {
  6458  014722  0100               	movlb	0	; () banked
  6459  014724  51A8               	movf	_edit_flag& (0+255),w,b
  6460  014726  A4D8               	btfss	status,2,c
  6461  014728  D026               	goto	l10781
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;tasks.h: 579: port_loop();
  6465  01472A  ECDC  F087         	call	_port_loop	;wreg free
  6466                           
  6467                           ;tasks.h: 580: if (ctm.flag.press) {
  6468  01472E  0103               	movlb	3	; () banked
  6469  014730  A1F3               	btfss	(_ctm+2)& (0+255),0,b
  6470  014732  D021               	goto	l10781
  6471                           
  6472                           ; BSR set to: 3
  6473                           ;tasks.h: 581: ctm.flags = 0;
  6474  014734  0E00               	movlw	0
  6475  014736  0103               	movlb	3	; () banked
  6476  014738  6FF4               	movwf	(_ctm+3)& (0+255),b
  6477  01473A  0E00               	movlw	0
  6478  01473C  6FF3               	movwf	(_ctm+2)& (0+255),b
  6479                           
  6480                           ;tasks.h: 582: display_flag = 1;
  6481  01473E  0E01               	movlw	1
  6482  014740  6E4C               	movwf	_display_flag,c
  6483                           
  6484                           ;tasks.h: 583: switch (print_content) {
  6485  014742  D00A               	goto	l10779
  6486  014744                     l10767:
  6487                           
  6488                           ;tasks.h: 585: print_content = INTEGRATING;
  6489  014744  0E03               	movlw	3
  6490  014746  D003               	goto	L3
  6491  014748                     l10769:
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;tasks.h: 588: print_content = CHARGE_TIME;
  6495  014748  0E04               	movlw	4
  6496  01474A  D001               	goto	L3
  6497  01474C                     l10771:
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;tasks.h: 591: print_content = TIME;
  6501  01474C  0E01               	movlw	1
  6502  01474E                     L3:
  6503  01474E  0100               	movlb	0	; () banked
  6504  014750  6FAA               	movwf	_print_content& (0+255),b
  6505                           
  6506                           ;tasks.h: 595: break;
  6507  014752  D011               	goto	l10781
  6508  014754                     l10775:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;tasks.h: 597: print_content = CURRENT;
  6512  014754  0E02               	movlw	2
  6513  014756  D7FB               	goto	L3
  6514  014758                     l10779:
  6515  014758  0100               	movlb	0	; () banked
  6516  01475A  51AA               	movf	_print_content& (0+255),w,b
  6517                           
  6518                           ; Switch size 1, requested type "space"
  6519                           ; Number of cases is 4, Range of values is 1 to 4
  6520                           ; switch strategies available:
  6521                           ; Name         Instructions Cycles
  6522                           ; simple_byte           13     7 (average)
  6523                           ;	Chosen strategy is simple_byte
  6524  01475C  0A01               	xorlw	1	; case 1
  6525  01475E  B4D8               	btfsc	status,2,c
  6526  014760  D7F9               	goto	l10775
  6527  014762  0A03               	xorlw	3	; case 2
  6528  014764  B4D8               	btfsc	status,2,c
  6529  014766  D7EE               	goto	l10767
  6530  014768  0A01               	xorlw	1	; case 3
  6531  01476A  B4D8               	btfsc	status,2,c
  6532  01476C  D7ED               	goto	l10769
  6533  01476E  0A07               	xorlw	7	; case 4
  6534  014770  B4D8               	btfsc	status,2,c
  6535  014772  D7EC               	goto	l10771
  6536  014774  D7EF               	goto	l10775
  6537  014776                     l10781:
  6538                           
  6539                           ;tasks.h: 600: }
  6540                           ;tasks.h: 601: }
  6541                           ;tasks.h: 602: if (print_content == TIME)RTCC_adjust_time_button(&ctm, &ct0, &ct1);
  6542  014776  0100               	movlb	0	; () banked
  6543  014778  05AA               	decf	_print_content& (0+255),w,b
  6544  01477A  A4D8               	btfss	status,2,c
  6545  01477C  D014               	goto	l10785
  6546                           
  6547                           ; BSR set to: 0
  6548  01477E  0EF1               	movlw	low _ctm
  6549  014780  0100               	movlb	0	; () banked
  6550  014782  6FF8               	movwf	RTCC_adjust_time_button@mode& (0+255),b
  6551  014784  0E03               	movlw	high _ctm
  6552  014786  0100               	movlb	0	; () banked
  6553  014788  6FF9               	movwf	(RTCC_adjust_time_button@mode+1)& (0+255),b
  6554  01478A  0EFC               	movlw	low _ct0
  6555  01478C  0100               	movlb	0	; () banked
  6556  01478E  6FFA               	movwf	RTCC_adjust_time_button@cnt_inc& (0+255),b
  6557  014790  0E02               	movlw	high _ct0
  6558  014792  0100               	movlb	0	; () banked
  6559  014794  6FFB               	movwf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),b
  6560  014796  0EE9               	movlw	low _ct1
  6561  014798  0100               	movlb	0	; () banked
  6562  01479A  6FFC               	movwf	RTCC_adjust_time_button@cnt_dec& (0+255),b
  6563  01479C  0E03               	movlw	high _ct1
  6564  01479E  0100               	movlb	0	; () banked
  6565  0147A0  6FFD               	movwf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),b
  6566  0147A2  ECED  F096         	call	_RTCC_adjust_time_button	;wreg free
  6567  0147A6                     l10785:
  6568                           
  6569                           ;tasks.h: 603: if (cut_time_flag) {
  6570  0147A6  504B               	movf	_cut_time_flag,w,c
  6571  0147A8  B4D8               	btfsc	status,2,c
  6572  0147AA  D004               	goto	l10791
  6573                           
  6574                           ;tasks.h: 604: cut_time_flag = 0;
  6575  0147AC  0E00               	movlw	0
  6576  0147AE  6E4B               	movwf	_cut_time_flag,c
  6577                           
  6578                           ;tasks.h: 605: Auto_cut();
  6579  0147B0  EC1F  F099         	call	_Auto_cut	;wreg free
  6580  0147B4                     l10791:
  6581                           
  6582                           ;tasks.h: 606: }
  6583                           ;tasks.h: 607: if (time_change_flag) {
  6584  0147B4  504F               	movf	_time_change_flag,w,c
  6585  0147B6  B4D8               	btfsc	status,2,c
  6586  0147B8  D004               	goto	l867
  6587                           
  6588                           ;tasks.h: 608: time_change_flag = 0;
  6589  0147BA  0E00               	movlw	0
  6590  0147BC  6E4F               	movwf	_time_change_flag,c
  6591                           
  6592                           ;tasks.h: 609: display_flag = 1;
  6593  0147BE  0E01               	movlw	1
  6594  0147C0  6E4C               	movwf	_display_flag,c
  6595  0147C2                     l867:
  6596                           
  6597                           ;tasks.h: 610: }
  6598                           ;tasks.h: 611: if (display_flag) {
  6599  0147C2  504C               	movf	_display_flag,w,c
  6600  0147C4  B4D8               	btfsc	status,2,c
  6601  0147C6  0012               	return	
  6602                           
  6603                           ;tasks.h: 612: display_flag = 0;
  6604  0147C8  0E00               	movlw	0
  6605  0147CA  6E4C               	movwf	_display_flag,c
  6606                           
  6607                           ;tasks.h: 613: display_LCD();
  6608  0147CC  EC3C  F083         	call	_display_LCD	;wreg free
  6609  0147D0  0012               	return	
  6610  0147D2                     __end_of_normal_mode_loop:
  6611                           	opt stack 0
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           postinc0	equ	0xFEE
  6620                           wreg	equ	0xFE8
  6621                           indf1	equ	0xFE7
  6622                           postinc1	equ	0xFE6
  6623                           postdec1	equ	0xFE5
  6624                           fsr1h	equ	0xFE2
  6625                           fsr1l	equ	0xFE1
  6626                           indf2	equ	0xFDF
  6627                           postinc2	equ	0xFDE
  6628                           postdec2	equ	0xFDD
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function _port_loop *****************
  6634 ;; Defined at:
  6635 ;;		line 504 in file "tasks.h"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  i               1    4[BANK0 ] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;Total ram usage:        1 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:   12
  6656 ;; This function calls:
  6657 ;;		_LED_OUT
  6658 ;;		_OUT
  6659 ;;		_delay_set
  6660 ;;		_sw_flag_clear
  6661 ;;		_sw_flag_read
  6662 ;; This function is called by:
  6663 ;;		_normal_mode_loop
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text16
  6668  010FB8                     __ptext16:
  6669                           	opt stack 0
  6670  010FB8                     _port_loop:
  6671                           	opt stack 17
  6672                           
  6673                           ;tasks.h: 505: uint8_t i;
  6674                           ;tasks.h: 506: for (i = 0; i < 3; i++) {
  6675                           
  6676                           ;incstack = 0
  6677  010FB8  0E00               	movlw	0
  6678  010FBA  0100               	movlb	0	; () banked
  6679  010FBC  6FBD               	movwf	port_loop@i& (0+255),b
  6680  010FBE                     l10537:
  6681                           
  6682                           ; BSR set to: 0
  6683  010FBE  0E02               	movlw	2
  6684  010FC0  0100               	movlb	0	; () banked
  6685  010FC2  65BD               	cpfsgt	port_loop@i& (0+255),b
  6686  010FC4  D001               	goto	l10541
  6687  010FC6  D15F               	goto	l10625
  6688  010FC8                     l10541:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;tasks.h: 507: if (sw_flag_read(i, 0x0100)) {
  6692  010FC8  0E01               	movlw	1
  6693  010FCA  0100               	movlb	0	; () banked
  6694  010FCC  6FBA               	movwf	(sw_flag_read@bit_and+1)& (0+255),b
  6695  010FCE  0E00               	movlw	0
  6696  010FD0  6FB9               	movwf	sw_flag_read@bit_and& (0+255),b
  6697  010FD2  0100               	movlb	0	; () banked
  6698  010FD4  51BD               	movf	port_loop@i& (0+255),w,b
  6699  010FD6  EC8D  F0A8         	call	_sw_flag_read
  6700  010FDA  0100               	movlb	0	; () banked
  6701  010FDC  51B9               	movf	?_sw_flag_read& (0+255),w,b
  6702  010FDE  0100               	movlb	0	; () banked
  6703  010FE0  11BA               	iorwf	(?_sw_flag_read+1)& (0+255),w,b
  6704  010FE2  B4D8               	btfsc	status,2,c
  6705  010FE4  D033               	goto	l10559
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;tasks.h: 509: OUT(i, 1);
  6709  010FE6  0E01               	movlw	1
  6710  010FE8  0100               	movlb	0	; () banked
  6711  010FEA  6FB9               	movwf	OUT@value& (0+255),b
  6712  010FEC  0100               	movlb	0	; () banked
  6713  010FEE  51BD               	movf	port_loop@i& (0+255),w,b
  6714  010FF0  EC19  F0AA         	call	_OUT
  6715                           
  6716                           ;tasks.h: 510: LED_OUT(i, 1);
  6717  010FF4  0E01               	movlw	1
  6718  010FF6  0100               	movlb	0	; () banked
  6719  010FF8  6FB9               	movwf	LED_OUT@value& (0+255),b
  6720  010FFA  0100               	movlb	0	; () banked
  6721  010FFC  51BD               	movf	port_loop@i& (0+255),w,b
  6722  010FFE  EC22  F0AC         	call	_LED_OUT
  6723                           
  6724                           ;tasks.h: 511: cut_cnt[i] = 0;
  6725  011002  0100               	movlb	0	; () banked
  6726  011004  51BD               	movf	port_loop@i& (0+255),w,b
  6727  011006  0D02               	mullw	2
  6728  011008  0E28               	movlw	low _cut_cnt
  6729  01100A  24F3               	addwf	prodl,w,c
  6730  01100C  6ED9               	movwf	fsr2l,c
  6731  01100E  0E03               	movlw	high _cut_cnt
  6732  011010  20F4               	addwfc	prodh,w,c
  6733  011012  6EDA               	movwf	fsr2h,c
  6734  011014  0E00               	movlw	0
  6735  011016  6EDE               	movwf	postinc2,c
  6736  011018  0E00               	movlw	0
  6737  01101A  6EDD               	movwf	postdec2,c
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;tasks.h: 512: print_port = i;
  6741  01101C  C0BD  F0AB         	movff	port_loop@i,_print_port
  6742                           
  6743                           ;tasks.h: 513: if (print_content == AUTO_STOP || print_content == ALWAYS_ON || print_con
      +                          tent == RESETED || print_content == LOGO)print_content = CURRENT;
  6744  011020  0E08               	movlw	8
  6745  011022  0100               	movlb	0	; () banked
  6746  011024  19AA               	xorwf	_print_content& (0+255),w,b
  6747  011026  B4D8               	btfsc	status,2,c
  6748  011028  D00E               	goto	l10557
  6749                           
  6750                           ; BSR set to: 0
  6751  01102A  0E07               	movlw	7
  6752  01102C  0100               	movlb	0	; () banked
  6753  01102E  19AA               	xorwf	_print_content& (0+255),w,b
  6754  011030  B4D8               	btfsc	status,2,c
  6755  011032  D009               	goto	l10557
  6756                           
  6757                           ; BSR set to: 0
  6758  011034  0E06               	movlw	6
  6759  011036  0100               	movlb	0	; () banked
  6760  011038  19AA               	xorwf	_print_content& (0+255),w,b
  6761  01103A  B4D8               	btfsc	status,2,c
  6762  01103C  D004               	goto	l10557
  6763                           
  6764                           ; BSR set to: 0
  6765  01103E  0100               	movlb	0	; () banked
  6766  011040  51AA               	movf	_print_content& (0+255),w,b
  6767  011042  A4D8               	btfss	status,2,c
  6768  011044  D003               	goto	l10559
  6769  011046                     l10557:
  6770                           
  6771                           ; BSR set to: 0
  6772  011046  0E02               	movlw	2
  6773  011048  0100               	movlb	0	; () banked
  6774  01104A  6FAA               	movwf	_print_content& (0+255),b
  6775  01104C                     l10559:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;tasks.h: 514: }
  6779                           ;tasks.h: 515: if (sw_flag_read(i, 0x0800)) {
  6780  01104C  0E08               	movlw	8
  6781  01104E  0100               	movlb	0	; () banked
  6782  011050  6FBA               	movwf	(sw_flag_read@bit_and+1)& (0+255),b
  6783  011052  0E00               	movlw	0
  6784  011054  6FB9               	movwf	sw_flag_read@bit_and& (0+255),b
  6785  011056  0100               	movlb	0	; () banked
  6786  011058  51BD               	movf	port_loop@i& (0+255),w,b
  6787  01105A  EC8D  F0A8         	call	_sw_flag_read
  6788  01105E  0100               	movlb	0	; () banked
  6789  011060  51B9               	movf	?_sw_flag_read& (0+255),w,b
  6790  011062  0100               	movlb	0	; () banked
  6791  011064  11BA               	iorwf	(?_sw_flag_read+1)& (0+255),w,b
  6792  011066  B4D8               	btfsc	status,2,c
  6793  011068  D00E               	goto	l839
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;tasks.h: 516: sw_flag_clear(i, 0x0000);
  6797  01106A  0E00               	movlw	0
  6798  01106C  0100               	movlb	0	; () banked
  6799  01106E  6FBA               	movwf	(sw_flag_clear@bit_and+1)& (0+255),b
  6800  011070  0E00               	movlw	0
  6801  011072  6FB9               	movwf	sw_flag_clear@bit_and& (0+255),b
  6802  011074  0100               	movlb	0	; () banked
  6803  011076  51BD               	movf	port_loop@i& (0+255),w,b
  6804  011078  EC56  F0AB         	call	_sw_flag_clear
  6805                           
  6806                           ;tasks.h: 517: print_content = RESET_;
  6807  01107C  0E05               	movlw	5
  6808  01107E  0100               	movlb	0	; () banked
  6809  011080  6FAA               	movwf	_print_content& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;tasks.h: 518: display_flag = 1;
  6813  011082  0E01               	movlw	1
  6814  011084  6E4C               	movwf	_display_flag,c
  6815  011086                     l839:
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;tasks.h: 519: }
  6819                           ;tasks.h: 520: if (sw_flag_read(i, 0x0008)) {
  6820  011086  0E00               	movlw	0
  6821  011088  0100               	movlb	0	; () banked
  6822  01108A  6FBA               	movwf	(sw_flag_read@bit_and+1)& (0+255),b
  6823  01108C  0E08               	movlw	8
  6824  01108E  6FB9               	movwf	sw_flag_read@bit_and& (0+255),b
  6825  011090  0100               	movlb	0	; () banked
  6826  011092  51BD               	movf	port_loop@i& (0+255),w,b
  6827  011094  EC8D  F0A8         	call	_sw_flag_read
  6828  011098  0100               	movlb	0	; () banked
  6829  01109A  51B9               	movf	?_sw_flag_read& (0+255),w,b
  6830  01109C  0100               	movlb	0	; () banked
  6831  01109E  11BA               	iorwf	(?_sw_flag_read+1)& (0+255),w,b
  6832  0110A0  B4D8               	btfsc	status,2,c
  6833  0110A2  D042               	goto	l10581
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;tasks.h: 521: sw_flag_clear(i, 0x0000);
  6837  0110A4  0E00               	movlw	0
  6838  0110A6  0100               	movlb	0	; () banked
  6839  0110A8  6FBA               	movwf	(sw_flag_clear@bit_and+1)& (0+255),b
  6840  0110AA  0E00               	movlw	0
  6841  0110AC  6FB9               	movwf	sw_flag_clear@bit_and& (0+255),b
  6842  0110AE  0100               	movlb	0	; () banked
  6843  0110B0  51BD               	movf	port_loop@i& (0+255),w,b
  6844  0110B2  EC56  F0AB         	call	_sw_flag_clear
  6845                           
  6846                           ;tasks.h: 522: print_content = RESETED;
  6847  0110B6  0E06               	movlw	6
  6848  0110B8  0100               	movlb	0	; () banked
  6849  0110BA  6FAA               	movwf	_print_content& (0+255),b
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;tasks.h: 523: display_flag = 1;
  6853  0110BC  0E01               	movlw	1
  6854  0110BE  6E4C               	movwf	_display_flag,c
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;tasks.h: 524: S[i] = 0;
  6858  0110C0  0100               	movlb	0	; () banked
  6859  0110C2  51BD               	movf	port_loop@i& (0+255),w,b
  6860  0110C4  0D04               	mullw	4
  6861  0110C6  0E00               	movlw	low _S
  6862  0110C8  24F3               	addwf	prodl,w,c
  6863  0110CA  6ED9               	movwf	fsr2l,c
  6864  0110CC  0E03               	movlw	high _S
  6865  0110CE  20F4               	addwfc	prodh,w,c
  6866  0110D0  6EDA               	movwf	fsr2h,c
  6867  0110D2  6ADE               	clrf	postinc2,c
  6868  0110D4  6ADE               	clrf	postinc2,c
  6869  0110D6  6ADE               	clrf	postinc2,c
  6870  0110D8  6ADD               	clrf	postdec2,c
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;tasks.h: 525: s[i] = 0;
  6874  0110DA  0100               	movlb	0	; () banked
  6875  0110DC  51BD               	movf	port_loop@i& (0+255),w,b
  6876  0110DE  0D04               	mullw	4
  6877  0110E0  0E0C               	movlw	low _s
  6878  0110E2  24F3               	addwf	prodl,w,c
  6879  0110E4  6ED9               	movwf	fsr2l,c
  6880  0110E6  0E03               	movlw	high _s
  6881  0110E8  20F4               	addwfc	prodh,w,c
  6882  0110EA  6EDA               	movwf	fsr2h,c
  6883  0110EC  6ADE               	clrf	postinc2,c
  6884  0110EE  6ADE               	clrf	postinc2,c
  6885  0110F0  6ADE               	clrf	postinc2,c
  6886  0110F2  6ADD               	clrf	postdec2,c
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;tasks.h: 526: charge_time[i] = 0;
  6890  0110F4  0100               	movlb	0	; () banked
  6891  0110F6  51BD               	movf	port_loop@i& (0+255),w,b
  6892  0110F8  0D04               	mullw	4
  6893  0110FA  0E60               	movlw	low _charge_time
  6894  0110FC  24F3               	addwf	prodl,w,c
  6895  0110FE  6ED9               	movwf	fsr2l,c
  6896  011100  0E00               	movlw	high _charge_time
  6897  011102  20F4               	addwfc	prodh,w,c
  6898  011104  6EDA               	movwf	fsr2h,c
  6899  011106  6ADE               	clrf	postinc2,c
  6900  011108  6ADE               	clrf	postinc2,c
  6901  01110A  6ADE               	clrf	postinc2,c
  6902  01110C  6ADD               	clrf	postdec2,c
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;tasks.h: 527: delay_set(&delay_display, 64);
  6906  01110E  0E50               	movlw	low _delay_display
  6907  011110  0100               	movlb	0	; () banked
  6908  011112  6FB9               	movwf	delay_set@d& (0+255),b
  6909  011114  0E00               	movlw	high _delay_display
  6910  011116  0100               	movlb	0	; () banked
  6911  011118  6FBA               	movwf	(delay_set@d+1)& (0+255),b
  6912  01111A  0E00               	movlw	0
  6913  01111C  0100               	movlb	0	; () banked
  6914  01111E  6FBC               	movwf	(delay_set@value+1)& (0+255),b
  6915  011120  0E40               	movlw	64
  6916  011122  6FBB               	movwf	delay_set@value& (0+255),b
  6917  011124  EC3B  F0AF         	call	_delay_set	;wreg free
  6918  011128                     l10581:
  6919                           
  6920                           ;tasks.h: 528: }
  6921                           ;tasks.h: 529: if (sw_flag_read(i, 0x2000)) {
  6922  011128  0E20               	movlw	32
  6923  01112A  0100               	movlb	0	; () banked
  6924  01112C  6FBA               	movwf	(sw_flag_read@bit_and+1)& (0+255),b
  6925  01112E  0E00               	movlw	0
  6926  011130  6FB9               	movwf	sw_flag_read@bit_and& (0+255),b
  6927  011132  0100               	movlb	0	; () banked
  6928  011134  51BD               	movf	port_loop@i& (0+255),w,b
  6929  011136  EC8D  F0A8         	call	_sw_flag_read
  6930  01113A  0100               	movlb	0	; () banked
  6931  01113C  51B9               	movf	?_sw_flag_read& (0+255),w,b
  6932  01113E  0100               	movlb	0	; () banked
  6933  011140  11BA               	iorwf	(?_sw_flag_read+1)& (0+255),w,b
  6934  011142  B4D8               	btfsc	status,2,c
  6935  011144  D01C               	goto	l10591
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;tasks.h: 530: sw_flag_clear(i, 0x0000);
  6939  011146  0E00               	movlw	0
  6940  011148  0100               	movlb	0	; () banked
  6941  01114A  6FBA               	movwf	(sw_flag_clear@bit_and+1)& (0+255),b
  6942  01114C  0E00               	movlw	0
  6943  01114E  6FB9               	movwf	sw_flag_clear@bit_and& (0+255),b
  6944  011150  0100               	movlb	0	; () banked
  6945  011152  51BD               	movf	port_loop@i& (0+255),w,b
  6946  011154  EC56  F0AB         	call	_sw_flag_clear
  6947                           
  6948                           ;tasks.h: 531: if (auto_cut_ON[i]) {
  6949  011158  0100               	movlb	0	; () banked
  6950  01115A  51BD               	movf	port_loop@i& (0+255),w,b
  6951  01115C  0D01               	mullw	1
  6952  01115E  0E87               	movlw	low _auto_cut_ON
  6953  011160  24F3               	addwf	prodl,w,c
  6954  011162  6ED9               	movwf	fsr2l,c
  6955  011164  0E00               	movlw	high _auto_cut_ON
  6956  011166  20F4               	addwfc	prodh,w,c
  6957  011168  6EDA               	movwf	fsr2h,c
  6958  01116A  50DF               	movf	indf2,w,c
  6959  01116C  B4D8               	btfsc	status,2,c
  6960  01116E  D002               	goto	l10589
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;tasks.h: 532: print_content = AUTO_STOP;
  6964  011170  0E08               	movlw	8
  6965  011172  D001               	goto	L4
  6966  011174                     l10589:
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;tasks.h: 534: print_content = ALWAYS_ON;
  6970  011174  0E07               	movlw	7
  6971  011176                     L4:
  6972  011176  0100               	movlb	0	; () banked
  6973  011178  6FAA               	movwf	_print_content& (0+255),b
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;tasks.h: 535: }
  6977                           ;tasks.h: 536: display_flag = 1;
  6978  01117A  0E01               	movlw	1
  6979  01117C  6E4C               	movwf	_display_flag,c
  6980  01117E                     l10591:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;tasks.h: 537: }
  6984                           ;tasks.h: 538: if (sw_flag_read(i, 0x0020)) {
  6985  01117E  0E00               	movlw	0
  6986  011180  0100               	movlb	0	; () banked
  6987  011182  6FBA               	movwf	(sw_flag_read@bit_and+1)& (0+255),b
  6988  011184  0E20               	movlw	32
  6989  011186  6FB9               	movwf	sw_flag_read@bit_and& (0+255),b
  6990  011188  0100               	movlb	0	; () banked
  6991  01118A  51BD               	movf	port_loop@i& (0+255),w,b
  6992  01118C  EC8D  F0A8         	call	_sw_flag_read
  6993  011190  0100               	movlb	0	; () banked
  6994  011192  51B9               	movf	?_sw_flag_read& (0+255),w,b
  6995  011194  0100               	movlb	0	; () banked
  6996  011196  11BA               	iorwf	(?_sw_flag_read+1)& (0+255),w,b
  6997  011198  B4D8               	btfsc	status,2,c
  6998  01119A  D048               	goto	l10611
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;tasks.h: 539: sw_flag_clear(i, 0x0000);
  7002  01119C  0E00               	movlw	0
  7003  01119E  0100               	movlb	0	; () banked
  7004  0111A0  6FBA               	movwf	(sw_flag_clear@bit_and+1)& (0+255),b
  7005  0111A2  0E00               	movlw	0
  7006  0111A4  6FB9               	movwf	sw_flag_clear@bit_and& (0+255),b
  7007  0111A6  0100               	movlb	0	; () banked
  7008  0111A8  51BD               	movf	port_loop@i& (0+255),w,b
  7009  0111AA  EC56  F0AB         	call	_sw_flag_clear
  7010                           
  7011                           ;tasks.h: 540: if (auto_cut_ON[i]) {
  7012  0111AE  0100               	movlb	0	; () banked
  7013  0111B0  51BD               	movf	port_loop@i& (0+255),w,b
  7014  0111B2  0D01               	mullw	1
  7015  0111B4  0E87               	movlw	low _auto_cut_ON
  7016  0111B6  24F3               	addwf	prodl,w,c
  7017  0111B8  6ED9               	movwf	fsr2l,c
  7018  0111BA  0E00               	movlw	high _auto_cut_ON
  7019  0111BC  20F4               	addwfc	prodh,w,c
  7020  0111BE  6EDA               	movwf	fsr2h,c
  7021  0111C0  50DF               	movf	indf2,w,c
  7022  0111C2  B4D8               	btfsc	status,2,c
  7023  0111C4  D016               	goto	l10603
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;tasks.h: 541: auto_cut_ON[i] = 0;
  7027  0111C6  0100               	movlb	0	; () banked
  7028  0111C8  51BD               	movf	port_loop@i& (0+255),w,b
  7029  0111CA  0D01               	mullw	1
  7030  0111CC  0E87               	movlw	low _auto_cut_ON
  7031  0111CE  24F3               	addwf	prodl,w,c
  7032  0111D0  6ED9               	movwf	fsr2l,c
  7033  0111D2  0E00               	movlw	high _auto_cut_ON
  7034  0111D4  20F4               	addwfc	prodh,w,c
  7035  0111D6  6EDA               	movwf	fsr2h,c
  7036  0111D8  0E00               	movlw	0
  7037  0111DA  6EDF               	movwf	indf2,c
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;tasks.h: 542: print_content = ALWAYS_ON;
  7041  0111DC  0E07               	movlw	7
  7042  0111DE  0100               	movlb	0	; () banked
  7043  0111E0  6FAA               	movwf	_print_content& (0+255),b
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;tasks.h: 543: OUT(i, 1);
  7047  0111E2  0E01               	movlw	1
  7048  0111E4  0100               	movlb	0	; () banked
  7049  0111E6  6FB9               	movwf	OUT@value& (0+255),b
  7050  0111E8  0100               	movlb	0	; () banked
  7051  0111EA  51BD               	movf	port_loop@i& (0+255),w,b
  7052  0111EC  EC19  F0AA         	call	_OUT
  7053                           
  7054                           ;tasks.h: 544: } else {
  7055  0111F0  D00E               	goto	l10607
  7056  0111F2                     l10603:
  7057                           
  7058                           ;tasks.h: 545: auto_cut_ON[i] = 1;
  7059  0111F2  0100               	movlb	0	; () banked
  7060  0111F4  51BD               	movf	port_loop@i& (0+255),w,b
  7061  0111F6  0D01               	mullw	1
  7062  0111F8  0E87               	movlw	low _auto_cut_ON
  7063  0111FA  24F3               	addwf	prodl,w,c
  7064  0111FC  6ED9               	movwf	fsr2l,c
  7065  0111FE  0E00               	movlw	high _auto_cut_ON
  7066  011200  20F4               	addwfc	prodh,w,c
  7067  011202  6EDA               	movwf	fsr2h,c
  7068  011204  0E01               	movlw	1
  7069  011206  6EDF               	movwf	indf2,c
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;tasks.h: 546: print_content = AUTO_STOP;
  7073  011208  0E08               	movlw	8
  7074  01120A  0100               	movlb	0	; () banked
  7075  01120C  6FAA               	movwf	_print_content& (0+255),b
  7076  01120E                     l10607:
  7077                           
  7078                           ;tasks.h: 547: }
  7079                           ;tasks.h: 548: display_flag = 1;
  7080  01120E  0E01               	movlw	1
  7081  011210  6E4C               	movwf	_display_flag,c
  7082                           
  7083                           ;tasks.h: 549: delay_set(&delay_display, 64);
  7084  011212  0E50               	movlw	low _delay_display
  7085  011214  0100               	movlb	0	; () banked
  7086  011216  6FB9               	movwf	delay_set@d& (0+255),b
  7087  011218  0E00               	movlw	high _delay_display
  7088  01121A  0100               	movlb	0	; () banked
  7089  01121C  6FBA               	movwf	(delay_set@d+1)& (0+255),b
  7090  01121E  0E00               	movlw	0
  7091  011220  0100               	movlb	0	; () banked
  7092  011222  6FBC               	movwf	(delay_set@value+1)& (0+255),b
  7093  011224  0E40               	movlw	64
  7094  011226  6FBB               	movwf	delay_set@value& (0+255),b
  7095  011228  EC3B  F0AF         	call	_delay_set	;wreg free
  7096  01122C                     l10611:
  7097                           
  7098                           ;tasks.h: 550: }
  7099                           ;tasks.h: 551: if (sw_flag_read(i, 0x8000)) {
  7100  01122C  0E80               	movlw	128
  7101  01122E  0100               	movlb	0	; () banked
  7102  011230  6FBA               	movwf	(sw_flag_read@bit_and+1)& (0+255),b
  7103  011232  0E00               	movlw	0
  7104  011234  6FB9               	movwf	sw_flag_read@bit_and& (0+255),b
  7105  011236  0100               	movlb	0	; () banked
  7106  011238  51BD               	movf	port_loop@i& (0+255),w,b
  7107  01123A  EC8D  F0A8         	call	_sw_flag_read
  7108  01123E  0100               	movlb	0	; () banked
  7109  011240  51B9               	movf	?_sw_flag_read& (0+255),w,b
  7110  011242  0100               	movlb	0	; () banked
  7111  011244  11BA               	iorwf	(?_sw_flag_read+1)& (0+255),w,b
  7112  011246  B4D8               	btfsc	status,2,c
  7113  011248  D01B               	goto	l10621
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;tasks.h: 552: sw_flag_clear(i, 0x0000);
  7117  01124A  0E00               	movlw	0
  7118  01124C  0100               	movlb	0	; () banked
  7119  01124E  6FBA               	movwf	(sw_flag_clear@bit_and+1)& (0+255),b
  7120  011250  0E00               	movlw	0
  7121  011252  6FB9               	movwf	sw_flag_clear@bit_and& (0+255),b
  7122  011254  0100               	movlb	0	; () banked
  7123  011256  51BD               	movf	port_loop@i& (0+255),w,b
  7124  011258  EC56  F0AB         	call	_sw_flag_clear
  7125                           
  7126                           ;tasks.h: 553: print_content = NOTHING_DONE;
  7127  01125C  0E09               	movlw	9
  7128  01125E  0100               	movlb	0	; () banked
  7129  011260  6FAA               	movwf	_print_content& (0+255),b
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;tasks.h: 554: display_flag = 1;
  7133  011262  0E01               	movlw	1
  7134  011264  6E4C               	movwf	_display_flag,c
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;tasks.h: 555: delay_set(&delay_display, 64);
  7138  011266  0E50               	movlw	low _delay_display
  7139  011268  0100               	movlb	0	; () banked
  7140  01126A  6FB9               	movwf	delay_set@d& (0+255),b
  7141  01126C  0E00               	movlw	high _delay_display
  7142  01126E  0100               	movlb	0	; () banked
  7143  011270  6FBA               	movwf	(delay_set@d+1)& (0+255),b
  7144  011272  0E00               	movlw	0
  7145  011274  0100               	movlb	0	; () banked
  7146  011276  6FBC               	movwf	(delay_set@value+1)& (0+255),b
  7147  011278  0E40               	movlw	64
  7148  01127A  6FBB               	movwf	delay_set@value& (0+255),b
  7149  01127C  EC3B  F0AF         	call	_delay_set	;wreg free
  7150  011280                     l10621:
  7151  011280  0100               	movlb	0	; () banked
  7152  011282  2BBD               	incf	port_loop@i& (0+255),f,b
  7153  011284  D69C               	goto	l10537
  7154  011286                     l10625:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;tasks.h: 556: }
  7158                           ;tasks.h: 557: }
  7159                           ;tasks.h: 558: if (delay_display.flag) {
  7160  011286  5050               	movf	_delay_display,w,c
  7161  011288  B4D8               	btfsc	status,2,c
  7162  01128A  0012               	return	
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;tasks.h: 559: delay_display.flag = 0;
  7166  01128C  0E00               	movlw	0
  7167  01128E  6E50               	movwf	_delay_display,c
  7168                           
  7169                           ;tasks.h: 560: print_content = LOGO;
  7170  011290  0E00               	movlw	0
  7171  011292  0100               	movlb	0	; () banked
  7172  011294  6FAA               	movwf	_print_content& (0+255),b
  7173                           
  7174                           ;tasks.h: 561: display_flag = 1;
  7175  011296  0E01               	movlw	1
  7176  011298  6E4C               	movwf	_display_flag,c
  7177  01129A  0012               	return	
  7178  01129C                     __end_of_port_loop:
  7179                           	opt stack 0
  7180                           tblptru	equ	0xFF8
  7181                           tblptrh	equ	0xFF7
  7182                           tblptrl	equ	0xFF6
  7183                           tablat	equ	0xFF5
  7184                           prodh	equ	0xFF4
  7185                           prodl	equ	0xFF3
  7186                           intcon	equ	0xFF2
  7187                           postinc0	equ	0xFEE
  7188                           wreg	equ	0xFE8
  7189                           indf1	equ	0xFE7
  7190                           postinc1	equ	0xFE6
  7191                           postdec1	equ	0xFE5
  7192                           fsr1h	equ	0xFE2
  7193                           fsr1l	equ	0xFE1
  7194                           indf2	equ	0xFDF
  7195                           postinc2	equ	0xFDE
  7196                           postdec2	equ	0xFDD
  7197                           fsr2h	equ	0xFDA
  7198                           fsr2l	equ	0xFD9
  7199                           status	equ	0xFD8
  7200                           
  7201 ;; *************** function _sw_flag_read *****************
  7202 ;; Defined at:
  7203 ;;		line 93 in file "tasks.h"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  port            1    wreg     unsigned char 
  7206 ;;  bit_and         2    0[BANK0 ] unsigned int 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  port            1    2[BANK0 ] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  2    0[BANK0 ] unsigned int 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;Total ram usage:        3 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:   11
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_port_loop
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text17
  7233  01511A                     __ptext17:
  7234                           	opt stack 0
  7235  01511A                     _sw_flag_read:
  7236                           	opt stack 17
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;incstack = 0
  7240                           ;sw_flag_read@port stored from wreg
  7241  01511A  0100               	movlb	0	; () banked
  7242  01511C  6FBB               	movwf	sw_flag_read@port& (0+255),b
  7243                           
  7244                           ;tasks.h: 94: switch (port) {
  7245  01511E  D02D               	goto	l9723
  7246  015120                     l9705:
  7247                           
  7248                           ;tasks.h: 96: return ((ct0.flags) & bit_and);
  7249  015120  0100               	movlb	0	; () banked
  7250  015122  51B9               	movf	sw_flag_read@bit_and& (0+255),w,b
  7251  015124  0102               	movlb	2	; () banked
  7252  015126  15FE               	andwf	(_ct0+2)& (0+255),w,b
  7253  015128  0100               	movlb	0	; () banked
  7254  01512A  6FB9               	movwf	?_sw_flag_read& (0+255),b
  7255  01512C  0100               	movlb	0	; () banked
  7256  01512E  51BA               	movf	(sw_flag_read@bit_and+1)& (0+255),w,b
  7257  015130  0102               	movlb	2	; () banked
  7258  015132  15FF               	andwf	(_ct0+3)& (0+255),w,b
  7259  015134  0100               	movlb	0	; () banked
  7260  015136  6FBA               	movwf	(?_sw_flag_read+1)& (0+255),b
  7261                           
  7262                           ; BSR set to: 0
  7263  015138  0012               	return	
  7264  01513A                     l9709:
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;tasks.h: 98: return ((ct1.flags) & bit_and);
  7268  01513A  0100               	movlb	0	; () banked
  7269  01513C  51B9               	movf	sw_flag_read@bit_and& (0+255),w,b
  7270  01513E  0103               	movlb	3	; () banked
  7271  015140  15EB               	andwf	(_ct1+2)& (0+255),w,b
  7272  015142  0100               	movlb	0	; () banked
  7273  015144  6FB9               	movwf	?_sw_flag_read& (0+255),b
  7274  015146  0100               	movlb	0	; () banked
  7275  015148  51BA               	movf	(sw_flag_read@bit_and+1)& (0+255),w,b
  7276  01514A  0103               	movlb	3	; () banked
  7277  01514C  15EC               	andwf	(_ct1+3)& (0+255),w,b
  7278  01514E  0100               	movlb	0	; () banked
  7279  015150  6FBA               	movwf	(?_sw_flag_read+1)& (0+255),b
  7280                           
  7281                           ; BSR set to: 0
  7282  015152  0012               	return	
  7283  015154                     l9713:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;tasks.h: 100: return ((ct2.flags) & bit_and);
  7287  015154  0100               	movlb	0	; () banked
  7288  015156  51B9               	movf	sw_flag_read@bit_and& (0+255),w,b
  7289  015158  0103               	movlb	3	; () banked
  7290  01515A  15EF               	andwf	(_ct2+2)& (0+255),w,b
  7291  01515C  0100               	movlb	0	; () banked
  7292  01515E  6FB9               	movwf	?_sw_flag_read& (0+255),b
  7293  015160  0100               	movlb	0	; () banked
  7294  015162  51BA               	movf	(sw_flag_read@bit_and+1)& (0+255),w,b
  7295  015164  0103               	movlb	3	; () banked
  7296  015166  15F0               	andwf	(_ct2+3)& (0+255),w,b
  7297  015168  0100               	movlb	0	; () banked
  7298  01516A  6FBA               	movwf	(?_sw_flag_read+1)& (0+255),b
  7299                           
  7300                           ; BSR set to: 0
  7301  01516C  0012               	return	
  7302  01516E                     l9717:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;tasks.h: 102: return 0;
  7306  01516E  0E00               	movlw	0
  7307  015170  0100               	movlb	0	; () banked
  7308  015172  6FBA               	movwf	(?_sw_flag_read+1)& (0+255),b
  7309  015174  0E00               	movlw	0
  7310  015176  6FB9               	movwf	?_sw_flag_read& (0+255),b
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;tasks.h: 103: }
  7314                           
  7315                           ; BSR set to: 0
  7316  015178  0012               	return	
  7317  01517A                     l9723:
  7318  01517A  0100               	movlb	0	; () banked
  7319  01517C  51BB               	movf	sw_flag_read@port& (0+255),w,b
  7320                           
  7321                           ; Switch size 1, requested type "space"
  7322                           ; Number of cases is 3, Range of values is 0 to 2
  7323                           ; switch strategies available:
  7324                           ; Name         Instructions Cycles
  7325                           ; simple_byte           10     6 (average)
  7326                           ;	Chosen strategy is simple_byte
  7327  01517E  0A00               	xorlw	0	; case 0
  7328  015180  B4D8               	btfsc	status,2,c
  7329  015182  D7CE               	goto	l9705
  7330  015184  0A01               	xorlw	1	; case 1
  7331  015186  B4D8               	btfsc	status,2,c
  7332  015188  D7D8               	goto	l9709
  7333  01518A  0A03               	xorlw	3	; case 2
  7334  01518C  B4D8               	btfsc	status,2,c
  7335  01518E  D7E2               	goto	l9713
  7336  015190  D7EE               	goto	l9717
  7337  015192                     __end_of_sw_flag_read:
  7338                           	opt stack 0
  7339                           tblptru	equ	0xFF8
  7340                           tblptrh	equ	0xFF7
  7341                           tblptrl	equ	0xFF6
  7342                           tablat	equ	0xFF5
  7343                           prodh	equ	0xFF4
  7344                           prodl	equ	0xFF3
  7345                           intcon	equ	0xFF2
  7346                           postinc0	equ	0xFEE
  7347                           wreg	equ	0xFE8
  7348                           indf1	equ	0xFE7
  7349                           postinc1	equ	0xFE6
  7350                           postdec1	equ	0xFE5
  7351                           fsr1h	equ	0xFE2
  7352                           fsr1l	equ	0xFE1
  7353                           indf2	equ	0xFDF
  7354                           postinc2	equ	0xFDE
  7355                           postdec2	equ	0xFDD
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360 ;; *************** function _sw_flag_clear *****************
  7361 ;; Defined at:
  7362 ;;		line 106 in file "tasks.h"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  port            1    wreg     unsigned char 
  7365 ;;  bit_and         2    0[BANK0 ] unsigned int 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  port            1    2[BANK0 ] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;		None               void
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;Total ram usage:        3 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:   11
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_port_loop
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text18
  7392  0156AC                     __ptext18:
  7393                           	opt stack 0
  7394  0156AC                     _sw_flag_clear:
  7395                           	opt stack 17
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;incstack = 0
  7399                           ;sw_flag_clear@port stored from wreg
  7400  0156AC  0100               	movlb	0	; () banked
  7401  0156AE  6FBB               	movwf	sw_flag_clear@port& (0+255),b
  7402                           
  7403                           ;tasks.h: 107: switch (port) {
  7404  0156B0  D01B               	goto	l9735
  7405  0156B2                     l9727:
  7406                           
  7407                           ;tasks.h: 109: ct0.flags &= bit_and;
  7408  0156B2  0100               	movlb	0	; () banked
  7409  0156B4  51B9               	movf	sw_flag_clear@bit_and& (0+255),w,b
  7410  0156B6  0102               	movlb	2	; () banked
  7411  0156B8  17FE               	andwf	(_ct0+2)& (0+255),f,b
  7412  0156BA  0100               	movlb	0	; () banked
  7413  0156BC  51BA               	movf	(sw_flag_clear@bit_and+1)& (0+255),w,b
  7414  0156BE  0102               	movlb	2	; () banked
  7415  0156C0  17FF               	andwf	(_ct0+3)& (0+255),f,b
  7416                           
  7417                           ;tasks.h: 110: break;
  7418  0156C2  0012               	return	
  7419  0156C4                     l9729:
  7420                           
  7421                           ;tasks.h: 112: ct1.flags &= bit_and;
  7422  0156C4  0100               	movlb	0	; () banked
  7423  0156C6  51B9               	movf	sw_flag_clear@bit_and& (0+255),w,b
  7424  0156C8  0103               	movlb	3	; () banked
  7425  0156CA  17EB               	andwf	(_ct1+2)& (0+255),f,b
  7426  0156CC  0100               	movlb	0	; () banked
  7427  0156CE  51BA               	movf	(sw_flag_clear@bit_and+1)& (0+255),w,b
  7428  0156D0  0103               	movlb	3	; () banked
  7429  0156D2  17EC               	andwf	(_ct1+3)& (0+255),f,b
  7430                           
  7431                           ;tasks.h: 113: break;
  7432  0156D4  0012               	return	
  7433  0156D6                     l9731:
  7434                           
  7435                           ;tasks.h: 115: ct2.flags &= bit_and;
  7436  0156D6  0100               	movlb	0	; () banked
  7437  0156D8  51B9               	movf	sw_flag_clear@bit_and& (0+255),w,b
  7438  0156DA  0103               	movlb	3	; () banked
  7439  0156DC  17EF               	andwf	(_ct2+2)& (0+255),f,b
  7440  0156DE  0100               	movlb	0	; () banked
  7441  0156E0  51BA               	movf	(sw_flag_clear@bit_and+1)& (0+255),w,b
  7442  0156E2  0103               	movlb	3	; () banked
  7443  0156E4  17F0               	andwf	(_ct2+3)& (0+255),f,b
  7444                           
  7445                           ; BSR set to: 3
  7446                           ;tasks.h: 117: }
  7447                           
  7448                           ;tasks.h: 116: break;
  7449  0156E6  0012               	return	
  7450  0156E8                     l9735:
  7451  0156E8  0100               	movlb	0	; () banked
  7452  0156EA  51BB               	movf	sw_flag_clear@port& (0+255),w,b
  7453                           
  7454                           ; Switch size 1, requested type "space"
  7455                           ; Number of cases is 3, Range of values is 0 to 2
  7456                           ; switch strategies available:
  7457                           ; Name         Instructions Cycles
  7458                           ; simple_byte           10     6 (average)
  7459                           ;	Chosen strategy is simple_byte
  7460  0156EC  0A00               	xorlw	0	; case 0
  7461  0156EE  B4D8               	btfsc	status,2,c
  7462  0156F0  D7E0               	goto	l9727
  7463  0156F2  0A01               	xorlw	1	; case 1
  7464  0156F4  B4D8               	btfsc	status,2,c
  7465  0156F6  D7E6               	goto	l9729
  7466  0156F8  0A03               	xorlw	3	; case 2
  7467  0156FA  A4D8               	btfss	status,2,c
  7468  0156FC  0012               	return	
  7469  0156FE  D7EB               	goto	l9731
  7470  015700                     __end_of_sw_flag_clear:
  7471                           	opt stack 0
  7472                           tblptru	equ	0xFF8
  7473                           tblptrh	equ	0xFF7
  7474                           tblptrl	equ	0xFF6
  7475                           tablat	equ	0xFF5
  7476                           prodh	equ	0xFF4
  7477                           prodl	equ	0xFF3
  7478                           intcon	equ	0xFF2
  7479                           postinc0	equ	0xFEE
  7480                           wreg	equ	0xFE8
  7481                           indf1	equ	0xFE7
  7482                           postinc1	equ	0xFE6
  7483                           postdec1	equ	0xFE5
  7484                           fsr1h	equ	0xFE2
  7485                           fsr1l	equ	0xFE1
  7486                           indf2	equ	0xFDF
  7487                           postinc2	equ	0xFDE
  7488                           postdec2	equ	0xFDD
  7489                           fsr2h	equ	0xFDA
  7490                           fsr2l	equ	0xFD9
  7491                           status	equ	0xFD8
  7492                           
  7493 ;; *************** function _delay_set *****************
  7494 ;; Defined at:
  7495 ;;		line 349 in file "../My_header\My_header.h"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  d               2    0[BANK0 ] PTR struct Delay
  7498 ;;		 -> delay_display(3), 
  7499 ;;  value           2    2[BANK0 ] unsigned int 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;		None               void
  7504 ;; Registers used:
  7505 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7514 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;Total ram usage:        4 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:   11
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_port_loop
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text19
  7526  015E76                     __ptext19:
  7527                           	opt stack 0
  7528  015E76                     _delay_set:
  7529                           	opt stack 17
  7530                           
  7531                           ;My_header\My_header.h: 350: d->cnt = value;
  7532                           
  7533                           ;incstack = 0
  7534  015E76  0100               	movlb	0	; () banked
  7535  015E78  EE20 F001          	lfsr	2,1
  7536  015E7C  51B9               	movf	delay_set@d& (0+255),w,b
  7537  015E7E  26D9               	addwf	fsr2l,f,c
  7538  015E80  51BA               	movf	(delay_set@d+1)& (0+255),w,b
  7539  015E82  22DA               	addwfc	fsr2h,f,c
  7540  015E84  C0BB  FFDE         	movff	delay_set@value,postinc2
  7541  015E88  C0BC  FFDD         	movff	delay_set@value+1,postdec2
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;My_header\My_header.h: 351: d->flag = 0;
  7545  015E8C  C0B9  FFD9         	movff	delay_set@d,fsr2l
  7546  015E90  C0BA  FFDA         	movff	delay_set@d+1,fsr2h
  7547  015E94  0E00               	movlw	0
  7548  015E96  6EDF               	movwf	indf2,c
  7549                           
  7550                           ; BSR set to: 0
  7551  015E98  0012               	return		;funcret
  7552  015E9A                     __end_of_delay_set:
  7553                           	opt stack 0
  7554                           tblptru	equ	0xFF8
  7555                           tblptrh	equ	0xFF7
  7556                           tblptrl	equ	0xFF6
  7557                           tablat	equ	0xFF5
  7558                           prodh	equ	0xFF4
  7559                           prodl	equ	0xFF3
  7560                           intcon	equ	0xFF2
  7561                           postinc0	equ	0xFEE
  7562                           wreg	equ	0xFE8
  7563                           indf1	equ	0xFE7
  7564                           postinc1	equ	0xFE6
  7565                           postdec1	equ	0xFE5
  7566                           fsr1h	equ	0xFE2
  7567                           fsr1l	equ	0xFE1
  7568                           indf2	equ	0xFDF
  7569                           postinc2	equ	0xFDE
  7570                           postdec2	equ	0xFDD
  7571                           fsr2h	equ	0xFDA
  7572                           fsr2l	equ	0xFD9
  7573                           status	equ	0xFD8
  7574                           
  7575 ;; *************** function _LED_OUT *****************
  7576 ;; Defined at:
  7577 ;;		line 79 in file "tasks.h"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  b               1    wreg     unsigned char 
  7580 ;;  value           1    0[BANK0 ] unsigned char 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  b               1    1[BANK0 ] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;		None               void
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7592 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;Total ram usage:        2 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:   11
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_port_loop
  7603 ;;		_main
  7604 ;;		_sleep_loop
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text20
  7609  015844                     __ptext20:
  7610                           	opt stack 0
  7611  015844                     _LED_OUT:
  7612                           	opt stack 17
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;incstack = 0
  7616                           ;LED_OUT@b stored from wreg
  7617  015844  0100               	movlb	0	; () banked
  7618  015846  6FBA               	movwf	LED_OUT@b& (0+255),b
  7619                           
  7620                           ;tasks.h: 80: switch (b) {
  7621  015848  D015               	goto	l9701
  7622  01584A                     l633:
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;tasks.h: 82: LATB7 = value;
  7626  01584A  0100               	movlb	0	; () banked
  7627  01584C  A1B9               	btfss	LED_OUT@value& (0+255),0,b
  7628  01584E  D002               	goto	u10580
  7629  015850  8E8A               	bsf	3978,7,c	;volatile
  7630  015852  0012               	return	
  7631  015854                     u10580:
  7632  015854  9E8A               	bcf	3978,7,c	;volatile
  7633                           
  7634                           ;tasks.h: 83: break;
  7635  015856  0012               	return	
  7636  015858                     l635:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;tasks.h: 85: LATB6 = value;
  7640  015858  0100               	movlb	0	; () banked
  7641  01585A  A1B9               	btfss	LED_OUT@value& (0+255),0,b
  7642  01585C  D002               	goto	u10600
  7643  01585E  8C8A               	bsf	3978,6,c	;volatile
  7644  015860  0012               	return	
  7645  015862                     u10600:
  7646  015862  9C8A               	bcf	3978,6,c	;volatile
  7647                           
  7648                           ;tasks.h: 86: break;
  7649  015864  0012               	return	
  7650  015866                     l636:
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;tasks.h: 88: LATC2 = value;
  7654  015866  0100               	movlb	0	; () banked
  7655  015868  A1B9               	btfss	LED_OUT@value& (0+255),0,b
  7656  01586A  D002               	goto	u10620
  7657  01586C  848B               	bsf	3979,2,c	;volatile
  7658  01586E  0012               	return	
  7659  015870                     u10620:
  7660  015870  948B               	bcf	3979,2,c	;volatile
  7661                           
  7662                           ;tasks.h: 90: }
  7663                           
  7664                           ;tasks.h: 89: break;
  7665  015872  0012               	return	
  7666  015874                     l9701:
  7667  015874  0100               	movlb	0	; () banked
  7668  015876  51BA               	movf	LED_OUT@b& (0+255),w,b
  7669                           
  7670                           ; Switch size 1, requested type "space"
  7671                           ; Number of cases is 3, Range of values is 0 to 2
  7672                           ; switch strategies available:
  7673                           ; Name         Instructions Cycles
  7674                           ; simple_byte           10     6 (average)
  7675                           ;	Chosen strategy is simple_byte
  7676  015878  0A00               	xorlw	0	; case 0
  7677  01587A  B4D8               	btfsc	status,2,c
  7678  01587C  D7E6               	goto	l633
  7679  01587E  0A01               	xorlw	1	; case 1
  7680  015880  B4D8               	btfsc	status,2,c
  7681  015882  D7EA               	goto	l635
  7682  015884  0A03               	xorlw	3	; case 2
  7683  015886  A4D8               	btfss	status,2,c
  7684  015888  0012               	return	
  7685  01588A  D7ED               	goto	l636
  7686  01588C                     __end_of_LED_OUT:
  7687                           	opt stack 0
  7688                           tblptru	equ	0xFF8
  7689                           tblptrh	equ	0xFF7
  7690                           tblptrl	equ	0xFF6
  7691                           tablat	equ	0xFF5
  7692                           prodh	equ	0xFF4
  7693                           prodl	equ	0xFF3
  7694                           intcon	equ	0xFF2
  7695                           postinc0	equ	0xFEE
  7696                           wreg	equ	0xFE8
  7697                           indf1	equ	0xFE7
  7698                           postinc1	equ	0xFE6
  7699                           postdec1	equ	0xFE5
  7700                           fsr1h	equ	0xFE2
  7701                           fsr1l	equ	0xFE1
  7702                           indf2	equ	0xFDF
  7703                           postinc2	equ	0xFDE
  7704                           postdec2	equ	0xFDD
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _display_LCD *****************
  7710 ;; Defined at:
  7711 ;;		line 191 in file "tasks.h"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  str            10    0[BANK1 ] unsigned char [10]
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;Total ram usage:       14 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   16
  7732 ;; This function calls:
  7733 ;;		_I2C_LCD_Clear
  7734 ;;		_I2C_LCD_Putc
  7735 ;;		_I2C_LCD_Puts
  7736 ;;		_I2C_LCD_SetCursor
  7737 ;;		___lldiv
  7738 ;;		___llmod
  7739 ;;		___lwdiv
  7740 ;;		___lwmod
  7741 ;;		_display_port
  7742 ;;		_display_time_1602
  7743 ;;		_my_utoa
  7744 ;; This function is called by:
  7745 ;;		_normal_mode_loop
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text21
  7750  010678                     __ptext21:
  7751                           	opt stack 0
  7752  010678                     _display_LCD:
  7753                           	opt stack 13
  7754                           
  7755                           ;tasks.h: 192: I2C_LCD_Clear();
  7756                           
  7757                           ;incstack = 0
  7758  010678  ECBA  F0AF         	call	_I2C_LCD_Clear	;wreg free
  7759                           
  7760                           ;tasks.h: 193: switch (print_content) {
  7761  01067C  D27B               	goto	l10415
  7762  01067E                     l10321:
  7763                           
  7764                           ;tasks.h: 195: I2C_LCD_SetCursor(0, 0);
  7765  01067E  0E00               	movlw	0
  7766  010680  0100               	movlb	0	; () banked
  7767  010682  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  7768  010684  0E00               	movlw	0
  7769  010686  EC69  F0AE         	call	_I2C_LCD_SetCursor
  7770                           
  7771                           ;tasks.h: 196: I2C_LCD_Puts("Charge Station 6");
  7772  01068A  0EAB               	movlw	low STR_8
  7773  01068C  0100               	movlb	0	; () banked
  7774  01068E  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  7775  010690  0EFE               	movlw	high STR_8
  7776  010692  0100               	movlb	0	; () banked
  7777  010694  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  7778  010696  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  7779                           
  7780                           ;tasks.h: 197: I2C_LCD_SetCursor(0, 1);
  7781  01069A  0E01               	movlw	1
  7782  01069C  0100               	movlb	0	; () banked
  7783  01069E  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  7784  0106A0  0E00               	movlw	0
  7785  0106A2  EC69  F0AE         	call	_I2C_LCD_SetCursor
  7786                           
  7787                           ;tasks.h: 198: I2C_LCD_Puts("Made by KERI");
  7788  0106A6  0E0B               	movlw	low STR_9
  7789  0106A8  0100               	movlb	0	; () banked
  7790  0106AA  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  7791  0106AC  0EFF               	movlw	high STR_9
  7792  0106AE  0100               	movlb	0	; () banked
  7793  0106B0  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  7794  0106B2  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  7795                           
  7796                           ;tasks.h: 199: break;
  7797  0106B6  0012               	return	
  7798  0106B8                     l10327:
  7799                           
  7800                           ;tasks.h: 201: display_time_1602(&caltime_now, &epoch_now);
  7801  0106B8  0EAE               	movlw	low _caltime_now
  7802  0106BA  0100               	movlb	0	; () banked
  7803  0106BC  6FF0               	movwf	display_time_1602@ct& (0+255),b
  7804  0106BE  0E00               	movlw	high _caltime_now
  7805  0106C0  0100               	movlb	0	; () banked
  7806  0106C2  6FF1               	movwf	(display_time_1602@ct+1)& (0+255),b
  7807  0106C4  0EB5               	movlw	low _epoch_now
  7808  0106C6  0100               	movlb	0	; () banked
  7809  0106C8  6FF2               	movwf	display_time_1602@ep& (0+255),b
  7810  0106CA  0E00               	movlw	high _epoch_now
  7811  0106CC  0100               	movlb	0	; () banked
  7812  0106CE  6FF3               	movwf	(display_time_1602@ep+1)& (0+255),b
  7813  0106D0  EC5A  F094         	call	_display_time_1602	;wreg free
  7814                           
  7815                           ;tasks.h: 202: break;
  7816  0106D4  0012               	return	
  7817  0106D6                     l10329:
  7818                           
  7819                           ;tasks.h: 204: display_port();
  7820  0106D6  ECE0  F09C         	call	_display_port	;wreg free
  7821                           
  7822                           ;tasks.h: 205: I2C_LCD_SetCursor(0, 1);
  7823  0106DA  0E01               	movlw	1
  7824  0106DC  0100               	movlb	0	; () banked
  7825  0106DE  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  7826  0106E0  0E00               	movlw	0
  7827  0106E2  EC69  F0AE         	call	_I2C_LCD_SetCursor
  7828                           
  7829                           ;tasks.h: 206: I2C_LCD_Putc((I[print_port] % 10000) / 1000 + '0');
  7830  0106E6  0E27               	movlw	39
  7831  0106E8  0100               	movlb	0	; () banked
  7832  0106EA  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  7833  0106EC  0E10               	movlw	16
  7834  0106EE  6FBB               	movwf	___lwmod@divisor& (0+255),b
  7835  0106F0  0100               	movlb	0	; () banked
  7836  0106F2  51AB               	movf	_print_port& (0+255),w,b
  7837  0106F4  0D02               	mullw	2
  7838  0106F6  0E2D               	movlw	low _I
  7839  0106F8  24F3               	addwf	prodl,w,c
  7840  0106FA  6ED9               	movwf	fsr2l,c
  7841  0106FC  0E00               	movlw	high _I
  7842  0106FE  20F4               	addwfc	prodh,w,c
  7843  010700  6EDA               	movwf	fsr2h,c
  7844  010702  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  7845  010706  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  7846  01070A  ECE8  F0A9         	call	___lwmod	;wreg free
  7847  01070E  C0B9  F0D5         	movff	?___lwmod,___lwdiv@dividend
  7848  010712  C0BA  F0D6         	movff	?___lwmod+1,___lwdiv@dividend+1
  7849  010716  0E03               	movlw	3
  7850  010718  0100               	movlb	0	; () banked
  7851  01071A  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7852  01071C  0EE8               	movlw	232
  7853  01071E  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  7854  010720  ECC9  F0A8         	call	___lwdiv	;wreg free
  7855  010724  0100               	movlb	0	; () banked
  7856  010726  51D5               	movf	?___lwdiv& (0+255),w,b
  7857  010728  0F30               	addlw	48
  7858  01072A  EC4F  F0AD         	call	_I2C_LCD_Putc
  7859                           
  7860                           ;tasks.h: 207: I2C_LCD_Putc('.');
  7861  01072E  0E2E               	movlw	46
  7862  010730  EC4F  F0AD         	call	_I2C_LCD_Putc
  7863                           
  7864                           ;tasks.h: 208: I2C_LCD_Putc((I[print_port] % 1000) / 100 + '0');
  7865  010734  0E03               	movlw	3
  7866  010736  0100               	movlb	0	; () banked
  7867  010738  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  7868  01073A  0EE8               	movlw	232
  7869  01073C  6FBB               	movwf	___lwmod@divisor& (0+255),b
  7870  01073E  0100               	movlb	0	; () banked
  7871  010740  51AB               	movf	_print_port& (0+255),w,b
  7872  010742  0D02               	mullw	2
  7873  010744  0E2D               	movlw	low _I
  7874  010746  24F3               	addwf	prodl,w,c
  7875  010748  6ED9               	movwf	fsr2l,c
  7876  01074A  0E00               	movlw	high _I
  7877  01074C  20F4               	addwfc	prodh,w,c
  7878  01074E  6EDA               	movwf	fsr2h,c
  7879  010750  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  7880  010754  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  7881  010758  ECE8  F0A9         	call	___lwmod	;wreg free
  7882  01075C  C0B9  F0D5         	movff	?___lwmod,___lwdiv@dividend
  7883  010760  C0BA  F0D6         	movff	?___lwmod+1,___lwdiv@dividend+1
  7884  010764  0E00               	movlw	0
  7885  010766  0100               	movlb	0	; () banked
  7886  010768  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7887  01076A  0E64               	movlw	100
  7888  01076C  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  7889  01076E  ECC9  F0A8         	call	___lwdiv	;wreg free
  7890  010772  0100               	movlb	0	; () banked
  7891  010774  51D5               	movf	?___lwdiv& (0+255),w,b
  7892  010776  0F30               	addlw	48
  7893  010778  EC4F  F0AD         	call	_I2C_LCD_Putc
  7894                           
  7895                           ;tasks.h: 209: I2C_LCD_Putc((I[print_port] % 100) / 10 + '0');
  7896  01077C  0E00               	movlw	0
  7897  01077E  0100               	movlb	0	; () banked
  7898  010780  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  7899  010782  0E64               	movlw	100
  7900  010784  6FBB               	movwf	___lwmod@divisor& (0+255),b
  7901  010786  0100               	movlb	0	; () banked
  7902  010788  51AB               	movf	_print_port& (0+255),w,b
  7903  01078A  0D02               	mullw	2
  7904  01078C  0E2D               	movlw	low _I
  7905  01078E  24F3               	addwf	prodl,w,c
  7906  010790  6ED9               	movwf	fsr2l,c
  7907  010792  0E00               	movlw	high _I
  7908  010794  20F4               	addwfc	prodh,w,c
  7909  010796  6EDA               	movwf	fsr2h,c
  7910  010798  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  7911  01079C  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  7912  0107A0  ECE8  F0A9         	call	___lwmod	;wreg free
  7913  0107A4  C0B9  F0D5         	movff	?___lwmod,___lwdiv@dividend
  7914  0107A8  C0BA  F0D6         	movff	?___lwmod+1,___lwdiv@dividend+1
  7915  0107AC  0E00               	movlw	0
  7916  0107AE  0100               	movlb	0	; () banked
  7917  0107B0  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7918  0107B2  0E0A               	movlw	10
  7919  0107B4  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  7920  0107B6  ECC9  F0A8         	call	___lwdiv	;wreg free
  7921  0107BA  0100               	movlb	0	; () banked
  7922  0107BC  51D5               	movf	?___lwdiv& (0+255),w,b
  7923  0107BE  0F30               	addlw	48
  7924  0107C0  EC4F  F0AD         	call	_I2C_LCD_Putc
  7925                           
  7926                           ;tasks.h: 210: I2C_LCD_Putc((I[print_port] % 10) / 1 + '0');
  7927  0107C4  0100               	movlb	0	; () banked
  7928  0107C6  51AB               	movf	_print_port& (0+255),w,b
  7929  0107C8  0D02               	mullw	2
  7930  0107CA  0E2D               	movlw	low _I
  7931  0107CC  24F3               	addwf	prodl,w,c
  7932  0107CE  6ED9               	movwf	fsr2l,c
  7933  0107D0  0E00               	movlw	high _I
  7934  0107D2  20F4               	addwfc	prodh,w,c
  7935  0107D4  6EDA               	movwf	fsr2h,c
  7936  0107D6  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  7937  0107DA  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  7938  0107DE  0E00               	movlw	0
  7939  0107E0  0100               	movlb	0	; () banked
  7940  0107E2  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  7941  0107E4  0E0A               	movlw	10
  7942  0107E6  6FBB               	movwf	___lwmod@divisor& (0+255),b
  7943  0107E8  ECE8  F0A9         	call	___lwmod	;wreg free
  7944  0107EC  0100               	movlb	0	; () banked
  7945  0107EE  51B9               	movf	?___lwmod& (0+255),w,b
  7946  0107F0  0F30               	addlw	48
  7947  0107F2  EC4F  F0AD         	call	_I2C_LCD_Putc
  7948                           
  7949                           ;tasks.h: 211: I2C_LCD_Putc('A');
  7950  0107F6  0E41               	movlw	65
  7951  0107F8  EC4F  F0AD         	call	_I2C_LCD_Putc
  7952                           
  7953                           ;tasks.h: 212: break;
  7954  0107FC  0012               	return	
  7955  0107FE                     l10345:
  7956                           
  7957                           ;tasks.h: 214: display_port();
  7958  0107FE  ECE0  F09C         	call	_display_port	;wreg free
  7959                           
  7960                           ;tasks.h: 215: I2C_LCD_SetCursor(0, 1);
  7961  010802  0E01               	movlw	1
  7962  010804  0100               	movlb	0	; () banked
  7963  010806  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  7964  010808  0E00               	movlw	0
  7965  01080A  EC69  F0AE         	call	_I2C_LCD_SetCursor
  7966                           
  7967                           ;tasks.h: 216: uint8_t str[10];
  7968                           ;tasks.h: 217: my_utoa(str, S[print_port], 5);
  7969  01080E  0E00               	movlw	low display_LCD@str
  7970  010810  0100               	movlb	0	; () banked
  7971  010812  6FDC               	movwf	my_utoa@str& (0+255),b
  7972  010814  0E01               	movlw	high display_LCD@str
  7973  010816  0100               	movlb	0	; () banked
  7974  010818  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  7975  01081A  0100               	movlb	0	; () banked
  7976  01081C  51AB               	movf	_print_port& (0+255),w,b
  7977  01081E  0D04               	mullw	4
  7978  010820  0E00               	movlw	low _S
  7979  010822  24F3               	addwf	prodl,w,c
  7980  010824  6ED9               	movwf	fsr2l,c
  7981  010826  0E03               	movlw	high _S
  7982  010828  20F4               	addwfc	prodh,w,c
  7983  01082A  6EDA               	movwf	fsr2h,c
  7984  01082C  CFDE F0DE          	movff	postinc2,my_utoa@value
  7985  010830  CFDD F0DF          	movff	postdec2,my_utoa@value+1
  7986  010834  0E05               	movlw	5
  7987  010836  0100               	movlb	0	; () banked
  7988  010838  6FE0               	movwf	my_utoa@digits& (0+255),b
  7989  01083A  EC84  F0A7         	call	_my_utoa	;wreg free
  7990                           
  7991                           ;tasks.h: 218: I2C_LCD_Puts(str);
  7992  01083E  0E00               	movlw	low display_LCD@str
  7993  010840  0100               	movlb	0	; () banked
  7994  010842  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  7995  010844  0E01               	movlw	high display_LCD@str
  7996  010846  0100               	movlb	0	; () banked
  7997  010848  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  7998  01084A  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  7999                           
  8000                           ;tasks.h: 219: I2C_LCD_Puts("mAh");
  8001  01084E  0ECA               	movlw	low STR_10
  8002  010850  0100               	movlb	0	; () banked
  8003  010852  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8004  010854  0EFF               	movlw	high STR_10
  8005  010856  0100               	movlb	0	; () banked
  8006  010858  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8007  01085A  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8008                           
  8009                           ;tasks.h: 220: break;
  8010  01085E  0012               	return	
  8011  010860                     l10355:
  8012                           
  8013                           ;tasks.h: 222: display_port();
  8014  010860  ECE0  F09C         	call	_display_port	;wreg free
  8015                           
  8016                           ;tasks.h: 223: uint8_t str[10];
  8017                           ;tasks.h: 224: I2C_LCD_SetCursor(0, 1);
  8018  010864  0E01               	movlw	1
  8019  010866  0100               	movlb	0	; () banked
  8020  010868  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8021  01086A  0E00               	movlw	0
  8022  01086C  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8023                           
  8024                           ;tasks.h: 225: my_utoa(str, charge_time[print_port] / 3600 / 24, 2);
  8025  010870  0E10               	movlw	16
  8026  010872  0100               	movlb	0	; () banked
  8027  010874  6FBD               	movwf	___lldiv@divisor& (0+255),b
  8028  010876  0E0E               	movlw	14
  8029  010878  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  8030  01087A  0E00               	movlw	0
  8031  01087C  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  8032  01087E  0E00               	movlw	0
  8033  010880  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  8034  010882  0100               	movlb	0	; () banked
  8035  010884  51AB               	movf	_print_port& (0+255),w,b
  8036  010886  0D04               	mullw	4
  8037  010888  0E60               	movlw	low _charge_time
  8038  01088A  24F3               	addwf	prodl,w,c
  8039  01088C  6ED9               	movwf	fsr2l,c
  8040  01088E  0E00               	movlw	high _charge_time
  8041  010890  20F4               	addwfc	prodh,w,c
  8042  010892  6EDA               	movwf	fsr2h,c
  8043  010894  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  8044  010898  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  8045  01089C  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  8046  0108A0  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  8047  0108A4  EC1D  F0A2         	call	___lldiv	;wreg free
  8048  0108A8  C0B9  F10A         	movff	?___lldiv,_display_LCD$5323
  8049  0108AC  C0BA  F10B         	movff	?___lldiv+1,_display_LCD$5323+1
  8050  0108B0  C0BB  F10C         	movff	?___lldiv+2,_display_LCD$5323+2
  8051  0108B4  C0BC  F10D         	movff	?___lldiv+3,_display_LCD$5323+3
  8052                           
  8053                           ;tasks.h: 225: my_utoa(str, charge_time[print_port] / 3600 / 24, 2);
  8054  0108B8  0E00               	movlw	low display_LCD@str
  8055  0108BA  0100               	movlb	0	; () banked
  8056  0108BC  6FDC               	movwf	my_utoa@str& (0+255),b
  8057  0108BE  0E01               	movlw	high display_LCD@str
  8058  0108C0  0100               	movlb	0	; () banked
  8059  0108C2  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  8060  0108C4  C10A  F0B9         	movff	_display_LCD$5323,___lldiv@dividend
  8061  0108C8  C10B  F0BA         	movff	_display_LCD$5323+1,___lldiv@dividend+1
  8062  0108CC  C10C  F0BB         	movff	_display_LCD$5323+2,___lldiv@dividend+2
  8063  0108D0  C10D  F0BC         	movff	_display_LCD$5323+3,___lldiv@dividend+3
  8064  0108D4  0E18               	movlw	24
  8065  0108D6  0100               	movlb	0	; () banked
  8066  0108D8  6FBD               	movwf	___lldiv@divisor& (0+255),b
  8067  0108DA  0E00               	movlw	0
  8068  0108DC  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  8069  0108DE  0E00               	movlw	0
  8070  0108E0  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  8071  0108E2  0E00               	movlw	0
  8072  0108E4  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  8073  0108E6  EC1D  F0A2         	call	___lldiv	;wreg free
  8074  0108EA  C0B9  F0DE         	movff	?___lldiv,my_utoa@value
  8075  0108EE  C0BA  F0DF         	movff	?___lldiv+1,my_utoa@value+1
  8076  0108F2  0E02               	movlw	2
  8077  0108F4  0100               	movlb	0	; () banked
  8078  0108F6  6FE0               	movwf	my_utoa@digits& (0+255),b
  8079  0108F8  EC84  F0A7         	call	_my_utoa	;wreg free
  8080                           
  8081                           ;tasks.h: 226: I2C_LCD_Puts(str);
  8082  0108FC  0E00               	movlw	low display_LCD@str
  8083  0108FE  0100               	movlb	0	; () banked
  8084  010900  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8085  010902  0E01               	movlw	high display_LCD@str
  8086  010904  0100               	movlb	0	; () banked
  8087  010906  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8088  010908  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8089                           
  8090                           ;tasks.h: 227: I2C_LCD_Puts("d ");
  8091  01090C  0EDE               	movlw	low STR_11
  8092  01090E  0100               	movlb	0	; () banked
  8093  010910  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8094  010912  0EFF               	movlw	high STR_11
  8095  010914  0100               	movlb	0	; () banked
  8096  010916  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8097  010918  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8098                           
  8099                           ;tasks.h: 228: my_utoa(str, (charge_time[print_port] / 3600) % 24, 2);
  8100  01091C  0E00               	movlw	low display_LCD@str
  8101  01091E  0100               	movlb	0	; () banked
  8102  010920  6FDC               	movwf	my_utoa@str& (0+255),b
  8103  010922  0E01               	movlw	high display_LCD@str
  8104  010924  0100               	movlb	0	; () banked
  8105  010926  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  8106  010928  0E10               	movlw	16
  8107  01092A  0100               	movlb	0	; () banked
  8108  01092C  6FBD               	movwf	___lldiv@divisor& (0+255),b
  8109  01092E  0E0E               	movlw	14
  8110  010930  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  8111  010932  0E00               	movlw	0
  8112  010934  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  8113  010936  0E00               	movlw	0
  8114  010938  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  8115  01093A  0100               	movlb	0	; () banked
  8116  01093C  51AB               	movf	_print_port& (0+255),w,b
  8117  01093E  0D04               	mullw	4
  8118  010940  0E60               	movlw	low _charge_time
  8119  010942  24F3               	addwf	prodl,w,c
  8120  010944  6ED9               	movwf	fsr2l,c
  8121  010946  0E00               	movlw	high _charge_time
  8122  010948  20F4               	addwfc	prodh,w,c
  8123  01094A  6EDA               	movwf	fsr2h,c
  8124  01094C  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  8125  010950  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  8126  010954  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  8127  010958  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  8128  01095C  EC1D  F0A2         	call	___lldiv	;wreg free
  8129  010960  C0B9  F0C6         	movff	?___lldiv,___llmod@dividend
  8130  010964  C0BA  F0C7         	movff	?___lldiv+1,___llmod@dividend+1
  8131  010968  C0BB  F0C8         	movff	?___lldiv+2,___llmod@dividend+2
  8132  01096C  C0BC  F0C9         	movff	?___lldiv+3,___llmod@dividend+3
  8133  010970  0E18               	movlw	24
  8134  010972  0100               	movlb	0	; () banked
  8135  010974  6FCA               	movwf	___llmod@divisor& (0+255),b
  8136  010976  0E00               	movlw	0
  8137  010978  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  8138  01097A  0E00               	movlw	0
  8139  01097C  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  8140  01097E  0E00               	movlw	0
  8141  010980  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  8142  010982  EC7E  F0A5         	call	___llmod	;wreg free
  8143  010986  C0C6  F0DE         	movff	?___llmod,my_utoa@value
  8144  01098A  C0C7  F0DF         	movff	?___llmod+1,my_utoa@value+1
  8145  01098E  0E02               	movlw	2
  8146  010990  0100               	movlb	0	; () banked
  8147  010992  6FE0               	movwf	my_utoa@digits& (0+255),b
  8148  010994  EC84  F0A7         	call	_my_utoa	;wreg free
  8149                           
  8150                           ;tasks.h: 229: I2C_LCD_Puts(str);
  8151  010998  0E00               	movlw	low display_LCD@str
  8152  01099A  0100               	movlb	0	; () banked
  8153  01099C  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8154  01099E  0E01               	movlw	high display_LCD@str
  8155  0109A0  0100               	movlb	0	; () banked
  8156  0109A2  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8157  0109A4  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8158                           
  8159                           ;tasks.h: 230: I2C_LCD_Puts("h ");
  8160  0109A8  0EE1               	movlw	low STR_12
  8161  0109AA  0100               	movlb	0	; () banked
  8162  0109AC  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8163  0109AE  0EFF               	movlw	high STR_12
  8164  0109B0  0100               	movlb	0	; () banked
  8165  0109B2  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8166  0109B4  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8167                           
  8168                           ;tasks.h: 231: my_utoa(str, (charge_time[print_port] / 60) % 60, 2);
  8169  0109B8  0E00               	movlw	low display_LCD@str
  8170  0109BA  0100               	movlb	0	; () banked
  8171  0109BC  6FDC               	movwf	my_utoa@str& (0+255),b
  8172  0109BE  0E01               	movlw	high display_LCD@str
  8173  0109C0  0100               	movlb	0	; () banked
  8174  0109C2  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  8175  0109C4  0E3C               	movlw	60
  8176  0109C6  0100               	movlb	0	; () banked
  8177  0109C8  6FBD               	movwf	___lldiv@divisor& (0+255),b
  8178  0109CA  0E00               	movlw	0
  8179  0109CC  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  8180  0109CE  0E00               	movlw	0
  8181  0109D0  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  8182  0109D2  0E00               	movlw	0
  8183  0109D4  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  8184  0109D6  0100               	movlb	0	; () banked
  8185  0109D8  51AB               	movf	_print_port& (0+255),w,b
  8186  0109DA  0D04               	mullw	4
  8187  0109DC  0E60               	movlw	low _charge_time
  8188  0109DE  24F3               	addwf	prodl,w,c
  8189  0109E0  6ED9               	movwf	fsr2l,c
  8190  0109E2  0E00               	movlw	high _charge_time
  8191  0109E4  20F4               	addwfc	prodh,w,c
  8192  0109E6  6EDA               	movwf	fsr2h,c
  8193  0109E8  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  8194  0109EC  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  8195  0109F0  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  8196  0109F4  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  8197  0109F8  EC1D  F0A2         	call	___lldiv	;wreg free
  8198  0109FC  C0B9  F0C6         	movff	?___lldiv,___llmod@dividend
  8199  010A00  C0BA  F0C7         	movff	?___lldiv+1,___llmod@dividend+1
  8200  010A04  C0BB  F0C8         	movff	?___lldiv+2,___llmod@dividend+2
  8201  010A08  C0BC  F0C9         	movff	?___lldiv+3,___llmod@dividend+3
  8202  010A0C  0E3C               	movlw	60
  8203  010A0E  0100               	movlb	0	; () banked
  8204  010A10  6FCA               	movwf	___llmod@divisor& (0+255),b
  8205  010A12  0E00               	movlw	0
  8206  010A14  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  8207  010A16  0E00               	movlw	0
  8208  010A18  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  8209  010A1A  0E00               	movlw	0
  8210  010A1C  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  8211  010A1E  EC7E  F0A5         	call	___llmod	;wreg free
  8212  010A22  C0C6  F0DE         	movff	?___llmod,my_utoa@value
  8213  010A26  C0C7  F0DF         	movff	?___llmod+1,my_utoa@value+1
  8214  010A2A  0E02               	movlw	2
  8215  010A2C  0100               	movlb	0	; () banked
  8216  010A2E  6FE0               	movwf	my_utoa@digits& (0+255),b
  8217  010A30  EC84  F0A7         	call	_my_utoa	;wreg free
  8218                           
  8219                           ;tasks.h: 232: I2C_LCD_Puts(str);
  8220  010A34  0E00               	movlw	low display_LCD@str
  8221  010A36  0100               	movlb	0	; () banked
  8222  010A38  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8223  010A3A  0E01               	movlw	high display_LCD@str
  8224  010A3C  0100               	movlb	0	; () banked
  8225  010A3E  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8226  010A40  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8227                           
  8228                           ;tasks.h: 233: I2C_LCD_Puts("m ");
  8229  010A44  0EE4               	movlw	low STR_13
  8230  010A46  0100               	movlb	0	; () banked
  8231  010A48  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8232  010A4A  0EFF               	movlw	high STR_13
  8233  010A4C  0100               	movlb	0	; () banked
  8234  010A4E  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8235  010A50  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8236                           
  8237                           ;tasks.h: 234: my_utoa(str, charge_time[print_port] % 60, 2);
  8238  010A54  0E00               	movlw	low display_LCD@str
  8239  010A56  0100               	movlb	0	; () banked
  8240  010A58  6FDC               	movwf	my_utoa@str& (0+255),b
  8241  010A5A  0E01               	movlw	high display_LCD@str
  8242  010A5C  0100               	movlb	0	; () banked
  8243  010A5E  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  8244  010A60  0100               	movlb	0	; () banked
  8245  010A62  51AB               	movf	_print_port& (0+255),w,b
  8246  010A64  0D04               	mullw	4
  8247  010A66  0E60               	movlw	low _charge_time
  8248  010A68  24F3               	addwf	prodl,w,c
  8249  010A6A  6ED9               	movwf	fsr2l,c
  8250  010A6C  0E00               	movlw	high _charge_time
  8251  010A6E  20F4               	addwfc	prodh,w,c
  8252  010A70  6EDA               	movwf	fsr2h,c
  8253  010A72  CFDE F0C6          	movff	postinc2,___llmod@dividend
  8254  010A76  CFDE F0C7          	movff	postinc2,___llmod@dividend+1
  8255  010A7A  CFDE F0C8          	movff	postinc2,___llmod@dividend+2
  8256  010A7E  CFDE F0C9          	movff	postinc2,___llmod@dividend+3
  8257  010A82  0E3C               	movlw	60
  8258  010A84  0100               	movlb	0	; () banked
  8259  010A86  6FCA               	movwf	___llmod@divisor& (0+255),b
  8260  010A88  0E00               	movlw	0
  8261  010A8A  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  8262  010A8C  0E00               	movlw	0
  8263  010A8E  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  8264  010A90  0E00               	movlw	0
  8265  010A92  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  8266  010A94  EC7E  F0A5         	call	___llmod	;wreg free
  8267  010A98  C0C6  F0DE         	movff	?___llmod,my_utoa@value
  8268  010A9C  C0C7  F0DF         	movff	?___llmod+1,my_utoa@value+1
  8269  010AA0  0E02               	movlw	2
  8270  010AA2  0100               	movlb	0	; () banked
  8271  010AA4  6FE0               	movwf	my_utoa@digits& (0+255),b
  8272  010AA6  EC84  F0A7         	call	_my_utoa	;wreg free
  8273                           
  8274                           ;tasks.h: 235: I2C_LCD_Puts(str);
  8275  010AAA  0E00               	movlw	low display_LCD@str
  8276  010AAC  0100               	movlb	0	; () banked
  8277  010AAE  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8278  010AB0  0E01               	movlw	high display_LCD@str
  8279  010AB2  0100               	movlb	0	; () banked
  8280  010AB4  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8281  010AB6  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8282                           
  8283                           ;tasks.h: 236: I2C_LCD_Puts("s");
  8284  010ABA  0E98               	movlw	low (STR_40+7)
  8285  010ABC  0100               	movlb	0	; () banked
  8286  010ABE  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8287  010AC0  0EFF               	movlw	high (STR_40+7)
  8288  010AC2  0100               	movlb	0	; () banked
  8289  010AC4  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8290  010AC6  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8291                           
  8292                           ;tasks.h: 237: break;
  8293  010ACA  0012               	return	
  8294  010ACC                     l10385:
  8295                           
  8296                           ;tasks.h: 239: display_port();
  8297  010ACC  ECE0  F09C         	call	_display_port	;wreg free
  8298                           
  8299                           ;tasks.h: 240: I2C_LCD_SetCursor(0, 1);
  8300  010AD0  0E01               	movlw	1
  8301  010AD2  0100               	movlb	0	; () banked
  8302  010AD4  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8303  010AD6  0E00               	movlw	0
  8304  010AD8  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8305                           
  8306                           ;tasks.h: 241: I2C_LCD_Puts("Integrat Reset?");
  8307  010ADC  0ECD               	movlw	low STR_15
  8308  010ADE  0100               	movlb	0	; () banked
  8309  010AE0  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8310  010AE2  0EFE               	movlw	high STR_15
  8311  010AE4  0100               	movlb	0	; () banked
  8312  010AE6  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8313  010AE8  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8314                           
  8315                           ;tasks.h: 242: break;
  8316  010AEC  0012               	return	
  8317  010AEE                     l10391:
  8318                           
  8319                           ;tasks.h: 244: display_port();
  8320  010AEE  ECE0  F09C         	call	_display_port	;wreg free
  8321                           
  8322                           ;tasks.h: 245: I2C_LCD_SetCursor(0, 1);
  8323  010AF2  0E01               	movlw	1
  8324  010AF4  0100               	movlb	0	; () banked
  8325  010AF6  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8326  010AF8  0E00               	movlw	0
  8327  010AFA  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8328                           
  8329                           ;tasks.h: 246: I2C_LCD_Puts("Integrat Reseted");
  8330  010AFE  0EBC               	movlw	low STR_16
  8331  010B00  0100               	movlb	0	; () banked
  8332  010B02  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8333  010B04  0EFE               	movlw	high STR_16
  8334  010B06  0100               	movlb	0	; () banked
  8335  010B08  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8336  010B0A  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8337                           
  8338                           ;tasks.h: 247: break;
  8339  010B0E  0012               	return	
  8340  010B10                     l10397:
  8341                           
  8342                           ;tasks.h: 249: display_port();
  8343  010B10  ECE0  F09C         	call	_display_port	;wreg free
  8344                           
  8345                           ;tasks.h: 250: I2C_LCD_SetCursor(0, 1);
  8346  010B14  0E01               	movlw	1
  8347  010B16  0100               	movlb	0	; () banked
  8348  010B18  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8349  010B1A  0E00               	movlw	0
  8350  010B1C  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8351                           
  8352                           ;tasks.h: 251: I2C_LCD_Puts("Always Charging");
  8353  010B20  0EED               	movlw	low STR_17
  8354  010B22  0100               	movlb	0	; () banked
  8355  010B24  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8356  010B26  0EFE               	movlw	high STR_17
  8357  010B28  0100               	movlb	0	; () banked
  8358  010B2A  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8359  010B2C  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8360                           
  8361                           ;tasks.h: 252: break;
  8362  010B30  0012               	return	
  8363  010B32                     l10403:
  8364                           
  8365                           ;tasks.h: 254: display_port();
  8366  010B32  ECE0  F09C         	call	_display_port	;wreg free
  8367                           
  8368                           ;tasks.h: 255: I2C_LCD_SetCursor(0, 1);
  8369  010B36  0E01               	movlw	1
  8370  010B38  0100               	movlb	0	; () banked
  8371  010B3A  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8372  010B3C  0E00               	movlw	0
  8373  010B3E  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8374                           
  8375                           ;tasks.h: 256: I2C_LCD_Puts("Auto Stop ON");
  8376  010B42  0E18               	movlw	low STR_18
  8377  010B44  0100               	movlb	0	; () banked
  8378  010B46  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8379  010B48  0EFF               	movlw	high STR_18
  8380  010B4A  0100               	movlb	0	; () banked
  8381  010B4C  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8382  010B4E  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8383  010B52                     l10409:
  8384                           
  8385                           ;tasks.h: 258: display_port();
  8386  010B52  ECE0  F09C         	call	_display_port	;wreg free
  8387                           
  8388                           ;tasks.h: 259: I2C_LCD_SetCursor(0, 1);
  8389  010B56  0E01               	movlw	1
  8390  010B58  0100               	movlb	0	; () banked
  8391  010B5A  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8392  010B5C  0E00               	movlw	0
  8393  010B5E  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8394                           
  8395                           ;tasks.h: 260: I2C_LCD_Puts("Nothing done.");
  8396  010B62  0EFD               	movlw	low STR_19
  8397  010B64  0100               	movlb	0	; () banked
  8398  010B66  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8399  010B68  0EFE               	movlw	high STR_19
  8400  010B6A  0100               	movlb	0	; () banked
  8401  010B6C  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8402  010B6E  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8403                           
  8404                           ;tasks.h: 262: }
  8405                           
  8406                           ;tasks.h: 261: break;
  8407  010B72  0012               	return	
  8408  010B74                     l10415:
  8409  010B74  0100               	movlb	0	; () banked
  8410  010B76  51AA               	movf	_print_content& (0+255),w,b
  8411                           
  8412                           ; Switch size 1, requested type "space"
  8413                           ; Number of cases is 10, Range of values is 0 to 9
  8414                           ; switch strategies available:
  8415                           ; Name         Instructions Cycles
  8416                           ; simple_byte           31    16 (average)
  8417                           ;	Chosen strategy is simple_byte
  8418  010B78  0A00               	xorlw	0	; case 0
  8419  010B7A  B4D8               	btfsc	status,2,c
  8420  010B7C  D580               	goto	l10321
  8421  010B7E  0A01               	xorlw	1	; case 1
  8422  010B80  B4D8               	btfsc	status,2,c
  8423  010B82  D59A               	goto	l10327
  8424  010B84  0A03               	xorlw	3	; case 2
  8425  010B86  B4D8               	btfsc	status,2,c
  8426  010B88  D5A6               	goto	l10329
  8427  010B8A  0A01               	xorlw	1	; case 3
  8428  010B8C  B4D8               	btfsc	status,2,c
  8429  010B8E  D637               	goto	l10345
  8430  010B90  0A07               	xorlw	7	; case 4
  8431  010B92  B4D8               	btfsc	status,2,c
  8432  010B94  D665               	goto	l10355
  8433  010B96  0A01               	xorlw	1	; case 5
  8434  010B98  B4D8               	btfsc	status,2,c
  8435  010B9A  D798               	goto	l10385
  8436  010B9C  0A03               	xorlw	3	; case 6
  8437  010B9E  B4D8               	btfsc	status,2,c
  8438  010BA0  D7A6               	goto	l10391
  8439  010BA2  0A01               	xorlw	1	; case 7
  8440  010BA4  B4D8               	btfsc	status,2,c
  8441  010BA6  D7B4               	goto	l10397
  8442  010BA8  0A0F               	xorlw	15	; case 8
  8443  010BAA  B4D8               	btfsc	status,2,c
  8444  010BAC  D7C2               	goto	l10403
  8445  010BAE  0A01               	xorlw	1	; case 9
  8446  010BB0  A4D8               	btfss	status,2,c
  8447  010BB2  0012               	return	
  8448  010BB4  D7CE               	goto	l10409
  8449  010BB6                     __end_of_display_LCD:
  8450                           	opt stack 0
  8451                           tblptru	equ	0xFF8
  8452                           tblptrh	equ	0xFF7
  8453                           tblptrl	equ	0xFF6
  8454                           tablat	equ	0xFF5
  8455                           prodh	equ	0xFF4
  8456                           prodl	equ	0xFF3
  8457                           intcon	equ	0xFF2
  8458                           postinc0	equ	0xFEE
  8459                           wreg	equ	0xFE8
  8460                           indf1	equ	0xFE7
  8461                           postinc1	equ	0xFE6
  8462                           postdec1	equ	0xFE5
  8463                           fsr1h	equ	0xFE2
  8464                           fsr1l	equ	0xFE1
  8465                           indf2	equ	0xFDF
  8466                           postinc2	equ	0xFDE
  8467                           postdec2	equ	0xFDD
  8468                           fsr2h	equ	0xFDA
  8469                           fsr2l	equ	0xFD9
  8470                           status	equ	0xFD8
  8471                           
  8472 ;; *************** function _display_time_1602 *****************
  8473 ;; Defined at:
  8474 ;;		line 278 in file "../My_header\My_RTCC.h"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  ct              2   55[BANK0 ] PTR struct .
  8477 ;;		 -> caltime_now(7), 
  8478 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  8479 ;;		 -> epoch_now(4), 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;		None               void
  8484 ;; Registers used:
  8485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;Total ram usage:        5 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:   15
  8498 ;; This function calls:
  8499 ;;		_I2C_LCD_Putc
  8500 ;;		_I2C_LCD_Puts
  8501 ;;		_I2C_LCD_SetCursor
  8502 ;;		_RTCC_from_RTCC
  8503 ;;		_display_dec
  8504 ;; This function is called by:
  8505 ;;		_display_LCD
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text22
  8510  0128B4                     __ptext22:
  8511                           	opt stack 0
  8512  0128B4                     _display_time_1602:
  8513                           	opt stack 13
  8514                           
  8515                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  8516                           
  8517                           ;incstack = 0
  8518  0128B4  C0F0  F0E1         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  8519  0128B8  C0F1  F0E2         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  8520  0128BC  C0F2  F0E3         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  8521  0128C0  C0F3  F0E4         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  8522  0128C4  EC5E  F0AF         	call	_RTCC_from_RTCC	;wreg free
  8523                           
  8524                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  8525  0128C8  0E00               	movlw	0
  8526  0128CA  0100               	movlb	0	; () banked
  8527  0128CC  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8528  0128CE  0E00               	movlw	0
  8529  0128D0  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8530                           
  8531                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  8532  0128D4  0E00               	movlw	0
  8533  0128D6  BBA8               	btfsc	_edit_flag& (0+255),5,b
  8534  0128D8  0E01               	movlw	1
  8535  0128DA  0100               	movlb	0	; () banked
  8536  0128DC  6FE4               	movwf	display_dec@edit& (0+255),b
  8537  0128DE  0E14               	movlw	20
  8538  0128E0  ECFE  F0AA         	call	_display_dec
  8539                           
  8540                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  8541  0128E4  0E00               	movlw	0
  8542  0128E6  BBA8               	btfsc	_edit_flag& (0+255),5,b
  8543  0128E8  0E01               	movlw	1
  8544  0128EA  0100               	movlb	0	; () banked
  8545  0128EC  6FE4               	movwf	display_dec@edit& (0+255),b
  8546  0128EE  0100               	movlb	0	; () banked
  8547  0128F0  EE20 F006          	lfsr	2,6
  8548  0128F4  51F0               	movf	display_time_1602@ct& (0+255),w,b
  8549  0128F6  26D9               	addwf	fsr2l,f,c
  8550  0128F8  51F1               	movf	(display_time_1602@ct+1)& (0+255),w,b
  8551  0128FA  22DA               	addwfc	fsr2h,f,c
  8552  0128FC  50DF               	movf	indf2,w,c
  8553  0128FE  ECFE  F0AA         	call	_display_dec
  8554                           
  8555                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  8556  012902  0E2F               	movlw	47
  8557  012904  EC4F  F0AD         	call	_I2C_LCD_Putc
  8558                           
  8559                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  8560  012908  0E00               	movlw	0
  8561  01290A  B9A8               	btfsc	_edit_flag& (0+255),4,b
  8562  01290C  0E01               	movlw	1
  8563  01290E  0100               	movlb	0	; () banked
  8564  012910  6FE4               	movwf	display_dec@edit& (0+255),b
  8565  012912  0100               	movlb	0	; () banked
  8566  012914  EE20 F005          	lfsr	2,5
  8567  012918  51F0               	movf	display_time_1602@ct& (0+255),w,b
  8568  01291A  26D9               	addwf	fsr2l,f,c
  8569  01291C  51F1               	movf	(display_time_1602@ct+1)& (0+255),w,b
  8570  01291E  22DA               	addwfc	fsr2h,f,c
  8571  012920  50DF               	movf	indf2,w,c
  8572  012922  ECFE  F0AA         	call	_display_dec
  8573                           
  8574                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  8575  012926  0E2F               	movlw	47
  8576  012928  EC4F  F0AD         	call	_I2C_LCD_Putc
  8577                           
  8578                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  8579  01292C  0E00               	movlw	0
  8580  01292E  B7A8               	btfsc	_edit_flag& (0+255),3,b
  8581  012930  0E01               	movlw	1
  8582  012932  0100               	movlb	0	; () banked
  8583  012934  6FE4               	movwf	display_dec@edit& (0+255),b
  8584  012936  0100               	movlb	0	; () banked
  8585  012938  EE20 F004          	lfsr	2,4
  8586  01293C  51F0               	movf	display_time_1602@ct& (0+255),w,b
  8587  01293E  26D9               	addwf	fsr2l,f,c
  8588  012940  51F1               	movf	(display_time_1602@ct+1)& (0+255),w,b
  8589  012942  22DA               	addwfc	fsr2h,f,c
  8590  012944  50DF               	movf	indf2,w,c
  8591  012946  ECFE  F0AA         	call	_display_dec
  8592                           
  8593                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  8594  01294A  0E28               	movlw	40
  8595  01294C  EC4F  F0AD         	call	_I2C_LCD_Putc
  8596                           
  8597                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  8598  012950  0100               	movlb	0	; () banked
  8599  012952  EE20 F003          	lfsr	2,3
  8600  012956  51F0               	movf	display_time_1602@ct& (0+255),w,b
  8601  012958  26D9               	addwf	fsr2l,f,c
  8602  01295A  51F1               	movf	(display_time_1602@ct+1)& (0+255),w,b
  8603  01295C  22DA               	addwfc	fsr2h,f,c
  8604  01295E  50DF               	movf	indf2,w,c
  8605  012960  0100               	movlb	0	; () banked
  8606  012962  6FF4               	movwf	??_display_time_1602& (0+255),b
  8607  012964  0100               	movlb	0	; () banked
  8608  012966  51F4               	movf	??_display_time_1602& (0+255),w,b
  8609  012968  0D04               	mullw	4
  8610  01296A  0EFC               	movlw	low _weekday_3char
  8611  01296C  24F3               	addwf	prodl,w,c
  8612  01296E  0100               	movlb	0	; () banked
  8613  012970  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8614  012972  0EFC               	movlw	high _weekday_3char
  8615  012974  20F4               	addwfc	prodh,w,c
  8616  012976  0100               	movlb	0	; () banked
  8617  012978  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8618  01297A  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8619                           
  8620                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  8621  01297E  0E29               	movlw	41
  8622  012980  EC4F  F0AD         	call	_I2C_LCD_Putc
  8623                           
  8624                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  8625  012984  0E01               	movlw	1
  8626  012986  0100               	movlb	0	; () banked
  8627  012988  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8628  01298A  0E08               	movlw	8
  8629  01298C  EC69  F0AE         	call	_I2C_LCD_SetCursor
  8630                           
  8631                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  8632  012990  0E00               	movlw	0
  8633  012992  B5A8               	btfsc	_edit_flag& (0+255),2,b
  8634  012994  0E01               	movlw	1
  8635  012996  0100               	movlb	0	; () banked
  8636  012998  6FE4               	movwf	display_dec@edit& (0+255),b
  8637  01299A  0100               	movlb	0	; () banked
  8638  01299C  EE20 F002          	lfsr	2,2
  8639  0129A0  51F0               	movf	display_time_1602@ct& (0+255),w,b
  8640  0129A2  26D9               	addwf	fsr2l,f,c
  8641  0129A4  51F1               	movf	(display_time_1602@ct+1)& (0+255),w,b
  8642  0129A6  22DA               	addwfc	fsr2h,f,c
  8643  0129A8  50DF               	movf	indf2,w,c
  8644  0129AA  ECFE  F0AA         	call	_display_dec
  8645                           
  8646                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  8647  0129AE  0100               	movlb	0	; () banked
  8648  0129B0  51A6               	movf	_colon& (0+255),w,b
  8649  0129B2  B4D8               	btfsc	status,2,c
  8650  0129B4  D004               	goto	l9539
  8651                           
  8652                           ; BSR set to: 0
  8653  0129B6  0E3A               	movlw	58
  8654  0129B8  EC4F  F0AD         	call	_I2C_LCD_Putc
  8655  0129BC  D003               	goto	l9541
  8656  0129BE                     l9539:
  8657                           
  8658                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  8659  0129BE  0E20               	movlw	32
  8660  0129C0  EC4F  F0AD         	call	_I2C_LCD_Putc
  8661  0129C4                     l9541:
  8662                           
  8663                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  8664  0129C4  0E00               	movlw	0
  8665  0129C6  B3A8               	btfsc	_edit_flag& (0+255),1,b
  8666  0129C8  0E01               	movlw	1
  8667  0129CA  0100               	movlb	0	; () banked
  8668  0129CC  6FE4               	movwf	display_dec@edit& (0+255),b
  8669  0129CE  0100               	movlb	0	; () banked
  8670  0129D0  EE20 F001          	lfsr	2,1
  8671  0129D4  51F0               	movf	display_time_1602@ct& (0+255),w,b
  8672  0129D6  26D9               	addwf	fsr2l,f,c
  8673  0129D8  51F1               	movf	(display_time_1602@ct+1)& (0+255),w,b
  8674  0129DA  22DA               	addwfc	fsr2h,f,c
  8675  0129DC  50DF               	movf	indf2,w,c
  8676  0129DE  ECFE  F0AA         	call	_display_dec
  8677                           
  8678                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  8679  0129E2  0E2D               	movlw	45
  8680  0129E4  EC4F  F0AD         	call	_I2C_LCD_Putc
  8681                           
  8682                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  8683  0129E8  0E00               	movlw	0
  8684  0129EA  B1A8               	btfsc	_edit_flag& (0+255),0,b
  8685  0129EC  0E01               	movlw	1
  8686  0129EE  0100               	movlb	0	; () banked
  8687  0129F0  6FE4               	movwf	display_dec@edit& (0+255),b
  8688  0129F2  C0F0  FFD9         	movff	display_time_1602@ct,fsr2l
  8689  0129F6  C0F1  FFDA         	movff	display_time_1602@ct+1,fsr2h
  8690  0129FA  50DF               	movf	indf2,w,c
  8691  0129FC  ECFE  F0AA         	call	_display_dec
  8692  012A00  0012               	return		;funcret
  8693  012A02                     __end_of_display_time_1602:
  8694                           	opt stack 0
  8695                           tblptru	equ	0xFF8
  8696                           tblptrh	equ	0xFF7
  8697                           tblptrl	equ	0xFF6
  8698                           tablat	equ	0xFF5
  8699                           prodh	equ	0xFF4
  8700                           prodl	equ	0xFF3
  8701                           intcon	equ	0xFF2
  8702                           postinc0	equ	0xFEE
  8703                           wreg	equ	0xFE8
  8704                           indf1	equ	0xFE7
  8705                           postinc1	equ	0xFE6
  8706                           postdec1	equ	0xFE5
  8707                           fsr1h	equ	0xFE2
  8708                           fsr1l	equ	0xFE1
  8709                           indf2	equ	0xFDF
  8710                           postinc2	equ	0xFDE
  8711                           postdec2	equ	0xFDD
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _display_dec *****************
  8717 ;; Defined at:
  8718 ;;		line 251 in file "../My_header\My_RTCC.h"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  dec             1    wreg     unsigned char 
  8721 ;;  edit            1   43[BANK0 ] unsigned char 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  dec             1   54[BANK0 ] unsigned char 
  8724 ;;  str            10   44[BANK0 ] unsigned char [10]
  8725 ;; Return value:  Size  Location     Type
  8726 ;;		None               void
  8727 ;; Registers used:
  8728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8734 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8735 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8737 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8738 ;;Total ram usage:       12 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; Hardware stack levels required when called:   14
  8741 ;; This function calls:
  8742 ;;		_I2C_LCD_Puts
  8743 ;;		_my_utoa
  8744 ;; This function is called by:
  8745 ;;		_display_time_1602
  8746 ;;		_display_time_0802
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text23
  8751  0155FC                     __ptext23:
  8752                           	opt stack 0
  8753  0155FC                     _display_dec:
  8754                           	opt stack 13
  8755                           
  8756                           ;incstack = 0
  8757                           ;display_dec@dec stored from wreg
  8758  0155FC  0100               	movlb	0	; () banked
  8759  0155FE  6FEF               	movwf	display_dec@dec& (0+255),b
  8760                           
  8761                           ;My_header\My_RTCC.h: 252: char str[10];
  8762                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  8763  015600  0EE5               	movlw	low display_dec@str
  8764  015602  0100               	movlb	0	; () banked
  8765  015604  6FDC               	movwf	my_utoa@str& (0+255),b
  8766  015606  0E00               	movlw	high display_dec@str
  8767  015608  0100               	movlb	0	; () banked
  8768  01560A  6FDD               	movwf	(my_utoa@str+1)& (0+255),b
  8769  01560C  C0EF  F0DE         	movff	display_dec@dec,my_utoa@value
  8770  015610  0100               	movlb	0	; () banked
  8771  015612  6BDF               	clrf	(my_utoa@value+1)& (0+255),b
  8772  015614  0E02               	movlw	2
  8773  015616  0100               	movlb	0	; () banked
  8774  015618  6FE0               	movwf	my_utoa@digits& (0+255),b
  8775  01561A  EC84  F0A7         	call	_my_utoa	;wreg free
  8776                           
  8777                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  8778  01561E  0100               	movlb	0	; () banked
  8779  015620  51E4               	movf	display_dec@edit& (0+255),w,b
  8780  015622  0100               	movlb	0	; () banked
  8781  015624  B4D8               	btfsc	status,2,c
  8782  015626  D00D               	goto	l9369
  8783                           
  8784                           ; BSR set to: 0
  8785  015628  0100               	movlb	0	; () banked
  8786  01562A  51A9               	movf	_halfsec& (0+255),w,b
  8787  01562C  B4D8               	btfsc	status,2,c
  8788  01562E  D009               	goto	l9369
  8789                           
  8790                           ; BSR set to: 0
  8791  015630  0ED8               	movlw	low STR_1
  8792  015632  0100               	movlb	0	; () banked
  8793  015634  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8794  015636  0EFF               	movlw	high STR_1
  8795  015638  0100               	movlb	0	; () banked
  8796  01563A  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8797  01563C  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8798  015640  0012               	return	
  8799  015642                     l9369:
  8800                           
  8801                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  8802  015642  0EE5               	movlw	low display_dec@str
  8803  015644  0100               	movlb	0	; () banked
  8804  015646  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  8805  015648  0E00               	movlw	high display_dec@str
  8806  01564A  0100               	movlb	0	; () banked
  8807  01564C  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8808  01564E  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  8809  015652  0012               	return	
  8810  015654                     __end_of_display_dec:
  8811                           	opt stack 0
  8812                           tblptru	equ	0xFF8
  8813                           tblptrh	equ	0xFF7
  8814                           tblptrl	equ	0xFF6
  8815                           tablat	equ	0xFF5
  8816                           prodh	equ	0xFF4
  8817                           prodl	equ	0xFF3
  8818                           intcon	equ	0xFF2
  8819                           postinc0	equ	0xFEE
  8820                           wreg	equ	0xFE8
  8821                           indf1	equ	0xFE7
  8822                           postinc1	equ	0xFE6
  8823                           postdec1	equ	0xFE5
  8824                           fsr1h	equ	0xFE2
  8825                           fsr1l	equ	0xFE1
  8826                           indf2	equ	0xFDF
  8827                           postinc2	equ	0xFDE
  8828                           postdec2	equ	0xFDD
  8829                           fsr2h	equ	0xFDA
  8830                           fsr2l	equ	0xFD9
  8831                           status	equ	0xFD8
  8832                           
  8833 ;; *************** function _my_utoa *****************
  8834 ;; Defined at:
  8835 ;;		line 11 in file "../My_header\My_stdlib.h"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  str             2   35[BANK0 ] PTR unsigned char 
  8838 ;;		 -> comm_d@str(10), tx_send_dec@str(10), display_LCD@str(10), display_dec@str(10), 
  8839 ;;  value           2   37[BANK0 ] unsigned int 
  8840 ;;  digits          1   39[BANK0 ] unsigned char 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  v               2   41[BANK0 ] unsigned int 
  8843 ;;  d               1   40[BANK0 ] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;		None               void
  8846 ;; Registers used:
  8847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8853 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8854 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;Total ram usage:        8 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   12
  8860 ;; This function calls:
  8861 ;;		___lwdiv
  8862 ;;		___lwmod
  8863 ;; This function is called by:
  8864 ;;		_display_dec
  8865 ;;		_display_LCD
  8866 ;;		_tx_send_dec
  8867 ;;		_comm_d
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text24
  8872  014F08                     __ptext24:
  8873                           	opt stack 0
  8874  014F08                     _my_utoa:
  8875                           	opt stack 14
  8876                           
  8877                           ;My_header\My_stdlib.h: 12: uint16_t v;
  8878                           ;My_header\My_stdlib.h: 13: uint8_t d;
  8879                           ;My_header\My_stdlib.h: 14: while (digits--) {
  8880                           
  8881                           ;incstack = 0
  8882  014F08  D036               	goto	l9161
  8883  014F0A                     l455:
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;My_header\My_stdlib.h: 15: v = value;
  8887  014F0A  C0DE  F0E2         	movff	my_utoa@value,my_utoa@v
  8888  014F0E  C0DF  F0E3         	movff	my_utoa@value+1,my_utoa@v+1
  8889                           
  8890                           ;My_header\My_stdlib.h: 16: d = digits;
  8891  014F12  C0E0  F0E1         	movff	my_utoa@digits,my_utoa@d
  8892                           
  8893                           ;My_header\My_stdlib.h: 17: while (d--) {
  8894  014F16  D00F               	goto	l9153
  8895  014F18                     l9151:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;My_header\My_stdlib.h: 18: v /= 10;
  8899  014F18  C0E2  F0D5         	movff	my_utoa@v,___lwdiv@dividend
  8900  014F1C  C0E3  F0D6         	movff	my_utoa@v+1,___lwdiv@dividend+1
  8901  014F20  0E00               	movlw	0
  8902  014F22  0100               	movlb	0	; () banked
  8903  014F24  6FD8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8904  014F26  0E0A               	movlw	10
  8905  014F28  6FD7               	movwf	___lwdiv@divisor& (0+255),b
  8906  014F2A  ECC9  F0A8         	call	___lwdiv	;wreg free
  8907  014F2E  C0D5  F0E2         	movff	?___lwdiv,my_utoa@v
  8908  014F32  C0D6  F0E3         	movff	?___lwdiv+1,my_utoa@v+1
  8909  014F36                     l9153:
  8910  014F36  0100               	movlb	0	; () banked
  8911  014F38  07E1               	decf	my_utoa@d& (0+255),f,b
  8912  014F3A  0100               	movlb	0	; () banked
  8913  014F3C  29E1               	incf	my_utoa@d& (0+255),w,b
  8914  014F3E  A4D8               	btfss	status,2,c
  8915  014F40  D7EB               	goto	l9151
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;My_header\My_stdlib.h: 19: }
  8919                           ;My_header\My_stdlib.h: 20: v %= 10;
  8920                           
  8921                           ; BSR set to: 0
  8922  014F42  C0E2  F0B9         	movff	my_utoa@v,___lwmod@dividend
  8923  014F46  C0E3  F0BA         	movff	my_utoa@v+1,___lwmod@dividend+1
  8924  014F4A  0E00               	movlw	0
  8925  014F4C  0100               	movlb	0	; () banked
  8926  014F4E  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  8927  014F50  0E0A               	movlw	10
  8928  014F52  6FBB               	movwf	___lwmod@divisor& (0+255),b
  8929  014F54  ECE8  F0A9         	call	___lwmod	;wreg free
  8930  014F58  C0B9  F0E2         	movff	?___lwmod,my_utoa@v
  8931  014F5C  C0BA  F0E3         	movff	?___lwmod+1,my_utoa@v+1
  8932                           
  8933                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  8934  014F60  0100               	movlb	0	; () banked
  8935  014F62  51E2               	movf	my_utoa@v& (0+255),w,b
  8936  014F64  0F30               	addlw	48
  8937  014F66  C0DC  FFD9         	movff	my_utoa@str,fsr2l
  8938  014F6A  C0DD  FFDA         	movff	my_utoa@str+1,fsr2h
  8939  014F6E  6EDF               	movwf	indf2,c
  8940                           
  8941                           ; BSR set to: 0
  8942  014F70  0100               	movlb	0	; () banked
  8943  014F72  4BDC               	infsnz	my_utoa@str& (0+255),f,b
  8944  014F74  2BDD               	incf	(my_utoa@str+1)& (0+255),f,b
  8945  014F76                     l9161:
  8946  014F76  0100               	movlb	0	; () banked
  8947  014F78  07E0               	decf	my_utoa@digits& (0+255),f,b
  8948  014F7A  0100               	movlb	0	; () banked
  8949  014F7C  29E0               	incf	my_utoa@digits& (0+255),w,b
  8950  014F7E  A4D8               	btfss	status,2,c
  8951  014F80  D7C4               	goto	l455
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;My_header\My_stdlib.h: 22: }
  8955                           ;My_header\My_stdlib.h: 23: *str = '\0';
  8956                           
  8957                           ; BSR set to: 0
  8958  014F82  C0DC  FFD9         	movff	my_utoa@str,fsr2l
  8959  014F86  C0DD  FFDA         	movff	my_utoa@str+1,fsr2h
  8960  014F8A  0E00               	movlw	0
  8961  014F8C  6EDF               	movwf	indf2,c
  8962                           
  8963                           ; BSR set to: 0
  8964  014F8E  0012               	return		;funcret
  8965  014F90                     __end_of_my_utoa:
  8966                           	opt stack 0
  8967                           tblptru	equ	0xFF8
  8968                           tblptrh	equ	0xFF7
  8969                           tblptrl	equ	0xFF6
  8970                           tablat	equ	0xFF5
  8971                           prodh	equ	0xFF4
  8972                           prodl	equ	0xFF3
  8973                           intcon	equ	0xFF2
  8974                           postinc0	equ	0xFEE
  8975                           wreg	equ	0xFE8
  8976                           indf1	equ	0xFE7
  8977                           postinc1	equ	0xFE6
  8978                           postdec1	equ	0xFE5
  8979                           fsr1h	equ	0xFE2
  8980                           fsr1l	equ	0xFE1
  8981                           indf2	equ	0xFDF
  8982                           postinc2	equ	0xFDE
  8983                           postdec2	equ	0xFDD
  8984                           fsr2h	equ	0xFDA
  8985                           fsr2l	equ	0xFD9
  8986                           status	equ	0xFD8
  8987                           
  8988 ;; *************** function ___lwmod *****************
  8989 ;; Defined at:
  8990 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  dividend        2    0[BANK0 ] unsigned int 
  8993 ;;  divisor         2    2[BANK0 ] unsigned int 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  counter         1    4[BANK0 ] unsigned char 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  2    0[BANK0 ] unsigned int 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9005 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9009 ;;Total ram usage:        5 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:   11
  9012 ;; This function calls:
  9013 ;;		Nothing
  9014 ;; This function is called by:
  9015 ;;		_tx_sendn
  9016 ;;		_my_utoa
  9017 ;;		_display_LCD
  9018 ;;		_comm_d
  9019 ;;		_ringbuf_put_num
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text25
  9024  0153D0                     __ptext25:
  9025                           	opt stack 0
  9026  0153D0                     ___lwmod:
  9027                           	opt stack 17
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;incstack = 0
  9031  0153D0  0100               	movlb	0	; () banked
  9032  0153D2  51BB               	movf	___lwmod@divisor& (0+255),w,b
  9033  0153D4  0100               	movlb	0	; () banked
  9034  0153D6  11BC               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9035  0153D8  B4D8               	btfsc	status,2,c
  9036  0153DA  D026               	goto	l1910
  9037                           
  9038                           ; BSR set to: 0
  9039  0153DC  0E01               	movlw	1
  9040  0153DE  0100               	movlb	0	; () banked
  9041  0153E0  6FBD               	movwf	___lwmod@counter& (0+255),b
  9042  0153E2  D006               	goto	l9079
  9043  0153E4                     l9077:
  9044                           
  9045                           ; BSR set to: 0
  9046  0153E4  0100               	movlb	0	; () banked
  9047  0153E6  90D8               	bcf	status,0,c
  9048  0153E8  37BB               	rlcf	___lwmod@divisor& (0+255),f,b
  9049  0153EA  37BC               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9050  0153EC  0100               	movlb	0	; () banked
  9051  0153EE  2BBD               	incf	___lwmod@counter& (0+255),f,b
  9052  0153F0                     l9079:
  9053                           
  9054                           ; BSR set to: 0
  9055  0153F0  0100               	movlb	0	; () banked
  9056  0153F2  AFBC               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9057  0153F4  D7F7               	goto	l9077
  9058  0153F6                     l9081:
  9059                           
  9060                           ; BSR set to: 0
  9061  0153F6  0100               	movlb	0	; () banked
  9062  0153F8  51BB               	movf	___lwmod@divisor& (0+255),w,b
  9063  0153FA  0100               	movlb	0	; () banked
  9064  0153FC  5DB9               	subwf	___lwmod@dividend& (0+255),w,b
  9065  0153FE  0100               	movlb	0	; () banked
  9066  015400  51BC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9067  015402  0100               	movlb	0	; () banked
  9068  015404  59BA               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9069  015406  A0D8               	btfss	status,0,c
  9070  015408  D008               	goto	l9085
  9071                           
  9072                           ; BSR set to: 0
  9073  01540A  0100               	movlb	0	; () banked
  9074  01540C  51BB               	movf	___lwmod@divisor& (0+255),w,b
  9075  01540E  0100               	movlb	0	; () banked
  9076  015410  5FB9               	subwf	___lwmod@dividend& (0+255),f,b
  9077  015412  0100               	movlb	0	; () banked
  9078  015414  51BC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9079  015416  0100               	movlb	0	; () banked
  9080  015418  5BBA               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9081  01541A                     l9085:
  9082                           
  9083                           ; BSR set to: 0
  9084  01541A  0100               	movlb	0	; () banked
  9085  01541C  90D8               	bcf	status,0,c
  9086  01541E  33BC               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9087  015420  33BB               	rrcf	___lwmod@divisor& (0+255),f,b
  9088                           
  9089                           ; BSR set to: 0
  9090  015422  0100               	movlb	0	; () banked
  9091  015424  2FBD               	decfsz	___lwmod@counter& (0+255),f,b
  9092  015426  D7E7               	goto	l9081
  9093  015428                     l1910:
  9094                           
  9095                           ; BSR set to: 0
  9096  015428  C0B9  F0B9         	movff	___lwmod@dividend,?___lwmod
  9097  01542C  C0BA  F0BA         	movff	___lwmod@dividend+1,?___lwmod+1
  9098                           
  9099                           ; BSR set to: 0
  9100  015430  0012               	return		;funcret
  9101  015432                     __end_of___lwmod:
  9102                           	opt stack 0
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           intcon	equ	0xFF2
  9110                           postinc0	equ	0xFEE
  9111                           wreg	equ	0xFE8
  9112                           indf1	equ	0xFE7
  9113                           postinc1	equ	0xFE6
  9114                           postdec1	equ	0xFE5
  9115                           fsr1h	equ	0xFE2
  9116                           fsr1l	equ	0xFE1
  9117                           indf2	equ	0xFDF
  9118                           postinc2	equ	0xFDE
  9119                           postdec2	equ	0xFDD
  9120                           fsr2h	equ	0xFDA
  9121                           fsr2l	equ	0xFD9
  9122                           status	equ	0xFD8
  9123                           
  9124 ;; *************** function _I2C_LCD_Putc *****************
  9125 ;; Defined at:
  9126 ;;		line 118 in file "../My_header\My_I2C.h"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  c               1    wreg     unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  c               1    4[BANK0 ] unsigned char 
  9131 ;;  ans             1    5[BANK0 ] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;		None               void
  9134 ;; Registers used:
  9135 ;;		wreg, status,2, status,0, cstack
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9145 ;;Total ram usage:        2 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; Hardware stack levels required when called:   13
  9148 ;; This function calls:
  9149 ;;		_I2C_Send
  9150 ;;		_I2C_Start
  9151 ;;		_I2C_Stop
  9152 ;; This function is called by:
  9153 ;;		_display_time_1602
  9154 ;;		_display_LCD
  9155 ;;		_display_time_0802
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text26
  9160  015A9E                     __ptext26:
  9161                           	opt stack 0
  9162  015A9E                     _I2C_LCD_Putc:
  9163                           	opt stack 14
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;incstack = 0
  9167                           ;I2C_LCD_Putc@c stored from wreg
  9168  015A9E  0100               	movlb	0	; () banked
  9169  015AA0  6FBD               	movwf	I2C_LCD_Putc@c& (0+255),b
  9170                           
  9171                           ;My_header\My_I2C.h: 119: uint8_t ans;
  9172                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  9173  015AA2  0E00               	movlw	0
  9174  015AA4  0100               	movlb	0	; () banked
  9175  015AA6  6FBB               	movwf	I2C_Start@rw& (0+255),b
  9176  015AA8  0E3E               	movlw	62
  9177  015AAA  EC0C  F0AE         	call	_I2C_Start
  9178  015AAE  0100               	movlb	0	; () banked
  9179  015AB0  6FBE               	movwf	I2C_LCD_Putc@ans& (0+255),b
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  9183  015AB2  0100               	movlb	0	; () banked
  9184  015AB4  51BE               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  9185  015AB6  0100               	movlb	0	; () banked
  9186  015AB8  A4D8               	btfss	status,2,c
  9187  015ABA  D007               	goto	l355
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  9191  015ABC  0EC0               	movlw	192
  9192  015ABE  ECC7  F0AF         	call	_I2C_Send
  9193                           
  9194                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  9195  015AC2  0100               	movlb	0	; () banked
  9196  015AC4  51BD               	movf	I2C_LCD_Putc@c& (0+255),w,b
  9197  015AC6  ECC7  F0AF         	call	_I2C_Send
  9198  015ACA                     l355:
  9199                           
  9200                           ;My_header\My_I2C.h: 126: }
  9201                           ;My_header\My_I2C.h: 127: I2C_Stop();
  9202  015ACA  ECEC  F0AF         	call	_I2C_Stop	;wreg free
  9203                           
  9204                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9205  015ACE  0E68               	movlw	104
  9206  015AD0                     u12537:
  9207  015AD0  2EE8               	decfsz	wreg,f,c
  9208  015AD2  D7FE               	goto	u12537
  9209  015AD4  0012               	return		;funcret
  9210  015AD6                     __end_of_I2C_LCD_Putc:
  9211                           	opt stack 0
  9212                           tblptru	equ	0xFF8
  9213                           tblptrh	equ	0xFF7
  9214                           tblptrl	equ	0xFF6
  9215                           tablat	equ	0xFF5
  9216                           prodh	equ	0xFF4
  9217                           prodl	equ	0xFF3
  9218                           intcon	equ	0xFF2
  9219                           postinc0	equ	0xFEE
  9220                           wreg	equ	0xFE8
  9221                           indf1	equ	0xFE7
  9222                           postinc1	equ	0xFE6
  9223                           postdec1	equ	0xFE5
  9224                           fsr1h	equ	0xFE2
  9225                           fsr1l	equ	0xFE1
  9226                           indf2	equ	0xFDF
  9227                           postinc2	equ	0xFDE
  9228                           postdec2	equ	0xFDD
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function _display_port *****************
  9234 ;; Defined at:
  9235 ;;		line 173 in file "tasks.h"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;		None               void
  9242 ;; Registers used:
  9243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9253 ;;Total ram usage:        0 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:   15
  9256 ;; This function calls:
  9257 ;;		_I2C_LCD_Puts
  9258 ;;		_I2C_LCD_SetCursor
  9259 ;; This function is called by:
  9260 ;;		_display_LCD
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text27
  9265  0139C0                     __ptext27:
  9266                           	opt stack 0
  9267  0139C0                     _display_port:
  9268                           	opt stack 13
  9269                           
  9270                           ;tasks.h: 174: I2C_LCD_SetCursor(0, 0);
  9271                           
  9272                           ;incstack = 0
  9273  0139C0  0E00               	movlw	0
  9274  0139C2  0100               	movlb	0	; () banked
  9275  0139C4  6FBF               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9276  0139C6  0E00               	movlw	0
  9277  0139C8  EC69  F0AE         	call	_I2C_LCD_SetCursor
  9278                           
  9279                           ;tasks.h: 175: switch (print_port) {
  9280  0139CC  D05A               	goto	l9759
  9281  0139CE                     l9739:
  9282                           
  9283                           ;tasks.h: 177: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Left Port");
  9284  0139CE  0100               	movlb	0	; () banked
  9285  0139D0  51AB               	movf	_print_port& (0+255),w,b
  9286  0139D2  0D01               	mullw	1
  9287  0139D4  0E87               	movlw	low _auto_cut_ON
  9288  0139D6  24F3               	addwf	prodl,w,c
  9289  0139D8  6ED9               	movwf	fsr2l,c
  9290  0139DA  0E00               	movlw	high _auto_cut_ON
  9291  0139DC  20F4               	addwfc	prodh,w,c
  9292  0139DE  6EDA               	movwf	fsr2h,c
  9293  0139E0  50DF               	movf	indf2,w,c
  9294  0139E2  B4D8               	btfsc	status,2,c
  9295  0139E4  D009               	goto	l9743
  9296                           
  9297                           ; BSR set to: 0
  9298  0139E6  0E7E               	movlw	low STR_2
  9299  0139E8  0100               	movlb	0	; () banked
  9300  0139EA  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  9301  0139EC  0EFF               	movlw	high STR_2
  9302  0139EE  0100               	movlb	0	; () banked
  9303  0139F0  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9304  0139F2  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  9305  0139F6  0012               	return	
  9306  0139F8                     l9743:
  9307                           
  9308                           ;tasks.h: 178: else I2C_LCD_Puts("LEFT PORT");
  9309  0139F8  0E6A               	movlw	low STR_3
  9310  0139FA  0100               	movlb	0	; () banked
  9311  0139FC  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  9312  0139FE  0EFF               	movlw	high STR_3
  9313  013A00  0100               	movlb	0	; () banked
  9314  013A02  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9315  013A04  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  9316                           
  9317                           ;tasks.h: 179: break;
  9318  013A08  0012               	return	
  9319  013A0A                     l9745:
  9320                           
  9321                           ;tasks.h: 181: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Center Port");
  9322  013A0A  0100               	movlb	0	; () banked
  9323  013A0C  51AB               	movf	_print_port& (0+255),w,b
  9324  013A0E  0D01               	mullw	1
  9325  013A10  0E87               	movlw	low _auto_cut_ON
  9326  013A12  24F3               	addwf	prodl,w,c
  9327  013A14  6ED9               	movwf	fsr2l,c
  9328  013A16  0E00               	movlw	high _auto_cut_ON
  9329  013A18  20F4               	addwfc	prodh,w,c
  9330  013A1A  6EDA               	movwf	fsr2h,c
  9331  013A1C  50DF               	movf	indf2,w,c
  9332  013A1E  B4D8               	btfsc	status,2,c
  9333  013A20  D009               	goto	l9749
  9334                           
  9335                           ; BSR set to: 0
  9336  013A22  0E3D               	movlw	low STR_4
  9337  013A24  0100               	movlb	0	; () banked
  9338  013A26  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  9339  013A28  0EFF               	movlw	high STR_4
  9340  013A2A  0100               	movlb	0	; () banked
  9341  013A2C  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9342  013A2E  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  9343  013A32  0012               	return	
  9344  013A34                     l9749:
  9345                           
  9346                           ;tasks.h: 182: else I2C_LCD_Puts("CENTER PORT");
  9347  013A34  0E25               	movlw	low STR_5
  9348  013A36  0100               	movlb	0	; () banked
  9349  013A38  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  9350  013A3A  0EFF               	movlw	high STR_5
  9351  013A3C  0100               	movlb	0	; () banked
  9352  013A3E  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9353  013A40  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  9354                           
  9355                           ;tasks.h: 183: break;
  9356  013A44  0012               	return	
  9357  013A46                     l9751:
  9358                           
  9359                           ;tasks.h: 185: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Right Port");
  9360  013A46  0100               	movlb	0	; () banked
  9361  013A48  51AB               	movf	_print_port& (0+255),w,b
  9362  013A4A  0D01               	mullw	1
  9363  013A4C  0E87               	movlw	low _auto_cut_ON
  9364  013A4E  24F3               	addwf	prodl,w,c
  9365  013A50  6ED9               	movwf	fsr2l,c
  9366  013A52  0E00               	movlw	high _auto_cut_ON
  9367  013A54  20F4               	addwfc	prodh,w,c
  9368  013A56  6EDA               	movwf	fsr2h,c
  9369  013A58  50DF               	movf	indf2,w,c
  9370  013A5A  B4D8               	btfsc	status,2,c
  9371  013A5C  D009               	goto	l9755
  9372                           
  9373                           ; BSR set to: 0
  9374  013A5E  0E5F               	movlw	low STR_6
  9375  013A60  0100               	movlb	0	; () banked
  9376  013A62  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  9377  013A64  0EFF               	movlw	high STR_6
  9378  013A66  0100               	movlb	0	; () banked
  9379  013A68  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9380  013A6A  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  9381  013A6E  0012               	return	
  9382  013A70                     l9755:
  9383                           
  9384                           ;tasks.h: 186: else I2C_LCD_Puts("RIGHT PORT");
  9385  013A70  0E49               	movlw	low STR_7
  9386  013A72  0100               	movlb	0	; () banked
  9387  013A74  6FBD               	movwf	I2C_LCD_Puts@s& (0+255),b
  9388  013A76  0EFF               	movlw	high STR_7
  9389  013A78  0100               	movlb	0	; () banked
  9390  013A7A  6FBE               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9391  013A7C  ECF6  F0A6         	call	_I2C_LCD_Puts	;wreg free
  9392                           
  9393                           ;tasks.h: 188: }
  9394                           
  9395                           ;tasks.h: 187: break;
  9396  013A80  0012               	return	
  9397  013A82                     l9759:
  9398  013A82  0100               	movlb	0	; () banked
  9399  013A84  51AB               	movf	_print_port& (0+255),w,b
  9400                           
  9401                           ; Switch size 1, requested type "space"
  9402                           ; Number of cases is 3, Range of values is 0 to 2
  9403                           ; switch strategies available:
  9404                           ; Name         Instructions Cycles
  9405                           ; simple_byte           10     6 (average)
  9406                           ;	Chosen strategy is simple_byte
  9407  013A86  0A00               	xorlw	0	; case 0
  9408  013A88  B4D8               	btfsc	status,2,c
  9409  013A8A  D7A1               	goto	l9739
  9410  013A8C  0A01               	xorlw	1	; case 1
  9411  013A8E  B4D8               	btfsc	status,2,c
  9412  013A90  D7BC               	goto	l9745
  9413  013A92  0A03               	xorlw	3	; case 2
  9414  013A94  A4D8               	btfss	status,2,c
  9415  013A96  0012               	return	
  9416  013A98  D7D6               	goto	l9751
  9417  013A9A                     __end_of_display_port:
  9418                           	opt stack 0
  9419                           tblptru	equ	0xFF8
  9420                           tblptrh	equ	0xFF7
  9421                           tblptrl	equ	0xFF6
  9422                           tablat	equ	0xFF5
  9423                           prodh	equ	0xFF4
  9424                           prodl	equ	0xFF3
  9425                           intcon	equ	0xFF2
  9426                           postinc0	equ	0xFEE
  9427                           wreg	equ	0xFE8
  9428                           indf1	equ	0xFE7
  9429                           postinc1	equ	0xFE6
  9430                           postdec1	equ	0xFE5
  9431                           fsr1h	equ	0xFE2
  9432                           fsr1l	equ	0xFE1
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           postdec2	equ	0xFDD
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function _I2C_LCD_SetCursor *****************
  9441 ;; Defined at:
  9442 ;;		line 112 in file "../My_header\My_I2C.h"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  col             1    wreg     unsigned char 
  9445 ;;  row             1    6[BANK0 ] unsigned char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  col             1    9[BANK0 ] unsigned char 
  9448 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  9449 ;; Return value:  Size  Location     Type
  9450 ;;		None               void
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9458 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;Total ram usage:        4 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   14
  9465 ;; This function calls:
  9466 ;;		_I2C_LCD_Command
  9467 ;; This function is called by:
  9468 ;;		_display_time_1602
  9469 ;;		_display_port
  9470 ;;		_display_LCD
  9471 ;;		_display_time_0802
  9472 ;;		_sleep_loop
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text28
  9477  015CD2                     __ptext28:
  9478                           	opt stack 0
  9479  015CD2                     _I2C_LCD_SetCursor:
  9480                           	opt stack 13
  9481                           
  9482                           ;incstack = 0
  9483                           ;I2C_LCD_SetCursor@col stored from wreg
  9484  015CD2  0100               	movlb	0	; () banked
  9485  015CD4  6FC2               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  9486                           
  9487                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  9488  015CD6  C1FB  F0C0         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
  9489  015CDA  C1FC  F0C1         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
  9490                           
  9491                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  9492  015CDE  0100               	movlb	0	; () banked
  9493  015CE0  51BF               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  9494  015CE2  0D01               	mullw	1
  9495  015CE4  0EC0               	movlw	low I2C_LCD_SetCursor@row_offsets
  9496  015CE6  24F3               	addwf	prodl,w,c
  9497  015CE8  6ED9               	movwf	fsr2l,c
  9498  015CEA  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  9499  015CEC  20F4               	addwfc	prodh,w,c
  9500  015CEE  6EDA               	movwf	fsr2h,c
  9501  015CF0  50DF               	movf	indf2,w,c
  9502  015CF2  0100               	movlb	0	; () banked
  9503  015CF4  25C2               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  9504  015CF6  0980               	iorlw	128
  9505  015CF8  EC87  F0AD         	call	_I2C_LCD_Command
  9506  015CFC  0012               	return		;funcret
  9507  015CFE                     __end_of_I2C_LCD_SetCursor:
  9508                           	opt stack 0
  9509                           tblptru	equ	0xFF8
  9510                           tblptrh	equ	0xFF7
  9511                           tblptrl	equ	0xFF6
  9512                           tablat	equ	0xFF5
  9513                           prodh	equ	0xFF4
  9514                           prodl	equ	0xFF3
  9515                           intcon	equ	0xFF2
  9516                           postinc0	equ	0xFEE
  9517                           wreg	equ	0xFE8
  9518                           indf1	equ	0xFE7
  9519                           postinc1	equ	0xFE6
  9520                           postdec1	equ	0xFE5
  9521                           fsr1h	equ	0xFE2
  9522                           fsr1l	equ	0xFE1
  9523                           indf2	equ	0xFDF
  9524                           postinc2	equ	0xFDE
  9525                           postdec2	equ	0xFDD
  9526                           fsr2h	equ	0xFDA
  9527                           fsr2l	equ	0xFD9
  9528                           status	equ	0xFD8
  9529                           
  9530 ;; *************** function _I2C_LCD_Puts *****************
  9531 ;; Defined at:
  9532 ;;		line 131 in file "../My_header\My_I2C.h"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  9535 ;;		 -> STR_83(9), STR_82(17), STR_19(14), STR_18(13), 
  9536 ;;		 -> STR_17(16), STR_16(17), STR_15(16), STR_14(2), 
  9537 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(4), 
  9538 ;;		 -> display_LCD@str(10), STR_9(13), STR_8(17), STR_7(11), 
  9539 ;;		 -> STR_6(11), STR_5(12), STR_4(12), STR_3(10), 
  9540 ;;		 -> STR_2(10), weekday_3char(28), STR_1(3), display_dec@str(10), 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  ans             2    7[BANK0 ] int 
  9543 ;; Return value:  Size  Location     Type
  9544 ;;		None               void
  9545 ;; Registers used:
  9546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9552 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9553 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9555 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9556 ;;Total ram usage:        5 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:   13
  9559 ;; This function calls:
  9560 ;;		_I2C_Send
  9561 ;;		_I2C_Start
  9562 ;;		_I2C_Stop
  9563 ;; This function is called by:
  9564 ;;		_display_dec
  9565 ;;		_display_time_1602
  9566 ;;		_display_port
  9567 ;;		_display_LCD
  9568 ;;		_display_time_0802
  9569 ;;		_sleep_loop
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text29
  9574  014DEC                     __ptext29:
  9575                           	opt stack 0
  9576  014DEC                     _I2C_LCD_Puts:
  9577                           	opt stack 13
  9578                           
  9579                           ;My_header\My_I2C.h: 132: int ans;
  9580                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  9581                           
  9582                           ;incstack = 0
  9583  014DEC  0E00               	movlw	0
  9584  014DEE  0100               	movlb	0	; () banked
  9585  014DF0  6FBB               	movwf	I2C_Start@rw& (0+255),b
  9586  014DF2  0E3E               	movlw	62
  9587  014DF4  EC0C  F0AE         	call	_I2C_Start
  9588  014DF8  0100               	movlb	0	; () banked
  9589  014DFA  6FBF               	movwf	??_I2C_LCD_Puts& (0+255),b
  9590  014DFC  0100               	movlb	0	; () banked
  9591  014DFE  51BF               	movf	??_I2C_LCD_Puts& (0+255),w,b
  9592  014E00  0100               	movlb	0	; () banked
  9593  014E02  6FC0               	movwf	I2C_LCD_Puts@ans& (0+255),b
  9594  014E04  6BC1               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  9598  014E06  0100               	movlb	0	; () banked
  9599  014E08  51C0               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  9600  014E0A  0100               	movlb	0	; () banked
  9601  014E0C  11C1               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  9602  014E0E  A4D8               	btfss	status,2,c
  9603  014E10  D031               	goto	l9191
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  9607  014E12  0E40               	movlw	64
  9608  014E14  ECC7  F0AF         	call	_I2C_Send
  9609                           
  9610                           ;My_header\My_I2C.h: 137: while (*s) {
  9611  014E18  D019               	goto	l9189
  9612  014E1A                     l9183:
  9613                           
  9614                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  9615  014E1A  C0BD  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  9616  014E1E  C0BE  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  9617  014E22  0E00               	movlw	low (__mediumconst shr (0+16))
  9618  014E24  6EF8               	movwf	tblptru,c
  9619  014E26  0E0E               	movlw	(high __ramtop+-1)
  9620  014E28  64F7               	cpfsgt	tblptrh,c
  9621  014E2A  D003               	bra	u9897
  9622  014E2C  0008               	tblrd		*
  9623  014E2E  50F5               	movf	tablat,w,c
  9624  014E30  D005               	bra	u9890
  9625  014E32                     u9897:
  9626  014E32  CFF6 FFE1          	movff	tblptrl,fsr1l
  9627  014E36  CFF7 FFE2          	movff	tblptrh,fsr1h
  9628  014E3A  50E7               	movf	indf1,w,c
  9629  014E3C                     u9890:
  9630  014E3C  ECC7  F0AF         	call	_I2C_Send
  9631  014E40  0100               	movlb	0	; () banked
  9632  014E42  4BBD               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  9633  014E44  2BBE               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9637  014E46  0E68               	movlw	104
  9638  014E48                     u12547:
  9639  014E48  2EE8               	decfsz	wreg,f,c
  9640  014E4A  D7FE               	goto	u12547
  9641  014E4C                     l9189:
  9642  014E4C  C0BD  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  9643  014E50  C0BE  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  9644  014E54  0E00               	movlw	low (__mediumconst shr (0+16))
  9645  014E56  6EF8               	movwf	tblptru,c
  9646  014E58  0E0E               	movlw	(high __ramtop+-1)
  9647  014E5A  64F7               	cpfsgt	tblptrh,c
  9648  014E5C  D003               	bra	u9907
  9649  014E5E  0008               	tblrd		*
  9650  014E60  50F5               	movf	tablat,w,c
  9651  014E62  D005               	bra	u9900
  9652  014E64                     u9907:
  9653  014E64  CFF6 FFE1          	movff	tblptrl,fsr1l
  9654  014E68  CFF7 FFE2          	movff	tblptrh,fsr1h
  9655  014E6C  50E7               	movf	indf1,w,c
  9656  014E6E                     u9900:
  9657  014E6E  0900               	iorlw	0
  9658  014E70  A4D8               	btfss	status,2,c
  9659  014E72  D7D3               	goto	l9183
  9660  014E74                     l9191:
  9661                           
  9662                           ;My_header\My_I2C.h: 140: }
  9663                           ;My_header\My_I2C.h: 141: }
  9664                           ;My_header\My_I2C.h: 142: I2C_Stop();
  9665  014E74  ECEC  F0AF         	call	_I2C_Stop	;wreg free
  9666  014E78  0012               	return		;funcret
  9667  014E7A                     __end_of_I2C_LCD_Puts:
  9668                           	opt stack 0
  9669                           tblptru	equ	0xFF8
  9670                           tblptrh	equ	0xFF7
  9671                           tblptrl	equ	0xFF6
  9672                           tablat	equ	0xFF5
  9673                           prodh	equ	0xFF4
  9674                           prodl	equ	0xFF3
  9675                           intcon	equ	0xFF2
  9676                           postinc0	equ	0xFEE
  9677                           wreg	equ	0xFE8
  9678                           indf1	equ	0xFE7
  9679                           postinc1	equ	0xFE6
  9680                           postdec1	equ	0xFE5
  9681                           fsr1h	equ	0xFE2
  9682                           fsr1l	equ	0xFE1
  9683                           indf2	equ	0xFDF
  9684                           postinc2	equ	0xFDE
  9685                           postdec2	equ	0xFDD
  9686                           fsr2h	equ	0xFDA
  9687                           fsr2l	equ	0xFD9
  9688                           status	equ	0xFD8
  9689                           
  9690 ;; *************** function ___llmod *****************
  9691 ;; Defined at:
  9692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  dividend        4   13[BANK0 ] unsigned long 
  9695 ;;  divisor         4   17[BANK0 ] unsigned long 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  counter         1   21[BANK0 ] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  4   13[BANK0 ] unsigned long 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9707 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9710 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9711 ;;Total ram usage:        9 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:   11
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_display_LCD
  9718 ;;		_comm_d
  9719 ;;		_my_utoa32
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text30
  9724  014AFC                     __ptext30:
  9725                           	opt stack 0
  9726  014AFC                     ___llmod:
  9727                           	opt stack 16
  9728                           
  9729                           ;incstack = 0
  9730  014AFC  0100               	movlb	0	; () banked
  9731  014AFE  51CA               	movf	___llmod@divisor& (0+255),w,b
  9732  014B00  0100               	movlb	0	; () banked
  9733  014B02  11CB               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9734  014B04  0100               	movlb	0	; () banked
  9735  014B06  11CC               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9736  014B08  0100               	movlb	0	; () banked
  9737  014B0A  11CD               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9738  014B0C  B4D8               	btfsc	status,2,c
  9739  014B0E  D03A               	goto	l1857
  9740                           
  9741                           ; BSR set to: 0
  9742  014B10  0E01               	movlw	1
  9743  014B12  0100               	movlb	0	; () banked
  9744  014B14  6FCE               	movwf	___llmod@counter& (0+255),b
  9745  014B16  D008               	goto	l9447
  9746  014B18                     l9445:
  9747                           
  9748                           ; BSR set to: 0
  9749  014B18  0100               	movlb	0	; () banked
  9750  014B1A  90D8               	bcf	status,0,c
  9751  014B1C  37CA               	rlcf	___llmod@divisor& (0+255),f,b
  9752  014B1E  37CB               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9753  014B20  37CC               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9754  014B22  37CD               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9755  014B24  0100               	movlb	0	; () banked
  9756  014B26  2BCE               	incf	___llmod@counter& (0+255),f,b
  9757  014B28                     l9447:
  9758                           
  9759                           ; BSR set to: 0
  9760  014B28  0100               	movlb	0	; () banked
  9761  014B2A  AFCD               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9762  014B2C  D7F5               	goto	l9445
  9763  014B2E                     l9449:
  9764                           
  9765                           ; BSR set to: 0
  9766  014B2E  0100               	movlb	0	; () banked
  9767  014B30  51CA               	movf	___llmod@divisor& (0+255),w,b
  9768  014B32  0100               	movlb	0	; () banked
  9769  014B34  5DC6               	subwf	___llmod@dividend& (0+255),w,b
  9770  014B36  0100               	movlb	0	; () banked
  9771  014B38  51CB               	movf	(___llmod@divisor+1)& (0+255),w,b
  9772  014B3A  0100               	movlb	0	; () banked
  9773  014B3C  59C7               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9774  014B3E  0100               	movlb	0	; () banked
  9775  014B40  51CC               	movf	(___llmod@divisor+2)& (0+255),w,b
  9776  014B42  0100               	movlb	0	; () banked
  9777  014B44  59C8               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9778  014B46  0100               	movlb	0	; () banked
  9779  014B48  51CD               	movf	(___llmod@divisor+3)& (0+255),w,b
  9780  014B4A  0100               	movlb	0	; () banked
  9781  014B4C  59C9               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9782  014B4E  A0D8               	btfss	status,0,c
  9783  014B50  D010               	goto	l9453
  9784                           
  9785                           ; BSR set to: 0
  9786  014B52  0100               	movlb	0	; () banked
  9787  014B54  51CA               	movf	___llmod@divisor& (0+255),w,b
  9788  014B56  0100               	movlb	0	; () banked
  9789  014B58  5FC6               	subwf	___llmod@dividend& (0+255),f,b
  9790  014B5A  0100               	movlb	0	; () banked
  9791  014B5C  51CB               	movf	(___llmod@divisor+1)& (0+255),w,b
  9792  014B5E  0100               	movlb	0	; () banked
  9793  014B60  5BC7               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9794  014B62  0100               	movlb	0	; () banked
  9795  014B64  51CC               	movf	(___llmod@divisor+2)& (0+255),w,b
  9796  014B66  0100               	movlb	0	; () banked
  9797  014B68  5BC8               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9798  014B6A  0100               	movlb	0	; () banked
  9799  014B6C  51CD               	movf	(___llmod@divisor+3)& (0+255),w,b
  9800  014B6E  0100               	movlb	0	; () banked
  9801  014B70  5BC9               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9802  014B72                     l9453:
  9803                           
  9804                           ; BSR set to: 0
  9805  014B72  0100               	movlb	0	; () banked
  9806  014B74  90D8               	bcf	status,0,c
  9807  014B76  33CD               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9808  014B78  33CC               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9809  014B7A  33CB               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9810  014B7C  33CA               	rrcf	___llmod@divisor& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  014B7E  0100               	movlb	0	; () banked
  9814  014B80  2FCE               	decfsz	___llmod@counter& (0+255),f,b
  9815  014B82  D7D5               	goto	l9449
  9816  014B84                     l1857:
  9817                           
  9818                           ; BSR set to: 0
  9819  014B84  C0C6  F0C6         	movff	___llmod@dividend,?___llmod
  9820  014B88  C0C7  F0C7         	movff	___llmod@dividend+1,?___llmod+1
  9821  014B8C  C0C8  F0C8         	movff	___llmod@dividend+2,?___llmod+2
  9822  014B90  C0C9  F0C9         	movff	___llmod@dividend+3,?___llmod+3
  9823                           
  9824                           ; BSR set to: 0
  9825  014B94  0012               	return		;funcret
  9826  014B96                     __end_of___llmod:
  9827                           	opt stack 0
  9828                           tblptru	equ	0xFF8
  9829                           tblptrh	equ	0xFF7
  9830                           tblptrl	equ	0xFF6
  9831                           tablat	equ	0xFF5
  9832                           prodh	equ	0xFF4
  9833                           prodl	equ	0xFF3
  9834                           intcon	equ	0xFF2
  9835                           postinc0	equ	0xFEE
  9836                           wreg	equ	0xFE8
  9837                           indf1	equ	0xFE7
  9838                           postinc1	equ	0xFE6
  9839                           postdec1	equ	0xFE5
  9840                           fsr1h	equ	0xFE2
  9841                           fsr1l	equ	0xFE1
  9842                           indf2	equ	0xFDF
  9843                           postinc2	equ	0xFDE
  9844                           postdec2	equ	0xFDD
  9845                           fsr2h	equ	0xFDA
  9846                           fsr2l	equ	0xFD9
  9847                           status	equ	0xFD8
  9848                           
  9849 ;; *************** function _RTCC_adjust_time_button *****************
  9850 ;; Defined at:
  9851 ;;		line 363 in file "../My_header\My_RTCC.h"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  mode            2   63[BANK0 ] PTR struct button
  9854 ;;		 -> ctm(4), 
  9855 ;;  cnt_inc         2   65[BANK0 ] PTR struct button
  9856 ;;		 -> ct0(4), 
  9857 ;;  cnt_dec         2   67[BANK0 ] PTR struct button
  9858 ;;		 -> ct1(4), 
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;		None               void
  9863 ;; Registers used:
  9864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9873 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9874 ;;Total ram usage:        6 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:   16
  9877 ;; This function calls:
  9878 ;;		_RTCC_adjust_time_cursor
  9879 ;;		_RTCC_adjust_time_dec
  9880 ;;		_RTCC_adjust_time_inc
  9881 ;;		_RTCC_adjust_time_toggle
  9882 ;; This function is called by:
  9883 ;;		_normal_mode_loop
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text31
  9888  012DDA                     __ptext31:
  9889                           	opt stack 0
  9890  012DDA                     _RTCC_adjust_time_button:
  9891                           	opt stack 13
  9892                           
  9893                           ;My_header\My_RTCC.h: 364: if (mode->flag.long_holding_3) {
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;incstack = 0
  9897  012DDA  0100               	movlb	0	; () banked
  9898  012DDC  EE20 F003          	lfsr	2,3
  9899  012DE0  51F8               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  9900  012DE2  26D9               	addwf	fsr2l,f,c
  9901  012DE4  51F9               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  9902  012DE6  22DA               	addwfc	fsr2h,f,c
  9903  012DE8  0100               	movlb	0	; () banked
  9904  012DEA  A6DF               	btfss	indf2,3,c
  9905  012DEC  D02C               	goto	l10277
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;My_header\My_RTCC.h: 365: mode->flag.long_holding_3 = 0;
  9909  012DEE  0100               	movlb	0	; () banked
  9910  012DF0  EE20 F003          	lfsr	2,3
  9911  012DF4  51F8               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  9912  012DF6  26D9               	addwf	fsr2l,f,c
  9913  012DF8  51F9               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  9914  012DFA  22DA               	addwfc	fsr2h,f,c
  9915  012DFC  0100               	movlb	0	; () banked
  9916  012DFE  96DF               	bcf	indf2,3,c
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;My_header\My_RTCC.h: 366: RTCC_adjust_time_toggle();
  9920  012E00  ECD3  F0AF         	call	_RTCC_adjust_time_toggle	;wreg free
  9921                           
  9922                           ;My_header\My_RTCC.h: 367: mode->flags = 0;
  9923  012E04  0100               	movlb	0	; () banked
  9924  012E06  EE20 F002          	lfsr	2,2
  9925  012E0A  51F8               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  9926  012E0C  26D9               	addwf	fsr2l,f,c
  9927  012E0E  51F9               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  9928  012E10  22DA               	addwfc	fsr2h,f,c
  9929  012E12  0E00               	movlw	0
  9930  012E14  6EDE               	movwf	postinc2,c
  9931  012E16  0E00               	movlw	0
  9932  012E18  6EDD               	movwf	postdec2,c
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;My_header\My_RTCC.h: 368: cnt_inc->flags = 0;
  9936  012E1A  0100               	movlb	0	; () banked
  9937  012E1C  EE20 F002          	lfsr	2,2
  9938  012E20  51FA               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  9939  012E22  26D9               	addwf	fsr2l,f,c
  9940  012E24  51FB               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  9941  012E26  22DA               	addwfc	fsr2h,f,c
  9942  012E28  0E00               	movlw	0
  9943  012E2A  6EDE               	movwf	postinc2,c
  9944  012E2C  0E00               	movlw	0
  9945  012E2E  6EDD               	movwf	postdec2,c
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;My_header\My_RTCC.h: 369: cnt_dec->flags = 0;
  9949  012E30  0100               	movlb	0	; () banked
  9950  012E32  EE20 F002          	lfsr	2,2
  9951  012E36  51FC               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  9952  012E38  26D9               	addwf	fsr2l,f,c
  9953  012E3A  51FD               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  9954  012E3C  22DA               	addwfc	fsr2h,f,c
  9955  012E3E  0E00               	movlw	0
  9956  012E40  6EDE               	movwf	postinc2,c
  9957  012E42  0E00               	movlw	0
  9958  012E44  6EDD               	movwf	postdec2,c
  9959  012E46                     l10277:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;My_header\My_RTCC.h: 370: }
  9963                           ;My_header\My_RTCC.h: 371: if (edit_flag.flags) {
  9964  012E46  0100               	movlb	0	; () banked
  9965  012E48  51A8               	movf	_edit_flag& (0+255),w,b
  9966  012E4A  B4D8               	btfsc	status,2,c
  9967  012E4C  0012               	return	
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;My_header\My_RTCC.h: 372: if (mode->flag.press) {
  9971  012E4E  0100               	movlb	0	; () banked
  9972  012E50  EE20 F002          	lfsr	2,2
  9973  012E54  51F8               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  9974  012E56  26D9               	addwf	fsr2l,f,c
  9975  012E58  51F9               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  9976  012E5A  22DA               	addwfc	fsr2h,f,c
  9977  012E5C  0100               	movlb	0	; () banked
  9978  012E5E  A0DF               	btfss	indf2,0,c
  9979  012E60  D00B               	goto	l10285
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;My_header\My_RTCC.h: 373: mode->flag.press = 0;
  9983  012E62  0100               	movlb	0	; () banked
  9984  012E64  EE20 F002          	lfsr	2,2
  9985  012E68  51F8               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  9986  012E6A  26D9               	addwf	fsr2l,f,c
  9987  012E6C  51F9               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  9988  012E6E  22DA               	addwfc	fsr2h,f,c
  9989  012E70  0100               	movlb	0	; () banked
  9990  012E72  90DF               	bcf	indf2,0,c
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;My_header\My_RTCC.h: 374: RTCC_adjust_time_cursor();
  9994  012E74  EC76  F0AA         	call	_RTCC_adjust_time_cursor	;wreg free
  9995  012E78                     l10285:
  9996                           
  9997                           ;My_header\My_RTCC.h: 375: }
  9998                           ;My_header\My_RTCC.h: 376: if (cnt_inc->flag.press) {
  9999  012E78  0100               	movlb	0	; () banked
 10000  012E7A  EE20 F002          	lfsr	2,2
 10001  012E7E  51FA               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 10002  012E80  26D9               	addwf	fsr2l,f,c
 10003  012E82  51FB               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 10004  012E84  22DA               	addwfc	fsr2h,f,c
 10005  012E86  0100               	movlb	0	; () banked
 10006  012E88  A0DF               	btfss	indf2,0,c
 10007  012E8A  D017               	goto	l10291
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;My_header\My_RTCC.h: 377: cnt_inc->flag.press = 0;
 10011  012E8C  0100               	movlb	0	; () banked
 10012  012E8E  EE20 F002          	lfsr	2,2
 10013  012E92  51FA               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 10014  012E94  26D9               	addwf	fsr2l,f,c
 10015  012E96  51FB               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 10016  012E98  22DA               	addwfc	fsr2h,f,c
 10017  012E9A  0100               	movlb	0	; () banked
 10018  012E9C  90DF               	bcf	indf2,0,c
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;My_header\My_RTCC.h: 378: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
 10022  012E9E  0EAE               	movlw	low _caltime_now
 10023  012EA0  0100               	movlb	0	; () banked
 10024  012EA2  6FEE               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
 10025  012EA4  0E00               	movlw	high _caltime_now
 10026  012EA6  0100               	movlb	0	; () banked
 10027  012EA8  6FEF               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
 10028  012EAA  0EB5               	movlw	low _epoch_now
 10029  012EAC  0100               	movlb	0	; () banked
 10030  012EAE  6FF0               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
 10031  012EB0  0E00               	movlw	high _epoch_now
 10032  012EB2  0100               	movlb	0	; () banked
 10033  012EB4  6FF1               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
 10034  012EB6  EC9B  F08E         	call	_RTCC_adjust_time_inc	;wreg free
 10035  012EBA                     l10291:
 10036                           
 10037                           ;My_header\My_RTCC.h: 379: }
 10038                           ;My_header\My_RTCC.h: 380: if (cnt_dec->flag.press) {
 10039  012EBA  0100               	movlb	0	; () banked
 10040  012EBC  EE20 F002          	lfsr	2,2
 10041  012EC0  51FC               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 10042  012EC2  26D9               	addwf	fsr2l,f,c
 10043  012EC4  51FD               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 10044  012EC6  22DA               	addwfc	fsr2h,f,c
 10045  012EC8  0100               	movlb	0	; () banked
 10046  012ECA  A0DF               	btfss	indf2,0,c
 10047  012ECC  0012               	return	
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;My_header\My_RTCC.h: 381: cnt_dec->flag.press = 0;
 10051  012ECE  0100               	movlb	0	; () banked
 10052  012ED0  EE20 F002          	lfsr	2,2
 10053  012ED4  51FC               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 10054  012ED6  26D9               	addwf	fsr2l,f,c
 10055  012ED8  51FD               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 10056  012EDA  22DA               	addwfc	fsr2h,f,c
 10057  012EDC  0100               	movlb	0	; () banked
 10058  012EDE  90DF               	bcf	indf2,0,c
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;My_header\My_RTCC.h: 382: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
 10062  012EE0  0EAE               	movlw	low _caltime_now
 10063  012EE2  0100               	movlb	0	; () banked
 10064  012EE4  6FEE               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
 10065  012EE6  0E00               	movlw	high _caltime_now
 10066  012EE8  0100               	movlb	0	; () banked
 10067  012EEA  6FEF               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
 10068  012EEC  0EB5               	movlw	low _epoch_now
 10069  012EEE  0100               	movlb	0	; () banked
 10070  012EF0  6FF0               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
 10071  012EF2  0E00               	movlw	high _epoch_now
 10072  012EF4  0100               	movlb	0	; () banked
 10073  012EF6  6FF1               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
 10074  012EF8  ECCD  F08F         	call	_RTCC_adjust_time_dec	;wreg free
 10075  012EFC  0012               	return	
 10076  012EFE                     __end_of_RTCC_adjust_time_button:
 10077                           	opt stack 0
 10078                           tblptru	equ	0xFF8
 10079                           tblptrh	equ	0xFF7
 10080                           tblptrl	equ	0xFF6
 10081                           tablat	equ	0xFF5
 10082                           prodh	equ	0xFF4
 10083                           prodl	equ	0xFF3
 10084                           intcon	equ	0xFF2
 10085                           postinc0	equ	0xFEE
 10086                           wreg	equ	0xFE8
 10087                           indf1	equ	0xFE7
 10088                           postinc1	equ	0xFE6
 10089                           postdec1	equ	0xFE5
 10090                           fsr1h	equ	0xFE2
 10091                           fsr1l	equ	0xFE1
 10092                           indf2	equ	0xFDF
 10093                           postinc2	equ	0xFDE
 10094                           postdec2	equ	0xFDD
 10095                           fsr2h	equ	0xFDA
 10096                           fsr2l	equ	0xFD9
 10097                           status	equ	0xFD8
 10098                           
 10099 ;; *************** function _RTCC_adjust_time_toggle *****************
 10100 ;; Defined at:
 10101 ;;		line 303 in file "../My_header\My_RTCC.h"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;		None
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;		None
 10106 ;; Return value:  Size  Location     Type
 10107 ;;		None               void
 10108 ;; Registers used:
 10109 ;;		wreg, status,2
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10119 ;;Total ram usage:        0 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:   11
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_RTCC_adjust_time_button
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text32
 10130  015FA6                     __ptext32:
 10131                           	opt stack 0
 10132  015FA6                     _RTCC_adjust_time_toggle:
 10133                           	opt stack 17
 10134                           
 10135                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
 10136                           
 10137                           ;incstack = 0
 10138  015FA6  0100               	movlb	0	; () banked
 10139  015FA8  51A8               	movf	_edit_flag& (0+255),w,b
 10140  015FAA  B4D8               	btfsc	status,2,c
 10141  015FAC  D004               	goto	l503
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
 10145  015FAE  0E00               	movlw	0
 10146  015FB0  0100               	movlb	0	; () banked
 10147  015FB2  6FA8               	movwf	_edit_flag& (0+255),b
 10148                           
 10149                           ;My_header\My_RTCC.h: 306: } else {
 10150  015FB4  0012               	return	
 10151  015FB6                     l503:
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
 10155  015FB6  0100               	movlb	0	; () banked
 10156  015FB8  81A8               	bsf	_edit_flag& (0+255),0,b
 10157  015FBA  0012               	return	
 10158  015FBC                     __end_of_RTCC_adjust_time_toggle:
 10159                           	opt stack 0
 10160                           tblptru	equ	0xFF8
 10161                           tblptrh	equ	0xFF7
 10162                           tblptrl	equ	0xFF6
 10163                           tablat	equ	0xFF5
 10164                           prodh	equ	0xFF4
 10165                           prodl	equ	0xFF3
 10166                           intcon	equ	0xFF2
 10167                           postinc0	equ	0xFEE
 10168                           wreg	equ	0xFE8
 10169                           indf1	equ	0xFE7
 10170                           postinc1	equ	0xFE6
 10171                           postdec1	equ	0xFE5
 10172                           fsr1h	equ	0xFE2
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           postinc2	equ	0xFDE
 10176                           postdec2	equ	0xFDD
 10177                           fsr2h	equ	0xFDA
 10178                           fsr2l	equ	0xFD9
 10179                           status	equ	0xFD8
 10180                           
 10181 ;; *************** function _RTCC_adjust_time_inc *****************
 10182 ;; Defined at:
 10183 ;;		line 321 in file "../My_header\My_RTCC.h"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  ct              2   53[BANK0 ] PTR struct .
 10186 ;;		 -> caltime_now(7), 
 10187 ;;  ep              2   55[BANK0 ] PTR unsigned long 
 10188 ;;		 -> epoch_now(4), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  i               1   61[BANK0 ] unsigned char 
 10191 ;;  i               1   62[BANK0 ] unsigned char 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;		None               void
 10194 ;; Registers used:
 10195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10201 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10204 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10205 ;;Total ram usage:       10 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; Hardware stack levels required when called:   15
 10208 ;; This function calls:
 10209 ;;		_RTCC_from_RTCC
 10210 ;;		_RTCC_from_epoch
 10211 ;;		___lmul
 10212 ;;		_month_length
 10213 ;; This function is called by:
 10214 ;;		_RTCC_adjust_time_button
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text33
 10219  011D36                     __ptext33:
 10220                           	opt stack 0
 10221  011D36                     _RTCC_adjust_time_inc:
 10222                           	opt stack 13
 10223                           
 10224                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;incstack = 0
 10228  011D36  C0EE  F0E1         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
 10229  011D3A  C0EF  F0E2         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
 10230  011D3E  C0F0  F0E3         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
 10231  011D42  C0F1  F0E4         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
 10232  011D46  EC5E  F0AF         	call	_RTCC_from_RTCC	;wreg free
 10233                           
 10234                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
 10235  011D4A  0100               	movlb	0	; () banked
 10236  011D4C  A1A8               	btfss	_edit_flag& (0+255),0,b
 10237  011D4E  D009               	goto	l9571
 10238                           
 10239                           ; BSR set to: 0
 10240  011D50  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10241  011D54  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10242  011D58  2ADE               	incf	postinc2,f,c
 10243  011D5A  0E00               	movlw	0
 10244  011D5C  22DE               	addwfc	postinc2,f,c
 10245  011D5E  22DE               	addwfc	postinc2,f,c
 10246  011D60  22DE               	addwfc	postinc2,f,c
 10247  011D62                     l9571:
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
 10251  011D62  0100               	movlb	0	; () banked
 10252  011D64  A3A8               	btfss	_edit_flag& (0+255),1,b
 10253  011D66  D00A               	goto	l9575
 10254                           
 10255                           ; BSR set to: 0
 10256  011D68  0E3C               	movlw	60
 10257  011D6A  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10258  011D6E  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10259  011D72  26DE               	addwf	postinc2,f,c
 10260  011D74  0E00               	movlw	0
 10261  011D76  22DE               	addwfc	postinc2,f,c
 10262  011D78  22DE               	addwfc	postinc2,f,c
 10263  011D7A  22DE               	addwfc	postinc2,f,c
 10264  011D7C                     l9575:
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
 10268  011D7C  0100               	movlb	0	; () banked
 10269  011D7E  A5A8               	btfss	_edit_flag& (0+255),2,b
 10270  011D80  D00C               	goto	l9579
 10271                           
 10272                           ; BSR set to: 0
 10273  011D82  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10274  011D86  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10275  011D8A  0E10               	movlw	16
 10276  011D8C  26DE               	addwf	postinc2,f,c
 10277  011D8E  0E0E               	movlw	14
 10278  011D90  22DE               	addwfc	postinc2,f,c
 10279  011D92  0E00               	movlw	0
 10280  011D94  22DE               	addwfc	postinc2,f,c
 10281  011D96  0E00               	movlw	0
 10282  011D98  22DE               	addwfc	postinc2,f,c
 10283  011D9A                     l9579:
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
 10287  011D9A  0100               	movlb	0	; () banked
 10288  011D9C  A7A8               	btfss	_edit_flag& (0+255),3,b
 10289  011D9E  D00C               	goto	l9583
 10290                           
 10291                           ; BSR set to: 0
 10292  011DA0  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10293  011DA4  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10294  011DA8  0E80               	movlw	128
 10295  011DAA  26DE               	addwf	postinc2,f,c
 10296  011DAC  0E51               	movlw	81
 10297  011DAE  22DE               	addwfc	postinc2,f,c
 10298  011DB0  0E01               	movlw	1
 10299  011DB2  22DE               	addwfc	postinc2,f,c
 10300  011DB4  0E00               	movlw	0
 10301  011DB6  22DE               	addwfc	postinc2,f,c
 10302  011DB8                     l9583:
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
 10306  011DB8  0100               	movlb	0	; () banked
 10307  011DBA  A9A8               	btfss	_edit_flag& (0+255),4,b
 10308  011DBC  D038               	goto	l9587
 10309                           
 10310                           ; BSR set to: 0
 10311  011DBE  0100               	movlb	0	; () banked
 10312  011DC0  EE20 F005          	lfsr	2,5
 10313  011DC4  51EE               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10314  011DC6  26D9               	addwf	fsr2l,f,c
 10315  011DC8  51EF               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10316  011DCA  22DA               	addwfc	fsr2h,f,c
 10317  011DCC  50DF               	movf	indf2,w,c
 10318  011DCE  0100               	movlb	0	; () banked
 10319  011DD0  6FBF               	movwf	month_length@month& (0+255),b
 10320  011DD2  0100               	movlb	0	; () banked
 10321  011DD4  EE20 F006          	lfsr	2,6
 10322  011DD8  51EE               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10323  011DDA  26D9               	addwf	fsr2l,f,c
 10324  011DDC  51EF               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10325  011DDE  22DA               	addwfc	fsr2h,f,c
 10326  011DE0  50DF               	movf	indf2,w,c
 10327  011DE2  EC71  F09C         	call	_month_length
 10328  011DE6  0100               	movlb	0	; () banked
 10329  011DE8  6FF2               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 10330  011DEA  0100               	movlb	0	; () banked
 10331  011DEC  51F2               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
 10332  011DEE  0100               	movlb	0	; () banked
 10333  011DF0  6FC6               	movwf	___lmul@multiplier& (0+255),b
 10334  011DF2  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 10335  011DF4  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 10336  011DF6  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 10337  011DF8  0E80               	movlw	128
 10338  011DFA  0100               	movlb	0	; () banked
 10339  011DFC  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 10340  011DFE  0E51               	movlw	81
 10341  011E00  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10342  011E02  0E01               	movlw	1
 10343  011E04  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10344  011E06  0E00               	movlw	0
 10345  011E08  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10346  011E0A  EC40  F0A9         	call	___lmul	;wreg free
 10347  011E0E  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10348  011E12  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10349  011E16  0100               	movlb	0	; () banked
 10350  011E18  51C6               	movf	?___lmul& (0+255),w,b
 10351  011E1A  26DE               	addwf	postinc2,f,c
 10352  011E1C  0100               	movlb	0	; () banked
 10353  011E1E  51C7               	movf	(?___lmul+1)& (0+255),w,b
 10354  011E20  22DE               	addwfc	postinc2,f,c
 10355  011E22  0100               	movlb	0	; () banked
 10356  011E24  51C8               	movf	(?___lmul+2)& (0+255),w,b
 10357  011E26  22DE               	addwfc	postinc2,f,c
 10358  011E28  0100               	movlb	0	; () banked
 10359  011E2A  51C9               	movf	(?___lmul+3)& (0+255),w,b
 10360  011E2C  22DE               	addwfc	postinc2,f,c
 10361  011E2E                     l9587:
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
 10365  011E2E  0100               	movlb	0	; () banked
 10366  011E30  ABA8               	btfss	_edit_flag& (0+255),5,b
 10367  011E32  D088               	goto	l9609
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
 10371  011E34  0100               	movlb	0	; () banked
 10372  011E36  EE20 F005          	lfsr	2,5
 10373  011E3A  51EE               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10374  011E3C  26D9               	addwf	fsr2l,f,c
 10375  011E3E  51EF               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10376  011E40  22DA               	addwfc	fsr2h,f,c
 10377  011E42  50DF               	movf	indf2,w,c
 10378  011E44  0100               	movlb	0	; () banked
 10379  011E46  6FF7               	movwf	RTCC_adjust_time_inc@i& (0+255),b
 10380  011E48                     l9591:
 10381                           
 10382                           ; BSR set to: 0
 10383  011E48  0E0C               	movlw	12
 10384  011E4A  0100               	movlb	0	; () banked
 10385  011E4C  65F7               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
 10386  011E4E  D001               	goto	l9595
 10387  011E50  D033               	goto	l9601
 10388  011E52                     l9595:
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
 10392  011E52  C0F7  F0BF         	movff	RTCC_adjust_time_inc@i,month_length@month
 10393  011E56  0100               	movlb	0	; () banked
 10394  011E58  EE20 F006          	lfsr	2,6
 10395  011E5C  51EE               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10396  011E5E  26D9               	addwf	fsr2l,f,c
 10397  011E60  51EF               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10398  011E62  22DA               	addwfc	fsr2h,f,c
 10399  011E64  50DF               	movf	indf2,w,c
 10400  011E66  EC71  F09C         	call	_month_length
 10401  011E6A  0100               	movlb	0	; () banked
 10402  011E6C  6FF2               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 10403  011E6E  0100               	movlb	0	; () banked
 10404  011E70  51F2               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
 10405  011E72  0100               	movlb	0	; () banked
 10406  011E74  6FC6               	movwf	___lmul@multiplier& (0+255),b
 10407  011E76  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 10408  011E78  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 10409  011E7A  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 10410  011E7C  0E80               	movlw	128
 10411  011E7E  0100               	movlb	0	; () banked
 10412  011E80  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 10413  011E82  0E51               	movlw	81
 10414  011E84  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10415  011E86  0E01               	movlw	1
 10416  011E88  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10417  011E8A  0E00               	movlw	0
 10418  011E8C  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10419  011E8E  EC40  F0A9         	call	___lmul	;wreg free
 10420  011E92  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10421  011E96  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10422  011E9A  0100               	movlb	0	; () banked
 10423  011E9C  51C6               	movf	?___lmul& (0+255),w,b
 10424  011E9E  26DE               	addwf	postinc2,f,c
 10425  011EA0  0100               	movlb	0	; () banked
 10426  011EA2  51C7               	movf	(?___lmul+1)& (0+255),w,b
 10427  011EA4  22DE               	addwfc	postinc2,f,c
 10428  011EA6  0100               	movlb	0	; () banked
 10429  011EA8  51C8               	movf	(?___lmul+2)& (0+255),w,b
 10430  011EAA  22DE               	addwfc	postinc2,f,c
 10431  011EAC  0100               	movlb	0	; () banked
 10432  011EAE  51C9               	movf	(?___lmul+3)& (0+255),w,b
 10433  011EB0  22DE               	addwfc	postinc2,f,c
 10434                           
 10435                           ; BSR set to: 0
 10436  011EB2  0100               	movlb	0	; () banked
 10437  011EB4  2BF7               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
 10438  011EB6  D7C8               	goto	l9591
 10439  011EB8                     l9601:
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;My_header\My_RTCC.h: 331: }
 10443                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
 10444  011EB8  0E01               	movlw	1
 10445  011EBA  0100               	movlb	0	; () banked
 10446  011EBC  6FF6               	movwf	RTCC_adjust_time_inc@i_2099& (0+255),b
 10447  011EBE  D036               	goto	l9607
 10448  011EC0                     l9603:
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
 10452  011EC0  C0F6  F0BF         	movff	RTCC_adjust_time_inc@i_2099,month_length@month
 10453  011EC4  0100               	movlb	0	; () banked
 10454  011EC6  EE20 F006          	lfsr	2,6
 10455  011ECA  51EE               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10456  011ECC  26D9               	addwf	fsr2l,f,c
 10457  011ECE  51EF               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10458  011ED0  22DA               	addwfc	fsr2h,f,c
 10459  011ED2  50DF               	movf	indf2,w,c
 10460  011ED4  0100               	movlb	0	; () banked
 10461  011ED6  6FF2               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 10462  011ED8  0100               	movlb	0	; () banked
 10463  011EDA  29F2               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
 10464  011EDC  EC71  F09C         	call	_month_length
 10465  011EE0  0100               	movlb	0	; () banked
 10466  011EE2  6FF3               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
 10467  011EE4  0100               	movlb	0	; () banked
 10468  011EE6  51F3               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
 10469  011EE8  0100               	movlb	0	; () banked
 10470  011EEA  6FC6               	movwf	___lmul@multiplier& (0+255),b
 10471  011EEC  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 10472  011EEE  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 10473  011EF0  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 10474  011EF2  0E80               	movlw	128
 10475  011EF4  0100               	movlb	0	; () banked
 10476  011EF6  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 10477  011EF8  0E51               	movlw	81
 10478  011EFA  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10479  011EFC  0E01               	movlw	1
 10480  011EFE  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10481  011F00  0E00               	movlw	0
 10482  011F02  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10483  011F04  EC40  F0A9         	call	___lmul	;wreg free
 10484  011F08  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10485  011F0C  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10486  011F10  0100               	movlb	0	; () banked
 10487  011F12  51C6               	movf	?___lmul& (0+255),w,b
 10488  011F14  26DE               	addwf	postinc2,f,c
 10489  011F16  0100               	movlb	0	; () banked
 10490  011F18  51C7               	movf	(?___lmul+1)& (0+255),w,b
 10491  011F1A  22DE               	addwfc	postinc2,f,c
 10492  011F1C  0100               	movlb	0	; () banked
 10493  011F1E  51C8               	movf	(?___lmul+2)& (0+255),w,b
 10494  011F20  22DE               	addwfc	postinc2,f,c
 10495  011F22  0100               	movlb	0	; () banked
 10496  011F24  51C9               	movf	(?___lmul+3)& (0+255),w,b
 10497  011F26  22DE               	addwfc	postinc2,f,c
 10498                           
 10499                           ; BSR set to: 0
 10500  011F28  0100               	movlb	0	; () banked
 10501  011F2A  2BF6               	incf	RTCC_adjust_time_inc@i_2099& (0+255),f,b
 10502  011F2C                     l9607:
 10503                           
 10504                           ; BSR set to: 0
 10505  011F2C  0100               	movlb	0	; () banked
 10506  011F2E  EE20 F005          	lfsr	2,5
 10507  011F32  51EE               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 10508  011F34  26D9               	addwf	fsr2l,f,c
 10509  011F36  51EF               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 10510  011F38  22DA               	addwfc	fsr2h,f,c
 10511  011F3A  50DE               	movf	postinc2,w,c
 10512  011F3C  0100               	movlb	0	; () banked
 10513  011F3E  5DF6               	subwf	RTCC_adjust_time_inc@i_2099& (0+255),w,b
 10514  011F40  A0D8               	btfss	status,0,c
 10515  011F42  D7BE               	goto	l9603
 10516  011F44                     l9609:
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;My_header\My_RTCC.h: 334: }
 10520                           ;My_header\My_RTCC.h: 335: }
 10521                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
 10522  011F44  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10523  011F48  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10524  011F4C  0E80               	movlw	128
 10525  011F4E  5CDE               	subwf	postinc2,w,c
 10526  011F50  0E13               	movlw	19
 10527  011F52  58DE               	subwfb	postinc2,w,c
 10528  011F54  0E19               	movlw	25
 10529  011F56  58DE               	subwfb	postinc2,w,c
 10530  011F58  0EBC               	movlw	188
 10531  011F5A  58DE               	subwfb	postinc2,w,c
 10532  011F5C  A0D8               	btfss	status,0,c
 10533  011F5E  D00C               	goto	l9613
 10534                           
 10535                           ; BSR set to: 0
 10536  011F60  C0F0  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 10537  011F64  C0F1  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 10538  011F68  0E80               	movlw	128
 10539  011F6A  5EDE               	subwf	postinc2,f,c
 10540  011F6C  0E13               	movlw	19
 10541  011F6E  5ADE               	subwfb	postinc2,f,c
 10542  011F70  0E19               	movlw	25
 10543  011F72  5ADE               	subwfb	postinc2,f,c
 10544  011F74  0EBC               	movlw	188
 10545  011F76  5ADE               	subwfb	postinc2,f,c
 10546  011F78                     l9613:
 10547                           
 10548                           ; BSR set to: 0
 10549                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
 10550  011F78  0EAE               	movlw	low _caltime_now
 10551  011F7A  0100               	movlb	0	; () banked
 10552  011F7C  6FEA               	movwf	RTCC_from_epoch@ct& (0+255),b
 10553  011F7E  0E00               	movlw	high _caltime_now
 10554  011F80  0100               	movlb	0	; () banked
 10555  011F82  6FEB               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
 10556  011F84  0EB5               	movlw	low _epoch_now
 10557  011F86  0100               	movlb	0	; () banked
 10558  011F88  6FEC               	movwf	RTCC_from_epoch@ep& (0+255),b
 10559  011F8A  0E00               	movlw	high _epoch_now
 10560  011F8C  0100               	movlb	0	; () banked
 10561  011F8E  6FED               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
 10562  011F90  EC4D  F0AF         	call	_RTCC_from_epoch	;wreg free
 10563                           
 10564                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
 10565  011F94  0E01               	movlw	1
 10566  011F96  6E4F               	movwf	_time_change_flag,c
 10567  011F98  0012               	return		;funcret
 10568  011F9A                     __end_of_RTCC_adjust_time_inc:
 10569                           	opt stack 0
 10570                           tblptru	equ	0xFF8
 10571                           tblptrh	equ	0xFF7
 10572                           tblptrl	equ	0xFF6
 10573                           tablat	equ	0xFF5
 10574                           prodh	equ	0xFF4
 10575                           prodl	equ	0xFF3
 10576                           intcon	equ	0xFF2
 10577                           postinc0	equ	0xFEE
 10578                           wreg	equ	0xFE8
 10579                           indf1	equ	0xFE7
 10580                           postinc1	equ	0xFE6
 10581                           postdec1	equ	0xFE5
 10582                           fsr1h	equ	0xFE2
 10583                           fsr1l	equ	0xFE1
 10584                           indf2	equ	0xFDF
 10585                           postinc2	equ	0xFDE
 10586                           postdec2	equ	0xFDD
 10587                           fsr2h	equ	0xFDA
 10588                           fsr2l	equ	0xFD9
 10589                           status	equ	0xFD8
 10590                           
 10591 ;; *************** function _RTCC_adjust_time_dec *****************
 10592 ;; Defined at:
 10593 ;;		line 342 in file "../My_header\My_RTCC.h"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  ct              2   53[BANK0 ] PTR struct .
 10596 ;;		 -> caltime_now(7), 
 10597 ;;  ep              2   55[BANK0 ] PTR unsigned long 
 10598 ;;		 -> epoch_now(4), 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  i               1   61[BANK0 ] unsigned char 
 10601 ;;  i               1   62[BANK0 ] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;		None               void
 10604 ;; Registers used:
 10605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10612 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10614 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10615 ;;Total ram usage:       10 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:   15
 10618 ;; This function calls:
 10619 ;;		_RTCC_from_RTCC
 10620 ;;		_RTCC_from_epoch
 10621 ;;		___lmul
 10622 ;;		_month_length
 10623 ;; This function is called by:
 10624 ;;		_RTCC_adjust_time_button
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text34
 10629  011F9A                     __ptext34:
 10630                           	opt stack 0
 10631  011F9A                     _RTCC_adjust_time_dec:
 10632                           	opt stack 13
 10633                           
 10634                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
 10635                           
 10636                           ;incstack = 0
 10637  011F9A  C0EE  F0E1         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
 10638  011F9E  C0EF  F0E2         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
 10639  011FA2  C0F0  F0E3         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
 10640  011FA6  C0F1  F0E4         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
 10641  011FAA  EC5E  F0AF         	call	_RTCC_from_RTCC	;wreg free
 10642                           
 10643                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
 10644  011FAE  0100               	movlb	0	; () banked
 10645  011FB0  A1A8               	btfss	_edit_flag& (0+255),0,b
 10646  011FB2  D009               	goto	l9623
 10647                           
 10648                           ; BSR set to: 0
 10649  011FB4  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10650  011FB8  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10651  011FBC  06DE               	decf	postinc2,f,c
 10652  011FBE  0E00               	movlw	0
 10653  011FC0  5ADE               	subwfb	postinc2,f,c
 10654  011FC2  5ADE               	subwfb	postinc2,f,c
 10655  011FC4  5ADE               	subwfb	postinc2,f,c
 10656  011FC6                     l9623:
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
 10660  011FC6  0100               	movlb	0	; () banked
 10661  011FC8  A3A8               	btfss	_edit_flag& (0+255),1,b
 10662  011FCA  D00A               	goto	l9627
 10663                           
 10664                           ; BSR set to: 0
 10665  011FCC  0E3C               	movlw	60
 10666  011FCE  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10667  011FD2  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10668  011FD6  5EDE               	subwf	postinc2,f,c
 10669  011FD8  0E00               	movlw	0
 10670  011FDA  5ADE               	subwfb	postinc2,f,c
 10671  011FDC  5ADE               	subwfb	postinc2,f,c
 10672  011FDE  5ADE               	subwfb	postinc2,f,c
 10673  011FE0                     l9627:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
 10677  011FE0  0100               	movlb	0	; () banked
 10678  011FE2  A5A8               	btfss	_edit_flag& (0+255),2,b
 10679  011FE4  D00C               	goto	l9631
 10680                           
 10681                           ; BSR set to: 0
 10682  011FE6  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10683  011FEA  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10684  011FEE  0E10               	movlw	16
 10685  011FF0  5EDE               	subwf	postinc2,f,c
 10686  011FF2  0E0E               	movlw	14
 10687  011FF4  5ADE               	subwfb	postinc2,f,c
 10688  011FF6  0E00               	movlw	0
 10689  011FF8  5ADE               	subwfb	postinc2,f,c
 10690  011FFA  0E00               	movlw	0
 10691  011FFC  5ADE               	subwfb	postinc2,f,c
 10692  011FFE                     l9631:
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
 10696  011FFE  0100               	movlb	0	; () banked
 10697  012000  A7A8               	btfss	_edit_flag& (0+255),3,b
 10698  012002  D00C               	goto	l9635
 10699                           
 10700                           ; BSR set to: 0
 10701  012004  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10702  012008  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10703  01200C  0E80               	movlw	128
 10704  01200E  5EDE               	subwf	postinc2,f,c
 10705  012010  0E51               	movlw	81
 10706  012012  5ADE               	subwfb	postinc2,f,c
 10707  012014  0E01               	movlw	1
 10708  012016  5ADE               	subwfb	postinc2,f,c
 10709  012018  0E00               	movlw	0
 10710  01201A  5ADE               	subwfb	postinc2,f,c
 10711  01201C                     l9635:
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
 10715  01201C  0100               	movlb	0	; () banked
 10716  01201E  A9A8               	btfss	_edit_flag& (0+255),4,b
 10717  012020  D038               	goto	l9639
 10718                           
 10719                           ; BSR set to: 0
 10720  012022  0100               	movlb	0	; () banked
 10721  012024  EE20 F005          	lfsr	2,5
 10722  012028  51EE               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 10723  01202A  26D9               	addwf	fsr2l,f,c
 10724  01202C  51EF               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 10725  01202E  22DA               	addwfc	fsr2h,f,c
 10726  012030  50DF               	movf	indf2,w,c
 10727  012032  0100               	movlb	0	; () banked
 10728  012034  6FBF               	movwf	month_length@month& (0+255),b
 10729  012036  0100               	movlb	0	; () banked
 10730  012038  EE20 F006          	lfsr	2,6
 10731  01203C  51EE               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 10732  01203E  26D9               	addwf	fsr2l,f,c
 10733  012040  51EF               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 10734  012042  22DA               	addwfc	fsr2h,f,c
 10735  012044  50DF               	movf	indf2,w,c
 10736  012046  EC71  F09C         	call	_month_length
 10737  01204A  0100               	movlb	0	; () banked
 10738  01204C  6FF2               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 10739  01204E  0100               	movlb	0	; () banked
 10740  012050  51F2               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
 10741  012052  0100               	movlb	0	; () banked
 10742  012054  6FC6               	movwf	___lmul@multiplier& (0+255),b
 10743  012056  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 10744  012058  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 10745  01205A  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 10746  01205C  0E80               	movlw	128
 10747  01205E  0100               	movlb	0	; () banked
 10748  012060  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 10749  012062  0E51               	movlw	81
 10750  012064  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10751  012066  0E01               	movlw	1
 10752  012068  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10753  01206A  0E00               	movlw	0
 10754  01206C  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10755  01206E  EC40  F0A9         	call	___lmul	;wreg free
 10756  012072  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10757  012076  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10758  01207A  0100               	movlb	0	; () banked
 10759  01207C  51C6               	movf	?___lmul& (0+255),w,b
 10760  01207E  5EDE               	subwf	postinc2,f,c
 10761  012080  0100               	movlb	0	; () banked
 10762  012082  51C7               	movf	(?___lmul+1)& (0+255),w,b
 10763  012084  5ADE               	subwfb	postinc2,f,c
 10764  012086  0100               	movlb	0	; () banked
 10765  012088  51C8               	movf	(?___lmul+2)& (0+255),w,b
 10766  01208A  5ADE               	subwfb	postinc2,f,c
 10767  01208C  0100               	movlb	0	; () banked
 10768  01208E  51C9               	movf	(?___lmul+3)& (0+255),w,b
 10769  012090  5ADE               	subwfb	postinc2,f,c
 10770  012092                     l9639:
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
 10774  012092  0100               	movlb	0	; () banked
 10775  012094  ABA8               	btfss	_edit_flag& (0+255),5,b
 10776  012096  D088               	goto	l9661
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
 10780  012098  0100               	movlb	0	; () banked
 10781  01209A  EE20 F005          	lfsr	2,5
 10782  01209E  51EE               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 10783  0120A0  26D9               	addwf	fsr2l,f,c
 10784  0120A2  51EF               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 10785  0120A4  22DA               	addwfc	fsr2h,f,c
 10786  0120A6  50DF               	movf	indf2,w,c
 10787  0120A8  0100               	movlb	0	; () banked
 10788  0120AA  6FF7               	movwf	RTCC_adjust_time_dec@i& (0+255),b
 10789  0120AC                     l9643:
 10790                           
 10791                           ; BSR set to: 0
 10792  0120AC  0100               	movlb	0	; () banked
 10793  0120AE  51F7               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
 10794  0120B0  0100               	movlb	0	; () banked
 10795  0120B2  B4D8               	btfsc	status,2,c
 10796  0120B4  D033               	goto	l9653
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
 10800                           
 10801                           ; BSR set to: 0
 10802                           
 10803                           ; BSR set to: 0
 10804  0120B6  C0F7  F0BF         	movff	RTCC_adjust_time_dec@i,month_length@month
 10805  0120BA  0100               	movlb	0	; () banked
 10806  0120BC  EE20 F006          	lfsr	2,6
 10807  0120C0  51EE               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 10808  0120C2  26D9               	addwf	fsr2l,f,c
 10809  0120C4  51EF               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 10810  0120C6  22DA               	addwfc	fsr2h,f,c
 10811  0120C8  50DF               	movf	indf2,w,c
 10812  0120CA  EC71  F09C         	call	_month_length
 10813  0120CE  0100               	movlb	0	; () banked
 10814  0120D0  6FF2               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 10815  0120D2  0100               	movlb	0	; () banked
 10816  0120D4  51F2               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
 10817  0120D6  0100               	movlb	0	; () banked
 10818  0120D8  6FC6               	movwf	___lmul@multiplier& (0+255),b
 10819  0120DA  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 10820  0120DC  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 10821  0120DE  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 10822  0120E0  0E80               	movlw	128
 10823  0120E2  0100               	movlb	0	; () banked
 10824  0120E4  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 10825  0120E6  0E51               	movlw	81
 10826  0120E8  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10827  0120EA  0E01               	movlw	1
 10828  0120EC  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10829  0120EE  0E00               	movlw	0
 10830  0120F0  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10831  0120F2  EC40  F0A9         	call	___lmul	;wreg free
 10832  0120F6  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10833  0120FA  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10834  0120FE  0100               	movlb	0	; () banked
 10835  012100  51C6               	movf	?___lmul& (0+255),w,b
 10836  012102  5EDE               	subwf	postinc2,f,c
 10837  012104  0100               	movlb	0	; () banked
 10838  012106  51C7               	movf	(?___lmul+1)& (0+255),w,b
 10839  012108  5ADE               	subwfb	postinc2,f,c
 10840  01210A  0100               	movlb	0	; () banked
 10841  01210C  51C8               	movf	(?___lmul+2)& (0+255),w,b
 10842  01210E  5ADE               	subwfb	postinc2,f,c
 10843  012110  0100               	movlb	0	; () banked
 10844  012112  51C9               	movf	(?___lmul+3)& (0+255),w,b
 10845  012114  5ADE               	subwfb	postinc2,f,c
 10846                           
 10847                           ; BSR set to: 0
 10848  012116  0100               	movlb	0	; () banked
 10849  012118  07F7               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
 10850  01211A  D7C8               	goto	l9643
 10851  01211C                     l9653:
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;My_header\My_RTCC.h: 352: }
 10855                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
 10856  01211C  0E0C               	movlw	12
 10857  01211E  0100               	movlb	0	; () banked
 10858  012120  6FF6               	movwf	RTCC_adjust_time_dec@i_2112& (0+255),b
 10859  012122  D036               	goto	l9659
 10860  012124                     l9655:
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
 10864  012124  C0F6  F0BF         	movff	RTCC_adjust_time_dec@i_2112,month_length@month
 10865  012128  0100               	movlb	0	; () banked
 10866  01212A  EE20 F006          	lfsr	2,6
 10867  01212E  51EE               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 10868  012130  26D9               	addwf	fsr2l,f,c
 10869  012132  51EF               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 10870  012134  22DA               	addwfc	fsr2h,f,c
 10871  012136  50DF               	movf	indf2,w,c
 10872  012138  0100               	movlb	0	; () banked
 10873  01213A  6FF2               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 10874  01213C  0100               	movlb	0	; () banked
 10875  01213E  05F2               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
 10876  012140  EC71  F09C         	call	_month_length
 10877  012144  0100               	movlb	0	; () banked
 10878  012146  6FF3               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
 10879  012148  0100               	movlb	0	; () banked
 10880  01214A  51F3               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
 10881  01214C  0100               	movlb	0	; () banked
 10882  01214E  6FC6               	movwf	___lmul@multiplier& (0+255),b
 10883  012150  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 10884  012152  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 10885  012154  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 10886  012156  0E80               	movlw	128
 10887  012158  0100               	movlb	0	; () banked
 10888  01215A  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 10889  01215C  0E51               	movlw	81
 10890  01215E  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10891  012160  0E01               	movlw	1
 10892  012162  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10893  012164  0E00               	movlw	0
 10894  012166  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10895  012168  EC40  F0A9         	call	___lmul	;wreg free
 10896  01216C  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10897  012170  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10898  012174  0100               	movlb	0	; () banked
 10899  012176  51C6               	movf	?___lmul& (0+255),w,b
 10900  012178  5EDE               	subwf	postinc2,f,c
 10901  01217A  0100               	movlb	0	; () banked
 10902  01217C  51C7               	movf	(?___lmul+1)& (0+255),w,b
 10903  01217E  5ADE               	subwfb	postinc2,f,c
 10904  012180  0100               	movlb	0	; () banked
 10905  012182  51C8               	movf	(?___lmul+2)& (0+255),w,b
 10906  012184  5ADE               	subwfb	postinc2,f,c
 10907  012186  0100               	movlb	0	; () banked
 10908  012188  51C9               	movf	(?___lmul+3)& (0+255),w,b
 10909  01218A  5ADE               	subwfb	postinc2,f,c
 10910                           
 10911                           ; BSR set to: 0
 10912  01218C  0100               	movlb	0	; () banked
 10913  01218E  07F6               	decf	RTCC_adjust_time_dec@i_2112& (0+255),f,b
 10914  012190                     l9659:
 10915                           
 10916                           ; BSR set to: 0
 10917  012190  0100               	movlb	0	; () banked
 10918  012192  EE20 F005          	lfsr	2,5
 10919  012196  51EE               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 10920  012198  26D9               	addwf	fsr2l,f,c
 10921  01219A  51EF               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 10922  01219C  22DA               	addwfc	fsr2h,f,c
 10923  01219E  0100               	movlb	0	; () banked
 10924  0121A0  51F6               	movf	RTCC_adjust_time_dec@i_2112& (0+255),w,b
 10925  0121A2  5CDE               	subwf	postinc2,w,c
 10926  0121A4  A0D8               	btfss	status,0,c
 10927  0121A6  D7BE               	goto	l9655
 10928  0121A8                     l9661:
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;My_header\My_RTCC.h: 355: }
 10932                           ;My_header\My_RTCC.h: 356: }
 10933                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
 10934  0121A8  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10935  0121AC  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10936  0121B0  0E80               	movlw	128
 10937  0121B2  5CDE               	subwf	postinc2,w,c
 10938  0121B4  0E13               	movlw	19
 10939  0121B6  58DE               	subwfb	postinc2,w,c
 10940  0121B8  0E19               	movlw	25
 10941  0121BA  58DE               	subwfb	postinc2,w,c
 10942  0121BC  0EBC               	movlw	188
 10943  0121BE  58DE               	subwfb	postinc2,w,c
 10944  0121C0  A0D8               	btfss	status,0,c
 10945  0121C2  D00C               	goto	l9665
 10946                           
 10947                           ; BSR set to: 0
 10948  0121C4  C0F0  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 10949  0121C8  C0F1  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 10950  0121CC  0E80               	movlw	128
 10951  0121CE  26DE               	addwf	postinc2,f,c
 10952  0121D0  0E13               	movlw	19
 10953  0121D2  22DE               	addwfc	postinc2,f,c
 10954  0121D4  0E19               	movlw	25
 10955  0121D6  22DE               	addwfc	postinc2,f,c
 10956  0121D8  0EBC               	movlw	188
 10957  0121DA  22DE               	addwfc	postinc2,f,c
 10958  0121DC                     l9665:
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
 10962  0121DC  0EAE               	movlw	low _caltime_now
 10963  0121DE  0100               	movlb	0	; () banked
 10964  0121E0  6FEA               	movwf	RTCC_from_epoch@ct& (0+255),b
 10965  0121E2  0E00               	movlw	high _caltime_now
 10966  0121E4  0100               	movlb	0	; () banked
 10967  0121E6  6FEB               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
 10968  0121E8  0EB5               	movlw	low _epoch_now
 10969  0121EA  0100               	movlb	0	; () banked
 10970  0121EC  6FEC               	movwf	RTCC_from_epoch@ep& (0+255),b
 10971  0121EE  0E00               	movlw	high _epoch_now
 10972  0121F0  0100               	movlb	0	; () banked
 10973  0121F2  6FED               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
 10974  0121F4  EC4D  F0AF         	call	_RTCC_from_epoch	;wreg free
 10975                           
 10976                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
 10977  0121F8  0E01               	movlw	1
 10978  0121FA  6E4F               	movwf	_time_change_flag,c
 10979  0121FC  0012               	return		;funcret
 10980  0121FE                     __end_of_RTCC_adjust_time_dec:
 10981                           	opt stack 0
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           intcon	equ	0xFF2
 10989                           postinc0	equ	0xFEE
 10990                           wreg	equ	0xFE8
 10991                           indf1	equ	0xFE7
 10992                           postinc1	equ	0xFE6
 10993                           postdec1	equ	0xFE5
 10994                           fsr1h	equ	0xFE2
 10995                           fsr1l	equ	0xFE1
 10996                           indf2	equ	0xFDF
 10997                           postinc2	equ	0xFDE
 10998                           postdec2	equ	0xFDD
 10999                           fsr2h	equ	0xFDA
 11000                           fsr2l	equ	0xFD9
 11001                           status	equ	0xFD8
 11002                           
 11003 ;; *************** function _RTCC_from_epoch *****************
 11004 ;; Defined at:
 11005 ;;		line 242 in file "../My_header\My_RTCC.h"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;  ct              2   49[BANK0 ] PTR struct .
 11008 ;;		 -> caltime_now(7), 
 11009 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 11010 ;;		 -> epoch_now(4), 
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;		None
 11013 ;; Return value:  Size  Location     Type
 11014 ;;		None               void
 11015 ;; Registers used:
 11016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11022 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11025 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11026 ;;Total ram usage:        4 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:   14
 11029 ;; This function calls:
 11030 ;;		_caltime_to_RTCC
 11031 ;;		_epoch_to_caltime
 11032 ;; This function is called by:
 11033 ;;		_RTCC_adjust_time_inc
 11034 ;;		_RTCC_adjust_time_dec
 11035 ;;		_main
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text35
 11040  015E9A                     __ptext35:
 11041                           	opt stack 0
 11042  015E9A                     _RTCC_from_epoch:
 11043                           	opt stack 13
 11044                           
 11045                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
 11046                           
 11047                           ;incstack = 0
 11048  015E9A  C0EA  F0DA         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
 11049  015E9E  C0EB  F0DB         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
 11050  015EA2  C0EC  F0DC         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
 11051  015EA6  C0ED  F0DD         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
 11052  015EAA  ECFF  F090         	call	_epoch_to_caltime	;wreg free
 11053                           
 11054                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
 11055  015EAE  C0EA  F0C2         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
 11056  015EB2  C0EB  F0C3         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
 11057  015EB6  EC64  F09F         	call	_caltime_to_RTCC	;wreg free
 11058  015EBA  0012               	return		;funcret
 11059  015EBC                     __end_of_RTCC_from_epoch:
 11060                           	opt stack 0
 11061                           tblptru	equ	0xFF8
 11062                           tblptrh	equ	0xFF7
 11063                           tblptrl	equ	0xFF6
 11064                           tablat	equ	0xFF5
 11065                           prodh	equ	0xFF4
 11066                           prodl	equ	0xFF3
 11067                           intcon	equ	0xFF2
 11068                           postinc0	equ	0xFEE
 11069                           wreg	equ	0xFE8
 11070                           indf1	equ	0xFE7
 11071                           postinc1	equ	0xFE6
 11072                           postdec1	equ	0xFE5
 11073                           fsr1h	equ	0xFE2
 11074                           fsr1l	equ	0xFE1
 11075                           indf2	equ	0xFDF
 11076                           postinc2	equ	0xFDE
 11077                           postdec2	equ	0xFDD
 11078                           fsr2h	equ	0xFDA
 11079                           fsr2l	equ	0xFD9
 11080                           status	equ	0xFD8
 11081                           
 11082 ;; *************** function _epoch_to_caltime *****************
 11083 ;; Defined at:
 11084 ;;		line 157 in file "../My_header\My_RTCC.h"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  ct              2   33[BANK0 ] PTR struct .
 11087 ;;		 -> caltime_now(7), 
 11088 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 11089 ;;		 -> epoch_now(4), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  num             4   45[BANK0 ] unsigned long 
 11092 ;;  day             2   41[BANK0 ] unsigned int 
 11093 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 11094 ;;  month           1   44[BANK0 ] unsigned char 
 11095 ;;  year            1   43[BANK0 ] unsigned char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;		None               void
 11098 ;; Registers used:
 11099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;Total ram usage:       16 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:   13
 11112 ;; This function calls:
 11113 ;;		_get_quot_rem
 11114 ;;		_month_length
 11115 ;; This function is called by:
 11116 ;;		_RTCC_from_caltime
 11117 ;;		_RTCC_from_epoch
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text36
 11122  0121FE                     __ptext36:
 11123                           	opt stack 0
 11124  0121FE                     _epoch_to_caltime:
 11125                           	opt stack 13
 11126                           
 11127                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 11128                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 11129                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 11130                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 11131                           ;My_header\My_RTCC.h: 164: uint16_t day;
 11132                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 11133                           
 11134                           ;incstack = 0
 11135  0121FE  0E00               	movlw	0
 11136  012200  0100               	movlb	0	; () banked
 11137  012202  6FE4               	movwf	epoch_to_caltime@year& (0+255),b
 11138                           
 11139                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 11140  012204  0E01               	movlw	1
 11141  012206  0100               	movlb	0	; () banked
 11142  012208  6FE5               	movwf	epoch_to_caltime@month& (0+255),b
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;My_header\My_RTCC.h: 167: epoch_t num;
 11146                           ;My_header\My_RTCC.h: 169: num = *ep;
 11147  01220A  C0DC  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 11148  01220E  C0DD  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 11149  012212  CFDE F0E6          	movff	postinc2,epoch_to_caltime@num
 11150  012216  CFDE F0E7          	movff	postinc2,epoch_to_caltime@num+1
 11151  01221A  CFDE F0E8          	movff	postinc2,epoch_to_caltime@num+2
 11152  01221E  CFDE F0E9          	movff	postinc2,epoch_to_caltime@num+3
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 11156  012222  0EE6               	movlw	low epoch_to_caltime@num
 11157  012224  0100               	movlb	0	; () banked
 11158  012226  6FD2               	movwf	get_quot_rem@quot& (0+255),b
 11159  012228  0E00               	movlw	high epoch_to_caltime@num
 11160  01222A  0100               	movlb	0	; () banked
 11161  01222C  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11162  01222E  0E3C               	movlw	60
 11163  012230  0100               	movlb	0	; () banked
 11164  012232  6FD4               	movwf	get_quot_rem@div& (0+255),b
 11165  012234  EC90  F09E         	call	_get_quot_rem	;wreg free
 11166  012238  0100               	movlb	0	; () banked
 11167  01223A  51D2               	movf	?_get_quot_rem& (0+255),w,b
 11168  01223C  C0DA  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 11169  012240  C0DB  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 11170  012244  6EDF               	movwf	indf2,c
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 11174  012246  0EE6               	movlw	low epoch_to_caltime@num
 11175  012248  0100               	movlb	0	; () banked
 11176  01224A  6FD2               	movwf	get_quot_rem@quot& (0+255),b
 11177  01224C  0E00               	movlw	high epoch_to_caltime@num
 11178  01224E  0100               	movlb	0	; () banked
 11179  012250  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11180  012252  0E3C               	movlw	60
 11181  012254  0100               	movlb	0	; () banked
 11182  012256  6FD4               	movwf	get_quot_rem@div& (0+255),b
 11183  012258  EC90  F09E         	call	_get_quot_rem	;wreg free
 11184  01225C  0100               	movlb	0	; () banked
 11185  01225E  EE20 F001          	lfsr	2,1
 11186  012262  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
 11187  012264  26D9               	addwf	fsr2l,f,c
 11188  012266  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11189  012268  22DA               	addwfc	fsr2h,f,c
 11190  01226A  0100               	movlb	0	; () banked
 11191  01226C  C0D2  FFDF         	movff	?_get_quot_rem,indf2
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 11195  012270  0EE6               	movlw	low epoch_to_caltime@num
 11196  012272  0100               	movlb	0	; () banked
 11197  012274  6FD2               	movwf	get_quot_rem@quot& (0+255),b
 11198  012276  0E00               	movlw	high epoch_to_caltime@num
 11199  012278  0100               	movlb	0	; () banked
 11200  01227A  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11201  01227C  0E18               	movlw	24
 11202  01227E  0100               	movlb	0	; () banked
 11203  012280  6FD4               	movwf	get_quot_rem@div& (0+255),b
 11204  012282  EC90  F09E         	call	_get_quot_rem	;wreg free
 11205  012286  0100               	movlb	0	; () banked
 11206  012288  EE20 F002          	lfsr	2,2
 11207  01228C  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
 11208  01228E  26D9               	addwf	fsr2l,f,c
 11209  012290  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11210  012292  22DA               	addwfc	fsr2h,f,c
 11211  012294  0100               	movlb	0	; () banked
 11212  012296  C0D2  FFDF         	movff	?_get_quot_rem,indf2
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;My_header\My_RTCC.h: 173: day = num;
 11216  01229A  C0E6  F0E2         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 11217  01229E  C0E7  F0E3         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 11221  0122A2  C0E2  F0E0         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 11222  0122A6  C0E3  F0E1         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;My_header\My_RTCC.h: 176: num += 6;
 11226  0122AA  0E06               	movlw	6
 11227  0122AC  0100               	movlb	0	; () banked
 11228  0122AE  27E6               	addwf	epoch_to_caltime@num& (0+255),f,b
 11229  0122B0  0E00               	movlw	0
 11230  0122B2  23E7               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 11231  0122B4  23E8               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 11232  0122B6  23E9               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 11236  0122B8  0EE6               	movlw	low epoch_to_caltime@num
 11237  0122BA  0100               	movlb	0	; () banked
 11238  0122BC  6FD2               	movwf	get_quot_rem@quot& (0+255),b
 11239  0122BE  0E00               	movlw	high epoch_to_caltime@num
 11240  0122C0  0100               	movlb	0	; () banked
 11241  0122C2  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
 11242  0122C4  0E07               	movlw	7
 11243  0122C6  0100               	movlb	0	; () banked
 11244  0122C8  6FD4               	movwf	get_quot_rem@div& (0+255),b
 11245  0122CA  EC90  F09E         	call	_get_quot_rem	;wreg free
 11246  0122CE  0100               	movlb	0	; () banked
 11247  0122D0  EE20 F003          	lfsr	2,3
 11248  0122D4  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
 11249  0122D6  26D9               	addwf	fsr2l,f,c
 11250  0122D8  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11251  0122DA  22DA               	addwfc	fsr2h,f,c
 11252  0122DC  0100               	movlb	0	; () banked
 11253  0122DE  C0D2  FFDF         	movff	?_get_quot_rem,indf2
 11254                           
 11255                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 11256  0122E2  D03F               	goto	l9267
 11257  0122E4                     l426:
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 11261  0122E4  848A               	bsf	3978,2,c	;volatile
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 11265  0122E6  C0E5  F0BF         	movff	epoch_to_caltime@month,month_length@month
 11266  0122EA  0100               	movlb	0	; () banked
 11267  0122EC  51E4               	movf	epoch_to_caltime@year& (0+255),w,b
 11268  0122EE  EC71  F09C         	call	_month_length
 11269  0122F2  0100               	movlb	0	; () banked
 11270  0122F4  6FDE               	movwf	??_epoch_to_caltime& (0+255),b
 11271  0122F6  6BDF               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 11272  0122F8  0100               	movlb	0	; () banked
 11273  0122FA  1FDE               	comf	??_epoch_to_caltime& (0+255),f,b
 11274  0122FC  1FDF               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 11275  0122FE  4BDE               	infsnz	??_epoch_to_caltime& (0+255),f,b
 11276  012300  2BDF               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 11277  012302  0100               	movlb	0	; () banked
 11278  012304  51E2               	movf	epoch_to_caltime@day& (0+255),w,b
 11279  012306  0100               	movlb	0	; () banked
 11280  012308  25DE               	addwf	??_epoch_to_caltime& (0+255),w,b
 11281  01230A  0100               	movlb	0	; () banked
 11282  01230C  6FE2               	movwf	epoch_to_caltime@day& (0+255),b
 11283  01230E  0100               	movlb	0	; () banked
 11284  012310  51E3               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 11285  012312  0100               	movlb	0	; () banked
 11286  012314  21DF               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 11287  012316  0100               	movlb	0	; () banked
 11288  012318  6FE3               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 11292  01231A  0E0C               	movlw	12
 11293  01231C  0100               	movlb	0	; () banked
 11294  01231E  19E5               	xorwf	epoch_to_caltime@month& (0+255),w,b
 11295  012320  A4D8               	btfss	status,2,c
 11296  012322  D019               	goto	l9261
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;My_header\My_RTCC.h: 190: month = 1;
 11300  012324  0E01               	movlw	1
 11301  012326  0100               	movlb	0	; () banked
 11302  012328  6FE5               	movwf	epoch_to_caltime@month& (0+255),b
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;My_header\My_RTCC.h: 191: year++;
 11306  01232A  0100               	movlb	0	; () banked
 11307  01232C  2BE4               	incf	epoch_to_caltime@year& (0+255),f,b
 11308                           
 11309                           ; BSR set to: 0
 11310                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 11311  01232E  0E63               	movlw	99
 11312  012330  0100               	movlb	0	; () banked
 11313  012332  65E4               	cpfsgt	epoch_to_caltime@year& (0+255),b
 11314  012334  D012               	goto	l9263
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 11318  012336  C0DC  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 11319  01233A  C0DD  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 11320  01233E  0E80               	movlw	128
 11321  012340  5EDE               	subwf	postinc2,f,c
 11322  012342  0E13               	movlw	19
 11323  012344  5ADE               	subwfb	postinc2,f,c
 11324  012346  0E19               	movlw	25
 11325  012348  5ADE               	subwfb	postinc2,f,c
 11326  01234A  0EBC               	movlw	188
 11327  01234C  5ADE               	subwfb	postinc2,f,c
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;My_header\My_RTCC.h: 195: year = 0;
 11331  01234E  0E00               	movlw	0
 11332  012350  0100               	movlb	0	; () banked
 11333  012352  6FE4               	movwf	epoch_to_caltime@year& (0+255),b
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;My_header\My_RTCC.h: 196: }
 11337                           ;My_header\My_RTCC.h: 197: } else {
 11338  012354  D002               	goto	l9263
 11339  012356                     l9261:
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;My_header\My_RTCC.h: 198: month++;
 11343  012356  0100               	movlb	0	; () banked
 11344  012358  2BE5               	incf	epoch_to_caltime@month& (0+255),f,b
 11345  01235A                     l9263:
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;My_header\My_RTCC.h: 199: }
 11349                           ;My_header\My_RTCC.h: 200: month_cache = month;
 11350  01235A  C0E5  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;My_header\My_RTCC.h: 201: year_cache = year;
 11354  01235E  C0E4  F0AD         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 11355  012362                     l9267:
 11356                           
 11357                           ; BSR set to: 0
 11358  012362  C0E5  F0BF         	movff	epoch_to_caltime@month,month_length@month
 11359  012366  0100               	movlb	0	; () banked
 11360  012368  51E4               	movf	epoch_to_caltime@year& (0+255),w,b
 11361  01236A  EC71  F09C         	call	_month_length
 11362  01236E  0100               	movlb	0	; () banked
 11363  012370  6FDE               	movwf	??_epoch_to_caltime& (0+255),b
 11364  012372  0100               	movlb	0	; () banked
 11365  012374  51DE               	movf	??_epoch_to_caltime& (0+255),w,b
 11366  012376  0100               	movlb	0	; () banked
 11367  012378  5DE2               	subwf	epoch_to_caltime@day& (0+255),w,b
 11368  01237A  0E00               	movlw	0
 11369  01237C  59E3               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 11370  01237E  B0D8               	btfsc	status,0,c
 11371  012380  D7B1               	goto	l426
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;My_header\My_RTCC.h: 202: }
 11375                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 11376                           
 11377                           ; BSR set to: 0
 11378  012382  C0E2  F0DE         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 11379  012386  C0E3  F0DF         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 11380  01238A  0100               	movlb	0	; () banked
 11381  01238C  1FDE               	comf	??_epoch_to_caltime& (0+255),f,b
 11382  01238E  1FDF               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 11383  012390  4BDE               	infsnz	??_epoch_to_caltime& (0+255),f,b
 11384  012392  2BDF               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 11385  012394  0100               	movlb	0	; () banked
 11386  012396  51E0               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 11387  012398  0100               	movlb	0	; () banked
 11388  01239A  25DE               	addwf	??_epoch_to_caltime& (0+255),w,b
 11389  01239C  0102               	movlb	2	; () banked
 11390  01239E  6FFA               	movwf	epoch_to_caltime@day_cache& (0+255),b
 11391  0123A0  0100               	movlb	0	; () banked
 11392  0123A2  51E1               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 11393  0123A4  0100               	movlb	0	; () banked
 11394  0123A6  21DF               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 11395  0123A8  0102               	movlb	2	; () banked
 11396  0123AA  6FFB               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 11397                           
 11398                           ; BSR set to: 2
 11399                           ;My_header\My_RTCC.h: 204: day++;
 11400  0123AC  0100               	movlb	0	; () banked
 11401  0123AE  4BE2               	infsnz	epoch_to_caltime@day& (0+255),f,b
 11402  0123B0  2BE3               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 11406  0123B2  0100               	movlb	0	; () banked
 11407  0123B4  EE20 F006          	lfsr	2,6
 11408  0123B8  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
 11409  0123BA  26D9               	addwf	fsr2l,f,c
 11410  0123BC  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11411  0123BE  22DA               	addwfc	fsr2h,f,c
 11412  0123C0  C0E4  FFDF         	movff	epoch_to_caltime@year,indf2
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 11416  0123C4  0100               	movlb	0	; () banked
 11417  0123C6  EE20 F005          	lfsr	2,5
 11418  0123CA  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
 11419  0123CC  26D9               	addwf	fsr2l,f,c
 11420  0123CE  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11421  0123D0  22DA               	addwfc	fsr2h,f,c
 11422  0123D2  C0E5  FFDF         	movff	epoch_to_caltime@month,indf2
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 11426  0123D6  0100               	movlb	0	; () banked
 11427  0123D8  EE20 F004          	lfsr	2,4
 11428  0123DC  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
 11429  0123DE  26D9               	addwf	fsr2l,f,c
 11430  0123E0  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 11431  0123E2  22DA               	addwfc	fsr2h,f,c
 11432  0123E4  C0E2  FFDF         	movff	epoch_to_caltime@day,indf2
 11433                           
 11434                           ; BSR set to: 0
 11435  0123E8  0012               	return		;funcret
 11436  0123EA                     __end_of_epoch_to_caltime:
 11437                           	opt stack 0
 11438                           tblptru	equ	0xFF8
 11439                           tblptrh	equ	0xFF7
 11440                           tblptrl	equ	0xFF6
 11441                           tablat	equ	0xFF5
 11442                           prodh	equ	0xFF4
 11443                           prodl	equ	0xFF3
 11444                           intcon	equ	0xFF2
 11445                           postinc0	equ	0xFEE
 11446                           wreg	equ	0xFE8
 11447                           indf1	equ	0xFE7
 11448                           postinc1	equ	0xFE6
 11449                           postdec1	equ	0xFE5
 11450                           fsr1h	equ	0xFE2
 11451                           fsr1l	equ	0xFE1
 11452                           indf2	equ	0xFDF
 11453                           postinc2	equ	0xFDE
 11454                           postdec2	equ	0xFDD
 11455                           fsr2h	equ	0xFDA
 11456                           fsr2l	equ	0xFD9
 11457                           status	equ	0xFD8
 11458                           
 11459 ;; *************** function _get_quot_rem *****************
 11460 ;; Defined at:
 11461 ;;		line 112 in file "../My_header\My_RTCC.h"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 11464 ;;		 -> epoch_to_caltime@num(4), 
 11465 ;;  div             1   27[BANK0 ] unsigned char 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  num             4   29[BANK0 ] unsigned long 
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  4   25[BANK0 ] unsigned long 
 11470 ;; Registers used:
 11471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;Total ram usage:        8 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; Hardware stack levels required when called:   12
 11484 ;; This function calls:
 11485 ;;		___lldiv
 11486 ;;		___lmul
 11487 ;; This function is called by:
 11488 ;;		_epoch_to_caltime
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           	psect	text37
 11493  013D20                     __ptext37:
 11494                           	opt stack 0
 11495  013D20                     _get_quot_rem:
 11496                           	opt stack 13
 11497                           
 11498                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;incstack = 0
 11502  013D20  C0D2  FFD9         	movff	get_quot_rem@quot,fsr2l
 11503  013D24  C0D3  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 11504  013D28  CFDE F0D6          	movff	postinc2,get_quot_rem@num
 11505  013D2C  CFDE F0D7          	movff	postinc2,get_quot_rem@num+1
 11506  013D30  CFDE F0D8          	movff	postinc2,get_quot_rem@num+2
 11507  013D34  CFDE F0D9          	movff	postinc2,get_quot_rem@num+3
 11508                           
 11509                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 11510  013D38  0100               	movlb	0	; () banked
 11511  013D3A  51D4               	movf	get_quot_rem@div& (0+255),w,b
 11512  013D3C  0100               	movlb	0	; () banked
 11513  013D3E  6FBD               	movwf	___lldiv@divisor& (0+255),b
 11514  013D40  6BBE               	clrf	(___lldiv@divisor+1)& (0+255),b
 11515  013D42  6BBF               	clrf	(___lldiv@divisor+2)& (0+255),b
 11516  013D44  6BC0               	clrf	(___lldiv@divisor+3)& (0+255),b
 11517  013D46  C0D6  F0B9         	movff	get_quot_rem@num,___lldiv@dividend
 11518  013D4A  C0D7  F0BA         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 11519  013D4E  C0D8  F0BB         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 11520  013D52  C0D9  F0BC         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 11521  013D56  EC1D  F0A2         	call	___lldiv	;wreg free
 11522  013D5A  C0D2  FFD9         	movff	get_quot_rem@quot,fsr2l
 11523  013D5E  C0D3  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 11524  013D62  0100               	movlb	0	; () banked
 11525  013D64  C0B9  FFDE         	movff	?___lldiv,postinc2
 11526  013D68  0100               	movlb	0	; () banked
 11527  013D6A  C0BA  FFDE         	movff	?___lldiv+1,postinc2
 11528  013D6E  0100               	movlb	0	; () banked
 11529  013D70  C0BB  FFDE         	movff	?___lldiv+2,postinc2
 11530  013D74  0100               	movlb	0	; () banked
 11531  013D76  C0BC  FFDD         	movff	?___lldiv+3,postdec2
 11532  013D7A  52DD               	movf	postdec2,f,c
 11533  013D7C  52DD               	movf	postdec2,f,c
 11534  013D7E  CFDE F0C6          	movff	postinc2,___lmul@multiplier
 11535  013D82  CFDE F0C7          	movff	postinc2,___lmul@multiplier+1
 11536  013D86  CFDE F0C8          	movff	postinc2,___lmul@multiplier+2
 11537  013D8A  CFDE F0C9          	movff	postinc2,___lmul@multiplier+3
 11538  013D8E  0100               	movlb	0	; () banked
 11539  013D90  51D4               	movf	get_quot_rem@div& (0+255),w,b
 11540  013D92  0100               	movlb	0	; () banked
 11541  013D94  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 11542  013D96  6BCB               	clrf	(___lmul@multiplicand+1)& (0+255),b
 11543  013D98  6BCC               	clrf	(___lmul@multiplicand+2)& (0+255),b
 11544  013D9A  6BCD               	clrf	(___lmul@multiplicand+3)& (0+255),b
 11545  013D9C  EC40  F0A9         	call	___lmul	;wreg free
 11546  013DA0  0100               	movlb	0	; () banked
 11547  013DA2  1FC6               	comf	?___lmul& (0+255),f,b
 11548  013DA4  0100               	movlb	0	; () banked
 11549  013DA6  1FC7               	comf	(?___lmul+1)& (0+255),f,b
 11550  013DA8  0100               	movlb	0	; () banked
 11551  013DAA  1FC8               	comf	(?___lmul+2)& (0+255),f,b
 11552  013DAC  0100               	movlb	0	; () banked
 11553  013DAE  1FC9               	comf	(?___lmul+3)& (0+255),f,b
 11554  013DB0  0100               	movlb	0	; () banked
 11555  013DB2  2BC6               	incf	?___lmul& (0+255),f,b
 11556  013DB4  0E00               	movlw	0
 11557  013DB6  0100               	movlb	0	; () banked
 11558  013DB8  23C7               	addwfc	(?___lmul+1)& (0+255),f,b
 11559  013DBA  0100               	movlb	0	; () banked
 11560  013DBC  23C8               	addwfc	(?___lmul+2)& (0+255),f,b
 11561  013DBE  0100               	movlb	0	; () banked
 11562  013DC0  23C9               	addwfc	(?___lmul+3)& (0+255),f,b
 11563  013DC2  0100               	movlb	0	; () banked
 11564  013DC4  51D6               	movf	get_quot_rem@num& (0+255),w,b
 11565  013DC6  0100               	movlb	0	; () banked
 11566  013DC8  25C6               	addwf	?___lmul& (0+255),w,b
 11567  013DCA  0100               	movlb	0	; () banked
 11568  013DCC  6FD2               	movwf	?_get_quot_rem& (0+255),b
 11569  013DCE  0100               	movlb	0	; () banked
 11570  013DD0  51D7               	movf	(get_quot_rem@num+1)& (0+255),w,b
 11571  013DD2  0100               	movlb	0	; () banked
 11572  013DD4  21C7               	addwfc	(?___lmul+1)& (0+255),w,b
 11573  013DD6  0100               	movlb	0	; () banked
 11574  013DD8  6FD3               	movwf	(?_get_quot_rem+1)& (0+255),b
 11575  013DDA  0100               	movlb	0	; () banked
 11576  013DDC  51D8               	movf	(get_quot_rem@num+2)& (0+255),w,b
 11577  013DDE  0100               	movlb	0	; () banked
 11578  013DE0  21C8               	addwfc	(?___lmul+2)& (0+255),w,b
 11579  013DE2  0100               	movlb	0	; () banked
 11580  013DE4  6FD4               	movwf	(?_get_quot_rem+2)& (0+255),b
 11581  013DE6  0100               	movlb	0	; () banked
 11582  013DE8  51D9               	movf	(get_quot_rem@num+3)& (0+255),w,b
 11583  013DEA  0100               	movlb	0	; () banked
 11584  013DEC  21C9               	addwfc	(?___lmul+3)& (0+255),w,b
 11585  013DEE  0100               	movlb	0	; () banked
 11586  013DF0  6FD5               	movwf	(?_get_quot_rem+3)& (0+255),b
 11587  013DF2  0012               	return	
 11588  013DF4                     __end_of_get_quot_rem:
 11589                           	opt stack 0
 11590                           tblptru	equ	0xFF8
 11591                           tblptrh	equ	0xFF7
 11592                           tblptrl	equ	0xFF6
 11593                           tablat	equ	0xFF5
 11594                           prodh	equ	0xFF4
 11595                           prodl	equ	0xFF3
 11596                           intcon	equ	0xFF2
 11597                           postinc0	equ	0xFEE
 11598                           wreg	equ	0xFE8
 11599                           indf1	equ	0xFE7
 11600                           postinc1	equ	0xFE6
 11601                           postdec1	equ	0xFE5
 11602                           fsr1h	equ	0xFE2
 11603                           fsr1l	equ	0xFE1
 11604                           indf2	equ	0xFDF
 11605                           postinc2	equ	0xFDE
 11606                           postdec2	equ	0xFDD
 11607                           fsr2h	equ	0xFDA
 11608                           fsr2l	equ	0xFD9
 11609                           status	equ	0xFD8
 11610                           
 11611 ;; *************** function _caltime_to_RTCC *****************
 11612 ;; Defined at:
 11613 ;;		line 137 in file "../My_header\My_RTCC.h"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  ct              2    9[BANK0 ] PTR struct .
 11616 ;;		 -> caltime_now(7), 
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;		None
 11619 ;; Return value:  Size  Location     Type
 11620 ;;		None               void
 11621 ;; Registers used:
 11622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11632 ;;Total ram usage:        2 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:   13
 11635 ;; This function calls:
 11636 ;;		_d_to_x
 11637 ;; This function is called by:
 11638 ;;		_RTCC_from_caltime
 11639 ;;		_RTCC_from_epoch
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           	psect	text38
 11644  013EC8                     __ptext38:
 11645                           	opt stack 0
 11646  013EC8                     _caltime_to_RTCC:
 11647                           	opt stack 13
 11648  013EC8                     l413:
 11649  013EC8  010F               	movlb	15	; () banked
 11650  013ECA  B93F               	btfsc	63,4,b	;volatile
 11651  013ECC  D7FD               	goto	l413
 11652                           
 11653                           ; BSR set to: 15
 11654                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 11655  013ECE  010F               	movlb	15	; () banked
 11656  013ED0  813F               	bsf	63,0,b	;volatile
 11657                           
 11658                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 11659  013ED2  010F               	movlb	15	; () banked
 11660  013ED4  833F               	bsf	63,1,b	;volatile
 11661                           
 11662                           ; BSR set to: 15
 11663                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 11664  013ED6  0100               	movlb	0	; () banked
 11665  013ED8  EE20 F006          	lfsr	2,6
 11666  013EDC  51C2               	movf	caltime_to_RTCC@ct& (0+255),w,b
 11667  013EDE  26D9               	addwf	fsr2l,f,c
 11668  013EE0  51C3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 11669  013EE2  22DA               	addwfc	fsr2h,f,c
 11670  013EE4  50DF               	movf	indf2,w,c
 11671  013EE6  ECED  F0AE         	call	_d_to_x
 11672  013EEA  010F               	movlb	15	; () banked
 11673  013EEC  6F3A               	movwf	58,b	;volatile
 11674                           
 11675                           ; BSR set to: 15
 11676                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 11677  013EEE  0E00               	movlw	0
 11678  013EF0  010F               	movlb	15	; () banked
 11679  013EF2  6F3B               	movwf	59,b	;volatile
 11680                           
 11681                           ; BSR set to: 15
 11682                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 11683  013EF4  010F               	movlb	15	; () banked
 11684  013EF6  913F               	bcf	63,0,b	;volatile
 11685                           
 11686                           ; BSR set to: 15
 11687                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 11688  013EF8  010F               	movlb	15	; () banked
 11689  013EFA  833F               	bsf	63,1,b	;volatile
 11690                           
 11691                           ; BSR set to: 15
 11692                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 11693  013EFC  0100               	movlb	0	; () banked
 11694  013EFE  EE20 F004          	lfsr	2,4
 11695  013F02  51C2               	movf	caltime_to_RTCC@ct& (0+255),w,b
 11696  013F04  26D9               	addwf	fsr2l,f,c
 11697  013F06  51C3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 11698  013F08  22DA               	addwfc	fsr2h,f,c
 11699  013F0A  50DF               	movf	indf2,w,c
 11700  013F0C  ECED  F0AE         	call	_d_to_x
 11701  013F10  010F               	movlb	15	; () banked
 11702  013F12  6F3A               	movwf	58,b	;volatile
 11703                           
 11704                           ; BSR set to: 15
 11705                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 11706  013F14  0100               	movlb	0	; () banked
 11707  013F16  EE20 F005          	lfsr	2,5
 11708  013F1A  51C2               	movf	caltime_to_RTCC@ct& (0+255),w,b
 11709  013F1C  26D9               	addwf	fsr2l,f,c
 11710  013F1E  51C3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 11711  013F20  22DA               	addwfc	fsr2h,f,c
 11712  013F22  50DF               	movf	indf2,w,c
 11713  013F24  ECED  F0AE         	call	_d_to_x
 11714  013F28  010F               	movlb	15	; () banked
 11715  013F2A  6F3B               	movwf	59,b	;volatile
 11716                           
 11717                           ; BSR set to: 15
 11718                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 11719  013F2C  010F               	movlb	15	; () banked
 11720  013F2E  813F               	bsf	63,0,b	;volatile
 11721                           
 11722                           ; BSR set to: 15
 11723                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 11724  013F30  010F               	movlb	15	; () banked
 11725  013F32  933F               	bcf	63,1,b	;volatile
 11726                           
 11727                           ; BSR set to: 15
 11728                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 11729  013F34  0100               	movlb	0	; () banked
 11730  013F36  EE20 F002          	lfsr	2,2
 11731  013F3A  51C2               	movf	caltime_to_RTCC@ct& (0+255),w,b
 11732  013F3C  26D9               	addwf	fsr2l,f,c
 11733  013F3E  51C3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 11734  013F40  22DA               	addwfc	fsr2h,f,c
 11735  013F42  50DF               	movf	indf2,w,c
 11736  013F44  ECED  F0AE         	call	_d_to_x
 11737  013F48  010F               	movlb	15	; () banked
 11738  013F4A  6F3A               	movwf	58,b	;volatile
 11739                           
 11740                           ; BSR set to: 15
 11741                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 11742  013F4C  0100               	movlb	0	; () banked
 11743  013F4E  EE20 F003          	lfsr	2,3
 11744  013F52  51C2               	movf	caltime_to_RTCC@ct& (0+255),w,b
 11745  013F54  26D9               	addwf	fsr2l,f,c
 11746  013F56  51C3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 11747  013F58  22DA               	addwfc	fsr2h,f,c
 11748  013F5A  50DF               	movf	indf2,w,c
 11749  013F5C  ECED  F0AE         	call	_d_to_x
 11750  013F60  010F               	movlb	15	; () banked
 11751  013F62  6F3B               	movwf	59,b	;volatile
 11752                           
 11753                           ; BSR set to: 15
 11754                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 11755  013F64  010F               	movlb	15	; () banked
 11756  013F66  913F               	bcf	63,0,b	;volatile
 11757                           
 11758                           ; BSR set to: 15
 11759                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 11760  013F68  010F               	movlb	15	; () banked
 11761  013F6A  933F               	bcf	63,1,b	;volatile
 11762                           
 11763                           ; BSR set to: 15
 11764                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 11765  013F6C  C0C2  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 11766  013F70  C0C3  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 11767  013F74  50DF               	movf	indf2,w,c
 11768  013F76  ECED  F0AE         	call	_d_to_x
 11769  013F7A  010F               	movlb	15	; () banked
 11770  013F7C  6F3A               	movwf	58,b	;volatile
 11771                           
 11772                           ; BSR set to: 15
 11773                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 11774  013F7E  0100               	movlb	0	; () banked
 11775  013F80  EE20 F001          	lfsr	2,1
 11776  013F84  51C2               	movf	caltime_to_RTCC@ct& (0+255),w,b
 11777  013F86  26D9               	addwf	fsr2l,f,c
 11778  013F88  51C3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 11779  013F8A  22DA               	addwfc	fsr2h,f,c
 11780  013F8C  50DF               	movf	indf2,w,c
 11781  013F8E  ECED  F0AE         	call	_d_to_x
 11782  013F92  010F               	movlb	15	; () banked
 11783  013F94  6F3B               	movwf	59,b	;volatile
 11784                           
 11785                           ; BSR set to: 15
 11786  013F96  0012               	return		;funcret
 11787  013F98                     __end_of_caltime_to_RTCC:
 11788                           	opt stack 0
 11789                           tblptru	equ	0xFF8
 11790                           tblptrh	equ	0xFF7
 11791                           tblptrl	equ	0xFF6
 11792                           tablat	equ	0xFF5
 11793                           prodh	equ	0xFF4
 11794                           prodl	equ	0xFF3
 11795                           intcon	equ	0xFF2
 11796                           postinc0	equ	0xFEE
 11797                           wreg	equ	0xFE8
 11798                           indf1	equ	0xFE7
 11799                           postinc1	equ	0xFE6
 11800                           postdec1	equ	0xFE5
 11801                           fsr1h	equ	0xFE2
 11802                           fsr1l	equ	0xFE1
 11803                           indf2	equ	0xFDF
 11804                           postinc2	equ	0xFDE
 11805                           postdec2	equ	0xFDD
 11806                           fsr2h	equ	0xFDA
 11807                           fsr2l	equ	0xFD9
 11808                           status	equ	0xFD8
 11809                           
 11810 ;; *************** function _d_to_x *****************
 11811 ;; Defined at:
 11812 ;;		line 73 in file "../My_header\My_RTCC.h"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  dec             1    wreg     unsigned char 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;  dec             1    8[BANK0 ] unsigned char 
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      unsigned char 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11830 ;;Total ram usage:        1 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:   12
 11833 ;; This function calls:
 11834 ;;		___awdiv
 11835 ;; This function is called by:
 11836 ;;		_caltime_to_RTCC
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text39
 11841  015DDA                     __ptext39:
 11842                           	opt stack 0
 11843  015DDA                     _d_to_x:
 11844                           	opt stack 13
 11845                           
 11846                           ; BSR set to: 15
 11847                           ;incstack = 0
 11848                           ;d_to_x@dec stored from wreg
 11849  015DDA  0100               	movlb	0	; () banked
 11850  015DDC  6FC1               	movwf	d_to_x@dec& (0+255),b
 11851                           
 11852                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 11853  015DDE  C0C1  F0B9         	movff	d_to_x@dec,___awdiv@dividend
 11854  015DE2  0100               	movlb	0	; () banked
 11855  015DE4  6BBA               	clrf	(___awdiv@dividend+1)& (0+255),b
 11856  015DE6  0E00               	movlw	0
 11857  015DE8  0100               	movlb	0	; () banked
 11858  015DEA  6FBC               	movwf	(___awdiv@divisor+1)& (0+255),b
 11859  015DEC  0E0A               	movlw	10
 11860  015DEE  6FBB               	movwf	___awdiv@divisor& (0+255),b
 11861  015DF0  ECBE  F0A1         	call	___awdiv	;wreg free
 11862  015DF4  0100               	movlb	0	; () banked
 11863  015DF6  51B9               	movf	?___awdiv& (0+255),w,b
 11864  015DF8  0D06               	mullw	6
 11865  015DFA  50F3               	movf	prodl,w,c
 11866  015DFC  0100               	movlb	0	; () banked
 11867  015DFE  25C1               	addwf	d_to_x@dec& (0+255),w,b
 11868  015E00  0012               	return	
 11869  015E02                     __end_of_d_to_x:
 11870                           	opt stack 0
 11871                           tblptru	equ	0xFF8
 11872                           tblptrh	equ	0xFF7
 11873                           tblptrl	equ	0xFF6
 11874                           tablat	equ	0xFF5
 11875                           prodh	equ	0xFF4
 11876                           prodl	equ	0xFF3
 11877                           intcon	equ	0xFF2
 11878                           postinc0	equ	0xFEE
 11879                           wreg	equ	0xFE8
 11880                           indf1	equ	0xFE7
 11881                           postinc1	equ	0xFE6
 11882                           postdec1	equ	0xFE5
 11883                           fsr1h	equ	0xFE2
 11884                           fsr1l	equ	0xFE1
 11885                           indf2	equ	0xFDF
 11886                           postinc2	equ	0xFDE
 11887                           postdec2	equ	0xFDD
 11888                           fsr2h	equ	0xFDA
 11889                           fsr2l	equ	0xFD9
 11890                           status	equ	0xFD8
 11891                           
 11892 ;; *************** function ___awdiv *****************
 11893 ;; Defined at:
 11894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  dividend        2    0[BANK0 ] int 
 11897 ;;  divisor         2    2[BANK0 ] int 
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;  quotient        2    6[BANK0 ] int 
 11900 ;;  sign            1    5[BANK0 ] unsigned char 
 11901 ;;  counter         1    4[BANK0 ] unsigned char 
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  2    0[BANK0 ] int 
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11912 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11915 ;;Total ram usage:        8 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:   11
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		_d_to_x
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           	psect	text40
 11926  01437C                     __ptext40:
 11927                           	opt stack 0
 11928  01437C                     ___awdiv:
 11929                           	opt stack 13
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;incstack = 0
 11933  01437C  0E00               	movlw	0
 11934  01437E  0100               	movlb	0	; () banked
 11935  014380  6FBE               	movwf	___awdiv@sign& (0+255),b
 11936                           
 11937                           ; BSR set to: 0
 11938  014382  0100               	movlb	0	; () banked
 11939  014384  AFBC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11940  014386  D008               	goto	l8957
 11941                           
 11942                           ; BSR set to: 0
 11943  014388  0100               	movlb	0	; () banked
 11944  01438A  6DBB               	negf	___awdiv@divisor& (0+255),b
 11945  01438C  1FBC               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11946  01438E  B0D8               	btfsc	status,0,c
 11947  014390  2BBC               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11948                           
 11949                           ; BSR set to: 0
 11950  014392  0E01               	movlw	1
 11951  014394  0100               	movlb	0	; () banked
 11952  014396  6FBE               	movwf	___awdiv@sign& (0+255),b
 11953  014398                     l8957:
 11954                           
 11955                           ; BSR set to: 0
 11956  014398  0100               	movlb	0	; () banked
 11957  01439A  AFBA               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11958  01439C  D008               	goto	l8963
 11959                           
 11960                           ; BSR set to: 0
 11961  01439E  0100               	movlb	0	; () banked
 11962  0143A0  6DB9               	negf	___awdiv@dividend& (0+255),b
 11963  0143A2  1FBA               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11964  0143A4  B0D8               	btfsc	status,0,c
 11965  0143A6  2BBA               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11966                           
 11967                           ; BSR set to: 0
 11968  0143A8  0E01               	movlw	1
 11969  0143AA  0100               	movlb	0	; () banked
 11970  0143AC  1BBE               	xorwf	___awdiv@sign& (0+255),f,b
 11971  0143AE                     l8963:
 11972                           
 11973                           ; BSR set to: 0
 11974  0143AE  0E00               	movlw	0
 11975  0143B0  0100               	movlb	0	; () banked
 11976  0143B2  6FC0               	movwf	(___awdiv@quotient+1)& (0+255),b
 11977  0143B4  0E00               	movlw	0
 11978  0143B6  6FBF               	movwf	___awdiv@quotient& (0+255),b
 11979                           
 11980                           ; BSR set to: 0
 11981  0143B8  0100               	movlb	0	; () banked
 11982  0143BA  51BB               	movf	___awdiv@divisor& (0+255),w,b
 11983  0143BC  0100               	movlb	0	; () banked
 11984  0143BE  11BC               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11985  0143C0  B4D8               	btfsc	status,2,c
 11986  0143C2  D02C               	goto	l8985
 11987                           
 11988                           ; BSR set to: 0
 11989  0143C4  0E01               	movlw	1
 11990  0143C6  0100               	movlb	0	; () banked
 11991  0143C8  6FBD               	movwf	___awdiv@counter& (0+255),b
 11992  0143CA  D006               	goto	l8971
 11993  0143CC                     l8969:
 11994                           
 11995                           ; BSR set to: 0
 11996  0143CC  0100               	movlb	0	; () banked
 11997  0143CE  90D8               	bcf	status,0,c
 11998  0143D0  37BB               	rlcf	___awdiv@divisor& (0+255),f,b
 11999  0143D2  37BC               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12000  0143D4  0100               	movlb	0	; () banked
 12001  0143D6  2BBD               	incf	___awdiv@counter& (0+255),f,b
 12002  0143D8                     l8971:
 12003                           
 12004                           ; BSR set to: 0
 12005  0143D8  0100               	movlb	0	; () banked
 12006  0143DA  AFBC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12007  0143DC  D7F7               	goto	l8969
 12008  0143DE                     l8973:
 12009                           
 12010                           ; BSR set to: 0
 12011  0143DE  0100               	movlb	0	; () banked
 12012  0143E0  90D8               	bcf	status,0,c
 12013  0143E2  37BF               	rlcf	___awdiv@quotient& (0+255),f,b
 12014  0143E4  37C0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12015                           
 12016                           ; BSR set to: 0
 12017  0143E6  0100               	movlb	0	; () banked
 12018  0143E8  51BB               	movf	___awdiv@divisor& (0+255),w,b
 12019  0143EA  0100               	movlb	0	; () banked
 12020  0143EC  5DB9               	subwf	___awdiv@dividend& (0+255),w,b
 12021  0143EE  0100               	movlb	0	; () banked
 12022  0143F0  51BC               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12023  0143F2  0100               	movlb	0	; () banked
 12024  0143F4  59BA               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12025  0143F6  A0D8               	btfss	status,0,c
 12026  0143F8  D00A               	goto	l8981
 12027                           
 12028                           ; BSR set to: 0
 12029  0143FA  0100               	movlb	0	; () banked
 12030  0143FC  51BB               	movf	___awdiv@divisor& (0+255),w,b
 12031  0143FE  0100               	movlb	0	; () banked
 12032  014400  5FB9               	subwf	___awdiv@dividend& (0+255),f,b
 12033  014402  0100               	movlb	0	; () banked
 12034  014404  51BC               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12035  014406  0100               	movlb	0	; () banked
 12036  014408  5BBA               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12037                           
 12038                           ; BSR set to: 0
 12039  01440A  0100               	movlb	0	; () banked
 12040  01440C  81BF               	bsf	___awdiv@quotient& (0+255),0,b
 12041  01440E                     l8981:
 12042                           
 12043                           ; BSR set to: 0
 12044  01440E  0100               	movlb	0	; () banked
 12045  014410  90D8               	bcf	status,0,c
 12046  014412  33BC               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12047  014414  33BB               	rrcf	___awdiv@divisor& (0+255),f,b
 12048                           
 12049                           ; BSR set to: 0
 12050  014416  0100               	movlb	0	; () banked
 12051  014418  2FBD               	decfsz	___awdiv@counter& (0+255),f,b
 12052  01441A  D7E1               	goto	l8973
 12053  01441C                     l8985:
 12054                           
 12055                           ; BSR set to: 0
 12056  01441C  0100               	movlb	0	; () banked
 12057  01441E  51BE               	movf	___awdiv@sign& (0+255),w,b
 12058  014420  0100               	movlb	0	; () banked
 12059  014422  B4D8               	btfsc	status,2,c
 12060  014424  D005               	goto	l8989
 12061                           
 12062                           ; BSR set to: 0
 12063  014426  0100               	movlb	0	; () banked
 12064  014428  6DBF               	negf	___awdiv@quotient& (0+255),b
 12065  01442A  1FC0               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12066  01442C  B0D8               	btfsc	status,0,c
 12067  01442E  2BC0               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12068  014430                     l8989:
 12069                           
 12070                           ; BSR set to: 0
 12071  014430  C0BF  F0B9         	movff	___awdiv@quotient,?___awdiv
 12072  014434  C0C0  F0BA         	movff	___awdiv@quotient+1,?___awdiv+1
 12073  014438  0012               	return	
 12074  01443A                     __end_of___awdiv:
 12075                           	opt stack 0
 12076                           tblptru	equ	0xFF8
 12077                           tblptrh	equ	0xFF7
 12078                           tblptrl	equ	0xFF6
 12079                           tablat	equ	0xFF5
 12080                           prodh	equ	0xFF4
 12081                           prodl	equ	0xFF3
 12082                           intcon	equ	0xFF2
 12083                           postinc0	equ	0xFEE
 12084                           wreg	equ	0xFE8
 12085                           indf1	equ	0xFE7
 12086                           postinc1	equ	0xFE6
 12087                           postdec1	equ	0xFE5
 12088                           fsr1h	equ	0xFE2
 12089                           fsr1l	equ	0xFE1
 12090                           indf2	equ	0xFDF
 12091                           postinc2	equ	0xFDE
 12092                           postdec2	equ	0xFDD
 12093                           fsr2h	equ	0xFDA
 12094                           fsr2l	equ	0xFD9
 12095                           status	equ	0xFD8
 12096                           
 12097 ;; *************** function _RTCC_adjust_time_cursor *****************
 12098 ;; Defined at:
 12099 ;;		line 311 in file "../My_header\My_RTCC.h"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;		None
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;		None               void
 12106 ;; Registers used:
 12107 ;;		wreg, status,2
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12117 ;;Total ram usage:        0 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:   11
 12120 ;; This function calls:
 12121 ;;		Nothing
 12122 ;; This function is called by:
 12123 ;;		_RTCC_adjust_time_button
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text41
 12128  0154EC                     __ptext41:
 12129                           	opt stack 0
 12130  0154EC                     _RTCC_adjust_time_cursor:
 12131                           	opt stack 17
 12132                           
 12133                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;incstack = 0
 12137  0154EC  0100               	movlb	0	; () banked
 12138  0154EE  A1A8               	btfss	_edit_flag& (0+255),0,b
 12139  0154F0  D004               	goto	l508
 12140                           
 12141                           ; BSR set to: 0
 12142  0154F2  0E02               	movlw	2
 12143  0154F4  0100               	movlb	0	; () banked
 12144  0154F6  6FA8               	movwf	_edit_flag& (0+255),b
 12145  0154F8  0012               	return	
 12146  0154FA                     l508:
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
 12150  0154FA  0100               	movlb	0	; () banked
 12151  0154FC  A3A8               	btfss	_edit_flag& (0+255),1,b
 12152  0154FE  D004               	goto	l510
 12153                           
 12154                           ; BSR set to: 0
 12155  015500  0E04               	movlw	4
 12156  015502  0100               	movlb	0	; () banked
 12157  015504  6FA8               	movwf	_edit_flag& (0+255),b
 12158  015506  0012               	return	
 12159  015508                     l510:
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
 12163  015508  0100               	movlb	0	; () banked
 12164  01550A  A5A8               	btfss	_edit_flag& (0+255),2,b
 12165  01550C  D004               	goto	l512
 12166                           
 12167                           ; BSR set to: 0
 12168  01550E  0E08               	movlw	8
 12169  015510  0100               	movlb	0	; () banked
 12170  015512  6FA8               	movwf	_edit_flag& (0+255),b
 12171  015514  0012               	return	
 12172  015516                     l512:
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
 12176  015516  0100               	movlb	0	; () banked
 12177  015518  A7A8               	btfss	_edit_flag& (0+255),3,b
 12178  01551A  D004               	goto	l514
 12179                           
 12180                           ; BSR set to: 0
 12181  01551C  0E10               	movlw	16
 12182  01551E  0100               	movlb	0	; () banked
 12183  015520  6FA8               	movwf	_edit_flag& (0+255),b
 12184  015522  0012               	return	
 12185  015524                     l514:
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
 12189  015524  0100               	movlb	0	; () banked
 12190  015526  A9A8               	btfss	_edit_flag& (0+255),4,b
 12191  015528  D004               	goto	l516
 12192                           
 12193                           ; BSR set to: 0
 12194  01552A  0E20               	movlw	32
 12195  01552C  0100               	movlb	0	; () banked
 12196  01552E  6FA8               	movwf	_edit_flag& (0+255),b
 12197  015530  0012               	return	
 12198  015532                     l516:
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
 12202  015532  0100               	movlb	0	; () banked
 12203  015534  ABA8               	btfss	_edit_flag& (0+255),5,b
 12204  015536  D004               	goto	l9563
 12205                           
 12206                           ; BSR set to: 0
 12207  015538  0E01               	movlw	1
 12208  01553A  0100               	movlb	0	; () banked
 12209  01553C  6FA8               	movwf	_edit_flag& (0+255),b
 12210  01553E  0012               	return	
 12211  015540                     l9563:
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
 12215  015540  0E00               	movlw	0
 12216  015542  0100               	movlb	0	; () banked
 12217  015544  6FA8               	movwf	_edit_flag& (0+255),b
 12218                           
 12219                           ; BSR set to: 0
 12220                           
 12221                           ; BSR set to: 0
 12222                           
 12223                           ; BSR set to: 0
 12224                           
 12225                           ; BSR set to: 0
 12226                           
 12227                           ; BSR set to: 0
 12228  015546  0012               	return	
 12229  015548                     __end_of_RTCC_adjust_time_cursor:
 12230                           	opt stack 0
 12231                           tblptru	equ	0xFF8
 12232                           tblptrh	equ	0xFF7
 12233                           tblptrl	equ	0xFF6
 12234                           tablat	equ	0xFF5
 12235                           prodh	equ	0xFF4
 12236                           prodl	equ	0xFF3
 12237                           intcon	equ	0xFF2
 12238                           postinc0	equ	0xFEE
 12239                           wreg	equ	0xFE8
 12240                           indf1	equ	0xFE7
 12241                           postinc1	equ	0xFE6
 12242                           postdec1	equ	0xFE5
 12243                           fsr1h	equ	0xFE2
 12244                           fsr1l	equ	0xFE1
 12245                           indf2	equ	0xFDF
 12246                           postinc2	equ	0xFDE
 12247                           postdec2	equ	0xFDD
 12248                           fsr2h	equ	0xFDA
 12249                           fsr2l	equ	0xFD9
 12250                           status	equ	0xFD8
 12251                           
 12252 ;; *************** function _Auto_cut *****************
 12253 ;; Defined at:
 12254 ;;		line 143 in file "tasks.h"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  i               1   30[BANK0 ] unsigned char 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;		None               void
 12261 ;; Registers used:
 12262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12270 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12271 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12272 ;;Total ram usage:        3 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:   12
 12275 ;; This function calls:
 12276 ;;		_ADC
 12277 ;;		_IN
 12278 ;;		_OUT
 12279 ;;		___wmul
 12280 ;; This function is called by:
 12281 ;;		_normal_mode_loop
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text42
 12286  01323E                     __ptext42:
 12287                           	opt stack 0
 12288  01323E                     _Auto_cut:
 12289                           	opt stack 17
 12290                           
 12291                           ;tasks.h: 144: for (uint8_t i = 0; i < 3; i++) {
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;incstack = 0
 12295  01323E  0E00               	movlw	0
 12296  013240  0100               	movlb	0	; () banked
 12297  013242  6FD7               	movwf	Auto_cut@i& (0+255),b
 12298  013244                     l10299:
 12299                           
 12300                           ; BSR set to: 0
 12301  013244  0E02               	movlw	2
 12302  013246  0100               	movlb	0	; () banked
 12303  013248  65D7               	cpfsgt	Auto_cut@i& (0+255),b
 12304  01324A  D001               	goto	l10303
 12305  01324C  0012               	return	
 12306  01324E                     l10303:
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;tasks.h: 145: I[i] = 13 * ADC(IN(i)) / 16;
 12310  01324E  0100               	movlb	0	; () banked
 12311  013250  51D7               	movf	Auto_cut@i& (0+255),w,b
 12312  013252  EC7F  F0AE         	call	_IN
 12313  013256  EC24  F0AE         	call	_ADC
 12314  01325A  C0B9  F0CF         	movff	?_ADC,___wmul@multiplier
 12315  01325E  C0BA  F0D0         	movff	?_ADC+1,___wmul@multiplier+1
 12316  013262  0E00               	movlw	0
 12317  013264  0100               	movlb	0	; () banked
 12318  013266  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12319  013268  0E0D               	movlw	13
 12320  01326A  6FD1               	movwf	___wmul@multiplicand& (0+255),b
 12321  01326C  ECBE  F0AD         	call	___wmul	;wreg free
 12322  013270  0E04               	movlw	4
 12323  013272  0100               	movlb	0	; () banked
 12324  013274  6FD5               	movwf	??_Auto_cut& (0+255),b
 12325  013276                     u11335:
 12326  013276  0100               	movlb	0	; () banked
 12327  013278  90D8               	bcf	status,0,c
 12328  01327A  33D0               	rrcf	(?___wmul+1)& (0+255),f,b
 12329  01327C  33CF               	rrcf	?___wmul& (0+255),f,b
 12330  01327E  0100               	movlb	0	; () banked
 12331  013280  2FD5               	decfsz	??_Auto_cut& (0+255),f,b
 12332  013282  D7F9               	goto	u11335
 12333  013284  0100               	movlb	0	; () banked
 12334  013286  51D7               	movf	Auto_cut@i& (0+255),w,b
 12335  013288  0D02               	mullw	2
 12336  01328A  0E2D               	movlw	low _I
 12337  01328C  24F3               	addwf	prodl,w,c
 12338  01328E  6ED9               	movwf	fsr2l,c
 12339  013290  0E00               	movlw	high _I
 12340  013292  20F4               	addwfc	prodh,w,c
 12341  013294  6EDA               	movwf	fsr2h,c
 12342  013296  0100               	movlb	0	; () banked
 12343  013298  C0CF  FFDE         	movff	?___wmul,postinc2
 12344  01329C  0100               	movlb	0	; () banked
 12345  01329E  C0D0  FFDD         	movff	?___wmul+1,postdec2
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;tasks.h: 146: if (auto_cut_ON[i]) {
 12349  0132A2  0100               	movlb	0	; () banked
 12350  0132A4  51D7               	movf	Auto_cut@i& (0+255),w,b
 12351  0132A6  0D01               	mullw	1
 12352  0132A8  0E87               	movlw	low _auto_cut_ON
 12353  0132AA  24F3               	addwf	prodl,w,c
 12354  0132AC  6ED9               	movwf	fsr2l,c
 12355  0132AE  0E00               	movlw	high _auto_cut_ON
 12356  0132B0  20F4               	addwfc	prodh,w,c
 12357  0132B2  6EDA               	movwf	fsr2h,c
 12358  0132B4  50DF               	movf	indf2,w,c
 12359  0132B6  B4D8               	btfsc	status,2,c
 12360  0132B8  D041               	goto	l10315
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;tasks.h: 147: if (I[i] < 100) {
 12364  0132BA  0100               	movlb	0	; () banked
 12365  0132BC  51D7               	movf	Auto_cut@i& (0+255),w,b
 12366  0132BE  0D02               	mullw	2
 12367  0132C0  0E2D               	movlw	low _I
 12368  0132C2  24F3               	addwf	prodl,w,c
 12369  0132C4  6ED9               	movwf	fsr2l,c
 12370  0132C6  0E00               	movlw	high _I
 12371  0132C8  20F4               	addwfc	prodh,w,c
 12372  0132CA  6EDA               	movwf	fsr2h,c
 12373  0132CC  0E01               	movlw	1
 12374  0132CE  50DB               	movf	plusw2,w,c
 12375  0132D0  E128               	bnz	l10313
 12376  0132D2  0E64               	movlw	100
 12377  0132D4  5CDE               	subwf	postinc2,w,c
 12378  0132D6  B0D8               	btfsc	status,0,c
 12379  0132D8  D024               	goto	l10313
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;tasks.h: 148: cut_cnt[i]++;
 12383  0132DA  0100               	movlb	0	; () banked
 12384  0132DC  51D7               	movf	Auto_cut@i& (0+255),w,b
 12385  0132DE  0D02               	mullw	2
 12386  0132E0  0E28               	movlw	low _cut_cnt
 12387  0132E2  24F3               	addwf	prodl,w,c
 12388  0132E4  6ED9               	movwf	fsr2l,c
 12389  0132E6  0E03               	movlw	high _cut_cnt
 12390  0132E8  20F4               	addwfc	prodh,w,c
 12391  0132EA  6EDA               	movwf	fsr2h,c
 12392  0132EC  2ADE               	incf	postinc2,f,c
 12393  0132EE  0E00               	movlw	0
 12394  0132F0  22DD               	addwfc	postdec2,f,c
 12395                           
 12396                           ;tasks.h: 149: if (cut_cnt[i] > 6) {
 12397  0132F2  0100               	movlb	0	; () banked
 12398  0132F4  51D7               	movf	Auto_cut@i& (0+255),w,b
 12399  0132F6  0D02               	mullw	2
 12400  0132F8  0E28               	movlw	low _cut_cnt
 12401  0132FA  24F3               	addwf	prodl,w,c
 12402  0132FC  6ED9               	movwf	fsr2l,c
 12403  0132FE  0E03               	movlw	high _cut_cnt
 12404  013300  20F4               	addwfc	prodh,w,c
 12405  013302  6EDA               	movwf	fsr2h,c
 12406  013304  0E01               	movlw	1
 12407  013306  50DB               	movf	plusw2,w,c
 12408  013308  E104               	bnz	u11360
 12409  01330A  0E07               	movlw	7
 12410  01330C  5CDE               	subwf	postinc2,w,c
 12411  01330E  A0D8               	btfss	status,0,c
 12412  013310  D015               	goto	l10315
 12413  013312                     u11360:
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;tasks.h: 150: OUT(i, 0);
 12417  013312  0E00               	movlw	0
 12418  013314  0100               	movlb	0	; () banked
 12419  013316  6FB9               	movwf	OUT@value& (0+255),b
 12420  013318  0100               	movlb	0	; () banked
 12421  01331A  51D7               	movf	Auto_cut@i& (0+255),w,b
 12422  01331C  EC19  F0AA         	call	_OUT
 12423                           
 12424                           ;tasks.h: 151: }
 12425                           ;tasks.h: 152: } else {
 12426  013320  D00D               	goto	l10315
 12427  013322                     l10313:
 12428                           
 12429                           ;tasks.h: 153: cut_cnt[i] = 0;
 12430  013322  0100               	movlb	0	; () banked
 12431  013324  51D7               	movf	Auto_cut@i& (0+255),w,b
 12432  013326  0D02               	mullw	2
 12433  013328  0E28               	movlw	low _cut_cnt
 12434  01332A  24F3               	addwf	prodl,w,c
 12435  01332C  6ED9               	movwf	fsr2l,c
 12436  01332E  0E03               	movlw	high _cut_cnt
 12437  013330  20F4               	addwfc	prodh,w,c
 12438  013332  6EDA               	movwf	fsr2h,c
 12439  013334  0E00               	movlw	0
 12440  013336  6EDE               	movwf	postinc2,c
 12441  013338  0E00               	movlw	0
 12442  01333A  6EDD               	movwf	postdec2,c
 12443  01333C                     l10315:
 12444  01333C  0100               	movlb	0	; () banked
 12445  01333E  2BD7               	incf	Auto_cut@i& (0+255),f,b
 12446  013340  D781               	goto	l10299
 12447  013342                     __end_of_Auto_cut:
 12448                           	opt stack 0
 12449                           tblptru	equ	0xFF8
 12450                           tblptrh	equ	0xFF7
 12451                           tblptrl	equ	0xFF6
 12452                           tablat	equ	0xFF5
 12453                           prodh	equ	0xFF4
 12454                           prodl	equ	0xFF3
 12455                           intcon	equ	0xFF2
 12456                           postinc0	equ	0xFEE
 12457                           wreg	equ	0xFE8
 12458                           indf1	equ	0xFE7
 12459                           postinc1	equ	0xFE6
 12460                           postdec1	equ	0xFE5
 12461                           fsr1h	equ	0xFE2
 12462                           fsr1l	equ	0xFE1
 12463                           indf2	equ	0xFDF
 12464                           postinc2	equ	0xFDE
 12465                           postdec2	equ	0xFDD
 12466                           plusw2	equ	0xFDB
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8
 12470                           
 12471 ;; *************** function ___wmul *****************
 12472 ;; Defined at:
 12473 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  multiplier      2   22[BANK0 ] unsigned int 
 12476 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;  product         2   26[BANK0 ] unsigned int 
 12479 ;; Return value:  Size  Location     Type
 12480 ;;                  2   22[BANK0 ] unsigned int 
 12481 ;; Registers used:
 12482 ;;		wreg, status,2, status,0, prodl, prodh
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12489 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12492 ;;Total ram usage:        6 bytes
 12493 ;; Hardware stack levels used:    1
 12494 ;; Hardware stack levels required when called:   11
 12495 ;; This function calls:
 12496 ;;		Nothing
 12497 ;; This function is called by:
 12498 ;;		_my_atoi
 12499 ;;		_Auto_cut
 12500 ;;		_main
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text43
 12505  015B7C                     __ptext43:
 12506                           	opt stack 0
 12507  015B7C                     ___wmul:
 12508                           	opt stack 16
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;incstack = 0
 12512  015B7C  0100               	movlb	0	; () banked
 12513  015B7E  51CF               	movf	___wmul@multiplier& (0+255),w,b
 12514  015B80  0100               	movlb	0	; () banked
 12515  015B82  03D1               	mulwf	___wmul@multiplicand& (0+255),b
 12516  015B84  CFF3 F0D3          	movff	prodl,___wmul@product
 12517  015B88  CFF4 F0D4          	movff	prodh,___wmul@product+1
 12518  015B8C  0100               	movlb	0	; () banked
 12519  015B8E  51CF               	movf	___wmul@multiplier& (0+255),w,b
 12520  015B90  0100               	movlb	0	; () banked
 12521  015B92  03D2               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12522  015B94  50F3               	movf	prodl,w,c
 12523  015B96  0100               	movlb	0	; () banked
 12524  015B98  27D4               	addwf	(___wmul@product+1)& (0+255),f,b
 12525  015B9A  0100               	movlb	0	; () banked
 12526  015B9C  51D0               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12527  015B9E  0100               	movlb	0	; () banked
 12528  015BA0  03D1               	mulwf	___wmul@multiplicand& (0+255),b
 12529  015BA2  50F3               	movf	prodl,w,c
 12530  015BA4  0100               	movlb	0	; () banked
 12531  015BA6  27D4               	addwf	(___wmul@product+1)& (0+255),f,b
 12532                           
 12533                           ; BSR set to: 0
 12534  015BA8  C0D3  F0CF         	movff	___wmul@product,?___wmul
 12535  015BAC  C0D4  F0D0         	movff	___wmul@product+1,?___wmul+1
 12536  015BB0  0012               	return	
 12537  015BB2                     __end_of___wmul:
 12538                           	opt stack 0
 12539                           tblptru	equ	0xFF8
 12540                           tblptrh	equ	0xFF7
 12541                           tblptrl	equ	0xFF6
 12542                           tablat	equ	0xFF5
 12543                           prodh	equ	0xFF4
 12544                           prodl	equ	0xFF3
 12545                           intcon	equ	0xFF2
 12546                           postinc0	equ	0xFEE
 12547                           wreg	equ	0xFE8
 12548                           indf1	equ	0xFE7
 12549                           postinc1	equ	0xFE6
 12550                           postdec1	equ	0xFE5
 12551                           fsr1h	equ	0xFE2
 12552                           fsr1l	equ	0xFE1
 12553                           indf2	equ	0xFDF
 12554                           postinc2	equ	0xFDE
 12555                           postdec2	equ	0xFDD
 12556                           plusw2	equ	0xFDB
 12557                           fsr2h	equ	0xFDA
 12558                           fsr2l	equ	0xFD9
 12559                           status	equ	0xFD8
 12560                           
 12561 ;; *************** function _OUT *****************
 12562 ;; Defined at:
 12563 ;;		line 52 in file "tasks.h"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  b               1    wreg     unsigned char 
 12566 ;;  value           1    0[BANK0 ] unsigned char 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;  b               1    1[BANK0 ] unsigned char 
 12569 ;; Return value:  Size  Location     Type
 12570 ;;		None               void
 12571 ;; Registers used:
 12572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12578 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12581 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12582 ;;Total ram usage:        2 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:   11
 12585 ;; This function calls:
 12586 ;;		Nothing
 12587 ;; This function is called by:
 12588 ;;		_Auto_cut
 12589 ;;		_port_loop
 12590 ;;		_main
 12591 ;;		_sleep_loop
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text44
 12596  015432                     __ptext44:
 12597                           	opt stack 0
 12598  015432                     _OUT:
 12599                           	opt stack 17
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;incstack = 0
 12603                           ;OUT@b stored from wreg
 12604  015432  0100               	movlb	0	; () banked
 12605  015434  6FBA               	movwf	OUT@b& (0+255),b
 12606                           
 12607                           ;tasks.h: 53: out_flag[b] = value;
 12608  015436  0100               	movlb	0	; () banked
 12609  015438  51BA               	movf	OUT@b& (0+255),w,b
 12610  01543A  0D01               	mullw	1
 12611  01543C  0E39               	movlw	low _out_flag
 12612  01543E  24F3               	addwf	prodl,w,c
 12613  015440  6ED9               	movwf	fsr2l,c
 12614  015442  0E03               	movlw	high _out_flag
 12615  015444  20F4               	addwfc	prodh,w,c
 12616  015446  6EDA               	movwf	fsr2h,c
 12617  015448  C0B9  FFDF         	movff	OUT@value,indf2
 12618                           
 12619                           ;tasks.h: 54: switch (b) {
 12620  01544C  D015               	goto	l9673
 12621  01544E                     l617:
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;tasks.h: 56: LATA5 = value;
 12625  01544E  0100               	movlb	0	; () banked
 12626  015450  A1B9               	btfss	OUT@value& (0+255),0,b
 12627  015452  D002               	goto	u10520
 12628  015454  8A89               	bsf	3977,5,c	;volatile
 12629  015456  0012               	return	
 12630  015458                     u10520:
 12631  015458  9A89               	bcf	3977,5,c	;volatile
 12632                           
 12633                           ;tasks.h: 57: break;
 12634  01545A  0012               	return	
 12635  01545C                     l619:
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;tasks.h: 59: LATA6 = value;
 12639  01545C  0100               	movlb	0	; () banked
 12640  01545E  A1B9               	btfss	OUT@value& (0+255),0,b
 12641  015460  D002               	goto	u10540
 12642  015462  8C89               	bsf	3977,6,c	;volatile
 12643  015464  0012               	return	
 12644  015466                     u10540:
 12645  015466  9C89               	bcf	3977,6,c	;volatile
 12646                           
 12647                           ;tasks.h: 60: break;
 12648  015468  0012               	return	
 12649  01546A                     l620:
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;tasks.h: 62: LATA7 = value;
 12653  01546A  0100               	movlb	0	; () banked
 12654  01546C  A1B9               	btfss	OUT@value& (0+255),0,b
 12655  01546E  D002               	goto	u10560
 12656  015470  8E89               	bsf	3977,7,c	;volatile
 12657  015472  0012               	return	
 12658  015474                     u10560:
 12659  015474  9E89               	bcf	3977,7,c	;volatile
 12660                           
 12661                           ;tasks.h: 64: }
 12662                           
 12663                           ;tasks.h: 63: break;
 12664  015476  0012               	return	
 12665  015478                     l9673:
 12666  015478  0100               	movlb	0	; () banked
 12667  01547A  51BA               	movf	OUT@b& (0+255),w,b
 12668                           
 12669                           ; Switch size 1, requested type "space"
 12670                           ; Number of cases is 3, Range of values is 0 to 2
 12671                           ; switch strategies available:
 12672                           ; Name         Instructions Cycles
 12673                           ; simple_byte           10     6 (average)
 12674                           ;	Chosen strategy is simple_byte
 12675  01547C  0A00               	xorlw	0	; case 0
 12676  01547E  B4D8               	btfsc	status,2,c
 12677  015480  D7E6               	goto	l617
 12678  015482  0A01               	xorlw	1	; case 1
 12679  015484  B4D8               	btfsc	status,2,c
 12680  015486  D7EA               	goto	l619
 12681  015488  0A03               	xorlw	3	; case 2
 12682  01548A  A4D8               	btfss	status,2,c
 12683  01548C  0012               	return	
 12684  01548E  D7ED               	goto	l620
 12685  015490                     __end_of_OUT:
 12686                           	opt stack 0
 12687                           tblptru	equ	0xFF8
 12688                           tblptrh	equ	0xFF7
 12689                           tblptrl	equ	0xFF6
 12690                           tablat	equ	0xFF5
 12691                           prodh	equ	0xFF4
 12692                           prodl	equ	0xFF3
 12693                           intcon	equ	0xFF2
 12694                           postinc0	equ	0xFEE
 12695                           wreg	equ	0xFE8
 12696                           indf1	equ	0xFE7
 12697                           postinc1	equ	0xFE6
 12698                           postdec1	equ	0xFE5
 12699                           fsr1h	equ	0xFE2
 12700                           fsr1l	equ	0xFE1
 12701                           indf2	equ	0xFDF
 12702                           postinc2	equ	0xFDE
 12703                           postdec2	equ	0xFDD
 12704                           plusw2	equ	0xFDB
 12705                           fsr2h	equ	0xFDA
 12706                           fsr2l	equ	0xFD9
 12707                           status	equ	0xFD8
 12708                           
 12709 ;; *************** function _IN *****************
 12710 ;; Defined at:
 12711 ;;		line 67 in file "tasks.h"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;  b               1    wreg     unsigned char 
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;  b               1    0[BANK0 ] unsigned char 
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  1    wreg      unsigned char 
 12718 ;; Registers used:
 12719 ;;		wreg, status,2, status,0
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;Total ram usage:        1 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; Hardware stack levels required when called:   11
 12732 ;; This function calls:
 12733 ;;		Nothing
 12734 ;; This function is called by:
 12735 ;;		_Auto_cut
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text45
 12740  015CFE                     __ptext45:
 12741                           	opt stack 0
 12742  015CFE                     _IN:
 12743                           	opt stack 17
 12744                           
 12745                           ;incstack = 0
 12746                           ;IN@b stored from wreg
 12747  015CFE  0100               	movlb	0	; () banked
 12748  015D00  6FB9               	movwf	IN@b& (0+255),b
 12749                           
 12750                           ;tasks.h: 68: switch (b) {
 12751  015D02  D006               	goto	l9691
 12752  015D04                     l9677:
 12753                           
 12754                           ;tasks.h: 70: return 8;
 12755  015D04  0E08               	movlw	8
 12756  015D06  0012               	return	
 12757  015D08                     l9681:
 12758                           
 12759                           ;tasks.h: 72: return 9;
 12760  015D08  0E09               	movlw	9
 12761  015D0A  0012               	return	
 12762  015D0C                     l9685:
 12763                           
 12764                           ;tasks.h: 74: return 10;
 12765  015D0C  0E0A               	movlw	10
 12766  015D0E  0012               	return	
 12767  015D10                     l9691:
 12768  015D10  0100               	movlb	0	; () banked
 12769  015D12  51B9               	movf	IN@b& (0+255),w,b
 12770                           
 12771                           ; Switch size 1, requested type "space"
 12772                           ; Number of cases is 3, Range of values is 0 to 2
 12773                           ; switch strategies available:
 12774                           ; Name         Instructions Cycles
 12775                           ; simple_byte           10     6 (average)
 12776                           ;	Chosen strategy is simple_byte
 12777  015D14  0A00               	xorlw	0	; case 0
 12778  015D16  B4D8               	btfsc	status,2,c
 12779  015D18  D7F5               	goto	l9677
 12780  015D1A  0A01               	xorlw	1	; case 1
 12781  015D1C  B4D8               	btfsc	status,2,c
 12782  015D1E  D7F4               	goto	l9681
 12783  015D20  0A03               	xorlw	3	; case 2
 12784  015D22  B4D8               	btfsc	status,2,c
 12785  015D24  D7F3               	goto	l9685
 12786                           
 12787                           ;tasks.h: 76: return 0;
 12788                           
 12789                           ; BSR set to: 0
 12790  015D26  0E00               	movlw	0
 12791  015D28  0012               	return	
 12792  015D2A                     __end_of_IN:
 12793                           	opt stack 0
 12794                           tblptru	equ	0xFF8
 12795                           tblptrh	equ	0xFF7
 12796                           tblptrl	equ	0xFF6
 12797                           tablat	equ	0xFF5
 12798                           prodh	equ	0xFF4
 12799                           prodl	equ	0xFF3
 12800                           intcon	equ	0xFF2
 12801                           postinc0	equ	0xFEE
 12802                           wreg	equ	0xFE8
 12803                           indf1	equ	0xFE7
 12804                           postinc1	equ	0xFE6
 12805                           postdec1	equ	0xFE5
 12806                           fsr1h	equ	0xFE2
 12807                           fsr1l	equ	0xFE1
 12808                           indf2	equ	0xFDF
 12809                           postinc2	equ	0xFDE
 12810                           postdec2	equ	0xFDD
 12811                           plusw2	equ	0xFDB
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816 ;; *************** function _ADC *****************
 12817 ;; Defined at:
 12818 ;;		line 172 in file "../My_header\My_header.h"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;  ch              1    wreg     unsigned char 
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;  ch              1    3[BANK0 ] unsigned char 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  2    0[BANK0 ] unsigned int 
 12825 ;; Registers used:
 12826 ;;		wreg, status,2, status,0
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12834 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12835 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12836 ;;Total ram usage:        4 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:   11
 12839 ;; This function calls:
 12840 ;;		Nothing
 12841 ;; This function is called by:
 12842 ;;		_Auto_cut
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846                           	psect	text46
 12847  015C48                     __ptext46:
 12848                           	opt stack 0
 12849  015C48                     _ADC:
 12850                           	opt stack 17
 12851                           
 12852                           ;incstack = 0
 12853                           ;ADC@ch stored from wreg
 12854  015C48  0100               	movlb	0	; () banked
 12855  015C4A  6FBC               	movwf	ADC@ch& (0+255),b
 12856                           
 12857                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 12858  015C4C  C0BC  F0BB         	movff	ADC@ch,??_ADC
 12859  015C50  0100               	movlb	0	; () banked
 12860  015C52  47BB               	rlncf	??_ADC& (0+255),f,b
 12861  015C54  47BB               	rlncf	??_ADC& (0+255),f,b
 12862  015C56  50C2               	movf	4034,w,c	;volatile
 12863  015C58  0100               	movlb	0	; () banked
 12864  015C5A  19BB               	xorwf	??_ADC& (0+255),w,b
 12865  015C5C  0BC3               	andlw	-61
 12866  015C5E  19BB               	xorwf	??_ADC& (0+255),w,b
 12867  015C60  6EC2               	movwf	4034,c	;volatile
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 12871  015C62  80C2               	bsf	4034,0,c	;volatile
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 12875  015C64  9C9E               	bcf	3998,6,c	;volatile
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 12879  015C66  82C2               	bsf	4034,1,c	;volatile
 12880  015C68                     l159:
 12881  015C68  AC9E               	btfss	3998,6,c	;volatile
 12882  015C6A  D7FE               	goto	l159
 12883                           
 12884                           ;My_header\My_header.h: 179: return ADRES;
 12885  015C6C  CFC3 F0B9          	movff	4035,?_ADC	;volatile
 12886  015C70  CFC4 F0BA          	movff	4036,?_ADC+1	;volatile
 12887  015C74  0012               	return		;funcret
 12888  015C76                     __end_of_ADC:
 12889                           	opt stack 0
 12890                           tblptru	equ	0xFF8
 12891                           tblptrh	equ	0xFF7
 12892                           tblptrl	equ	0xFF6
 12893                           tablat	equ	0xFF5
 12894                           prodh	equ	0xFF4
 12895                           prodl	equ	0xFF3
 12896                           intcon	equ	0xFF2
 12897                           postinc0	equ	0xFEE
 12898                           wreg	equ	0xFE8
 12899                           indf1	equ	0xFE7
 12900                           postinc1	equ	0xFE6
 12901                           postdec1	equ	0xFE5
 12902                           fsr1h	equ	0xFE2
 12903                           fsr1l	equ	0xFE1
 12904                           indf2	equ	0xFDF
 12905                           postinc2	equ	0xFDE
 12906                           postdec2	equ	0xFDD
 12907                           plusw2	equ	0xFDB
 12908                           fsr2h	equ	0xFDA
 12909                           fsr2l	equ	0xFD9
 12910                           status	equ	0xFD8
 12911                           
 12912 ;; *************** function _main_init *****************
 12913 ;; Defined at:
 12914 ;;		line 104 in file "main.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;		None
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;  rxbuf         250    0[BANK2 ] unsigned char [250]
 12919 ;;  txbuf         250    0[BANK1 ] unsigned char [250]
 12920 ;; Return value:  Size  Location     Type
 12921 ;;		None               void
 12922 ;; Registers used:
 12923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Locals:         0       0     250     250       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12932 ;;      Totals:         0       0     250     250       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12933 ;;Total ram usage:      500 bytes
 12934 ;; Hardware stack levels used:    1
 12935 ;; Hardware stack levels required when called:   16
 12936 ;; This function calls:
 12937 ;;		_ADC_init
 12938 ;;		_CTMU_init
 12939 ;;		_I2C_LCD_init
 12940 ;;		_I2C_init
 12941 ;;		_RTCC_init
 12942 ;;		_USB_init
 12943 ;;		_ringbuf_init
 12944 ;;		_timer0_init
 12945 ;;		_timer1_init
 12946 ;;		_timer3_init
 12947 ;; This function is called by:
 12948 ;;		_main
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952                           	psect	text47
 12953  0147D2                     __ptext47:
 12954                           	opt stack 0
 12955  0147D2                     _main_init:
 12956                           	opt stack 14
 12957                           
 12958                           ;main.c: 105: OSCCONbits.IRCF = 7;
 12959                           
 12960                           ;incstack = 0
 12961  0147D2  88D3               	bsf	4051,4,c	;volatile
 12962  0147D4  8AD3               	bsf	4051,5,c	;volatile
 12963  0147D6  8CD3               	bsf	4051,6,c	;volatile
 12964                           
 12965                           ;main.c: 106: OSCTUNEbits.PLLEN = 1;
 12966  0147D8  8C9B               	bsf	3995,6,c	;volatile
 12967                           
 12968                           ;main.c: 107: OSCCONbits.SCS = 0;
 12969  0147DA  0EFC               	movlw	-4
 12970  0147DC  16D3               	andwf	4051,f,c	;volatile
 12971                           
 12972                           ;main.c: 108: TRISA = 0b00011111;
 12973  0147DE  0E1F               	movlw	31
 12974  0147E0  6E92               	movwf	3986,c	;volatile
 12975                           
 12976                           ;main.c: 109: TRISB = 0b00111111;
 12977  0147E2  0E3F               	movlw	63
 12978  0147E4  6E93               	movwf	3987,c	;volatile
 12979                           
 12980                           ;main.c: 110: TRISC = 0b10111010;
 12981  0147E6  0EBA               	movlw	186
 12982  0147E8  6E94               	movwf	3988,c	;volatile
 12983                           
 12984                           ;main.c: 111: ANCON0 = 0b11110000;
 12985  0147EA  0EF0               	movlw	240
 12986  0147EC  010F               	movlb	15	; () banked
 12987  0147EE  6F48               	movwf	72,b	;volatile
 12988                           
 12989                           ;main.c: 112: ANCON1 = 0b00011000;
 12990  0147F0  0E18               	movlw	24
 12991  0147F2  010F               	movlb	15	; () banked
 12992  0147F4  6F49               	movwf	73,b	;volatile
 12993                           
 12994                           ; BSR set to: 15
 12995                           ;main.c: 113: INTCON2bits.RBPU = 0;
 12996  0147F6  9EF1               	bcf	intcon2,7,c	;volatile
 12997                           
 12998                           ; BSR set to: 15
 12999                           ;main.c: 115: timer0_init(6);
 13000  0147F8  0E06               	movlw	6
 13001  0147FA  EC32  F0AD         	call	_timer0_init
 13002                           
 13003                           ;main.c: 116: timer1_init(0, 2);
 13004  0147FE  0E02               	movlw	2
 13005  014800  0100               	movlb	0	; () banked
 13006  014802  6FB9               	movwf	timer1_init@clock_select& (0+255),b
 13007  014804  0E00               	movlw	0
 13008  014806  ECD3  F0AB         	call	_timer1_init
 13009                           
 13010                           ;main.c: 117: timer3_init(2);
 13011  01480A  0E02               	movlw	2
 13012  01480C  EC95  F0AE         	call	_timer3_init
 13013                           
 13014                           ;main.c: 118: I2C_init();
 13015  014810  ECDE  F0AF         	call	_I2C_init	;wreg free
 13016                           
 13017                           ;main.c: 119: I2C_LCD_init();
 13018  014814  EC2A  F0AB         	call	_I2C_LCD_init	;wreg free
 13019                           
 13020                           ;main.c: 120: RTCC_init();
 13021  014818  EC3B  F0AE         	call	_RTCC_init	;wreg free
 13022                           
 13023                           ;main.c: 121: ADC_init(0);
 13024  01481C  0E00               	movlw	0
 13025  01481E  EC6F  F0AF         	call	_ADC_init
 13026                           
 13027                           ;main.c: 122: CTMU_init();
 13028  014822  EC01  F0AF         	call	_CTMU_init	;wreg free
 13029                           
 13030                           ;main.c: 123: USB_init();
 13031  014826  ECE7  F0AF         	call	_USB_init	;wreg free
 13032                           
 13033                           ;main.c: 126: uint8_t txbuf[250];
 13034                           ;main.c: 127: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
 13035  01482A  0ED2               	movlw	low _tx_buf
 13036  01482C  0100               	movlb	0	; () banked
 13037  01482E  6FB9               	movwf	ringbuf_init@rb& (0+255),b
 13038  014830  0E03               	movlw	high _tx_buf
 13039  014832  0100               	movlb	0	; () banked
 13040  014834  6FBA               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13041  014836  0E00               	movlw	low main_init@txbuf
 13042  014838  0100               	movlb	0	; () banked
 13043  01483A  6FBB               	movwf	ringbuf_init@internal_buf& (0+255),b
 13044  01483C  0E01               	movlw	high main_init@txbuf
 13045  01483E  0100               	movlb	0	; () banked
 13046  014840  6FBC               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 13047  014842  0E00               	movlw	0
 13048  014844  0100               	movlb	0	; () banked
 13049  014846  6FBE               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 13050  014848  0EFA               	movlw	250
 13051  01484A  6FBD               	movwf	ringbuf_init@bufsize& (0+255),b
 13052  01484C  EC80  F0AB         	call	_ringbuf_init	;wreg free
 13053                           
 13054                           ;main.c: 128: uint8_t rxbuf[250];
 13055                           ;main.c: 129: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
 13056  014850  0ECA               	movlw	low _rx_buf
 13057  014852  0100               	movlb	0	; () banked
 13058  014854  6FB9               	movwf	ringbuf_init@rb& (0+255),b
 13059  014856  0E03               	movlw	high _rx_buf
 13060  014858  0100               	movlb	0	; () banked
 13061  01485A  6FBA               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13062  01485C  0E00               	movlw	low main_init@rxbuf
 13063  01485E  0100               	movlb	0	; () banked
 13064  014860  6FBB               	movwf	ringbuf_init@internal_buf& (0+255),b
 13065  014862  0E02               	movlw	high main_init@rxbuf
 13066  014864  0100               	movlb	0	; () banked
 13067  014866  6FBC               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 13068  014868  0E00               	movlw	0
 13069  01486A  0100               	movlb	0	; () banked
 13070  01486C  6FBE               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 13071  01486E  0EFA               	movlw	250
 13072  014870  6FBD               	movwf	ringbuf_init@bufsize& (0+255),b
 13073  014872  EC80  F0AB         	call	_ringbuf_init	;wreg free
 13074  014876  0012               	return		;funcret
 13075  014878                     __end_of_main_init:
 13076                           	opt stack 0
 13077                           tblptru	equ	0xFF8
 13078                           tblptrh	equ	0xFF7
 13079                           tblptrl	equ	0xFF6
 13080                           tablat	equ	0xFF5
 13081                           prodh	equ	0xFF4
 13082                           prodl	equ	0xFF3
 13083                           intcon	equ	0xFF2
 13084                           intcon2	equ	0xFF1
 13085                           postinc0	equ	0xFEE
 13086                           wreg	equ	0xFE8
 13087                           indf1	equ	0xFE7
 13088                           postinc1	equ	0xFE6
 13089                           postdec1	equ	0xFE5
 13090                           fsr1h	equ	0xFE2
 13091                           fsr1l	equ	0xFE1
 13092                           indf2	equ	0xFDF
 13093                           postinc2	equ	0xFDE
 13094                           postdec2	equ	0xFDD
 13095                           plusw2	equ	0xFDB
 13096                           fsr2h	equ	0xFDA
 13097                           fsr2l	equ	0xFD9
 13098                           status	equ	0xFD8
 13099                           
 13100 ;; *************** function _timer3_init *****************
 13101 ;; Defined at:
 13102 ;;		line 85 in file "../My_header\My_header.h"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  prescaler       1    wreg     unsigned char 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13107 ;; Return value:  Size  Location     Type
 13108 ;;		None               void
 13109 ;; Registers used:
 13110 ;;		wreg, status,2, status,0
 13111 ;; Tracked objects:
 13112 ;;		On entry : 0/0
 13113 ;;		On exit  : 0/0
 13114 ;;		Unchanged: 0/0
 13115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13120 ;;Total ram usage:        2 bytes
 13121 ;; Hardware stack levels used:    1
 13122 ;; Hardware stack levels required when called:   11
 13123 ;; This function calls:
 13124 ;;		Nothing
 13125 ;; This function is called by:
 13126 ;;		_main_init
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           	psect	text48
 13131  015D2A                     __ptext48:
 13132                           	opt stack 0
 13133  015D2A                     _timer3_init:
 13134                           	opt stack 18
 13135                           
 13136                           ;incstack = 0
 13137                           ;timer3_init@prescaler stored from wreg
 13138  015D2A  0100               	movlb	0	; () banked
 13139  015D2C  6FBA               	movwf	timer3_init@prescaler& (0+255),b
 13140                           
 13141                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 13142  015D2E  0E3F               	movlw	-193
 13143  015D30  1679               	andwf	3961,f,c	;volatile
 13144                           
 13145                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 13146  015D32  9679               	bcf	3961,3,c	;volatile
 13147                           
 13148                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 13149  015D34  C0BA  F0B9         	movff	timer3_init@prescaler,??_timer3_init
 13150  015D38  0100               	movlb	0	; () banked
 13151  015D3A  3BB9               	swapf	??_timer3_init& (0+255),f,b
 13152  015D3C  5079               	movf	3961,w,c	;volatile
 13153  015D3E  0100               	movlb	0	; () banked
 13154  015D40  19B9               	xorwf	??_timer3_init& (0+255),w,b
 13155  015D42  0BCF               	andlw	-49
 13156  015D44  19B9               	xorwf	??_timer3_init& (0+255),w,b
 13157  015D46  6E79               	movwf	3961,c	;volatile
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 13161  015D48  9E79               	bcf	3961,7,c	;volatile
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 13165  015D4A  8079               	bsf	3961,0,c	;volatile
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 13169  015D4C  92A2               	bcf	4002,1,c	;volatile
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 13173  015D4E  92A1               	bcf	4001,1,c	;volatile
 13174                           
 13175                           ; BSR set to: 0
 13176                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 13177  015D50  82A0               	bsf	4000,1,c	;volatile
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 13181  015D52  8CF2               	bsf	intcon,6,c	;volatile
 13182                           
 13183                           ; BSR set to: 0
 13184  015D54  0012               	return		;funcret
 13185  015D56                     __end_of_timer3_init:
 13186                           	opt stack 0
 13187                           tblptru	equ	0xFF8
 13188                           tblptrh	equ	0xFF7
 13189                           tblptrl	equ	0xFF6
 13190                           tablat	equ	0xFF5
 13191                           prodh	equ	0xFF4
 13192                           prodl	equ	0xFF3
 13193                           intcon	equ	0xFF2
 13194                           intcon2	equ	0xFF1
 13195                           postinc0	equ	0xFEE
 13196                           wreg	equ	0xFE8
 13197                           indf1	equ	0xFE7
 13198                           postinc1	equ	0xFE6
 13199                           postdec1	equ	0xFE5
 13200                           fsr1h	equ	0xFE2
 13201                           fsr1l	equ	0xFE1
 13202                           indf2	equ	0xFDF
 13203                           postinc2	equ	0xFDE
 13204                           postdec2	equ	0xFDD
 13205                           plusw2	equ	0xFDB
 13206                           fsr2h	equ	0xFDA
 13207                           fsr2l	equ	0xFD9
 13208                           status	equ	0xFD8
 13209                           
 13210 ;; *************** function _timer1_init *****************
 13211 ;; Defined at:
 13212 ;;		line 54 in file "../My_header\My_header.h"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;  prescaler       1    wreg     unsigned char 
 13215 ;;  clock_select    1    0[BANK0 ] unsigned char 
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;  prescaler       1    2[BANK0 ] unsigned char 
 13218 ;; Return value:  Size  Location     Type
 13219 ;;		None               void
 13220 ;; Registers used:
 13221 ;;		wreg, status,2, status,0
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13227 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13231 ;;Total ram usage:        3 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:   11
 13234 ;; This function calls:
 13235 ;;		Nothing
 13236 ;; This function is called by:
 13237 ;;		_main_init
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           	psect	text49
 13242  0157A6                     __ptext49:
 13243                           	opt stack 0
 13244  0157A6                     _timer1_init:
 13245                           	opt stack 18
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;incstack = 0
 13249                           ;timer1_init@prescaler stored from wreg
 13250  0157A6  0100               	movlb	0	; () banked
 13251  0157A8  6FBB               	movwf	timer1_init@prescaler& (0+255),b
 13252                           
 13253                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 13254  0157AA  C0B9  F0BA         	movff	timer1_init@clock_select,??_timer1_init
 13255  0157AE  0100               	movlb	0	; () banked
 13256  0157B0  3BBA               	swapf	??_timer1_init& (0+255),f,b
 13257  0157B2  47BA               	rlncf	??_timer1_init& (0+255),f,b
 13258  0157B4  47BA               	rlncf	??_timer1_init& (0+255),f,b
 13259  0157B6  50CD               	movf	4045,w,c	;volatile
 13260  0157B8  0100               	movlb	0	; () banked
 13261  0157BA  19BA               	xorwf	??_timer1_init& (0+255),w,b
 13262  0157BC  0B3F               	andlw	-193
 13263  0157BE  19BA               	xorwf	??_timer1_init& (0+255),w,b
 13264  0157C0  6ECD               	movwf	4045,c	;volatile
 13265                           
 13266                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 13267  0157C2  0E02               	movlw	2
 13268  0157C4  0100               	movlb	0	; () banked
 13269  0157C6  19B9               	xorwf	timer1_init@clock_select& (0+255),w,b
 13270  0157C8  A4D8               	btfss	status,2,c
 13271  0157CA  D002               	goto	l142
 13272                           
 13273                           ; BSR set to: 0
 13274  0157CC  86CD               	bsf	4045,3,c	;volatile
 13275  0157CE  D001               	goto	l10053
 13276  0157D0                     l142:
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 13280  0157D0  96CD               	bcf	4045,3,c	;volatile
 13281  0157D2                     l10053:
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 13285  0157D2  C0BB  F0BA         	movff	timer1_init@prescaler,??_timer1_init
 13286  0157D6  0100               	movlb	0	; () banked
 13287  0157D8  3BBA               	swapf	??_timer1_init& (0+255),f,b
 13288  0157DA  50CD               	movf	4045,w,c	;volatile
 13289  0157DC  0100               	movlb	0	; () banked
 13290  0157DE  19BA               	xorwf	??_timer1_init& (0+255),w,b
 13291  0157E0  0BCF               	andlw	-49
 13292  0157E2  19BA               	xorwf	??_timer1_init& (0+255),w,b
 13293  0157E4  6ECD               	movwf	4045,c	;volatile
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 13297  0157E6  84CD               	bsf	4045,2,c	;volatile
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 13301  0157E8  92CD               	bcf	4045,1,c	;volatile
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 13305  0157EA  80CD               	bsf	4045,0,c	;volatile
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 13309  0157EC  909F               	bcf	3999,0,c	;volatile
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 13313  0157EE  909E               	bcf	3998,0,c	;volatile
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 13317  0157F0  809D               	bsf	3997,0,c	;volatile
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 13321  0157F2  8CF2               	bsf	intcon,6,c	;volatile
 13322                           
 13323                           ; BSR set to: 0
 13324  0157F4  0012               	return		;funcret
 13325  0157F6                     __end_of_timer1_init:
 13326                           	opt stack 0
 13327                           tblptru	equ	0xFF8
 13328                           tblptrh	equ	0xFF7
 13329                           tblptrl	equ	0xFF6
 13330                           tablat	equ	0xFF5
 13331                           prodh	equ	0xFF4
 13332                           prodl	equ	0xFF3
 13333                           intcon	equ	0xFF2
 13334                           intcon2	equ	0xFF1
 13335                           postinc0	equ	0xFEE
 13336                           wreg	equ	0xFE8
 13337                           indf1	equ	0xFE7
 13338                           postinc1	equ	0xFE6
 13339                           postdec1	equ	0xFE5
 13340                           fsr1h	equ	0xFE2
 13341                           fsr1l	equ	0xFE1
 13342                           indf2	equ	0xFDF
 13343                           postinc2	equ	0xFDE
 13344                           postdec2	equ	0xFDD
 13345                           plusw2	equ	0xFDB
 13346                           fsr2h	equ	0xFDA
 13347                           fsr2l	equ	0xFD9
 13348                           status	equ	0xFD8
 13349                           
 13350 ;; *************** function _timer0_init *****************
 13351 ;; Defined at:
 13352 ;;		line 15 in file "../My_header\My_header.h"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;  prescaler       1    wreg     unsigned char 
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13357 ;; Return value:  Size  Location     Type
 13358 ;;		None               void
 13359 ;; Registers used:
 13360 ;;		wreg, status,2, status,0
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13369 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13370 ;;Total ram usage:        2 bytes
 13371 ;; Hardware stack levels used:    1
 13372 ;; Hardware stack levels required when called:   11
 13373 ;; This function calls:
 13374 ;;		Nothing
 13375 ;; This function is called by:
 13376 ;;		_main_init
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text50
 13381  015A64                     __ptext50:
 13382                           	opt stack 0
 13383  015A64                     _timer0_init:
 13384                           	opt stack 18
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;incstack = 0
 13388                           ;timer0_init@prescaler stored from wreg
 13389  015A64  0100               	movlb	0	; () banked
 13390  015A66  6FBA               	movwf	timer0_init@prescaler& (0+255),b
 13391                           
 13392                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 13393  015A68  8ED5               	bsf	4053,7,c	;volatile
 13394                           
 13395                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 13396  015A6A  8CD5               	bsf	4053,6,c	;volatile
 13397                           
 13398                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 13399  015A6C  9AD5               	bcf	4053,5,c	;volatile
 13400                           
 13401                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 13402  015A6E  0100               	movlb	0	; () banked
 13403  015A70  51BA               	movf	timer0_init@prescaler& (0+255),w,b
 13404  015A72  0100               	movlb	0	; () banked
 13405  015A74  A4D8               	btfss	status,2,c
 13406  015A76  D002               	goto	l137
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 13410  015A78  86D5               	bsf	4053,3,c	;volatile
 13411                           
 13412                           ;My_header\My_header.h: 21: } else {
 13413  015A7A  D00C               	goto	l10041
 13414  015A7C                     l137:
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 13418  015A7C  96D5               	bcf	4053,3,c	;volatile
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 13422  015A7E  C0BA  F0B9         	movff	timer0_init@prescaler,??_timer0_init
 13423  015A82  0EFF               	movlw	255
 13424  015A84  0100               	movlb	0	; () banked
 13425  015A86  27B9               	addwf	??_timer0_init& (0+255),f,b
 13426  015A88  50D5               	movf	4053,w,c	;volatile
 13427  015A8A  0100               	movlb	0	; () banked
 13428  015A8C  19B9               	xorwf	??_timer0_init& (0+255),w,b
 13429  015A8E  0BF8               	andlw	-8
 13430  015A90  19B9               	xorwf	??_timer0_init& (0+255),w,b
 13431  015A92  6ED5               	movwf	4053,c	;volatile
 13432  015A94                     l10041:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;My_header\My_header.h: 24: }
 13436                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 13437  015A94  8AF2               	bsf	intcon,5,c	;volatile
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 13441  015A96  94F2               	bcf	intcon,2,c	;volatile
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 13445  015A98  94F1               	bcf	intcon2,2,c	;volatile
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 13449  015A9A  8CF2               	bsf	intcon,6,c	;volatile
 13450                           
 13451                           ; BSR set to: 0
 13452  015A9C  0012               	return		;funcret
 13453  015A9E                     __end_of_timer0_init:
 13454                           	opt stack 0
 13455                           tblptru	equ	0xFF8
 13456                           tblptrh	equ	0xFF7
 13457                           tblptrl	equ	0xFF6
 13458                           tablat	equ	0xFF5
 13459                           prodh	equ	0xFF4
 13460                           prodl	equ	0xFF3
 13461                           intcon	equ	0xFF2
 13462                           intcon2	equ	0xFF1
 13463                           postinc0	equ	0xFEE
 13464                           wreg	equ	0xFE8
 13465                           indf1	equ	0xFE7
 13466                           postinc1	equ	0xFE6
 13467                           postdec1	equ	0xFE5
 13468                           fsr1h	equ	0xFE2
 13469                           fsr1l	equ	0xFE1
 13470                           indf2	equ	0xFDF
 13471                           postinc2	equ	0xFDE
 13472                           postdec2	equ	0xFDD
 13473                           plusw2	equ	0xFDB
 13474                           fsr2h	equ	0xFDA
 13475                           fsr2l	equ	0xFD9
 13476                           status	equ	0xFD8
 13477                           
 13478 ;; *************** function _ringbuf_init *****************
 13479 ;; Defined at:
 13480 ;;		line 24 in file "../My_header\My_ringbuf.h"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 13483 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 13484 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 13485 ;;		 -> main_init@rxbuf(250), main_init@txbuf(250), rx_loop@buf(100), 
 13486 ;;  bufsize         2    4[BANK0 ] unsigned int 
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;		None               void
 13491 ;; Registers used:
 13492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13498 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13501 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;Total ram usage:        6 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; Hardware stack levels required when called:   11
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_rx_loop
 13509 ;;		_main_init
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           	psect	text51
 13514  015700                     __ptext51:
 13515                           	opt stack 0
 13516  015700                     _ringbuf_init:
 13517                           	opt stack 18
 13518                           
 13519                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;incstack = 0
 13523  015700  C0B9  FFD9         	movff	ringbuf_init@rb,fsr2l
 13524  015704  C0BA  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 13525  015708  C0BB  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 13526  01570C  C0BC  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 13527                           
 13528                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 13529  015710  0100               	movlb	0	; () banked
 13530  015712  EE20 F002          	lfsr	2,2
 13531  015716  51B9               	movf	ringbuf_init@rb& (0+255),w,b
 13532  015718  26D9               	addwf	fsr2l,f,c
 13533  01571A  51BA               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 13534  01571C  22DA               	addwfc	fsr2h,f,c
 13535  01571E  C0BD  FFDE         	movff	ringbuf_init@bufsize,postinc2
 13536  015722  C0BE  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 13540  015726  0100               	movlb	0	; () banked
 13541  015728  EE20 F004          	lfsr	2,4
 13542  01572C  51B9               	movf	ringbuf_init@rb& (0+255),w,b
 13543  01572E  26D9               	addwf	fsr2l,f,c
 13544  015730  51BA               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 13545  015732  22DA               	addwfc	fsr2h,f,c
 13546  015734  0E00               	movlw	0
 13547  015736  6EDE               	movwf	postinc2,c
 13548  015738  0E00               	movlw	0
 13549  01573A  6EDD               	movwf	postdec2,c
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 13553  01573C  0100               	movlb	0	; () banked
 13554  01573E  EE20 F006          	lfsr	2,6
 13555  015742  51B9               	movf	ringbuf_init@rb& (0+255),w,b
 13556  015744  26D9               	addwf	fsr2l,f,c
 13557  015746  51BA               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 13558  015748  22DA               	addwfc	fsr2h,f,c
 13559  01574A  0E00               	movlw	0
 13560  01574C  6EDE               	movwf	postinc2,c
 13561  01574E  0E00               	movlw	0
 13562  015750  6EDD               	movwf	postdec2,c
 13563                           
 13564                           ; BSR set to: 0
 13565  015752  0012               	return		;funcret
 13566  015754                     __end_of_ringbuf_init:
 13567                           	opt stack 0
 13568                           tblptru	equ	0xFF8
 13569                           tblptrh	equ	0xFF7
 13570                           tblptrl	equ	0xFF6
 13571                           tablat	equ	0xFF5
 13572                           prodh	equ	0xFF4
 13573                           prodl	equ	0xFF3
 13574                           intcon	equ	0xFF2
 13575                           intcon2	equ	0xFF1
 13576                           postinc0	equ	0xFEE
 13577                           wreg	equ	0xFE8
 13578                           indf1	equ	0xFE7
 13579                           postinc1	equ	0xFE6
 13580                           postdec1	equ	0xFE5
 13581                           fsr1h	equ	0xFE2
 13582                           fsr1l	equ	0xFE1
 13583                           indf2	equ	0xFDF
 13584                           postinc2	equ	0xFDE
 13585                           postdec2	equ	0xFDD
 13586                           plusw2	equ	0xFDB
 13587                           fsr2h	equ	0xFDA
 13588                           fsr2l	equ	0xFD9
 13589                           status	equ	0xFD8
 13590                           
 13591 ;; *************** function _USB_init *****************
 13592 ;; Defined at:
 13593 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;		None
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;		None               void
 13600 ;; Registers used:
 13601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:   13
 13614 ;; This function calls:
 13615 ;;		_USBDeviceAttach
 13616 ;;		_USBDeviceInit
 13617 ;; This function is called by:
 13618 ;;		_main_init
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622                           	psect	text52
 13623  015FCE                     __ptext52:
 13624                           	opt stack 0
 13625  015FCE                     _USB_init:
 13626                           	opt stack 16
 13627                           
 13628                           ;My_usb_cdc.c: 8: USBDeviceInit();
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;incstack = 0
 13632  015FCE  ECA9  F093         	call	_USBDeviceInit	;wreg free
 13633                           
 13634                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 13635  015FD2  EC6B  F0AD         	call	_USBDeviceAttach	;wreg free
 13636  015FD6  0012               	return		;funcret
 13637  015FD8                     __end_of_USB_init:
 13638                           	opt stack 0
 13639                           tblptru	equ	0xFF8
 13640                           tblptrh	equ	0xFF7
 13641                           tblptrl	equ	0xFF6
 13642                           tablat	equ	0xFF5
 13643                           prodh	equ	0xFF4
 13644                           prodl	equ	0xFF3
 13645                           intcon	equ	0xFF2
 13646                           intcon2	equ	0xFF1
 13647                           postinc0	equ	0xFEE
 13648                           wreg	equ	0xFE8
 13649                           indf1	equ	0xFE7
 13650                           postinc1	equ	0xFE6
 13651                           postdec1	equ	0xFE5
 13652                           fsr1h	equ	0xFE2
 13653                           fsr1l	equ	0xFE1
 13654                           indf2	equ	0xFDF
 13655                           postinc2	equ	0xFDE
 13656                           postdec2	equ	0xFDD
 13657                           plusw2	equ	0xFDB
 13658                           fsr2h	equ	0xFDA
 13659                           fsr2l	equ	0xFD9
 13660                           status	equ	0xFD8
 13661                           
 13662 ;; *************** function _USBDeviceInit *****************
 13663 ;; Defined at:
 13664 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;  i               1    8[BANK0 ] unsigned char 
 13669 ;; Return value:  Size  Location     Type
 13670 ;;		None               void
 13671 ;; Registers used:
 13672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13679 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;Total ram usage:        1 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; Hardware stack levels required when called:   12
 13685 ;; This function calls:
 13686 ;;		_memset
 13687 ;; This function is called by:
 13688 ;;		_USB_init
 13689 ;; This function uses a non-reentrant model
 13690 ;;
 13691                           
 13692                           	psect	text53
 13693  012752                     __ptext53:
 13694                           	opt stack 0
 13695  012752                     _USBDeviceInit:
 13696                           	opt stack 16
 13697                           
 13698                           ;usb_device.c: 300: uint8_t i;
 13699                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 13700                           
 13701                           ;incstack = 0
 13702  012752  98A0               	bcf	4000,4,c	;volatile
 13703                           
 13704                           ;usb_device.c: 305: {UEIR = 0;};
 13705  012754  0E00               	movlw	0
 13706  012756  6E63               	movwf	3939,c	;volatile
 13707                           
 13708                           ;usb_device.c: 308: {UIR = 0;};
 13709  012758  0E00               	movlw	0
 13710  01275A  6E62               	movwf	3938,c	;volatile
 13711                           
 13712                           ;usb_device.c: 311: UEP0 = 0;
 13713  01275C  0E00               	movlw	0
 13714  01275E  010F               	movlb	15	; () banked
 13715  012760  6F26               	movwf	38,b	;volatile
 13716                           
 13717                           ; BSR set to: 15
 13718                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 13719  012762  0E27               	movlw	39
 13720  012764  0100               	movlb	0	; () banked
 13721  012766  6FB9               	movwf	memset@p1& (0+255),b
 13722  012768  0E0F               	movlw	15
 13723  01276A  0100               	movlb	0	; () banked
 13724  01276C  6FBA               	movwf	(memset@p1+1)& (0+255),b
 13725  01276E  0E00               	movlw	0
 13726  012770  0100               	movlb	0	; () banked
 13727  012772  6FBC               	movwf	(memset@c+1)& (0+255),b
 13728  012774  0E00               	movlw	0
 13729  012776  6FBB               	movwf	memset@c& (0+255),b
 13730  012778  0E00               	movlw	0
 13731  01277A  0100               	movlb	0	; () banked
 13732  01277C  6FBE               	movwf	(memset@n+1)& (0+255),b
 13733  01277E  0E02               	movlw	2
 13734  012780  6FBD               	movwf	memset@n& (0+255),b
 13735  012782  ECD9  F0AD         	call	_memset	;wreg free
 13736                           
 13737                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13738  012786  0E16               	movlw	22
 13739  012788  010F               	movlb	15	; () banked
 13740  01278A  6F39               	movwf	57,b	;volatile
 13741                           
 13742                           ; BSR set to: 15
 13743  01278C  0E9F               	movlw	159
 13744  01278E  010F               	movlb	15	; () banked
 13745  012790  6F37               	movwf	55,b	;volatile
 13746                           
 13747                           ; BSR set to: 15
 13748  012792  0E7B               	movlw	123
 13749  012794  010F               	movlb	15	; () banked
 13750  012796  6F36               	movwf	54,b	;volatile
 13751                           
 13752                           ; BSR set to: 15
 13753                           ;usb_device.c: 318: ;
 13754                           ;usb_device.c: 321: ;
 13755                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13756  012798  0E00               	movlw	0
 13757  01279A  0100               	movlb	0	; () banked
 13758  01279C  6FC1               	movwf	USBDeviceInit@i& (0+255),b
 13759  01279E                     l9843:
 13760                           
 13761                           ; BSR set to: 0
 13762  01279E  0E0B               	movlw	11
 13763  0127A0  0100               	movlb	0	; () banked
 13764  0127A2  65C1               	cpfsgt	USBDeviceInit@i& (0+255),b
 13765  0127A4  D001               	goto	l9847
 13766  0127A6  D010               	goto	l1108
 13767  0127A8                     l9847:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;usb_device.c: 325: {
 13771                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 13772  0127A8  0100               	movlb	0	; () banked
 13773  0127AA  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13774  0127AC  0D04               	mullw	4
 13775  0127AE  0E00               	movlw	0
 13776  0127B0  24F3               	addwf	prodl,w,c
 13777  0127B2  6ED9               	movwf	fsr2l,c
 13778  0127B4  0E0D               	movlw	13
 13779  0127B6  20F4               	addwfc	prodh,w,c
 13780  0127B8  6EDA               	movwf	fsr2h,c
 13781  0127BA  6ADE               	clrf	postinc2,c
 13782  0127BC  6ADE               	clrf	postinc2,c
 13783  0127BE  6ADE               	clrf	postinc2,c
 13784  0127C0  6ADD               	clrf	postdec2,c
 13785                           
 13786                           ; BSR set to: 0
 13787  0127C2  0100               	movlb	0	; () banked
 13788  0127C4  2BC1               	incf	USBDeviceInit@i& (0+255),f,b
 13789  0127C6  D7EB               	goto	l9843
 13790  0127C8                     l1108:
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;usb_device.c: 327: }
 13794                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 13795  0127C8  8C65               	bsf	3941,6,c	;volatile
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;usb_device.c: 333: UADDR = 0x00;
 13799  0127CA  0E00               	movlw	0
 13800  0127CC  010F               	movlb	15	; () banked
 13801  0127CE  6F38               	movwf	56,b	;volatile
 13802                           
 13803                           ; BSR set to: 15
 13804                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 13805  0127D0  9865               	bcf	3941,4,c	;volatile
 13806                           
 13807                           ; BSR set to: 15
 13808                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 13809  0127D2  9C65               	bcf	3941,6,c	;volatile
 13810                           
 13811                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 13812  0127D4  D00C               	goto	l9867
 13813  0127D6                     l9859:
 13814                           
 13815                           ;usb_device.c: 343: {
 13816                           ;usb_device.c: 344: (UIR &= 0xF7);
 13817  0127D6  9662               	bcf	3938,3,c	;volatile
 13818                           
 13819                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 13820  0127D8  0E00               	movlw	0
 13821  0127DA  0100               	movlb	0	; () banked
 13822  0127DC  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 13826  0127DE  0E00               	movlw	0
 13827  0127E0  0100               	movlb	0	; () banked
 13828  0127E2  6F6F               	movwf	(_outPipes+3)& (0+255),b	;volatile
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 13832  0127E4  0E00               	movlw	0
 13833  0127E6  0100               	movlb	0	; () banked
 13834  0127E8  6F71               	movwf	(_outPipes+5)& (0+255),b	;volatile
 13835  0127EA  0E00               	movlw	0
 13836  0127EC  6F70               	movwf	(_outPipes+4)& (0+255),b	;volatile
 13837  0127EE                     l9867:
 13838  0127EE  B662               	btfsc	3938,3,c	;volatile
 13839  0127F0  D7F2               	goto	l9859
 13840                           
 13841                           ;usb_device.c: 349: }
 13842                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 13843  0127F2  0E01               	movlw	1
 13844  0127F4  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13845                           
 13846                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 13847  0127F6  0E01               	movlw	1
 13848  0127F8  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13849                           
 13850                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 13851  0127FA  0E00               	movlw	0
 13852  0127FC  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13853                           
 13854                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 13855  0127FE  0E00               	movlw	0
 13856  012800  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13857                           
 13858                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 13859  012802  0E00               	movlw	0
 13860  012804  0100               	movlb	0	; () banked
 13861  012806  6FA1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 13862                           
 13863                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 13864  012808  0E00               	movlw	0
 13865  01280A  0100               	movlb	0	; () banked
 13866  01280C  6FC1               	movwf	USBDeviceInit@i& (0+255),b
 13867  01280E                     l9871:
 13868                           
 13869                           ; BSR set to: 0
 13870  01280E  0E02               	movlw	2
 13871  012810  0100               	movlb	0	; () banked
 13872  012812  65C1               	cpfsgt	USBDeviceInit@i& (0+255),b
 13873  012814  D001               	goto	l9875
 13874  012816  D033               	goto	l9881
 13875  012818                     l9875:
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;usb_device.c: 363: {
 13879                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 13880  012818  0100               	movlb	0	; () banked
 13881  01281A  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13882  01281C  0D02               	mullw	2
 13883  01281E  0E7B               	movlw	low _pBDTEntryIn
 13884  012820  24F3               	addwf	prodl,w,c
 13885  012822  6ED9               	movwf	fsr2l,c
 13886  012824  0E00               	movlw	high _pBDTEntryIn
 13887  012826  20F4               	addwfc	prodh,w,c
 13888  012828  6EDA               	movwf	fsr2h,c
 13889  01282A  0E00               	movlw	0
 13890  01282C  6EDE               	movwf	postinc2,c
 13891  01282E  0E00               	movlw	0
 13892  012830  6EDD               	movwf	postdec2,c
 13893                           
 13894                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 13895  012832  0100               	movlb	0	; () banked
 13896  012834  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13897  012836  0D02               	mullw	2
 13898  012838  0E81               	movlw	low _pBDTEntryOut
 13899  01283A  24F3               	addwf	prodl,w,c
 13900  01283C  6ED9               	movwf	fsr2l,c
 13901  01283E  0E00               	movlw	high _pBDTEntryOut
 13902  012840  20F4               	addwfc	prodh,w,c
 13903  012842  6EDA               	movwf	fsr2h,c
 13904  012844  0E00               	movlw	0
 13905  012846  6EDE               	movwf	postinc2,c
 13906  012848  0E00               	movlw	0
 13907  01284A  6EDD               	movwf	postdec2,c
 13908                           
 13909                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 13910  01284C  0100               	movlb	0	; () banked
 13911  01284E  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13912  012850  0D01               	mullw	1
 13913  012852  0E8A               	movlw	low _ep_data_in
 13914  012854  24F3               	addwf	prodl,w,c
 13915  012856  6ED9               	movwf	fsr2l,c
 13916  012858  0E00               	movlw	high _ep_data_in
 13917  01285A  20F4               	addwfc	prodh,w,c
 13918  01285C  6EDA               	movwf	fsr2h,c
 13919  01285E  0E00               	movlw	0
 13920  012860  6EDF               	movwf	indf2,c
 13921                           
 13922                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 13923  012862  0100               	movlb	0	; () banked
 13924  012864  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13925  012866  0D01               	mullw	1
 13926  012868  0E8D               	movlw	low _ep_data_out
 13927  01286A  24F3               	addwf	prodl,w,c
 13928  01286C  6ED9               	movwf	fsr2l,c
 13929  01286E  0E00               	movlw	high _ep_data_out
 13930  012870  20F4               	addwfc	prodh,w,c
 13931  012872  6EDA               	movwf	fsr2h,c
 13932  012874  0E00               	movlw	0
 13933  012876  6EDF               	movwf	indf2,c
 13934                           
 13935                           ; BSR set to: 0
 13936  012878  0100               	movlb	0	; () banked
 13937  01287A  2BC1               	incf	USBDeviceInit@i& (0+255),f,b
 13938  01287C  D7C8               	goto	l9871
 13939  01287E                     l9881:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;usb_device.c: 368: }
 13943                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13944  01287E  0E08               	movlw	8
 13945  012880  0100               	movlb	0	; () banked
 13946  012882  6F7B               	movwf	_pBDTEntryIn& (0+255),b
 13947  012884  0E0D               	movlw	13
 13948  012886  0100               	movlb	0	; () banked
 13949  012888  6F7C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 13953  01288A  0E16               	movlw	22
 13954  01288C  010F               	movlb	15	; () banked
 13955  01288E  6F26               	movwf	38,b	;volatile
 13956                           
 13957                           ; BSR set to: 15
 13958                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13959  012890  0E0D               	movlw	13
 13960  012892  010D               	movlb	13	; () banked
 13961  012894  6F03               	movwf	3,b	;volatile
 13962  012896  0E30               	movlw	48
 13963  012898  6F02               	movwf	2,b	;volatile
 13964                           
 13965                           ; BSR set to: 13
 13966                           ;usb_device.c: 376: BDT[0].CNT = 8;
 13967  01289A  0E08               	movlw	8
 13968  01289C  010D               	movlb	13	; () banked
 13969  01289E  6F01               	movwf	1,b	;volatile
 13970                           
 13971                           ; BSR set to: 13
 13972                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 13973  0128A0  0E04               	movlw	4
 13974  0128A2  010D               	movlb	13	; () banked
 13975  0128A4  6F00               	movwf	0,b	;volatile
 13976                           
 13977                           ; BSR set to: 13
 13978                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 13979  0128A6  010D               	movlb	13	; () banked
 13980  0128A8  8F00               	bsf	0,7,b	;volatile
 13981                           
 13982                           ; BSR set to: 13
 13983                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 13984  0128AA  0E00               	movlw	0
 13985  0128AC  6E55               	movwf	_USBActiveConfiguration,c	;volatile
 13986                           
 13987                           ; BSR set to: 13
 13988                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 13989  0128AE  0E00               	movlw	0
 13990  0128B0  6E45               	movwf	_USBDeviceState,c	;volatile
 13991                           
 13992                           ; BSR set to: 13
 13993  0128B2  0012               	return		;funcret
 13994  0128B4                     __end_of_USBDeviceInit:
 13995                           	opt stack 0
 13996                           tblptru	equ	0xFF8
 13997                           tblptrh	equ	0xFF7
 13998                           tblptrl	equ	0xFF6
 13999                           tablat	equ	0xFF5
 14000                           prodh	equ	0xFF4
 14001                           prodl	equ	0xFF3
 14002                           intcon	equ	0xFF2
 14003                           intcon2	equ	0xFF1
 14004                           postinc0	equ	0xFEE
 14005                           wreg	equ	0xFE8
 14006                           indf1	equ	0xFE7
 14007                           postinc1	equ	0xFE6
 14008                           postdec1	equ	0xFE5
 14009                           fsr1h	equ	0xFE2
 14010                           fsr1l	equ	0xFE1
 14011                           indf2	equ	0xFDF
 14012                           postinc2	equ	0xFDE
 14013                           postdec2	equ	0xFDD
 14014                           plusw2	equ	0xFDB
 14015                           fsr2h	equ	0xFDA
 14016                           fsr2l	equ	0xFD9
 14017                           status	equ	0xFD8
 14018                           
 14019 ;; *************** function _memset *****************
 14020 ;; Defined at:
 14021 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  p1              2    0[BANK0 ] PTR void 
 14024 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14025 ;;  c               2    2[BANK0 ] int 
 14026 ;;  n               2    4[BANK0 ] unsigned int 
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;  p               2    6[BANK0 ] PTR unsigned char 
 14029 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  2    0[BANK0 ] PTR void 
 14032 ;; Registers used:
 14033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14042 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14043 ;;Total ram usage:        8 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:   11
 14046 ;; This function calls:
 14047 ;;		Nothing
 14048 ;; This function is called by:
 14049 ;;		_USBDeviceInit
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           	psect	text54
 14054  015BB2                     __ptext54:
 14055                           	opt stack 0
 14056  015BB2                     _memset:
 14057                           	opt stack 16
 14058                           
 14059                           ; BSR set to: 13
 14060                           ;incstack = 0
 14061  015BB2  C0B9  F0BF         	movff	memset@p1,memset@p
 14062  015BB6  C0BA  F0C0         	movff	memset@p1+1,memset@p+1
 14063  015BBA  D009               	goto	l9403
 14064  015BBC                     l9399:
 14065  015BBC  C0BF  FFD9         	movff	memset@p,fsr2l
 14066  015BC0  C0C0  FFDA         	movff	memset@p+1,fsr2h
 14067  015BC4  C0BB  FFDF         	movff	memset@c,indf2
 14068  015BC8  0100               	movlb	0	; () banked
 14069  015BCA  4BBF               	infsnz	memset@p& (0+255),f,b
 14070  015BCC  2BC0               	incf	(memset@p+1)& (0+255),f,b
 14071  015BCE                     l9403:
 14072  015BCE  0100               	movlb	0	; () banked
 14073  015BD0  07BD               	decf	memset@n& (0+255),f,b
 14074  015BD2  A0D8               	btfss	status,0,c
 14075  015BD4  07BE               	decf	(memset@n+1)& (0+255),f,b
 14076  015BD6  0100               	movlb	0	; () banked
 14077  015BD8  29BD               	incf	memset@n& (0+255),w,b
 14078  015BDA  E1F0               	bnz	l9399
 14079  015BDC  0100               	movlb	0	; () banked
 14080  015BDE  29BE               	incf	(memset@n+1)& (0+255),w,b
 14081  015BE0  B4D8               	btfsc	status,2,c
 14082  015BE2  0012               	return	
 14083  015BE4  D7EB               	goto	l9399
 14084  015BE6                     __end_of_memset:
 14085                           	opt stack 0
 14086                           tblptru	equ	0xFF8
 14087                           tblptrh	equ	0xFF7
 14088                           tblptrl	equ	0xFF6
 14089                           tablat	equ	0xFF5
 14090                           prodh	equ	0xFF4
 14091                           prodl	equ	0xFF3
 14092                           intcon	equ	0xFF2
 14093                           intcon2	equ	0xFF1
 14094                           postinc0	equ	0xFEE
 14095                           wreg	equ	0xFE8
 14096                           indf1	equ	0xFE7
 14097                           postinc1	equ	0xFE6
 14098                           postdec1	equ	0xFE5
 14099                           fsr1h	equ	0xFE2
 14100                           fsr1l	equ	0xFE1
 14101                           indf2	equ	0xFDF
 14102                           postinc2	equ	0xFDE
 14103                           postdec2	equ	0xFDD
 14104                           plusw2	equ	0xFDB
 14105                           fsr2h	equ	0xFDA
 14106                           fsr2l	equ	0xFD9
 14107                           status	equ	0xFD8
 14108                           
 14109 ;; *************** function _USBDeviceAttach *****************
 14110 ;; Defined at:
 14111 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;		None
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;		None               void
 14118 ;; Registers used:
 14119 ;;		wreg, status,2
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14129 ;;Total ram usage:        0 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:   11
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_USB_init
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text55
 14140  015AD6                     __ptext55:
 14141                           	opt stack 0
 14142  015AD6                     _USBDeviceAttach:
 14143                           	opt stack 17
 14144                           
 14145                           ;usb_device.c: 1356: {
 14146                           ;usb_device.c: 1357: if(1 == 1)
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;incstack = 0
 14150  015AD6  5045               	movf	_USBDeviceState,w,c	;volatile
 14151  015AD8  A4D8               	btfss	status,2,c
 14152  015ADA  0012               	return	
 14153                           
 14154                           ;usb_device.c: 1358: {
 14155                           ;usb_device.c: 1360: UCON = 0;
 14156  015ADC  0E00               	movlw	0
 14157  015ADE  6E65               	movwf	3941,c	;volatile
 14158                           
 14159                           ;usb_device.c: 1363: UIE = 0;
 14160  015AE0  0E00               	movlw	0
 14161  015AE2  010F               	movlb	15	; () banked
 14162  015AE4  6F36               	movwf	54,b	;volatile
 14163                           
 14164                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 14165  015AE6  0E16               	movlw	22
 14166  015AE8  010F               	movlb	15	; () banked
 14167  015AEA  6F39               	movwf	57,b	;volatile
 14168  015AEC  0E9F               	movlw	159
 14169  015AEE  010F               	movlb	15	; () banked
 14170  015AF0  6F37               	movwf	55,b	;volatile
 14171  015AF2  0E7B               	movlw	123
 14172  015AF4  010F               	movlb	15	; () banked
 14173  015AF6  6F36               	movwf	54,b	;volatile
 14174                           
 14175                           ; BSR set to: 15
 14176                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 14177  015AF8  8ED0               	bsf	4048,7,c	;volatile
 14178                           
 14179                           ; BSR set to: 15
 14180  015AFA  88A2               	bsf	4002,4,c	;volatile
 14181                           
 14182                           ; BSR set to: 15
 14183  015AFC  88A0               	bsf	4000,4,c	;volatile
 14184                           
 14185                           ; BSR set to: 15
 14186  015AFE  8EF2               	bsf	intcon,7,c	;volatile
 14187                           
 14188                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 14189  015B00  D001               	goto	l1169
 14190  015B02                     l1170:
 14191  015B02  8665               	bsf	3941,3,c	;volatile
 14192  015B04                     l1169:
 14193  015B04  A665               	btfss	3941,3,c	;volatile
 14194  015B06  D7FD               	goto	l1170
 14195                           
 14196                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 14197  015B08  0E01               	movlw	1
 14198  015B0A  6E45               	movwf	_USBDeviceState,c	;volatile
 14199  015B0C  0012               	return	
 14200  015B0E                     __end_of_USBDeviceAttach:
 14201                           	opt stack 0
 14202                           tblptru	equ	0xFF8
 14203                           tblptrh	equ	0xFF7
 14204                           tblptrl	equ	0xFF6
 14205                           tablat	equ	0xFF5
 14206                           prodh	equ	0xFF4
 14207                           prodl	equ	0xFF3
 14208                           intcon	equ	0xFF2
 14209                           intcon2	equ	0xFF1
 14210                           postinc0	equ	0xFEE
 14211                           wreg	equ	0xFE8
 14212                           indf1	equ	0xFE7
 14213                           postinc1	equ	0xFE6
 14214                           postdec1	equ	0xFE5
 14215                           fsr1h	equ	0xFE2
 14216                           fsr1l	equ	0xFE1
 14217                           indf2	equ	0xFDF
 14218                           postinc2	equ	0xFDE
 14219                           postdec2	equ	0xFDD
 14220                           plusw2	equ	0xFDB
 14221                           fsr2h	equ	0xFDA
 14222                           fsr2l	equ	0xFD9
 14223                           status	equ	0xFD8
 14224                           
 14225 ;; *************** function _RTCC_init *****************
 14226 ;; Defined at:
 14227 ;;		line 56 in file "../My_header\My_RTCC.h"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;		None
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;		None
 14232 ;; Return value:  Size  Location     Type
 14233 ;;		None               void
 14234 ;; Registers used:
 14235 ;;		wreg, status,2
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14245 ;;Total ram usage:        0 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:   11
 14248 ;; This function calls:
 14249 ;;		Nothing
 14250 ;; This function is called by:
 14251 ;;		_main_init
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text56
 14256  015C76                     __ptext56:
 14257                           	opt stack 0
 14258  015C76                     _RTCC_init:
 14259                           	opt stack 18
 14260                           
 14261                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 14262                           
 14263                           ;incstack = 0
 14264  015C76  010F               	movlb	15	; () banked
 14265  015C78  8B3F               	bsf	63,5,b	;volatile
 14266                           
 14267                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 14268  015C7A  010F               	movlb	15	; () banked
 14269  015C7C  BB3F               	btfsc	63,5,b	;volatile
 14270  015C7E  D006               	goto	l10257
 14271                           
 14272                           ; BSR set to: 15
 14273                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 14274  015C80  0E55               	movlw	85
 14275  015C82  6EA7               	movwf	4007,c	;volatile
 14276                           
 14277                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 14278  015C84  0EAA               	movlw	170
 14279  015C86  6EA7               	movwf	4007,c	;volatile
 14280                           
 14281                           ; BSR set to: 15
 14282                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 14283  015C88  010F               	movlb	15	; () banked
 14284  015C8A  8B3F               	bsf	63,5,b	;volatile
 14285  015C8C                     l10257:
 14286                           
 14287                           ; BSR set to: 15
 14288                           ;My_header\My_RTCC.h: 62: }
 14289                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 14290  015C8C  010F               	movlb	15	; () banked
 14291  015C8E  8F3F               	bsf	63,7,b	;volatile
 14292                           
 14293                           ; BSR set to: 15
 14294                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 14295  015C90  010F               	movlb	15	; () banked
 14296  015C92  953F               	bcf	63,2,b	;volatile
 14297                           
 14298                           ; BSR set to: 15
 14299                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 14300  015C94  010F               	movlb	15	; () banked
 14301  015C96  833C               	bsf	60,1,b	;volatile
 14302                           
 14303                           ; BSR set to: 15
 14304                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 14305  015C98  010F               	movlb	15	; () banked
 14306  015C9A  853C               	bsf	60,2,b	;volatile
 14307                           
 14308                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 14309  015C9C  0E00               	movlw	0
 14310  015C9E  010F               	movlb	15	; () banked
 14311  015CA0  6F3E               	movwf	62,b	;volatile
 14312                           
 14313                           ; BSR set to: 15
 14314  015CA2  0012               	return		;funcret
 14315  015CA4                     __end_of_RTCC_init:
 14316                           	opt stack 0
 14317                           tblptru	equ	0xFF8
 14318                           tblptrh	equ	0xFF7
 14319                           tblptrl	equ	0xFF6
 14320                           tablat	equ	0xFF5
 14321                           prodh	equ	0xFF4
 14322                           prodl	equ	0xFF3
 14323                           intcon	equ	0xFF2
 14324                           intcon2	equ	0xFF1
 14325                           postinc0	equ	0xFEE
 14326                           wreg	equ	0xFE8
 14327                           indf1	equ	0xFE7
 14328                           postinc1	equ	0xFE6
 14329                           postdec1	equ	0xFE5
 14330                           fsr1h	equ	0xFE2
 14331                           fsr1l	equ	0xFE1
 14332                           indf2	equ	0xFDF
 14333                           postinc2	equ	0xFDE
 14334                           postdec2	equ	0xFDD
 14335                           plusw2	equ	0xFDB
 14336                           fsr2h	equ	0xFDA
 14337                           fsr2l	equ	0xFD9
 14338                           status	equ	0xFD8
 14339                           
 14340 ;; *************** function _I2C_init *****************
 14341 ;; Defined at:
 14342 ;;		line 25 in file "../My_header\My_I2C.h"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;		None
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;		None
 14347 ;; Return value:  Size  Location     Type
 14348 ;;		None               void
 14349 ;; Registers used:
 14350 ;;		wreg, status,2
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;Total ram usage:        0 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:   11
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_main_init
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           	psect	text57
 14371  015FBC                     __ptext57:
 14372                           	opt stack 0
 14373  015FBC                     _I2C_init:
 14374                           	opt stack 18
 14375                           
 14376                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 14377                           
 14378                           ; BSR set to: 15
 14379                           ;incstack = 0
 14380  015FBC  0E80               	movlw	128
 14381  015FBE  6EC7               	movwf	4039,c	;volatile
 14382                           
 14383                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 14384  015FC0  0E28               	movlw	40
 14385  015FC2  6EC6               	movwf	4038,c	;volatile
 14386                           
 14387                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 14388  015FC4  0E13               	movlw	19
 14389  015FC6  6EC8               	movwf	4040,c	;volatile
 14390                           
 14391                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 14392  015FC8  969E               	bcf	3998,3,c	;volatile
 14393                           
 14394                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 14395  015FCA  96A1               	bcf	4001,3,c	;volatile
 14396  015FCC  0012               	return		;funcret
 14397  015FCE                     __end_of_I2C_init:
 14398                           	opt stack 0
 14399                           tblptru	equ	0xFF8
 14400                           tblptrh	equ	0xFF7
 14401                           tblptrl	equ	0xFF6
 14402                           tablat	equ	0xFF5
 14403                           prodh	equ	0xFF4
 14404                           prodl	equ	0xFF3
 14405                           intcon	equ	0xFF2
 14406                           intcon2	equ	0xFF1
 14407                           postinc0	equ	0xFEE
 14408                           wreg	equ	0xFE8
 14409                           indf1	equ	0xFE7
 14410                           postinc1	equ	0xFE6
 14411                           postdec1	equ	0xFE5
 14412                           fsr1h	equ	0xFE2
 14413                           fsr1l	equ	0xFE1
 14414                           indf2	equ	0xFDF
 14415                           postinc2	equ	0xFDE
 14416                           postdec2	equ	0xFDD
 14417                           plusw2	equ	0xFDB
 14418                           fsr2h	equ	0xFDA
 14419                           fsr2l	equ	0xFD9
 14420                           status	equ	0xFD8
 14421                           
 14422 ;; *************** function _I2C_LCD_init *****************
 14423 ;; Defined at:
 14424 ;;		line 164 in file "../My_header\My_I2C.h"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;		None
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;		None               void
 14431 ;; Registers used:
 14432 ;;		wreg, status,2, status,0, cstack
 14433 ;; Tracked objects:
 14434 ;;		On entry : 0/0
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14442 ;;Total ram usage:        0 bytes
 14443 ;; Hardware stack levels used:    1
 14444 ;; Hardware stack levels required when called:   15
 14445 ;; This function calls:
 14446 ;;		_Delay_ms
 14447 ;;		_I2C_LCD_Clear
 14448 ;;		_I2C_LCD_Command
 14449 ;; This function is called by:
 14450 ;;		_main_init
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           	psect	text58
 14455  015654                     __ptext58:
 14456                           	opt stack 0
 14457  015654                     _I2C_LCD_init:
 14458                           	opt stack 14
 14459                           
 14460                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 14461                           
 14462                           ;incstack = 0
 14463  015654  0E00               	movlw	0
 14464  015656  0100               	movlb	0	; () banked
 14465  015658  6FBA               	movwf	(Delay_ms@ms+1)& (0+255),b
 14466  01565A  0E28               	movlw	40
 14467  01565C  6FB9               	movwf	Delay_ms@ms& (0+255),b
 14468  01565E  ECAB  F0AE         	call	_Delay_ms	;wreg free
 14469                           
 14470                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 14471  015662  0E38               	movlw	56
 14472  015664  EC87  F0AD         	call	_I2C_LCD_Command
 14473                           
 14474                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 14475  015668  0E39               	movlw	57
 14476  01566A  EC87  F0AD         	call	_I2C_LCD_Command
 14477                           
 14478                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 14479  01566E  0E14               	movlw	20
 14480  015670  EC87  F0AD         	call	_I2C_LCD_Command
 14481                           
 14482                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 14483  015674  0E70               	movlw	112
 14484  015676  EC87  F0AD         	call	_I2C_LCD_Command
 14485                           
 14486                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 14487  01567A  0E56               	movlw	86
 14488  01567C  EC87  F0AD         	call	_I2C_LCD_Command
 14489                           
 14490                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 14491  015680  0E6C               	movlw	108
 14492  015682  EC87  F0AD         	call	_I2C_LCD_Command
 14493                           
 14494                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 14495  015686  0E00               	movlw	0
 14496  015688  0100               	movlb	0	; () banked
 14497  01568A  6FBA               	movwf	(Delay_ms@ms+1)& (0+255),b
 14498  01568C  0EC8               	movlw	200
 14499  01568E  6FB9               	movwf	Delay_ms@ms& (0+255),b
 14500  015690  ECAB  F0AE         	call	_Delay_ms	;wreg free
 14501                           
 14502                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 14503  015694  0E38               	movlw	56
 14504  015696  EC87  F0AD         	call	_I2C_LCD_Command
 14505                           
 14506                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 14507  01569A  0E0C               	movlw	12
 14508  01569C  EC87  F0AD         	call	_I2C_LCD_Command
 14509                           
 14510                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 14511  0156A0  0E06               	movlw	6
 14512  0156A2  EC87  F0AD         	call	_I2C_LCD_Command
 14513                           
 14514                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 14515  0156A6  ECBA  F0AF         	call	_I2C_LCD_Clear	;wreg free
 14516  0156AA  0012               	return		;funcret
 14517  0156AC                     __end_of_I2C_LCD_init:
 14518                           	opt stack 0
 14519                           tblptru	equ	0xFF8
 14520                           tblptrh	equ	0xFF7
 14521                           tblptrl	equ	0xFF6
 14522                           tablat	equ	0xFF5
 14523                           prodh	equ	0xFF4
 14524                           prodl	equ	0xFF3
 14525                           intcon	equ	0xFF2
 14526                           intcon2	equ	0xFF1
 14527                           postinc0	equ	0xFEE
 14528                           wreg	equ	0xFE8
 14529                           indf1	equ	0xFE7
 14530                           postinc1	equ	0xFE6
 14531                           postdec1	equ	0xFE5
 14532                           fsr1h	equ	0xFE2
 14533                           fsr1l	equ	0xFE1
 14534                           indf2	equ	0xFDF
 14535                           postinc2	equ	0xFDE
 14536                           postdec2	equ	0xFDD
 14537                           plusw2	equ	0xFDB
 14538                           fsr2h	equ	0xFDA
 14539                           fsr2l	equ	0xFD9
 14540                           status	equ	0xFD8
 14541                           
 14542 ;; *************** function _I2C_LCD_Clear *****************
 14543 ;; Defined at:
 14544 ;;		line 107 in file "../My_header\My_I2C.h"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;		None
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;		None               void
 14551 ;; Registers used:
 14552 ;;		wreg, status,2, status,0, cstack
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14562 ;;Total ram usage:        1 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; Hardware stack levels required when called:   14
 14565 ;; This function calls:
 14566 ;;		_I2C_LCD_Command
 14567 ;; This function is called by:
 14568 ;;		_I2C_LCD_init
 14569 ;;		_display_LCD
 14570 ;;		_sleep_loop
 14571 ;; This function uses a non-reentrant model
 14572 ;;
 14573                           
 14574                           	psect	text59
 14575  015F74                     __ptext59:
 14576                           	opt stack 0
 14577  015F74                     _I2C_LCD_Clear:
 14578                           	opt stack 14
 14579                           
 14580                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 14581                           
 14582                           ;incstack = 0
 14583  015F74  0E01               	movlw	1
 14584  015F76  EC87  F0AD         	call	_I2C_LCD_Command
 14585                           
 14586                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 14587  015F7A  0E12               	movlw	18
 14588  015F7C  0100               	movlb	0	; () banked
 14589  015F7E  6FBF               	movwf	??_I2C_LCD_Clear& (0+255),b
 14590  015F80  0E23               	movlw	35
 14591  015F82                     u12557:
 14592  015F82  2EE8               	decfsz	wreg,f,c
 14593  015F84  D7FE               	goto	u12557
 14594  015F86  2FBF               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 14595  015F88  D7FC               	goto	u12557
 14596  015F8A  F000               	nop	
 14597  015F8C  0012               	return		;funcret
 14598  015F8E                     __end_of_I2C_LCD_Clear:
 14599                           	opt stack 0
 14600                           tblptru	equ	0xFF8
 14601                           tblptrh	equ	0xFF7
 14602                           tblptrl	equ	0xFF6
 14603                           tablat	equ	0xFF5
 14604                           prodh	equ	0xFF4
 14605                           prodl	equ	0xFF3
 14606                           intcon	equ	0xFF2
 14607                           intcon2	equ	0xFF1
 14608                           postinc0	equ	0xFEE
 14609                           wreg	equ	0xFE8
 14610                           indf1	equ	0xFE7
 14611                           postinc1	equ	0xFE6
 14612                           postdec1	equ	0xFE5
 14613                           fsr1h	equ	0xFE2
 14614                           fsr1l	equ	0xFE1
 14615                           indf2	equ	0xFDF
 14616                           postinc2	equ	0xFDE
 14617                           postdec2	equ	0xFDD
 14618                           plusw2	equ	0xFDB
 14619                           fsr2h	equ	0xFDA
 14620                           fsr2l	equ	0xFD9
 14621                           status	equ	0xFD8
 14622                           
 14623 ;; *************** function _I2C_LCD_Command *****************
 14624 ;; Defined at:
 14625 ;;		line 94 in file "../My_header\My_I2C.h"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  c               1    wreg     unsigned char 
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  c               1    4[BANK0 ] unsigned char 
 14630 ;;  ans             1    5[BANK0 ] unsigned char 
 14631 ;; Return value:  Size  Location     Type
 14632 ;;		None               void
 14633 ;; Registers used:
 14634 ;;		wreg, status,2, status,0, cstack
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14641 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14644 ;;Total ram usage:        2 bytes
 14645 ;; Hardware stack levels used:    1
 14646 ;; Hardware stack levels required when called:   13
 14647 ;; This function calls:
 14648 ;;		_I2C_Send
 14649 ;;		_I2C_Start
 14650 ;;		_I2C_Stop
 14651 ;; This function is called by:
 14652 ;;		_I2C_LCD_Clear
 14653 ;;		_I2C_LCD_SetCursor
 14654 ;;		_I2C_LCD_init
 14655 ;; This function uses a non-reentrant model
 14656 ;;
 14657                           
 14658                           	psect	text60
 14659  015B0E                     __ptext60:
 14660                           	opt stack 0
 14661  015B0E                     _I2C_LCD_Command:
 14662                           	opt stack 13
 14663                           
 14664                           ;incstack = 0
 14665                           ;I2C_LCD_Command@c stored from wreg
 14666  015B0E  0100               	movlb	0	; () banked
 14667  015B10  6FBD               	movwf	I2C_LCD_Command@c& (0+255),b
 14668                           
 14669                           ;My_header\My_I2C.h: 95: uint8_t ans;
 14670                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 14671  015B12  0E00               	movlw	0
 14672  015B14  0100               	movlb	0	; () banked
 14673  015B16  6FBB               	movwf	I2C_Start@rw& (0+255),b
 14674  015B18  0E3E               	movlw	62
 14675  015B1A  EC0C  F0AE         	call	_I2C_Start
 14676  015B1E  0100               	movlb	0	; () banked
 14677  015B20  6FBE               	movwf	I2C_LCD_Command@ans& (0+255),b
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 14681  015B22  0100               	movlb	0	; () banked
 14682  015B24  51BE               	movf	I2C_LCD_Command@ans& (0+255),w,b
 14683  015B26  0100               	movlb	0	; () banked
 14684  015B28  A4D8               	btfss	status,2,c
 14685  015B2A  D007               	goto	l343
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 14689  015B2C  0E80               	movlw	128
 14690  015B2E  ECC7  F0AF         	call	_I2C_Send
 14691                           
 14692                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 14693  015B32  0100               	movlb	0	; () banked
 14694  015B34  51BD               	movf	I2C_LCD_Command@c& (0+255),w,b
 14695  015B36  ECC7  F0AF         	call	_I2C_Send
 14696  015B3A                     l343:
 14697                           
 14698                           ;My_header\My_I2C.h: 102: }
 14699                           ;My_header\My_I2C.h: 103: I2C_Stop();
 14700  015B3A  ECEC  F0AF         	call	_I2C_Stop	;wreg free
 14701                           
 14702                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 14703  015B3E  0E68               	movlw	104
 14704  015B40                     u12567:
 14705  015B40  2EE8               	decfsz	wreg,f,c
 14706  015B42  D7FE               	goto	u12567
 14707  015B44  0012               	return		;funcret
 14708  015B46                     __end_of_I2C_LCD_Command:
 14709                           	opt stack 0
 14710                           tblptru	equ	0xFF8
 14711                           tblptrh	equ	0xFF7
 14712                           tblptrl	equ	0xFF6
 14713                           tablat	equ	0xFF5
 14714                           prodh	equ	0xFF4
 14715                           prodl	equ	0xFF3
 14716                           intcon	equ	0xFF2
 14717                           intcon2	equ	0xFF1
 14718                           postinc0	equ	0xFEE
 14719                           wreg	equ	0xFE8
 14720                           indf1	equ	0xFE7
 14721                           postinc1	equ	0xFE6
 14722                           postdec1	equ	0xFE5
 14723                           fsr1h	equ	0xFE2
 14724                           fsr1l	equ	0xFE1
 14725                           indf2	equ	0xFDF
 14726                           postinc2	equ	0xFDE
 14727                           postdec2	equ	0xFDD
 14728                           plusw2	equ	0xFDB
 14729                           fsr2h	equ	0xFDA
 14730                           fsr2l	equ	0xFD9
 14731                           status	equ	0xFD8
 14732                           
 14733 ;; *************** function _I2C_Stop *****************
 14734 ;; Defined at:
 14735 ;;		line 59 in file "../My_header\My_I2C.h"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;		None
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;		None
 14740 ;; Return value:  Size  Location     Type
 14741 ;;		None               void
 14742 ;; Registers used:
 14743 ;;		wreg, status,2, status,0, cstack
 14744 ;; Tracked objects:
 14745 ;;		On entry : 0/0
 14746 ;;		On exit  : 0/0
 14747 ;;		Unchanged: 0/0
 14748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14753 ;;Total ram usage:        0 bytes
 14754 ;; Hardware stack levels used:    1
 14755 ;; Hardware stack levels required when called:   12
 14756 ;; This function calls:
 14757 ;;		_I2C_IdleCheck
 14758 ;; This function is called by:
 14759 ;;		_I2C_LCD_Command
 14760 ;;		_I2C_LCD_Putc
 14761 ;;		_I2C_LCD_Puts
 14762 ;;		_I2C_LCD_CreateChar
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text61
 14767  015FD8                     __ptext61:
 14768                           	opt stack 0
 14769  015FD8                     _I2C_Stop:
 14770                           	opt stack 13
 14771                           
 14772                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 14773                           
 14774                           ;incstack = 0
 14775  015FD8  0E05               	movlw	5
 14776  015FDA  EC8F  F0AF         	call	_I2C_IdleCheck
 14777                           
 14778                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 14779  015FDE  84C5               	bsf	4037,2,c	;volatile
 14780  015FE0  0012               	return		;funcret
 14781  015FE2                     __end_of_I2C_Stop:
 14782                           	opt stack 0
 14783                           tblptru	equ	0xFF8
 14784                           tblptrh	equ	0xFF7
 14785                           tblptrl	equ	0xFF6
 14786                           tablat	equ	0xFF5
 14787                           prodh	equ	0xFF4
 14788                           prodl	equ	0xFF3
 14789                           intcon	equ	0xFF2
 14790                           intcon2	equ	0xFF1
 14791                           postinc0	equ	0xFEE
 14792                           wreg	equ	0xFE8
 14793                           indf1	equ	0xFE7
 14794                           postinc1	equ	0xFE6
 14795                           postdec1	equ	0xFE5
 14796                           fsr1h	equ	0xFE2
 14797                           fsr1l	equ	0xFE1
 14798                           indf2	equ	0xFDF
 14799                           postinc2	equ	0xFDE
 14800                           postdec2	equ	0xFDD
 14801                           plusw2	equ	0xFDB
 14802                           fsr2h	equ	0xFDA
 14803                           fsr2l	equ	0xFD9
 14804                           status	equ	0xFD8
 14805                           
 14806 ;; *************** function _I2C_Start *****************
 14807 ;; Defined at:
 14808 ;;		line 35 in file "../My_header\My_I2C.h"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;  adrs            1    wreg     unsigned char 
 14811 ;;  rw              1    2[BANK0 ] unsigned char 
 14812 ;; Auto vars:     Size  Location     Type
 14813 ;;  adrs            1    3[BANK0 ] unsigned char 
 14814 ;; Return value:  Size  Location     Type
 14815 ;;                  1    wreg      unsigned char 
 14816 ;; Registers used:
 14817 ;;		wreg, status,2, status,0, cstack
 14818 ;; Tracked objects:
 14819 ;;		On entry : 0/0
 14820 ;;		On exit  : 0/0
 14821 ;;		Unchanged: 0/0
 14822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14823 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;Total ram usage:        2 bytes
 14828 ;; Hardware stack levels used:    1
 14829 ;; Hardware stack levels required when called:   12
 14830 ;; This function calls:
 14831 ;;		_I2C_IdleCheck
 14832 ;; This function is called by:
 14833 ;;		_I2C_LCD_Command
 14834 ;;		_I2C_LCD_Putc
 14835 ;;		_I2C_LCD_Puts
 14836 ;;		_I2C_LCD_CreateChar
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text62
 14841  015C18                     __ptext62:
 14842                           	opt stack 0
 14843  015C18                     _I2C_Start:
 14844                           	opt stack 13
 14845                           
 14846                           ;incstack = 0
 14847                           ;I2C_Start@adrs stored from wreg
 14848  015C18  0100               	movlb	0	; () banked
 14849  015C1A  6FBC               	movwf	I2C_Start@adrs& (0+255),b
 14850                           
 14851                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 14852  015C1C  0E05               	movlw	5
 14853  015C1E  EC8F  F0AF         	call	_I2C_IdleCheck
 14854                           
 14855                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 14856  015C22  80C5               	bsf	4037,0,c	;volatile
 14857                           
 14858                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 14859  015C24  0E05               	movlw	5
 14860  015C26  EC8F  F0AF         	call	_I2C_IdleCheck
 14861                           
 14862                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 14863  015C2A  969E               	bcf	3998,3,c	;volatile
 14864                           
 14865                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 14866  015C2C  0100               	movlb	0	; () banked
 14867  015C2E  51BC               	movf	I2C_Start@adrs& (0+255),w,b
 14868  015C30  25BC               	addwf	I2C_Start@adrs& (0+255),w,b
 14869  015C32  0100               	movlb	0	; () banked
 14870  015C34  25BB               	addwf	I2C_Start@rw& (0+255),w,b
 14871  015C36  6EC9               	movwf	4041,c	;volatile
 14872  015C38                     l319:
 14873  015C38  A69E               	btfss	3998,3,c	;volatile
 14874  015C3A  D7FE               	goto	l319
 14875                           
 14876                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 14877  015C3C  ACC5               	btfss	4037,6,c	;volatile
 14878  015C3E  D002               	goto	u9740
 14879  015C40  0E01               	movlw	1
 14880  015C42  0012               	return	
 14881  015C44                     u9740:
 14882  015C44  0E00               	movlw	0
 14883  015C46  0012               	return	
 14884  015C48                     __end_of_I2C_Start:
 14885                           	opt stack 0
 14886                           tblptru	equ	0xFF8
 14887                           tblptrh	equ	0xFF7
 14888                           tblptrl	equ	0xFF6
 14889                           tablat	equ	0xFF5
 14890                           prodh	equ	0xFF4
 14891                           prodl	equ	0xFF3
 14892                           intcon	equ	0xFF2
 14893                           intcon2	equ	0xFF1
 14894                           postinc0	equ	0xFEE
 14895                           wreg	equ	0xFE8
 14896                           indf1	equ	0xFE7
 14897                           postinc1	equ	0xFE6
 14898                           postdec1	equ	0xFE5
 14899                           fsr1h	equ	0xFE2
 14900                           fsr1l	equ	0xFE1
 14901                           indf2	equ	0xFDF
 14902                           postinc2	equ	0xFDE
 14903                           postdec2	equ	0xFDD
 14904                           plusw2	equ	0xFDB
 14905                           fsr2h	equ	0xFDA
 14906                           fsr2l	equ	0xFD9
 14907                           status	equ	0xFD8
 14908                           
 14909 ;; *************** function _I2C_Send *****************
 14910 ;; Defined at:
 14911 ;;		line 65 in file "../My_header\My_I2C.h"
 14912 ;; Parameters:    Size  Location     Type
 14913 ;;  data            1    wreg     unsigned char 
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;  data            1    2[BANK0 ] unsigned char 
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  1    wreg      unsigned char 
 14918 ;; Registers used:
 14919 ;;		wreg, status,2, status,0, cstack
 14920 ;; Tracked objects:
 14921 ;;		On entry : 0/0
 14922 ;;		On exit  : 0/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;Total ram usage:        1 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:   12
 14932 ;; This function calls:
 14933 ;;		_I2C_IdleCheck
 14934 ;; This function is called by:
 14935 ;;		_I2C_LCD_Command
 14936 ;;		_I2C_LCD_Putc
 14937 ;;		_I2C_LCD_Puts
 14938 ;;		_I2C_LCD_CreateChar
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           	psect	text63
 14943  015F8E                     __ptext63:
 14944                           	opt stack 0
 14945  015F8E                     _I2C_Send:
 14946                           	opt stack 13
 14947                           
 14948                           ;incstack = 0
 14949                           ;I2C_Send@data stored from wreg
 14950  015F8E  0100               	movlb	0	; () banked
 14951  015F90  6FBB               	movwf	I2C_Send@data& (0+255),b
 14952                           
 14953                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 14954  015F92  0E05               	movlw	5
 14955  015F94  EC8F  F0AF         	call	_I2C_IdleCheck
 14956                           
 14957                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 14958  015F98  969E               	bcf	3998,3,c	;volatile
 14959                           
 14960                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 14961  015F9A  C0BB  FFC9         	movff	I2C_Send@data,4041	;volatile
 14962  015F9E                     l334:
 14963  015F9E  A69E               	btfss	3998,3,c	;volatile
 14964  015FA0  D7FE               	goto	l334
 14965                           
 14966                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 14967                           ;	Return value of _I2C_Send is never used
 14968  015FA2  50C5               	movf	4037,w,c	;volatile
 14969  015FA4  0012               	return	
 14970  015FA6                     __end_of_I2C_Send:
 14971                           	opt stack 0
 14972                           tblptru	equ	0xFF8
 14973                           tblptrh	equ	0xFF7
 14974                           tblptrl	equ	0xFF6
 14975                           tablat	equ	0xFF5
 14976                           prodh	equ	0xFF4
 14977                           prodl	equ	0xFF3
 14978                           intcon	equ	0xFF2
 14979                           intcon2	equ	0xFF1
 14980                           postinc0	equ	0xFEE
 14981                           wreg	equ	0xFE8
 14982                           indf1	equ	0xFE7
 14983                           postinc1	equ	0xFE6
 14984                           postdec1	equ	0xFE5
 14985                           fsr1h	equ	0xFE2
 14986                           fsr1l	equ	0xFE1
 14987                           indf2	equ	0xFDF
 14988                           postinc2	equ	0xFDE
 14989                           postdec2	equ	0xFDD
 14990                           plusw2	equ	0xFDB
 14991                           fsr2h	equ	0xFDA
 14992                           fsr2l	equ	0xFD9
 14993                           status	equ	0xFD8
 14994                           
 14995 ;; *************** function _I2C_IdleCheck *****************
 14996 ;; Defined at:
 14997 ;;		line 21 in file "../My_header\My_I2C.h"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;  mask            1    wreg     unsigned char 
 15000 ;; Auto vars:     Size  Location     Type
 15001 ;;  mask            1    1[BANK0 ] unsigned char 
 15002 ;; Return value:  Size  Location     Type
 15003 ;;		None               void
 15004 ;; Registers used:
 15005 ;;		wreg, status,2, status,0
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15014 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15015 ;;Total ram usage:        2 bytes
 15016 ;; Hardware stack levels used:    1
 15017 ;; Hardware stack levels required when called:   11
 15018 ;; This function calls:
 15019 ;;		Nothing
 15020 ;; This function is called by:
 15021 ;;		_I2C_Start
 15022 ;;		_I2C_Stop
 15023 ;;		_I2C_Send
 15024 ;;		_I2C_rStart
 15025 ;;		_I2C_Receive
 15026 ;; This function uses a non-reentrant model
 15027 ;;
 15028                           
 15029                           	psect	text64
 15030  015F1E                     __ptext64:
 15031                           	opt stack 0
 15032  015F1E                     _I2C_IdleCheck:
 15033                           	opt stack 13
 15034                           
 15035                           ;incstack = 0
 15036                           ;I2C_IdleCheck@mask stored from wreg
 15037  015F1E  0100               	movlb	0	; () banked
 15038  015F20  6FBA               	movwf	I2C_IdleCheck@mask& (0+255),b
 15039  015F22                     l8937:
 15040  015F22  50C7               	movf	4039,w,c	;volatile
 15041  015F24  0100               	movlb	0	; () banked
 15042  015F26  15BA               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 15043  015F28  0100               	movlb	0	; () banked
 15044  015F2A  6FB9               	movwf	??_I2C_IdleCheck& (0+255),b
 15045  015F2C  50C5               	movf	4037,w,c	;volatile
 15046  015F2E  0B1F               	andlw	31
 15047  015F30  0100               	movlb	0	; () banked
 15048  015F32  11B9               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 15049  015F34  0900               	iorlw	0
 15050  015F36  B4D8               	btfsc	status,2,c
 15051  015F38  0012               	return	
 15052  015F3A  D7F3               	goto	l8937
 15053  015F3C                     __end_of_I2C_IdleCheck:
 15054                           	opt stack 0
 15055                           tblptru	equ	0xFF8
 15056                           tblptrh	equ	0xFF7
 15057                           tblptrl	equ	0xFF6
 15058                           tablat	equ	0xFF5
 15059                           prodh	equ	0xFF4
 15060                           prodl	equ	0xFF3
 15061                           intcon	equ	0xFF2
 15062                           intcon2	equ	0xFF1
 15063                           postinc0	equ	0xFEE
 15064                           wreg	equ	0xFE8
 15065                           indf1	equ	0xFE7
 15066                           postinc1	equ	0xFE6
 15067                           postdec1	equ	0xFE5
 15068                           fsr1h	equ	0xFE2
 15069                           fsr1l	equ	0xFE1
 15070                           indf2	equ	0xFDF
 15071                           postinc2	equ	0xFDE
 15072                           postdec2	equ	0xFDD
 15073                           plusw2	equ	0xFDB
 15074                           fsr2h	equ	0xFDA
 15075                           fsr2l	equ	0xFD9
 15076                           status	equ	0xFD8
 15077                           
 15078 ;; *************** function _Delay_ms *****************
 15079 ;; Defined at:
 15080 ;;		line 333 in file "../My_header\My_header.h"
 15081 ;; Parameters:    Size  Location     Type
 15082 ;;  ms              2    0[BANK0 ] unsigned int 
 15083 ;; Auto vars:     Size  Location     Type
 15084 ;;		None
 15085 ;; Return value:  Size  Location     Type
 15086 ;;		None               void
 15087 ;; Registers used:
 15088 ;;		wreg, status,2, status,0
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15097 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15098 ;;Total ram usage:        3 bytes
 15099 ;; Hardware stack levels used:    1
 15100 ;; Hardware stack levels required when called:   11
 15101 ;; This function calls:
 15102 ;;		Nothing
 15103 ;; This function is called by:
 15104 ;;		_I2C_LCD_init
 15105 ;; This function uses a non-reentrant model
 15106 ;;
 15107                           
 15108                           	psect	text65
 15109  015D56                     __ptext65:
 15110                           	opt stack 0
 15111  015D56                     _Delay_ms:
 15112                           	opt stack 17
 15113                           
 15114                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 15115                           
 15116                           ; BSR set to: 0
 15117                           ;incstack = 0
 15118  015D56  D009               	goto	l9469
 15119  015D58                     l9467:
 15120  015D58  0E10               	movlw	16
 15121  015D5A  0100               	movlb	0	; () banked
 15122  015D5C  6FBB               	movwf	??_Delay_ms& (0+255),b
 15123  015D5E  0E94               	movlw	148
 15124  015D60                     u12577:
 15125  015D60  2EE8               	decfsz	wreg,f,c
 15126  015D62  D7FE               	goto	u12577
 15127  015D64  2FBB               	decfsz	??_Delay_ms& (0+255),f,b
 15128  015D66  D7FC               	goto	u12577
 15129  015D68  D000               	nop2	
 15130  015D6A                     l9469:
 15131  015D6A  0100               	movlb	0	; () banked
 15132  015D6C  07B9               	decf	Delay_ms@ms& (0+255),f,b
 15133  015D6E  A0D8               	btfss	status,0,c
 15134  015D70  07BA               	decf	(Delay_ms@ms+1)& (0+255),f,b
 15135  015D72  0100               	movlb	0	; () banked
 15136  015D74  29B9               	incf	Delay_ms@ms& (0+255),w,b
 15137  015D76  E1F0               	bnz	l9467
 15138  015D78  0100               	movlb	0	; () banked
 15139  015D7A  29BA               	incf	(Delay_ms@ms+1)& (0+255),w,b
 15140  015D7C  B4D8               	btfsc	status,2,c
 15141  015D7E  0012               	return	
 15142  015D80  D7EB               	goto	l9467
 15143  015D82                     __end_of_Delay_ms:
 15144                           	opt stack 0
 15145                           tblptru	equ	0xFF8
 15146                           tblptrh	equ	0xFF7
 15147                           tblptrl	equ	0xFF6
 15148                           tablat	equ	0xFF5
 15149                           prodh	equ	0xFF4
 15150                           prodl	equ	0xFF3
 15151                           intcon	equ	0xFF2
 15152                           intcon2	equ	0xFF1
 15153                           postinc0	equ	0xFEE
 15154                           wreg	equ	0xFE8
 15155                           indf1	equ	0xFE7
 15156                           postinc1	equ	0xFE6
 15157                           postdec1	equ	0xFE5
 15158                           fsr1h	equ	0xFE2
 15159                           fsr1l	equ	0xFE1
 15160                           indf2	equ	0xFDF
 15161                           postinc2	equ	0xFDE
 15162                           postdec2	equ	0xFDD
 15163                           plusw2	equ	0xFDB
 15164                           fsr2h	equ	0xFDA
 15165                           fsr2l	equ	0xFD9
 15166                           status	equ	0xFD8
 15167                           
 15168 ;; *************** function _CTMU_init *****************
 15169 ;; Defined at:
 15170 ;;		line 289 in file "../My_header\My_header.h"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;		None
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;		None
 15175 ;; Return value:  Size  Location     Type
 15176 ;;		None               void
 15177 ;; Registers used:
 15178 ;;		wreg, status,2
 15179 ;; Tracked objects:
 15180 ;;		On entry : 0/0
 15181 ;;		On exit  : 0/0
 15182 ;;		Unchanged: 0/0
 15183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15188 ;;Total ram usage:        0 bytes
 15189 ;; Hardware stack levels used:    1
 15190 ;; Hardware stack levels required when called:   11
 15191 ;; This function calls:
 15192 ;;		Nothing
 15193 ;; This function is called by:
 15194 ;;		_main_init
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text66
 15199  015E02                     __ptext66:
 15200                           	opt stack 0
 15201  015E02                     _CTMU_init:
 15202                           	opt stack 18
 15203                           
 15204                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 15205                           
 15206                           ; BSR set to: 0
 15207                           ;incstack = 0
 15208  015E02  0E00               	movlw	0
 15209  015E04  6EB3               	movwf	4019,c	;volatile
 15210                           
 15211                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 15212  015E06  0E90               	movlw	144
 15213  015E08  6EB2               	movwf	4018,c	;volatile
 15214                           
 15215                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 15216  015E0A  0E01               	movlw	1
 15217  015E0C  6EB1               	movwf	4017,c	;volatile
 15218                           
 15219                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 15220  015E0E  8EC1               	bsf	4033,7,c	;volatile
 15221                           
 15222                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 15223  015E10  9CC1               	bcf	4033,6,c	;volatile
 15224                           
 15225                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 15226  015E12  50C1               	movf	4033,w,c	;volatile
 15227  015E14  0BC7               	andlw	-57
 15228  015E16  0908               	iorlw	8
 15229  015E18  6EC1               	movwf	4033,c	;volatile
 15230                           
 15231                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 15232  015E1A  50C1               	movf	4033,w,c	;volatile
 15233  015E1C  0BF8               	andlw	-8
 15234  015E1E  0906               	iorlw	6
 15235  015E20  6EC1               	movwf	4033,c	;volatile
 15236                           
 15237                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 15238  015E22  9CC2               	bcf	4034,6,c	;volatile
 15239                           
 15240                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 15241  015E24  9EC2               	bcf	4034,7,c	;volatile
 15242                           
 15243                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 15244  015E26  80C2               	bsf	4034,0,c	;volatile
 15245  015E28  0012               	return		;funcret
 15246  015E2A                     __end_of_CTMU_init:
 15247                           	opt stack 0
 15248                           tblptru	equ	0xFF8
 15249                           tblptrh	equ	0xFF7
 15250                           tblptrl	equ	0xFF6
 15251                           tablat	equ	0xFF5
 15252                           prodh	equ	0xFF4
 15253                           prodl	equ	0xFF3
 15254                           intcon	equ	0xFF2
 15255                           intcon2	equ	0xFF1
 15256                           postinc0	equ	0xFEE
 15257                           wreg	equ	0xFE8
 15258                           indf1	equ	0xFE7
 15259                           postinc1	equ	0xFE6
 15260                           postdec1	equ	0xFE5
 15261                           fsr1h	equ	0xFE2
 15262                           fsr1l	equ	0xFE1
 15263                           indf2	equ	0xFDF
 15264                           postinc2	equ	0xFDE
 15265                           postdec2	equ	0xFDD
 15266                           plusw2	equ	0xFDB
 15267                           fsr2h	equ	0xFDA
 15268                           fsr2l	equ	0xFD9
 15269                           status	equ	0xFD8
 15270                           
 15271 ;; *************** function _ADC_init *****************
 15272 ;; Defined at:
 15273 ;;		line 149 in file "../My_header\My_header.h"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;  p_ref           1    wreg     unsigned char 
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;  p_ref           1    0[BANK0 ] unsigned char 
 15278 ;; Return value:  Size  Location     Type
 15279 ;;		None               void
 15280 ;; Registers used:
 15281 ;;		wreg, status,2
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15291 ;;Total ram usage:        1 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; Hardware stack levels required when called:   11
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		_main_init
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text67
 15302  015EDE                     __ptext67:
 15303                           	opt stack 0
 15304  015EDE                     _ADC_init:
 15305                           	opt stack 18
 15306                           
 15307                           ;incstack = 0
 15308                           ;ADC_init@p_ref stored from wreg
 15309  015EDE  0100               	movlb	0	; () banked
 15310  015EE0  6FB9               	movwf	ADC_init@p_ref& (0+255),b
 15311                           
 15312                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 15313  015EE2  9EC2               	bcf	4034,7,c	;volatile
 15314                           
 15315                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 15316  015EE4  0100               	movlb	0	; () banked
 15317  015EE6  B1B9               	btfsc	ADC_init@p_ref& (0+255),0,b
 15318  015EE8  D002               	bra	u10995
 15319  015EEA  9CC2               	bcf	4034,6,c	;volatile
 15320  015EEC  D001               	bra	u10996
 15321  015EEE                     u10995:
 15322  015EEE  8CC2               	bsf	4034,6,c	;volatile
 15323  015EF0                     u10996:
 15324                           
 15325                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 15326  015EF0  8EC1               	bsf	4033,7,c	;volatile
 15327                           
 15328                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 15329  015EF2  9CC1               	bcf	4033,6,c	;volatile
 15330                           
 15331                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 15332  015EF4  50C1               	movf	4033,w,c	;volatile
 15333  015EF6  0BF8               	andlw	-8
 15334  015EF8  0906               	iorlw	6
 15335  015EFA  6EC1               	movwf	4033,c	;volatile
 15336  015EFC  0012               	return		;funcret
 15337  015EFE                     __end_of_ADC_init:
 15338                           	opt stack 0
 15339                           tblptru	equ	0xFF8
 15340                           tblptrh	equ	0xFF7
 15341                           tblptrl	equ	0xFF6
 15342                           tablat	equ	0xFF5
 15343                           prodh	equ	0xFF4
 15344                           prodl	equ	0xFF3
 15345                           intcon	equ	0xFF2
 15346                           intcon2	equ	0xFF1
 15347                           postinc0	equ	0xFEE
 15348                           wreg	equ	0xFE8
 15349                           indf1	equ	0xFE7
 15350                           postinc1	equ	0xFE6
 15351                           postdec1	equ	0xFE5
 15352                           fsr1h	equ	0xFE2
 15353                           fsr1l	equ	0xFE1
 15354                           indf2	equ	0xFDF
 15355                           postinc2	equ	0xFDE
 15356                           postdec2	equ	0xFDD
 15357                           plusw2	equ	0xFDB
 15358                           fsr2h	equ	0xFDA
 15359                           fsr2l	equ	0xFD9
 15360                           status	equ	0xFD8
 15361                           
 15362 ;; *************** function _ctmu_loop *****************
 15363 ;; Defined at:
 15364 ;;		line 565 in file "tasks.h"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;		None
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;		None
 15369 ;; Return value:  Size  Location     Type
 15370 ;;		None               void
 15371 ;; Registers used:
 15372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15382 ;;Total ram usage:        0 bytes
 15383 ;; Hardware stack levels used:    1
 15384 ;; Hardware stack levels required when called:   13
 15385 ;; This function calls:
 15386 ;;		_CTMU_read
 15387 ;;		___lwdiv
 15388 ;;		_button_timer_interrupt
 15389 ;; This function is called by:
 15390 ;;		_main
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text68
 15395  01312E                     __ptext68:
 15396                           	opt stack 0
 15397  01312E                     _ctmu_loop:
 15398                           	opt stack 17
 15399                           
 15400                           ;tasks.h: 566: if (ctmu_flag) {
 15401                           
 15402                           ;incstack = 0
 15403  01312E  0100               	movlb	0	; () banked
 15404  013130  51A7               	movf	_ctmu_flag& (0+255),w,b
 15405  013132  B4D8               	btfsc	status,2,c
 15406  013134  0012               	return	
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;tasks.h: 567: ctmu_flag = 0;
 15410  013136  0E00               	movlw	0
 15411  013138  0100               	movlb	0	; () banked
 15412  01313A  6FA7               	movwf	_ctmu_flag& (0+255),b
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;tasks.h: 569: button_timer_interrupt(&ct0, !(CTMU_read(0) / ctmu_value0));
 15416  01313C  0EFC               	movlw	low _ct0
 15417  01313E  0100               	movlb	0	; () banked
 15418  013140  6FDC               	movwf	button_timer_interrupt@bt& (0+255),b
 15419  013142  0E02               	movlw	high _ct0
 15420  013144  0100               	movlb	0	; () banked
 15421  013146  6FDD               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 15422  013148  0E00               	movlw	0
 15423  01314A  EC5D  F0A1         	call	_CTMU_read
 15424  01314E  C0C6  F0D5         	movff	?_CTMU_read,___lwdiv@dividend
 15425  013152  C0C7  F0D6         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 15426  013156  C09A  F0D7         	movff	_ctmu_value0,___lwdiv@divisor
 15427  01315A  C09B  F0D8         	movff	_ctmu_value0+1,___lwdiv@divisor+1
 15428  01315E  ECC9  F0A8         	call	___lwdiv	;wreg free
 15429  013162  0100               	movlb	0	; () banked
 15430  013164  51D5               	movf	?___lwdiv& (0+255),w,b
 15431  013166  0100               	movlb	0	; () banked
 15432  013168  11D6               	iorwf	(?___lwdiv+1)& (0+255),w,b
 15433  01316A  A4D8               	btfss	status,2,c
 15434  01316C  D002               	goto	u12080
 15435  01316E  0E01               	movlw	1
 15436  013170  D001               	goto	u12090
 15437  013172                     u12080:
 15438  013172  0E00               	movlw	0
 15439  013174                     u12090:
 15440  013174  0100               	movlb	0	; () banked
 15441  013176  6FDE               	movwf	button_timer_interrupt@sw_value& (0+255),b
 15442  013178  EC4E  F089         	call	_button_timer_interrupt	;wreg free
 15443                           
 15444                           ;tasks.h: 570: button_timer_interrupt(&ct1, !(CTMU_read(1) / ctmu_value1));
 15445  01317C  0EE9               	movlw	low _ct1
 15446  01317E  0100               	movlb	0	; () banked
 15447  013180  6FDC               	movwf	button_timer_interrupt@bt& (0+255),b
 15448  013182  0E03               	movlw	high _ct1
 15449  013184  0100               	movlb	0	; () banked
 15450  013186  6FDD               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 15451  013188  0E01               	movlw	1
 15452  01318A  EC5D  F0A1         	call	_CTMU_read
 15453  01318E  C0C6  F0D5         	movff	?_CTMU_read,___lwdiv@dividend
 15454  013192  C0C7  F0D6         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 15455  013196  C09C  F0D7         	movff	_ctmu_value1,___lwdiv@divisor
 15456  01319A  C09D  F0D8         	movff	_ctmu_value1+1,___lwdiv@divisor+1
 15457  01319E  ECC9  F0A8         	call	___lwdiv	;wreg free
 15458  0131A2  0100               	movlb	0	; () banked
 15459  0131A4  51D5               	movf	?___lwdiv& (0+255),w,b
 15460  0131A6  0100               	movlb	0	; () banked
 15461  0131A8  11D6               	iorwf	(?___lwdiv+1)& (0+255),w,b
 15462  0131AA  A4D8               	btfss	status,2,c
 15463  0131AC  D002               	goto	u12100
 15464  0131AE  0E01               	movlw	1
 15465  0131B0  D001               	goto	u12110
 15466  0131B2                     u12100:
 15467  0131B2  0E00               	movlw	0
 15468  0131B4                     u12110:
 15469  0131B4  0100               	movlb	0	; () banked
 15470  0131B6  6FDE               	movwf	button_timer_interrupt@sw_value& (0+255),b
 15471  0131B8  EC4E  F089         	call	_button_timer_interrupt	;wreg free
 15472                           
 15473                           ;tasks.h: 571: button_timer_interrupt(&ct2, !(CTMU_read(2) / ctmu_value2));
 15474  0131BC  0EED               	movlw	low _ct2
 15475  0131BE  0100               	movlb	0	; () banked
 15476  0131C0  6FDC               	movwf	button_timer_interrupt@bt& (0+255),b
 15477  0131C2  0E03               	movlw	high _ct2
 15478  0131C4  0100               	movlb	0	; () banked
 15479  0131C6  6FDD               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 15480  0131C8  0E02               	movlw	2
 15481  0131CA  EC5D  F0A1         	call	_CTMU_read
 15482  0131CE  C0C6  F0D5         	movff	?_CTMU_read,___lwdiv@dividend
 15483  0131D2  C0C7  F0D6         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 15484  0131D6  C09E  F0D7         	movff	_ctmu_value2,___lwdiv@divisor
 15485  0131DA  C09F  F0D8         	movff	_ctmu_value2+1,___lwdiv@divisor+1
 15486  0131DE  ECC9  F0A8         	call	___lwdiv	;wreg free
 15487  0131E2  0100               	movlb	0	; () banked
 15488  0131E4  51D5               	movf	?___lwdiv& (0+255),w,b
 15489  0131E6  0100               	movlb	0	; () banked
 15490  0131E8  11D6               	iorwf	(?___lwdiv+1)& (0+255),w,b
 15491  0131EA  A4D8               	btfss	status,2,c
 15492  0131EC  D002               	goto	u12120
 15493  0131EE  0E01               	movlw	1
 15494  0131F0  D001               	goto	u12130
 15495  0131F2                     u12120:
 15496  0131F2  0E00               	movlw	0
 15497  0131F4                     u12130:
 15498  0131F4  0100               	movlb	0	; () banked
 15499  0131F6  6FDE               	movwf	button_timer_interrupt@sw_value& (0+255),b
 15500  0131F8  EC4E  F089         	call	_button_timer_interrupt	;wreg free
 15501                           
 15502                           ;tasks.h: 572: button_timer_interrupt(&ctm, !(CTMU_read(3) / ctmu_valuem));
 15503  0131FC  0EF1               	movlw	low _ctm
 15504  0131FE  0100               	movlb	0	; () banked
 15505  013200  6FDC               	movwf	button_timer_interrupt@bt& (0+255),b
 15506  013202  0E03               	movlw	high _ctm
 15507  013204  0100               	movlb	0	; () banked
 15508  013206  6FDD               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 15509  013208  0E03               	movlw	3
 15510  01320A  EC5D  F0A1         	call	_CTMU_read
 15511  01320E  C0C6  F0D5         	movff	?_CTMU_read,___lwdiv@dividend
 15512  013212  C0C7  F0D6         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 15513  013216  C035  F0D7         	movff	_ctmu_valuem,___lwdiv@divisor
 15514  01321A  C036  F0D8         	movff	_ctmu_valuem+1,___lwdiv@divisor+1
 15515  01321E  ECC9  F0A8         	call	___lwdiv	;wreg free
 15516  013222  0100               	movlb	0	; () banked
 15517  013224  51D5               	movf	?___lwdiv& (0+255),w,b
 15518  013226  0100               	movlb	0	; () banked
 15519  013228  11D6               	iorwf	(?___lwdiv+1)& (0+255),w,b
 15520  01322A  A4D8               	btfss	status,2,c
 15521  01322C  D002               	goto	u12140
 15522  01322E  0E01               	movlw	1
 15523  013230  D001               	goto	u12150
 15524  013232                     u12140:
 15525  013232  0E00               	movlw	0
 15526  013234                     u12150:
 15527  013234  0100               	movlb	0	; () banked
 15528  013236  6FDE               	movwf	button_timer_interrupt@sw_value& (0+255),b
 15529  013238  EC4E  F089         	call	_button_timer_interrupt	;wreg free
 15530  01323C  0012               	return	
 15531  01323E                     __end_of_ctmu_loop:
 15532                           	opt stack 0
 15533                           tblptru	equ	0xFF8
 15534                           tblptrh	equ	0xFF7
 15535                           tblptrl	equ	0xFF6
 15536                           tablat	equ	0xFF5
 15537                           prodh	equ	0xFF4
 15538                           prodl	equ	0xFF3
 15539                           intcon	equ	0xFF2
 15540                           intcon2	equ	0xFF1
 15541                           postinc0	equ	0xFEE
 15542                           wreg	equ	0xFE8
 15543                           indf1	equ	0xFE7
 15544                           postinc1	equ	0xFE6
 15545                           postdec1	equ	0xFE5
 15546                           fsr1h	equ	0xFE2
 15547                           fsr1l	equ	0xFE1
 15548                           indf2	equ	0xFDF
 15549                           postinc2	equ	0xFDE
 15550                           postdec2	equ	0xFDD
 15551                           plusw2	equ	0xFDB
 15552                           fsr2h	equ	0xFDA
 15553                           fsr2l	equ	0xFD9
 15554                           status	equ	0xFD8
 15555                           
 15556 ;; *************** function _button_timer_interrupt *****************
 15557 ;; Defined at:
 15558 ;;		line 51 in file "../My_header\My_button.h"
 15559 ;; Parameters:    Size  Location     Type
 15560 ;;  bt              2   35[BANK0 ] PTR struct button
 15561 ;;		 -> ctm(4), ct2(4), ct1(4), ct0(4), 
 15562 ;;  sw_value        1   37[BANK0 ] unsigned char 
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;		None
 15565 ;; Return value:  Size  Location     Type
 15566 ;;		None               void
 15567 ;; Registers used:
 15568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15569 ;; Tracked objects:
 15570 ;;		On entry : 0/0
 15571 ;;		On exit  : 0/0
 15572 ;;		Unchanged: 0/0
 15573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15574 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15577 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15578 ;;Total ram usage:        5 bytes
 15579 ;; Hardware stack levels used:    1
 15580 ;; Hardware stack levels required when called:   11
 15581 ;; This function calls:
 15582 ;;		Nothing
 15583 ;; This function is called by:
 15584 ;;		_ctmu_loop
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text69
 15589  01129C                     __ptext69:
 15590                           	opt stack 0
 15591  01129C                     _button_timer_interrupt:
 15592                           	opt stack 18
 15593                           
 15594                           ;My_header\My_button.h: 52: if (sw_value) {
 15595                           
 15596                           ;incstack = 0
 15597  01129C  0100               	movlb	0	; () banked
 15598  01129E  51DE               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 15599  0112A0  0100               	movlb	0	; () banked
 15600  0112A2  B4D8               	btfsc	status,2,c
 15601  0112A4  D0A8               	goto	l10207
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 15605  0112A6  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15606  0112AA  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15607  0112AE  0E84               	movlw	132
 15608  0112B0  18DE               	xorwf	postinc2,w,c
 15609  0112B2  E10D               	bnz	l282
 15610  0112B4  0E03               	movlw	3
 15611  0112B6  18DE               	xorwf	postinc2,w,c
 15612  0112B8  A4D8               	btfss	status,2,c
 15613  0112BA  D009               	goto	l282
 15614                           
 15615                           ; BSR set to: 0
 15616  0112BC  0100               	movlb	0	; () banked
 15617  0112BE  EE20 F003          	lfsr	2,3
 15618  0112C2  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15619  0112C4  26D9               	addwf	fsr2l,f,c
 15620  0112C6  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15621  0112C8  22DA               	addwfc	fsr2h,f,c
 15622  0112CA  0100               	movlb	0	; () banked
 15623  0112CC  8EDF               	bsf	indf2,7,c
 15624  0112CE                     l282:
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 15628  0112CE  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15629  0112D2  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15630  0112D6  0EBC               	movlw	188
 15631  0112D8  18DE               	xorwf	postinc2,w,c
 15632  0112DA  E10D               	bnz	l283
 15633  0112DC  0E02               	movlw	2
 15634  0112DE  18DE               	xorwf	postinc2,w,c
 15635  0112E0  A4D8               	btfss	status,2,c
 15636  0112E2  D009               	goto	l283
 15637                           
 15638                           ; BSR set to: 0
 15639  0112E4  0100               	movlb	0	; () banked
 15640  0112E6  EE20 F003          	lfsr	2,3
 15641  0112EA  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15642  0112EC  26D9               	addwf	fsr2l,f,c
 15643  0112EE  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15644  0112F0  22DA               	addwfc	fsr2h,f,c
 15645  0112F2  0100               	movlb	0	; () banked
 15646  0112F4  8CDF               	bsf	indf2,6,c
 15647  0112F6                     l283:
 15648                           
 15649                           ; BSR set to: 0
 15650                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 15651  0112F6  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15652  0112FA  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15653  0112FE  0EF4               	movlw	244
 15654  011300  18DE               	xorwf	postinc2,w,c
 15655  011302  E10C               	bnz	l284
 15656  011304  04DE               	decf	postinc2,w,c
 15657  011306  A4D8               	btfss	status,2,c
 15658  011308  D009               	goto	l284
 15659                           
 15660                           ; BSR set to: 0
 15661  01130A  0100               	movlb	0	; () banked
 15662  01130C  EE20 F003          	lfsr	2,3
 15663  011310  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15664  011312  26D9               	addwf	fsr2l,f,c
 15665  011314  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15666  011316  22DA               	addwfc	fsr2h,f,c
 15667  011318  0100               	movlb	0	; () banked
 15668  01131A  8ADF               	bsf	indf2,5,c
 15669  01131C                     l284:
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 15673  01131C  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15674  011320  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15675  011324  0E2C               	movlw	44
 15676  011326  18DE               	xorwf	postinc2,w,c
 15677  011328  E10C               	bnz	l285
 15678  01132A  04DE               	decf	postinc2,w,c
 15679  01132C  A4D8               	btfss	status,2,c
 15680  01132E  D009               	goto	l285
 15681                           
 15682                           ; BSR set to: 0
 15683  011330  0100               	movlb	0	; () banked
 15684  011332  EE20 F003          	lfsr	2,3
 15685  011336  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15686  011338  26D9               	addwf	fsr2l,f,c
 15687  01133A  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15688  01133C  22DA               	addwfc	fsr2h,f,c
 15689  01133E  0100               	movlb	0	; () banked
 15690  011340  88DF               	bsf	indf2,4,c
 15691  011342                     l285:
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 15695  011342  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15696  011346  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15697  01134A  0E96               	movlw	150
 15698  01134C  18DE               	xorwf	postinc2,w,c
 15699  01134E  10DE               	iorwf	postinc2,w,c
 15700  011350  A4D8               	btfss	status,2,c
 15701  011352  D009               	goto	l286
 15702                           
 15703                           ; BSR set to: 0
 15704  011354  0100               	movlb	0	; () banked
 15705  011356  EE20 F003          	lfsr	2,3
 15706  01135A  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15707  01135C  26D9               	addwf	fsr2l,f,c
 15708  01135E  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15709  011360  22DA               	addwfc	fsr2h,f,c
 15710  011362  0100               	movlb	0	; () banked
 15711  011364  86DF               	bsf	indf2,3,c
 15712  011366                     l286:
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 15716  011366  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15717  01136A  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15718  01136E  0E3C               	movlw	60
 15719  011370  18DE               	xorwf	postinc2,w,c
 15720  011372  10DE               	iorwf	postinc2,w,c
 15721  011374  A4D8               	btfss	status,2,c
 15722  011376  D009               	goto	l287
 15723                           
 15724                           ; BSR set to: 0
 15725  011378  0100               	movlb	0	; () banked
 15726  01137A  EE20 F003          	lfsr	2,3
 15727  01137E  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15728  011380  26D9               	addwf	fsr2l,f,c
 15729  011382  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15730  011384  22DA               	addwfc	fsr2h,f,c
 15731  011386  0100               	movlb	0	; () banked
 15732  011388  84DF               	bsf	indf2,2,c
 15733  01138A                     l287:
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 15737  01138A  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15738  01138E  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15739  011392  0E10               	movlw	16
 15740  011394  18DE               	xorwf	postinc2,w,c
 15741  011396  10DE               	iorwf	postinc2,w,c
 15742  011398  A4D8               	btfss	status,2,c
 15743  01139A  D009               	goto	l288
 15744                           
 15745                           ; BSR set to: 0
 15746  01139C  0100               	movlb	0	; () banked
 15747  01139E  EE20 F003          	lfsr	2,3
 15748  0113A2  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15749  0113A4  26D9               	addwf	fsr2l,f,c
 15750  0113A6  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15751  0113A8  22DA               	addwfc	fsr2h,f,c
 15752  0113AA  0100               	movlb	0	; () banked
 15753  0113AC  82DF               	bsf	indf2,1,c
 15754  0113AE                     l288:
 15755                           
 15756                           ; BSR set to: 0
 15757                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 15758  0113AE  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15759  0113B2  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15760  0113B6  0E02               	movlw	2
 15761  0113B8  18DE               	xorwf	postinc2,w,c
 15762  0113BA  10DE               	iorwf	postinc2,w,c
 15763  0113BC  A4D8               	btfss	status,2,c
 15764  0113BE  D009               	goto	l289
 15765                           
 15766                           ; BSR set to: 0
 15767  0113C0  0100               	movlb	0	; () banked
 15768  0113C2  EE20 F003          	lfsr	2,3
 15769  0113C6  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15770  0113C8  26D9               	addwf	fsr2l,f,c
 15771  0113CA  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15772  0113CC  22DA               	addwfc	fsr2h,f,c
 15773  0113CE  0100               	movlb	0	; () banked
 15774  0113D0  80DF               	bsf	indf2,0,c
 15775  0113D2                     l289:
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 15779  0113D2  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15780  0113D6  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15781  0113DA  0E85               	movlw	133
 15782  0113DC  5CDE               	subwf	postinc2,w,c
 15783  0113DE  0E03               	movlw	3
 15784  0113E0  58DE               	subwfb	postinc2,w,c
 15785  0113E2  B0D8               	btfsc	status,0,c
 15786  0113E4  0012               	return	
 15787                           
 15788                           ; BSR set to: 0
 15789  0113E6  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15790  0113EA  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15791  0113EE  2ADE               	incf	postinc2,f,c
 15792  0113F0  0E00               	movlw	0
 15793  0113F2  22DD               	addwfc	postdec2,f,c
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;My_header\My_button.h: 62: } else {
 15797  0113F4  0012               	return	
 15798  0113F6                     l10207:
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 15802  0113F6  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15803  0113FA  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15804  0113FE  0E84               	movlw	132
 15805  011400  5CDE               	subwf	postinc2,w,c
 15806  011402  0E03               	movlw	3
 15807  011404  58DE               	subwfb	postinc2,w,c
 15808  011406  A0D8               	btfss	status,0,c
 15809  011408  D00A               	goto	l10211
 15810                           
 15811                           ; BSR set to: 0
 15812  01140A  0100               	movlb	0	; () banked
 15813  01140C  EE20 F002          	lfsr	2,2
 15814  011410  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15815  011412  26D9               	addwf	fsr2l,f,c
 15816  011414  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15817  011416  22DA               	addwfc	fsr2h,f,c
 15818  011418  0100               	movlb	0	; () banked
 15819  01141A  8EDF               	bsf	indf2,7,c
 15820  01141C  D08F               	goto	l10239
 15821  01141E                     l10211:
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 15825  01141E  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15826  011422  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15827  011426  0EBC               	movlw	188
 15828  011428  5CDE               	subwf	postinc2,w,c
 15829  01142A  0E02               	movlw	2
 15830  01142C  58DE               	subwfb	postinc2,w,c
 15831  01142E  A0D8               	btfss	status,0,c
 15832  011430  D00A               	goto	l10215
 15833                           
 15834                           ; BSR set to: 0
 15835  011432  0100               	movlb	0	; () banked
 15836  011434  EE20 F002          	lfsr	2,2
 15837  011438  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15838  01143A  26D9               	addwf	fsr2l,f,c
 15839  01143C  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15840  01143E  22DA               	addwfc	fsr2h,f,c
 15841  011440  0100               	movlb	0	; () banked
 15842  011442  8CDF               	bsf	indf2,6,c
 15843  011444  D07B               	goto	l10239
 15844  011446                     l10215:
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 15848  011446  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15849  01144A  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15850  01144E  0EF4               	movlw	244
 15851  011450  5CDE               	subwf	postinc2,w,c
 15852  011452  0E01               	movlw	1
 15853  011454  58DE               	subwfb	postinc2,w,c
 15854  011456  A0D8               	btfss	status,0,c
 15855  011458  D00A               	goto	l10219
 15856                           
 15857                           ; BSR set to: 0
 15858  01145A  0100               	movlb	0	; () banked
 15859  01145C  EE20 F002          	lfsr	2,2
 15860  011460  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15861  011462  26D9               	addwf	fsr2l,f,c
 15862  011464  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15863  011466  22DA               	addwfc	fsr2h,f,c
 15864  011468  0100               	movlb	0	; () banked
 15865  01146A  8ADF               	bsf	indf2,5,c
 15866  01146C  D067               	goto	l10239
 15867  01146E                     l10219:
 15868                           
 15869                           ; BSR set to: 0
 15870                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 15871  01146E  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15872  011472  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15873  011476  0E2C               	movlw	44
 15874  011478  5CDE               	subwf	postinc2,w,c
 15875  01147A  0E01               	movlw	1
 15876  01147C  58DE               	subwfb	postinc2,w,c
 15877  01147E  A0D8               	btfss	status,0,c
 15878  011480  D00A               	goto	l10223
 15879                           
 15880                           ; BSR set to: 0
 15881  011482  0100               	movlb	0	; () banked
 15882  011484  EE20 F002          	lfsr	2,2
 15883  011488  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15884  01148A  26D9               	addwf	fsr2l,f,c
 15885  01148C  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15886  01148E  22DA               	addwfc	fsr2h,f,c
 15887  011490  0100               	movlb	0	; () banked
 15888  011492  88DF               	bsf	indf2,4,c
 15889  011494  D053               	goto	l10239
 15890  011496                     l10223:
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 15894  011496  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15895  01149A  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15896  01149E  0E01               	movlw	1
 15897  0114A0  50DB               	movf	plusw2,w,c
 15898  0114A2  E104               	bnz	u11220
 15899  0114A4  0E96               	movlw	150
 15900  0114A6  5CDE               	subwf	postinc2,w,c
 15901  0114A8  A0D8               	btfss	status,0,c
 15902  0114AA  D00A               	goto	l10227
 15903  0114AC                     u11220:
 15904                           
 15905                           ; BSR set to: 0
 15906  0114AC  0100               	movlb	0	; () banked
 15907  0114AE  EE20 F002          	lfsr	2,2
 15908  0114B2  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15909  0114B4  26D9               	addwf	fsr2l,f,c
 15910  0114B6  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15911  0114B8  22DA               	addwfc	fsr2h,f,c
 15912  0114BA  0100               	movlb	0	; () banked
 15913  0114BC  86DF               	bsf	indf2,3,c
 15914  0114BE  D03E               	goto	l10239
 15915  0114C0                     l10227:
 15916                           
 15917                           ; BSR set to: 0
 15918                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 15919  0114C0  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15920  0114C4  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15921  0114C8  0E01               	movlw	1
 15922  0114CA  50DB               	movf	plusw2,w,c
 15923  0114CC  E104               	bnz	u11230
 15924  0114CE  0E3C               	movlw	60
 15925  0114D0  5CDE               	subwf	postinc2,w,c
 15926  0114D2  A0D8               	btfss	status,0,c
 15927  0114D4  D00A               	goto	l10231
 15928  0114D6                     u11230:
 15929                           
 15930                           ; BSR set to: 0
 15931  0114D6  0100               	movlb	0	; () banked
 15932  0114D8  EE20 F002          	lfsr	2,2
 15933  0114DC  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15934  0114DE  26D9               	addwf	fsr2l,f,c
 15935  0114E0  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15936  0114E2  22DA               	addwfc	fsr2h,f,c
 15937  0114E4  0100               	movlb	0	; () banked
 15938  0114E6  84DF               	bsf	indf2,2,c
 15939  0114E8  D029               	goto	l10239
 15940  0114EA                     l10231:
 15941                           
 15942                           ; BSR set to: 0
 15943                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 15944  0114EA  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15945  0114EE  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15946  0114F2  0E01               	movlw	1
 15947  0114F4  50DB               	movf	plusw2,w,c
 15948  0114F6  E104               	bnz	u11240
 15949  0114F8  0E10               	movlw	16
 15950  0114FA  5CDE               	subwf	postinc2,w,c
 15951  0114FC  A0D8               	btfss	status,0,c
 15952  0114FE  D00A               	goto	l10235
 15953  011500                     u11240:
 15954                           
 15955                           ; BSR set to: 0
 15956  011500  0100               	movlb	0	; () banked
 15957  011502  EE20 F002          	lfsr	2,2
 15958  011506  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15959  011508  26D9               	addwf	fsr2l,f,c
 15960  01150A  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15961  01150C  22DA               	addwfc	fsr2h,f,c
 15962  01150E  0100               	movlb	0	; () banked
 15963  011510  82DF               	bsf	indf2,1,c
 15964  011512  D014               	goto	l10239
 15965  011514                     l10235:
 15966                           
 15967                           ; BSR set to: 0
 15968                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 15969  011514  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15970  011518  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15971  01151C  0E01               	movlw	1
 15972  01151E  50DB               	movf	plusw2,w,c
 15973  011520  E104               	bnz	u11250
 15974  011522  0E02               	movlw	2
 15975  011524  5CDE               	subwf	postinc2,w,c
 15976  011526  A0D8               	btfss	status,0,c
 15977  011528  D009               	goto	l10239
 15978  01152A                     u11250:
 15979                           
 15980                           ; BSR set to: 0
 15981  01152A  0100               	movlb	0	; () banked
 15982  01152C  EE20 F002          	lfsr	2,2
 15983  011530  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 15984  011532  26D9               	addwf	fsr2l,f,c
 15985  011534  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 15986  011536  22DA               	addwfc	fsr2h,f,c
 15987  011538  0100               	movlb	0	; () banked
 15988  01153A  80DF               	bsf	indf2,0,c
 15989  01153C                     l10239:
 15990                           
 15991                           ; BSR set to: 0
 15992                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 15993  01153C  C0DC  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 15994  011540  C0DD  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 15995  011544  0E00               	movlw	0
 15996  011546  6EDE               	movwf	postinc2,c
 15997  011548  0E00               	movlw	0
 15998  01154A  6EDD               	movwf	postdec2,c
 15999                           
 16000                           ; BSR set to: 0
 16001                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 16002  01154C  0100               	movlb	0	; () banked
 16003  01154E  EE20 F002          	lfsr	2,2
 16004  011552  51DC               	movf	button_timer_interrupt@bt& (0+255),w,b
 16005  011554  26D9               	addwf	fsr2l,f,c
 16006  011556  51DD               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16007  011558  22DA               	addwfc	fsr2h,f,c
 16008  01155A  0EFF               	movlw	255
 16009  01155C  16DE               	andwf	postinc2,f,c
 16010  01155E  0E00               	movlw	0
 16011  011560  16DD               	andwf	postdec2,f,c
 16012  011562  0012               	return	
 16013  011564                     __end_of_button_timer_interrupt:
 16014                           	opt stack 0
 16015                           tblptru	equ	0xFF8
 16016                           tblptrh	equ	0xFF7
 16017                           tblptrl	equ	0xFF6
 16018                           tablat	equ	0xFF5
 16019                           prodh	equ	0xFF4
 16020                           prodl	equ	0xFF3
 16021                           intcon	equ	0xFF2
 16022                           intcon2	equ	0xFF1
 16023                           postinc0	equ	0xFEE
 16024                           wreg	equ	0xFE8
 16025                           indf1	equ	0xFE7
 16026                           postinc1	equ	0xFE6
 16027                           postdec1	equ	0xFE5
 16028                           fsr1h	equ	0xFE2
 16029                           fsr1l	equ	0xFE1
 16030                           indf2	equ	0xFDF
 16031                           postinc2	equ	0xFDE
 16032                           postdec2	equ	0xFDD
 16033                           plusw2	equ	0xFDB
 16034                           fsr2h	equ	0xFDA
 16035                           fsr2l	equ	0xFD9
 16036                           status	equ	0xFD8
 16037                           
 16038 ;; *************** function ___lwdiv *****************
 16039 ;; Defined at:
 16040 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16041 ;; Parameters:    Size  Location     Type
 16042 ;;  dividend        2   28[BANK0 ] unsigned int 
 16043 ;;  divisor         2   30[BANK0 ] unsigned int 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  quotient        2   33[BANK0 ] unsigned int 
 16046 ;;  counter         1   32[BANK0 ] unsigned char 
 16047 ;; Return value:  Size  Location     Type
 16048 ;;                  2   28[BANK0 ] unsigned int 
 16049 ;; Registers used:
 16050 ;;		wreg, status,2, status,0
 16051 ;; Tracked objects:
 16052 ;;		On entry : 0/0
 16053 ;;		On exit  : 0/0
 16054 ;;		Unchanged: 0/0
 16055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16056 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16057 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16059 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16060 ;;Total ram usage:        7 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; Hardware stack levels required when called:   11
 16063 ;; This function calls:
 16064 ;;		Nothing
 16065 ;; This function is called by:
 16066 ;;		_tx_sendn
 16067 ;;		_my_utoa
 16068 ;;		_display_LCD
 16069 ;;		_comm_d
 16070 ;;		_ctmu_loop
 16071 ;;		_main
 16072 ;;		_ringbuf_put_num
 16073 ;; This function uses a non-reentrant model
 16074 ;;
 16075                           
 16076                           	psect	text70
 16077  015192                     __ptext70:
 16078                           	opt stack 0
 16079  015192                     ___lwdiv:
 16080                           	opt stack 17
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;incstack = 0
 16084  015192  0E00               	movlw	0
 16085  015194  0100               	movlb	0	; () banked
 16086  015196  6FDB               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16087  015198  0E00               	movlw	0
 16088  01519A  6FDA               	movwf	___lwdiv@quotient& (0+255),b
 16089                           
 16090                           ; BSR set to: 0
 16091  01519C  0100               	movlb	0	; () banked
 16092  01519E  51D7               	movf	___lwdiv@divisor& (0+255),w,b
 16093  0151A0  0100               	movlb	0	; () banked
 16094  0151A2  11D8               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16095  0151A4  B4D8               	btfsc	status,2,c
 16096  0151A6  D02C               	goto	l1900
 16097                           
 16098                           ; BSR set to: 0
 16099  0151A8  0E01               	movlw	1
 16100  0151AA  0100               	movlb	0	; () banked
 16101  0151AC  6FD9               	movwf	___lwdiv@counter& (0+255),b
 16102  0151AE  D006               	goto	l9059
 16103  0151B0                     l9057:
 16104                           
 16105                           ; BSR set to: 0
 16106  0151B0  0100               	movlb	0	; () banked
 16107  0151B2  90D8               	bcf	status,0,c
 16108  0151B4  37D7               	rlcf	___lwdiv@divisor& (0+255),f,b
 16109  0151B6  37D8               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16110  0151B8  0100               	movlb	0	; () banked
 16111  0151BA  2BD9               	incf	___lwdiv@counter& (0+255),f,b
 16112  0151BC                     l9059:
 16113                           
 16114                           ; BSR set to: 0
 16115  0151BC  0100               	movlb	0	; () banked
 16116  0151BE  AFD8               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16117  0151C0  D7F7               	goto	l9057
 16118  0151C2                     l9061:
 16119                           
 16120                           ; BSR set to: 0
 16121  0151C2  0100               	movlb	0	; () banked
 16122  0151C4  90D8               	bcf	status,0,c
 16123  0151C6  37DA               	rlcf	___lwdiv@quotient& (0+255),f,b
 16124  0151C8  37DB               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16125                           
 16126                           ; BSR set to: 0
 16127  0151CA  0100               	movlb	0	; () banked
 16128  0151CC  51D7               	movf	___lwdiv@divisor& (0+255),w,b
 16129  0151CE  0100               	movlb	0	; () banked
 16130  0151D0  5DD5               	subwf	___lwdiv@dividend& (0+255),w,b
 16131  0151D2  0100               	movlb	0	; () banked
 16132  0151D4  51D8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16133  0151D6  0100               	movlb	0	; () banked
 16134  0151D8  59D6               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16135  0151DA  A0D8               	btfss	status,0,c
 16136  0151DC  D00A               	goto	l9069
 16137                           
 16138                           ; BSR set to: 0
 16139  0151DE  0100               	movlb	0	; () banked
 16140  0151E0  51D7               	movf	___lwdiv@divisor& (0+255),w,b
 16141  0151E2  0100               	movlb	0	; () banked
 16142  0151E4  5FD5               	subwf	___lwdiv@dividend& (0+255),f,b
 16143  0151E6  0100               	movlb	0	; () banked
 16144  0151E8  51D8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16145  0151EA  0100               	movlb	0	; () banked
 16146  0151EC  5BD6               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16147                           
 16148                           ; BSR set to: 0
 16149  0151EE  0100               	movlb	0	; () banked
 16150  0151F0  81DA               	bsf	___lwdiv@quotient& (0+255),0,b
 16151  0151F2                     l9069:
 16152                           
 16153                           ; BSR set to: 0
 16154  0151F2  0100               	movlb	0	; () banked
 16155  0151F4  90D8               	bcf	status,0,c
 16156  0151F6  33D8               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16157  0151F8  33D7               	rrcf	___lwdiv@divisor& (0+255),f,b
 16158                           
 16159                           ; BSR set to: 0
 16160  0151FA  0100               	movlb	0	; () banked
 16161  0151FC  2FD9               	decfsz	___lwdiv@counter& (0+255),f,b
 16162  0151FE  D7E1               	goto	l9061
 16163  015200                     l1900:
 16164                           
 16165                           ; BSR set to: 0
 16166  015200  C0DA  F0D5         	movff	___lwdiv@quotient,?___lwdiv
 16167  015204  C0DB  F0D6         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16168                           
 16169                           ; BSR set to: 0
 16170  015208  0012               	return		;funcret
 16171  01520A                     __end_of___lwdiv:
 16172                           	opt stack 0
 16173                           tblptru	equ	0xFF8
 16174                           tblptrh	equ	0xFF7
 16175                           tblptrl	equ	0xFF6
 16176                           tablat	equ	0xFF5
 16177                           prodh	equ	0xFF4
 16178                           prodl	equ	0xFF3
 16179                           intcon	equ	0xFF2
 16180                           intcon2	equ	0xFF1
 16181                           postinc0	equ	0xFEE
 16182                           wreg	equ	0xFE8
 16183                           indf1	equ	0xFE7
 16184                           postinc1	equ	0xFE6
 16185                           postdec1	equ	0xFE5
 16186                           fsr1h	equ	0xFE2
 16187                           fsr1l	equ	0xFE1
 16188                           indf2	equ	0xFDF
 16189                           postinc2	equ	0xFDE
 16190                           postdec2	equ	0xFDD
 16191                           plusw2	equ	0xFDB
 16192                           fsr2h	equ	0xFDA
 16193                           fsr2l	equ	0xFD9
 16194                           status	equ	0xFD8
 16195                           
 16196 ;; *************** function _CTMU_read *****************
 16197 ;; Defined at:
 16198 ;;		line 304 in file "../My_header\My_header.h"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;  ch              1    wreg     unsigned char 
 16201 ;; Auto vars:     Size  Location     Type
 16202 ;;  ch              1   16[BANK0 ] unsigned char 
 16203 ;;  i               1   21[BANK0 ] unsigned char 
 16204 ;;  sum             4   17[BANK0 ] unsigned long 
 16205 ;; Return value:  Size  Location     Type
 16206 ;;                  2   13[BANK0 ] unsigned int 
 16207 ;; Registers used:
 16208 ;;		wreg, status,2, status,0, cstack
 16209 ;; Tracked objects:
 16210 ;;		On entry : 0/0
 16211 ;;		On exit  : 0/0
 16212 ;;		Unchanged: 0/0
 16213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16217 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16218 ;;Total ram usage:        9 bytes
 16219 ;; Hardware stack levels used:    1
 16220 ;; Hardware stack levels required when called:   12
 16221 ;; This function calls:
 16222 ;;		___lldiv
 16223 ;; This function is called by:
 16224 ;;		_ctmu_loop
 16225 ;;		_main
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text71
 16230  0142BA                     __ptext71:
 16231                           	opt stack 0
 16232  0142BA                     _CTMU_read:
 16233                           	opt stack 17
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;incstack = 0
 16237                           ;CTMU_read@ch stored from wreg
 16238  0142BA  0100               	movlb	0	; () banked
 16239  0142BC  6FC9               	movwf	CTMU_read@ch& (0+255),b
 16240                           
 16241                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 16242  0142BE  0E00               	movlw	0
 16243  0142C0  0100               	movlb	0	; () banked
 16244  0142C2  6FCA               	movwf	CTMU_read@sum& (0+255),b
 16245  0142C4  0E00               	movlw	0
 16246  0142C6  6FCB               	movwf	(CTMU_read@sum+1)& (0+255),b
 16247  0142C8  0E00               	movlw	0
 16248  0142CA  6FCC               	movwf	(CTMU_read@sum+2)& (0+255),b
 16249  0142CC  0E00               	movlw	0
 16250  0142CE  6FCD               	movwf	(CTMU_read@sum+3)& (0+255),b
 16251                           
 16252                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 16253  0142D0  0E00               	movlw	0
 16254  0142D2  0100               	movlb	0	; () banked
 16255  0142D4  6FCE               	movwf	CTMU_read@i& (0+255),b
 16256  0142D6                     l10149:
 16257                           
 16258                           ; BSR set to: 0
 16259  0142D6  0E09               	movlw	9
 16260  0142D8  0100               	movlb	0	; () banked
 16261  0142DA  65CE               	cpfsgt	CTMU_read@i& (0+255),b
 16262  0142DC  D001               	goto	l10153
 16263  0142DE  D02B               	goto	l10181
 16264  0142E0                     l10153:
 16265                           
 16266                           ; BSR set to: 0
 16267                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 16268  0142E0  C0C9  F0C8         	movff	CTMU_read@ch,??_CTMU_read
 16269  0142E4  0100               	movlb	0	; () banked
 16270  0142E6  47C8               	rlncf	??_CTMU_read& (0+255),f,b
 16271  0142E8  47C8               	rlncf	??_CTMU_read& (0+255),f,b
 16272  0142EA  50C2               	movf	4034,w,c	;volatile
 16273  0142EC  0100               	movlb	0	; () banked
 16274  0142EE  19C8               	xorwf	??_CTMU_read& (0+255),w,b
 16275  0142F0  0BC3               	andlw	-61
 16276  0142F2  19C8               	xorwf	??_CTMU_read& (0+255),w,b
 16277  0142F4  6EC2               	movwf	4034,c	;volatile
 16278                           
 16279                           ; BSR set to: 0
 16280                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 16281  0142F6  8EB3               	bsf	4019,7,c	;volatile
 16282                           
 16283                           ; BSR set to: 0
 16284                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 16285  0142F8  90B2               	bcf	4018,0,c	;volatile
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 16289  0142FA  92B2               	bcf	4018,1,c	;volatile
 16290                           
 16291                           ; BSR set to: 0
 16292                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 16293  0142FC  82B3               	bsf	4019,1,c	;volatile
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 16297  0142FE  0E50               	movlw	80
 16298  014300                     u12587:
 16299  014300  2EE8               	decfsz	wreg,f,c
 16300  014302  D7FE               	goto	u12587
 16301                           
 16302                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 16303  014304  92B3               	bcf	4019,1,c	;volatile
 16304                           
 16305                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 16306  014306  80B2               	bsf	4018,0,c	;volatile
 16307                           
 16308                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 16309  014308  0E14               	movlw	20
 16310  01430A                     u12597:
 16311  01430A  2EE8               	decfsz	wreg,f,c
 16312  01430C  D7FE               	goto	u12597
 16313                           
 16314                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 16315  01430E  90B2               	bcf	4018,0,c	;volatile
 16316                           
 16317                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 16318  014310  9C9E               	bcf	3998,6,c	;volatile
 16319                           
 16320                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 16321  014312  82C2               	bsf	4034,1,c	;volatile
 16322  014314                     l247:
 16323  014314  AC9E               	btfss	3998,6,c	;volatile
 16324  014316  D7FE               	goto	l247
 16325                           
 16326                           ;My_header\My_header.h: 324: sum += ADRES;
 16327  014318  50C3               	movf	4035,w,c	;volatile
 16328  01431A  0100               	movlb	0	; () banked
 16329  01431C  27CA               	addwf	CTMU_read@sum& (0+255),f,b
 16330  01431E  50C4               	movf	4036,w,c	;volatile
 16331  014320  0100               	movlb	0	; () banked
 16332  014322  23CB               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 16333  014324  0E00               	movlw	0
 16334  014326  0100               	movlb	0	; () banked
 16335  014328  23CC               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 16336  01432A  0E00               	movlw	0
 16337  01432C  0100               	movlb	0	; () banked
 16338  01432E  23CD               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 16339  014330  0100               	movlb	0	; () banked
 16340  014332  2BCE               	incf	CTMU_read@i& (0+255),f,b
 16341  014334  D7D0               	goto	l10149
 16342  014336                     l10181:
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;My_header\My_header.h: 325: }
 16346                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 16347  014336  C0CA  F0B9         	movff	CTMU_read@sum,___lldiv@dividend
 16348  01433A  C0CB  F0BA         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 16349  01433E  C0CC  F0BB         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 16350  014342  C0CD  F0BC         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 16351  014346  0E0A               	movlw	10
 16352  014348  0100               	movlb	0	; () banked
 16353  01434A  6FBD               	movwf	___lldiv@divisor& (0+255),b
 16354  01434C  0E00               	movlw	0
 16355  01434E  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
 16356  014350  0E00               	movlw	0
 16357  014352  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
 16358  014354  0E00               	movlw	0
 16359  014356  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
 16360  014358  EC1D  F0A2         	call	___lldiv	;wreg free
 16361  01435C  0E03               	movlw	3
 16362  01435E  D007               	goto	u11070
 16363  014360                     u11075:
 16364  014360  0100               	movlb	0	; () banked
 16365  014362  90D8               	bcf	status,0,c
 16366  014364  33BC               	rrcf	(?___lldiv+3)& (0+255),f,b
 16367  014366  33BB               	rrcf	(?___lldiv+2)& (0+255),f,b
 16368  014368  0100               	movlb	0	; () banked
 16369  01436A  33BA               	rrcf	(?___lldiv+1)& (0+255),f,b
 16370  01436C  33B9               	rrcf	?___lldiv& (0+255),f,b
 16371  01436E                     u11070:
 16372  01436E  2EE8               	decfsz	wreg,f,c
 16373  014370  D7F7               	goto	u11075
 16374  014372  C0B9  F0C6         	movff	?___lldiv,?_CTMU_read
 16375  014376  C0BA  F0C7         	movff	?___lldiv+1,?_CTMU_read+1
 16376  01437A  0012               	return	
 16377  01437C                     __end_of_CTMU_read:
 16378                           	opt stack 0
 16379                           tblptru	equ	0xFF8
 16380                           tblptrh	equ	0xFF7
 16381                           tblptrl	equ	0xFF6
 16382                           tablat	equ	0xFF5
 16383                           prodh	equ	0xFF4
 16384                           prodl	equ	0xFF3
 16385                           intcon	equ	0xFF2
 16386                           intcon2	equ	0xFF1
 16387                           postinc0	equ	0xFEE
 16388                           wreg	equ	0xFE8
 16389                           indf1	equ	0xFE7
 16390                           postinc1	equ	0xFE6
 16391                           postdec1	equ	0xFE5
 16392                           fsr1h	equ	0xFE2
 16393                           fsr1l	equ	0xFE1
 16394                           indf2	equ	0xFDF
 16395                           postinc2	equ	0xFDE
 16396                           postdec2	equ	0xFDD
 16397                           plusw2	equ	0xFDB
 16398                           fsr2h	equ	0xFDA
 16399                           fsr2l	equ	0xFD9
 16400                           status	equ	0xFD8
 16401                           
 16402 ;; *************** function ___lldiv *****************
 16403 ;; Defined at:
 16404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;  dividend        4    0[BANK0 ] unsigned long 
 16407 ;;  divisor         4    4[BANK0 ] unsigned long 
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;  quotient        4    8[BANK0 ] unsigned long 
 16410 ;;  counter         1   12[BANK0 ] unsigned char 
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  4    0[BANK0 ] unsigned long 
 16413 ;; Registers used:
 16414 ;;		wreg, status,2, status,0
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/0
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16420 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16421 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16423 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16424 ;;Total ram usage:       13 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:   11
 16427 ;; This function calls:
 16428 ;;		Nothing
 16429 ;; This function is called by:
 16430 ;;		_CTMU_read
 16431 ;;		_get_quot_rem
 16432 ;;		_display_LCD
 16433 ;;		_comm_d
 16434 ;;		_my_utoa32
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           	psect	text72
 16439  01443A                     __ptext72:
 16440                           	opt stack 0
 16441  01443A                     ___lldiv:
 16442                           	opt stack 16
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;incstack = 0
 16446  01443A  0E00               	movlw	0
 16447  01443C  0100               	movlb	0	; () banked
 16448  01443E  6FC1               	movwf	___lldiv@quotient& (0+255),b
 16449  014440  0E00               	movlw	0
 16450  014442  6FC2               	movwf	(___lldiv@quotient+1)& (0+255),b
 16451  014444  0E00               	movlw	0
 16452  014446  6FC3               	movwf	(___lldiv@quotient+2)& (0+255),b
 16453  014448  0E00               	movlw	0
 16454  01444A  6FC4               	movwf	(___lldiv@quotient+3)& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457  01444C  0100               	movlb	0	; () banked
 16458  01444E  51BD               	movf	___lldiv@divisor& (0+255),w,b
 16459  014450  0100               	movlb	0	; () banked
 16460  014452  11BE               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16461  014454  0100               	movlb	0	; () banked
 16462  014456  11BF               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16463  014458  0100               	movlb	0	; () banked
 16464  01445A  11C0               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16465  01445C  B4D8               	btfsc	status,2,c
 16466  01445E  D042               	goto	l1847
 16467                           
 16468                           ; BSR set to: 0
 16469  014460  0E01               	movlw	1
 16470  014462  0100               	movlb	0	; () banked
 16471  014464  6FC5               	movwf	___lldiv@counter& (0+255),b
 16472  014466  D008               	goto	l9037
 16473  014468                     l9035:
 16474                           
 16475                           ; BSR set to: 0
 16476  014468  0100               	movlb	0	; () banked
 16477  01446A  90D8               	bcf	status,0,c
 16478  01446C  37BD               	rlcf	___lldiv@divisor& (0+255),f,b
 16479  01446E  37BE               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16480  014470  37BF               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16481  014472  37C0               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16482  014474  0100               	movlb	0	; () banked
 16483  014476  2BC5               	incf	___lldiv@counter& (0+255),f,b
 16484  014478                     l9037:
 16485                           
 16486                           ; BSR set to: 0
 16487  014478  0100               	movlb	0	; () banked
 16488  01447A  AFC0               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16489  01447C  D7F5               	goto	l9035
 16490  01447E                     l9039:
 16491                           
 16492                           ; BSR set to: 0
 16493  01447E  0100               	movlb	0	; () banked
 16494  014480  90D8               	bcf	status,0,c
 16495  014482  37C1               	rlcf	___lldiv@quotient& (0+255),f,b
 16496  014484  37C2               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16497  014486  37C3               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16498  014488  37C4               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16499                           
 16500                           ; BSR set to: 0
 16501  01448A  0100               	movlb	0	; () banked
 16502  01448C  51BD               	movf	___lldiv@divisor& (0+255),w,b
 16503  01448E  0100               	movlb	0	; () banked
 16504  014490  5DB9               	subwf	___lldiv@dividend& (0+255),w,b
 16505  014492  0100               	movlb	0	; () banked
 16506  014494  51BE               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16507  014496  0100               	movlb	0	; () banked
 16508  014498  59BA               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16509  01449A  0100               	movlb	0	; () banked
 16510  01449C  51BF               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16511  01449E  0100               	movlb	0	; () banked
 16512  0144A0  59BB               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16513  0144A2  0100               	movlb	0	; () banked
 16514  0144A4  51C0               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16515  0144A6  0100               	movlb	0	; () banked
 16516  0144A8  59BC               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16517  0144AA  A0D8               	btfss	status,0,c
 16518  0144AC  D012               	goto	l9047
 16519                           
 16520                           ; BSR set to: 0
 16521  0144AE  0100               	movlb	0	; () banked
 16522  0144B0  51BD               	movf	___lldiv@divisor& (0+255),w,b
 16523  0144B2  0100               	movlb	0	; () banked
 16524  0144B4  5FB9               	subwf	___lldiv@dividend& (0+255),f,b
 16525  0144B6  0100               	movlb	0	; () banked
 16526  0144B8  51BE               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16527  0144BA  0100               	movlb	0	; () banked
 16528  0144BC  5BBA               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16529  0144BE  0100               	movlb	0	; () banked
 16530  0144C0  51BF               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16531  0144C2  0100               	movlb	0	; () banked
 16532  0144C4  5BBB               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16533  0144C6  0100               	movlb	0	; () banked
 16534  0144C8  51C0               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16535  0144CA  0100               	movlb	0	; () banked
 16536  0144CC  5BBC               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16537                           
 16538                           ; BSR set to: 0
 16539  0144CE  0100               	movlb	0	; () banked
 16540  0144D0  81C1               	bsf	___lldiv@quotient& (0+255),0,b
 16541  0144D2                     l9047:
 16542                           
 16543                           ; BSR set to: 0
 16544  0144D2  0100               	movlb	0	; () banked
 16545  0144D4  90D8               	bcf	status,0,c
 16546  0144D6  33C0               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16547  0144D8  33BF               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16548  0144DA  33BE               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16549  0144DC  33BD               	rrcf	___lldiv@divisor& (0+255),f,b
 16550                           
 16551                           ; BSR set to: 0
 16552  0144DE  0100               	movlb	0	; () banked
 16553  0144E0  2FC5               	decfsz	___lldiv@counter& (0+255),f,b
 16554  0144E2  D7CD               	goto	l9039
 16555  0144E4                     l1847:
 16556                           
 16557                           ; BSR set to: 0
 16558  0144E4  C0C1  F0B9         	movff	___lldiv@quotient,?___lldiv
 16559  0144E8  C0C2  F0BA         	movff	___lldiv@quotient+1,?___lldiv+1
 16560  0144EC  C0C3  F0BB         	movff	___lldiv@quotient+2,?___lldiv+2
 16561  0144F0  C0C4  F0BC         	movff	___lldiv@quotient+3,?___lldiv+3
 16562                           
 16563                           ; BSR set to: 0
 16564  0144F4  0012               	return		;funcret
 16565  0144F6                     __end_of___lldiv:
 16566                           	opt stack 0
 16567                           tblptru	equ	0xFF8
 16568                           tblptrh	equ	0xFF7
 16569                           tblptrl	equ	0xFF6
 16570                           tablat	equ	0xFF5
 16571                           prodh	equ	0xFF4
 16572                           prodl	equ	0xFF3
 16573                           intcon	equ	0xFF2
 16574                           intcon2	equ	0xFF1
 16575                           postinc0	equ	0xFEE
 16576                           wreg	equ	0xFE8
 16577                           indf1	equ	0xFE7
 16578                           postinc1	equ	0xFE6
 16579                           postdec1	equ	0xFE5
 16580                           fsr1h	equ	0xFE2
 16581                           fsr1l	equ	0xFE1
 16582                           indf2	equ	0xFDF
 16583                           postinc2	equ	0xFDE
 16584                           postdec2	equ	0xFDD
 16585                           plusw2	equ	0xFDB
 16586                           fsr2h	equ	0xFDA
 16587                           fsr2l	equ	0xFD9
 16588                           status	equ	0xFD8
 16589                           
 16590 ;; *************** function _USB_loop *****************
 16591 ;; Defined at:
 16592 ;;		line 617 in file "tasks.h"
 16593 ;; Parameters:    Size  Location     Type
 16594 ;;		None
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;  rx_len          2   20[BANK0 ] int 
 16597 ;;  data            1   22[BANK0 ] unsigned char 
 16598 ;; Return value:  Size  Location     Type
 16599 ;;		None               void
 16600 ;; Registers used:
 16601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16608 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16610 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16611 ;;Total ram usage:        3 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:   14
 16614 ;; This function calls:
 16615 ;;		_get_string_usb
 16616 ;;		_put_string_usb
 16617 ;;		_ringbuf_num
 16618 ;;		_ringbuf_pop
 16619 ;;		_ringbuf_put
 16620 ;; This function is called by:
 16621 ;;		_main
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text73
 16626  014B96                     __ptext73:
 16627                           	opt stack 0
 16628  014B96                     _USB_loop:
 16629                           	opt stack 16
 16630                           
 16631                           ;tasks.h: 625: char data;
 16632                           ;tasks.h: 626: int rx_len;
 16633                           ;tasks.h: 627: rx_len = get_string_usb(&data, 1);
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;incstack = 0
 16637  014B96  0ECF               	movlw	low USB_loop@data
 16638  014B98  0100               	movlb	0	; () banked
 16639  014B9A  6FC6               	movwf	get_string_usb@s& (0+255),b
 16640  014B9C  0E00               	movlw	high USB_loop@data
 16641  014B9E  0100               	movlb	0	; () banked
 16642  014BA0  6FC7               	movwf	(get_string_usb@s+1)& (0+255),b
 16643  014BA2  0E00               	movlw	0
 16644  014BA4  0100               	movlb	0	; () banked
 16645  014BA6  6FC9               	movwf	(get_string_usb@len+1)& (0+255),b
 16646  014BA8  0E01               	movlw	1
 16647  014BAA  6FC8               	movwf	get_string_usb@len& (0+255),b
 16648  014BAC  ECFB  F0AB         	call	_get_string_usb	;wreg free
 16649  014BB0  C0C6  F0CD         	movff	?_get_string_usb,USB_loop@rx_len
 16650  014BB4  C0C7  F0CE         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 16651                           
 16652                           ;tasks.h: 628: if (rx_len) {
 16653  014BB8  0100               	movlb	0	; () banked
 16654  014BBA  51CD               	movf	USB_loop@rx_len& (0+255),w,b
 16655  014BBC  0100               	movlb	0	; () banked
 16656  014BBE  11CE               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 16657  014BC0  B4D8               	btfsc	status,2,c
 16658  014BC2  D00A               	goto	l872
 16659                           
 16660                           ; BSR set to: 0
 16661                           ;tasks.h: 629: ringbuf_put(&rx_buf, data);
 16662  014BC4  0ECA               	movlw	low _rx_buf
 16663  014BC6  0100               	movlb	0	; () banked
 16664  014BC8  6FC1               	movwf	ringbuf_put@rb& (0+255),b
 16665  014BCA  0E03               	movlw	high _rx_buf
 16666  014BCC  0100               	movlb	0	; () banked
 16667  014BCE  6FC2               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16668  014BD0  C0CF  F0C3         	movff	USB_loop@data,ringbuf_put@asciicode
 16669  014BD4  ECFA  F09E         	call	_ringbuf_put	;wreg free
 16670  014BD8                     l872:
 16671                           
 16672                           ;tasks.h: 630: }
 16673                           ;tasks.h: 631: if (ringbuf_num(&tx_buf)) {
 16674  014BD8  0ED2               	movlw	low _tx_buf
 16675  014BDA  0100               	movlb	0	; () banked
 16676  014BDC  6FB9               	movwf	ringbuf_num@rb& (0+255),b
 16677  014BDE  0E03               	movlw	high _tx_buf
 16678  014BE0  0100               	movlb	0	; () banked
 16679  014BE2  6FBA               	movwf	(ringbuf_num@rb+1)& (0+255),b
 16680  014BE4  EC14  F09B         	call	_ringbuf_num	;wreg free
 16681  014BE8  0100               	movlb	0	; () banked
 16682  014BEA  51B9               	movf	?_ringbuf_num& (0+255),w,b
 16683  014BEC  0100               	movlb	0	; () banked
 16684  014BEE  11BA               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 16685  014BF0  B4D8               	btfsc	status,2,c
 16686  014BF2  0012               	return	
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;tasks.h: 632: data = ringbuf_pop(&tx_buf);
 16690  014BF4  0ED2               	movlw	low _tx_buf
 16691  014BF6  0100               	movlb	0	; () banked
 16692  014BF8  6FC1               	movwf	ringbuf_pop@rb& (0+255),b
 16693  014BFA  0E03               	movlw	high _tx_buf
 16694  014BFC  0100               	movlb	0	; () banked
 16695  014BFE  6FC2               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 16696  014C00  EC33  F0A0         	call	_ringbuf_pop	;wreg free
 16697  014C04  0100               	movlb	0	; () banked
 16698  014C06  6FCF               	movwf	USB_loop@data& (0+255),b
 16699  014C08                     l10807:
 16700                           
 16701                           ; BSR set to: 0
 16702  014C08  0ECF               	movlw	low USB_loop@data
 16703  014C0A  0100               	movlb	0	; () banked
 16704  014C0C  6FC5               	movwf	put_string_usb@s& (0+255),b
 16705  014C0E  0E00               	movlw	high USB_loop@data
 16706  014C10  0100               	movlb	0	; () banked
 16707  014C12  6FC6               	movwf	(put_string_usb@s+1)& (0+255),b
 16708  014C14  0E00               	movlw	0
 16709  014C16  0100               	movlb	0	; () banked
 16710  014C18  6FC8               	movwf	(put_string_usb@len+1)& (0+255),b
 16711  014C1A  0E01               	movlw	1
 16712  014C1C  6FC7               	movwf	put_string_usb@len& (0+255),b
 16713  014C1E  ECD4  F0AC         	call	_put_string_usb	;wreg free
 16714  014C22  0100               	movlb	0	; () banked
 16715  014C24  51C5               	movf	?_put_string_usb& (0+255),w,b
 16716  014C26  0100               	movlb	0	; () banked
 16717  014C28  11C6               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 16718  014C2A  B4D8               	btfsc	status,2,c
 16719  014C2C  0012               	return	
 16720  014C2E  D7EC               	goto	l10807
 16721  014C30                     __end_of_USB_loop:
 16722                           	opt stack 0
 16723                           tblptru	equ	0xFF8
 16724                           tblptrh	equ	0xFF7
 16725                           tblptrl	equ	0xFF6
 16726                           tablat	equ	0xFF5
 16727                           prodh	equ	0xFF4
 16728                           prodl	equ	0xFF3
 16729                           intcon	equ	0xFF2
 16730                           intcon2	equ	0xFF1
 16731                           postinc0	equ	0xFEE
 16732                           wreg	equ	0xFE8
 16733                           indf1	equ	0xFE7
 16734                           postinc1	equ	0xFE6
 16735                           postdec1	equ	0xFE5
 16736                           fsr1h	equ	0xFE2
 16737                           fsr1l	equ	0xFE1
 16738                           indf2	equ	0xFDF
 16739                           postinc2	equ	0xFDE
 16740                           postdec2	equ	0xFDD
 16741                           plusw2	equ	0xFDB
 16742                           fsr2h	equ	0xFDA
 16743                           fsr2l	equ	0xFD9
 16744                           status	equ	0xFD8
 16745                           
 16746 ;; *************** function _ringbuf_put *****************
 16747 ;; Defined at:
 16748 ;;		line 39 in file "../My_header\My_ringbuf.h"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 16751 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 16752 ;;  asciicode       1   10[BANK0 ] unsigned char 
 16753 ;; Auto vars:     Size  Location     Type
 16754 ;;		None
 16755 ;; Return value:  Size  Location     Type
 16756 ;;		None               void
 16757 ;; Registers used:
 16758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16764 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;Total ram usage:        7 bytes
 16769 ;; Hardware stack levels used:    1
 16770 ;; Hardware stack levels required when called:   12
 16771 ;; This function calls:
 16772 ;;		_ringbuf_num
 16773 ;; This function is called by:
 16774 ;;		_tx_send
 16775 ;;		_tx_sends
 16776 ;;		_rx_loop
 16777 ;;		_USB_loop
 16778 ;;		_ringbuf_put_num
 16779 ;;		_ringbuf_put_str
 16780 ;;		_UART_ISR
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           	psect	text74
 16785  013DF4                     __ptext74:
 16786                           	opt stack 0
 16787  013DF4                     _ringbuf_put:
 16788                           	opt stack 16
 16789                           
 16790                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;incstack = 0
 16794  013DF4  C0C1  F0B9         	movff	ringbuf_put@rb,ringbuf_num@rb
 16795  013DF8  C0C2  F0BA         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 16796  013DFC  EC14  F09B         	call	_ringbuf_num	;wreg free
 16797  013E00  0100               	movlb	0	; () banked
 16798  013E02  EE20 F002          	lfsr	2,2
 16799  013E06  51C1               	movf	ringbuf_put@rb& (0+255),w,b
 16800  013E08  26D9               	addwf	fsr2l,f,c
 16801  013E0A  51C2               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 16802  013E0C  22DA               	addwfc	fsr2h,f,c
 16803  013E0E  50DE               	movf	postinc2,w,c
 16804  013E10  0100               	movlb	0	; () banked
 16805  013E12  5DB9               	subwf	?_ringbuf_num& (0+255),w,b
 16806  013E14  50DE               	movf	postinc2,w,c
 16807  013E16  0100               	movlb	0	; () banked
 16808  013E18  59BA               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 16809  013E1A  B0D8               	btfsc	status,0,c
 16810  013E1C  0012               	return	
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 16814  013E1E  0100               	movlb	0	; () banked
 16815  013E20  EE20 F004          	lfsr	2,4
 16816  013E24  51C1               	movf	ringbuf_put@rb& (0+255),w,b
 16817  013E26  26D9               	addwf	fsr2l,f,c
 16818  013E28  51C2               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 16819  013E2A  22DA               	addwfc	fsr2h,f,c
 16820  013E2C  CFDE F0C4          	movff	postinc2,??_ringbuf_put
 16821  013E30  CFDD F0C5          	movff	postdec2,??_ringbuf_put+1
 16822  013E34  C0C1  FFD9         	movff	ringbuf_put@rb,fsr2l
 16823  013E38  C0C2  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 16824  013E3C  CFDE F0C6          	movff	postinc2,??_ringbuf_put+2
 16825  013E40  CFDD F0C7          	movff	postdec2,??_ringbuf_put+3
 16826  013E44  0100               	movlb	0	; () banked
 16827  013E46  51C4               	movf	??_ringbuf_put& (0+255),w,b
 16828  013E48  0100               	movlb	0	; () banked
 16829  013E4A  25C6               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 16830  013E4C  6ED9               	movwf	fsr2l,c
 16831  013E4E  0100               	movlb	0	; () banked
 16832  013E50  51C5               	movf	(??_ringbuf_put+1)& (0+255),w,b
 16833  013E52  0100               	movlb	0	; () banked
 16834  013E54  21C7               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 16835  013E56  6EDA               	movwf	fsr2h,c
 16836  013E58  C0C3  FFDF         	movff	ringbuf_put@asciicode,indf2
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 16840  013E5C  0100               	movlb	0	; () banked
 16841  013E5E  EE20 F002          	lfsr	2,2
 16842  013E62  51C1               	movf	ringbuf_put@rb& (0+255),w,b
 16843  013E64  26D9               	addwf	fsr2l,f,c
 16844  013E66  51C2               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 16845  013E68  22DA               	addwfc	fsr2h,f,c
 16846  013E6A  0100               	movlb	0	; () banked
 16847  013E6C  EE10 F004          	lfsr	1,4
 16848  013E70  51C1               	movf	ringbuf_put@rb& (0+255),w,b
 16849  013E72  26E1               	addwf	fsr1l,f,c
 16850  013E74  51C2               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 16851  013E76  22E2               	addwfc	fsr1h,f,c
 16852  013E78  CFE6 F0C6          	movff	postinc1,??_ringbuf_put+2
 16853  013E7C  CFE5 F0C7          	movff	postdec1,??_ringbuf_put+3
 16854  013E80  0E01               	movlw	1
 16855  013E82  0100               	movlb	0	; () banked
 16856  013E84  27C6               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 16857  013E86  0E00               	movlw	0
 16858  013E88  23C7               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 16859  013E8A  50DE               	movf	postinc2,w,c
 16860  013E8C  0100               	movlb	0	; () banked
 16861  013E8E  5DC6               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 16862  013E90  50DE               	movf	postinc2,w,c
 16863  013E92  0100               	movlb	0	; () banked
 16864  013E94  59C7               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 16865  013E96  B0D8               	btfsc	status,0,c
 16866  013E98  D00B               	goto	l8933
 16867                           
 16868                           ; BSR set to: 0
 16869  013E9A  0100               	movlb	0	; () banked
 16870  013E9C  EE20 F004          	lfsr	2,4
 16871  013EA0  51C1               	movf	ringbuf_put@rb& (0+255),w,b
 16872  013EA2  26D9               	addwf	fsr2l,f,c
 16873  013EA4  51C2               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 16874  013EA6  22DA               	addwfc	fsr2h,f,c
 16875  013EA8  2ADE               	incf	postinc2,f,c
 16876  013EAA  0E00               	movlw	0
 16877  013EAC  22DD               	addwfc	postdec2,f,c
 16878  013EAE  0012               	return	
 16879  013EB0                     l8933:
 16880                           
 16881                           ; BSR set to: 0
 16882                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 16883  013EB0  0100               	movlb	0	; () banked
 16884  013EB2  EE20 F004          	lfsr	2,4
 16885  013EB6  51C1               	movf	ringbuf_put@rb& (0+255),w,b
 16886  013EB8  26D9               	addwf	fsr2l,f,c
 16887  013EBA  51C2               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 16888  013EBC  22DA               	addwfc	fsr2h,f,c
 16889  013EBE  0E00               	movlw	0
 16890  013EC0  6EDE               	movwf	postinc2,c
 16891  013EC2  0E00               	movlw	0
 16892  013EC4  6EDD               	movwf	postdec2,c
 16893                           
 16894                           ; BSR set to: 0
 16895  013EC6  0012               	return	
 16896  013EC8                     __end_of_ringbuf_put:
 16897                           	opt stack 0
 16898                           tblptru	equ	0xFF8
 16899                           tblptrh	equ	0xFF7
 16900                           tblptrl	equ	0xFF6
 16901                           tablat	equ	0xFF5
 16902                           prodh	equ	0xFF4
 16903                           prodl	equ	0xFF3
 16904                           intcon	equ	0xFF2
 16905                           intcon2	equ	0xFF1
 16906                           postinc0	equ	0xFEE
 16907                           wreg	equ	0xFE8
 16908                           indf1	equ	0xFE7
 16909                           postinc1	equ	0xFE6
 16910                           postdec1	equ	0xFE5
 16911                           fsr1h	equ	0xFE2
 16912                           fsr1l	equ	0xFE1
 16913                           indf2	equ	0xFDF
 16914                           postinc2	equ	0xFDE
 16915                           postdec2	equ	0xFDD
 16916                           plusw2	equ	0xFDB
 16917                           fsr2h	equ	0xFDA
 16918                           fsr2l	equ	0xFD9
 16919                           status	equ	0xFD8
 16920                           
 16921 ;; *************** function _ringbuf_pop *****************
 16922 ;; Defined at:
 16923 ;;		line 64 in file "../My_header\My_ringbuf.h"
 16924 ;; Parameters:    Size  Location     Type
 16925 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 16926 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 16927 ;; Auto vars:     Size  Location     Type
 16928 ;;  ret             1   14[BANK0 ] unsigned char 
 16929 ;; Return value:  Size  Location     Type
 16930 ;;                  1    wreg      unsigned char 
 16931 ;; Registers used:
 16932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16933 ;; Tracked objects:
 16934 ;;		On entry : 0/0
 16935 ;;		On exit  : 0/0
 16936 ;;		Unchanged: 0/0
 16937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16940 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16941 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16942 ;;Total ram usage:        7 bytes
 16943 ;; Hardware stack levels used:    1
 16944 ;; Hardware stack levels required when called:   12
 16945 ;; This function calls:
 16946 ;;		_ringbuf_num
 16947 ;; This function is called by:
 16948 ;;		_rx_loop
 16949 ;;		_USB_loop
 16950 ;;		_UART_ISR
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           
 16954                           	psect	text75
 16955  014066                     __ptext75:
 16956                           	opt stack 0
 16957  014066                     _ringbuf_pop:
 16958                           	opt stack 17
 16959                           
 16960                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;incstack = 0
 16964  014066  C0C1  F0B9         	movff	ringbuf_pop@rb,ringbuf_num@rb
 16965  01406A  C0C2  F0BA         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 16966  01406E  EC14  F09B         	call	_ringbuf_num	;wreg free
 16967  014072  0100               	movlb	0	; () banked
 16968  014074  51B9               	movf	?_ringbuf_num& (0+255),w,b
 16969  014076  0100               	movlb	0	; () banked
 16970  014078  11BA               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 16971  01407A  B4D8               	btfsc	status,2,c
 16972  01407C  D058               	goto	l10121
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 16976  01407E  0100               	movlb	0	; () banked
 16977  014080  EE20 F006          	lfsr	2,6
 16978  014084  51C1               	movf	ringbuf_pop@rb& (0+255),w,b
 16979  014086  26D9               	addwf	fsr2l,f,c
 16980  014088  51C2               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 16981  01408A  22DA               	addwfc	fsr2h,f,c
 16982  01408C  CFDE F0C3          	movff	postinc2,??_ringbuf_pop
 16983  014090  CFDD F0C4          	movff	postdec2,??_ringbuf_pop+1
 16984  014094  C0C1  FFD9         	movff	ringbuf_pop@rb,fsr2l
 16985  014098  C0C2  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 16986  01409C  CFDE F0C5          	movff	postinc2,??_ringbuf_pop+2
 16987  0140A0  CFDD F0C6          	movff	postdec2,??_ringbuf_pop+3
 16988  0140A4  0100               	movlb	0	; () banked
 16989  0140A6  51C3               	movf	??_ringbuf_pop& (0+255),w,b
 16990  0140A8  0100               	movlb	0	; () banked
 16991  0140AA  25C5               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 16992  0140AC  6ED9               	movwf	fsr2l,c
 16993  0140AE  0100               	movlb	0	; () banked
 16994  0140B0  51C4               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 16995  0140B2  0100               	movlb	0	; () banked
 16996  0140B4  21C6               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 16997  0140B6  6EDA               	movwf	fsr2h,c
 16998  0140B8  50DF               	movf	indf2,w,c
 16999  0140BA  0100               	movlb	0	; () banked
 17000  0140BC  6FC7               	movwf	ringbuf_pop@ret& (0+255),b
 17001                           
 17002                           ; BSR set to: 0
 17003                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 17004  0140BE  0100               	movlb	0	; () banked
 17005  0140C0  EE20 F002          	lfsr	2,2
 17006  0140C4  51C1               	movf	ringbuf_pop@rb& (0+255),w,b
 17007  0140C6  26D9               	addwf	fsr2l,f,c
 17008  0140C8  51C2               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17009  0140CA  22DA               	addwfc	fsr2h,f,c
 17010  0140CC  0100               	movlb	0	; () banked
 17011  0140CE  EE10 F006          	lfsr	1,6
 17012  0140D2  51C1               	movf	ringbuf_pop@rb& (0+255),w,b
 17013  0140D4  26E1               	addwf	fsr1l,f,c
 17014  0140D6  51C2               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17015  0140D8  22E2               	addwfc	fsr1h,f,c
 17016  0140DA  CFE6 F0C5          	movff	postinc1,??_ringbuf_pop+2
 17017  0140DE  CFE5 F0C6          	movff	postdec1,??_ringbuf_pop+3
 17018  0140E2  0E01               	movlw	1
 17019  0140E4  0100               	movlb	0	; () banked
 17020  0140E6  27C5               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 17021  0140E8  0E00               	movlw	0
 17022  0140EA  23C6               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 17023  0140EC  50DE               	movf	postinc2,w,c
 17024  0140EE  0100               	movlb	0	; () banked
 17025  0140F0  5DC5               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 17026  0140F2  50DE               	movf	postinc2,w,c
 17027  0140F4  0100               	movlb	0	; () banked
 17028  0140F6  59C6               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 17029  0140F8  B0D8               	btfsc	status,0,c
 17030  0140FA  D00B               	goto	l10113
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 17034  0140FC  0100               	movlb	0	; () banked
 17035  0140FE  EE20 F006          	lfsr	2,6
 17036  014102  51C1               	movf	ringbuf_pop@rb& (0+255),w,b
 17037  014104  26D9               	addwf	fsr2l,f,c
 17038  014106  51C2               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17039  014108  22DA               	addwfc	fsr2h,f,c
 17040  01410A  2ADE               	incf	postinc2,f,c
 17041  01410C  0E00               	movlw	0
 17042  01410E  22DD               	addwfc	postdec2,f,c
 17043                           
 17044                           ;My_header\My_ringbuf.h: 69: } else {
 17045  014110  D00B               	goto	l10115
 17046  014112                     l10113:
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 17050  014112  0100               	movlb	0	; () banked
 17051  014114  EE20 F006          	lfsr	2,6
 17052  014118  51C1               	movf	ringbuf_pop@rb& (0+255),w,b
 17053  01411A  26D9               	addwf	fsr2l,f,c
 17054  01411C  51C2               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17055  01411E  22DA               	addwfc	fsr2h,f,c
 17056  014120  0E00               	movlw	0
 17057  014122  6EDE               	movwf	postinc2,c
 17058  014124  0E00               	movlw	0
 17059  014126  6EDD               	movwf	postdec2,c
 17060  014128                     l10115:
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;My_header\My_ringbuf.h: 71: }
 17064                           ;My_header\My_ringbuf.h: 72: return ret;
 17065  014128  0100               	movlb	0	; () banked
 17066  01412A  51C7               	movf	ringbuf_pop@ret& (0+255),w,b
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;My_header\My_ringbuf.h: 73: } else {
 17070                           
 17071                           ; BSR set to: 0
 17072  01412C  0012               	return	
 17073  01412E                     l10121:
 17074                           
 17075                           ; BSR set to: 0
 17076                           ;My_header\My_ringbuf.h: 74: return 0;
 17077  01412E  0E00               	movlw	0
 17078                           
 17079                           ; BSR set to: 0
 17080  014130  0012               	return	
 17081  014132                     __end_of_ringbuf_pop:
 17082                           	opt stack 0
 17083                           tblptru	equ	0xFF8
 17084                           tblptrh	equ	0xFF7
 17085                           tblptrl	equ	0xFF6
 17086                           tablat	equ	0xFF5
 17087                           prodh	equ	0xFF4
 17088                           prodl	equ	0xFF3
 17089                           intcon	equ	0xFF2
 17090                           intcon2	equ	0xFF1
 17091                           postinc0	equ	0xFEE
 17092                           wreg	equ	0xFE8
 17093                           indf1	equ	0xFE7
 17094                           postinc1	equ	0xFE6
 17095                           postdec1	equ	0xFE5
 17096                           fsr1h	equ	0xFE2
 17097                           fsr1l	equ	0xFE1
 17098                           indf2	equ	0xFDF
 17099                           postinc2	equ	0xFDE
 17100                           postdec2	equ	0xFDD
 17101                           plusw2	equ	0xFDB
 17102                           fsr2h	equ	0xFDA
 17103                           fsr2l	equ	0xFD9
 17104                           status	equ	0xFD8
 17105                           
 17106 ;; *************** function _ringbuf_num *****************
 17107 ;; Defined at:
 17108 ;;		line 31 in file "../My_header\My_ringbuf.h"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17111 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;		None
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  2    0[BANK0 ] unsigned int 
 17116 ;; Registers used:
 17117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17118 ;; Tracked objects:
 17119 ;;		On entry : 0/0
 17120 ;;		On exit  : 0/0
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17125 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17126 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17127 ;;Total ram usage:        8 bytes
 17128 ;; Hardware stack levels used:    1
 17129 ;; Hardware stack levels required when called:   11
 17130 ;; This function calls:
 17131 ;;		Nothing
 17132 ;; This function is called by:
 17133 ;;		_ringbuf_put
 17134 ;;		_ringbuf_pop
 17135 ;;		_ringbuf_backspace
 17136 ;;		_rx_loop
 17137 ;;		_USB_loop
 17138 ;;		_UART_ISR
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text76
 17143  013628                     __ptext76:
 17144                           	opt stack 0
 17145  013628                     _ringbuf_num:
 17146                           	opt stack 16
 17147                           
 17148                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 17149                           
 17150                           ; BSR set to: 0
 17151                           ;incstack = 0
 17152  013628  0100               	movlb	0	; () banked
 17153  01362A  EE20 F006          	lfsr	2,6
 17154  01362E  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17155  013630  26D9               	addwf	fsr2l,f,c
 17156  013632  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17157  013634  22DA               	addwfc	fsr2h,f,c
 17158  013636  0100               	movlb	0	; () banked
 17159  013638  EE10 F004          	lfsr	1,4
 17160  01363C  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17161  01363E  26E1               	addwf	fsr1l,f,c
 17162  013640  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17163  013642  22E2               	addwfc	fsr1h,f,c
 17164  013644  50DE               	movf	postinc2,w,c
 17165  013646  5CE6               	subwf	postinc1,w,c
 17166  013648  50DE               	movf	postinc2,w,c
 17167  01364A  58E6               	subwfb	postinc1,w,c
 17168  01364C  A0D8               	btfss	status,0,c
 17169  01364E  D028               	goto	l8921
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 17173  013650  0100               	movlb	0	; () banked
 17174  013652  EE20 F004          	lfsr	2,4
 17175  013656  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17176  013658  26D9               	addwf	fsr2l,f,c
 17177  01365A  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17178  01365C  22DA               	addwfc	fsr2h,f,c
 17179  01365E  CFDE F0BB          	movff	postinc2,??_ringbuf_num
 17180  013662  CFDD F0BC          	movff	postdec2,??_ringbuf_num+1
 17181  013666  0100               	movlb	0	; () banked
 17182  013668  EE20 F006          	lfsr	2,6
 17183  01366C  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17184  01366E  26D9               	addwf	fsr2l,f,c
 17185  013670  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17186  013672  22DA               	addwfc	fsr2h,f,c
 17187  013674  CFDE F0BD          	movff	postinc2,??_ringbuf_num+2
 17188  013678  CFDD F0BE          	movff	postdec2,??_ringbuf_num+3
 17189  01367C  0100               	movlb	0	; () banked
 17190  01367E  1FBD               	comf	(??_ringbuf_num+2)& (0+255),f,b
 17191  013680  1FBE               	comf	(??_ringbuf_num+3)& (0+255),f,b
 17192  013682  4BBD               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 17193  013684  2BBE               	incf	(??_ringbuf_num+3)& (0+255),f,b
 17194  013686  0100               	movlb	0	; () banked
 17195  013688  51BB               	movf	??_ringbuf_num& (0+255),w,b
 17196  01368A  0100               	movlb	0	; () banked
 17197  01368C  25BD               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 17198  01368E  0100               	movlb	0	; () banked
 17199  013690  6FB9               	movwf	?_ringbuf_num& (0+255),b
 17200  013692  0100               	movlb	0	; () banked
 17201  013694  51BC               	movf	(??_ringbuf_num+1)& (0+255),w,b
 17202  013696  0100               	movlb	0	; () banked
 17203  013698  21BE               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 17204  01369A  0100               	movlb	0	; () banked
 17205  01369C  6FBA               	movwf	(?_ringbuf_num+1)& (0+255),b
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;My_header\My_ringbuf.h: 34: } else {
 17209                           
 17210                           ; BSR set to: 0
 17211  01369E  0012               	return	
 17212  0136A0                     l8921:
 17213                           
 17214                           ; BSR set to: 0
 17215                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 17216  0136A0  0100               	movlb	0	; () banked
 17217  0136A2  EE20 F004          	lfsr	2,4
 17218  0136A6  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17219  0136A8  26D9               	addwf	fsr2l,f,c
 17220  0136AA  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17221  0136AC  22DA               	addwfc	fsr2h,f,c
 17222  0136AE  CFDE F0BB          	movff	postinc2,??_ringbuf_num
 17223  0136B2  CFDD F0BC          	movff	postdec2,??_ringbuf_num+1
 17224  0136B6  0100               	movlb	0	; () banked
 17225  0136B8  EE20 F002          	lfsr	2,2
 17226  0136BC  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17227  0136BE  26D9               	addwf	fsr2l,f,c
 17228  0136C0  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17229  0136C2  22DA               	addwfc	fsr2h,f,c
 17230  0136C4  CFDE F0BD          	movff	postinc2,??_ringbuf_num+2
 17231  0136C8  CFDD F0BE          	movff	postdec2,??_ringbuf_num+3
 17232  0136CC  0100               	movlb	0	; () banked
 17233  0136CE  EE20 F006          	lfsr	2,6
 17234  0136D2  51B9               	movf	ringbuf_num@rb& (0+255),w,b
 17235  0136D4  26D9               	addwf	fsr2l,f,c
 17236  0136D6  51BA               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 17237  0136D8  22DA               	addwfc	fsr2h,f,c
 17238  0136DA  CFDE F0BF          	movff	postinc2,??_ringbuf_num+4
 17239  0136DE  CFDD F0C0          	movff	postdec2,??_ringbuf_num+5
 17240  0136E2  0100               	movlb	0	; () banked
 17241  0136E4  1FBF               	comf	(??_ringbuf_num+4)& (0+255),f,b
 17242  0136E6  1FC0               	comf	(??_ringbuf_num+5)& (0+255),f,b
 17243  0136E8  4BBF               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 17244  0136EA  2BC0               	incf	(??_ringbuf_num+5)& (0+255),f,b
 17245  0136EC  0100               	movlb	0	; () banked
 17246  0136EE  51BD               	movf	(??_ringbuf_num+2)& (0+255),w,b
 17247  0136F0  0100               	movlb	0	; () banked
 17248  0136F2  27BF               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 17249  0136F4  0100               	movlb	0	; () banked
 17250  0136F6  51BE               	movf	(??_ringbuf_num+3)& (0+255),w,b
 17251  0136F8  0100               	movlb	0	; () banked
 17252  0136FA  23C0               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 17253  0136FC  0100               	movlb	0	; () banked
 17254  0136FE  51BB               	movf	??_ringbuf_num& (0+255),w,b
 17255  013700  0100               	movlb	0	; () banked
 17256  013702  25BF               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 17257  013704  0100               	movlb	0	; () banked
 17258  013706  6FB9               	movwf	?_ringbuf_num& (0+255),b
 17259  013708  0100               	movlb	0	; () banked
 17260  01370A  51BC               	movf	(??_ringbuf_num+1)& (0+255),w,b
 17261  01370C  0100               	movlb	0	; () banked
 17262  01370E  21C0               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 17263  013710  0100               	movlb	0	; () banked
 17264  013712  6FBA               	movwf	(?_ringbuf_num+1)& (0+255),b
 17265                           
 17266                           ; BSR set to: 0
 17267  013714  0012               	return	
 17268  013716                     __end_of_ringbuf_num:
 17269                           	opt stack 0
 17270                           tblptru	equ	0xFF8
 17271                           tblptrh	equ	0xFF7
 17272                           tblptrl	equ	0xFF6
 17273                           tablat	equ	0xFF5
 17274                           prodh	equ	0xFF4
 17275                           prodl	equ	0xFF3
 17276                           intcon	equ	0xFF2
 17277                           intcon2	equ	0xFF1
 17278                           postinc0	equ	0xFEE
 17279                           wreg	equ	0xFE8
 17280                           indf1	equ	0xFE7
 17281                           postinc1	equ	0xFE6
 17282                           postdec1	equ	0xFE5
 17283                           fsr1h	equ	0xFE2
 17284                           fsr1l	equ	0xFE1
 17285                           indf2	equ	0xFDF
 17286                           postinc2	equ	0xFDE
 17287                           postdec2	equ	0xFDD
 17288                           plusw2	equ	0xFDB
 17289                           fsr2h	equ	0xFDA
 17290                           fsr2l	equ	0xFD9
 17291                           status	equ	0xFD8
 17292                           
 17293 ;; *************** function _put_string_usb *****************
 17294 ;; Defined at:
 17295 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 17296 ;; Parameters:    Size  Location     Type
 17297 ;;  s               2   12[BANK0 ] PTR unsigned char 
 17298 ;;		 -> USB_loop@data(1), 
 17299 ;;  len             2   14[BANK0 ] int 
 17300 ;; Auto vars:     Size  Location     Type
 17301 ;;		None
 17302 ;; Return value:  Size  Location     Type
 17303 ;;                  2   12[BANK0 ] int 
 17304 ;; Registers used:
 17305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17306 ;; Tracked objects:
 17307 ;;		On entry : 0/0
 17308 ;;		On exit  : 0/0
 17309 ;;		Unchanged: 0/0
 17310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17315 ;;Total ram usage:        4 bytes
 17316 ;; Hardware stack levels used:    1
 17317 ;; Hardware stack levels required when called:   13
 17318 ;; This function calls:
 17319 ;;		_CDCTxService
 17320 ;;		_is_usb_available
 17321 ;;		_putUSBUSART
 17322 ;; This function is called by:
 17323 ;;		_USB_loop
 17324 ;; This function uses a non-reentrant model
 17325 ;;
 17326                           
 17327                           	psect	text77
 17328  0159A8                     __ptext77:
 17329                           	opt stack 0
 17330  0159A8                     _put_string_usb:
 17331                           	opt stack 16
 17332                           
 17333                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;incstack = 0
 17337  0159A8  ECAC  F0AF         	call	_is_usb_available	;wreg free
 17338  0159AC  0900               	iorlw	0
 17339  0159AE  A4D8               	btfss	status,2,c
 17340  0159B0  D008               	goto	l10653
 17341                           
 17342                           ;My_usb_cdc.c: 19: return 1;
 17343  0159B2  0E00               	movlw	0
 17344  0159B4  0100               	movlb	0	; () banked
 17345  0159B6  6FC6               	movwf	(?_put_string_usb+1)& (0+255),b
 17346  0159B8  0E01               	movlw	1
 17347  0159BA  6FC5               	movwf	?_put_string_usb& (0+255),b
 17348                           
 17349                           ; BSR set to: 0
 17350  0159BC  0012               	return	
 17351  0159BE                     l10651:
 17352                           
 17353                           ; BSR set to: 0
 17354  0159BE  ECE3  F092         	call	_CDCTxService	;wreg free
 17355  0159C2                     l10653:
 17356  0159C2  0100               	movlb	0	; () banked
 17357  0159C4  51A4               	movf	_cdc_trf_state& (0+255),w,b
 17358  0159C6  A4D8               	btfss	status,2,c
 17359  0159C8  D7FA               	goto	l10651
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 17363                           
 17364                           ; BSR set to: 0
 17365  0159CA  C0C5  F0B9         	movff	put_string_usb@s,putUSBUSART@data
 17366  0159CE  C0C6  F0BA         	movff	put_string_usb@s+1,putUSBUSART@data+1
 17367  0159D2  C0C7  F0BB         	movff	put_string_usb@len,putUSBUSART@length
 17368  0159D6  EC28  F0AF         	call	_putUSBUSART	;wreg free
 17369                           
 17370                           ;My_usb_cdc.c: 23: CDCTxService();
 17371  0159DA  ECE3  F092         	call	_CDCTxService	;wreg free
 17372                           
 17373                           ;My_usb_cdc.c: 24: return 0;
 17374  0159DE  0E00               	movlw	0
 17375  0159E0  0100               	movlb	0	; () banked
 17376  0159E2  6FC6               	movwf	(?_put_string_usb+1)& (0+255),b
 17377  0159E4  0E00               	movlw	0
 17378  0159E6  6FC5               	movwf	?_put_string_usb& (0+255),b
 17379  0159E8  0012               	return	
 17380  0159EA                     __end_of_put_string_usb:
 17381                           	opt stack 0
 17382                           tblptru	equ	0xFF8
 17383                           tblptrh	equ	0xFF7
 17384                           tblptrl	equ	0xFF6
 17385                           tablat	equ	0xFF5
 17386                           prodh	equ	0xFF4
 17387                           prodl	equ	0xFF3
 17388                           intcon	equ	0xFF2
 17389                           intcon2	equ	0xFF1
 17390                           postinc0	equ	0xFEE
 17391                           wreg	equ	0xFE8
 17392                           indf1	equ	0xFE7
 17393                           postinc1	equ	0xFE6
 17394                           postdec1	equ	0xFE5
 17395                           fsr1h	equ	0xFE2
 17396                           fsr1l	equ	0xFE1
 17397                           indf2	equ	0xFDF
 17398                           postinc2	equ	0xFDE
 17399                           postdec2	equ	0xFDD
 17400                           plusw2	equ	0xFDB
 17401                           fsr2h	equ	0xFDA
 17402                           fsr2l	equ	0xFD9
 17403                           status	equ	0xFD8
 17404                           
 17405 ;; *************** function _putUSBUSART *****************
 17406 ;; Defined at:
 17407 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 17408 ;; Parameters:    Size  Location     Type
 17409 ;;  data            2    0[BANK0 ] PTR unsigned char 
 17410 ;;		 -> USB_loop@data(1), 
 17411 ;;  length          1    2[BANK0 ] unsigned char 
 17412 ;; Auto vars:     Size  Location     Type
 17413 ;;		None
 17414 ;; Return value:  Size  Location     Type
 17415 ;;		None               void
 17416 ;; Registers used:
 17417 ;;		wreg, status,2, status,0
 17418 ;; Tracked objects:
 17419 ;;		On entry : 0/0
 17420 ;;		On exit  : 0/0
 17421 ;;		Unchanged: 0/0
 17422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17423 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17426 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17427 ;;Total ram usage:        3 bytes
 17428 ;; Hardware stack levels used:    1
 17429 ;; Hardware stack levels required when called:   11
 17430 ;; This function calls:
 17431 ;;		Nothing
 17432 ;; This function is called by:
 17433 ;;		_put_string_usb
 17434 ;; This function uses a non-reentrant model
 17435 ;;
 17436                           
 17437                           	psect	text78
 17438  015E50                     __ptext78:
 17439                           	opt stack 0
 17440  015E50                     _putUSBUSART:
 17441                           	opt stack 17
 17442                           
 17443                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;incstack = 0
 17447  015E50  98A0               	bcf	4000,4,c	;volatile
 17448                           
 17449                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 17450  015E52  0100               	movlb	0	; () banked
 17451  015E54  51A4               	movf	_cdc_trf_state& (0+255),w,b
 17452  015E56  A4D8               	btfss	status,2,c
 17453  015E58  D00C               	goto	l10003
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;usb_device_cdc.c: 640: {
 17457                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17458  015E5A  C0B9  F093         	movff	putUSBUSART@data,_pCDCSrc
 17459  015E5E  C0BA  F094         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17460                           
 17461                           ; BSR set to: 0
 17462  015E62  C0BB  F0A5         	movff	putUSBUSART@length,_cdc_tx_len
 17463                           
 17464                           ; BSR set to: 0
 17465  015E66  0E01               	movlw	1
 17466  015E68  0100               	movlb	0	; () banked
 17467  015E6A  6FA2               	movwf	_cdc_mem_type& (0+255),b
 17468                           
 17469                           ; BSR set to: 0
 17470  015E6C  0E01               	movlw	1
 17471  015E6E  0100               	movlb	0	; () banked
 17472  015E70  6FA4               	movwf	_cdc_trf_state& (0+255),b
 17473  015E72                     l10003:
 17474                           
 17475                           ; BSR set to: 0
 17476                           ;usb_device_cdc.c: 642: }
 17477                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 17478  015E72  88A0               	bsf	4000,4,c	;volatile
 17479                           
 17480                           ; BSR set to: 0
 17481  015E74  0012               	return		;funcret
 17482  015E76                     __end_of_putUSBUSART:
 17483                           	opt stack 0
 17484                           tblptru	equ	0xFF8
 17485                           tblptrh	equ	0xFF7
 17486                           tblptrl	equ	0xFF6
 17487                           tablat	equ	0xFF5
 17488                           prodh	equ	0xFF4
 17489                           prodl	equ	0xFF3
 17490                           intcon	equ	0xFF2
 17491                           intcon2	equ	0xFF1
 17492                           postinc0	equ	0xFEE
 17493                           wreg	equ	0xFE8
 17494                           indf1	equ	0xFE7
 17495                           postinc1	equ	0xFE6
 17496                           postdec1	equ	0xFE5
 17497                           fsr1h	equ	0xFE2
 17498                           fsr1l	equ	0xFE1
 17499                           indf2	equ	0xFDF
 17500                           postinc2	equ	0xFDE
 17501                           postdec2	equ	0xFDD
 17502                           plusw2	equ	0xFDB
 17503                           fsr2h	equ	0xFDA
 17504                           fsr2l	equ	0xFD9
 17505                           status	equ	0xFD8
 17506                           
 17507 ;; *************** function _get_string_usb *****************
 17508 ;; Defined at:
 17509 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 17510 ;; Parameters:    Size  Location     Type
 17511 ;;  s               2   13[BANK0 ] PTR unsigned char 
 17512 ;;		 -> USB_loop@data(1), 
 17513 ;;  len             2   15[BANK0 ] int 
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;  rx_len          2   18[BANK0 ] int 
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  2   13[BANK0 ] int 
 17518 ;; Registers used:
 17519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17528 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17529 ;;Total ram usage:        7 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:   13
 17532 ;; This function calls:
 17533 ;;		_CDCTxService
 17534 ;;		_getsUSBUSART
 17535 ;;		_is_usb_available
 17536 ;; This function is called by:
 17537 ;;		_USB_loop
 17538 ;; This function uses a non-reentrant model
 17539 ;;
 17540                           
 17541                           	psect	text79
 17542  0157F6                     __ptext79:
 17543                           	opt stack 0
 17544  0157F6                     _get_string_usb:
 17545                           	opt stack 16
 17546                           
 17547                           ;My_usb_cdc.c: 28: int rx_len;
 17548                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;incstack = 0
 17552  0157F6  ECAC  F0AF         	call	_is_usb_available	;wreg free
 17553  0157FA  0900               	iorlw	0
 17554  0157FC  A4D8               	btfss	status,2,c
 17555  0157FE  D008               	goto	l10637
 17556                           
 17557                           ;My_usb_cdc.c: 31: return 0;
 17558  015800  0E00               	movlw	0
 17559  015802  0100               	movlb	0	; () banked
 17560  015804  6FC7               	movwf	(?_get_string_usb+1)& (0+255),b
 17561  015806  0E00               	movlw	0
 17562  015808  6FC6               	movwf	?_get_string_usb& (0+255),b
 17563                           
 17564                           ; BSR set to: 0
 17565  01580A  0012               	return	
 17566  01580C                     l10635:
 17567                           
 17568                           ; BSR set to: 0
 17569  01580C  ECE3  F092         	call	_CDCTxService	;wreg free
 17570  015810                     l10637:
 17571  015810  0100               	movlb	0	; () banked
 17572  015812  51A4               	movf	_cdc_trf_state& (0+255),w,b
 17573  015814  A4D8               	btfss	status,2,c
 17574  015816  D7FA               	goto	l10635
 17575                           
 17576                           ; BSR set to: 0
 17577                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 17578                           
 17579                           ; BSR set to: 0
 17580  015818  C0C6  F0C0         	movff	get_string_usb@s,getsUSBUSART@buffer
 17581  01581C  C0C7  F0C1         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 17582  015820  C0C8  F0C2         	movff	get_string_usb@len,getsUSBUSART@len
 17583  015824  EC8B  F09B         	call	_getsUSBUSART	;wreg free
 17584  015828  0100               	movlb	0	; () banked
 17585  01582A  6FCA               	movwf	??_get_string_usb& (0+255),b
 17586  01582C  0100               	movlb	0	; () banked
 17587  01582E  51CA               	movf	??_get_string_usb& (0+255),w,b
 17588  015830  0100               	movlb	0	; () banked
 17589  015832  6FCB               	movwf	get_string_usb@rx_len& (0+255),b
 17590  015834  6BCC               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 17591                           
 17592                           ;My_usb_cdc.c: 35: CDCTxService();
 17593  015836  ECE3  F092         	call	_CDCTxService	;wreg free
 17594                           
 17595                           ;My_usb_cdc.c: 36: return rx_len;
 17596  01583A  C0CB  F0C6         	movff	get_string_usb@rx_len,?_get_string_usb
 17597  01583E  C0CC  F0C7         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 17598  015842  0012               	return	
 17599  015844                     __end_of_get_string_usb:
 17600                           	opt stack 0
 17601                           tblptru	equ	0xFF8
 17602                           tblptrh	equ	0xFF7
 17603                           tblptrl	equ	0xFF6
 17604                           tablat	equ	0xFF5
 17605                           prodh	equ	0xFF4
 17606                           prodl	equ	0xFF3
 17607                           intcon	equ	0xFF2
 17608                           intcon2	equ	0xFF1
 17609                           postinc0	equ	0xFEE
 17610                           wreg	equ	0xFE8
 17611                           indf1	equ	0xFE7
 17612                           postinc1	equ	0xFE6
 17613                           postdec1	equ	0xFE5
 17614                           fsr1h	equ	0xFE2
 17615                           fsr1l	equ	0xFE1
 17616                           indf2	equ	0xFDF
 17617                           postinc2	equ	0xFDE
 17618                           postdec2	equ	0xFDD
 17619                           plusw2	equ	0xFDB
 17620                           fsr2h	equ	0xFDA
 17621                           fsr2l	equ	0xFD9
 17622                           status	equ	0xFD8
 17623                           
 17624 ;; *************** function _is_usb_available *****************
 17625 ;; Defined at:
 17626 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;		None
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;		None
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  1    wreg      unsigned char 
 17633 ;; Registers used:
 17634 ;;		wreg, status,2, status,0
 17635 ;; Tracked objects:
 17636 ;;		On entry : 0/0
 17637 ;;		On exit  : 0/0
 17638 ;;		Unchanged: 0/0
 17639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17644 ;;Total ram usage:        1 bytes
 17645 ;; Hardware stack levels used:    1
 17646 ;; Hardware stack levels required when called:   11
 17647 ;; This function calls:
 17648 ;;		Nothing
 17649 ;; This function is called by:
 17650 ;;		_put_string_usb
 17651 ;;		_get_string_usb
 17652 ;; This function uses a non-reentrant model
 17653 ;;
 17654                           
 17655                           	psect	text80
 17656  015F58                     __ptext80:
 17657                           	opt stack 0
 17658  015F58                     _is_usb_available:
 17659                           	opt stack 17
 17660                           
 17661                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 17662                           
 17663                           ;incstack = 0
 17664  015F58  0E00               	movlw	0
 17665  015F5A  0100               	movlb	0	; () banked
 17666  015F5C  6FB9               	movwf	_is_usb_available$2687& (0+255),b
 17667                           
 17668                           ; BSR set to: 0
 17669  015F5E  0E1F               	movlw	31
 17670  015F60  6445               	cpfsgt	_USBDeviceState,c	;volatile
 17671  015F62  D005               	goto	l947
 17672                           
 17673                           ; BSR set to: 0
 17674  015F64  B265               	btfsc	3941,1,c	;volatile
 17675  015F66  D003               	goto	l947
 17676                           
 17677                           ; BSR set to: 0
 17678  015F68  0E01               	movlw	1
 17679  015F6A  0100               	movlb	0	; () banked
 17680  015F6C  6FB9               	movwf	_is_usb_available$2687& (0+255),b
 17681  015F6E                     l947:
 17682                           
 17683                           ; BSR set to: 0
 17684  015F6E  0100               	movlb	0	; () banked
 17685  015F70  51B9               	movf	_is_usb_available$2687& (0+255),w,b
 17686  015F72  0012               	return	
 17687  015F74                     __end_of_is_usb_available:
 17688                           	opt stack 0
 17689                           tblptru	equ	0xFF8
 17690                           tblptrh	equ	0xFF7
 17691                           tblptrl	equ	0xFF6
 17692                           tablat	equ	0xFF5
 17693                           prodh	equ	0xFF4
 17694                           prodl	equ	0xFF3
 17695                           intcon	equ	0xFF2
 17696                           intcon2	equ	0xFF1
 17697                           postinc0	equ	0xFEE
 17698                           wreg	equ	0xFE8
 17699                           indf1	equ	0xFE7
 17700                           postinc1	equ	0xFE6
 17701                           postdec1	equ	0xFE5
 17702                           fsr1h	equ	0xFE2
 17703                           fsr1l	equ	0xFE1
 17704                           indf2	equ	0xFDF
 17705                           postinc2	equ	0xFDE
 17706                           postdec2	equ	0xFDD
 17707                           plusw2	equ	0xFDB
 17708                           fsr2h	equ	0xFDA
 17709                           fsr2l	equ	0xFD9
 17710                           status	equ	0xFD8
 17711                           
 17712 ;; *************** function _getsUSBUSART *****************
 17713 ;; Defined at:
 17714 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 17717 ;;		 -> USB_loop@data(1), 
 17718 ;;  len             1    9[BANK0 ] unsigned char 
 17719 ;; Auto vars:     Size  Location     Type
 17720 ;;		None
 17721 ;; Return value:  Size  Location     Type
 17722 ;;                  1    wreg      unsigned char 
 17723 ;; Registers used:
 17724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17725 ;; Tracked objects:
 17726 ;;		On entry : 0/0
 17727 ;;		On exit  : 0/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17730 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17731 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17733 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17734 ;;Total ram usage:        6 bytes
 17735 ;; Hardware stack levels used:    1
 17736 ;; Hardware stack levels required when called:   12
 17737 ;; This function calls:
 17738 ;;		_USBTransferOnePacket
 17739 ;; This function is called by:
 17740 ;;		_get_string_usb
 17741 ;; This function uses a non-reentrant model
 17742 ;;
 17743                           
 17744                           	psect	text81
 17745  013716                     __ptext81:
 17746                           	opt stack 0
 17747  013716                     _getsUSBUSART:
 17748                           	opt stack 16
 17749                           
 17750                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;incstack = 0
 17754  013716  0E00               	movlw	0
 17755  013718  0100               	movlb	0	; () banked
 17756  01371A  6FA3               	movwf	_cdc_rx_len& (0+255),b
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 17760  01371C  0100               	movlb	0	; () banked
 17761  01371E  5198               	movf	_CDCDataOutHandle& (0+255),w,b
 17762  013720  0100               	movlb	0	; () banked
 17763  013722  1199               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17764  013724  B4D8               	btfsc	status,2,c
 17765  013726  D013               	goto	l10011
 17766                           
 17767                           ; BSR set to: 0
 17768  013728  C098  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17769  01372C  C099  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17770  013730  0100               	movlb	0	; () banked
 17771  013732  AEDF               	btfss	indf2,7,c
 17772  013734  D004               	goto	u10930
 17773  013736  0100               	movlb	0	; () banked
 17774  013738  6BC3               	clrf	??_getsUSBUSART& (0+255),b
 17775  01373A  2BC3               	incf	??_getsUSBUSART& (0+255),f,b
 17776  01373C  D002               	goto	u10938
 17777  01373E                     u10930:
 17778  01373E  0100               	movlb	0	; () banked
 17779  013740  6BC3               	clrf	??_getsUSBUSART& (0+255),b
 17780  013742                     u10938:
 17781  013742  0100               	movlb	0	; () banked
 17782  013744  51C3               	movf	??_getsUSBUSART& (0+255),w,b
 17783  013746  0100               	movlb	0	; () banked
 17784  013748  6FC4               	movwf	_getsUSBUSART$4439& (0+255),b
 17785  01374A  6BC5               	clrf	(_getsUSBUSART$4439+1)& (0+255),b
 17786  01374C  D005               	goto	l10013
 17787  01374E                     l10011:
 17788                           
 17789                           ; BSR set to: 0
 17790  01374E  0E00               	movlw	0
 17791  013750  0100               	movlb	0	; () banked
 17792  013752  6FC5               	movwf	(_getsUSBUSART$4439+1)& (0+255),b
 17793  013754  0E00               	movlw	0
 17794  013756  6FC4               	movwf	_getsUSBUSART$4439& (0+255),b
 17795  013758                     l10013:
 17796                           
 17797                           ; BSR set to: 0
 17798  013758  0100               	movlb	0	; () banked
 17799  01375A  51C4               	movf	_getsUSBUSART$4439& (0+255),w,b
 17800  01375C  0100               	movlb	0	; () banked
 17801  01375E  11C5               	iorwf	(_getsUSBUSART$4439+1)& (0+255),w,b
 17802  013760  A4D8               	btfss	status,2,c
 17803  013762  D04B               	goto	l10029
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;usb_device_cdc.c: 547: {
 17807                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17808  013764  0100               	movlb	0	; () banked
 17809  013766  EE20 F001          	lfsr	2,1
 17810  01376A  5198               	movf	_CDCDataOutHandle& (0+255),w,b
 17811  01376C  26D9               	addwf	fsr2l,f,c
 17812  01376E  5199               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17813  013770  22DA               	addwfc	fsr2h,f,c
 17814  013772  0100               	movlb	0	; () banked
 17815  013774  51C2               	movf	getsUSBUSART@len& (0+255),w,b
 17816  013776  5CDE               	subwf	postinc2,w,c
 17817  013778  B0D8               	btfsc	status,0,c
 17818  01377A  D00A               	goto	l10019
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17822  01377C  0100               	movlb	0	; () banked
 17823  01377E  EE20 F001          	lfsr	2,1
 17824  013782  5198               	movf	_CDCDataOutHandle& (0+255),w,b
 17825  013784  26D9               	addwf	fsr2l,f,c
 17826  013786  5199               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17827  013788  22DA               	addwfc	fsr2h,f,c
 17828  01378A  50DF               	movf	indf2,w,c
 17829  01378C  0100               	movlb	0	; () banked
 17830  01378E  6FC2               	movwf	getsUSBUSART@len& (0+255),b
 17831  013790                     l10019:
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17835  013790  0E00               	movlw	0
 17836  013792  0100               	movlb	0	; () banked
 17837  013794  6FA3               	movwf	_cdc_rx_len& (0+255),b
 17838  013796  D018               	goto	l10025
 17839  013798                     l10021:
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17843  013798  0100               	movlb	0	; () banked
 17844  01379A  51A3               	movf	_cdc_rx_len& (0+255),w,b
 17845  01379C  0D01               	mullw	1
 17846  01379E  0E42               	movlw	low _cdc_data_rx
 17847  0137A0  24F3               	addwf	prodl,w,c
 17848  0137A2  6ED9               	movwf	fsr2l,c
 17849  0137A4  0E03               	movlw	high _cdc_data_rx
 17850  0137A6  20F4               	addwfc	prodh,w,c
 17851  0137A8  6EDA               	movwf	fsr2h,c
 17852  0137AA  0100               	movlb	0	; () banked
 17853  0137AC  51A3               	movf	_cdc_rx_len& (0+255),w,b
 17854  0137AE  0D01               	mullw	1
 17855  0137B0  50F3               	movf	prodl,w,c
 17856  0137B2  0100               	movlb	0	; () banked
 17857  0137B4  25C0               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17858  0137B6  6EE1               	movwf	fsr1l,c
 17859  0137B8  50F4               	movf	prodh,w,c
 17860  0137BA  0100               	movlb	0	; () banked
 17861  0137BC  21C1               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17862  0137BE  6EE2               	movwf	fsr1h,c
 17863  0137C0  CFDF FFE7          	movff	indf2,indf1
 17864                           
 17865                           ; BSR set to: 0
 17866  0137C4  0100               	movlb	0	; () banked
 17867  0137C6  2BA3               	incf	_cdc_rx_len& (0+255),f,b
 17868  0137C8                     l10025:
 17869                           
 17870                           ; BSR set to: 0
 17871  0137C8  0100               	movlb	0	; () banked
 17872  0137CA  51C2               	movf	getsUSBUSART@len& (0+255),w,b
 17873  0137CC  0100               	movlb	0	; () banked
 17874  0137CE  5DA3               	subwf	_cdc_rx_len& (0+255),w,b
 17875  0137D0  A0D8               	btfss	status,0,c
 17876  0137D2  D7E2               	goto	l10021
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17880                           
 17881                           ; BSR set to: 0
 17882  0137D4  0E00               	movlw	0
 17883  0137D6  0100               	movlb	0	; () banked
 17884  0137D8  6FB9               	movwf	USBTransferOnePacket@dir& (0+255),b
 17885  0137DA  0E42               	movlw	low _cdc_data_rx
 17886  0137DC  0100               	movlb	0	; () banked
 17887  0137DE  6FBA               	movwf	USBTransferOnePacket@data& (0+255),b
 17888  0137E0  0E03               	movlw	high _cdc_data_rx
 17889  0137E2  0100               	movlb	0	; () banked
 17890  0137E4  6FBB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17891  0137E6  0E40               	movlw	64
 17892  0137E8  0100               	movlb	0	; () banked
 17893  0137EA  6FBC               	movwf	USBTransferOnePacket@len& (0+255),b
 17894  0137EC  0E02               	movlw	2
 17895  0137EE  EC4D  F09D         	call	_USBTransferOnePacket
 17896  0137F2  C0B9  F098         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17897  0137F6  C0BA  F099         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17898  0137FA                     l10029:
 17899                           
 17900                           ;usb_device_cdc.c: 567: }
 17901                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 17902  0137FA  0100               	movlb	0	; () banked
 17903  0137FC  51A3               	movf	_cdc_rx_len& (0+255),w,b
 17904  0137FE  0012               	return	
 17905  013800                     __end_of_getsUSBUSART:
 17906                           	opt stack 0
 17907                           tblptru	equ	0xFF8
 17908                           tblptrh	equ	0xFF7
 17909                           tblptrl	equ	0xFF6
 17910                           tablat	equ	0xFF5
 17911                           prodh	equ	0xFF4
 17912                           prodl	equ	0xFF3
 17913                           intcon	equ	0xFF2
 17914                           intcon2	equ	0xFF1
 17915                           postinc0	equ	0xFEE
 17916                           wreg	equ	0xFE8
 17917                           indf1	equ	0xFE7
 17918                           postinc1	equ	0xFE6
 17919                           postdec1	equ	0xFE5
 17920                           fsr1h	equ	0xFE2
 17921                           fsr1l	equ	0xFE1
 17922                           indf2	equ	0xFDF
 17923                           postinc2	equ	0xFDE
 17924                           postdec2	equ	0xFDD
 17925                           plusw2	equ	0xFDB
 17926                           fsr2h	equ	0xFDA
 17927                           fsr2l	equ	0xFD9
 17928                           status	equ	0xFD8
 17929                           
 17930 ;; *************** function _CDCTxService *****************
 17931 ;; Defined at:
 17932 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;		None
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 17937 ;;  i               1   10[BANK0 ] unsigned char 
 17938 ;; Return value:  Size  Location     Type
 17939 ;;		None               void
 17940 ;; Registers used:
 17941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17942 ;; Tracked objects:
 17943 ;;		On entry : 0/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17948 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17950 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17951 ;;Total ram usage:        5 bytes
 17952 ;; Hardware stack levels used:    1
 17953 ;; Hardware stack levels required when called:   12
 17954 ;; This function calls:
 17955 ;;		_USBTransferOnePacket
 17956 ;; This function is called by:
 17957 ;;		_put_string_usb
 17958 ;;		_get_string_usb
 17959 ;; This function uses a non-reentrant model
 17960 ;;
 17961                           
 17962                           	psect	text82
 17963  0125C6                     __ptext82:
 17964                           	opt stack 0
 17965  0125C6                     _CDCTxService:
 17966                           	opt stack 16
 17967                           
 17968                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 17969                           ;usb_device_cdc.c: 896: uint8_t i;
 17970                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;incstack = 0
 17974  0125C6  98A0               	bcf	4000,4,c	;volatile
 17975                           
 17976                           ;usb_device_cdc.c: 900: {};
 17977                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 17978  0125C8  0100               	movlb	0	; () banked
 17979  0125CA  5196               	movf	_CDCDataInHandle& (0+255),w,b
 17980  0125CC  0100               	movlb	0	; () banked
 17981  0125CE  1197               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 17982  0125D0  B4D8               	btfsc	status,2,c
 17983  0125D2  D013               	goto	l9927
 17984                           
 17985                           ; BSR set to: 0
 17986  0125D4  C096  FFD9         	movff	_CDCDataInHandle,fsr2l
 17987  0125D8  C097  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 17988  0125DC  0100               	movlb	0	; () banked
 17989  0125DE  AEDF               	btfss	indf2,7,c
 17990  0125E0  D004               	goto	u10790
 17991  0125E2  0100               	movlb	0	; () banked
 17992  0125E4  6BC0               	clrf	??_CDCTxService& (0+255),b
 17993  0125E6  2BC0               	incf	??_CDCTxService& (0+255),f,b
 17994  0125E8  D002               	goto	u10798
 17995  0125EA                     u10790:
 17996  0125EA  0100               	movlb	0	; () banked
 17997  0125EC  6BC0               	clrf	??_CDCTxService& (0+255),b
 17998  0125EE                     u10798:
 17999  0125EE  0100               	movlb	0	; () banked
 18000  0125F0  51C0               	movf	??_CDCTxService& (0+255),w,b
 18001  0125F2  0100               	movlb	0	; () banked
 18002  0125F4  6FC1               	movwf	_CDCTxService$4487& (0+255),b
 18003  0125F6  6BC2               	clrf	(_CDCTxService$4487+1)& (0+255),b
 18004  0125F8  D005               	goto	l9929
 18005  0125FA                     l9927:
 18006                           
 18007                           ; BSR set to: 0
 18008  0125FA  0E00               	movlw	0
 18009  0125FC  0100               	movlb	0	; () banked
 18010  0125FE  6FC2               	movwf	(_CDCTxService$4487+1)& (0+255),b
 18011  012600  0E00               	movlw	0
 18012  012602  6FC1               	movwf	_CDCTxService$4487& (0+255),b
 18013  012604                     l9929:
 18014                           
 18015                           ; BSR set to: 0
 18016  012604  0100               	movlb	0	; () banked
 18017  012606  51C1               	movf	_CDCTxService$4487& (0+255),w,b
 18018  012608  0100               	movlb	0	; () banked
 18019  01260A  11C2               	iorwf	(_CDCTxService$4487+1)& (0+255),w,b
 18020  01260C  B4D8               	btfsc	status,2,c
 18021  01260E  D002               	goto	l9933
 18022                           
 18023                           ; BSR set to: 0
 18024                           ;usb_device_cdc.c: 903: {
 18025                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 18026  012610  88A0               	bsf	4000,4,c	;volatile
 18027                           
 18028                           ;usb_device_cdc.c: 905: return;
 18029  012612  0012               	return	
 18030  012614                     l9933:
 18031                           
 18032                           ; BSR set to: 0
 18033                           ;usb_device_cdc.c: 906: }
 18034                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 18035  012614  0E03               	movlw	3
 18036  012616  0100               	movlb	0	; () banked
 18037  012618  19A4               	xorwf	_cdc_trf_state& (0+255),w,b
 18038  01261A  A4D8               	btfss	status,2,c
 18039  01261C  D003               	goto	l1466
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 18043  01261E  0E00               	movlw	0
 18044  012620  0100               	movlb	0	; () banked
 18045  012622  6FA4               	movwf	_cdc_trf_state& (0+255),b
 18046  012624                     l1466:
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 18050  012624  0100               	movlb	0	; () banked
 18051  012626  51A4               	movf	_cdc_trf_state& (0+255),w,b
 18052  012628  A4D8               	btfss	status,2,c
 18053  01262A  D002               	goto	l9939
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;usb_device_cdc.c: 920: {
 18057                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 18058  01262C  88A0               	bsf	4000,4,c	;volatile
 18059                           
 18060                           ;usb_device_cdc.c: 922: return;
 18061  01262E  0012               	return	
 18062  012630                     l9939:
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;usb_device_cdc.c: 923: }
 18066                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 18067  012630  0E02               	movlw	2
 18068  012632  0100               	movlb	0	; () banked
 18069  012634  19A4               	xorwf	_cdc_trf_state& (0+255),w,b
 18070  012636  A4D8               	btfss	status,2,c
 18071  012638  D017               	goto	l9945
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;usb_device_cdc.c: 929: {
 18075                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 18076  01263A  0E01               	movlw	1
 18077  01263C  0100               	movlb	0	; () banked
 18078  01263E  6FB9               	movwf	USBTransferOnePacket@dir& (0+255),b
 18079  012640  0E00               	movlw	0
 18080  012642  0100               	movlb	0	; () banked
 18081  012644  6FBA               	movwf	USBTransferOnePacket@data& (0+255),b
 18082  012646  0E00               	movlw	0
 18083  012648  0100               	movlb	0	; () banked
 18084  01264A  6FBB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18085  01264C  0E00               	movlw	0
 18086  01264E  0100               	movlb	0	; () banked
 18087  012650  6FBC               	movwf	USBTransferOnePacket@len& (0+255),b
 18088  012652  0E02               	movlw	2
 18089  012654  EC4D  F09D         	call	_USBTransferOnePacket
 18090  012658  C0B9  F096         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 18091  01265C  C0BA  F097         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 18092                           
 18093                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 18094  012660  0E03               	movlw	3
 18095  012662  0100               	movlb	0	; () banked
 18096  012664  6FA4               	movwf	_cdc_trf_state& (0+255),b
 18097                           
 18098                           ;usb_device_cdc.c: 933: }
 18099  012666  D073               	goto	l9989
 18100  012668                     l9945:
 18101                           
 18102                           ; BSR set to: 0
 18103                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 18104  012668  0100               	movlb	0	; () banked
 18105  01266A  05A4               	decf	_cdc_trf_state& (0+255),w,b
 18106  01266C  A4D8               	btfss	status,2,c
 18107  01266E  D06F               	goto	l9989
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;usb_device_cdc.c: 935: {
 18111                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 18112  012670  0E40               	movlw	64
 18113  012672  0100               	movlb	0	; () banked
 18114  012674  65A5               	cpfsgt	_cdc_tx_len& (0+255),b
 18115  012676  D004               	goto	l1471
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 18119  012678  0E40               	movlw	64
 18120  01267A  0100               	movlb	0	; () banked
 18121  01267C  6FC4               	movwf	CDCTxService@byte_to_send& (0+255),b
 18122  01267E  D002               	goto	l9951
 18123  012680                     l1471:
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;usb_device_cdc.c: 941: else
 18127                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 18128  012680  C0A5  F0C4         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 18129  012684                     l9951:
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 18133  012684  0100               	movlb	0	; () banked
 18134  012686  51C4               	movf	CDCTxService@byte_to_send& (0+255),w,b
 18135  012688  0800               	sublw	0
 18136  01268A  0100               	movlb	0	; () banked
 18137  01268C  25A5               	addwf	_cdc_tx_len& (0+255),w,b
 18138  01268E  0100               	movlb	0	; () banked
 18139  012690  6FA5               	movwf	_cdc_tx_len& (0+255),b
 18140                           
 18141                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 18142  012692  0E82               	movlw	low _cdc_data_tx
 18143  012694  0100               	movlb	0	; () banked
 18144  012696  6F90               	movwf	_pCDCDst& (0+255),b
 18145  012698  0E03               	movlw	high _cdc_data_tx
 18146  01269A  0100               	movlb	0	; () banked
 18147  01269C  6F91               	movwf	(_pCDCDst+1)& (0+255),b
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;usb_device_cdc.c: 951: i = byte_to_send;
 18151  01269E  C0C4  F0C3         	movff	CDCTxService@byte_to_send,CDCTxService@i
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 18155  0126A2  0100               	movlb	0	; () banked
 18156  0126A4  51A2               	movf	_cdc_mem_type& (0+255),w,b
 18157  0126A6  0100               	movlb	0	; () banked
 18158  0126A8  B4D8               	btfsc	status,2,c
 18159  0126AA  D013               	goto	l9967
 18160  0126AC  D02A               	goto	l9977
 18161  0126AE                     l9959:
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;usb_device_cdc.c: 955: {
 18165                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 18166  0126AE  C093  FFD9         	movff	_pCDCSrc,fsr2l
 18167  0126B2  C094  FFDA         	movff	_pCDCSrc+1,fsr2h
 18168  0126B6  C090  FFE1         	movff	_pCDCDst,fsr1l
 18169  0126BA  C091  FFE2         	movff	_pCDCDst+1,fsr1h
 18170  0126BE  CFDF FFE7          	movff	indf2,indf1
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 18174  0126C2  0100               	movlb	0	; () banked
 18175  0126C4  4B90               	infsnz	_pCDCDst& (0+255),f,b
 18176  0126C6  2B91               	incf	(_pCDCDst+1)& (0+255),f,b
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 18180  0126C8  0100               	movlb	0	; () banked
 18181  0126CA  4B93               	infsnz	_pCDCSrc& (0+255),f,b
 18182  0126CC  2B94               	incf	(_pCDCSrc+1)& (0+255),f,b
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;usb_device_cdc.c: 959: i--;
 18186  0126CE  0100               	movlb	0	; () banked
 18187  0126D0  07C3               	decf	CDCTxService@i& (0+255),f,b
 18188  0126D2                     l9967:
 18189                           
 18190                           ; BSR set to: 0
 18191  0126D2  0100               	movlb	0	; () banked
 18192  0126D4  51C3               	movf	CDCTxService@i& (0+255),w,b
 18193  0126D6  0100               	movlb	0	; () banked
 18194  0126D8  B4D8               	btfsc	status,2,c
 18195  0126DA  D018               	goto	l9979
 18196  0126DC  D7E8               	goto	l9959
 18197  0126DE                     l9969:
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;usb_device_cdc.c: 965: {
 18201                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 18202  0126DE  C093  FFD9         	movff	_pCDCSrc,fsr2l
 18203  0126E2  C094  FFDA         	movff	_pCDCSrc+1,fsr2h
 18204  0126E6  C090  FFE1         	movff	_pCDCDst,fsr1l
 18205  0126EA  C091  FFE2         	movff	_pCDCDst+1,fsr1h
 18206  0126EE  CFDF FFE7          	movff	indf2,indf1
 18207                           
 18208                           ; BSR set to: 0
 18209                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 18210  0126F2  0100               	movlb	0	; () banked
 18211  0126F4  4B90               	infsnz	_pCDCDst& (0+255),f,b
 18212  0126F6  2B91               	incf	(_pCDCDst+1)& (0+255),f,b
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 18216  0126F8  0100               	movlb	0	; () banked
 18217  0126FA  4B93               	infsnz	_pCDCSrc& (0+255),f,b
 18218  0126FC  2B94               	incf	(_pCDCSrc+1)& (0+255),f,b
 18219                           
 18220                           ; BSR set to: 0
 18221                           ;usb_device_cdc.c: 969: i--;
 18222  0126FE  0100               	movlb	0	; () banked
 18223  012700  07C3               	decf	CDCTxService@i& (0+255),f,b
 18224  012702                     l9977:
 18225                           
 18226                           ; BSR set to: 0
 18227  012702  0100               	movlb	0	; () banked
 18228  012704  51C3               	movf	CDCTxService@i& (0+255),w,b
 18229  012706  0100               	movlb	0	; () banked
 18230  012708  A4D8               	btfss	status,2,c
 18231  01270A  D7E9               	goto	l9969
 18232  01270C                     l9979:
 18233                           
 18234                           ; BSR set to: 0
 18235                           ;usb_device_cdc.c: 970: }
 18236                           ;usb_device_cdc.c: 971: }
 18237                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 18238  01270C  0100               	movlb	0	; () banked
 18239  01270E  51A5               	movf	_cdc_tx_len& (0+255),w,b
 18240  012710  0100               	movlb	0	; () banked
 18241  012712  A4D8               	btfss	status,2,c
 18242  012714  D00A               	goto	l9987
 18243                           
 18244                           ; BSR set to: 0
 18245                           ;usb_device_cdc.c: 978: {
 18246                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 18247  012716  0E40               	movlw	64
 18248  012718  0100               	movlb	0	; () banked
 18249  01271A  19C4               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 18250  01271C  A4D8               	btfss	status,2,c
 18251  01271E  D002               	goto	l9985
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 18255  012720  0E02               	movlw	2
 18256  012722  D001               	goto	L5
 18257  012724                     l9985:
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;usb_device_cdc.c: 981: else
 18261                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 18262  012724  0E03               	movlw	3
 18263  012726                     L5:
 18264  012726  0100               	movlb	0	; () banked
 18265  012728  6FA4               	movwf	_cdc_trf_state& (0+255),b
 18266  01272A                     l9987:
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;usb_device_cdc.c: 983: }
 18270                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 18271  01272A  0E01               	movlw	1
 18272  01272C  0100               	movlb	0	; () banked
 18273  01272E  6FB9               	movwf	USBTransferOnePacket@dir& (0+255),b
 18274  012730  0E82               	movlw	low _cdc_data_tx
 18275  012732  0100               	movlb	0	; () banked
 18276  012734  6FBA               	movwf	USBTransferOnePacket@data& (0+255),b
 18277  012736  0E03               	movlw	high _cdc_data_tx
 18278  012738  0100               	movlb	0	; () banked
 18279  01273A  6FBB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18280  01273C  C0C4  F0BC         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 18281  012740  0E02               	movlw	2
 18282  012742  EC4D  F09D         	call	_USBTransferOnePacket
 18283  012746  C0B9  F096         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 18284  01274A  C0BA  F097         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 18285  01274E                     l9989:
 18286                           
 18287                           ;usb_device_cdc.c: 986: }
 18288                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 18289  01274E  88A0               	bsf	4000,4,c	;volatile
 18290  012750  0012               	return		;funcret
 18291  012752                     __end_of_CDCTxService:
 18292                           	opt stack 0
 18293                           tblptru	equ	0xFF8
 18294                           tblptrh	equ	0xFF7
 18295                           tblptrl	equ	0xFF6
 18296                           tablat	equ	0xFF5
 18297                           prodh	equ	0xFF4
 18298                           prodl	equ	0xFF3
 18299                           intcon	equ	0xFF2
 18300                           intcon2	equ	0xFF1
 18301                           postinc0	equ	0xFEE
 18302                           wreg	equ	0xFE8
 18303                           indf1	equ	0xFE7
 18304                           postinc1	equ	0xFE6
 18305                           postdec1	equ	0xFE5
 18306                           fsr1h	equ	0xFE2
 18307                           fsr1l	equ	0xFE1
 18308                           indf2	equ	0xFDF
 18309                           postinc2	equ	0xFDE
 18310                           postdec2	equ	0xFDD
 18311                           plusw2	equ	0xFDB
 18312                           fsr2h	equ	0xFDA
 18313                           fsr2l	equ	0xFD9
 18314                           status	equ	0xFD8
 18315                           
 18316 ;; *************** function _USBTransferOnePacket *****************
 18317 ;; Defined at:
 18318 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;  ep              1    wreg     unsigned char 
 18321 ;;  dir             1    0[BANK0 ] unsigned char 
 18322 ;;  data            2    1[BANK0 ] PTR unsigned char 
 18323 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18324 ;;  len             1    3[BANK0 ] unsigned char 
 18325 ;; Auto vars:     Size  Location     Type
 18326 ;;  ep              1    4[BANK0 ] unsigned char 
 18327 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 18328 ;;		 -> NULL(0), BDT(48), 
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  2    0[BANK0 ] PTR void 
 18331 ;; Registers used:
 18332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18339 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18341 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18342 ;;Total ram usage:        7 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; Hardware stack levels required when called:   11
 18345 ;; This function calls:
 18346 ;;		Nothing
 18347 ;; This function is called by:
 18348 ;;		_getsUSBUSART
 18349 ;;		_CDCTxService
 18350 ;;		_USBCDCEventHandler
 18351 ;; This function uses a non-reentrant model
 18352 ;;
 18353                           
 18354                           	psect	text83
 18355  013A9A                     __ptext83:
 18356                           	opt stack 0
 18357  013A9A                     _USBTransferOnePacket:
 18358                           	opt stack 16
 18359                           
 18360                           ;incstack = 0
 18361                           ;USBTransferOnePacket@ep stored from wreg
 18362  013A9A  0100               	movlb	0	; () banked
 18363  013A9C  6FBD               	movwf	USBTransferOnePacket@ep& (0+255),b
 18364                           
 18365                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18366                           ;usb_device.c: 1000: if(dir != 0)
 18367  013A9E  0100               	movlb	0	; () banked
 18368  013AA0  51B9               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18369  013AA2  0100               	movlb	0	; () banked
 18370  013AA4  B4D8               	btfsc	status,2,c
 18371  013AA6  D008               	goto	l9409
 18372                           
 18373                           ; BSR set to: 0
 18374                           ;usb_device.c: 1001: {
 18375                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18376  013AA8  0100               	movlb	0	; () banked
 18377  013AAA  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18378  013AAC  0D02               	mullw	2
 18379  013AAE  0E7B               	movlw	low _pBDTEntryIn
 18380  013AB0  24F3               	addwf	prodl,w,c
 18381  013AB2  6ED9               	movwf	fsr2l,c
 18382  013AB4  0E00               	movlw	high _pBDTEntryIn
 18383  013AB6  D007               	goto	L6
 18384  013AB8                     l9409:
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;usb_device.c: 1005: else
 18388                           ;usb_device.c: 1006: {
 18389                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18390  013AB8  0100               	movlb	0	; () banked
 18391  013ABA  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18392  013ABC  0D02               	mullw	2
 18393  013ABE  0E81               	movlw	low _pBDTEntryOut
 18394  013AC0  24F3               	addwf	prodl,w,c
 18395  013AC2  6ED9               	movwf	fsr2l,c
 18396  013AC4  0E00               	movlw	high _pBDTEntryOut
 18397  013AC6                     L6:
 18398  013AC6  20F4               	addwfc	prodh,w,c
 18399  013AC8  6EDA               	movwf	fsr2h,c
 18400  013ACA  CFDE F0BE          	movff	postinc2,USBTransferOnePacket@handle
 18401  013ACE  CFDD F0BF          	movff	postdec2,USBTransferOnePacket@handle+1
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;usb_device.c: 1009: }
 18405                           ;usb_device.c: 1013: if(handle == 0)
 18406                           
 18407                           ; BSR set to: 0
 18408  013AD2  0100               	movlb	0	; () banked
 18409  013AD4  51BE               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18410  013AD6  0100               	movlb	0	; () banked
 18411  013AD8  11BF               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18412  013ADA  A4D8               	btfss	status,2,c
 18413  013ADC  D007               	goto	l9417
 18414                           
 18415                           ; BSR set to: 0
 18416                           ;usb_device.c: 1014: {
 18417                           ;usb_device.c: 1015: return 0;
 18418  013ADE  0E00               	movlw	0
 18419  013AE0  0100               	movlb	0	; () banked
 18420  013AE2  6FB9               	movwf	?_USBTransferOnePacket& (0+255),b
 18421  013AE4  0E00               	movlw	0
 18422  013AE6  0100               	movlb	0	; () banked
 18423  013AE8  6FBA               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18424                           
 18425                           ; BSR set to: 0
 18426  013AEA  0012               	return	
 18427  013AEC                     l9417:
 18428                           
 18429                           ; BSR set to: 0
 18430                           ;usb_device.c: 1016: }
 18431                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18432  013AEC  0100               	movlb	0	; () banked
 18433  013AEE  EE20 F002          	lfsr	2,2
 18434  013AF2  51BE               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18435  013AF4  26D9               	addwf	fsr2l,f,c
 18436  013AF6  51BF               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18437  013AF8  22DA               	addwfc	fsr2h,f,c
 18438  013AFA  C0BA  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18439  013AFE  C0BB  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18440                           
 18441                           ;usb_device.c: 1030: handle->CNT = len;
 18442  013B02  0100               	movlb	0	; () banked
 18443  013B04  EE20 F001          	lfsr	2,1
 18444  013B08  51BE               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18445  013B0A  26D9               	addwf	fsr2l,f,c
 18446  013B0C  51BF               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18447  013B0E  22DA               	addwfc	fsr2h,f,c
 18448  013B10  C0BC  FFDF         	movff	USBTransferOnePacket@len,indf2
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18452  013B14  C0BE  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18453  013B18  C0BF  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18454  013B1C  0E40               	movlw	64
 18455  013B1E  16DF               	andwf	indf2,f,c
 18456                           
 18457                           ; BSR set to: 0
 18458                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18459  013B20  C0BE  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18460  013B24  C0BF  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18461  013B28  0E00               	movlw	0
 18462  013B2A  86DB               	bsf	plusw2,3,c
 18463                           
 18464                           ; BSR set to: 0
 18465                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18466  013B2C  C0BE  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18467  013B30  C0BF  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18468  013B34  0E00               	movlw	0
 18469  013B36  8EDB               	bsf	plusw2,7,c
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;usb_device.c: 1036: if(dir != 0)
 18473  013B38  0100               	movlb	0	; () banked
 18474  013B3A  51B9               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18475  013B3C  0100               	movlb	0	; () banked
 18476  013B3E  B4D8               	btfsc	status,2,c
 18477  013B40  D008               	goto	l9429
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;usb_device.c: 1037: {
 18481                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18482  013B42  0100               	movlb	0	; () banked
 18483  013B44  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18484  013B46  0D02               	mullw	2
 18485  013B48  0E7B               	movlw	low _pBDTEntryIn
 18486  013B4A  24F3               	addwf	prodl,w,c
 18487  013B4C  6ED9               	movwf	fsr2l,c
 18488  013B4E  0E00               	movlw	high _pBDTEntryIn
 18489  013B50  D007               	goto	L7
 18490  013B52                     l9429:
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;usb_device.c: 1041: else
 18494                           ;usb_device.c: 1042: {
 18495                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18496  013B52  0100               	movlb	0	; () banked
 18497  013B54  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18498  013B56  0D02               	mullw	2
 18499  013B58  0E81               	movlw	low _pBDTEntryOut
 18500  013B5A  24F3               	addwf	prodl,w,c
 18501  013B5C  6ED9               	movwf	fsr2l,c
 18502  013B5E  0E00               	movlw	high _pBDTEntryOut
 18503  013B60                     L7:
 18504  013B60  20F4               	addwfc	prodh,w,c
 18505  013B62  6EDA               	movwf	fsr2h,c
 18506  013B64  0E04               	movlw	4
 18507  013B66  1ADF               	xorwf	indf2,f,c
 18508                           
 18509                           ; BSR set to: 0
 18510                           ;usb_device.c: 1045: }
 18511                           ;usb_device.c: 1046: return (void*)handle;
 18512                           
 18513                           ; BSR set to: 0
 18514  013B68  C0BE  F0B9         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18515  013B6C  C0BF  F0BA         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18516  013B70  0012               	return	
 18517  013B72                     __end_of_USBTransferOnePacket:
 18518                           	opt stack 0
 18519                           tblptru	equ	0xFF8
 18520                           tblptrh	equ	0xFF7
 18521                           tblptrl	equ	0xFF6
 18522                           tablat	equ	0xFF5
 18523                           prodh	equ	0xFF4
 18524                           prodl	equ	0xFF3
 18525                           intcon	equ	0xFF2
 18526                           intcon2	equ	0xFF1
 18527                           postinc0	equ	0xFEE
 18528                           wreg	equ	0xFE8
 18529                           indf1	equ	0xFE7
 18530                           postinc1	equ	0xFE6
 18531                           postdec1	equ	0xFE5
 18532                           fsr1h	equ	0xFE2
 18533                           fsr1l	equ	0xFE1
 18534                           indf2	equ	0xFDF
 18535                           postinc2	equ	0xFDE
 18536                           postdec2	equ	0xFDD
 18537                           plusw2	equ	0xFDB
 18538                           fsr2h	equ	0xFDA
 18539                           fsr2l	equ	0xFD9
 18540                           status	equ	0xFD8
 18541                           
 18542 ;; *************** function _RTCC_loop *****************
 18543 ;; Defined at:
 18544 ;;		line 387 in file "../My_header\My_RTCC.h"
 18545 ;; Parameters:    Size  Location     Type
 18546 ;;		None
 18547 ;; Auto vars:     Size  Location     Type
 18548 ;;		None
 18549 ;; Return value:  Size  Location     Type
 18550 ;;		None               void
 18551 ;; Registers used:
 18552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18553 ;; Tracked objects:
 18554 ;;		On entry : 0/0
 18555 ;;		On exit  : 0/0
 18556 ;;		Unchanged: 0/0
 18557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18562 ;;Total ram usage:        0 bytes
 18563 ;; Hardware stack levels used:    1
 18564 ;; Hardware stack levels required when called:   15
 18565 ;; This function calls:
 18566 ;;		_RTCC_from_RTCC
 18567 ;; This function is called by:
 18568 ;;		_main
 18569 ;; This function uses a non-reentrant model
 18570 ;;
 18571                           
 18572                           	psect	text84
 18573  01591C                     __ptext84:
 18574                           	opt stack 0
 18575  01591C                     _RTCC_loop:
 18576                           	opt stack 15
 18577  01591C                     l563:
 18578  01591C  010F               	movlb	15	; () banked
 18579  01591E  B93F               	btfsc	63,4,b	;volatile
 18580  015920  D7FD               	goto	l563
 18581                           
 18582                           ; BSR set to: 15
 18583                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 18584                           
 18585                           ; BSR set to: 15
 18586  015922  0E00               	movlw	0
 18587  015924  B73F               	btfsc	63,3,b	;volatile
 18588  015926  0E01               	movlw	1
 18589  015928  0100               	movlb	0	; () banked
 18590  01592A  6FA9               	movwf	_halfsec& (0+255),b
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 18594  01592C  0100               	movlb	0	; () banked
 18595  01592E  51A9               	movf	_halfsec& (0+255),w,b
 18596  015930  0100               	movlb	0	; () banked
 18597  015932  19A0               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
 18598  015934  B4D8               	btfsc	status,2,c
 18599  015936  0012               	return	
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 18603  015938  C0A9  F0A0         	movff	_halfsec,RTCC_loop@prev_halfsec
 18604                           
 18605                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 18606  01593C  C0A9  F0A6         	movff	_halfsec,_colon
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 18610  015940  0E01               	movlw	1
 18611  015942  6E4F               	movwf	_time_change_flag,c
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 18615  015944  0EAE               	movlw	low _caltime_now
 18616  015946  0100               	movlb	0	; () banked
 18617  015948  6FE1               	movwf	RTCC_from_RTCC@ct& (0+255),b
 18618  01594A  0E00               	movlw	high _caltime_now
 18619  01594C  0100               	movlb	0	; () banked
 18620  01594E  6FE2               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 18621  015950  0EB5               	movlw	low _epoch_now
 18622  015952  0100               	movlb	0	; () banked
 18623  015954  6FE3               	movwf	RTCC_from_RTCC@ep& (0+255),b
 18624  015956  0E00               	movlw	high _epoch_now
 18625  015958  0100               	movlb	0	; () banked
 18626  01595A  6FE4               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 18627  01595C  EC5E  F0AF         	call	_RTCC_from_RTCC	;wreg free
 18628  015960  0012               	return	
 18629  015962                     __end_of_RTCC_loop:
 18630                           	opt stack 0
 18631                           tblptru	equ	0xFF8
 18632                           tblptrh	equ	0xFF7
 18633                           tblptrl	equ	0xFF6
 18634                           tablat	equ	0xFF5
 18635                           prodh	equ	0xFF4
 18636                           prodl	equ	0xFF3
 18637                           intcon	equ	0xFF2
 18638                           intcon2	equ	0xFF1
 18639                           postinc0	equ	0xFEE
 18640                           wreg	equ	0xFE8
 18641                           indf1	equ	0xFE7
 18642                           postinc1	equ	0xFE6
 18643                           postdec1	equ	0xFE5
 18644                           fsr1h	equ	0xFE2
 18645                           fsr1l	equ	0xFE1
 18646                           indf2	equ	0xFDF
 18647                           postinc2	equ	0xFDE
 18648                           postdec2	equ	0xFDD
 18649                           plusw2	equ	0xFDB
 18650                           fsr2h	equ	0xFDA
 18651                           fsr2l	equ	0xFD9
 18652                           status	equ	0xFD8
 18653                           
 18654 ;; *************** function _RTCC_from_RTCC *****************
 18655 ;; Defined at:
 18656 ;;		line 231 in file "../My_header\My_RTCC.h"
 18657 ;; Parameters:    Size  Location     Type
 18658 ;;  ct              2   40[BANK0 ] PTR struct .
 18659 ;;		 -> caltime_now(7), 
 18660 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 18661 ;;		 -> epoch_now(4), 
 18662 ;; Auto vars:     Size  Location     Type
 18663 ;;		None
 18664 ;; Return value:  Size  Location     Type
 18665 ;;		None               void
 18666 ;; Registers used:
 18667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18668 ;; Tracked objects:
 18669 ;;		On entry : 0/0
 18670 ;;		On exit  : 0/0
 18671 ;;		Unchanged: 0/0
 18672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18677 ;;Total ram usage:        4 bytes
 18678 ;; Hardware stack levels used:    1
 18679 ;; Hardware stack levels required when called:   14
 18680 ;; This function calls:
 18681 ;;		_RTCC_to_caltime
 18682 ;;		_caltime_to_epoch
 18683 ;; This function is called by:
 18684 ;;		_display_time_1602
 18685 ;;		_RTCC_adjust_time_inc
 18686 ;;		_RTCC_adjust_time_dec
 18687 ;;		_RTCC_loop
 18688 ;;		_main
 18689 ;;		_display_time_0802
 18690 ;;		_sleep_loop
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text85
 18695  015EBC                     __ptext85:
 18696                           	opt stack 0
 18697  015EBC                     _RTCC_from_RTCC:
 18698                           	opt stack 13
 18699                           
 18700                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 18701                           
 18702                           ;incstack = 0
 18703  015EBC  C0E1  F0BB         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 18704  015EC0  C0E2  F0BC         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 18705  015EC4  EC35  F0A3         	call	_RTCC_to_caltime	;wreg free
 18706                           
 18707                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 18708  015EC8  C0E1  F0D2         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 18709  015ECC  C0E2  F0D3         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 18710  015ED0  C0E3  F0D4         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 18711  015ED4  C0E4  F0D5         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 18712  015ED8  EC15  F08C         	call	_caltime_to_epoch	;wreg free
 18713  015EDC  0012               	return		;funcret
 18714  015EDE                     __end_of_RTCC_from_RTCC:
 18715                           	opt stack 0
 18716                           tblptru	equ	0xFF8
 18717                           tblptrh	equ	0xFF7
 18718                           tblptrl	equ	0xFF6
 18719                           tablat	equ	0xFF5
 18720                           prodh	equ	0xFF4
 18721                           prodl	equ	0xFF3
 18722                           intcon	equ	0xFF2
 18723                           intcon2	equ	0xFF1
 18724                           postinc0	equ	0xFEE
 18725                           wreg	equ	0xFE8
 18726                           indf1	equ	0xFE7
 18727                           postinc1	equ	0xFE6
 18728                           postdec1	equ	0xFE5
 18729                           fsr1h	equ	0xFE2
 18730                           fsr1l	equ	0xFE1
 18731                           indf2	equ	0xFDF
 18732                           postinc2	equ	0xFDE
 18733                           postdec2	equ	0xFDD
 18734                           plusw2	equ	0xFDB
 18735                           fsr2h	equ	0xFDA
 18736                           fsr2l	equ	0xFD9
 18737                           status	equ	0xFD8
 18738                           
 18739 ;; *************** function _caltime_to_epoch *****************
 18740 ;; Defined at:
 18741 ;;		line 211 in file "../My_header\My_RTCC.h"
 18742 ;; Parameters:    Size  Location     Type
 18743 ;;  ct              2   25[BANK0 ] PTR struct .
 18744 ;;		 -> caltime_now(7), 
 18745 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 18746 ;;		 -> epoch_now(4), 
 18747 ;; Auto vars:     Size  Location     Type
 18748 ;;  month           1   39[BANK0 ] unsigned char 
 18749 ;;  month           1   34[BANK0 ] unsigned char 
 18750 ;;  year            1   33[BANK0 ] unsigned char 
 18751 ;;  epoch           4   35[BANK0 ] unsigned long 
 18752 ;; Return value:  Size  Location     Type
 18753 ;;		None               void
 18754 ;; Registers used:
 18755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18756 ;; Tracked objects:
 18757 ;;		On entry : 0/0
 18758 ;;		On exit  : 0/0
 18759 ;;		Unchanged: 0/0
 18760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18762 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18763 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18764 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18765 ;;Total ram usage:       15 bytes
 18766 ;; Hardware stack levels used:    1
 18767 ;; Hardware stack levels required when called:   13
 18768 ;; This function calls:
 18769 ;;		___lmul
 18770 ;;		_month_length
 18771 ;; This function is called by:
 18772 ;;		_RTCC_from_RTCC
 18773 ;;		_RTCC_from_caltime
 18774 ;; This function uses a non-reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text86
 18778  01182A                     __ptext86:
 18779                           	opt stack 0
 18780  01182A                     _caltime_to_epoch:
 18781                           	opt stack 13
 18782                           
 18783                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 18784                           
 18785                           ;incstack = 0
 18786  01182A  0E00               	movlw	0
 18787  01182C  0100               	movlb	0	; () banked
 18788  01182E  6FDC               	movwf	caltime_to_epoch@epoch& (0+255),b
 18789  011830  0E00               	movlw	0
 18790  011832  6FDD               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 18791  011834  0E00               	movlw	0
 18792  011836  6FDE               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 18793  011838  0E00               	movlw	0
 18794  01183A  6FDF               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 18795                           
 18796                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 18797  01183C  0E00               	movlw	0
 18798  01183E  0100               	movlb	0	; () banked
 18799  011840  6FDA               	movwf	caltime_to_epoch@year& (0+255),b
 18800  011842  D037               	goto	l9295
 18801  011844                     l9281:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 18805  011844  0E01               	movlw	1
 18806  011846  0100               	movlb	0	; () banked
 18807  011848  6FE0               	movwf	caltime_to_epoch@month& (0+255),b
 18808  01184A                     l9283:
 18809                           
 18810                           ; BSR set to: 0
 18811  01184A  0E0C               	movlw	12
 18812  01184C  0100               	movlb	0	; () banked
 18813  01184E  65E0               	cpfsgt	caltime_to_epoch@month& (0+255),b
 18814  011850  D001               	goto	l9287
 18815  011852  D02D               	goto	l9293
 18816  011854                     l9287:
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 18820  011854  C0E0  F0BF         	movff	caltime_to_epoch@month,month_length@month
 18821  011858  0100               	movlb	0	; () banked
 18822  01185A  51DA               	movf	caltime_to_epoch@year& (0+255),w,b
 18823  01185C  EC71  F09C         	call	_month_length
 18824  011860  0100               	movlb	0	; () banked
 18825  011862  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 18826  011864  0100               	movlb	0	; () banked
 18827  011866  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 18828  011868  0100               	movlb	0	; () banked
 18829  01186A  6FC6               	movwf	___lmul@multiplier& (0+255),b
 18830  01186C  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 18831  01186E  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 18832  011870  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 18833  011872  0E80               	movlw	128
 18834  011874  0100               	movlb	0	; () banked
 18835  011876  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 18836  011878  0E51               	movlw	81
 18837  01187A  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18838  01187C  0E01               	movlw	1
 18839  01187E  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18840  011880  0E00               	movlw	0
 18841  011882  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18842  011884  EC40  F0A9         	call	___lmul	;wreg free
 18843  011888  0100               	movlb	0	; () banked
 18844  01188A  51C6               	movf	?___lmul& (0+255),w,b
 18845  01188C  0100               	movlb	0	; () banked
 18846  01188E  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 18847  011890  0100               	movlb	0	; () banked
 18848  011892  51C7               	movf	(?___lmul+1)& (0+255),w,b
 18849  011894  0100               	movlb	0	; () banked
 18850  011896  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 18851  011898  0100               	movlb	0	; () banked
 18852  01189A  51C8               	movf	(?___lmul+2)& (0+255),w,b
 18853  01189C  0100               	movlb	0	; () banked
 18854  01189E  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 18855  0118A0  0100               	movlb	0	; () banked
 18856  0118A2  51C9               	movf	(?___lmul+3)& (0+255),w,b
 18857  0118A4  0100               	movlb	0	; () banked
 18858  0118A6  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 18859                           
 18860                           ; BSR set to: 0
 18861  0118A8  0100               	movlb	0	; () banked
 18862  0118AA  2BE0               	incf	caltime_to_epoch@month& (0+255),f,b
 18863  0118AC  D7CE               	goto	l9283
 18864  0118AE                     l9293:
 18865                           
 18866                           ; BSR set to: 0
 18867  0118AE  0100               	movlb	0	; () banked
 18868  0118B0  2BDA               	incf	caltime_to_epoch@year& (0+255),f,b
 18869  0118B2                     l9295:
 18870                           
 18871                           ; BSR set to: 0
 18872  0118B2  0100               	movlb	0	; () banked
 18873  0118B4  EE20 F006          	lfsr	2,6
 18874  0118B8  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 18875  0118BA  26D9               	addwf	fsr2l,f,c
 18876  0118BC  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 18877  0118BE  22DA               	addwfc	fsr2h,f,c
 18878  0118C0  50DE               	movf	postinc2,w,c
 18879  0118C2  0100               	movlb	0	; () banked
 18880  0118C4  5DDA               	subwf	caltime_to_epoch@year& (0+255),w,b
 18881  0118C6  A0D8               	btfss	status,0,c
 18882  0118C8  D7BD               	goto	l9281
 18883                           
 18884                           ; BSR set to: 0
 18885                           ;My_header\My_RTCC.h: 216: }
 18886                           ;My_header\My_RTCC.h: 217: }
 18887                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 18888                           
 18889                           ; BSR set to: 0
 18890  0118CA  0E01               	movlw	1
 18891  0118CC  0100               	movlb	0	; () banked
 18892  0118CE  6FDB               	movwf	caltime_to_epoch@month_2017& (0+255),b
 18893  0118D0  D032               	goto	l9303
 18894  0118D2                     l9299:
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 18898  0118D2  C0DB  F0BF         	movff	caltime_to_epoch@month_2017,month_length@month
 18899  0118D6  0100               	movlb	0	; () banked
 18900  0118D8  EE20 F006          	lfsr	2,6
 18901  0118DC  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 18902  0118DE  26D9               	addwf	fsr2l,f,c
 18903  0118E0  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 18904  0118E2  22DA               	addwfc	fsr2h,f,c
 18905  0118E4  50DF               	movf	indf2,w,c
 18906  0118E6  EC71  F09C         	call	_month_length
 18907  0118EA  0100               	movlb	0	; () banked
 18908  0118EC  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 18909  0118EE  0100               	movlb	0	; () banked
 18910  0118F0  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 18911  0118F2  0100               	movlb	0	; () banked
 18912  0118F4  6FC6               	movwf	___lmul@multiplier& (0+255),b
 18913  0118F6  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 18914  0118F8  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 18915  0118FA  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 18916  0118FC  0E80               	movlw	128
 18917  0118FE  0100               	movlb	0	; () banked
 18918  011900  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 18919  011902  0E51               	movlw	81
 18920  011904  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18921  011906  0E01               	movlw	1
 18922  011908  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18923  01190A  0E00               	movlw	0
 18924  01190C  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18925  01190E  EC40  F0A9         	call	___lmul	;wreg free
 18926  011912  0100               	movlb	0	; () banked
 18927  011914  51C6               	movf	?___lmul& (0+255),w,b
 18928  011916  0100               	movlb	0	; () banked
 18929  011918  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 18930  01191A  0100               	movlb	0	; () banked
 18931  01191C  51C7               	movf	(?___lmul+1)& (0+255),w,b
 18932  01191E  0100               	movlb	0	; () banked
 18933  011920  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 18934  011922  0100               	movlb	0	; () banked
 18935  011924  51C8               	movf	(?___lmul+2)& (0+255),w,b
 18936  011926  0100               	movlb	0	; () banked
 18937  011928  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 18938  01192A  0100               	movlb	0	; () banked
 18939  01192C  51C9               	movf	(?___lmul+3)& (0+255),w,b
 18940  01192E  0100               	movlb	0	; () banked
 18941  011930  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 18942                           
 18943                           ; BSR set to: 0
 18944  011932  0100               	movlb	0	; () banked
 18945  011934  2BDB               	incf	caltime_to_epoch@month_2017& (0+255),f,b
 18946  011936                     l9303:
 18947                           
 18948                           ; BSR set to: 0
 18949  011936  0100               	movlb	0	; () banked
 18950  011938  EE20 F005          	lfsr	2,5
 18951  01193C  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 18952  01193E  26D9               	addwf	fsr2l,f,c
 18953  011940  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 18954  011942  22DA               	addwfc	fsr2h,f,c
 18955  011944  50DE               	movf	postinc2,w,c
 18956  011946  0100               	movlb	0	; () banked
 18957  011948  5DDB               	subwf	caltime_to_epoch@month_2017& (0+255),w,b
 18958  01194A  A0D8               	btfss	status,0,c
 18959  01194C  D7C2               	goto	l9299
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;My_header\My_RTCC.h: 220: }
 18963                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 18964                           
 18965                           ; BSR set to: 0
 18966  01194E  0EFF               	movlw	255
 18967  011950  0100               	movlb	0	; () banked
 18968  011952  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 18969  011954  0EFF               	movlw	255
 18970  011956  0100               	movlb	0	; () banked
 18971  011958  6FD7               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 18972  01195A  0100               	movlb	0	; () banked
 18973  01195C  EE20 F004          	lfsr	2,4
 18974  011960  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 18975  011962  26D9               	addwf	fsr2l,f,c
 18976  011964  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 18977  011966  22DA               	addwfc	fsr2h,f,c
 18978  011968  50DF               	movf	indf2,w,c
 18979  01196A  0100               	movlb	0	; () banked
 18980  01196C  6FD8               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 18981  01196E  6BD9               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 18982  011970  0100               	movlb	0	; () banked
 18983  011972  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 18984  011974  0100               	movlb	0	; () banked
 18985  011976  27D8               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 18986  011978  0100               	movlb	0	; () banked
 18987  01197A  51D7               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 18988  01197C  0100               	movlb	0	; () banked
 18989  01197E  23D9               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 18990  011980  C0D8  F0C6         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 18991  011984  C0D9  F0C7         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 18992  011988  0100               	movlb	0	; () banked
 18993  01198A  0E00               	movlw	0
 18994  01198C  BFC7               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18995  01198E  0EFF               	movlw	-1
 18996  011990  6FC8               	movwf	(___lmul@multiplier+2)& (0+255),b
 18997  011992  6FC9               	movwf	(___lmul@multiplier+3)& (0+255),b
 18998  011994  0E80               	movlw	128
 18999  011996  0100               	movlb	0	; () banked
 19000  011998  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 19001  01199A  0E51               	movlw	81
 19002  01199C  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19003  01199E  0E01               	movlw	1
 19004  0119A0  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19005  0119A2  0E00               	movlw	0
 19006  0119A4  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19007  0119A6  EC40  F0A9         	call	___lmul	;wreg free
 19008  0119AA  0100               	movlb	0	; () banked
 19009  0119AC  51C6               	movf	?___lmul& (0+255),w,b
 19010  0119AE  0100               	movlb	0	; () banked
 19011  0119B0  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19012  0119B2  0100               	movlb	0	; () banked
 19013  0119B4  51C7               	movf	(?___lmul+1)& (0+255),w,b
 19014  0119B6  0100               	movlb	0	; () banked
 19015  0119B8  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19016  0119BA  0100               	movlb	0	; () banked
 19017  0119BC  51C8               	movf	(?___lmul+2)& (0+255),w,b
 19018  0119BE  0100               	movlb	0	; () banked
 19019  0119C0  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19020  0119C2  0100               	movlb	0	; () banked
 19021  0119C4  51C9               	movf	(?___lmul+3)& (0+255),w,b
 19022  0119C6  0100               	movlb	0	; () banked
 19023  0119C8  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19024                           
 19025                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 19026  0119CA  0100               	movlb	0	; () banked
 19027  0119CC  EE20 F002          	lfsr	2,2
 19028  0119D0  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 19029  0119D2  26D9               	addwf	fsr2l,f,c
 19030  0119D4  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19031  0119D6  22DA               	addwfc	fsr2h,f,c
 19032  0119D8  50DF               	movf	indf2,w,c
 19033  0119DA  0100               	movlb	0	; () banked
 19034  0119DC  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 19035  0119DE  0100               	movlb	0	; () banked
 19036  0119E0  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 19037  0119E2  0100               	movlb	0	; () banked
 19038  0119E4  6FC6               	movwf	___lmul@multiplier& (0+255),b
 19039  0119E6  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 19040  0119E8  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 19041  0119EA  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 19042  0119EC  0E10               	movlw	16
 19043  0119EE  0100               	movlb	0	; () banked
 19044  0119F0  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 19045  0119F2  0E0E               	movlw	14
 19046  0119F4  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19047  0119F6  0E00               	movlw	0
 19048  0119F8  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19049  0119FA  0E00               	movlw	0
 19050  0119FC  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19051  0119FE  EC40  F0A9         	call	___lmul	;wreg free
 19052  011A02  0100               	movlb	0	; () banked
 19053  011A04  51C6               	movf	?___lmul& (0+255),w,b
 19054  011A06  0100               	movlb	0	; () banked
 19055  011A08  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19056  011A0A  0100               	movlb	0	; () banked
 19057  011A0C  51C7               	movf	(?___lmul+1)& (0+255),w,b
 19058  011A0E  0100               	movlb	0	; () banked
 19059  011A10  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19060  011A12  0100               	movlb	0	; () banked
 19061  011A14  51C8               	movf	(?___lmul+2)& (0+255),w,b
 19062  011A16  0100               	movlb	0	; () banked
 19063  011A18  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19064  011A1A  0100               	movlb	0	; () banked
 19065  011A1C  51C9               	movf	(?___lmul+3)& (0+255),w,b
 19066  011A1E  0100               	movlb	0	; () banked
 19067  011A20  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19068                           
 19069                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 19070  011A22  0100               	movlb	0	; () banked
 19071  011A24  EE20 F001          	lfsr	2,1
 19072  011A28  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 19073  011A2A  26D9               	addwf	fsr2l,f,c
 19074  011A2C  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19075  011A2E  22DA               	addwfc	fsr2h,f,c
 19076  011A30  50DF               	movf	indf2,w,c
 19077  011A32  0100               	movlb	0	; () banked
 19078  011A34  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 19079  011A36  0100               	movlb	0	; () banked
 19080  011A38  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 19081  011A3A  0100               	movlb	0	; () banked
 19082  011A3C  6FC6               	movwf	___lmul@multiplier& (0+255),b
 19083  011A3E  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 19084  011A40  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 19085  011A42  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 19086  011A44  0E3C               	movlw	60
 19087  011A46  0100               	movlb	0	; () banked
 19088  011A48  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 19089  011A4A  0E00               	movlw	0
 19090  011A4C  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19091  011A4E  0E00               	movlw	0
 19092  011A50  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19093  011A52  0E00               	movlw	0
 19094  011A54  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19095  011A56  EC40  F0A9         	call	___lmul	;wreg free
 19096  011A5A  0100               	movlb	0	; () banked
 19097  011A5C  51C6               	movf	?___lmul& (0+255),w,b
 19098  011A5E  0100               	movlb	0	; () banked
 19099  011A60  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19100  011A62  0100               	movlb	0	; () banked
 19101  011A64  51C7               	movf	(?___lmul+1)& (0+255),w,b
 19102  011A66  0100               	movlb	0	; () banked
 19103  011A68  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19104  011A6A  0100               	movlb	0	; () banked
 19105  011A6C  51C8               	movf	(?___lmul+2)& (0+255),w,b
 19106  011A6E  0100               	movlb	0	; () banked
 19107  011A70  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19108  011A72  0100               	movlb	0	; () banked
 19109  011A74  51C9               	movf	(?___lmul+3)& (0+255),w,b
 19110  011A76  0100               	movlb	0	; () banked
 19111  011A78  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 19115  011A7A  C0D2  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 19116  011A7E  C0D3  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 19117  011A82  50DF               	movf	indf2,w,c
 19118  011A84  0100               	movlb	0	; () banked
 19119  011A86  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 19120  011A88  0100               	movlb	0	; () banked
 19121  011A8A  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 19122  011A8C  0100               	movlb	0	; () banked
 19123  011A8E  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19124  011A90  0E00               	movlw	0
 19125  011A92  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19126  011A94  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19127  011A96  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19128                           
 19129                           ; BSR set to: 0
 19130                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 19131  011A98  C0D4  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 19132  011A9C  C0D5  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 19133  011AA0  C0DC  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 19134  011AA4  C0DD  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 19135  011AA8  C0DE  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 19136  011AAC  C0DF  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 19137                           
 19138                           ; BSR set to: 0
 19139  011AB0  0012               	return		;funcret
 19140  011AB2                     __end_of_caltime_to_epoch:
 19141                           	opt stack 0
 19142                           tblptru	equ	0xFF8
 19143                           tblptrh	equ	0xFF7
 19144                           tblptrl	equ	0xFF6
 19145                           tablat	equ	0xFF5
 19146                           prodh	equ	0xFF4
 19147                           prodl	equ	0xFF3
 19148                           intcon	equ	0xFF2
 19149                           intcon2	equ	0xFF1
 19150                           postinc0	equ	0xFEE
 19151                           wreg	equ	0xFE8
 19152                           indf1	equ	0xFE7
 19153                           postinc1	equ	0xFE6
 19154                           postdec1	equ	0xFE5
 19155                           fsr1h	equ	0xFE2
 19156                           fsr1l	equ	0xFE1
 19157                           indf2	equ	0xFDF
 19158                           postinc2	equ	0xFDE
 19159                           postdec2	equ	0xFDD
 19160                           plusw2	equ	0xFDB
 19161                           fsr2h	equ	0xFDA
 19162                           fsr2l	equ	0xFD9
 19163                           status	equ	0xFD8
 19164                           
 19165 ;; *************** function _month_length *****************
 19166 ;; Defined at:
 19167 ;;		line 87 in file "../My_header\My_RTCC.h"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;  year            1    wreg     unsigned char 
 19170 ;;  month           1    6[BANK0 ] unsigned char 
 19171 ;; Auto vars:     Size  Location     Type
 19172 ;;  year            1   11[BANK0 ] unsigned char 
 19173 ;; Return value:  Size  Location     Type
 19174 ;;                  1    wreg      unsigned char 
 19175 ;; Registers used:
 19176 ;;		wreg, status,2, status,0, cstack
 19177 ;; Tracked objects:
 19178 ;;		On entry : 0/0
 19179 ;;		On exit  : 0/0
 19180 ;;		Unchanged: 0/0
 19181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19182 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19185 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19186 ;;Total ram usage:        6 bytes
 19187 ;; Hardware stack levels used:    1
 19188 ;; Hardware stack levels required when called:   12
 19189 ;; This function calls:
 19190 ;;		___awmod
 19191 ;; This function is called by:
 19192 ;;		_epoch_to_caltime
 19193 ;;		_caltime_to_epoch
 19194 ;;		_RTCC_adjust_time_inc
 19195 ;;		_RTCC_adjust_time_dec
 19196 ;;		_command_operation
 19197 ;; This function uses a non-reentrant model
 19198 ;;
 19199                           
 19200                           	psect	text87
 19201  0138E2                     __ptext87:
 19202                           	opt stack 0
 19203  0138E2                     _month_length:
 19204                           	opt stack 16
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;incstack = 0
 19208                           ;month_length@year stored from wreg
 19209  0138E2  0100               	movlb	0	; () banked
 19210  0138E4  6FC4               	movwf	month_length@year& (0+255),b
 19211                           
 19212                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 19213  0138E6  0E02               	movlw	2
 19214  0138E8  0100               	movlb	0	; () banked
 19215  0138EA  19BF               	xorwf	month_length@month& (0+255),w,b
 19216  0138EC  A4D8               	btfss	status,2,c
 19217  0138EE  D03E               	goto	l9139
 19218                           
 19219                           ; BSR set to: 0
 19220  0138F0  C0C4  F0B9         	movff	month_length@year,___awmod@dividend
 19221  0138F4  0100               	movlb	0	; () banked
 19222  0138F6  6BBA               	clrf	(___awmod@dividend+1)& (0+255),b
 19223  0138F8  0E00               	movlw	0
 19224  0138FA  0100               	movlb	0	; () banked
 19225  0138FC  6FBC               	movwf	(___awmod@divisor+1)& (0+255),b
 19226  0138FE  0E64               	movlw	100
 19227  013900  6FBB               	movwf	___awmod@divisor& (0+255),b
 19228  013902  EC8E  F0A4         	call	___awmod	;wreg free
 19229  013906  0100               	movlb	0	; () banked
 19230  013908  51B9               	movf	?___awmod& (0+255),w,b
 19231  01390A  0100               	movlb	0	; () banked
 19232  01390C  11BA               	iorwf	(?___awmod+1)& (0+255),w,b
 19233  01390E  A4D8               	btfss	status,2,c
 19234  013910  D002               	goto	u9770
 19235  013912  0E01               	movlw	1
 19236  013914  D001               	goto	u9780
 19237  013916                     u9770:
 19238  013916  0E00               	movlw	0
 19239  013918                     u9780:
 19240  013918  0800               	sublw	0
 19241  01391A  0100               	movlb	0	; () banked
 19242  01391C  6FC0               	movwf	??_month_length& (0+255),b
 19243  01391E  C0C4  F0B9         	movff	month_length@year,___awmod@dividend
 19244  013922  0100               	movlb	0	; () banked
 19245  013924  6BBA               	clrf	(___awmod@dividend+1)& (0+255),b
 19246  013926  0E01               	movlw	1
 19247  013928  0100               	movlb	0	; () banked
 19248  01392A  6FBC               	movwf	(___awmod@divisor+1)& (0+255),b
 19249  01392C  0E90               	movlw	144
 19250  01392E  6FBB               	movwf	___awmod@divisor& (0+255),b
 19251  013930  EC8E  F0A4         	call	___awmod	;wreg free
 19252  013934  0100               	movlb	0	; () banked
 19253  013936  51B9               	movf	?___awmod& (0+255),w,b
 19254  013938  0100               	movlb	0	; () banked
 19255  01393A  11BA               	iorwf	(?___awmod+1)& (0+255),w,b
 19256  01393C  A4D8               	btfss	status,2,c
 19257  01393E  D004               	goto	u9790
 19258  013940  0100               	movlb	0	; () banked
 19259  013942  6BC1               	clrf	(??_month_length+1)& (0+255),b
 19260  013944  2BC1               	incf	(??_month_length+1)& (0+255),f,b
 19261  013946  D002               	goto	u9808
 19262  013948                     u9790:
 19263  013948  0100               	movlb	0	; () banked
 19264  01394A  6BC1               	clrf	(??_month_length+1)& (0+255),b
 19265  01394C                     u9808:
 19266  01394C  C0C4  F0C2         	movff	month_length@year,??_month_length+2
 19267  013950  0E03               	movlw	3
 19268  013952  0100               	movlb	0	; () banked
 19269  013954  17C2               	andwf	(??_month_length+2)& (0+255),f,b
 19270  013956  A4D8               	btfss	status,2,c
 19271  013958  D002               	goto	u9810
 19272  01395A  0E01               	movlw	1
 19273  01395C  D001               	goto	u9820
 19274  01395E                     u9810:
 19275  01395E  0E00               	movlw	0
 19276  013960                     u9820:
 19277  013960  0100               	movlb	0	; () banked
 19278  013962  25C1               	addwf	(??_month_length+1)& (0+255),w,b
 19279  013964  0100               	movlb	0	; () banked
 19280  013966  25C0               	addwf	??_month_length& (0+255),w,b
 19281  013968  0F1C               	addlw	28
 19282                           
 19283                           ; BSR set to: 0
 19284                           
 19285                           ; BSR set to: 0
 19286  01396A  0012               	return	
 19287  01396C                     l9139:
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 19291  01396C  0100               	movlb	0	; () banked
 19292  01396E  51BF               	movf	month_length@month& (0+255),w,b
 19293  013970  0B01               	andlw	1
 19294  013972  0100               	movlb	0	; () banked
 19295  013974  6FC0               	movwf	??_month_length& (0+255),b
 19296  013976  6BC1               	clrf	(??_month_length+1)& (0+255),b
 19297  013978  0100               	movlb	0	; () banked
 19298  01397A  1FC0               	comf	??_month_length& (0+255),f,b
 19299  01397C  1FC1               	comf	(??_month_length+1)& (0+255),f,b
 19300  01397E  4BC0               	infsnz	??_month_length& (0+255),f,b
 19301  013980  2BC1               	incf	(??_month_length+1)& (0+255),f,b
 19302  013982  0100               	movlb	0	; () banked
 19303  013984  51BF               	movf	month_length@month& (0+255),w,b
 19304  013986  0100               	movlb	0	; () banked
 19305  013988  6FC2               	movwf	(??_month_length+2)& (0+255),b
 19306  01398A  6BC3               	clrf	(??_month_length+3)& (0+255),b
 19307  01398C  0100               	movlb	0	; () banked
 19308  01398E  51C0               	movf	??_month_length& (0+255),w,b
 19309  013990  0100               	movlb	0	; () banked
 19310  013992  1BC2               	xorwf	(??_month_length+2)& (0+255),f,b
 19311  013994  0100               	movlb	0	; () banked
 19312  013996  51C1               	movf	(??_month_length+1)& (0+255),w,b
 19313  013998  0100               	movlb	0	; () banked
 19314  01399A  1BC3               	xorwf	(??_month_length+3)& (0+255),f,b
 19315  01399C  0E0D               	movlw	13
 19316  01399E  0100               	movlb	0	; () banked
 19317  0139A0  17C2               	andwf	(??_month_length+2)& (0+255),f,b
 19318  0139A2  0E00               	movlw	0
 19319  0139A4  17C3               	andwf	(??_month_length+3)& (0+255),f,b
 19320  0139A6  0E04               	movlw	4
 19321  0139A8  0100               	movlb	0	; () banked
 19322  0139AA  19C2               	xorwf	(??_month_length+2)& (0+255),w,b
 19323  0139AC  0100               	movlb	0	; () banked
 19324  0139AE  11C3               	iorwf	(??_month_length+3)& (0+255),w,b
 19325  0139B0  A4D8               	btfss	status,2,c
 19326  0139B2  D002               	goto	u9830
 19327  0139B4  0E01               	movlw	1
 19328  0139B6  D001               	goto	u9840
 19329  0139B8                     u9830:
 19330  0139B8  0E00               	movlw	0
 19331  0139BA                     u9840:
 19332  0139BA  0800               	sublw	0
 19333  0139BC  0F1F               	addlw	31
 19334                           
 19335                           ; BSR set to: 0
 19336  0139BE  0012               	return	
 19337  0139C0                     __end_of_month_length:
 19338                           	opt stack 0
 19339                           tblptru	equ	0xFF8
 19340                           tblptrh	equ	0xFF7
 19341                           tblptrl	equ	0xFF6
 19342                           tablat	equ	0xFF5
 19343                           prodh	equ	0xFF4
 19344                           prodl	equ	0xFF3
 19345                           intcon	equ	0xFF2
 19346                           intcon2	equ	0xFF1
 19347                           postinc0	equ	0xFEE
 19348                           wreg	equ	0xFE8
 19349                           indf1	equ	0xFE7
 19350                           postinc1	equ	0xFE6
 19351                           postdec1	equ	0xFE5
 19352                           fsr1h	equ	0xFE2
 19353                           fsr1l	equ	0xFE1
 19354                           indf2	equ	0xFDF
 19355                           postinc2	equ	0xFDE
 19356                           postdec2	equ	0xFDD
 19357                           plusw2	equ	0xFDB
 19358                           fsr2h	equ	0xFDA
 19359                           fsr2l	equ	0xFD9
 19360                           status	equ	0xFD8
 19361                           
 19362 ;; *************** function ___awmod *****************
 19363 ;; Defined at:
 19364 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 19365 ;; Parameters:    Size  Location     Type
 19366 ;;  dividend        2    0[BANK0 ] int 
 19367 ;;  divisor         2    2[BANK0 ] int 
 19368 ;; Auto vars:     Size  Location     Type
 19369 ;;  sign            1    5[BANK0 ] unsigned char 
 19370 ;;  counter         1    4[BANK0 ] unsigned char 
 19371 ;; Return value:  Size  Location     Type
 19372 ;;                  2    0[BANK0 ] int 
 19373 ;; Registers used:
 19374 ;;		wreg, status,2, status,0
 19375 ;; Tracked objects:
 19376 ;;		On entry : 0/0
 19377 ;;		On exit  : 0/0
 19378 ;;		Unchanged: 0/0
 19379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19381 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19383 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19384 ;;Total ram usage:        6 bytes
 19385 ;; Hardware stack levels used:    1
 19386 ;; Hardware stack levels required when called:   11
 19387 ;; This function calls:
 19388 ;;		Nothing
 19389 ;; This function is called by:
 19390 ;;		_month_length
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           	psect	text88
 19395  01491C                     __ptext88:
 19396                           	opt stack 0
 19397  01491C                     ___awmod:
 19398                           	opt stack 16
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;incstack = 0
 19402  01491C  0E00               	movlw	0
 19403  01491E  0100               	movlb	0	; () banked
 19404  014920  6FBE               	movwf	___awmod@sign& (0+255),b
 19405                           
 19406                           ; BSR set to: 0
 19407  014922  0100               	movlb	0	; () banked
 19408  014924  AFBA               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19409  014926  D008               	goto	l9001
 19410                           
 19411                           ; BSR set to: 0
 19412  014928  0100               	movlb	0	; () banked
 19413  01492A  6DB9               	negf	___awmod@dividend& (0+255),b
 19414  01492C  1FBA               	comf	(___awmod@dividend+1)& (0+255),f,b
 19415  01492E  B0D8               	btfsc	status,0,c
 19416  014930  2BBA               	incf	(___awmod@dividend+1)& (0+255),f,b
 19417                           
 19418                           ; BSR set to: 0
 19419  014932  0E01               	movlw	1
 19420  014934  0100               	movlb	0	; () banked
 19421  014936  6FBE               	movwf	___awmod@sign& (0+255),b
 19422  014938                     l9001:
 19423                           
 19424                           ; BSR set to: 0
 19425  014938  0100               	movlb	0	; () banked
 19426  01493A  AFBC               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19427  01493C  D005               	goto	l9005
 19428                           
 19429                           ; BSR set to: 0
 19430  01493E  0100               	movlb	0	; () banked
 19431  014940  6DBB               	negf	___awmod@divisor& (0+255),b
 19432  014942  1FBC               	comf	(___awmod@divisor+1)& (0+255),f,b
 19433  014944  B0D8               	btfsc	status,0,c
 19434  014946  2BBC               	incf	(___awmod@divisor+1)& (0+255),f,b
 19435  014948                     l9005:
 19436                           
 19437                           ; BSR set to: 0
 19438  014948  0100               	movlb	0	; () banked
 19439  01494A  51BB               	movf	___awmod@divisor& (0+255),w,b
 19440  01494C  0100               	movlb	0	; () banked
 19441  01494E  11BC               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19442  014950  B4D8               	btfsc	status,2,c
 19443  014952  D026               	goto	l9021
 19444                           
 19445                           ; BSR set to: 0
 19446  014954  0E01               	movlw	1
 19447  014956  0100               	movlb	0	; () banked
 19448  014958  6FBD               	movwf	___awmod@counter& (0+255),b
 19449  01495A  D006               	goto	l9011
 19450  01495C                     l9009:
 19451                           
 19452                           ; BSR set to: 0
 19453  01495C  0100               	movlb	0	; () banked
 19454  01495E  90D8               	bcf	status,0,c
 19455  014960  37BB               	rlcf	___awmod@divisor& (0+255),f,b
 19456  014962  37BC               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19457  014964  0100               	movlb	0	; () banked
 19458  014966  2BBD               	incf	___awmod@counter& (0+255),f,b
 19459  014968                     l9011:
 19460                           
 19461                           ; BSR set to: 0
 19462  014968  0100               	movlb	0	; () banked
 19463  01496A  AFBC               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19464  01496C  D7F7               	goto	l9009
 19465  01496E                     l9013:
 19466                           
 19467                           ; BSR set to: 0
 19468  01496E  0100               	movlb	0	; () banked
 19469  014970  51BB               	movf	___awmod@divisor& (0+255),w,b
 19470  014972  0100               	movlb	0	; () banked
 19471  014974  5DB9               	subwf	___awmod@dividend& (0+255),w,b
 19472  014976  0100               	movlb	0	; () banked
 19473  014978  51BC               	movf	(___awmod@divisor+1)& (0+255),w,b
 19474  01497A  0100               	movlb	0	; () banked
 19475  01497C  59BA               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19476  01497E  A0D8               	btfss	status,0,c
 19477  014980  D008               	goto	l9017
 19478                           
 19479                           ; BSR set to: 0
 19480  014982  0100               	movlb	0	; () banked
 19481  014984  51BB               	movf	___awmod@divisor& (0+255),w,b
 19482  014986  0100               	movlb	0	; () banked
 19483  014988  5FB9               	subwf	___awmod@dividend& (0+255),f,b
 19484  01498A  0100               	movlb	0	; () banked
 19485  01498C  51BC               	movf	(___awmod@divisor+1)& (0+255),w,b
 19486  01498E  0100               	movlb	0	; () banked
 19487  014990  5BBA               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19488  014992                     l9017:
 19489                           
 19490                           ; BSR set to: 0
 19491  014992  0100               	movlb	0	; () banked
 19492  014994  90D8               	bcf	status,0,c
 19493  014996  33BC               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19494  014998  33BB               	rrcf	___awmod@divisor& (0+255),f,b
 19495                           
 19496                           ; BSR set to: 0
 19497  01499A  0100               	movlb	0	; () banked
 19498  01499C  2FBD               	decfsz	___awmod@counter& (0+255),f,b
 19499  01499E  D7E7               	goto	l9013
 19500  0149A0                     l9021:
 19501                           
 19502                           ; BSR set to: 0
 19503  0149A0  0100               	movlb	0	; () banked
 19504  0149A2  51BE               	movf	___awmod@sign& (0+255),w,b
 19505  0149A4  0100               	movlb	0	; () banked
 19506  0149A6  B4D8               	btfsc	status,2,c
 19507  0149A8  D005               	goto	l9025
 19508                           
 19509                           ; BSR set to: 0
 19510  0149AA  0100               	movlb	0	; () banked
 19511  0149AC  6DB9               	negf	___awmod@dividend& (0+255),b
 19512  0149AE  1FBA               	comf	(___awmod@dividend+1)& (0+255),f,b
 19513  0149B0  B0D8               	btfsc	status,0,c
 19514  0149B2  2BBA               	incf	(___awmod@dividend+1)& (0+255),f,b
 19515  0149B4                     l9025:
 19516                           
 19517                           ; BSR set to: 0
 19518  0149B4  C0B9  F0B9         	movff	___awmod@dividend,?___awmod
 19519  0149B8  C0BA  F0BA         	movff	___awmod@dividend+1,?___awmod+1
 19520  0149BC  0012               	return	
 19521  0149BE                     __end_of___awmod:
 19522                           	opt stack 0
 19523                           tblptru	equ	0xFF8
 19524                           tblptrh	equ	0xFF7
 19525                           tblptrl	equ	0xFF6
 19526                           tablat	equ	0xFF5
 19527                           prodh	equ	0xFF4
 19528                           prodl	equ	0xFF3
 19529                           intcon	equ	0xFF2
 19530                           intcon2	equ	0xFF1
 19531                           postinc0	equ	0xFEE
 19532                           wreg	equ	0xFE8
 19533                           indf1	equ	0xFE7
 19534                           postinc1	equ	0xFE6
 19535                           postdec1	equ	0xFE5
 19536                           fsr1h	equ	0xFE2
 19537                           fsr1l	equ	0xFE1
 19538                           indf2	equ	0xFDF
 19539                           postinc2	equ	0xFDE
 19540                           postdec2	equ	0xFDD
 19541                           plusw2	equ	0xFDB
 19542                           fsr2h	equ	0xFDA
 19543                           fsr2l	equ	0xFD9
 19544                           status	equ	0xFD8
 19545                           
 19546 ;; *************** function ___lmul *****************
 19547 ;; Defined at:
 19548 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 19549 ;; Parameters:    Size  Location     Type
 19550 ;;  multiplier      4   13[BANK0 ] unsigned long 
 19551 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;  product         4   21[BANK0 ] unsigned long 
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  4   13[BANK0 ] unsigned long 
 19556 ;; Registers used:
 19557 ;;		wreg, status,2, status,0
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/0
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19563 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19564 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19567 ;;Total ram usage:       12 bytes
 19568 ;; Hardware stack levels used:    1
 19569 ;; Hardware stack levels required when called:   11
 19570 ;; This function calls:
 19571 ;;		Nothing
 19572 ;; This function is called by:
 19573 ;;		_get_quot_rem
 19574 ;;		_caltime_to_epoch
 19575 ;;		_RTCC_adjust_time_inc
 19576 ;;		_RTCC_adjust_time_dec
 19577 ;; This function uses a non-reentrant model
 19578 ;;
 19579                           
 19580                           	psect	text89
 19581  015280                     __ptext89:
 19582                           	opt stack 0
 19583  015280                     ___lmul:
 19584                           	opt stack 13
 19585                           
 19586                           ; BSR set to: 0
 19587                           ;incstack = 0
 19588  015280  0E00               	movlw	0
 19589  015282  0100               	movlb	0	; () banked
 19590  015284  6FCE               	movwf	___lmul@product& (0+255),b
 19591  015286  0E00               	movlw	0
 19592  015288  6FCF               	movwf	(___lmul@product+1)& (0+255),b
 19593  01528A  0E00               	movlw	0
 19594  01528C  6FD0               	movwf	(___lmul@product+2)& (0+255),b
 19595  01528E  0E00               	movlw	0
 19596  015290  6FD1               	movwf	(___lmul@product+3)& (0+255),b
 19597  015292                     l8941:
 19598                           
 19599                           ; BSR set to: 0
 19600  015292  0100               	movlb	0	; () banked
 19601  015294  A1C6               	btfss	___lmul@multiplier& (0+255),0,b
 19602  015296  D010               	goto	l8945
 19603                           
 19604                           ; BSR set to: 0
 19605  015298  0100               	movlb	0	; () banked
 19606  01529A  51CA               	movf	___lmul@multiplicand& (0+255),w,b
 19607  01529C  0100               	movlb	0	; () banked
 19608  01529E  27CE               	addwf	___lmul@product& (0+255),f,b
 19609  0152A0  0100               	movlb	0	; () banked
 19610  0152A2  51CB               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19611  0152A4  0100               	movlb	0	; () banked
 19612  0152A6  23CF               	addwfc	(___lmul@product+1)& (0+255),f,b
 19613  0152A8  0100               	movlb	0	; () banked
 19614  0152AA  51CC               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19615  0152AC  0100               	movlb	0	; () banked
 19616  0152AE  23D0               	addwfc	(___lmul@product+2)& (0+255),f,b
 19617  0152B0  0100               	movlb	0	; () banked
 19618  0152B2  51CD               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19619  0152B4  0100               	movlb	0	; () banked
 19620  0152B6  23D1               	addwfc	(___lmul@product+3)& (0+255),f,b
 19621  0152B8                     l8945:
 19622                           
 19623                           ; BSR set to: 0
 19624  0152B8  0100               	movlb	0	; () banked
 19625  0152BA  90D8               	bcf	status,0,c
 19626  0152BC  37CA               	rlcf	___lmul@multiplicand& (0+255),f,b
 19627  0152BE  37CB               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19628  0152C0  37CC               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19629  0152C2  37CD               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19630                           
 19631                           ; BSR set to: 0
 19632  0152C4  0100               	movlb	0	; () banked
 19633  0152C6  90D8               	bcf	status,0,c
 19634  0152C8  33C9               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19635  0152CA  33C8               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19636  0152CC  33C7               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19637  0152CE  33C6               	rrcf	___lmul@multiplier& (0+255),f,b
 19638  0152D0  0100               	movlb	0	; () banked
 19639  0152D2  51C6               	movf	___lmul@multiplier& (0+255),w,b
 19640  0152D4  0100               	movlb	0	; () banked
 19641  0152D6  11C7               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19642  0152D8  0100               	movlb	0	; () banked
 19643  0152DA  11C8               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19644  0152DC  0100               	movlb	0	; () banked
 19645  0152DE  11C9               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19646  0152E0  A4D8               	btfss	status,2,c
 19647  0152E2  D7D7               	goto	l8941
 19648                           
 19649                           ; BSR set to: 0
 19650  0152E4  C0CE  F0C6         	movff	___lmul@product,?___lmul
 19651  0152E8  C0CF  F0C7         	movff	___lmul@product+1,?___lmul+1
 19652  0152EC  C0D0  F0C8         	movff	___lmul@product+2,?___lmul+2
 19653  0152F0  C0D1  F0C9         	movff	___lmul@product+3,?___lmul+3
 19654                           
 19655                           ; BSR set to: 0
 19656  0152F4  0012               	return		;funcret
 19657  0152F6                     __end_of___lmul:
 19658                           	opt stack 0
 19659                           tblptru	equ	0xFF8
 19660                           tblptrh	equ	0xFF7
 19661                           tblptrl	equ	0xFF6
 19662                           tablat	equ	0xFF5
 19663                           prodh	equ	0xFF4
 19664                           prodl	equ	0xFF3
 19665                           intcon	equ	0xFF2
 19666                           intcon2	equ	0xFF1
 19667                           postinc0	equ	0xFEE
 19668                           wreg	equ	0xFE8
 19669                           indf1	equ	0xFE7
 19670                           postinc1	equ	0xFE6
 19671                           postdec1	equ	0xFE5
 19672                           fsr1h	equ	0xFE2
 19673                           fsr1l	equ	0xFE1
 19674                           indf2	equ	0xFDF
 19675                           postinc2	equ	0xFDE
 19676                           postdec2	equ	0xFDD
 19677                           plusw2	equ	0xFDB
 19678                           fsr2h	equ	0xFDA
 19679                           fsr2l	equ	0xFD9
 19680                           status	equ	0xFD8
 19681                           
 19682 ;; *************** function _RTCC_to_caltime *****************
 19683 ;; Defined at:
 19684 ;;		line 121 in file "../My_header\My_RTCC.h"
 19685 ;; Parameters:    Size  Location     Type
 19686 ;;  ct              2    2[BANK0 ] PTR struct .
 19687 ;;		 -> caltime_now(7), 
 19688 ;; Auto vars:     Size  Location     Type
 19689 ;;  dumy            1    4[BANK0 ] unsigned char 
 19690 ;; Return value:  Size  Location     Type
 19691 ;;		None               void
 19692 ;; Registers used:
 19693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19694 ;; Tracked objects:
 19695 ;;		On entry : 0/0
 19696 ;;		On exit  : 0/0
 19697 ;;		Unchanged: 0/0
 19698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19703 ;;Total ram usage:        3 bytes
 19704 ;; Hardware stack levels used:    1
 19705 ;; Hardware stack levels required when called:   12
 19706 ;; This function calls:
 19707 ;;		_x_to_d
 19708 ;; This function is called by:
 19709 ;;		_RTCC_from_RTCC
 19710 ;; This function uses a non-reentrant model
 19711 ;;
 19712                           
 19713                           	psect	text90
 19714  01466A                     __ptext90:
 19715                           	opt stack 0
 19716  01466A                     _RTCC_to_caltime:
 19717                           	opt stack 14
 19718  01466A                     l407:
 19719  01466A  010F               	movlb	15	; () banked
 19720  01466C  B93F               	btfsc	63,4,b	;volatile
 19721  01466E  D7FD               	goto	l407
 19722                           
 19723                           ; BSR set to: 15
 19724                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 19725  014670  010F               	movlb	15	; () banked
 19726  014672  813F               	bsf	63,0,b	;volatile
 19727                           
 19728                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 19729  014674  010F               	movlb	15	; () banked
 19730  014676  833F               	bsf	63,1,b	;volatile
 19731                           
 19732                           ; BSR set to: 15
 19733                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 19734  014678  0100               	movlb	0	; () banked
 19735  01467A  EE20 F006          	lfsr	2,6
 19736  01467E  51BB               	movf	RTCC_to_caltime@ct& (0+255),w,b
 19737  014680  26D9               	addwf	fsr2l,f,c
 19738  014682  51BC               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 19739  014684  22DA               	addwfc	fsr2h,f,c
 19740  014686  010F               	movlb	15	; () banked
 19741  014688  513A               	movf	58,w,b	;volatile
 19742  01468A  EC7F  F0AF         	call	_x_to_d
 19743  01468E  6EDF               	movwf	indf2,c
 19744                           
 19745                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 19746  014690  CF3B F0BD          	movff	3899,RTCC_to_caltime@dumy	;volatile
 19747                           
 19748                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 19749  014694  0100               	movlb	0	; () banked
 19750  014696  EE20 F004          	lfsr	2,4
 19751  01469A  51BB               	movf	RTCC_to_caltime@ct& (0+255),w,b
 19752  01469C  26D9               	addwf	fsr2l,f,c
 19753  01469E  51BC               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 19754  0146A0  22DA               	addwfc	fsr2h,f,c
 19755  0146A2  010F               	movlb	15	; () banked
 19756  0146A4  513A               	movf	58,w,b	;volatile
 19757  0146A6  EC7F  F0AF         	call	_x_to_d
 19758  0146AA  6EDF               	movwf	indf2,c
 19759                           
 19760                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 19761  0146AC  0100               	movlb	0	; () banked
 19762  0146AE  EE20 F005          	lfsr	2,5
 19763  0146B2  51BB               	movf	RTCC_to_caltime@ct& (0+255),w,b
 19764  0146B4  26D9               	addwf	fsr2l,f,c
 19765  0146B6  51BC               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 19766  0146B8  22DA               	addwfc	fsr2h,f,c
 19767  0146BA  010F               	movlb	15	; () banked
 19768  0146BC  513B               	movf	59,w,b	;volatile
 19769  0146BE  EC7F  F0AF         	call	_x_to_d
 19770  0146C2  6EDF               	movwf	indf2,c
 19771                           
 19772                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 19773  0146C4  0100               	movlb	0	; () banked
 19774  0146C6  EE20 F002          	lfsr	2,2
 19775  0146CA  51BB               	movf	RTCC_to_caltime@ct& (0+255),w,b
 19776  0146CC  26D9               	addwf	fsr2l,f,c
 19777  0146CE  51BC               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 19778  0146D0  22DA               	addwfc	fsr2h,f,c
 19779  0146D2  010F               	movlb	15	; () banked
 19780  0146D4  513A               	movf	58,w,b	;volatile
 19781  0146D6  EC7F  F0AF         	call	_x_to_d
 19782  0146DA  6EDF               	movwf	indf2,c
 19783                           
 19784                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 19785  0146DC  0100               	movlb	0	; () banked
 19786  0146DE  EE20 F003          	lfsr	2,3
 19787  0146E2  51BB               	movf	RTCC_to_caltime@ct& (0+255),w,b
 19788  0146E4  26D9               	addwf	fsr2l,f,c
 19789  0146E6  51BC               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 19790  0146E8  22DA               	addwfc	fsr2h,f,c
 19791  0146EA  010F               	movlb	15	; () banked
 19792  0146EC  513B               	movf	59,w,b	;volatile
 19793  0146EE  EC7F  F0AF         	call	_x_to_d
 19794  0146F2  6EDF               	movwf	indf2,c
 19795                           
 19796                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 19797  0146F4  010F               	movlb	15	; () banked
 19798  0146F6  513A               	movf	58,w,b	;volatile
 19799  0146F8  EC7F  F0AF         	call	_x_to_d
 19800  0146FC  C0BB  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 19801  014700  C0BC  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 19802  014704  6EDF               	movwf	indf2,c
 19803                           
 19804                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 19805  014706  0100               	movlb	0	; () banked
 19806  014708  EE20 F001          	lfsr	2,1
 19807  01470C  51BB               	movf	RTCC_to_caltime@ct& (0+255),w,b
 19808  01470E  26D9               	addwf	fsr2l,f,c
 19809  014710  51BC               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 19810  014712  22DA               	addwfc	fsr2h,f,c
 19811  014714  010F               	movlb	15	; () banked
 19812  014716  513B               	movf	59,w,b	;volatile
 19813  014718  EC7F  F0AF         	call	_x_to_d
 19814  01471C  6EDF               	movwf	indf2,c
 19815  01471E  0012               	return		;funcret
 19816  014720                     __end_of_RTCC_to_caltime:
 19817                           	opt stack 0
 19818                           tblptru	equ	0xFF8
 19819                           tblptrh	equ	0xFF7
 19820                           tblptrl	equ	0xFF6
 19821                           tablat	equ	0xFF5
 19822                           prodh	equ	0xFF4
 19823                           prodl	equ	0xFF3
 19824                           intcon	equ	0xFF2
 19825                           intcon2	equ	0xFF1
 19826                           postinc0	equ	0xFEE
 19827                           wreg	equ	0xFE8
 19828                           indf1	equ	0xFE7
 19829                           postinc1	equ	0xFE6
 19830                           postdec1	equ	0xFE5
 19831                           fsr1h	equ	0xFE2
 19832                           fsr1l	equ	0xFE1
 19833                           indf2	equ	0xFDF
 19834                           postinc2	equ	0xFDE
 19835                           postdec2	equ	0xFDD
 19836                           plusw2	equ	0xFDB
 19837                           fsr2h	equ	0xFDA
 19838                           fsr2l	equ	0xFD9
 19839                           status	equ	0xFD8
 19840                           
 19841 ;; *************** function _x_to_d *****************
 19842 ;; Defined at:
 19843 ;;		line 81 in file "../My_header\My_RTCC.h"
 19844 ;; Parameters:    Size  Location     Type
 19845 ;;  hex             1    wreg     unsigned char 
 19846 ;; Auto vars:     Size  Location     Type
 19847 ;;  hex             1    1[BANK0 ] unsigned char 
 19848 ;; Return value:  Size  Location     Type
 19849 ;;                  1    wreg      unsigned char 
 19850 ;; Registers used:
 19851 ;;		wreg, status,2, status,0, prodl, prodh
 19852 ;; Tracked objects:
 19853 ;;		On entry : 0/0
 19854 ;;		On exit  : 0/0
 19855 ;;		Unchanged: 0/0
 19856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19861 ;;Total ram usage:        2 bytes
 19862 ;; Hardware stack levels used:    1
 19863 ;; Hardware stack levels required when called:   11
 19864 ;; This function calls:
 19865 ;;		Nothing
 19866 ;; This function is called by:
 19867 ;;		_RTCC_to_caltime
 19868 ;; This function uses a non-reentrant model
 19869 ;;
 19870                           
 19871                           	psect	text91
 19872  015EFE                     __ptext91:
 19873                           	opt stack 0
 19874  015EFE                     _x_to_d:
 19875                           	opt stack 14
 19876                           
 19877                           ;incstack = 0
 19878                           ;x_to_d@hex stored from wreg
 19879  015EFE  0100               	movlb	0	; () banked
 19880  015F00  6FBA               	movwf	x_to_d@hex& (0+255),b
 19881                           
 19882                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 19883  015F02  C0BA  F0B9         	movff	x_to_d@hex,??_x_to_d
 19884  015F06  0E0F               	movlw	15
 19885  015F08  0100               	movlb	0	; () banked
 19886  015F0A  17B9               	andwf	??_x_to_d& (0+255),f,b
 19887  015F0C  0100               	movlb	0	; () banked
 19888  015F0E  39BA               	swapf	x_to_d@hex& (0+255),w,b
 19889  015F10  0B0F               	andlw	15
 19890  015F12  0B0F               	andlw	15
 19891  015F14  0D0A               	mullw	10
 19892  015F16  50F3               	movf	prodl,w,c
 19893  015F18  0100               	movlb	0	; () banked
 19894  015F1A  25B9               	addwf	??_x_to_d& (0+255),w,b
 19895  015F1C  0012               	return	
 19896  015F1E                     __end_of_x_to_d:
 19897                           	opt stack 0
 19898                           tblptru	equ	0xFF8
 19899                           tblptrh	equ	0xFF7
 19900                           tblptrl	equ	0xFF6
 19901                           tablat	equ	0xFF5
 19902                           prodh	equ	0xFF4
 19903                           prodl	equ	0xFF3
 19904                           intcon	equ	0xFF2
 19905                           intcon2	equ	0xFF1
 19906                           postinc0	equ	0xFEE
 19907                           wreg	equ	0xFE8
 19908                           indf1	equ	0xFE7
 19909                           postinc1	equ	0xFE6
 19910                           postdec1	equ	0xFE5
 19911                           fsr1h	equ	0xFE2
 19912                           fsr1l	equ	0xFE1
 19913                           indf2	equ	0xFDF
 19914                           postinc2	equ	0xFDE
 19915                           postdec2	equ	0xFDD
 19916                           plusw2	equ	0xFDB
 19917                           fsr2h	equ	0xFDA
 19918                           fsr2l	equ	0xFD9
 19919                           status	equ	0xFD8
 19920                           
 19921 ;; *************** function _ISR *****************
 19922 ;; Defined at:
 19923 ;;		line 68 in file "main.c"
 19924 ;; Parameters:    Size  Location     Type
 19925 ;;		None
 19926 ;; Auto vars:     Size  Location     Type
 19927 ;;		None
 19928 ;; Return value:  Size  Location     Type
 19929 ;;		None               void
 19930 ;; Registers used:
 19931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19932 ;; Tracked objects:
 19933 ;;		On entry : 0/0
 19934 ;;		On exit  : 0/0
 19935 ;;		Unchanged: 0/0
 19936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19939 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19940 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19941 ;;Total ram usage:       14 bytes
 19942 ;; Hardware stack levels used:    1
 19943 ;; Hardware stack levels required when called:   10
 19944 ;; This function calls:
 19945 ;;		_USB_ISR
 19946 ;;		_charge_time_count
 19947 ;;		_delay_timer_interrupt
 19948 ;;		_integrating
 19949 ;;		_lchika
 19950 ;; This function is called by:
 19951 ;;		Interrupt level 2
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           	psect	intcode
 19956  000008                     __pintcode:
 19957                           	opt stack 0
 19958  000008                     _ISR:
 19959                           	opt stack 12
 19960                           
 19961                           ; BSR set to: 0
 19962                           ;incstack = 0
 19963  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19964  00000A  CFFA F01F          	movff	pclath,??_ISR
 19965  00000E  CFFB F020          	movff	pclatu,??_ISR+1
 19966  000012  CFE9 F021          	movff	fsr0l,??_ISR+2
 19967  000016  CFEA F022          	movff	fsr0h,??_ISR+3
 19968  00001A  CFE1 F023          	movff	fsr1l,??_ISR+4
 19969  00001E  CFE2 F024          	movff	fsr1h,??_ISR+5
 19970  000022  CFD9 F025          	movff	fsr2l,??_ISR+6
 19971  000026  CFDA F026          	movff	fsr2h,??_ISR+7
 19972  00002A  CFF3 F027          	movff	prodl,??_ISR+8
 19973  00002E  CFF4 F028          	movff	prodh,??_ISR+9
 19974  000032  CFF6 F029          	movff	tblptrl,??_ISR+10
 19975  000036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 19976  00003A  CFF8 F02B          	movff	tblptru,??_ISR+12
 19977  00003E  CFF5 F02C          	movff	tablat,??_ISR+13
 19978                           
 19979                           ;main.c: 70: USB_ISR();
 19980  000042  ECF1  F0AF         	call	_USB_ISR	;wreg free
 19981                           
 19982                           ;main.c: 71: if (INTCONbits.T0IF) {
 19983  000046  A4F2               	btfss	intcon,2,c	;volatile
 19984  000048  D00F               	goto	i2l8695
 19985                           
 19986                           ;main.c: 72: INTCONbits.T0IF = 0;
 19987  00004A  94F2               	bcf	intcon,2,c	;volatile
 19988                           
 19989                           ;main.c: 73: static uint16_t cnt_t0;
 19990                           ;main.c: 74: if (cnt_t0) {
 19991  00004C  5033               	movf	ISR@cnt_t0,w,c
 19992  00004E  1034               	iorwf	ISR@cnt_t0+1,w,c
 19993  000050  B4D8               	btfsc	status,2,c
 19994  000052  D004               	goto	i2l8691
 19995                           
 19996                           ;main.c: 75: cnt_t0--;
 19997  000054  0633               	decf	ISR@cnt_t0,f,c
 19998  000056  A0D8               	btfss	status,0,c
 19999  000058  0634               	decf	ISR@cnt_t0+1,f,c
 20000                           
 20001                           ;main.c: 76: } else {
 20002  00005A  D006               	goto	i2l8695
 20003  00005C                     i2l8691:
 20004                           
 20005                           ;main.c: 77: cnt_t0 = 120;
 20006  00005C  0E00               	movlw	0
 20007  00005E  6E34               	movwf	ISR@cnt_t0+1,c
 20008  000060  0E78               	movlw	120
 20009  000062  6E33               	movwf	ISR@cnt_t0,c
 20010                           
 20011                           ;main.c: 78: lchika();
 20012  000064  ECA1  F099         	call	_lchika	;wreg free
 20013  000068                     i2l8695:
 20014                           
 20015                           ;main.c: 79: }
 20016                           ;main.c: 80: }
 20017                           ;main.c: 81: if (PIR1bits.TMR1IF) {
 20018  000068  A09E               	btfss	3998,0,c	;volatile
 20019  00006A  D013               	goto	i2l8709
 20020                           
 20021                           ;main.c: 82: PIR1bits.TMR1IF = 0;
 20022  00006C  909E               	bcf	3998,0,c	;volatile
 20023                           
 20024                           ;main.c: 83: TMR1H = 0xC0;
 20025  00006E  0EC0               	movlw	192
 20026  000070  6ECF               	movwf	4047,c	;volatile
 20027                           
 20028                           ;main.c: 84: cut_time_flag = 1;
 20029  000072  0E01               	movlw	1
 20030  000074  6E4B               	movwf	_cut_time_flag,c
 20031                           
 20032                           ;main.c: 85: display_flag = 1;
 20033  000076  0E01               	movlw	1
 20034  000078  6E4C               	movwf	_display_flag,c
 20035                           
 20036                           ;main.c: 88: static uint8_t cnt_t1 = 0;
 20037                           ;main.c: 89: if (cnt_t1) {
 20038  00007A  503F               	movf	ISR@cnt_t1,w,c
 20039  00007C  B4D8               	btfsc	status,2,c
 20040  00007E  D003               	goto	i2l8703
 20041                           
 20042                           ;main.c: 90: cnt_t1 = 0;
 20043  000080  0E00               	movlw	0
 20044  000082  6E3F               	movwf	ISR@cnt_t1,c
 20045                           
 20046                           ;main.c: 91: } else {
 20047  000084  D006               	goto	i2l8709
 20048  000086                     i2l8703:
 20049                           
 20050                           ;main.c: 92: cnt_t1 = 1;
 20051  000086  0E01               	movlw	1
 20052  000088  6E3F               	movwf	ISR@cnt_t1,c
 20053                           
 20054                           ;main.c: 93: integrating();
 20055  00008A  EC18  F0A6         	call	_integrating	;wreg free
 20056                           
 20057                           ;main.c: 94: charge_time_count();
 20058  00008E  EC6A  F0AC         	call	_charge_time_count	;wreg free
 20059  000092                     i2l8709:
 20060                           
 20061                           ;main.c: 95: }
 20062                           ;main.c: 96: }
 20063                           ;main.c: 97: if (PIR2bits.TMR3IF) {
 20064  000092  A2A1               	btfss	4001,1,c	;volatile
 20065  000094  D00A               	goto	i2l902
 20066                           
 20067                           ;main.c: 98: PIR2bits.TMR3IF = 0;
 20068  000096  92A1               	bcf	4001,1,c	;volatile
 20069                           
 20070                           ;main.c: 99: ctmu_flag = 1;
 20071  000098  0E01               	movlw	1
 20072  00009A  0100               	movlb	0	; () banked
 20073  00009C  6FA7               	movwf	_ctmu_flag& (0+255),b
 20074                           
 20075                           ; BSR set to: 0
 20076                           ;main.c: 100: delay_timer_interrupt(&delay_display);
 20077  00009E  0E50               	movlw	low _delay_display
 20078  0000A0  6E01               	movwf	delay_timer_interrupt@d,c
 20079  0000A2  0E00               	movlw	high _delay_display
 20080  0000A4  6E02               	movwf	delay_timer_interrupt@d+1,c
 20081  0000A6  EC46  F0AC         	call	_delay_timer_interrupt	;wreg free
 20082  0000AA                     i2l902:
 20083  0000AA  C02C  FFF5         	movff	??_ISR+13,tablat
 20084  0000AE  C02B  FFF8         	movff	??_ISR+12,tblptru
 20085  0000B2  C02A  FFF7         	movff	??_ISR+11,tblptrh
 20086  0000B6  C029  FFF6         	movff	??_ISR+10,tblptrl
 20087  0000BA  C028  FFF4         	movff	??_ISR+9,prodh
 20088  0000BE  C027  FFF3         	movff	??_ISR+8,prodl
 20089  0000C2  C026  FFDA         	movff	??_ISR+7,fsr2h
 20090  0000C6  C025  FFD9         	movff	??_ISR+6,fsr2l
 20091  0000CA  C024  FFE2         	movff	??_ISR+5,fsr1h
 20092  0000CE  C023  FFE1         	movff	??_ISR+4,fsr1l
 20093  0000D2  C022  FFEA         	movff	??_ISR+3,fsr0h
 20094  0000D6  C021  FFE9         	movff	??_ISR+2,fsr0l
 20095  0000DA  C020  FFFB         	movff	??_ISR+1,pclatu
 20096  0000DE  C01F  FFFA         	movff	??_ISR,pclath
 20097  0000E2  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20098  0000E4  0011               	retfie		f
 20099  0000E6                     __end_of_ISR:
 20100                           	opt stack 0
 20101                           pclatu	equ	0xFFB
 20102                           pclath	equ	0xFFA
 20103                           tblptru	equ	0xFF8
 20104                           tblptrh	equ	0xFF7
 20105                           tblptrl	equ	0xFF6
 20106                           tablat	equ	0xFF5
 20107                           prodh	equ	0xFF4
 20108                           prodl	equ	0xFF3
 20109                           intcon	equ	0xFF2
 20110                           intcon2	equ	0xFF1
 20111                           postinc0	equ	0xFEE
 20112                           fsr0h	equ	0xFEA
 20113                           fsr0l	equ	0xFE9
 20114                           wreg	equ	0xFE8
 20115                           indf1	equ	0xFE7
 20116                           postinc1	equ	0xFE6
 20117                           postdec1	equ	0xFE5
 20118                           fsr1h	equ	0xFE2
 20119                           fsr1l	equ	0xFE1
 20120                           indf2	equ	0xFDF
 20121                           postinc2	equ	0xFDE
 20122                           postdec2	equ	0xFDD
 20123                           plusw2	equ	0xFDB
 20124                           fsr2h	equ	0xFDA
 20125                           fsr2l	equ	0xFD9
 20126                           status	equ	0xFD8
 20127                           
 20128 ;; *************** function _lchika *****************
 20129 ;; Defined at:
 20130 ;;		line 120 in file "tasks.h"
 20131 ;; Parameters:    Size  Location     Type
 20132 ;;		None
 20133 ;; Auto vars:     Size  Location     Type
 20134 ;;  i               1   11[COMRAM] unsigned char 
 20135 ;; Return value:  Size  Location     Type
 20136 ;;		None               void
 20137 ;; Registers used:
 20138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20139 ;; Tracked objects:
 20140 ;;		On entry : 0/0
 20141 ;;		On exit  : 0/0
 20142 ;;		Unchanged: 0/0
 20143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20146 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20148 ;;Total ram usage:        4 bytes
 20149 ;; Hardware stack levels used:    1
 20150 ;; Hardware stack levels required when called:    1
 20151 ;; This function calls:
 20152 ;;		i2_LED_OUT
 20153 ;;		i2___awdiv
 20154 ;;		i2___lwdiv
 20155 ;; This function is called by:
 20156 ;;		_ISR
 20157 ;; This function uses a non-reentrant model
 20158 ;;
 20159                           
 20160                           	psect	text93
 20161  013342                     __ptext93:
 20162                           	opt stack 0
 20163  013342                     _lchika:
 20164                           	opt stack 20
 20165                           
 20166                           ;tasks.h: 121: uint8_t i;
 20167                           ;tasks.h: 122: static uint8_t cnt[3];
 20168                           ;tasks.h: 123: static uint8_t cntf[3];
 20169                           ;tasks.h: 124: for (i = 0; i < 3; i++) {
 20170                           
 20171                           ;incstack = 0
 20172  013342  0E00               	movlw	0
 20173  013344  6E0C               	movwf	lchika@i,c
 20174  013346                     i2l8281:
 20175  013346  0E02               	movlw	2
 20176  013348  640C               	cpfsgt	lchika@i,c
 20177  01334A  D001               	goto	i2l8285
 20178  01334C  0012               	return	
 20179  01334E                     i2l8285:
 20180                           
 20181                           ;tasks.h: 125: cnt[i]++;
 20182  01334E  500C               	movf	lchika@i,w,c
 20183  013350  0D01               	mullw	1
 20184  013352  0E3C               	movlw	low lchika@cnt
 20185  013354  24F3               	addwf	prodl,w,c
 20186  013356  6ED9               	movwf	fsr2l,c
 20187  013358  0E03               	movlw	high lchika@cnt
 20188  01335A  20F4               	addwfc	prodh,w,c
 20189  01335C  6EDA               	movwf	fsr2h,c
 20190  01335E  2ADF               	incf	indf2,f,c
 20191                           
 20192                           ;tasks.h: 126: if (cnt[i] % 2 == 1) {
 20193  013360  500C               	movf	lchika@i,w,c
 20194  013362  0D01               	mullw	1
 20195  013364  0E3C               	movlw	low lchika@cnt
 20196  013366  24F3               	addwf	prodl,w,c
 20197  013368  6ED9               	movwf	fsr2l,c
 20198  01336A  0E03               	movlw	high lchika@cnt
 20199  01336C  20F4               	addwfc	prodh,w,c
 20200  01336E  6EDA               	movwf	fsr2h,c
 20201  013370  0103               	movlb	3	; () banked
 20202  013372  A0DF               	btfss	indf2,0,c
 20203  013374  D006               	goto	i2l8289
 20204                           
 20205                           ; BSR set to: 3
 20206                           ;tasks.h: 127: LED_OUT(i, 0);
 20207  013376  0E00               	movlw	0
 20208  013378  6E01               	movwf	i2LED_OUT@value,c
 20209  01337A  500C               	movf	lchika@i,w,c
 20210  01337C  ECF5  F0AC         	call	i2_LED_OUT
 20211                           
 20212                           ;tasks.h: 128: } else {
 20213  013380  D05E               	goto	i2l8303
 20214  013382                     i2l8289:
 20215                           
 20216                           ;tasks.h: 129: if (cnt[i] / 2 <= I[i] / 100) {
 20217  013382  500C               	movf	lchika@i,w,c
 20218  013384  0D02               	mullw	2
 20219  013386  0E2D               	movlw	low _I
 20220  013388  24F3               	addwf	prodl,w,c
 20221  01338A  6ED9               	movwf	fsr2l,c
 20222  01338C  0E00               	movlw	high _I
 20223  01338E  20F4               	addwfc	prodh,w,c
 20224  013390  6EDA               	movwf	fsr2h,c
 20225  013392  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 20226  013396  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 20227  01339A  0E00               	movlw	0
 20228  01339C  6E04               	movwf	i2___lwdiv@divisor+1,c
 20229  01339E  0E64               	movlw	100
 20230  0133A0  6E03               	movwf	i2___lwdiv@divisor,c
 20231  0133A2  ECAA  F0AB         	call	i2___lwdiv	;wreg free
 20232  0133A6  C001  F009         	movff	?i2___lwdiv,??_lchika
 20233  0133AA  C002  F00A         	movff	?i2___lwdiv+1,??_lchika+1
 20234  0133AE  500C               	movf	lchika@i,w,c
 20235  0133B0  0D01               	mullw	1
 20236  0133B2  0E3C               	movlw	low lchika@cnt
 20237  0133B4  24F3               	addwf	prodl,w,c
 20238  0133B6  6ED9               	movwf	fsr2l,c
 20239  0133B8  0E03               	movlw	high lchika@cnt
 20240  0133BA  20F4               	addwfc	prodh,w,c
 20241  0133BC  6EDA               	movwf	fsr2h,c
 20242  0133BE  50DF               	movf	indf2,w,c
 20243  0133C0  6E0B               	movwf	(??_lchika+2)& (0+255),c
 20244  0133C2  500B               	movf	??_lchika+2,w,c
 20245  0133C4  6E01               	movwf	i2___awdiv@dividend,c
 20246  0133C6  6A02               	clrf	i2___awdiv@dividend+1,c
 20247  0133C8  0E00               	movlw	0
 20248  0133CA  6E04               	movwf	i2___awdiv@divisor+1,c
 20249  0133CC  0E02               	movlw	2
 20250  0133CE  6E03               	movwf	i2___awdiv@divisor,c
 20251  0133D0  EC0A  F0A8         	call	i2___awdiv	;wreg free
 20252  0133D4  5001               	movf	?i2___awdiv,w,c
 20253  0133D6  5C09               	subwf	??_lchika,w,c
 20254  0133D8  5002               	movf	?i2___awdiv+1,w,c
 20255  0133DA  580A               	subwfb	??_lchika+1,w,c
 20256  0133DC  A0D8               	btfss	status,0,c
 20257  0133DE  D00C               	goto	i2l8295
 20258                           
 20259                           ;tasks.h: 130: LED_OUT(i, 1);
 20260  0133E0  0E01               	movlw	1
 20261  0133E2  6E01               	movwf	i2LED_OUT@value,c
 20262  0133E4  500C               	movf	lchika@i,w,c
 20263  0133E6  ECF5  F0AC         	call	i2_LED_OUT
 20264                           
 20265                           ;tasks.h: 131: cntf[i] = 0;
 20266  0133EA  500C               	movf	lchika@i,w,c
 20267  0133EC  0D01               	mullw	1
 20268  0133EE  0E3F               	movlw	low lchika@cntf
 20269  0133F0  24F3               	addwf	prodl,w,c
 20270  0133F2  6ED9               	movwf	fsr2l,c
 20271  0133F4  0E03               	movlw	high lchika@cntf
 20272  0133F6  D01F               	goto	L8
 20273  0133F8                     i2l8295:
 20274                           
 20275                           ;tasks.h: 133: cntf[i]++;
 20276  0133F8  500C               	movf	lchika@i,w,c
 20277  0133FA  0D01               	mullw	1
 20278  0133FC  0E3F               	movlw	low lchika@cntf
 20279  0133FE  24F3               	addwf	prodl,w,c
 20280  013400  6ED9               	movwf	fsr2l,c
 20281  013402  0E03               	movlw	high lchika@cntf
 20282  013404  20F4               	addwfc	prodh,w,c
 20283  013406  6EDA               	movwf	fsr2h,c
 20284  013408  2ADF               	incf	indf2,f,c
 20285                           
 20286                           ;tasks.h: 134: LED_OUT(i, 0);
 20287  01340A  0E00               	movlw	0
 20288  01340C  6E01               	movwf	i2LED_OUT@value,c
 20289  01340E  500C               	movf	lchika@i,w,c
 20290  013410  ECF5  F0AC         	call	i2_LED_OUT
 20291                           
 20292                           ;tasks.h: 135: if (cntf[i] >= 2) {
 20293  013414  500C               	movf	lchika@i,w,c
 20294  013416  0D01               	mullw	1
 20295  013418  0E3F               	movlw	low lchika@cntf
 20296  01341A  24F3               	addwf	prodl,w,c
 20297  01341C  6ED9               	movwf	fsr2l,c
 20298  01341E  0E03               	movlw	high lchika@cntf
 20299  013420  20F4               	addwfc	prodh,w,c
 20300  013422  6EDA               	movwf	fsr2h,c
 20301  013424  0E01               	movlw	1
 20302  013426  64DF               	cpfsgt	indf2,c
 20303  013428  D00A               	goto	i2l8303
 20304                           
 20305                           ;tasks.h: 136: cnt[i] = 0;
 20306  01342A  500C               	movf	lchika@i,w,c
 20307  01342C  0D01               	mullw	1
 20308  01342E  0E3C               	movlw	low lchika@cnt
 20309  013430  24F3               	addwf	prodl,w,c
 20310  013432  6ED9               	movwf	fsr2l,c
 20311  013434  0E03               	movlw	high lchika@cnt
 20312  013436                     L8:
 20313  013436  20F4               	addwfc	prodh,w,c
 20314  013438  6EDA               	movwf	fsr2h,c
 20315  01343A  0E00               	movlw	0
 20316  01343C  6EDF               	movwf	indf2,c
 20317  01343E                     i2l8303:
 20318  01343E  2A0C               	incf	lchika@i,f,c
 20319  013440  D782               	goto	i2l8281
 20320  013442                     __end_of_lchika:
 20321                           	opt stack 0
 20322                           pclatu	equ	0xFFB
 20323                           pclath	equ	0xFFA
 20324                           tblptru	equ	0xFF8
 20325                           tblptrh	equ	0xFF7
 20326                           tblptrl	equ	0xFF6
 20327                           tablat	equ	0xFF5
 20328                           prodh	equ	0xFF4
 20329                           prodl	equ	0xFF3
 20330                           intcon	equ	0xFF2
 20331                           intcon2	equ	0xFF1
 20332                           postinc0	equ	0xFEE
 20333                           fsr0h	equ	0xFEA
 20334                           fsr0l	equ	0xFE9
 20335                           wreg	equ	0xFE8
 20336                           indf1	equ	0xFE7
 20337                           postinc1	equ	0xFE6
 20338                           postdec1	equ	0xFE5
 20339                           fsr1h	equ	0xFE2
 20340                           fsr1l	equ	0xFE1
 20341                           indf2	equ	0xFDF
 20342                           postinc2	equ	0xFDE
 20343                           postdec2	equ	0xFDD
 20344                           plusw2	equ	0xFDB
 20345                           fsr2h	equ	0xFDA
 20346                           fsr2l	equ	0xFD9
 20347                           status	equ	0xFD8
 20348                           
 20349 ;; *************** function i2___lwdiv *****************
 20350 ;; Defined at:
 20351 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 20352 ;; Parameters:    Size  Location     Type
 20353 ;;  dividend        2    0[COMRAM] unsigned int 
 20354 ;;  divisor         2    2[COMRAM] unsigned int 
 20355 ;; Auto vars:     Size  Location     Type
 20356 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 20357 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  2    0[COMRAM] unsigned int 
 20360 ;; Registers used:
 20361 ;;		wreg, status,2, status,0
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20368 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20371 ;;Total ram usage:        7 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; This function calls:
 20374 ;;		Nothing
 20375 ;; This function is called by:
 20376 ;;		_lchika
 20377 ;; This function uses a non-reentrant model
 20378 ;;
 20379                           
 20380                           	psect	text94
 20381  015754                     __ptext94:
 20382                           	opt stack 0
 20383  015754                     i2___lwdiv:
 20384                           	opt stack 20
 20385                           
 20386                           ;incstack = 0
 20387  015754  0E00               	movlw	0
 20388  015756  6E06               	movwf	i2___lwdiv@quotient+1,c
 20389  015758  0E00               	movlw	0
 20390  01575A  6E05               	movwf	i2___lwdiv@quotient,c
 20391  01575C  5003               	movf	i2___lwdiv@divisor,w,c
 20392  01575E  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 20393  015760  B4D8               	btfsc	status,2,c
 20394  015762  D01C               	goto	i2l1900
 20395  015764  0E01               	movlw	1
 20396  015766  6E07               	movwf	i2___lwdiv@counter,c
 20397  015768  D004               	goto	i2l8245
 20398  01576A                     i2l8243:
 20399  01576A  90D8               	bcf	status,0,c
 20400  01576C  3603               	rlcf	i2___lwdiv@divisor,f,c
 20401  01576E  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 20402  015770  2A07               	incf	i2___lwdiv@counter,f,c
 20403  015772                     i2l8245:
 20404  015772  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 20405  015774  D7FA               	goto	i2l8243
 20406  015776                     i2l8247:
 20407  015776  90D8               	bcf	status,0,c
 20408  015778  3605               	rlcf	i2___lwdiv@quotient,f,c
 20409  01577A  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 20410  01577C  5003               	movf	i2___lwdiv@divisor,w,c
 20411  01577E  5C01               	subwf	i2___lwdiv@dividend,w,c
 20412  015780  5004               	movf	i2___lwdiv@divisor+1,w,c
 20413  015782  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 20414  015784  A0D8               	btfss	status,0,c
 20415  015786  D005               	goto	i2l8255
 20416  015788  5003               	movf	i2___lwdiv@divisor,w,c
 20417  01578A  5E01               	subwf	i2___lwdiv@dividend,f,c
 20418  01578C  5004               	movf	i2___lwdiv@divisor+1,w,c
 20419  01578E  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 20420  015790  8005               	bsf	i2___lwdiv@quotient,0,c
 20421  015792                     i2l8255:
 20422  015792  90D8               	bcf	status,0,c
 20423  015794  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 20424  015796  3203               	rrcf	i2___lwdiv@divisor,f,c
 20425  015798  2E07               	decfsz	i2___lwdiv@counter,f,c
 20426  01579A  D7ED               	goto	i2l8247
 20427  01579C                     i2l1900:
 20428  01579C  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 20429  0157A0  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 20430  0157A4  0012               	return		;funcret
 20431  0157A6                     __end_ofi2___lwdiv:
 20432                           	opt stack 0
 20433                           pclatu	equ	0xFFB
 20434                           pclath	equ	0xFFA
 20435                           tblptru	equ	0xFF8
 20436                           tblptrh	equ	0xFF7
 20437                           tblptrl	equ	0xFF6
 20438                           tablat	equ	0xFF5
 20439                           prodh	equ	0xFF4
 20440                           prodl	equ	0xFF3
 20441                           intcon	equ	0xFF2
 20442                           intcon2	equ	0xFF1
 20443                           postinc0	equ	0xFEE
 20444                           fsr0h	equ	0xFEA
 20445                           fsr0l	equ	0xFE9
 20446                           wreg	equ	0xFE8
 20447                           indf1	equ	0xFE7
 20448                           postinc1	equ	0xFE6
 20449                           postdec1	equ	0xFE5
 20450                           fsr1h	equ	0xFE2
 20451                           fsr1l	equ	0xFE1
 20452                           indf2	equ	0xFDF
 20453                           postinc2	equ	0xFDE
 20454                           postdec2	equ	0xFDD
 20455                           plusw2	equ	0xFDB
 20456                           fsr2h	equ	0xFDA
 20457                           fsr2l	equ	0xFD9
 20458                           status	equ	0xFD8
 20459                           
 20460 ;; *************** function i2___awdiv *****************
 20461 ;; Defined at:
 20462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 20463 ;; Parameters:    Size  Location     Type
 20464 ;;  dividend        2    0[COMRAM] int 
 20465 ;;  divisor         2    2[COMRAM] int 
 20466 ;; Auto vars:     Size  Location     Type
 20467 ;;  __awdiv         2    6[COMRAM] int 
 20468 ;;  __awdiv         1    5[COMRAM] unsigned char 
 20469 ;;  __awdiv         1    4[COMRAM] unsigned char 
 20470 ;; Return value:  Size  Location     Type
 20471 ;;                  2    0[COMRAM] int 
 20472 ;; Registers used:
 20473 ;;		wreg, status,2, status,0
 20474 ;; Tracked objects:
 20475 ;;		On entry : 0/0
 20476 ;;		On exit  : 0/0
 20477 ;;		Unchanged: 0/0
 20478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20480 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20482 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20483 ;;Total ram usage:        8 bytes
 20484 ;; Hardware stack levels used:    1
 20485 ;; This function calls:
 20486 ;;		Nothing
 20487 ;; This function is called by:
 20488 ;;		_lchika
 20489 ;; This function uses a non-reentrant model
 20490 ;;
 20491                           
 20492                           	psect	text95
 20493  015014                     __ptext95:
 20494                           	opt stack 0
 20495  015014                     i2___awdiv:
 20496                           	opt stack 20
 20497                           
 20498                           ;incstack = 0
 20499  015014  0E00               	movlw	0
 20500  015016  6E06               	movwf	i2___awdiv@sign,c
 20501  015018  AE04               	btfss	i2___awdiv@divisor+1,7,c
 20502  01501A  D006               	goto	i2l8179
 20503  01501C  6C03               	negf	i2___awdiv@divisor,c
 20504  01501E  1E04               	comf	i2___awdiv@divisor+1,f,c
 20505  015020  B0D8               	btfsc	status,0,c
 20506  015022  2A04               	incf	i2___awdiv@divisor+1,f,c
 20507  015024  0E01               	movlw	1
 20508  015026  6E06               	movwf	i2___awdiv@sign,c
 20509  015028                     i2l8179:
 20510  015028  AE02               	btfss	i2___awdiv@dividend+1,7,c
 20511  01502A  D006               	goto	i2l8185
 20512  01502C  6C01               	negf	i2___awdiv@dividend,c
 20513  01502E  1E02               	comf	i2___awdiv@dividend+1,f,c
 20514  015030  B0D8               	btfsc	status,0,c
 20515  015032  2A02               	incf	i2___awdiv@dividend+1,f,c
 20516  015034  0E01               	movlw	1
 20517  015036  1A06               	xorwf	i2___awdiv@sign,f,c
 20518  015038                     i2l8185:
 20519  015038  0E00               	movlw	0
 20520  01503A  6E08               	movwf	i2___awdiv@quotient+1,c
 20521  01503C  0E00               	movlw	0
 20522  01503E  6E07               	movwf	i2___awdiv@quotient,c
 20523  015040  5003               	movf	i2___awdiv@divisor,w,c
 20524  015042  1004               	iorwf	i2___awdiv@divisor+1,w,c
 20525  015044  B4D8               	btfsc	status,2,c
 20526  015046  D01C               	goto	i2l8207
 20527  015048  0E01               	movlw	1
 20528  01504A  6E05               	movwf	i2___awdiv@counter,c
 20529  01504C  D004               	goto	i2l8193
 20530  01504E                     i2l8191:
 20531  01504E  90D8               	bcf	status,0,c
 20532  015050  3603               	rlcf	i2___awdiv@divisor,f,c
 20533  015052  3604               	rlcf	i2___awdiv@divisor+1,f,c
 20534  015054  2A05               	incf	i2___awdiv@counter,f,c
 20535  015056                     i2l8193:
 20536  015056  AE04               	btfss	i2___awdiv@divisor+1,7,c
 20537  015058  D7FA               	goto	i2l8191
 20538  01505A                     i2l8195:
 20539  01505A  90D8               	bcf	status,0,c
 20540  01505C  3607               	rlcf	i2___awdiv@quotient,f,c
 20541  01505E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 20542  015060  5003               	movf	i2___awdiv@divisor,w,c
 20543  015062  5C01               	subwf	i2___awdiv@dividend,w,c
 20544  015064  5004               	movf	i2___awdiv@divisor+1,w,c
 20545  015066  5802               	subwfb	i2___awdiv@dividend+1,w,c
 20546  015068  A0D8               	btfss	status,0,c
 20547  01506A  D005               	goto	i2l8203
 20548  01506C  5003               	movf	i2___awdiv@divisor,w,c
 20549  01506E  5E01               	subwf	i2___awdiv@dividend,f,c
 20550  015070  5004               	movf	i2___awdiv@divisor+1,w,c
 20551  015072  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 20552  015074  8007               	bsf	i2___awdiv@quotient,0,c
 20553  015076                     i2l8203:
 20554  015076  90D8               	bcf	status,0,c
 20555  015078  3204               	rrcf	i2___awdiv@divisor+1,f,c
 20556  01507A  3203               	rrcf	i2___awdiv@divisor,f,c
 20557  01507C  2E05               	decfsz	i2___awdiv@counter,f,c
 20558  01507E  D7ED               	goto	i2l8195
 20559  015080                     i2l8207:
 20560  015080  5006               	movf	i2___awdiv@sign,w,c
 20561  015082  B4D8               	btfsc	status,2,c
 20562  015084  D004               	goto	i2l8211
 20563  015086  6C07               	negf	i2___awdiv@quotient,c
 20564  015088  1E08               	comf	i2___awdiv@quotient+1,f,c
 20565  01508A  B0D8               	btfsc	status,0,c
 20566  01508C  2A08               	incf	i2___awdiv@quotient+1,f,c
 20567  01508E                     i2l8211:
 20568  01508E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 20569  015092  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 20570  015096  0012               	return	
 20571  015098                     __end_ofi2___awdiv:
 20572                           	opt stack 0
 20573                           pclatu	equ	0xFFB
 20574                           pclath	equ	0xFFA
 20575                           tblptru	equ	0xFF8
 20576                           tblptrh	equ	0xFF7
 20577                           tblptrl	equ	0xFF6
 20578                           tablat	equ	0xFF5
 20579                           prodh	equ	0xFF4
 20580                           prodl	equ	0xFF3
 20581                           intcon	equ	0xFF2
 20582                           intcon2	equ	0xFF1
 20583                           postinc0	equ	0xFEE
 20584                           fsr0h	equ	0xFEA
 20585                           fsr0l	equ	0xFE9
 20586                           wreg	equ	0xFE8
 20587                           indf1	equ	0xFE7
 20588                           postinc1	equ	0xFE6
 20589                           postdec1	equ	0xFE5
 20590                           fsr1h	equ	0xFE2
 20591                           fsr1l	equ	0xFE1
 20592                           indf2	equ	0xFDF
 20593                           postinc2	equ	0xFDE
 20594                           postdec2	equ	0xFDD
 20595                           plusw2	equ	0xFDB
 20596                           fsr2h	equ	0xFDA
 20597                           fsr2l	equ	0xFD9
 20598                           status	equ	0xFD8
 20599                           
 20600 ;; *************** function i2_LED_OUT *****************
 20601 ;; Defined at:
 20602 ;;		line 79 in file "tasks.h"
 20603 ;; Parameters:    Size  Location     Type
 20604 ;;  b               1    wreg     unsigned char 
 20605 ;;  value           1    0[COMRAM] unsigned char 
 20606 ;; Auto vars:     Size  Location     Type
 20607 ;;  b               1    1[COMRAM] unsigned char 
 20608 ;; Return value:  Size  Location     Type
 20609 ;;		None               void
 20610 ;; Registers used:
 20611 ;;		wreg, status,2, status,0
 20612 ;; Tracked objects:
 20613 ;;		On entry : 0/0
 20614 ;;		On exit  : 0/0
 20615 ;;		Unchanged: 0/0
 20616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20621 ;;Total ram usage:        2 bytes
 20622 ;; Hardware stack levels used:    1
 20623 ;; This function calls:
 20624 ;;		Nothing
 20625 ;; This function is called by:
 20626 ;;		_lchika
 20627 ;; This function uses a non-reentrant model
 20628 ;;
 20629                           
 20630                           	psect	text96
 20631  0159EA                     __ptext96:
 20632                           	opt stack 0
 20633  0159EA                     i2_LED_OUT:
 20634                           	opt stack 20
 20635                           
 20636                           ;incstack = 0
 20637                           ;i2LED_OUT@b stored from wreg
 20638  0159EA  6E02               	movwf	i2LED_OUT@b,c
 20639                           
 20640                           ;tasks.h: 80: switch (b) {
 20641  0159EC  D012               	goto	i2l8169
 20642  0159EE                     i2l633:
 20643                           
 20644                           ;tasks.h: 82: LATB7 = value;
 20645  0159EE  A001               	btfss	i2LED_OUT@value,0,c
 20646  0159F0  D002               	goto	i2u842_40
 20647  0159F2  8E8A               	bsf	3978,7,c	;volatile
 20648  0159F4  0012               	return	
 20649  0159F6                     i2u842_40:
 20650  0159F6  9E8A               	bcf	3978,7,c	;volatile
 20651                           
 20652                           ;tasks.h: 83: break;
 20653  0159F8  0012               	return	
 20654  0159FA                     i2l635:
 20655                           
 20656                           ;tasks.h: 85: LATB6 = value;
 20657  0159FA  A001               	btfss	i2LED_OUT@value,0,c
 20658  0159FC  D002               	goto	i2u844_40
 20659  0159FE  8C8A               	bsf	3978,6,c	;volatile
 20660  015A00  0012               	return	
 20661  015A02                     i2u844_40:
 20662  015A02  9C8A               	bcf	3978,6,c	;volatile
 20663                           
 20664                           ;tasks.h: 86: break;
 20665  015A04  0012               	return	
 20666  015A06                     i2l636:
 20667                           
 20668                           ;tasks.h: 88: LATC2 = value;
 20669  015A06  A001               	btfss	i2LED_OUT@value,0,c
 20670  015A08  D002               	goto	i2u846_40
 20671  015A0A  848B               	bsf	3979,2,c	;volatile
 20672  015A0C  0012               	return	
 20673  015A0E                     i2u846_40:
 20674  015A0E  948B               	bcf	3979,2,c	;volatile
 20675                           
 20676                           ;tasks.h: 90: }
 20677                           
 20678                           ;tasks.h: 89: break;
 20679  015A10  0012               	return	
 20680  015A12                     i2l8169:
 20681  015A12  5002               	movf	i2LED_OUT@b,w,c
 20682                           
 20683                           ; Switch size 1, requested type "space"
 20684                           ; Number of cases is 3, Range of values is 0 to 2
 20685                           ; switch strategies available:
 20686                           ; Name         Instructions Cycles
 20687                           ; simple_byte           10     6 (average)
 20688                           ;	Chosen strategy is simple_byte
 20689  015A14  0A00               	xorlw	0	; case 0
 20690  015A16  B4D8               	btfsc	status,2,c
 20691  015A18  D7EA               	goto	i2l633
 20692  015A1A  0A01               	xorlw	1	; case 1
 20693  015A1C  B4D8               	btfsc	status,2,c
 20694  015A1E  D7ED               	goto	i2l635
 20695  015A20  0A03               	xorlw	3	; case 2
 20696  015A22  A4D8               	btfss	status,2,c
 20697  015A24  0012               	return	
 20698  015A26  D7EF               	goto	i2l636
 20699  015A28                     __end_ofi2_LED_OUT:
 20700                           	opt stack 0
 20701                           pclatu	equ	0xFFB
 20702                           pclath	equ	0xFFA
 20703                           tblptru	equ	0xFF8
 20704                           tblptrh	equ	0xFF7
 20705                           tblptrl	equ	0xFF6
 20706                           tablat	equ	0xFF5
 20707                           prodh	equ	0xFF4
 20708                           prodl	equ	0xFF3
 20709                           intcon	equ	0xFF2
 20710                           intcon2	equ	0xFF1
 20711                           postinc0	equ	0xFEE
 20712                           fsr0h	equ	0xFEA
 20713                           fsr0l	equ	0xFE9
 20714                           wreg	equ	0xFE8
 20715                           indf1	equ	0xFE7
 20716                           postinc1	equ	0xFE6
 20717                           postdec1	equ	0xFE5
 20718                           fsr1h	equ	0xFE2
 20719                           fsr1l	equ	0xFE1
 20720                           indf2	equ	0xFDF
 20721                           postinc2	equ	0xFDE
 20722                           postdec2	equ	0xFDD
 20723                           plusw2	equ	0xFDB
 20724                           fsr2h	equ	0xFDA
 20725                           fsr2l	equ	0xFD9
 20726                           status	equ	0xFD8
 20727                           
 20728 ;; *************** function _integrating *****************
 20729 ;; Defined at:
 20730 ;;		line 159 in file "tasks.h"
 20731 ;; Parameters:    Size  Location     Type
 20732 ;;		None
 20733 ;; Auto vars:     Size  Location     Type
 20734 ;;  port            1   15[COMRAM] unsigned char 
 20735 ;; Return value:  Size  Location     Type
 20736 ;;		None               void
 20737 ;; Registers used:
 20738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20739 ;; Tracked objects:
 20740 ;;		On entry : 0/0
 20741 ;;		On exit  : 0/0
 20742 ;;		Unchanged: 0/0
 20743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20748 ;;Total ram usage:        3 bytes
 20749 ;; Hardware stack levels used:    1
 20750 ;; Hardware stack levels required when called:    1
 20751 ;; This function calls:
 20752 ;;		i2___lldiv
 20753 ;; This function is called by:
 20754 ;;		_ISR
 20755 ;; This function uses a non-reentrant model
 20756 ;;
 20757                           
 20758                           	psect	text97
 20759  014C30                     __ptext97:
 20760                           	opt stack 0
 20761  014C30                     _integrating:
 20762                           	opt stack 20
 20763                           
 20764                           ;tasks.h: 160: for (uint8_t port = 0; port < 3; port++) {
 20765                           
 20766                           ;incstack = 0
 20767  014C30  0E00               	movlw	0
 20768  014C32  6E10               	movwf	integrating@port,c
 20769  014C34                     i2l8309:
 20770  014C34  0E02               	movlw	2
 20771  014C36  6410               	cpfsgt	integrating@port,c
 20772  014C38  D001               	goto	i2l8313
 20773  014C3A  0012               	return	
 20774  014C3C                     i2l8313:
 20775                           
 20776                           ;tasks.h: 161: s[port] += I[port];
 20777  014C3C  5010               	movf	integrating@port,w,c
 20778  014C3E  0D02               	mullw	2
 20779  014C40  0E2D               	movlw	low _I
 20780  014C42  24F3               	addwf	prodl,w,c
 20781  014C44  6ED9               	movwf	fsr2l,c
 20782  014C46  0E00               	movlw	high _I
 20783  014C48  20F4               	addwfc	prodh,w,c
 20784  014C4A  6EDA               	movwf	fsr2h,c
 20785  014C4C  CFDE F00E          	movff	postinc2,??_integrating
 20786  014C50  CFDD F00F          	movff	postdec2,??_integrating+1
 20787  014C54  5010               	movf	integrating@port,w,c
 20788  014C56  0D04               	mullw	4
 20789  014C58  0E0C               	movlw	low _s
 20790  014C5A  24F3               	addwf	prodl,w,c
 20791  014C5C  6ED9               	movwf	fsr2l,c
 20792  014C5E  0E03               	movlw	high _s
 20793  014C60  20F4               	addwfc	prodh,w,c
 20794  014C62  6EDA               	movwf	fsr2h,c
 20795  014C64  500E               	movf	??_integrating,w,c
 20796  014C66  26DE               	addwf	postinc2,f,c
 20797  014C68  500F               	movf	??_integrating+1,w,c
 20798  014C6A  22DE               	addwfc	postinc2,f,c
 20799  014C6C  0E00               	movlw	0
 20800  014C6E  22DE               	addwfc	postinc2,f,c
 20801  014C70  22DE               	addwfc	postinc2,f,c
 20802                           
 20803                           ;tasks.h: 162: S[port] = s[port] / 3600;
 20804  014C72  5010               	movf	integrating@port,w,c
 20805  014C74  0D04               	mullw	4
 20806  014C76  0E0C               	movlw	low _s
 20807  014C78  24F3               	addwf	prodl,w,c
 20808  014C7A  6ED9               	movwf	fsr2l,c
 20809  014C7C  0E03               	movlw	high _s
 20810  014C7E  20F4               	addwfc	prodh,w,c
 20811  014C80  6EDA               	movwf	fsr2h,c
 20812  014C82  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 20813  014C86  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 20814  014C8A  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 20815  014C8E  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 20816  014C92  0E10               	movlw	16
 20817  014C94  6E05               	movwf	i2___lldiv@divisor,c
 20818  014C96  0E0E               	movlw	14
 20819  014C98  6E06               	movwf	i2___lldiv@divisor+1,c
 20820  014C9A  0E00               	movlw	0
 20821  014C9C  6E07               	movwf	i2___lldiv@divisor+2,c
 20822  014C9E  0E00               	movlw	0
 20823  014CA0  6E08               	movwf	i2___lldiv@divisor+3,c
 20824  014CA2  EC4C  F0A8         	call	i2___lldiv	;wreg free
 20825  014CA6  5010               	movf	integrating@port,w,c
 20826  014CA8  0D04               	mullw	4
 20827  014CAA  0E00               	movlw	low _S
 20828  014CAC  24F3               	addwf	prodl,w,c
 20829  014CAE  6ED9               	movwf	fsr2l,c
 20830  014CB0  0E03               	movlw	high _S
 20831  014CB2  20F4               	addwfc	prodh,w,c
 20832  014CB4  6EDA               	movwf	fsr2h,c
 20833  014CB6  C001  FFDE         	movff	?i2___lldiv,postinc2
 20834  014CBA  C002  FFDE         	movff	?i2___lldiv+1,postinc2
 20835  014CBE  C003  FFDE         	movff	?i2___lldiv+2,postinc2
 20836  014CC2  C004  FFDE         	movff	?i2___lldiv+3,postinc2
 20837  014CC6  2A10               	incf	integrating@port,f,c
 20838  014CC8  D7B5               	goto	i2l8309
 20839  014CCA                     __end_of_integrating:
 20840                           	opt stack 0
 20841                           pclatu	equ	0xFFB
 20842                           pclath	equ	0xFFA
 20843                           tblptru	equ	0xFF8
 20844                           tblptrh	equ	0xFF7
 20845                           tblptrl	equ	0xFF6
 20846                           tablat	equ	0xFF5
 20847                           prodh	equ	0xFF4
 20848                           prodl	equ	0xFF3
 20849                           intcon	equ	0xFF2
 20850                           intcon2	equ	0xFF1
 20851                           postinc0	equ	0xFEE
 20852                           fsr0h	equ	0xFEA
 20853                           fsr0l	equ	0xFE9
 20854                           wreg	equ	0xFE8
 20855                           indf1	equ	0xFE7
 20856                           postinc1	equ	0xFE6
 20857                           postdec1	equ	0xFE5
 20858                           fsr1h	equ	0xFE2
 20859                           fsr1l	equ	0xFE1
 20860                           indf2	equ	0xFDF
 20861                           postinc2	equ	0xFDE
 20862                           postdec2	equ	0xFDD
 20863                           plusw2	equ	0xFDB
 20864                           fsr2h	equ	0xFDA
 20865                           fsr2l	equ	0xFD9
 20866                           status	equ	0xFD8
 20867                           
 20868 ;; *************** function i2___lldiv *****************
 20869 ;; Defined at:
 20870 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 20871 ;; Parameters:    Size  Location     Type
 20872 ;;  dividend        4    0[COMRAM] unsigned long 
 20873 ;;  divisor         4    4[COMRAM] unsigned long 
 20874 ;; Auto vars:     Size  Location     Type
 20875 ;;  __lldiv         4    8[COMRAM] unsigned long 
 20876 ;;  __lldiv         1   12[COMRAM] unsigned char 
 20877 ;; Return value:  Size  Location     Type
 20878 ;;                  4    0[COMRAM] unsigned long 
 20879 ;; Registers used:
 20880 ;;		wreg, status,2, status,0
 20881 ;; Tracked objects:
 20882 ;;		On entry : 0/0
 20883 ;;		On exit  : 0/0
 20884 ;;		Unchanged: 0/0
 20885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20887 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20889 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20890 ;;Total ram usage:       13 bytes
 20891 ;; Hardware stack levels used:    1
 20892 ;; This function calls:
 20893 ;;		Nothing
 20894 ;; This function is called by:
 20895 ;;		_integrating
 20896 ;; This function uses a non-reentrant model
 20897 ;;
 20898                           
 20899                           	psect	text98
 20900  015098                     __ptext98:
 20901                           	opt stack 0
 20902  015098                     i2___lldiv:
 20903                           	opt stack 20
 20904                           
 20905                           ;incstack = 0
 20906  015098  0E00               	movlw	0
 20907  01509A  6E09               	movwf	i2___lldiv@quotient,c
 20908  01509C  0E00               	movlw	0
 20909  01509E  6E0A               	movwf	i2___lldiv@quotient+1,c
 20910  0150A0  0E00               	movlw	0
 20911  0150A2  6E0B               	movwf	i2___lldiv@quotient+2,c
 20912  0150A4  0E00               	movlw	0
 20913  0150A6  6E0C               	movwf	i2___lldiv@quotient+3,c
 20914  0150A8  5005               	movf	i2___lldiv@divisor,w,c
 20915  0150AA  1006               	iorwf	i2___lldiv@divisor+1,w,c
 20916  0150AC  1007               	iorwf	i2___lldiv@divisor+2,w,c
 20917  0150AE  1008               	iorwf	i2___lldiv@divisor+3,w,c
 20918  0150B0  B4D8               	btfsc	status,2,c
 20919  0150B2  D02A               	goto	i2l1847
 20920  0150B4  0E01               	movlw	1
 20921  0150B6  6E0D               	movwf	i2___lldiv@counter,c
 20922  0150B8  D006               	goto	i2l8223
 20923  0150BA                     i2l8221:
 20924  0150BA  90D8               	bcf	status,0,c
 20925  0150BC  3605               	rlcf	i2___lldiv@divisor,f,c
 20926  0150BE  3606               	rlcf	i2___lldiv@divisor+1,f,c
 20927  0150C0  3607               	rlcf	i2___lldiv@divisor+2,f,c
 20928  0150C2  3608               	rlcf	i2___lldiv@divisor+3,f,c
 20929  0150C4  2A0D               	incf	i2___lldiv@counter,f,c
 20930  0150C6                     i2l8223:
 20931  0150C6  AE08               	btfss	i2___lldiv@divisor+3,7,c
 20932  0150C8  D7F8               	goto	i2l8221
 20933  0150CA                     i2l8225:
 20934  0150CA  90D8               	bcf	status,0,c
 20935  0150CC  3609               	rlcf	i2___lldiv@quotient,f,c
 20936  0150CE  360A               	rlcf	i2___lldiv@quotient+1,f,c
 20937  0150D0  360B               	rlcf	i2___lldiv@quotient+2,f,c
 20938  0150D2  360C               	rlcf	i2___lldiv@quotient+3,f,c
 20939  0150D4  5005               	movf	i2___lldiv@divisor,w,c
 20940  0150D6  5C01               	subwf	i2___lldiv@dividend,w,c
 20941  0150D8  5006               	movf	i2___lldiv@divisor+1,w,c
 20942  0150DA  5802               	subwfb	i2___lldiv@dividend+1,w,c
 20943  0150DC  5007               	movf	i2___lldiv@divisor+2,w,c
 20944  0150DE  5803               	subwfb	i2___lldiv@dividend+2,w,c
 20945  0150E0  5008               	movf	i2___lldiv@divisor+3,w,c
 20946  0150E2  5804               	subwfb	i2___lldiv@dividend+3,w,c
 20947  0150E4  A0D8               	btfss	status,0,c
 20948  0150E6  D009               	goto	i2l8233
 20949  0150E8  5005               	movf	i2___lldiv@divisor,w,c
 20950  0150EA  5E01               	subwf	i2___lldiv@dividend,f,c
 20951  0150EC  5006               	movf	i2___lldiv@divisor+1,w,c
 20952  0150EE  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 20953  0150F0  5007               	movf	i2___lldiv@divisor+2,w,c
 20954  0150F2  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 20955  0150F4  5008               	movf	i2___lldiv@divisor+3,w,c
 20956  0150F6  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 20957  0150F8  8009               	bsf	i2___lldiv@quotient,0,c
 20958  0150FA                     i2l8233:
 20959  0150FA  90D8               	bcf	status,0,c
 20960  0150FC  3208               	rrcf	i2___lldiv@divisor+3,f,c
 20961  0150FE  3207               	rrcf	i2___lldiv@divisor+2,f,c
 20962  015100  3206               	rrcf	i2___lldiv@divisor+1,f,c
 20963  015102  3205               	rrcf	i2___lldiv@divisor,f,c
 20964  015104  2E0D               	decfsz	i2___lldiv@counter,f,c
 20965  015106  D7E1               	goto	i2l8225
 20966  015108                     i2l1847:
 20967  015108  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 20968  01510C  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 20969  015110  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 20970  015114  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 20971  015118  0012               	return		;funcret
 20972  01511A                     __end_ofi2___lldiv:
 20973                           	opt stack 0
 20974                           pclatu	equ	0xFFB
 20975                           pclath	equ	0xFFA
 20976                           tblptru	equ	0xFF8
 20977                           tblptrh	equ	0xFF7
 20978                           tblptrl	equ	0xFF6
 20979                           tablat	equ	0xFF5
 20980                           prodh	equ	0xFF4
 20981                           prodl	equ	0xFF3
 20982                           intcon	equ	0xFF2
 20983                           intcon2	equ	0xFF1
 20984                           postinc0	equ	0xFEE
 20985                           fsr0h	equ	0xFEA
 20986                           fsr0l	equ	0xFE9
 20987                           wreg	equ	0xFE8
 20988                           indf1	equ	0xFE7
 20989                           postinc1	equ	0xFE6
 20990                           postdec1	equ	0xFE5
 20991                           fsr1h	equ	0xFE2
 20992                           fsr1l	equ	0xFE1
 20993                           indf2	equ	0xFDF
 20994                           postinc2	equ	0xFDE
 20995                           postdec2	equ	0xFDD
 20996                           plusw2	equ	0xFDB
 20997                           fsr2h	equ	0xFDA
 20998                           fsr2l	equ	0xFD9
 20999                           status	equ	0xFD8
 21000                           
 21001 ;; *************** function _delay_timer_interrupt *****************
 21002 ;; Defined at:
 21003 ;;		line 344 in file "../My_header\My_header.h"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;  d               2    0[COMRAM] PTR struct Delay
 21006 ;;		 -> delay_display(3), 
 21007 ;; Auto vars:     Size  Location     Type
 21008 ;;		None
 21009 ;; Return value:  Size  Location     Type
 21010 ;;		None               void
 21011 ;; Registers used:
 21012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21013 ;; Tracked objects:
 21014 ;;		On entry : 0/0
 21015 ;;		On exit  : 0/0
 21016 ;;		Unchanged: 0/0
 21017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21022 ;;Total ram usage:        4 bytes
 21023 ;; Hardware stack levels used:    1
 21024 ;; This function calls:
 21025 ;;		Nothing
 21026 ;; This function is called by:
 21027 ;;		_ISR
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	text99
 21032  01588C                     __ptext99:
 21033                           	opt stack 0
 21034  01588C                     _delay_timer_interrupt:
 21035                           	opt stack 21
 21036                           
 21037                           ;My_header\My_header.h: 345: if (d->cnt == 1)d->flag = 1;
 21038                           
 21039                           ;incstack = 0
 21040  01588C  EE20 F001          	lfsr	2,1
 21041  015890  5001               	movf	delay_timer_interrupt@d,w,c
 21042  015892  26D9               	addwf	fsr2l,f,c
 21043  015894  5002               	movf	delay_timer_interrupt@d+1,w,c
 21044  015896  22DA               	addwfc	fsr2h,f,c
 21045  015898  04DE               	decf	postinc2,w,c
 21046  01589A  10DE               	iorwf	postinc2,w,c
 21047  01589C  A4D8               	btfss	status,2,c
 21048  01589E  D006               	goto	i2l8263
 21049  0158A0  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 21050  0158A4  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 21051  0158A8  0E01               	movlw	1
 21052  0158AA  6EDF               	movwf	indf2,c
 21053  0158AC                     i2l8263:
 21054                           
 21055                           ;My_header\My_header.h: 346: if (d->cnt)d->cnt--;
 21056  0158AC  EE20 F001          	lfsr	2,1
 21057  0158B0  5001               	movf	delay_timer_interrupt@d,w,c
 21058  0158B2  26D9               	addwf	fsr2l,f,c
 21059  0158B4  5002               	movf	delay_timer_interrupt@d+1,w,c
 21060  0158B6  22DA               	addwfc	fsr2h,f,c
 21061  0158B8  50DE               	movf	postinc2,w,c
 21062  0158BA  10DE               	iorwf	postinc2,w,c
 21063  0158BC  B4D8               	btfsc	status,2,c
 21064  0158BE  0012               	return	
 21065  0158C0  EE20 F001          	lfsr	2,1
 21066  0158C4  5001               	movf	delay_timer_interrupt@d,w,c
 21067  0158C6  26D9               	addwf	fsr2l,f,c
 21068  0158C8  5002               	movf	delay_timer_interrupt@d+1,w,c
 21069  0158CA  22DA               	addwfc	fsr2h,f,c
 21070  0158CC  06DE               	decf	postinc2,f,c
 21071  0158CE  0E00               	movlw	0
 21072  0158D0  5ADD               	subwfb	postdec2,f,c
 21073  0158D2  0012               	return	
 21074  0158D4                     __end_of_delay_timer_interrupt:
 21075                           	opt stack 0
 21076                           pclatu	equ	0xFFB
 21077                           pclath	equ	0xFFA
 21078                           tblptru	equ	0xFF8
 21079                           tblptrh	equ	0xFF7
 21080                           tblptrl	equ	0xFF6
 21081                           tablat	equ	0xFF5
 21082                           prodh	equ	0xFF4
 21083                           prodl	equ	0xFF3
 21084                           intcon	equ	0xFF2
 21085                           intcon2	equ	0xFF1
 21086                           postinc0	equ	0xFEE
 21087                           fsr0h	equ	0xFEA
 21088                           fsr0l	equ	0xFE9
 21089                           wreg	equ	0xFE8
 21090                           indf1	equ	0xFE7
 21091                           postinc1	equ	0xFE6
 21092                           postdec1	equ	0xFE5
 21093                           fsr1h	equ	0xFE2
 21094                           fsr1l	equ	0xFE1
 21095                           indf2	equ	0xFDF
 21096                           postinc2	equ	0xFDE
 21097                           postdec2	equ	0xFDD
 21098                           plusw2	equ	0xFDB
 21099                           fsr2h	equ	0xFDA
 21100                           fsr2l	equ	0xFD9
 21101                           status	equ	0xFD8
 21102                           
 21103 ;; *************** function _charge_time_count *****************
 21104 ;; Defined at:
 21105 ;;		line 166 in file "tasks.h"
 21106 ;; Parameters:    Size  Location     Type
 21107 ;;		None
 21108 ;; Auto vars:     Size  Location     Type
 21109 ;;  i               1    2[COMRAM] unsigned char 
 21110 ;; Return value:  Size  Location     Type
 21111 ;;		None               void
 21112 ;; Registers used:
 21113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21114 ;; Tracked objects:
 21115 ;;		On entry : 0/0
 21116 ;;		On exit  : 0/0
 21117 ;;		Unchanged: 0/0
 21118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;Total ram usage:        3 bytes
 21124 ;; Hardware stack levels used:    1
 21125 ;; This function calls:
 21126 ;;		Nothing
 21127 ;; This function is called by:
 21128 ;;		_ISR
 21129 ;; This function uses a non-reentrant model
 21130 ;;
 21131                           
 21132                           	psect	text100
 21133  0158D4                     __ptext100:
 21134                           	opt stack 0
 21135  0158D4                     _charge_time_count:
 21136                           	opt stack 21
 21137                           
 21138                           ;tasks.h: 167: uint8_t i;
 21139                           ;tasks.h: 168: for (i = 0; i < 3; i++) {
 21140                           
 21141                           ;incstack = 0
 21142  0158D4  0E00               	movlw	0
 21143  0158D6  6E03               	movwf	charge_time_count@i,c
 21144  0158D8                     i2l8323:
 21145  0158D8  0E02               	movlw	2
 21146  0158DA  6403               	cpfsgt	charge_time_count@i,c
 21147  0158DC  D001               	goto	i2l8327
 21148  0158DE  0012               	return	
 21149  0158E0                     i2l8327:
 21150                           
 21151                           ;tasks.h: 169: if (I[i] > 100)charge_time[i]++;
 21152  0158E0  5003               	movf	charge_time_count@i,w,c
 21153  0158E2  0D02               	mullw	2
 21154  0158E4  0E2D               	movlw	low _I
 21155  0158E6  24F3               	addwf	prodl,w,c
 21156  0158E8  6ED9               	movwf	fsr2l,c
 21157  0158EA  0E00               	movlw	high _I
 21158  0158EC  20F4               	addwfc	prodh,w,c
 21159  0158EE  6EDA               	movwf	fsr2h,c
 21160  0158F0  0E01               	movlw	1
 21161  0158F2  50DB               	movf	plusw2,w,c
 21162  0158F4  E104               	bnz	i2u872_40
 21163  0158F6  0E65               	movlw	101
 21164  0158F8  5CDE               	subwf	postinc2,w,c
 21165  0158FA  A0D8               	btfss	status,0,c
 21166  0158FC  D00D               	goto	i2l8331
 21167  0158FE                     i2u872_40:
 21168  0158FE  5003               	movf	charge_time_count@i,w,c
 21169  015900  0D04               	mullw	4
 21170  015902  0E60               	movlw	low _charge_time
 21171  015904  24F3               	addwf	prodl,w,c
 21172  015906  6ED9               	movwf	fsr2l,c
 21173  015908  0E00               	movlw	high _charge_time
 21174  01590A  20F4               	addwfc	prodh,w,c
 21175  01590C  6EDA               	movwf	fsr2h,c
 21176  01590E  2ADE               	incf	postinc2,f,c
 21177  015910  0E00               	movlw	0
 21178  015912  22DE               	addwfc	postinc2,f,c
 21179  015914  22DE               	addwfc	postinc2,f,c
 21180  015916  22DE               	addwfc	postinc2,f,c
 21181  015918                     i2l8331:
 21182  015918  2A03               	incf	charge_time_count@i,f,c
 21183  01591A  D7DE               	goto	i2l8323
 21184  01591C                     __end_of_charge_time_count:
 21185                           	opt stack 0
 21186                           pclatu	equ	0xFFB
 21187                           pclath	equ	0xFFA
 21188                           tblptru	equ	0xFF8
 21189                           tblptrh	equ	0xFF7
 21190                           tblptrl	equ	0xFF6
 21191                           tablat	equ	0xFF5
 21192                           prodh	equ	0xFF4
 21193                           prodl	equ	0xFF3
 21194                           intcon	equ	0xFF2
 21195                           intcon2	equ	0xFF1
 21196                           postinc0	equ	0xFEE
 21197                           fsr0h	equ	0xFEA
 21198                           fsr0l	equ	0xFE9
 21199                           wreg	equ	0xFE8
 21200                           indf1	equ	0xFE7
 21201                           postinc1	equ	0xFE6
 21202                           postdec1	equ	0xFE5
 21203                           fsr1h	equ	0xFE2
 21204                           fsr1l	equ	0xFE1
 21205                           indf2	equ	0xFDF
 21206                           postinc2	equ	0xFDE
 21207                           postdec2	equ	0xFDD
 21208                           plusw2	equ	0xFDB
 21209                           fsr2h	equ	0xFDA
 21210                           fsr2l	equ	0xFD9
 21211                           status	equ	0xFD8
 21212                           
 21213 ;; *************** function _USB_ISR *****************
 21214 ;; Defined at:
 21215 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 21216 ;; Parameters:    Size  Location     Type
 21217 ;;		None
 21218 ;; Auto vars:     Size  Location     Type
 21219 ;;		None
 21220 ;; Return value:  Size  Location     Type
 21221 ;;		None               void
 21222 ;; Registers used:
 21223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21224 ;; Tracked objects:
 21225 ;;		On entry : 0/0
 21226 ;;		On exit  : 0/0
 21227 ;;		Unchanged: 0/0
 21228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21233 ;;Total ram usage:        0 bytes
 21234 ;; Hardware stack levels used:    1
 21235 ;; Hardware stack levels required when called:    9
 21236 ;; This function calls:
 21237 ;;		_USBDeviceTasks
 21238 ;; This function is called by:
 21239 ;;		_ISR
 21240 ;; This function uses a non-reentrant model
 21241 ;;
 21242                           
 21243                           	psect	text101
 21244  015FE2                     __ptext101:
 21245                           	opt stack 0
 21246  015FE2                     _USB_ISR:
 21247                           	opt stack 12
 21248                           
 21249                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 21250                           
 21251                           ;incstack = 0
 21252  015FE2  ECA8  F095         	call	_USBDeviceTasks	;wreg free
 21253  015FE6  0012               	return		;funcret
 21254  015FE8                     __end_of_USB_ISR:
 21255                           	opt stack 0
 21256                           pclatu	equ	0xFFB
 21257                           pclath	equ	0xFFA
 21258                           tblptru	equ	0xFF8
 21259                           tblptrh	equ	0xFF7
 21260                           tblptrl	equ	0xFF6
 21261                           tablat	equ	0xFF5
 21262                           prodh	equ	0xFF4
 21263                           prodl	equ	0xFF3
 21264                           intcon	equ	0xFF2
 21265                           intcon2	equ	0xFF1
 21266                           postinc0	equ	0xFEE
 21267                           fsr0h	equ	0xFEA
 21268                           fsr0l	equ	0xFE9
 21269                           wreg	equ	0xFE8
 21270                           indf1	equ	0xFE7
 21271                           postinc1	equ	0xFE6
 21272                           postdec1	equ	0xFE5
 21273                           fsr1h	equ	0xFE2
 21274                           fsr1l	equ	0xFE1
 21275                           indf2	equ	0xFDF
 21276                           postinc2	equ	0xFDE
 21277                           postdec2	equ	0xFDD
 21278                           plusw2	equ	0xFDB
 21279                           fsr2h	equ	0xFDA
 21280                           fsr2l	equ	0xFD9
 21281                           status	equ	0xFD8
 21282                           
 21283 ;; *************** function _USBDeviceTasks *****************
 21284 ;; Defined at:
 21285 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;		None
 21288 ;; Auto vars:     Size  Location     Type
 21289 ;;  i               1   29[COMRAM] unsigned char 
 21290 ;; Return value:  Size  Location     Type
 21291 ;;		None               void
 21292 ;; Registers used:
 21293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21294 ;; Tracked objects:
 21295 ;;		On entry : 0/0
 21296 ;;		On exit  : 0/0
 21297 ;;		Unchanged: 0/0
 21298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;Total ram usage:        1 bytes
 21304 ;; Hardware stack levels used:    1
 21305 ;; Hardware stack levels required when called:    8
 21306 ;; This function calls:
 21307 ;;		_USBCtrlEPAllowStatusStage
 21308 ;;		_USBCtrlEPService
 21309 ;;		_USBStallHandler
 21310 ;;		_USBSuspend
 21311 ;;		_USBWakeFromSuspend
 21312 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21313 ;;		i2_USBDeviceInit
 21314 ;; This function is called by:
 21315 ;;		_USB_ISR
 21316 ;; This function uses a non-reentrant model
 21317 ;;
 21318                           
 21319                           	psect	text102
 21320  012B50                     __ptext102:
 21321                           	opt stack 0
 21322  012B50                     _USBDeviceTasks:
 21323                           	opt stack 12
 21324                           
 21325                           ;usb_device.c: 491: uint8_t i;
 21326                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 21327                           
 21328                           ;incstack = 0
 21329  012B50  0445               	decf	_USBDeviceState,w,c	;volatile
 21330  012B52  B4D8               	btfsc	status,2,c
 21331                           
 21332                           ;usb_device.c: 603: {
 21333                           ;usb_device.c: 613: if(!UCONbits.SE0)
 21334  012B54  BA65               	btfsc	3941,5,c	;volatile
 21335  012B56  D008               	goto	i2l8073
 21336                           
 21337                           ;usb_device.c: 614: {
 21338                           ;usb_device.c: 615: {UIR = 0;};
 21339  012B58  0E00               	movlw	0
 21340  012B5A  6E62               	movwf	3938,c	;volatile
 21341                           
 21342                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 21343  012B5C  010F               	movlb	15	; () banked
 21344  012B5E  8136               	bsf	54,0,b	;volatile
 21345                           
 21346                           ; BSR set to: 15
 21347                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 21348  012B60  010F               	movlb	15	; () banked
 21349  012B62  8936               	bsf	54,4,b	;volatile
 21350                           
 21351                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 21352  012B64  0E02               	movlw	2
 21353  012B66  6E45               	movwf	_USBDeviceState,c	;volatile
 21354  012B68                     i2l8073:
 21355                           
 21356                           ;usb_device.c: 622: }
 21357                           ;usb_device.c: 623: }
 21358                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 21359  012B68  A462               	btfss	3938,2,c	;volatile
 21360  012B6A  D006               	goto	i2l8081
 21361  012B6C  010F               	movlb	15	; () banked
 21362  012B6E  A536               	btfss	54,2,b	;volatile
 21363  012B70  D003               	goto	i2l8081
 21364                           
 21365                           ; BSR set to: 15
 21366                           ;usb_device.c: 640: {
 21367                           ;usb_device.c: 641: (UIR &= 0xFB);
 21368  012B72  9462               	bcf	3938,2,c	;volatile
 21369                           
 21370                           ; BSR set to: 15
 21371                           ;usb_device.c: 645: USBWakeFromSuspend();
 21372  012B74  ECF3  F0AD         	call	_USBWakeFromSuspend	;wreg free
 21373  012B78                     i2l8081:
 21374                           
 21375                           ;usb_device.c: 647: }
 21376                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 21377  012B78  A265               	btfss	3941,1,c	;volatile
 21378  012B7A  D002               	goto	i2l1120
 21379                           
 21380                           ;usb_device.c: 653: {
 21381                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 21382  012B7C  98A1               	bcf	4001,4,c	;volatile
 21383                           
 21384                           ;usb_device.c: 655: return;
 21385  012B7E  0012               	return	
 21386  012B80                     i2l1120:
 21387                           
 21388                           ;usb_device.c: 656: }
 21389                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 21390  012B80  A062               	btfss	3938,0,c	;volatile
 21391  012B82  D009               	goto	i2l8095
 21392  012B84  010F               	movlb	15	; () banked
 21393  012B86  A136               	btfss	54,0,b	;volatile
 21394  012B88  D006               	goto	i2l8095
 21395                           
 21396                           ; BSR set to: 15
 21397                           ;usb_device.c: 669: {
 21398                           ;usb_device.c: 670: USBDeviceInit();
 21399  012B8A  EC4B  F096         	call	i2_USBDeviceInit	;wreg free
 21400                           
 21401                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 21402  012B8E  88A0               	bsf	4000,4,c	;volatile
 21403                           
 21404                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 21405  012B90  0E04               	movlw	4
 21406  012B92  6E45               	movwf	_USBDeviceState,c	;volatile
 21407                           
 21408                           ;usb_device.c: 686: (UIR &= 0xFE);
 21409  012B94  9062               	bcf	3938,0,c	;volatile
 21410  012B96                     i2l8095:
 21411                           
 21412                           ;usb_device.c: 687: }
 21413                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 21414  012B96  A862               	btfss	3938,4,c	;volatile
 21415  012B98  D006               	goto	i2l8103
 21416  012B9A  010F               	movlb	15	; () banked
 21417  012B9C  A936               	btfss	54,4,b	;volatile
 21418  012B9E  D003               	goto	i2l8103
 21419                           
 21420                           ; BSR set to: 15
 21421                           ;usb_device.c: 693: {
 21422                           ;usb_device.c: 698: USBSuspend();
 21423  012BA0  ECC1  F0AE         	call	_USBSuspend	;wreg free
 21424                           
 21425                           ;usb_device.c: 701: (UIR &= 0xEF);
 21426  012BA4  9862               	bcf	3938,4,c	;volatile
 21427  012BA6                     i2l8103:
 21428                           
 21429                           ;usb_device.c: 702: }
 21430                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 21431  012BA6  AC62               	btfss	3938,6,c	;volatile
 21432  012BA8  D019               	goto	i2l8119
 21433                           
 21434                           ;usb_device.c: 705: {
 21435                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 21436  012BAA  010F               	movlb	15	; () banked
 21437  012BAC  AD36               	btfss	54,6,b	;volatile
 21438  012BAE  D00E               	goto	i2l8109
 21439                           
 21440                           ; BSR set to: 15
 21441                           ;usb_device.c: 707: {
 21442                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 21443  012BB0  0E00               	movlw	0
 21444  012BB2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21445  012BB4  0E73               	movlw	115
 21446  012BB6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21447  012BB8  0E00               	movlw	0
 21448  012BBA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21449  012BBC  0E00               	movlw	0
 21450  012BBE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21451  012BC0  0E00               	movlw	0
 21452  012BC2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21453  012BC4  0E01               	movlw	1
 21454  012BC6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21455  012BC8  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21456  012BCC                     i2l8109:
 21457                           
 21458                           ;usb_device.c: 709: }
 21459                           ;usb_device.c: 710: (UIR &= 0xBF);
 21460  012BCC  9C62               	bcf	3938,6,c	;volatile
 21461                           
 21462                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 21463  012BCE  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 21464  012BD0  A4D8               	btfss	status,2,c
 21465                           
 21466                           ;usb_device.c: 736: {
 21467                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 21468  012BD2  0648               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 21469                           
 21470                           ;usb_device.c: 738: }
 21471                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 21472  012BD4  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 21473  012BD6  B4D8               	btfsc	status,2,c
 21474                           
 21475                           ;usb_device.c: 745: {
 21476                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 21477  012BD8  EC99  F0A0         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21478  012BDC                     i2l8119:
 21479                           
 21480                           ;usb_device.c: 747: }
 21481                           ;usb_device.c: 749: }
 21482                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 21483  012BDC  AA62               	btfss	3938,5,c	;volatile
 21484  012BDE  D004               	goto	i2l8125
 21485  012BE0  010F               	movlb	15	; () banked
 21486  012BE2  BB36               	btfsc	54,5,b	;volatile
 21487                           
 21488                           ; BSR set to: 15
 21489                           ;usb_device.c: 752: {
 21490                           ;usb_device.c: 753: USBStallHandler();
 21491  012BE4  ECB1  F0AC         	call	_USBStallHandler	;wreg free
 21492  012BE8                     i2l8125:
 21493                           
 21494                           ;usb_device.c: 754: }
 21495                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 21496  012BE8  A262               	btfss	3938,1,c	;volatile
 21497  012BEA  D012               	goto	i2l8133
 21498  012BEC  010F               	movlb	15	; () banked
 21499  012BEE  A336               	btfss	54,1,b	;volatile
 21500  012BF0  D00F               	goto	i2l8133
 21501                           
 21502                           ; BSR set to: 15
 21503                           ;usb_device.c: 757: {
 21504                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 21505  012BF2  0E7F               	movlw	127
 21506  012BF4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21507  012BF6  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21508  012BF8  0E00               	movlw	0
 21509  012BFA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21510  012BFC  0E00               	movlw	0
 21511  012BFE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21512  012C00  0E00               	movlw	0
 21513  012C02  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21514  012C04  0E01               	movlw	1
 21515  012C06  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21516  012C08  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21517                           
 21518                           ;usb_device.c: 759: {UEIR = 0;};
 21519  012C0C  0E00               	movlw	0
 21520  012C0E  6E63               	movwf	3939,c	;volatile
 21521  012C10                     i2l8133:
 21522                           
 21523                           ;usb_device.c: 767: }
 21524                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 21525  012C10  0E04               	movlw	4
 21526  012C12  6045               	cpfslt	_USBDeviceState,c	;volatile
 21527  012C14  D002               	goto	i2l1130
 21528                           
 21529                           ;usb_device.c: 775: {
 21530                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 21531  012C16  98A1               	bcf	4001,4,c	;volatile
 21532                           
 21533                           ;usb_device.c: 777: return;
 21534  012C18  0012               	return	
 21535  012C1A                     i2l1130:
 21536                           
 21537                           ;usb_device.c: 778: }
 21538                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 21539  012C1A  010F               	movlb	15	; () banked
 21540  012C1C  A736               	btfss	54,3,b	;volatile
 21541  012C1E  D039               	goto	i2l1131
 21542                           
 21543                           ; BSR set to: 15
 21544                           ;usb_device.c: 784: {
 21545                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 21546  012C20  0E00               	movlw	0
 21547  012C22  6E1E               	movwf	USBDeviceTasks@i,c
 21548  012C24                     i2l8139:
 21549                           
 21550                           ; BSR set to: 15
 21551  012C24  0E03               	movlw	3
 21552  012C26  641E               	cpfsgt	USBDeviceTasks@i,c
 21553  012C28  D001               	goto	i2l1132
 21554  012C2A  D033               	goto	i2l1131
 21555  012C2C                     i2l1132:
 21556                           
 21557                           ;usb_device.c: 786: {
 21558                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 21559  012C2C  A662               	btfss	3938,3,c	;volatile
 21560  012C2E  D031               	goto	i2l1131
 21561                           
 21562                           ;usb_device.c: 788: {
 21563                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 21564  012C30  CF64 F056          	movff	3940,_USTATcopy	;volatile
 21565                           
 21566                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 21567  012C34  3056               	rrcf	_USTATcopy,w,c	;volatile
 21568  012C36  32E8               	rrcf	wreg,f,c
 21569  012C38  32E8               	rrcf	wreg,f,c
 21570  012C3A  0B0F               	andlw	15
 21571  012C3C  6E4D               	movwf	_endpoint_number,c	;volatile
 21572                           
 21573                           ;usb_device.c: 793: (UIR &= 0xF7);
 21574  012C3E  9662               	bcf	3938,3,c	;volatile
 21575                           
 21576                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 21577  012C40  B456               	btfsc	_USTATcopy,2,c	;volatile
 21578  012C42  D007               	goto	i2l8153
 21579                           
 21580                           ;usb_device.c: 799: {
 21581                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 21582  012C44  504D               	movf	_endpoint_number,w,c	;volatile
 21583  012C46  0D01               	mullw	1
 21584  012C48  0E8D               	movlw	low _ep_data_out
 21585  012C4A  24F3               	addwf	prodl,w,c
 21586  012C4C  6ED9               	movwf	fsr2l,c
 21587  012C4E  0E00               	movlw	high _ep_data_out
 21588  012C50  D006               	goto	L9
 21589  012C52                     i2l8153:
 21590                           
 21591                           ;usb_device.c: 802: else
 21592                           ;usb_device.c: 803: {
 21593                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 21594  012C52  504D               	movf	_endpoint_number,w,c	;volatile
 21595  012C54  0D01               	mullw	1
 21596  012C56  0E8A               	movlw	low _ep_data_in
 21597  012C58  24F3               	addwf	prodl,w,c
 21598  012C5A  6ED9               	movwf	fsr2l,c
 21599  012C5C  0E00               	movlw	high _ep_data_in
 21600  012C5E                     L9:
 21601  012C5E  20F4               	addwfc	prodh,w,c
 21602  012C60  6EDA               	movwf	fsr2h,c
 21603  012C62  0100               	movlb	0	; () banked
 21604  012C64  70DF               	btg	indf2,0,c
 21605                           
 21606                           ; BSR set to: 0
 21607                           ;usb_device.c: 805: }
 21608                           ;usb_device.c: 810: if(endpoint_number == 0)
 21609                           
 21610                           ; BSR set to: 0
 21611  012C66  504D               	movf	_endpoint_number,w,c	;volatile
 21612  012C68  A4D8               	btfss	status,2,c
 21613  012C6A  D003               	goto	i2l8159
 21614                           
 21615                           ; BSR set to: 0
 21616                           ;usb_device.c: 811: {
 21617                           ;usb_device.c: 812: USBCtrlEPService();
 21618  012C6C  ECCC  F09F         	call	_USBCtrlEPService	;wreg free
 21619                           
 21620                           ;usb_device.c: 813: }
 21621  012C70  D00E               	goto	i2l8161
 21622  012C72                     i2l8159:
 21623                           
 21624                           ;usb_device.c: 814: else
 21625                           ;usb_device.c: 815: {
 21626                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 21627  012C72  0E00               	movlw	0
 21628  012C74  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21629  012C76  0E72               	movlw	114
 21630  012C78  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21631  012C7A  0E56               	movlw	low _USTATcopy
 21632  012C7C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21633  012C7E  0E00               	movlw	high _USTATcopy
 21634  012C80  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21635  012C82  0E00               	movlw	0
 21636  012C84  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21637  012C86  0E00               	movlw	0
 21638  012C88  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21639  012C8A  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21640  012C8E                     i2l8161:
 21641  012C8E  2A1E               	incf	USBDeviceTasks@i,f,c
 21642  012C90  D7C9               	goto	i2l8139
 21643  012C92                     i2l1131:
 21644                           
 21645                           ;usb_device.c: 822: }
 21646                           ;usb_device.c: 823: }
 21647                           ;usb_device.c: 824: }
 21648                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 21649  012C92  98A1               	bcf	4001,4,c	;volatile
 21650  012C94  0012               	return		;funcret
 21651  012C96                     __end_of_USBDeviceTasks:
 21652                           	opt stack 0
 21653                           pclatu	equ	0xFFB
 21654                           pclath	equ	0xFFA
 21655                           tblptru	equ	0xFF8
 21656                           tblptrh	equ	0xFF7
 21657                           tblptrl	equ	0xFF6
 21658                           tablat	equ	0xFF5
 21659                           prodh	equ	0xFF4
 21660                           prodl	equ	0xFF3
 21661                           intcon	equ	0xFF2
 21662                           intcon2	equ	0xFF1
 21663                           postinc0	equ	0xFEE
 21664                           fsr0h	equ	0xFEA
 21665                           fsr0l	equ	0xFE9
 21666                           wreg	equ	0xFE8
 21667                           indf1	equ	0xFE7
 21668                           postinc1	equ	0xFE6
 21669                           postdec1	equ	0xFE5
 21670                           fsr1h	equ	0xFE2
 21671                           fsr1l	equ	0xFE1
 21672                           indf2	equ	0xFDF
 21673                           postinc2	equ	0xFDE
 21674                           postdec2	equ	0xFDD
 21675                           plusw2	equ	0xFDB
 21676                           fsr2h	equ	0xFDA
 21677                           fsr2l	equ	0xFD9
 21678                           status	equ	0xFD8
 21679                           
 21680 ;; *************** function i2_USBDeviceInit *****************
 21681 ;; Defined at:
 21682 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 21683 ;; Parameters:    Size  Location     Type
 21684 ;;		None
 21685 ;; Auto vars:     Size  Location     Type
 21686 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 21687 ;; Return value:  Size  Location     Type
 21688 ;;		None               void
 21689 ;; Registers used:
 21690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21691 ;; Tracked objects:
 21692 ;;		On entry : 0/0
 21693 ;;		On exit  : 0/0
 21694 ;;		Unchanged: 0/0
 21695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21700 ;;Total ram usage:        1 bytes
 21701 ;; Hardware stack levels used:    1
 21702 ;; Hardware stack levels required when called:    1
 21703 ;; This function calls:
 21704 ;;		i2_memset
 21705 ;; This function is called by:
 21706 ;;		_USBDeviceTasks
 21707 ;; This function uses a non-reentrant model
 21708 ;;
 21709                           
 21710                           	psect	text103
 21711  012C96                     __ptext103:
 21712                           	opt stack 0
 21713  012C96                     i2_USBDeviceInit:
 21714                           	opt stack 18
 21715                           
 21716                           ;usb_device.c: 300: uint8_t i;
 21717                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 21718                           
 21719                           ;incstack = 0
 21720  012C96  98A0               	bcf	4000,4,c	;volatile
 21721                           
 21722                           ;usb_device.c: 305: {UEIR = 0;};
 21723  012C98  0E00               	movlw	0
 21724  012C9A  6E63               	movwf	3939,c	;volatile
 21725                           
 21726                           ;usb_device.c: 308: {UIR = 0;};
 21727  012C9C  0E00               	movlw	0
 21728  012C9E  6E62               	movwf	3938,c	;volatile
 21729                           
 21730                           ;usb_device.c: 311: UEP0 = 0;
 21731  012CA0  0E00               	movlw	0
 21732  012CA2  010F               	movlb	15	; () banked
 21733  012CA4  6F26               	movwf	38,b	;volatile
 21734                           
 21735                           ; BSR set to: 15
 21736                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 21737  012CA6  0E27               	movlw	39
 21738  012CA8  6E01               	movwf	i2memset@p1,c
 21739  012CAA  0E0F               	movlw	15
 21740  012CAC  6E02               	movwf	i2memset@p1+1,c
 21741  012CAE  0E00               	movlw	0
 21742  012CB0  6E04               	movwf	i2memset@c+1,c
 21743  012CB2  0E00               	movlw	0
 21744  012CB4  6E03               	movwf	i2memset@c,c
 21745  012CB6  0E00               	movlw	0
 21746  012CB8  6E06               	movwf	i2memset@n+1,c
 21747  012CBA  0E02               	movlw	2
 21748  012CBC  6E05               	movwf	i2memset@n,c
 21749  012CBE  ECD7  F0AE         	call	i2_memset	;wreg free
 21750                           
 21751                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 21752  012CC2  0E16               	movlw	22
 21753  012CC4  010F               	movlb	15	; () banked
 21754  012CC6  6F39               	movwf	57,b	;volatile
 21755                           
 21756                           ; BSR set to: 15
 21757  012CC8  0E9F               	movlw	159
 21758  012CCA  010F               	movlb	15	; () banked
 21759  012CCC  6F37               	movwf	55,b	;volatile
 21760                           
 21761                           ; BSR set to: 15
 21762  012CCE  0E7B               	movlw	123
 21763  012CD0  010F               	movlb	15	; () banked
 21764  012CD2  6F36               	movwf	54,b	;volatile
 21765                           
 21766                           ; BSR set to: 15
 21767                           ;usb_device.c: 318: ;
 21768                           ;usb_device.c: 321: ;
 21769                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 21770  012CD4  0E00               	movlw	0
 21771  012CD6  6E09               	movwf	i2USBDeviceInit@i,c
 21772  012CD8                     i2l7375:
 21773                           
 21774                           ; BSR set to: 15
 21775  012CD8  0E0B               	movlw	11
 21776  012CDA  6409               	cpfsgt	i2USBDeviceInit@i,c
 21777  012CDC  D001               	goto	i2l7379
 21778  012CDE  D00E               	goto	i2l1108
 21779  012CE0                     i2l7379:
 21780                           
 21781                           ;usb_device.c: 325: {
 21782                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 21783  012CE0  5009               	movf	i2USBDeviceInit@i,w,c
 21784  012CE2  0D04               	mullw	4
 21785  012CE4  0E00               	movlw	0
 21786  012CE6  24F3               	addwf	prodl,w,c
 21787  012CE8  6ED9               	movwf	fsr2l,c
 21788  012CEA  0E0D               	movlw	13
 21789  012CEC  20F4               	addwfc	prodh,w,c
 21790  012CEE  6EDA               	movwf	fsr2h,c
 21791  012CF0  6ADE               	clrf	postinc2,c
 21792  012CF2  6ADE               	clrf	postinc2,c
 21793  012CF4  6ADE               	clrf	postinc2,c
 21794  012CF6  6ADD               	clrf	postdec2,c
 21795  012CF8  2A09               	incf	i2USBDeviceInit@i,f,c
 21796  012CFA  D7EE               	goto	i2l7375
 21797  012CFC                     i2l1108:
 21798                           
 21799                           ;usb_device.c: 327: }
 21800                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 21801  012CFC  8C65               	bsf	3941,6,c	;volatile
 21802                           
 21803                           ;usb_device.c: 333: UADDR = 0x00;
 21804  012CFE  0E00               	movlw	0
 21805  012D00  010F               	movlb	15	; () banked
 21806  012D02  6F38               	movwf	56,b	;volatile
 21807                           
 21808                           ; BSR set to: 15
 21809                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 21810  012D04  9865               	bcf	3941,4,c	;volatile
 21811                           
 21812                           ; BSR set to: 15
 21813                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 21814  012D06  9C65               	bcf	3941,6,c	;volatile
 21815                           
 21816                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 21817  012D08  D00C               	goto	i2l7399
 21818  012D0A                     i2l7391:
 21819                           
 21820                           ;usb_device.c: 343: {
 21821                           ;usb_device.c: 344: (UIR &= 0xF7);
 21822  012D0A  9662               	bcf	3938,3,c	;volatile
 21823                           
 21824                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 21825  012D0C  0E00               	movlw	0
 21826  012D0E  0100               	movlb	0	; () banked
 21827  012D10  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 21831  012D12  0E00               	movlw	0
 21832  012D14  0100               	movlb	0	; () banked
 21833  012D16  6F6F               	movwf	(_outPipes+3)& (0+255),b	;volatile
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 21837  012D18  0E00               	movlw	0
 21838  012D1A  0100               	movlb	0	; () banked
 21839  012D1C  6F71               	movwf	(_outPipes+5)& (0+255),b	;volatile
 21840  012D1E  0E00               	movlw	0
 21841  012D20  6F70               	movwf	(_outPipes+4)& (0+255),b	;volatile
 21842  012D22                     i2l7399:
 21843  012D22  B662               	btfsc	3938,3,c	;volatile
 21844  012D24  D7F2               	goto	i2l7391
 21845                           
 21846                           ;usb_device.c: 349: }
 21847                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 21848  012D26  0E01               	movlw	1
 21849  012D28  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21850                           
 21851                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 21852  012D2A  0E01               	movlw	1
 21853  012D2C  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21854                           
 21855                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 21856  012D2E  0E00               	movlw	0
 21857  012D30  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 21858                           
 21859                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 21860  012D32  0E00               	movlw	0
 21861  012D34  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 21862                           
 21863                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 21864  012D36  0E00               	movlw	0
 21865  012D38  0100               	movlb	0	; () banked
 21866  012D3A  6FA1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21867                           
 21868                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 21869  012D3C  0E00               	movlw	0
 21870  012D3E  6E09               	movwf	i2USBDeviceInit@i,c
 21871  012D40                     i2l7403:
 21872                           
 21873                           ; BSR set to: 0
 21874  012D40  0E02               	movlw	2
 21875  012D42  6409               	cpfsgt	i2USBDeviceInit@i,c
 21876  012D44  D001               	goto	i2l7407
 21877  012D46  D02E               	goto	i2l7413
 21878  012D48                     i2l7407:
 21879                           
 21880                           ;usb_device.c: 363: {
 21881                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 21882  012D48  5009               	movf	i2USBDeviceInit@i,w,c
 21883  012D4A  0D02               	mullw	2
 21884  012D4C  0E7B               	movlw	low _pBDTEntryIn
 21885  012D4E  24F3               	addwf	prodl,w,c
 21886  012D50  6ED9               	movwf	fsr2l,c
 21887  012D52  0E00               	movlw	high _pBDTEntryIn
 21888  012D54  20F4               	addwfc	prodh,w,c
 21889  012D56  6EDA               	movwf	fsr2h,c
 21890  012D58  0E00               	movlw	0
 21891  012D5A  6EDE               	movwf	postinc2,c
 21892  012D5C  0E00               	movlw	0
 21893  012D5E  6EDD               	movwf	postdec2,c
 21894                           
 21895                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 21896  012D60  5009               	movf	i2USBDeviceInit@i,w,c
 21897  012D62  0D02               	mullw	2
 21898  012D64  0E81               	movlw	low _pBDTEntryOut
 21899  012D66  24F3               	addwf	prodl,w,c
 21900  012D68  6ED9               	movwf	fsr2l,c
 21901  012D6A  0E00               	movlw	high _pBDTEntryOut
 21902  012D6C  20F4               	addwfc	prodh,w,c
 21903  012D6E  6EDA               	movwf	fsr2h,c
 21904  012D70  0E00               	movlw	0
 21905  012D72  6EDE               	movwf	postinc2,c
 21906  012D74  0E00               	movlw	0
 21907  012D76  6EDD               	movwf	postdec2,c
 21908                           
 21909                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 21910  012D78  5009               	movf	i2USBDeviceInit@i,w,c
 21911  012D7A  0D01               	mullw	1
 21912  012D7C  0E8A               	movlw	low _ep_data_in
 21913  012D7E  24F3               	addwf	prodl,w,c
 21914  012D80  6ED9               	movwf	fsr2l,c
 21915  012D82  0E00               	movlw	high _ep_data_in
 21916  012D84  20F4               	addwfc	prodh,w,c
 21917  012D86  6EDA               	movwf	fsr2h,c
 21918  012D88  0E00               	movlw	0
 21919  012D8A  6EDF               	movwf	indf2,c
 21920                           
 21921                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 21922  012D8C  5009               	movf	i2USBDeviceInit@i,w,c
 21923  012D8E  0D01               	mullw	1
 21924  012D90  0E8D               	movlw	low _ep_data_out
 21925  012D92  24F3               	addwf	prodl,w,c
 21926  012D94  6ED9               	movwf	fsr2l,c
 21927  012D96  0E00               	movlw	high _ep_data_out
 21928  012D98  20F4               	addwfc	prodh,w,c
 21929  012D9A  6EDA               	movwf	fsr2h,c
 21930  012D9C  0E00               	movlw	0
 21931  012D9E  6EDF               	movwf	indf2,c
 21932  012DA0  2A09               	incf	i2USBDeviceInit@i,f,c
 21933  012DA2  D7CE               	goto	i2l7403
 21934  012DA4                     i2l7413:
 21935                           
 21936                           ;usb_device.c: 368: }
 21937                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21938  012DA4  0E08               	movlw	8
 21939  012DA6  0100               	movlb	0	; () banked
 21940  012DA8  6F7B               	movwf	_pBDTEntryIn& (0+255),b
 21941  012DAA  0E0D               	movlw	13
 21942  012DAC  0100               	movlb	0	; () banked
 21943  012DAE  6F7C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21944                           
 21945                           ; BSR set to: 0
 21946                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 21947  012DB0  0E16               	movlw	22
 21948  012DB2  010F               	movlb	15	; () banked
 21949  012DB4  6F26               	movwf	38,b	;volatile
 21950                           
 21951                           ; BSR set to: 15
 21952                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 21953  012DB6  0E0D               	movlw	13
 21954  012DB8  010D               	movlb	13	; () banked
 21955  012DBA  6F03               	movwf	3,b	;volatile
 21956  012DBC  0E30               	movlw	48
 21957  012DBE  6F02               	movwf	2,b	;volatile
 21958                           
 21959                           ; BSR set to: 13
 21960                           ;usb_device.c: 376: BDT[0].CNT = 8;
 21961  012DC0  0E08               	movlw	8
 21962  012DC2  010D               	movlb	13	; () banked
 21963  012DC4  6F01               	movwf	1,b	;volatile
 21964                           
 21965                           ; BSR set to: 13
 21966                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 21967  012DC6  0E04               	movlw	4
 21968  012DC8  010D               	movlb	13	; () banked
 21969  012DCA  6F00               	movwf	0,b	;volatile
 21970                           
 21971                           ; BSR set to: 13
 21972                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 21973  012DCC  010D               	movlb	13	; () banked
 21974  012DCE  8F00               	bsf	0,7,b	;volatile
 21975                           
 21976                           ; BSR set to: 13
 21977                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 21978  012DD0  0E00               	movlw	0
 21979  012DD2  6E55               	movwf	_USBActiveConfiguration,c	;volatile
 21980                           
 21981                           ; BSR set to: 13
 21982                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 21983  012DD4  0E00               	movlw	0
 21984  012DD6  6E45               	movwf	_USBDeviceState,c	;volatile
 21985                           
 21986                           ; BSR set to: 13
 21987  012DD8  0012               	return		;funcret
 21988  012DDA                     __end_ofi2_USBDeviceInit:
 21989                           	opt stack 0
 21990                           pclatu	equ	0xFFB
 21991                           pclath	equ	0xFFA
 21992                           tblptru	equ	0xFF8
 21993                           tblptrh	equ	0xFF7
 21994                           tblptrl	equ	0xFF6
 21995                           tablat	equ	0xFF5
 21996                           prodh	equ	0xFF4
 21997                           prodl	equ	0xFF3
 21998                           intcon	equ	0xFF2
 21999                           intcon2	equ	0xFF1
 22000                           postinc0	equ	0xFEE
 22001                           fsr0h	equ	0xFEA
 22002                           fsr0l	equ	0xFE9
 22003                           wreg	equ	0xFE8
 22004                           indf1	equ	0xFE7
 22005                           postinc1	equ	0xFE6
 22006                           postdec1	equ	0xFE5
 22007                           fsr1h	equ	0xFE2
 22008                           fsr1l	equ	0xFE1
 22009                           indf2	equ	0xFDF
 22010                           postinc2	equ	0xFDE
 22011                           postdec2	equ	0xFDD
 22012                           plusw2	equ	0xFDB
 22013                           fsr2h	equ	0xFDA
 22014                           fsr2l	equ	0xFD9
 22015                           status	equ	0xFD8
 22016                           
 22017 ;; *************** function _USBWakeFromSuspend *****************
 22018 ;; Defined at:
 22019 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 22020 ;; Parameters:    Size  Location     Type
 22021 ;;		None
 22022 ;; Auto vars:     Size  Location     Type
 22023 ;;		None
 22024 ;; Return value:  Size  Location     Type
 22025 ;;		None               void
 22026 ;; Registers used:
 22027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22028 ;; Tracked objects:
 22029 ;;		On entry : 0/0
 22030 ;;		On exit  : 0/0
 22031 ;;		Unchanged: 0/0
 22032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22037 ;;Total ram usage:        0 bytes
 22038 ;; Hardware stack levels used:    1
 22039 ;; Hardware stack levels required when called:    4
 22040 ;; This function calls:
 22041 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22042 ;; This function is called by:
 22043 ;;		_USBDeviceTasks
 22044 ;; This function uses a non-reentrant model
 22045 ;;
 22046                           
 22047                           	psect	text104
 22048  015BE6                     __ptext104:
 22049                           	opt stack 0
 22050  015BE6                     _USBWakeFromSuspend:
 22051                           	opt stack 15
 22052                           
 22053                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 22054                           
 22055                           ; BSR set to: 13
 22056                           ;incstack = 0
 22057  015BE6  0E00               	movlw	0
 22058  015BE8  0100               	movlb	0	; () banked
 22059  015BEA  6FA1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22060                           
 22061                           ; BSR set to: 0
 22062                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 22063  015BEC  0E00               	movlw	0
 22064  015BEE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22065  015BF0  0E74               	movlw	116
 22066  015BF2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22067  015BF4  0E00               	movlw	0
 22068  015BF6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22069  015BF8  0E00               	movlw	0
 22070  015BFA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22071  015BFC  0E00               	movlw	0
 22072  015BFE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22073  015C00  0E00               	movlw	0
 22074  015C02  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22075  015C04  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22076                           
 22077                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 22078  015C08  9265               	bcf	3941,1,c	;volatile
 22079                           
 22080                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 22081  015C0A  010F               	movlb	15	; () banked
 22082  015C0C  9536               	bcf	54,2,b	;volatile
 22083                           
 22084                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 22085  015C0E  D001               	goto	i2l7301
 22086  015C10                     i2l7299:
 22087                           
 22088                           ;usb_device.c: 2342: {
 22089                           ;usb_device.c: 2343: (UIR &= 0xFB);
 22090  015C10  9462               	bcf	3938,2,c	;volatile
 22091  015C12                     i2l7301:
 22092  015C12  A462               	btfss	3938,2,c	;volatile
 22093  015C14  0012               	return	
 22094  015C16  D7FC               	goto	i2l7299
 22095  015C18                     __end_of_USBWakeFromSuspend:
 22096                           	opt stack 0
 22097                           pclatu	equ	0xFFB
 22098                           pclath	equ	0xFFA
 22099                           tblptru	equ	0xFF8
 22100                           tblptrh	equ	0xFF7
 22101                           tblptrl	equ	0xFF6
 22102                           tablat	equ	0xFF5
 22103                           prodh	equ	0xFF4
 22104                           prodl	equ	0xFF3
 22105                           intcon	equ	0xFF2
 22106                           intcon2	equ	0xFF1
 22107                           postinc0	equ	0xFEE
 22108                           fsr0h	equ	0xFEA
 22109                           fsr0l	equ	0xFE9
 22110                           wreg	equ	0xFE8
 22111                           indf1	equ	0xFE7
 22112                           postinc1	equ	0xFE6
 22113                           postdec1	equ	0xFE5
 22114                           fsr1h	equ	0xFE2
 22115                           fsr1l	equ	0xFE1
 22116                           indf2	equ	0xFDF
 22117                           postinc2	equ	0xFDE
 22118                           postdec2	equ	0xFDD
 22119                           plusw2	equ	0xFDB
 22120                           fsr2h	equ	0xFDA
 22121                           fsr2l	equ	0xFD9
 22122                           status	equ	0xFD8
 22123                           
 22124 ;; *************** function _USBSuspend *****************
 22125 ;; Defined at:
 22126 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;		None
 22129 ;; Auto vars:     Size  Location     Type
 22130 ;;		None
 22131 ;; Return value:  Size  Location     Type
 22132 ;;		None               void
 22133 ;; Registers used:
 22134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22135 ;; Tracked objects:
 22136 ;;		On entry : 0/0
 22137 ;;		On exit  : 0/0
 22138 ;;		Unchanged: 0/0
 22139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22144 ;;Total ram usage:        0 bytes
 22145 ;; Hardware stack levels used:    1
 22146 ;; Hardware stack levels required when called:    4
 22147 ;; This function calls:
 22148 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22149 ;; This function is called by:
 22150 ;;		_USBDeviceTasks
 22151 ;; This function uses a non-reentrant model
 22152 ;;
 22153                           
 22154                           	psect	text105
 22155  015D82                     __ptext105:
 22156                           	opt stack 0
 22157  015D82                     _USBSuspend:
 22158                           	opt stack 15
 22159                           
 22160                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 22161                           
 22162                           ;incstack = 0
 22163  015D82  010F               	movlb	15	; () banked
 22164  015D84  8536               	bsf	54,2,b	;volatile
 22165                           
 22166                           ; BSR set to: 15
 22167                           ;usb_device.c: 2271: (UIR &= 0xEF);
 22168  015D86  9862               	bcf	3938,4,c	;volatile
 22169                           
 22170                           ; BSR set to: 15
 22171                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 22172  015D88  8265               	bsf	3941,1,c	;volatile
 22173                           
 22174                           ; BSR set to: 15
 22175                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 22176  015D8A  0E01               	movlw	1
 22177  015D8C  0100               	movlb	0	; () banked
 22178  015D8E  6FA1               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22179                           
 22180                           ; BSR set to: 0
 22181                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 22182  015D90  0E00               	movlw	0
 22183  015D92  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22184  015D94  0E75               	movlw	117
 22185  015D96  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22186  015D98  0E00               	movlw	0
 22187  015D9A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22188  015D9C  0E00               	movlw	0
 22189  015D9E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22190  015DA0  0E00               	movlw	0
 22191  015DA2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22192  015DA4  0E00               	movlw	0
 22193  015DA6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22194  015DA8  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22195  015DAC  0012               	return		;funcret
 22196  015DAE                     __end_of_USBSuspend:
 22197                           	opt stack 0
 22198                           pclatu	equ	0xFFB
 22199                           pclath	equ	0xFFA
 22200                           tblptru	equ	0xFF8
 22201                           tblptrh	equ	0xFF7
 22202                           tblptrl	equ	0xFF6
 22203                           tablat	equ	0xFF5
 22204                           prodh	equ	0xFF4
 22205                           prodl	equ	0xFF3
 22206                           intcon	equ	0xFF2
 22207                           intcon2	equ	0xFF1
 22208                           postinc0	equ	0xFEE
 22209                           fsr0h	equ	0xFEA
 22210                           fsr0l	equ	0xFE9
 22211                           wreg	equ	0xFE8
 22212                           indf1	equ	0xFE7
 22213                           postinc1	equ	0xFE6
 22214                           postdec1	equ	0xFE5
 22215                           fsr1h	equ	0xFE2
 22216                           fsr1l	equ	0xFE1
 22217                           indf2	equ	0xFDF
 22218                           postinc2	equ	0xFDE
 22219                           postdec2	equ	0xFDD
 22220                           plusw2	equ	0xFDB
 22221                           fsr2h	equ	0xFDA
 22222                           fsr2l	equ	0xFD9
 22223                           status	equ	0xFD8
 22224                           
 22225 ;; *************** function _USBStallHandler *****************
 22226 ;; Defined at:
 22227 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 22228 ;; Parameters:    Size  Location     Type
 22229 ;;		None
 22230 ;; Auto vars:     Size  Location     Type
 22231 ;;		None
 22232 ;; Return value:  Size  Location     Type
 22233 ;;		None               void
 22234 ;; Registers used:
 22235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22236 ;; Tracked objects:
 22237 ;;		On entry : 0/0
 22238 ;;		On exit  : 0/0
 22239 ;;		Unchanged: 0/0
 22240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22245 ;;Total ram usage:        1 bytes
 22246 ;; Hardware stack levels used:    1
 22247 ;; This function calls:
 22248 ;;		Nothing
 22249 ;; This function is called by:
 22250 ;;		_USBDeviceTasks
 22251 ;; This function uses a non-reentrant model
 22252 ;;
 22253                           
 22254                           	psect	text106
 22255  015962                     __ptext106:
 22256                           	opt stack 0
 22257  015962                     _USBStallHandler:
 22258                           	opt stack 19
 22259                           
 22260                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 22261                           
 22262                           ;incstack = 0
 22263  015962  010F               	movlb	15	; () banked
 22264  015964  A126               	btfss	38,0,b	;volatile
 22265  015966  D01E               	goto	i2l1270
 22266                           
 22267                           ; BSR set to: 15
 22268                           ;usb_device.c: 2215: {
 22269                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 22270  015968  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22271  01596C  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22272  015970  0E80               	movlw	128
 22273  015972  18DE               	xorwf	postinc2,w,c
 22274  015974  A4D8               	btfss	status,2,c
 22275  015976  D014               	goto	i2l7323
 22276                           
 22277                           ; BSR set to: 15
 22278  015978  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 22279  01597C  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22280  015980  0E84               	movlw	132
 22281  015982  18DE               	xorwf	postinc2,w,c
 22282  015984  A4D8               	btfss	status,2,c
 22283  015986  D00C               	goto	i2l7323
 22284                           
 22285                           ; BSR set to: 15
 22286                           ;usb_device.c: 2218: {
 22287                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22288  015988  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22289  01598C  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22290  015990  0E0C               	movlw	12
 22291  015992  6EDF               	movwf	indf2,c
 22292                           
 22293                           ; BSR set to: 15
 22294                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22295  015994  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22296  015998  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22297  01599C  0E00               	movlw	0
 22298  01599E  8EDB               	bsf	plusw2,7,c
 22299  0159A0                     i2l7323:
 22300                           
 22301                           ; BSR set to: 15
 22302                           ;usb_device.c: 2222: }
 22303                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 22304  0159A0  010F               	movlb	15	; () banked
 22305  0159A2  9126               	bcf	38,0,b	;volatile
 22306  0159A4                     i2l1270:
 22307                           
 22308                           ; BSR set to: 15
 22309                           ;usb_device.c: 2224: }
 22310                           ;usb_device.c: 2226: (UIR &= 0xDF);
 22311  0159A4  9A62               	bcf	3938,5,c	;volatile
 22312                           
 22313                           ; BSR set to: 15
 22314  0159A6  0012               	return		;funcret
 22315  0159A8                     __end_of_USBStallHandler:
 22316                           	opt stack 0
 22317                           pclatu	equ	0xFFB
 22318                           pclath	equ	0xFFA
 22319                           tblptru	equ	0xFF8
 22320                           tblptrh	equ	0xFF7
 22321                           tblptrl	equ	0xFF6
 22322                           tablat	equ	0xFF5
 22323                           prodh	equ	0xFF4
 22324                           prodl	equ	0xFF3
 22325                           intcon	equ	0xFF2
 22326                           intcon2	equ	0xFF1
 22327                           postinc0	equ	0xFEE
 22328                           fsr0h	equ	0xFEA
 22329                           fsr0l	equ	0xFE9
 22330                           wreg	equ	0xFE8
 22331                           indf1	equ	0xFE7
 22332                           postinc1	equ	0xFE6
 22333                           postdec1	equ	0xFE5
 22334                           fsr1h	equ	0xFE2
 22335                           fsr1l	equ	0xFE1
 22336                           indf2	equ	0xFDF
 22337                           postinc2	equ	0xFDE
 22338                           postdec2	equ	0xFDD
 22339                           plusw2	equ	0xFDB
 22340                           fsr2h	equ	0xFDA
 22341                           fsr2l	equ	0xFD9
 22342                           status	equ	0xFD8
 22343                           
 22344 ;; *************** function _USBCtrlEPService *****************
 22345 ;; Defined at:
 22346 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 22347 ;; Parameters:    Size  Location     Type
 22348 ;;		None
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 22351 ;; Return value:  Size  Location     Type
 22352 ;;		None               void
 22353 ;; Registers used:
 22354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22355 ;; Tracked objects:
 22356 ;;		On entry : 0/0
 22357 ;;		On exit  : 0/0
 22358 ;;		Unchanged: 0/0
 22359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22364 ;;Total ram usage:        3 bytes
 22365 ;; Hardware stack levels used:    1
 22366 ;; Hardware stack levels required when called:    7
 22367 ;; This function calls:
 22368 ;;		_USBCtrlTrfInHandler
 22369 ;;		_USBCtrlTrfOutHandler
 22370 ;;		_USBCtrlTrfSetupHandler
 22371 ;; This function is called by:
 22372 ;;		_USBDeviceTasks
 22373 ;; This function uses a non-reentrant model
 22374 ;;
 22375                           
 22376                           	psect	text107
 22377  013F98                     __ptext107:
 22378                           	opt stack 0
 22379  013F98                     _USBCtrlEPService:
 22380                           	opt stack 12
 22381                           
 22382                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 22383                           
 22384                           ; BSR set to: 15
 22385                           ;incstack = 0
 22386  013F98  0E2D               	movlw	45
 22387  013F9A  6E48               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 22388                           
 22389                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 22390  013F9C  C056  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 22391  013FA0  0EFD               	movlw	253
 22392  013FA2  161B               	andwf	??_USBCtrlEPService,f,c
 22393  013FA4  A4D8               	btfss	status,2,c
 22394  013FA6  D057               	goto	i2l7357
 22395                           
 22396                           ;usb_device.c: 2380: {
 22397                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 22398  013FA8  C056  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 22399  013FAC  90D8               	bcf	status,0,c
 22400  013FAE  321B               	rrcf	??_USBCtrlEPService,f,c
 22401  013FB0  0E3F               	movlw	63
 22402  013FB2  161B               	andwf	??_USBCtrlEPService,f,c
 22403  013FB4  501B               	movf	??_USBCtrlEPService,w,c
 22404  013FB6  0D04               	mullw	4
 22405  013FB8  0E00               	movlw	0
 22406  013FBA  24F3               	addwf	prodl,w,c
 22407  013FBC  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 22408  013FBE  0E0D               	movlw	13
 22409  013FC0  20F4               	addwfc	prodh,w,c
 22410  013FC2  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 22411                           
 22412                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 22413  013FC4  C037  F039         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22414  013FC8  C038  F03A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22415                           
 22416                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 22417  013FCC  0E04               	movlw	4
 22418  013FCE  1A39               	xorwf	_pBDTEntryEP0OutNext,f,c
 22419                           
 22420                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 22421  013FD0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22422  013FD4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22423  013FD8  30DF               	rrcf	indf2,w,c
 22424  013FDA  32E8               	rrcf	wreg,f,c
 22425  013FDC  0B0F               	andlw	15
 22426  013FDE  0A0D               	xorlw	13
 22427  013FE0  A4D8               	btfss	status,2,c
 22428  013FE2  D036               	goto	i2l7355
 22429                           
 22430                           ;usb_device.c: 2397: {
 22431                           ;usb_device.c: 2398: unsigned char setup_cnt;
 22432                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 22433  013FE4  0E00               	movlw	0
 22434  013FE6  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 22435  013FE8                     i2l7339:
 22436  013FE8  0E07               	movlw	7
 22437  013FEA  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 22438  013FEC  D001               	goto	i2l7343
 22439  013FEE  D023               	goto	i2l7351
 22440  013FF0                     i2l7343:
 22441                           
 22442                           ;usb_device.c: 2405: {
 22443                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 22444  013FF0  EE20 F002          	lfsr	2,2
 22445  013FF4  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 22446  013FF6  26D9               	addwf	fsr2l,f,c
 22447  013FF8  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22448  013FFA  22DA               	addwfc	fsr2h,f,c
 22449  013FFC  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 22450  014000  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 22451  014004  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 22452  014008  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 22453  01400C  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 22454  01400E  0D01               	mullw	1
 22455  014010  0E30               	movlw	48
 22456  014012  24F3               	addwf	prodl,w,c
 22457  014014  6EE1               	movwf	fsr1l,c
 22458  014016  0E0D               	movlw	13
 22459  014018  20F4               	addwfc	prodh,w,c
 22460  01401A  6EE2               	movwf	fsr1h,c
 22461  01401C  CFDF FFE7          	movff	indf2,indf1
 22462                           
 22463                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 22464  014020  EE20 F002          	lfsr	2,2
 22465  014024  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 22466  014026  26D9               	addwf	fsr2l,f,c
 22467  014028  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22468  01402A  22DA               	addwfc	fsr2h,f,c
 22469  01402C  2ADE               	incf	postinc2,f,c
 22470  01402E  0E00               	movlw	0
 22471  014030  22DD               	addwfc	postdec2,f,c
 22472  014032  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 22473  014034  D7D9               	goto	i2l7339
 22474  014036                     i2l7351:
 22475                           
 22476                           ;usb_device.c: 2408: }
 22477                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22478  014036  EE20 F002          	lfsr	2,2
 22479  01403A  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 22480  01403C  26D9               	addwf	fsr2l,f,c
 22481  01403E  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22482  014040  22DA               	addwfc	fsr2h,f,c
 22483  014042  0E30               	movlw	48
 22484  014044  6EDE               	movwf	postinc2,c
 22485  014046  0E0D               	movlw	13
 22486  014048  6EDD               	movwf	postdec2,c
 22487                           
 22488                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 22489  01404A  EC3D  F0A7         	call	_USBCtrlTrfSetupHandler	;wreg free
 22490                           
 22491                           ;usb_device.c: 2413: }
 22492  01404E  0012               	return	
 22493  014050                     i2l7355:
 22494                           
 22495                           ;usb_device.c: 2414: else
 22496                           ;usb_device.c: 2415: {
 22497                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 22498  014050  ECA4  F0AA         	call	_USBCtrlTrfOutHandler	;wreg free
 22499                           
 22500                           ;usb_device.c: 2418: }
 22501                           ;usb_device.c: 2419: }
 22502  014054  0012               	return	
 22503  014056                     i2l7357:
 22504                           
 22505                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 22506  014056  5056               	movf	_USTATcopy,w,c	;volatile
 22507  014058  0BFD               	andlw	253
 22508  01405A  0A04               	xorlw	4
 22509  01405C  A4D8               	btfss	status,2,c
 22510  01405E  0012               	return	
 22511                           
 22512                           ;usb_device.c: 2421: {
 22513                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 22514  014060  ECFB  F0A0         	call	_USBCtrlTrfInHandler	;wreg free
 22515  014064  0012               	return	
 22516  014066                     __end_of_USBCtrlEPService:
 22517                           	opt stack 0
 22518                           pclatu	equ	0xFFB
 22519                           pclath	equ	0xFFA
 22520                           tblptru	equ	0xFF8
 22521                           tblptrh	equ	0xFF7
 22522                           tblptrl	equ	0xFF6
 22523                           tablat	equ	0xFF5
 22524                           prodh	equ	0xFF4
 22525                           prodl	equ	0xFF3
 22526                           intcon	equ	0xFF2
 22527                           intcon2	equ	0xFF1
 22528                           postinc0	equ	0xFEE
 22529                           fsr0h	equ	0xFEA
 22530                           fsr0l	equ	0xFE9
 22531                           wreg	equ	0xFE8
 22532                           indf1	equ	0xFE7
 22533                           postinc1	equ	0xFE6
 22534                           postdec1	equ	0xFE5
 22535                           fsr1h	equ	0xFE2
 22536                           fsr1l	equ	0xFE1
 22537                           indf2	equ	0xFDF
 22538                           postinc2	equ	0xFDE
 22539                           postdec2	equ	0xFDD
 22540                           plusw2	equ	0xFDB
 22541                           fsr2h	equ	0xFDA
 22542                           fsr2l	equ	0xFD9
 22543                           status	equ	0xFD8
 22544                           
 22545 ;; *************** function _USBCtrlTrfSetupHandler *****************
 22546 ;; Defined at:
 22547 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;		None
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;		None
 22552 ;; Return value:  Size  Location     Type
 22553 ;;		None               void
 22554 ;; Registers used:
 22555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22556 ;; Tracked objects:
 22557 ;;		On entry : 0/0
 22558 ;;		On exit  : 0/0
 22559 ;;		Unchanged: 0/0
 22560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22565 ;;Total ram usage:        0 bytes
 22566 ;; Hardware stack levels used:    1
 22567 ;; Hardware stack levels required when called:    6
 22568 ;; This function calls:
 22569 ;;		_USBCheckStdRequest
 22570 ;;		_USBCtrlEPServiceComplete
 22571 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22572 ;; This function is called by:
 22573 ;;		_USBCtrlEPService
 22574 ;; This function uses a non-reentrant model
 22575 ;;
 22576                           
 22577                           	psect	text108
 22578  014E7A                     __ptext108:
 22579                           	opt stack 0
 22580  014E7A                     _USBCtrlTrfSetupHandler:
 22581                           	opt stack 12
 22582                           
 22583                           ;usb_device.c: 2474: shortPacketStatus = 0;
 22584                           
 22585                           ;incstack = 0
 22586  014E7A  0E00               	movlw	0
 22587  014E7C  6E4E               	movwf	_shortPacketStatus,c	;volatile
 22588                           
 22589                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 22590  014E7E  0E00               	movlw	0
 22591  014E80  6E44               	movwf	_USBDeferStatusStagePacket,c	;volatile
 22592                           
 22593                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 22594  014E82  0E00               	movlw	0
 22595  014E84  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22596                           
 22597                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 22598  014E86  0E00               	movlw	0
 22599  014E88  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22600                           
 22601                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 22602  014E8A  0E00               	movlw	0
 22603  014E8C  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 22604                           
 22605                           ;usb_device.c: 2479: controlTransferState = 0;
 22606  014E8E  0E00               	movlw	0
 22607  014E90  6E49               	movwf	_controlTransferState,c	;volatile
 22608                           
 22609                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22610  014E92  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 22611  014E96  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22612  014E9A  0E7F               	movlw	127
 22613  014E9C  16DF               	andwf	indf2,f,c
 22614                           
 22615                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 22616  014E9E  0E04               	movlw	4
 22617  014EA0  0100               	movlb	0	; () banked
 22618  014EA2  1B7B               	xorwf	_pBDTEntryIn& (0+255),f,b
 22619                           
 22620                           ; BSR set to: 0
 22621                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22622  014EA4  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 22623  014EA8  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22624  014EAC  0E7F               	movlw	127
 22625  014EAE  16DF               	andwf	indf2,f,c
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 22629  014EB0  0E04               	movlw	4
 22630  014EB2  0100               	movlb	0	; () banked
 22631  014EB4  1B7B               	xorwf	_pBDTEntryIn& (0+255),f,b
 22632                           
 22633                           ; BSR set to: 0
 22634                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 22635  014EB6  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22636  014EBA  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22637  014EBE  0E7F               	movlw	127
 22638  014EC0  16DF               	andwf	indf2,f,c
 22639                           
 22640                           ; BSR set to: 0
 22641                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 22642  014EC2  0E00               	movlw	0
 22643  014EC4  0100               	movlb	0	; () banked
 22644  014EC6  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22645                           
 22646                           ; BSR set to: 0
 22647                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 22648  014EC8  0E00               	movlw	0
 22649  014ECA  0100               	movlb	0	; () banked
 22650  014ECC  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22651  014ECE  0E00               	movlw	0
 22652  014ED0  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22653                           
 22654                           ; BSR set to: 0
 22655                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 22656  014ED2  0E00               	movlw	0
 22657  014ED4  0100               	movlb	0	; () banked
 22658  014ED6  6F6F               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 22662  014ED8  0E00               	movlw	0
 22663  014EDA  0100               	movlb	0	; () banked
 22664  014EDC  6F71               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22665  014EDE  0E00               	movlw	0
 22666  014EE0  6F70               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22667                           
 22668                           ; BSR set to: 0
 22669                           ;usb_device.c: 2503: USBCheckStdRequest();
 22670  014EE2  EC9B  F09A         	call	_USBCheckStdRequest	;wreg free
 22671                           
 22672                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 22673  014EE6  0E00               	movlw	0
 22674  014EE8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22675  014EEA  0E03               	movlw	3
 22676  014EEC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22677  014EEE  0E00               	movlw	0
 22678  014EF0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22679  014EF2  0E00               	movlw	0
 22680  014EF4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22681  014EF6  0E00               	movlw	0
 22682  014EF8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22683  014EFA  0E00               	movlw	0
 22684  014EFC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22685  014EFE  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22686                           
 22687                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 22688  014F02  EC21  F09A         	call	_USBCtrlEPServiceComplete	;wreg free
 22689  014F06  0012               	return		;funcret
 22690  014F08                     __end_of_USBCtrlTrfSetupHandler:
 22691                           	opt stack 0
 22692                           pclatu	equ	0xFFB
 22693                           pclath	equ	0xFFA
 22694                           tblptru	equ	0xFF8
 22695                           tblptrh	equ	0xFF7
 22696                           tblptrl	equ	0xFF6
 22697                           tablat	equ	0xFF5
 22698                           prodh	equ	0xFF4
 22699                           prodl	equ	0xFF3
 22700                           intcon	equ	0xFF2
 22701                           intcon2	equ	0xFF1
 22702                           postinc0	equ	0xFEE
 22703                           fsr0h	equ	0xFEA
 22704                           fsr0l	equ	0xFE9
 22705                           wreg	equ	0xFE8
 22706                           indf1	equ	0xFE7
 22707                           postinc1	equ	0xFE6
 22708                           postdec1	equ	0xFE5
 22709                           fsr1h	equ	0xFE2
 22710                           fsr1l	equ	0xFE1
 22711                           indf2	equ	0xFDF
 22712                           postinc2	equ	0xFDE
 22713                           postdec2	equ	0xFDD
 22714                           plusw2	equ	0xFDB
 22715                           fsr2h	equ	0xFDA
 22716                           fsr2l	equ	0xFD9
 22717                           status	equ	0xFD8
 22718                           
 22719 ;; *************** function _USBCtrlEPServiceComplete *****************
 22720 ;; Defined at:
 22721 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 22722 ;; Parameters:    Size  Location     Type
 22723 ;;		None
 22724 ;; Auto vars:     Size  Location     Type
 22725 ;;		None
 22726 ;; Return value:  Size  Location     Type
 22727 ;;		None               void
 22728 ;; Registers used:
 22729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22730 ;; Tracked objects:
 22731 ;;		On entry : 0/0
 22732 ;;		On exit  : 0/0
 22733 ;;		Unchanged: 0/0
 22734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22739 ;;Total ram usage:        0 bytes
 22740 ;; Hardware stack levels used:    1
 22741 ;; Hardware stack levels required when called:    2
 22742 ;; This function calls:
 22743 ;;		_USBCtrlEPAllowDataStage
 22744 ;;		_USBCtrlEPAllowStatusStage
 22745 ;; This function is called by:
 22746 ;;		_USBCtrlTrfSetupHandler
 22747 ;; This function uses a non-reentrant model
 22748 ;;
 22749                           
 22750                           	psect	text109
 22751  013442                     __ptext109:
 22752                           	opt stack 0
 22753  013442                     _USBCtrlEPServiceComplete:
 22754                           	opt stack 15
 22755                           
 22756                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 22757                           
 22758                           ;incstack = 0
 22759  013442  9865               	bcf	3941,4,c	;volatile
 22760                           
 22761                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 22762  013444  0100               	movlb	0	; () banked
 22763  013446  BF78               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 22764  013448  D039               	goto	i2l1194
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;usb_device.c: 1629: {
 22768                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 22769  01344A  0100               	movlb	0	; () banked
 22770  01344C  AF6F               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 22771  01344E  D00B               	goto	i2l6379
 22772                           
 22773                           ; BSR set to: 0
 22774                           ;usb_device.c: 1631: {
 22775                           ;usb_device.c: 1632: controlTransferState = 2;
 22776  013450  0E02               	movlw	2
 22777  013452  6E49               	movwf	_controlTransferState,c	;volatile
 22778                           
 22779                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 22780  013454  5043               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 22781  013456  B4D8               	btfsc	status,2,c
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;usb_device.c: 1644: {
 22785                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 22786  013458  EC2F  F0A5         	call	_USBCtrlEPAllowDataStage	;wreg free
 22787                           
 22788                           ;usb_device.c: 1646: }
 22789                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 22790  01345C  0E00               	movlw	0
 22791  01345E  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22792                           
 22793                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 22794  013460  0E00               	movlw	0
 22795  013462  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22796                           
 22797                           ;usb_device.c: 1652: }
 22798  013464  0012               	return	
 22799  013466                     i2l6379:
 22800                           
 22801                           ;usb_device.c: 1653: else
 22802                           ;usb_device.c: 1654: {
 22803                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 22804  013466  EE20 F001          	lfsr	2,1
 22805  01346A  5039               	movf	_pBDTEntryEP0OutNext,w,c
 22806  01346C  26D9               	addwf	fsr2l,f,c
 22807  01346E  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 22808  013470  22DA               	addwfc	fsr2h,f,c
 22809  013472  0E08               	movlw	8
 22810  013474  6EDF               	movwf	indf2,c
 22811                           
 22812                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22813  013476  EE20 F002          	lfsr	2,2
 22814  01347A  5039               	movf	_pBDTEntryEP0OutNext,w,c
 22815  01347C  26D9               	addwf	fsr2l,f,c
 22816  01347E  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 22817  013480  22DA               	addwfc	fsr2h,f,c
 22818  013482  0E30               	movlw	48
 22819  013484  6EDE               	movwf	postinc2,c
 22820  013486  0E0D               	movlw	13
 22821  013488  6EDD               	movwf	postdec2,c
 22822                           
 22823                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22824  01348A  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22825  01348E  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22826  013492  0E0C               	movlw	12
 22827  013494  6EDF               	movwf	indf2,c
 22828                           
 22829                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22830  013496  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22831  01349A  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22832  01349E  0E00               	movlw	0
 22833  0134A0  8EDB               	bsf	plusw2,7,c
 22834                           
 22835                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 22836  0134A2  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 22837  0134A6  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22838  0134AA  0E04               	movlw	4
 22839  0134AC  6EDF               	movwf	indf2,c
 22840                           
 22841                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22842  0134AE  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 22843  0134B2  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22844  0134B6  0E00               	movlw	0
 22845  0134B8  8EDB               	bsf	plusw2,7,c
 22846                           
 22847                           ;usb_device.c: 1665: }
 22848                           ;usb_device.c: 1666: }
 22849  0134BA  0012               	return	
 22850  0134BC                     i2l1194:
 22851                           
 22852                           ; BSR set to: 0
 22853                           ;usb_device.c: 1667: else
 22854                           ;usb_device.c: 1668: {
 22855                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 22856  0134BC  010D               	movlb	13	; () banked
 22857  0134BE  AF30               	btfss	48,7,b	;volatile
 22858  0134C0  D010               	goto	i2l6399
 22859                           
 22860                           ; BSR set to: 13
 22861                           ;usb_device.c: 1670: {
 22862                           ;usb_device.c: 1671: controlTransferState = 1;
 22863  0134C2  0E01               	movlw	1
 22864  0134C4  6E49               	movwf	_controlTransferState,c	;volatile
 22865                           
 22866                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 22867  0134C6  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 22868  0134C8  B4D8               	btfsc	status,2,c
 22869                           
 22870                           ; BSR set to: 13
 22871                           ;usb_device.c: 1686: {
 22872                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 22873  0134CA  EC2F  F0A5         	call	_USBCtrlEPAllowDataStage	;wreg free
 22874                           
 22875                           ;usb_device.c: 1688: }
 22876                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 22877  0134CE  0E00               	movlw	0
 22878  0134D0  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22879                           
 22880                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 22881  0134D2  0E00               	movlw	0
 22882  0134D4  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22883                           
 22884                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 22885  0134D6  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22886  0134D8  A4D8               	btfss	status,2,c
 22887  0134DA  0012               	return	
 22888                           
 22889                           ;usb_device.c: 1713: {
 22890                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 22891  0134DC  EC99  F0A0         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22892                           
 22893                           ;usb_device.c: 1715: }
 22894                           ;usb_device.c: 1716: }
 22895  0134E0  0012               	return	
 22896  0134E2                     i2l6399:
 22897                           
 22898                           ;usb_device.c: 1717: else
 22899                           ;usb_device.c: 1718: {
 22900                           ;usb_device.c: 1729: controlTransferState = 2;
 22901  0134E2  0E02               	movlw	2
 22902  0134E4  6E49               	movwf	_controlTransferState,c	;volatile
 22903                           
 22904                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 22905  0134E6  EE20 F001          	lfsr	2,1
 22906  0134EA  5039               	movf	_pBDTEntryEP0OutNext,w,c
 22907  0134EC  26D9               	addwf	fsr2l,f,c
 22908  0134EE  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 22909  0134F0  22DA               	addwfc	fsr2h,f,c
 22910  0134F2  0E08               	movlw	8
 22911  0134F4  6EDF               	movwf	indf2,c
 22912                           
 22913                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22914  0134F6  EE20 F002          	lfsr	2,2
 22915  0134FA  5039               	movf	_pBDTEntryEP0OutNext,w,c
 22916  0134FC  26D9               	addwf	fsr2l,f,c
 22917  0134FE  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 22918  013500  22DA               	addwfc	fsr2h,f,c
 22919  013502  0E30               	movlw	48
 22920  013504  6EDE               	movwf	postinc2,c
 22921  013506  0E0D               	movlw	13
 22922  013508  6EDD               	movwf	postdec2,c
 22923                           
 22924                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22925  01350A  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22926  01350E  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22927  013512  0E04               	movlw	4
 22928  013514  6EDF               	movwf	indf2,c
 22929                           
 22930                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22931  013516  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22932  01351A  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22933  01351E  0E00               	movlw	0
 22934  013520  8EDB               	bsf	plusw2,7,c
 22935                           
 22936                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 22937  013522  0E00               	movlw	0
 22938  013524  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22939                           
 22940                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 22941  013526  0E00               	movlw	0
 22942  013528  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22943                           
 22944                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 22945  01352A  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22946  01352C  A4D8               	btfss	status,2,c
 22947  01352E  0012               	return	
 22948                           
 22949                           ;usb_device.c: 1741: {
 22950                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 22951  013530  EC99  F0A0         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22952  013534  0012               	return	
 22953  013536                     __end_of_USBCtrlEPServiceComplete:
 22954                           	opt stack 0
 22955                           pclatu	equ	0xFFB
 22956                           pclath	equ	0xFFA
 22957                           tblptru	equ	0xFF8
 22958                           tblptrh	equ	0xFF7
 22959                           tblptrl	equ	0xFF6
 22960                           tablat	equ	0xFF5
 22961                           prodh	equ	0xFF4
 22962                           prodl	equ	0xFF3
 22963                           intcon	equ	0xFF2
 22964                           intcon2	equ	0xFF1
 22965                           postinc0	equ	0xFEE
 22966                           fsr0h	equ	0xFEA
 22967                           fsr0l	equ	0xFE9
 22968                           wreg	equ	0xFE8
 22969                           indf1	equ	0xFE7
 22970                           postinc1	equ	0xFE6
 22971                           postdec1	equ	0xFE5
 22972                           fsr1h	equ	0xFE2
 22973                           fsr1l	equ	0xFE1
 22974                           indf2	equ	0xFDF
 22975                           postinc2	equ	0xFDE
 22976                           postdec2	equ	0xFDD
 22977                           plusw2	equ	0xFDB
 22978                           fsr2h	equ	0xFDA
 22979                           fsr2l	equ	0xFD9
 22980                           status	equ	0xFD8
 22981                           
 22982 ;; *************** function _USBCtrlEPAllowDataStage *****************
 22983 ;; Defined at:
 22984 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 22985 ;; Parameters:    Size  Location     Type
 22986 ;;		None
 22987 ;; Auto vars:     Size  Location     Type
 22988 ;;		None
 22989 ;; Return value:  Size  Location     Type
 22990 ;;		None               void
 22991 ;; Registers used:
 22992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22993 ;; Tracked objects:
 22994 ;;		On entry : 0/0
 22995 ;;		On exit  : 0/0
 22996 ;;		Unchanged: 0/0
 22997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23002 ;;Total ram usage:        0 bytes
 23003 ;; Hardware stack levels used:    1
 23004 ;; Hardware stack levels required when called:    1
 23005 ;; This function calls:
 23006 ;;		_USBCtrlTrfTxService
 23007 ;; This function is called by:
 23008 ;;		_USBCtrlEPServiceComplete
 23009 ;; This function uses a non-reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text110
 23013  014A5E                     __ptext110:
 23014                           	opt stack 0
 23015  014A5E                     _USBCtrlEPAllowDataStage:
 23016                           	opt stack 15
 23017                           
 23018                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 23019                           
 23020                           ;incstack = 0
 23021  014A5E  0E00               	movlw	0
 23022  014A60  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 23023                           
 23024                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 23025  014A62  0E00               	movlw	0
 23026  014A64  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 23027                           
 23028                           ;usb_device.c: 1493: if(controlTransferState == 2)
 23029  014A66  0E02               	movlw	2
 23030  014A68  1849               	xorwf	_controlTransferState,w,c	;volatile
 23031  014A6A  A4D8               	btfss	status,2,c
 23032  014A6C  D01F               	goto	i2l6017
 23033                           
 23034                           ;usb_device.c: 1494: {
 23035                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 23036  014A6E  EE20 F001          	lfsr	2,1
 23037  014A72  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23038  014A74  26D9               	addwf	fsr2l,f,c
 23039  014A76  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23040  014A78  22DA               	addwfc	fsr2h,f,c
 23041  014A7A  0E08               	movlw	8
 23042  014A7C  6EDF               	movwf	indf2,c
 23043                           
 23044                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23045  014A7E  EE20 F002          	lfsr	2,2
 23046  014A82  5039               	movf	_pBDTEntryEP0OutNext,w,c
 23047  014A84  26D9               	addwf	fsr2l,f,c
 23048  014A86  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23049  014A88  22DA               	addwfc	fsr2h,f,c
 23050  014A8A  0E38               	movlw	56
 23051  014A8C  6EDE               	movwf	postinc2,c
 23052  014A8E  0E0D               	movlw	13
 23053  014A90  6EDD               	movwf	postdec2,c
 23054                           
 23055                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23056  014A92  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23057  014A96  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23058  014A9A  0E48               	movlw	72
 23059  014A9C  6EDF               	movwf	indf2,c
 23060                           
 23061                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23062  014A9E  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23063  014AA2  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23064  014AA6  0E00               	movlw	0
 23065  014AA8  8EDB               	bsf	plusw2,7,c
 23066                           
 23067                           ;usb_device.c: 1500: }
 23068  014AAA  0012               	return	
 23069  014AAC                     i2l6017:
 23070                           
 23071                           ;usb_device.c: 1501: else
 23072                           ;usb_device.c: 1502: {
 23073                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 23074  014AAC  0100               	movlb	0	; () banked
 23075  014AAE  5179               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 23076  014AB0  010D               	movlb	13	; () banked
 23077  014AB2  5D36               	subwf	54,w,b	;volatile
 23078  014AB4  0100               	movlb	0	; () banked
 23079  014AB6  517A               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 23080  014AB8  010D               	movlb	13	; () banked
 23081  014ABA  5937               	subwfb	55,w,b	;volatile
 23082  014ABC  B0D8               	btfsc	status,0,c
 23083  014ABE  D004               	goto	i2l6021
 23084                           
 23085                           ; BSR set to: 13
 23086                           ;usb_device.c: 1506: {
 23087                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 23088  014AC0  CD36 F079          	movff	3382,_inPipes+4	;volatile
 23089  014AC4  CD37 F07A          	movff	3383,_inPipes+5	;volatile
 23090  014AC8                     i2l6021:
 23091                           
 23092                           ; BSR set to: 13
 23093                           ;usb_device.c: 1508: }
 23094                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 23095  014AC8  ECB9  F09D         	call	_USBCtrlTrfTxService	;wreg free
 23096                           
 23097                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 23098  014ACC  0100               	movlb	0	; () banked
 23099  014ACE  EE20 F002          	lfsr	2,2
 23100  014AD2  517B               	movf	_pBDTEntryIn& (0+255),w,b
 23101  014AD4  26D9               	addwf	fsr2l,f,c
 23102  014AD6  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 23103  014AD8  22DA               	addwfc	fsr2h,f,c
 23104  014ADA  0E38               	movlw	56
 23105  014ADC  6EDE               	movwf	postinc2,c
 23106  014ADE  0E0D               	movlw	13
 23107  014AE0  6EDD               	movwf	postdec2,c
 23108                           
 23109                           ; BSR set to: 0
 23110                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23111  014AE2  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23112  014AE6  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23113  014AEA  0E48               	movlw	72
 23114  014AEC  6EDF               	movwf	indf2,c
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23118  014AEE  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 23119  014AF2  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23120  014AF6  0E00               	movlw	0
 23121  014AF8  8EDB               	bsf	plusw2,7,c
 23122  014AFA  0012               	return	
 23123  014AFC                     __end_of_USBCtrlEPAllowDataStage:
 23124                           	opt stack 0
 23125                           pclatu	equ	0xFFB
 23126                           pclath	equ	0xFFA
 23127                           tblptru	equ	0xFF8
 23128                           tblptrh	equ	0xFF7
 23129                           tblptrl	equ	0xFF6
 23130                           tablat	equ	0xFF5
 23131                           prodh	equ	0xFF4
 23132                           prodl	equ	0xFF3
 23133                           intcon	equ	0xFF2
 23134                           intcon2	equ	0xFF1
 23135                           postinc0	equ	0xFEE
 23136                           fsr0h	equ	0xFEA
 23137                           fsr0l	equ	0xFE9
 23138                           wreg	equ	0xFE8
 23139                           indf1	equ	0xFE7
 23140                           postinc1	equ	0xFE6
 23141                           postdec1	equ	0xFE5
 23142                           fsr1h	equ	0xFE2
 23143                           fsr1l	equ	0xFE1
 23144                           indf2	equ	0xFDF
 23145                           postinc2	equ	0xFDE
 23146                           postdec2	equ	0xFDD
 23147                           plusw2	equ	0xFDB
 23148                           fsr2h	equ	0xFDA
 23149                           fsr2l	equ	0xFD9
 23150                           status	equ	0xFD8
 23151                           
 23152 ;; *************** function _USBCheckStdRequest *****************
 23153 ;; Defined at:
 23154 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 23155 ;; Parameters:    Size  Location     Type
 23156 ;;		None
 23157 ;; Auto vars:     Size  Location     Type
 23158 ;;		None
 23159 ;; Return value:  Size  Location     Type
 23160 ;;		None               void
 23161 ;; Registers used:
 23162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23163 ;; Tracked objects:
 23164 ;;		On entry : 0/0
 23165 ;;		On exit  : 0/0
 23166 ;;		Unchanged: 0/0
 23167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23172 ;;Total ram usage:        0 bytes
 23173 ;; Hardware stack levels used:    1
 23174 ;; Hardware stack levels required when called:    5
 23175 ;; This function calls:
 23176 ;;		_USBStdFeatureReqHandler
 23177 ;;		_USBStdGetDscHandler
 23178 ;;		_USBStdGetStatusHandler
 23179 ;;		_USBStdSetCfgHandler
 23180 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23181 ;; This function is called by:
 23182 ;;		_USBCtrlTrfSetupHandler
 23183 ;; This function uses a non-reentrant model
 23184 ;;
 23185                           
 23186                           	psect	text111
 23187  013536                     __ptext111:
 23188                           	opt stack 0
 23189  013536                     _USBCheckStdRequest:
 23190                           	opt stack 12
 23191                           
 23192                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 23193                           
 23194                           ;incstack = 0
 23195  013536  010D               	movlb	13	; () banked
 23196  013538  3930               	swapf	48,w,b	;volatile
 23197  01353A  32E8               	rrcf	wreg,f,c
 23198  01353C  0B03               	andlw	3
 23199  01353E  0900               	iorlw	0
 23200  013540  A4D8               	btfss	status,2,c
 23201  013542  0012               	return	
 23202  013544  D04F               	goto	i2l6497
 23203  013546                     i2l1321:
 23204                           
 23205                           ; BSR set to: 13
 23206                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 23207  013546  0100               	movlb	0	; () banked
 23208  013548  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23209                           
 23210                           ; BSR set to: 0
 23211                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 23212  01354A  0E08               	movlw	8
 23213  01354C  6E45               	movwf	_USBDeviceState,c	;volatile
 23214                           
 23215                           ;usb_device.c: 2699: break;
 23216  01354E  0012               	return	
 23217  013550                     i2l6467:
 23218                           
 23219                           ;usb_device.c: 2701: USBStdGetDscHandler();
 23220  013550  EC01  F095         	call	_USBStdGetDscHandler	;wreg free
 23221                           
 23222                           ;usb_device.c: 2702: break;
 23223  013554  0012               	return	
 23224  013556                     i2l6469:
 23225                           
 23226                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 23227  013556  EC00  F09C         	call	_USBStdSetCfgHandler	;wreg free
 23228                           
 23229                           ;usb_device.c: 2705: break;
 23230  01355A  0012               	return	
 23231  01355C                     i2l6471:
 23232                           
 23233                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 23234  01355C  0E55               	movlw	low _USBActiveConfiguration
 23235  01355E  0100               	movlb	0	; () banked
 23236  013560  6F75               	movwf	_inPipes& (0+255),b	;volatile
 23237  013562  0E00               	movlw	high _USBActiveConfiguration
 23238  013564  0100               	movlb	0	; () banked
 23239  013566  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23240                           
 23241                           ; BSR set to: 0
 23242                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23243  013568  0100               	movlb	0	; () banked
 23244  01356A  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23245                           
 23246                           ; BSR set to: 0
 23247                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 23248  01356C  0E01               	movlw	1
 23249  01356E  0100               	movlb	0	; () banked
 23250  013570  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23251                           
 23252                           ; BSR set to: 0
 23253                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 23254  013572  0100               	movlb	0	; () banked
 23255  013574  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23256                           
 23257                           ;usb_device.c: 2711: break;
 23258  013576  0012               	return	
 23259  013578                     i2l6479:
 23260                           
 23261                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 23262  013578  EC7B  F0A2         	call	_USBStdGetStatusHandler	;wreg free
 23263                           
 23264                           ;usb_device.c: 2714: break;
 23265  01357C  0012               	return	
 23266  01357E                     i2l6481:
 23267                           
 23268                           ;usb_device.c: 2716: case 3:
 23269                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 23270  01357E  EC59  F08D         	call	_USBStdFeatureReqHandler	;wreg free
 23271                           
 23272                           ;usb_device.c: 2718: break;
 23273  013582  0012               	return	
 23274  013584                     i2l6483:
 23275                           
 23276                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 23277  013584  010D               	movlb	13	; () banked
 23278  013586  5134               	movf	52,w,b	;volatile
 23279  013588  0D01               	mullw	1
 23280  01358A  0E53               	movlw	low _USBAlternateInterface
 23281  01358C  24F3               	addwf	prodl,w,c
 23282  01358E  0100               	movlb	0	; () banked
 23283  013590  6F75               	movwf	_inPipes& (0+255),b	;volatile
 23284  013592  0E00               	movlw	high _USBAlternateInterface
 23285  013594  20F4               	addwfc	prodh,w,c
 23286  013596  0100               	movlb	0	; () banked
 23287  013598  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23288                           
 23289                           ; BSR set to: 0
 23290                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23291  01359A  0100               	movlb	0	; () banked
 23292  01359C  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23293                           
 23294                           ; BSR set to: 0
 23295                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 23296  01359E  0E01               	movlw	1
 23297  0135A0  0100               	movlb	0	; () banked
 23298  0135A2  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23299                           
 23300                           ; BSR set to: 0
 23301                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 23302  0135A4  0100               	movlb	0	; () banked
 23303  0135A6  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23304                           
 23305                           ;usb_device.c: 2724: break;
 23306  0135A8  0012               	return	
 23307  0135AA                     i2l1330:
 23308                           
 23309                           ; BSR set to: 13
 23310                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 23311  0135AA  0100               	movlb	0	; () banked
 23312  0135AC  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23313                           
 23314                           ; BSR set to: 0
 23315                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 23316  0135AE  010D               	movlb	13	; () banked
 23317  0135B0  5134               	movf	52,w,b	;volatile
 23318  0135B2  0D01               	mullw	1
 23319  0135B4  0E53               	movlw	low _USBAlternateInterface
 23320  0135B6  24F3               	addwf	prodl,w,c
 23321  0135B8  6ED9               	movwf	fsr2l,c
 23322  0135BA  0E00               	movlw	high _USBAlternateInterface
 23323  0135BC  20F4               	addwfc	prodh,w,c
 23324  0135BE  6EDA               	movwf	fsr2h,c
 23325  0135C0  CD32 FFDF          	movff	3378,indf2	;volatile
 23326                           
 23327                           ;usb_device.c: 2728: break;
 23328  0135C4  0012               	return	
 23329  0135C6                     i2l6493:
 23330                           
 23331                           ; BSR set to: 13
 23332                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 23333  0135C6  0E00               	movlw	0
 23334  0135C8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23335  0135CA  0E02               	movlw	2
 23336  0135CC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23337  0135CE  0E00               	movlw	0
 23338  0135D0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23339  0135D2  0E00               	movlw	0
 23340  0135D4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23341  0135D6  0E00               	movlw	0
 23342  0135D8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23343  0135DA  0E00               	movlw	0
 23344  0135DC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23345  0135DE  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23346                           
 23347                           ;usb_device.c: 2735: }
 23348                           
 23349                           ;usb_device.c: 2734: break;
 23350                           
 23351                           ;usb_device.c: 2733: default:
 23352                           
 23353                           ;usb_device.c: 2732: case 12:
 23354                           
 23355                           ;usb_device.c: 2731: break;
 23356  0135E2  0012               	return	
 23357  0135E4                     i2l6497:
 23358  0135E4  010D               	movlb	13	; () banked
 23359  0135E6  5131               	movf	49,w,b	;volatile
 23360                           
 23361                           ; Switch size 1, requested type "space"
 23362                           ; Number of cases is 11, Range of values is 0 to 12
 23363                           ; switch strategies available:
 23364                           ; Name         Instructions Cycles
 23365                           ; simple_byte           34    18 (average)
 23366                           ;	Chosen strategy is simple_byte
 23367  0135E8  0A00               	xorlw	0	; case 0
 23368  0135EA  B4D8               	btfsc	status,2,c
 23369  0135EC  D7C5               	goto	i2l6479
 23370  0135EE  0A01               	xorlw	1	; case 1
 23371  0135F0  B4D8               	btfsc	status,2,c
 23372  0135F2  D7C5               	goto	i2l6481
 23373  0135F4  0A02               	xorlw	2	; case 3
 23374  0135F6  B4D8               	btfsc	status,2,c
 23375  0135F8  D7C2               	goto	i2l6481
 23376  0135FA  0A06               	xorlw	6	; case 5
 23377  0135FC  B4D8               	btfsc	status,2,c
 23378  0135FE  D7A3               	goto	i2l1321
 23379  013600  0A03               	xorlw	3	; case 6
 23380  013602  B4D8               	btfsc	status,2,c
 23381  013604  D7A5               	goto	i2l6467
 23382  013606  0A01               	xorlw	1	; case 7
 23383  013608  B4D8               	btfsc	status,2,c
 23384  01360A  D7DD               	goto	i2l6493
 23385  01360C  0A0F               	xorlw	15	; case 8
 23386  01360E  B4D8               	btfsc	status,2,c
 23387  013610  D7A5               	goto	i2l6471
 23388  013612  0A01               	xorlw	1	; case 9
 23389  013614  B4D8               	btfsc	status,2,c
 23390  013616  D79F               	goto	i2l6469
 23391  013618  0A03               	xorlw	3	; case 10
 23392  01361A  B4D8               	btfsc	status,2,c
 23393  01361C  D7B3               	goto	i2l6483
 23394  01361E  0A01               	xorlw	1	; case 11
 23395  013620  B4D8               	btfsc	status,2,c
 23396  013622  D7C3               	goto	i2l1330
 23397  013624  0A07               	xorlw	7	; case 12
 23398  013626  0012               	return	
 23399  013628                     __end_of_USBCheckStdRequest:
 23400                           	opt stack 0
 23401                           pclatu	equ	0xFFB
 23402                           pclath	equ	0xFFA
 23403                           tblptru	equ	0xFF8
 23404                           tblptrh	equ	0xFF7
 23405                           tblptrl	equ	0xFF6
 23406                           tablat	equ	0xFF5
 23407                           prodh	equ	0xFF4
 23408                           prodl	equ	0xFF3
 23409                           intcon	equ	0xFF2
 23410                           intcon2	equ	0xFF1
 23411                           postinc0	equ	0xFEE
 23412                           fsr0h	equ	0xFEA
 23413                           fsr0l	equ	0xFE9
 23414                           wreg	equ	0xFE8
 23415                           indf1	equ	0xFE7
 23416                           postinc1	equ	0xFE6
 23417                           postdec1	equ	0xFE5
 23418                           fsr1h	equ	0xFE2
 23419                           fsr1l	equ	0xFE1
 23420                           indf2	equ	0xFDF
 23421                           postinc2	equ	0xFDE
 23422                           postdec2	equ	0xFDD
 23423                           plusw2	equ	0xFDB
 23424                           fsr2h	equ	0xFDA
 23425                           fsr2l	equ	0xFD9
 23426                           status	equ	0xFD8
 23427                           
 23428 ;; *************** function _USBStdSetCfgHandler *****************
 23429 ;; Defined at:
 23430 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 23431 ;; Parameters:    Size  Location     Type
 23432 ;;		None
 23433 ;; Auto vars:     Size  Location     Type
 23434 ;;  i               1   20[COMRAM] unsigned char 
 23435 ;; Return value:  Size  Location     Type
 23436 ;;		None               void
 23437 ;; Registers used:
 23438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23439 ;; Tracked objects:
 23440 ;;		On entry : 0/0
 23441 ;;		On exit  : 0/0
 23442 ;;		Unchanged: 0/0
 23443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23448 ;;Total ram usage:        1 bytes
 23449 ;; Hardware stack levels used:    1
 23450 ;; Hardware stack levels required when called:    4
 23451 ;; This function calls:
 23452 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23453 ;;		i2_memset
 23454 ;; This function is called by:
 23455 ;;		_USBCheckStdRequest
 23456 ;; This function uses a non-reentrant model
 23457 ;;
 23458                           
 23459                           	psect	text112
 23460  013800                     __ptext112:
 23461                           	opt stack 0
 23462  013800                     _USBStdSetCfgHandler:
 23463                           	opt stack 12
 23464                           
 23465                           ;usb_device.c: 1970: uint8_t i;
 23466                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 23467                           
 23468                           ;incstack = 0
 23469  013800  0100               	movlb	0	; () banked
 23470  013802  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23471                           
 23472                           ; BSR set to: 0
 23473                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 23474  013804  0E27               	movlw	39
 23475  013806  6E01               	movwf	i2memset@p1,c
 23476  013808  0E0F               	movlw	15
 23477  01380A  6E02               	movwf	i2memset@p1+1,c
 23478  01380C  0E00               	movlw	0
 23479  01380E  6E04               	movwf	i2memset@c+1,c
 23480  013810  0E00               	movlw	0
 23481  013812  6E03               	movwf	i2memset@c,c
 23482  013814  0E00               	movlw	0
 23483  013816  6E06               	movwf	i2memset@n+1,c
 23484  013818  0E02               	movlw	2
 23485  01381A  6E05               	movwf	i2memset@n,c
 23486  01381C  ECD7  F0AE         	call	i2_memset	;wreg free
 23487                           
 23488                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 23489  013820  0E00               	movlw	0
 23490  013822  6E01               	movwf	i2memset@p1,c
 23491  013824  0E0D               	movlw	13
 23492  013826  6E02               	movwf	i2memset@p1+1,c
 23493  013828  0E00               	movlw	0
 23494  01382A  6E04               	movwf	i2memset@c+1,c
 23495  01382C  0E00               	movlw	0
 23496  01382E  6E03               	movwf	i2memset@c,c
 23497  013830  0E00               	movlw	0
 23498  013832  6E06               	movwf	i2memset@n+1,c
 23499  013834  0E30               	movlw	48
 23500  013836  6E05               	movwf	i2memset@n,c
 23501  013838  ECD7  F0AE         	call	i2_memset	;wreg free
 23502                           
 23503                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 23504  01383C  8C65               	bsf	3941,6,c	;volatile
 23505                           
 23506                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 23507  01383E  0E00               	movlw	0
 23508  013840  6E15               	movwf	USBStdSetCfgHandler@i,c
 23509  013842                     i2l6037:
 23510  013842  0E02               	movlw	2
 23511  013844  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 23512  013846  D001               	goto	i2l6041
 23513  013848  D016               	goto	i2l6047
 23514  01384A                     i2l6041:
 23515                           
 23516                           ;usb_device.c: 1988: {
 23517                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 23518  01384A  5015               	movf	USBStdSetCfgHandler@i,w,c
 23519  01384C  0D01               	mullw	1
 23520  01384E  0E8A               	movlw	low _ep_data_in
 23521  013850  24F3               	addwf	prodl,w,c
 23522  013852  6ED9               	movwf	fsr2l,c
 23523  013854  0E00               	movlw	high _ep_data_in
 23524  013856  20F4               	addwfc	prodh,w,c
 23525  013858  6EDA               	movwf	fsr2h,c
 23526  01385A  0E00               	movlw	0
 23527  01385C  6EDF               	movwf	indf2,c
 23528                           
 23529                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 23530  01385E  5015               	movf	USBStdSetCfgHandler@i,w,c
 23531  013860  0D01               	mullw	1
 23532  013862  0E8D               	movlw	low _ep_data_out
 23533  013864  24F3               	addwf	prodl,w,c
 23534  013866  6ED9               	movwf	fsr2l,c
 23535  013868  0E00               	movlw	high _ep_data_out
 23536  01386A  20F4               	addwfc	prodh,w,c
 23537  01386C  6EDA               	movwf	fsr2h,c
 23538  01386E  0E00               	movlw	0
 23539  013870  6EDF               	movwf	indf2,c
 23540  013872  2A15               	incf	USBStdSetCfgHandler@i,f,c
 23541  013874  D7E6               	goto	i2l6037
 23542  013876                     i2l6047:
 23543                           
 23544                           ;usb_device.c: 1991: }
 23545                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 23546  013876  0E53               	movlw	low _USBAlternateInterface
 23547  013878  6E01               	movwf	i2memset@p1,c
 23548  01387A  0E00               	movlw	high _USBAlternateInterface
 23549  01387C  6E02               	movwf	i2memset@p1+1,c
 23550  01387E  0E00               	movlw	0
 23551  013880  6E04               	movwf	i2memset@c+1,c
 23552  013882  0E00               	movlw	0
 23553  013884  6E03               	movwf	i2memset@c,c
 23554  013886  0E00               	movlw	0
 23555  013888  6E06               	movwf	i2memset@n+1,c
 23556  01388A  0E02               	movlw	2
 23557  01388C  6E05               	movwf	i2memset@n,c
 23558  01388E  ECD7  F0AE         	call	i2_memset	;wreg free
 23559                           
 23560                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 23561  013892  9C65               	bcf	3941,6,c	;volatile
 23562                           
 23563                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 23564  013894  0E08               	movlw	8
 23565  013896  0100               	movlb	0	; () banked
 23566  013898  6F7B               	movwf	_pBDTEntryIn& (0+255),b
 23567  01389A  0E0D               	movlw	13
 23568  01389C  0100               	movlb	0	; () banked
 23569  01389E  6F7C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 23573  0138A0  0E00               	movlw	0
 23574  0138A2  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 23575  0138A4  0E0D               	movlw	13
 23576  0138A6  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 23580  0138A8  C037  F039         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 23581  0138AC  C038  F03A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 23585  0138B0  CD32 F055          	movff	3378,_USBActiveConfiguration	;volatile
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 23589  0138B4  5055               	movf	_USBActiveConfiguration,w,c	;volatile
 23590  0138B6  A4D8               	btfss	status,2,c
 23591  0138B8  D003               	goto	i2l6063
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;usb_device.c: 2010: {
 23595                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 23596  0138BA  0E10               	movlw	16
 23597  0138BC  6E45               	movwf	_USBDeviceState,c	;volatile
 23598                           
 23599                           ;usb_device.c: 2013: }
 23600  0138BE  0012               	return	
 23601  0138C0                     i2l6063:
 23602                           
 23603                           ; BSR set to: 0
 23604                           ;usb_device.c: 2014: else
 23605                           ;usb_device.c: 2015: {
 23606                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 23607  0138C0  0E00               	movlw	0
 23608  0138C2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23609  0138C4  0E01               	movlw	1
 23610  0138C6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23611  0138C8  0E55               	movlw	low _USBActiveConfiguration
 23612  0138CA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23613  0138CC  0E00               	movlw	high _USBActiveConfiguration
 23614  0138CE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23615  0138D0  0E00               	movlw	0
 23616  0138D2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23617  0138D4  0E01               	movlw	1
 23618  0138D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23619  0138D8  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23620                           
 23621                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 23622  0138DC  0E20               	movlw	32
 23623  0138DE  6E45               	movwf	_USBDeviceState,c	;volatile
 23624  0138E0  0012               	return	
 23625  0138E2                     __end_of_USBStdSetCfgHandler:
 23626                           	opt stack 0
 23627                           pclatu	equ	0xFFB
 23628                           pclath	equ	0xFFA
 23629                           tblptru	equ	0xFF8
 23630                           tblptrh	equ	0xFF7
 23631                           tblptrl	equ	0xFF6
 23632                           tablat	equ	0xFF5
 23633                           prodh	equ	0xFF4
 23634                           prodl	equ	0xFF3
 23635                           intcon	equ	0xFF2
 23636                           intcon2	equ	0xFF1
 23637                           postinc0	equ	0xFEE
 23638                           fsr0h	equ	0xFEA
 23639                           fsr0l	equ	0xFE9
 23640                           wreg	equ	0xFE8
 23641                           indf1	equ	0xFE7
 23642                           postinc1	equ	0xFE6
 23643                           postdec1	equ	0xFE5
 23644                           fsr1h	equ	0xFE2
 23645                           fsr1l	equ	0xFE1
 23646                           indf2	equ	0xFDF
 23647                           postinc2	equ	0xFDE
 23648                           postdec2	equ	0xFDD
 23649                           plusw2	equ	0xFDB
 23650                           fsr2h	equ	0xFDA
 23651                           fsr2l	equ	0xFD9
 23652                           status	equ	0xFD8
 23653                           
 23654 ;; *************** function i2_memset *****************
 23655 ;; Defined at:
 23656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 23657 ;; Parameters:    Size  Location     Type
 23658 ;;  p1              2    0[COMRAM] PTR void 
 23659 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23660 ;;  c               2    2[COMRAM] int 
 23661 ;;  n               2    4[COMRAM] unsigned int 
 23662 ;; Auto vars:     Size  Location     Type
 23663 ;;  memset          2    6[COMRAM] PTR unsigned char 
 23664 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23665 ;; Return value:  Size  Location     Type
 23666 ;;                  2    0[COMRAM] PTR void 
 23667 ;; Registers used:
 23668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23669 ;; Tracked objects:
 23670 ;;		On entry : 0/0
 23671 ;;		On exit  : 0/0
 23672 ;;		Unchanged: 0/0
 23673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23674 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23677 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23678 ;;Total ram usage:        8 bytes
 23679 ;; Hardware stack levels used:    1
 23680 ;; This function calls:
 23681 ;;		Nothing
 23682 ;; This function is called by:
 23683 ;;		_USBStdSetCfgHandler
 23684 ;;		i2_USBDeviceInit
 23685 ;; This function uses a non-reentrant model
 23686 ;;
 23687                           
 23688                           	psect	text113
 23689  015DAE                     __ptext113:
 23690                           	opt stack 0
 23691  015DAE                     i2_memset:
 23692                           	opt stack 18
 23693                           
 23694                           ;incstack = 0
 23695  015DAE  C001  F007         	movff	i2memset@p1,i2memset@p
 23696  015DB2  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 23697  015DB6  D008               	goto	i2l5895
 23698  015DB8                     i2l5891:
 23699  015DB8  C007  FFD9         	movff	i2memset@p,fsr2l
 23700  015DBC  C008  FFDA         	movff	i2memset@p+1,fsr2h
 23701  015DC0  C003  FFDF         	movff	i2memset@c,indf2
 23702  015DC4  4A07               	infsnz	i2memset@p,f,c
 23703  015DC6  2A08               	incf	i2memset@p+1,f,c
 23704  015DC8                     i2l5895:
 23705  015DC8  0605               	decf	i2memset@n,f,c
 23706  015DCA  A0D8               	btfss	status,0,c
 23707  015DCC  0606               	decf	i2memset@n+1,f,c
 23708  015DCE  2805               	incf	i2memset@n,w,c
 23709  015DD0  E1F3               	bnz	i2l5891
 23710  015DD2  2806               	incf	i2memset@n+1,w,c
 23711  015DD4  B4D8               	btfsc	status,2,c
 23712  015DD6  0012               	return	
 23713  015DD8  D7EF               	goto	i2l5891
 23714  015DDA                     __end_ofi2_memset:
 23715                           	opt stack 0
 23716                           pclatu	equ	0xFFB
 23717                           pclath	equ	0xFFA
 23718                           tblptru	equ	0xFF8
 23719                           tblptrh	equ	0xFF7
 23720                           tblptrl	equ	0xFF6
 23721                           tablat	equ	0xFF5
 23722                           prodh	equ	0xFF4
 23723                           prodl	equ	0xFF3
 23724                           intcon	equ	0xFF2
 23725                           intcon2	equ	0xFF1
 23726                           postinc0	equ	0xFEE
 23727                           fsr0h	equ	0xFEA
 23728                           fsr0l	equ	0xFE9
 23729                           wreg	equ	0xFE8
 23730                           indf1	equ	0xFE7
 23731                           postinc1	equ	0xFE6
 23732                           postdec1	equ	0xFE5
 23733                           fsr1h	equ	0xFE2
 23734                           fsr1l	equ	0xFE1
 23735                           indf2	equ	0xFDF
 23736                           postinc2	equ	0xFDE
 23737                           postdec2	equ	0xFDD
 23738                           plusw2	equ	0xFDB
 23739                           fsr2h	equ	0xFDA
 23740                           fsr2l	equ	0xFD9
 23741                           status	equ	0xFD8
 23742                           
 23743 ;; *************** function _USBStdGetStatusHandler *****************
 23744 ;; Defined at:
 23745 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 23746 ;; Parameters:    Size  Location     Type
 23747 ;;		None
 23748 ;; Auto vars:     Size  Location     Type
 23749 ;;  p               2    1[COMRAM] PTR struct __BDT
 23750 ;;		 -> NULL(0), BDT(48), 
 23751 ;; Return value:  Size  Location     Type
 23752 ;;		None               void
 23753 ;; Registers used:
 23754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23755 ;; Tracked objects:
 23756 ;;		On entry : 0/0
 23757 ;;		On exit  : 0/0
 23758 ;;		Unchanged: 0/0
 23759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23763 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23764 ;;Total ram usage:        3 bytes
 23765 ;; Hardware stack levels used:    1
 23766 ;; This function calls:
 23767 ;;		Nothing
 23768 ;; This function is called by:
 23769 ;;		_USBCheckStdRequest
 23770 ;; This function uses a non-reentrant model
 23771 ;;
 23772                           
 23773                           	psect	text114
 23774  0144F6                     __ptext114:
 23775                           	opt stack 0
 23776  0144F6                     _USBStdGetStatusHandler:
 23777                           	opt stack 16
 23778                           
 23779                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 23780                           
 23781                           ;incstack = 0
 23782  0144F6  0E00               	movlw	0
 23783  0144F8  010D               	movlb	13	; () banked
 23784  0144FA  6F38               	movwf	56,b	;volatile
 23785                           
 23786                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 23787  0144FC  0E00               	movlw	0
 23788  0144FE  010D               	movlb	13	; () banked
 23789  014500  6F39               	movwf	57,b	;volatile
 23790                           
 23791                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 23792  014502  D03B               	goto	i2l6119
 23793  014504                     i2l1257:
 23794                           
 23795                           ; BSR set to: 13
 23796                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 23797  014504  0100               	movlb	0	; () banked
 23798  014506  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23799                           
 23800                           ;usb_device.c: 2145: }
 23801                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 23802                           
 23803                           ; BSR set to: 13
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;usb_device.c: 2143: {
 23807                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 23808                           
 23809                           ;usb_device.c: 2142: if(0 == 1)
 23810  014508  0441               	decf	_RemoteWakeup,w,c	;volatile
 23811  01450A  A4D8               	btfss	status,2,c
 23812  01450C  D042               	goto	i2l1260
 23813                           
 23814                           ;usb_device.c: 2148: {
 23815                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 23816  01450E  010D               	movlb	13	; () banked
 23817  014510  8338               	bsf	56,1,b	;volatile
 23818                           
 23819                           ; BSR set to: 13
 23820                           ;usb_device.c: 2150: }
 23821                           ;usb_device.c: 2151: break;
 23822  014512  D03F               	goto	i2l1260
 23823  014514                     i2l1261:
 23824                           
 23825                           ; BSR set to: 13
 23826                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 23827  014514  0100               	movlb	0	; () banked
 23828  014516  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23829                           
 23830                           ;usb_device.c: 2154: break;
 23831  014518  D03C               	goto	i2l1260
 23832  01451A                     i2l1262:
 23833                           
 23834                           ; BSR set to: 13
 23835                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 23836  01451A  0100               	movlb	0	; () banked
 23837  01451C  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 23838                           
 23839                           ;usb_device.c: 2160: {
 23840                           ;usb_device.c: 2161: BDT_ENTRY *p;
 23841                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 23842  01451E  010D               	movlb	13	; () banked
 23843  014520  BF34               	btfsc	52,7,b	;volatile
 23844  014522  D00B               	goto	i2l6109
 23845                           
 23846                           ; BSR set to: 13
 23847                           ;usb_device.c: 2164: {
 23848                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23849  014524  010D               	movlb	13	; () banked
 23850  014526  5134               	movf	52,w,b	;volatile
 23851  014528  0B0F               	andlw	15
 23852  01452A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 23853  01452C  5001               	movf	??_USBStdGetStatusHandler,w,c
 23854  01452E  0D02               	mullw	2
 23855  014530  0E81               	movlw	low _pBDTEntryOut
 23856  014532  24F3               	addwf	prodl,w,c
 23857  014534  6ED9               	movwf	fsr2l,c
 23858  014536  0E00               	movlw	high _pBDTEntryOut
 23859  014538  D00A               	goto	L10
 23860  01453A                     i2l6109:
 23861                           
 23862                           ; BSR set to: 13
 23863                           ;usb_device.c: 2167: else
 23864                           ;usb_device.c: 2168: {
 23865                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23866  01453A  010D               	movlb	13	; () banked
 23867  01453C  5134               	movf	52,w,b	;volatile
 23868  01453E  0B0F               	andlw	15
 23869  014540  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 23870  014542  5001               	movf	??_USBStdGetStatusHandler,w,c
 23871  014544  0D02               	mullw	2
 23872  014546  0E7B               	movlw	low _pBDTEntryIn
 23873  014548  24F3               	addwf	prodl,w,c
 23874  01454A  6ED9               	movwf	fsr2l,c
 23875  01454C  0E00               	movlw	high _pBDTEntryIn
 23876  01454E                     L10:
 23877  01454E  20F4               	addwfc	prodh,w,c
 23878  014550  6EDA               	movwf	fsr2h,c
 23879  014552  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 23880  014556  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 23881                           
 23882                           ; BSR set to: 13
 23883                           ;usb_device.c: 2170: }
 23884                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 23885                           
 23886                           ; BSR set to: 13
 23887  01455A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 23888  01455E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 23889  014562  AEDF               	btfss	indf2,7,c
 23890  014564  D016               	goto	i2l1260
 23891                           
 23892                           ; BSR set to: 13
 23893  014566  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 23894  01456A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 23895  01456E  A4DF               	btfss	indf2,2,c
 23896  014570  D010               	goto	i2l1260
 23897                           
 23898                           ; BSR set to: 13
 23899                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 23900  014572  0E01               	movlw	1
 23901  014574  010D               	movlb	13	; () banked
 23902  014576  6F38               	movwf	56,b	;volatile
 23903                           
 23904                           ; BSR set to: 13
 23905                           ;usb_device.c: 2175: }
 23906                           ;usb_device.c: 2176: }
 23907                           
 23908                           ; BSR set to: 13
 23909                           ;usb_device.c: 2174: break;
 23910  014578  D00C               	goto	i2l1260
 23911  01457A                     i2l6119:
 23912                           
 23913                           ; BSR set to: 13
 23914  01457A  010D               	movlb	13	; () banked
 23915  01457C  5130               	movf	48,w,b	;volatile
 23916  01457E  0B1F               	andlw	31
 23917                           
 23918                           ; Switch size 1, requested type "space"
 23919                           ; Number of cases is 3, Range of values is 0 to 2
 23920                           ; switch strategies available:
 23921                           ; Name         Instructions Cycles
 23922                           ; simple_byte           10     6 (average)
 23923                           ;	Chosen strategy is simple_byte
 23924  014580  0A00               	xorlw	0	; case 0
 23925  014582  B4D8               	btfsc	status,2,c
 23926  014584  D7BF               	goto	i2l1257
 23927  014586  0A01               	xorlw	1	; case 1
 23928  014588  B4D8               	btfsc	status,2,c
 23929  01458A  D7C4               	goto	i2l1261
 23930  01458C  0A03               	xorlw	3	; case 2
 23931  01458E  B4D8               	btfsc	status,2,c
 23932  014590  D7C4               	goto	i2l1262
 23933  014592                     i2l1260:
 23934                           
 23935                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 23936  014592  0100               	movlb	0	; () banked
 23937  014594  AF78               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 23938  014596  0012               	return	
 23939                           
 23940                           ; BSR set to: 0
 23941                           ;usb_device.c: 2179: {
 23942                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 23943  014598  0E38               	movlw	56
 23944  01459A  0100               	movlb	0	; () banked
 23945  01459C  6F75               	movwf	_inPipes& (0+255),b	;volatile
 23946  01459E  0E0D               	movlw	13
 23947  0145A0  0100               	movlb	0	; () banked
 23948  0145A2  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 23949                           
 23950                           ; BSR set to: 0
 23951                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23952  0145A4  0100               	movlb	0	; () banked
 23953  0145A6  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 23957  0145A8  0E02               	movlw	2
 23958  0145AA  0100               	movlb	0	; () banked
 23959  0145AC  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 23960  0145AE  0012               	return	
 23961  0145B0                     __end_of_USBStdGetStatusHandler:
 23962                           	opt stack 0
 23963                           pclatu	equ	0xFFB
 23964                           pclath	equ	0xFFA
 23965                           tblptru	equ	0xFF8
 23966                           tblptrh	equ	0xFF7
 23967                           tblptrl	equ	0xFF6
 23968                           tablat	equ	0xFF5
 23969                           prodh	equ	0xFF4
 23970                           prodl	equ	0xFF3
 23971                           intcon	equ	0xFF2
 23972                           intcon2	equ	0xFF1
 23973                           postinc0	equ	0xFEE
 23974                           fsr0h	equ	0xFEA
 23975                           fsr0l	equ	0xFE9
 23976                           wreg	equ	0xFE8
 23977                           indf1	equ	0xFE7
 23978                           postinc1	equ	0xFE6
 23979                           postdec1	equ	0xFE5
 23980                           fsr1h	equ	0xFE2
 23981                           fsr1l	equ	0xFE1
 23982                           indf2	equ	0xFDF
 23983                           postinc2	equ	0xFDE
 23984                           postdec2	equ	0xFDD
 23985                           plusw2	equ	0xFDB
 23986                           fsr2h	equ	0xFDA
 23987                           fsr2l	equ	0xFD9
 23988                           status	equ	0xFD8
 23989                           
 23990 ;; *************** function _USBStdGetDscHandler *****************
 23991 ;; Defined at:
 23992 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;		None
 23995 ;; Auto vars:     Size  Location     Type
 23996 ;;		None
 23997 ;; Return value:  Size  Location     Type
 23998 ;;		None               void
 23999 ;; Registers used:
 24000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24001 ;; Tracked objects:
 24002 ;;		On entry : 0/0
 24003 ;;		On exit  : 0/0
 24004 ;;		Unchanged: 0/0
 24005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24010 ;;Total ram usage:        2 bytes
 24011 ;; Hardware stack levels used:    1
 24012 ;; This function calls:
 24013 ;;		Nothing
 24014 ;; This function is called by:
 24015 ;;		_USBCheckStdRequest
 24016 ;; This function uses a non-reentrant model
 24017 ;;
 24018                           
 24019                           	psect	text115
 24020  012A02                     __ptext115:
 24021                           	opt stack 0
 24022  012A02                     _USBStdGetDscHandler:
 24023                           	opt stack 16
 24024                           
 24025                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;incstack = 0
 24029  012A02  0E80               	movlw	128
 24030  012A04  010D               	movlb	13	; () banked
 24031  012A06  1930               	xorwf	48,w,b	;volatile
 24032  012A08  A4D8               	btfss	status,2,c
 24033  012A0A  0012               	return	
 24034                           
 24035                           ; BSR set to: 13
 24036                           ;usb_device.c: 2046: {
 24037                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 24038  012A0C  0EC0               	movlw	192
 24039  012A0E  0100               	movlb	0	; () banked
 24040  012A10  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24041                           
 24042                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 24043  012A12  D092               	goto	i2l6097
 24044  012A14                     i2l6071:
 24045                           
 24046                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 24047  012A14  0E18               	movlw	low _device_dsc
 24048  012A16  0100               	movlb	0	; () banked
 24049  012A18  6F75               	movwf	_inPipes& (0+255),b	;volatile
 24050  012A1A  0EFD               	movlw	high _device_dsc
 24051  012A1C  0100               	movlb	0	; () banked
 24052  012A1E  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24053                           
 24054                           ; BSR set to: 0
 24055                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 24056  012A20  0E00               	movlw	0
 24057  012A22  0100               	movlb	0	; () banked
 24058  012A24  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24059  012A26  0E12               	movlw	18
 24060  012A28  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24061                           
 24062                           ;usb_device.c: 2058: break;
 24063  012A2A  0012               	return	
 24064  012A2C                     i2l6075:
 24065                           
 24066                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 24067  012A2C  010D               	movlb	13	; () banked
 24068  012A2E  5132               	movf	50,w,b	;volatile
 24069  012A30  A4D8               	btfss	status,2,c
 24070  012A32  D049               	goto	i2l6083
 24071                           
 24072                           ; BSR set to: 13
 24073                           ;usb_device.c: 2064: {
 24074                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 24075  012A34  010D               	movlb	13	; () banked
 24076  012A36  5132               	movf	50,w,b	;volatile
 24077  012A38  0D02               	mullw	2
 24078  012A3A  0E4F               	movlw	low _USB_CD_Ptr
 24079  012A3C  24F3               	addwf	prodl,w,c
 24080  012A3E  6EF6               	movwf	tblptrl,c
 24081  012A40  0EFC               	movlw	high _USB_CD_Ptr
 24082  012A42  20F4               	addwfc	prodh,w,c
 24083  012A44  6EF7               	movwf	tblptrh,c
 24084  012A46                     	if	1	;There are 3 active tblptr bytes
 24085  012A46  6AF8               	clrf	tblptru,c
 24086  012A48  0E00               	movlw	low (__mediumconst shr (0+16))
 24087  012A4A  22F8               	addwfc	tblptru,f,c
 24088  012A4C                     	endif
 24089  012A4C  0009               	tblrd		*+
 24090  012A4E  CFF5 F075          	movff	tablat,_inPipes	;volatile
 24091  012A52  000A               	tblrd		*-
 24092  012A54  CFF5 F076          	movff	tablat,_inPipes+1	;volatile
 24093                           
 24094                           ; BSR set to: 13
 24095                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 24096  012A58  0E02               	movlw	2
 24097  012A5A  0100               	movlb	0	; () banked
 24098  012A5C  2575               	addwf	_inPipes& (0+255),w,b	;volatile
 24099  012A5E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 24100  012A60  0E00               	movlw	0
 24101  012A62  0100               	movlb	0	; () banked
 24102  012A64  2176               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 24103  012A66  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 24104  012A68  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 24105  012A6C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 24106  012A70  0E00               	movlw	low (__mediumconst shr (0+16))
 24107  012A72  6EF8               	movwf	tblptru,c
 24108  012A74  0E0E               	movlw	(high __ramtop+-1)
 24109  012A76  64F7               	cpfsgt	tblptrh,c
 24110  012A78  D003               	bra	i2u546_47
 24111  012A7A  0008               	tblrd		*
 24112  012A7C  50F5               	movf	tablat,w,c
 24113  012A7E  D005               	bra	i2u546_40
 24114  012A80                     i2u546_47:
 24115  012A80  CFF6 FFE1          	movff	tblptrl,fsr1l
 24116  012A84  CFF7 FFE2          	movff	tblptrh,fsr1h
 24117  012A88  50E7               	movf	indf1,w,c
 24118  012A8A                     i2u546_40:
 24119  012A8A  0100               	movlb	0	; () banked
 24120  012A8C  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 24124  012A8E  0E03               	movlw	3
 24125  012A90  0100               	movlb	0	; () banked
 24126  012A92  2575               	addwf	_inPipes& (0+255),w,b	;volatile
 24127  012A94  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 24128  012A96  0E00               	movlw	0
 24129  012A98  0100               	movlb	0	; () banked
 24130  012A9A  2176               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 24131  012A9C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 24132  012A9E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 24133  012AA2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 24134  012AA6  0E00               	movlw	low (__mediumconst shr (0+16))
 24135  012AA8  6EF8               	movwf	tblptru,c
 24136  012AAA  0E0E               	movlw	(high __ramtop+-1)
 24137  012AAC  64F7               	cpfsgt	tblptrh,c
 24138  012AAE  D003               	bra	i2u547_47
 24139  012AB0  0008               	tblrd		*
 24140  012AB2  50F5               	movf	tablat,w,c
 24141  012AB4  D005               	bra	i2u547_40
 24142  012AB6                     i2u547_47:
 24143  012AB6  CFF6 FFE1          	movff	tblptrl,fsr1l
 24144  012ABA  CFF7 FFE2          	movff	tblptrh,fsr1h
 24145  012ABE  50E7               	movf	indf1,w,c
 24146  012AC0                     i2u547_40:
 24147  012AC0  0100               	movlb	0	; () banked
 24148  012AC2  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24149                           
 24150                           ;usb_device.c: 2076: }
 24151  012AC4  0012               	return	
 24152  012AC6                     i2l6083:
 24153                           
 24154                           ;usb_device.c: 2077: else
 24155                           ;usb_device.c: 2078: {
 24156                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 24157  012AC6  0E00               	movlw	0
 24158  012AC8  0100               	movlb	0	; () banked
 24159  012ACA  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24160                           
 24161                           ; BSR set to: 0
 24162                           ;usb_device.c: 2080: }
 24163                           ;usb_device.c: 2081: break;
 24164  012ACC  0012               	return	
 24165  012ACE                     i2l6085:
 24166                           
 24167                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 24168  012ACE  0E03               	movlw	3
 24169  012AD0  010D               	movlb	13	; () banked
 24170  012AD2  6132               	cpfslt	50,b	;volatile
 24171  012AD4  D029               	goto	i2l6091
 24172                           
 24173                           ; BSR set to: 13
 24174                           ;usb_device.c: 2087: {
 24175                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 24176  012AD6  010D               	movlb	13	; () banked
 24177  012AD8  5132               	movf	50,w,b	;volatile
 24178  012ADA  0D02               	mullw	2
 24179  012ADC  0E49               	movlw	low _USB_SD_Ptr
 24180  012ADE  24F3               	addwf	prodl,w,c
 24181  012AE0  6EF6               	movwf	tblptrl,c
 24182  012AE2  0EFC               	movlw	high _USB_SD_Ptr
 24183  012AE4  20F4               	addwfc	prodh,w,c
 24184  012AE6  6EF7               	movwf	tblptrh,c
 24185  012AE8                     	if	1	;There are 3 active tblptr bytes
 24186  012AE8  6AF8               	clrf	tblptru,c
 24187  012AEA  0E00               	movlw	low (__mediumconst shr (0+16))
 24188  012AEC  22F8               	addwfc	tblptru,f,c
 24189  012AEE                     	endif
 24190  012AEE  0009               	tblrd		*+
 24191  012AF0  CFF5 F075          	movff	tablat,_inPipes	;volatile
 24192  012AF4  000A               	tblrd		*-
 24193  012AF6  CFF5 F076          	movff	tablat,_inPipes+1	;volatile
 24194                           
 24195                           ; BSR set to: 13
 24196                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 24197  012AFA  C075  FFF6         	movff	_inPipes,tblptrl	;volatile
 24198  012AFE  C076  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24199  012B02  0E00               	movlw	low (__mediumconst shr (0+16))
 24200  012B04  6EF8               	movwf	tblptru,c
 24201  012B06  0E0E               	movlw	(high __ramtop+-1)
 24202  012B08  64F7               	cpfsgt	tblptrh,c
 24203  012B0A  D003               	bra	i2u549_47
 24204  012B0C  0008               	tblrd		*
 24205  012B0E  50F5               	movf	tablat,w,c
 24206  012B10  D005               	bra	i2u549_40
 24207  012B12                     i2u549_47:
 24208  012B12  CFF6 FFE1          	movff	tblptrl,fsr1l
 24209  012B16  CFF7 FFE2          	movff	tblptrh,fsr1h
 24210  012B1A  50E7               	movf	indf1,w,c
 24211  012B1C                     i2u549_40:
 24212  012B1C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 24213  012B1E  5001               	movf	??_USBStdGetDscHandler,w,c
 24214  012B20  0100               	movlb	0	; () banked
 24215  012B22  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24216  012B24  6B7A               	clrf	(_inPipes+5)& (0+255),b	;volatile
 24217                           
 24218                           ;usb_device.c: 2092: }
 24219  012B26  0012               	return	
 24220  012B28                     i2l6091:
 24221                           
 24222                           ;usb_device.c: 2102: else
 24223                           ;usb_device.c: 2103: {
 24224                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 24225  012B28  0E00               	movlw	0
 24226  012B2A  0100               	movlb	0	; () banked
 24227  012B2C  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24228                           
 24229                           ; BSR set to: 0
 24230                           ;usb_device.c: 2105: }
 24231                           ;usb_device.c: 2106: break;
 24232  012B2E  0012               	return	
 24233  012B30                     i2l6093:
 24234                           
 24235                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 24236  012B30  0E00               	movlw	0
 24237  012B32  0100               	movlb	0	; () banked
 24238  012B34  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24239                           
 24240                           ; BSR set to: 0
 24241                           ;usb_device.c: 2110: }
 24242                           
 24243                           ;usb_device.c: 2109: break;
 24244  012B36  0012               	return	
 24245  012B38                     i2l6097:
 24246                           
 24247                           ; BSR set to: 0
 24248  012B38  010D               	movlb	13	; () banked
 24249  012B3A  5133               	movf	51,w,b	;volatile
 24250                           
 24251                           ; Switch size 1, requested type "space"
 24252                           ; Number of cases is 3, Range of values is 1 to 3
 24253                           ; switch strategies available:
 24254                           ; Name         Instructions Cycles
 24255                           ; simple_byte           10     6 (average)
 24256                           ;	Chosen strategy is simple_byte
 24257  012B3C  0A01               	xorlw	1	; case 1
 24258  012B3E  B4D8               	btfsc	status,2,c
 24259  012B40  D769               	goto	i2l6071
 24260  012B42  0A03               	xorlw	3	; case 2
 24261  012B44  B4D8               	btfsc	status,2,c
 24262  012B46  D772               	goto	i2l6075
 24263  012B48  0A01               	xorlw	1	; case 3
 24264  012B4A  B4D8               	btfsc	status,2,c
 24265  012B4C  D7C0               	goto	i2l6085
 24266  012B4E  D7F0               	goto	i2l6093
 24267  012B50                     __end_of_USBStdGetDscHandler:
 24268                           	opt stack 0
 24269                           pclatu	equ	0xFFB
 24270                           pclath	equ	0xFFA
 24271                           tblptru	equ	0xFF8
 24272                           tblptrh	equ	0xFF7
 24273                           tblptrl	equ	0xFF6
 24274                           tablat	equ	0xFF5
 24275                           prodh	equ	0xFF4
 24276                           prodl	equ	0xFF3
 24277                           intcon	equ	0xFF2
 24278                           intcon2	equ	0xFF1
 24279                           postinc0	equ	0xFEE
 24280                           fsr0h	equ	0xFEA
 24281                           fsr0l	equ	0xFE9
 24282                           wreg	equ	0xFE8
 24283                           indf1	equ	0xFE7
 24284                           postinc1	equ	0xFE6
 24285                           postdec1	equ	0xFE5
 24286                           fsr1h	equ	0xFE2
 24287                           fsr1l	equ	0xFE1
 24288                           indf2	equ	0xFDF
 24289                           postinc2	equ	0xFDE
 24290                           postdec2	equ	0xFDD
 24291                           plusw2	equ	0xFDB
 24292                           fsr2h	equ	0xFDA
 24293                           fsr2l	equ	0xFD9
 24294                           status	equ	0xFD8
 24295                           
 24296 ;; *************** function _USBStdFeatureReqHandler *****************
 24297 ;; Defined at:
 24298 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 24299 ;; Parameters:    Size  Location     Type
 24300 ;;		None
 24301 ;; Auto vars:     Size  Location     Type
 24302 ;;  p               2   24[COMRAM] PTR struct __BDT
 24303 ;;		 -> NULL(0), BDT(48), 
 24304 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 24305 ;;		 -> UEP0(1), 
 24306 ;;  current_ep_d    1   23[COMRAM] struct .
 24307 ;; Return value:  Size  Location     Type
 24308 ;;		None               void
 24309 ;; Registers used:
 24310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24311 ;; Tracked objects:
 24312 ;;		On entry : 0/0
 24313 ;;		On exit  : 0/0
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24317 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24320 ;;Total ram usage:        6 bytes
 24321 ;; Hardware stack levels used:    1
 24322 ;; Hardware stack levels required when called:    4
 24323 ;; This function calls:
 24324 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24325 ;; This function is called by:
 24326 ;;		_USBCheckStdRequest
 24327 ;; This function uses a non-reentrant model
 24328 ;;
 24329                           
 24330                           	psect	text116
 24331  011AB2                     __ptext116:
 24332                           	opt stack 0
 24333  011AB2                     _USBStdFeatureReqHandler:
 24334                           	opt stack 12
 24335                           
 24336                           ;usb_device.c: 2759: BDT_ENTRY *p;
 24337                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 24338                           ;usb_device.c: 2764: unsigned char* pUEP;
 24339                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 24340                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 24341                           
 24342                           ;incstack = 0
 24343  011AB2  010D               	movlb	13	; () banked
 24344  011AB4  0532               	decf	50,w,b	;volatile
 24345  011AB6  A4D8               	btfss	status,2,c
 24346  011AB8  D011               	goto	i2l1336
 24347                           
 24348                           ; BSR set to: 13
 24349  011ABA  010D               	movlb	13	; () banked
 24350  011ABC  5130               	movf	48,w,b	;volatile
 24351  011ABE  0B1F               	andlw	31
 24352  011AC0  0900               	iorlw	0
 24353  011AC2  A4D8               	btfss	status,2,c
 24354  011AC4  D00B               	goto	i2l1336
 24355                           
 24356                           ; BSR set to: 13
 24357                           ;usb_device.c: 2804: {
 24358                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 24359  011AC6  0100               	movlb	0	; () banked
 24360  011AC8  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24361                           
 24362                           ; BSR set to: 0
 24363                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 24364  011ACA  0E03               	movlw	3
 24365  011ACC  010D               	movlb	13	; () banked
 24366  011ACE  1931               	xorwf	49,w,b	;volatile
 24367  011AD0  A4D8               	btfss	status,2,c
 24368  011AD2  D002               	goto	i2l6137
 24369                           
 24370                           ; BSR set to: 13
 24371                           ;usb_device.c: 2807: RemoteWakeup = 1;
 24372  011AD4  0E01               	movlw	1
 24373  011AD6  D001               	goto	L11
 24374  011AD8                     i2l6137:
 24375                           
 24376                           ; BSR set to: 13
 24377                           ;usb_device.c: 2808: else
 24378                           ;usb_device.c: 2809: RemoteWakeup = 0;
 24379  011AD8  0E00               	movlw	0
 24380  011ADA                     L11:
 24381  011ADA  6E41               	movwf	_RemoteWakeup,c	;volatile
 24382  011ADC                     i2l1336:
 24383                           
 24384                           ; BSR set to: 13
 24385                           ;usb_device.c: 2810: }
 24386                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 24387                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 24388                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 24389                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 24390  011ADC  010D               	movlb	13	; () banked
 24391  011ADE  5132               	movf	50,w,b	;volatile
 24392  011AE0  A4D8               	btfss	status,2,c
 24393  011AE2  0012               	return	
 24394                           
 24395                           ; BSR set to: 13
 24396  011AE4  010D               	movlb	13	; () banked
 24397  011AE6  5130               	movf	48,w,b	;volatile
 24398  011AE8  0B1F               	andlw	31
 24399  011AEA  0A02               	xorlw	2
 24400  011AEC  A4D8               	btfss	status,2,c
 24401  011AEE  0012               	return	
 24402                           
 24403                           ; BSR set to: 13
 24404  011AF0  010D               	movlb	13	; () banked
 24405  011AF2  5134               	movf	52,w,b	;volatile
 24406  011AF4  0B0F               	andlw	15
 24407  011AF6  0900               	iorlw	0
 24408  011AF8  B4D8               	btfsc	status,2,c
 24409  011AFA  0012               	return	
 24410                           
 24411                           ; BSR set to: 13
 24412  011AFC  010D               	movlb	13	; () banked
 24413  011AFE  5134               	movf	52,w,b	;volatile
 24414  011B00  0B0F               	andlw	15
 24415  011B02  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24416  011B04  0E03               	movlw	3
 24417  011B06  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 24418  011B08  0012               	return	
 24419                           
 24420                           ; BSR set to: 13
 24421  011B0A  0E20               	movlw	32
 24422  011B0C  1845               	xorwf	_USBDeviceState,w,c	;volatile
 24423  011B0E  A4D8               	btfss	status,2,c
 24424  011B10  0012               	return	
 24425                           
 24426                           ; BSR set to: 13
 24427                           ;usb_device.c: 2817: {
 24428                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 24429  011B12  0100               	movlb	0	; () banked
 24430  011B14  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24431                           
 24432                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 24433  011B16  010D               	movlb	13	; () banked
 24434  011B18  BF34               	btfsc	52,7,b	;volatile
 24435  011B1A  D01B               	goto	i2l6151
 24436                           
 24437                           ; BSR set to: 13
 24438                           ;usb_device.c: 2824: {
 24439                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 24440  011B1C  010D               	movlb	13	; () banked
 24441  011B1E  5134               	movf	52,w,b	;volatile
 24442  011B20  0B0F               	andlw	15
 24443  011B22  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24444  011B24  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24445  011B26  0D02               	mullw	2
 24446  011B28  0E81               	movlw	low _pBDTEntryOut
 24447  011B2A  24F3               	addwf	prodl,w,c
 24448  011B2C  6ED9               	movwf	fsr2l,c
 24449  011B2E  0E00               	movlw	high _pBDTEntryOut
 24450  011B30  20F4               	addwfc	prodh,w,c
 24451  011B32  6EDA               	movwf	fsr2h,c
 24452  011B34  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 24453  011B38  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 24454                           
 24455                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 24456  011B3C  010D               	movlb	13	; () banked
 24457  011B3E  5134               	movf	52,w,b	;volatile
 24458  011B40  0B0F               	andlw	15
 24459  011B42  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24460  011B44  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24461  011B46  0D01               	mullw	1
 24462  011B48  0E8D               	movlw	low _ep_data_out
 24463  011B4A  24F3               	addwf	prodl,w,c
 24464  011B4C  6ED9               	movwf	fsr2l,c
 24465  011B4E  0E00               	movlw	high _ep_data_out
 24466  011B50  D01A               	goto	L12
 24467  011B52                     i2l6151:
 24468                           
 24469                           ; BSR set to: 13
 24470                           ;usb_device.c: 2828: else
 24471                           ;usb_device.c: 2829: {
 24472                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 24473  011B52  010D               	movlb	13	; () banked
 24474  011B54  5134               	movf	52,w,b	;volatile
 24475  011B56  0B0F               	andlw	15
 24476  011B58  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24477  011B5A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24478  011B5C  0D02               	mullw	2
 24479  011B5E  0E7B               	movlw	low _pBDTEntryIn
 24480  011B60  24F3               	addwf	prodl,w,c
 24481  011B62  6ED9               	movwf	fsr2l,c
 24482  011B64  0E00               	movlw	high _pBDTEntryIn
 24483  011B66  20F4               	addwfc	prodh,w,c
 24484  011B68  6EDA               	movwf	fsr2h,c
 24485  011B6A  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 24486  011B6E  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 24487                           
 24488                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 24489  011B72  010D               	movlb	13	; () banked
 24490  011B74  5134               	movf	52,w,b	;volatile
 24491  011B76  0B0F               	andlw	15
 24492  011B78  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24493  011B7A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24494  011B7C  0D01               	mullw	1
 24495  011B7E  0E8A               	movlw	low _ep_data_in
 24496  011B80  24F3               	addwf	prodl,w,c
 24497  011B82  6ED9               	movwf	fsr2l,c
 24498  011B84  0E00               	movlw	high _ep_data_in
 24499  011B86                     L12:
 24500  011B86  20F4               	addwfc	prodh,w,c
 24501  011B88  6EDA               	movwf	fsr2h,c
 24502  011B8A  50DF               	movf	indf2,w,c
 24503  011B8C  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 24504                           
 24505                           ; BSR set to: 13
 24506                           ;usb_device.c: 2832: }
 24507                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 24508                           
 24509                           ; BSR set to: 13
 24510  011B8E  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 24511  011B90  D002               	goto	i2l6157
 24512                           
 24513                           ; BSR set to: 13
 24514                           ;usb_device.c: 2839: {
 24515                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 24516  011B92  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 24517                           
 24518                           ;usb_device.c: 2841: }
 24519  011B94  D001               	goto	i2l6159
 24520  011B96                     i2l6157:
 24521                           
 24522                           ; BSR set to: 13
 24523                           ;usb_device.c: 2842: else
 24524                           ;usb_device.c: 2843: {
 24525                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 24526  011B96  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 24527  011B98                     i2l6159:
 24528                           
 24529                           ; BSR set to: 13
 24530                           ;usb_device.c: 2845: }
 24531                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 24532  011B98  010D               	movlb	13	; () banked
 24533  011B9A  BF34               	btfsc	52,7,b	;volatile
 24534  011B9C  D00B               	goto	i2l6163
 24535                           
 24536                           ; BSR set to: 13
 24537                           ;usb_device.c: 2851: {
 24538                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 24539  011B9E  010D               	movlb	13	; () banked
 24540  011BA0  5134               	movf	52,w,b	;volatile
 24541  011BA2  0B0F               	andlw	15
 24542  011BA4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24543  011BA6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24544  011BA8  0D02               	mullw	2
 24545  011BAA  0E81               	movlw	low _pBDTEntryOut
 24546  011BAC  24F3               	addwf	prodl,w,c
 24547  011BAE  6ED9               	movwf	fsr2l,c
 24548  011BB0  0E00               	movlw	high _pBDTEntryOut
 24549  011BB2  D00A               	goto	L13
 24550  011BB4                     i2l6163:
 24551                           
 24552                           ; BSR set to: 13
 24553                           ;usb_device.c: 2854: else
 24554                           ;usb_device.c: 2855: {
 24555                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 24556  011BB4  010D               	movlb	13	; () banked
 24557  011BB6  5134               	movf	52,w,b	;volatile
 24558  011BB8  0B0F               	andlw	15
 24559  011BBA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24560  011BBC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24561  011BBE  0D02               	mullw	2
 24562  011BC0  0E7B               	movlw	low _pBDTEntryIn
 24563  011BC2  24F3               	addwf	prodl,w,c
 24564  011BC4  6ED9               	movwf	fsr2l,c
 24565  011BC6  0E00               	movlw	high _pBDTEntryIn
 24566  011BC8                     L13:
 24567  011BC8  20F4               	addwfc	prodh,w,c
 24568  011BCA  6EDA               	movwf	fsr2h,c
 24569  011BCC  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 24570  011BD0  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 24571                           
 24572                           ; BSR set to: 13
 24573                           ;usb_device.c: 2857: }
 24574                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 24575                           
 24576                           ; BSR set to: 13
 24577  011BD4  0E03               	movlw	3
 24578  011BD6  010D               	movlb	13	; () banked
 24579  011BD8  1931               	xorwf	49,w,b	;volatile
 24580  011BDA  A4D8               	btfss	status,2,c
 24581  011BDC  D02F               	goto	i2l6179
 24582                           
 24583                           ; BSR set to: 13
 24584                           ;usb_device.c: 2861: {
 24585                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 24586  011BDE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24587  011BE2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24588  011BE6  AEDF               	btfss	indf2,7,c
 24589  011BE8  D01C               	goto	i2l6175
 24590                           
 24591                           ; BSR set to: 13
 24592                           ;usb_device.c: 2863: {
 24593                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 24594  011BEA  010D               	movlb	13	; () banked
 24595  011BEC  BF34               	btfsc	52,7,b	;volatile
 24596  011BEE  D00B               	goto	i2l6173
 24597                           
 24598                           ; BSR set to: 13
 24599                           ;usb_device.c: 2867: {
 24600                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 24601  011BF0  010D               	movlb	13	; () banked
 24602  011BF2  5134               	movf	52,w,b	;volatile
 24603  011BF4  0B0F               	andlw	15
 24604  011BF6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24605  011BF8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24606  011BFA  0D01               	mullw	1
 24607  011BFC  0E8D               	movlw	low _ep_data_out
 24608  011BFE  24F3               	addwf	prodl,w,c
 24609  011C00  6ED9               	movwf	fsr2l,c
 24610  011C02  0E00               	movlw	high _ep_data_out
 24611  011C04  D00A               	goto	L14
 24612  011C06                     i2l6173:
 24613                           
 24614                           ;usb_device.c: 2870: else
 24615                           ;usb_device.c: 2871: {
 24616                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 24617  011C06  010D               	movlb	13	; () banked
 24618  011C08  5134               	movf	52,w,b	;volatile
 24619  011C0A  0B0F               	andlw	15
 24620  011C0C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24621  011C0E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24622  011C10  0D01               	mullw	1
 24623  011C12  0E8A               	movlw	low _ep_data_in
 24624  011C14  24F3               	addwf	prodl,w,c
 24625  011C16  6ED9               	movwf	fsr2l,c
 24626  011C18  0E00               	movlw	high _ep_data_in
 24627  011C1A                     L14:
 24628  011C1A  20F4               	addwfc	prodh,w,c
 24629  011C1C  6EDA               	movwf	fsr2h,c
 24630  011C1E  0100               	movlb	0	; () banked
 24631  011C20  82DF               	bsf	indf2,1,c
 24632  011C22                     i2l6175:
 24633                           
 24634                           ;usb_device.c: 2873: }
 24635                           ;usb_device.c: 2874: }
 24636                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 24637  011C22  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24638  011C26  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24639  011C2A  0E00               	movlw	0
 24640  011C2C  84DB               	bsf	plusw2,2,c
 24641                           
 24642                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 24643  011C2E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24644  011C32  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24645  011C36  0E00               	movlw	0
 24646  011C38  8EDB               	bsf	plusw2,7,c
 24647                           
 24648                           ;usb_device.c: 2879: }
 24649  011C3A  0012               	return	
 24650  011C3C                     i2l6179:
 24651                           
 24652                           ;usb_device.c: 2880: else
 24653                           ;usb_device.c: 2881: {
 24654                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 24655  011C3C  0E04               	movlw	4
 24656  011C3E  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 24657                           
 24658                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 24659  011C40  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24660  011C44  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24661  011C48  AEDF               	btfss	indf2,7,c
 24662  011C4A  D01B               	goto	i2l6189
 24663                           
 24664                           ;usb_device.c: 2888: {
 24665                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 24666  011C4C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24667  011C50  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24668  011C54  0E7F               	movlw	127
 24669  011C56  16DF               	andwf	indf2,f,c
 24670                           
 24671                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 24672  011C58  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24673  011C5C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24674  011C60  0E00               	movlw	0
 24675  011C62  8CDB               	bsf	plusw2,6,c
 24676                           
 24677                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 24678  011C64  0E00               	movlw	0
 24679  011C66  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24680  011C68  0E05               	movlw	5
 24681  011C6A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24682  011C6C  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 24683  011C70  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 24684  011C74  0E00               	movlw	0
 24685  011C76  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24686  011C78  0E02               	movlw	2
 24687  011C7A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24688  011C7C  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24689                           
 24690                           ;usb_device.c: 2894: }
 24691  011C80  D006               	goto	i2l6191
 24692  011C82                     i2l6189:
 24693                           
 24694                           ;usb_device.c: 2895: else
 24695                           ;usb_device.c: 2896: {
 24696                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 24697  011C82  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24698  011C86  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24699  011C8A  0E00               	movlw	0
 24700  011C8C  8CDB               	bsf	plusw2,6,c
 24701  011C8E                     i2l6191:
 24702                           
 24703                           ;usb_device.c: 2899: }
 24704                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 24705  011C8E  0E04               	movlw	4
 24706  011C90  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 24707                           
 24708                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 24709  011C92  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 24710  011C94  D006               	goto	i2l1355
 24711  011C96  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24712  011C9A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24713  011C9E  AEDF               	btfss	indf2,7,c
 24714  011CA0  D031               	goto	i2l6205
 24715  011CA2                     i2l1355:
 24716                           
 24717                           ;usb_device.c: 2910: {
 24718                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 24719  011CA2  010D               	movlb	13	; () banked
 24720  011CA4  BF34               	btfsc	52,7,b	;volatile
 24721  011CA6  D00B               	goto	i2l6199
 24722                           
 24723                           ; BSR set to: 13
 24724                           ;usb_device.c: 2912: {
 24725                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 24726  011CA8  010D               	movlb	13	; () banked
 24727  011CAA  5134               	movf	52,w,b	;volatile
 24728  011CAC  0B0F               	andlw	15
 24729  011CAE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24730  011CB0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24731  011CB2  0D01               	mullw	1
 24732  011CB4  0E8D               	movlw	low _ep_data_out
 24733  011CB6  24F3               	addwf	prodl,w,c
 24734  011CB8  6ED9               	movwf	fsr2l,c
 24735  011CBA  0E00               	movlw	high _ep_data_out
 24736  011CBC  D00A               	goto	L15
 24737  011CBE                     i2l6199:
 24738                           
 24739                           ;usb_device.c: 2915: else
 24740                           ;usb_device.c: 2916: {
 24741                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 24742  011CBE  010D               	movlb	13	; () banked
 24743  011CC0  5134               	movf	52,w,b	;volatile
 24744  011CC2  0B0F               	andlw	15
 24745  011CC4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24746  011CC6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24747  011CC8  0D01               	mullw	1
 24748  011CCA  0E8A               	movlw	low _ep_data_in
 24749  011CCC  24F3               	addwf	prodl,w,c
 24750  011CCE  6ED9               	movwf	fsr2l,c
 24751  011CD0  0E00               	movlw	high _ep_data_in
 24752  011CD2                     L15:
 24753  011CD2  20F4               	addwfc	prodh,w,c
 24754  011CD4  6EDA               	movwf	fsr2h,c
 24755  011CD6  0100               	movlb	0	; () banked
 24756  011CD8  92DF               	bcf	indf2,1,c
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;usb_device.c: 2918: }
 24760                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 24761                           
 24762                           ; BSR set to: 0
 24763  011CDA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24764  011CDE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24765  011CE2  0E3B               	movlw	59
 24766  011CE4  16DF               	andwf	indf2,f,c
 24767                           
 24768                           ; BSR set to: 0
 24769                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 24770  011CE6  0E00               	movlw	0
 24771  011CE8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24772  011CEA  0E05               	movlw	5
 24773  011CEC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24774  011CEE  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 24775  011CF2  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 24776  011CF6  0E00               	movlw	0
 24777  011CF8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24778  011CFA  0E02               	movlw	2
 24779  011CFC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24780  011CFE  EC52  F0AE         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24781                           
 24782                           ;usb_device.c: 2924: }
 24783  011D02  D006               	goto	i2l6207
 24784  011D04                     i2l6205:
 24785                           
 24786                           ;usb_device.c: 2925: else
 24787                           ;usb_device.c: 2926: {
 24788                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 24789  011D04  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 24790  011D08  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 24791  011D0C  0E3B               	movlw	59
 24792  011D0E  16DF               	andwf	indf2,f,c
 24793  011D10                     i2l6207:
 24794                           
 24795                           ;usb_device.c: 2929: }
 24796                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 24797  011D10  010D               	movlb	13	; () banked
 24798  011D12  5134               	movf	52,w,b	;volatile
 24799  011D14  0B0F               	andlw	15
 24800  011D16  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 24801  011D18  5015               	movf	??_USBStdFeatureReqHandler,w,c
 24802  011D1A  0D01               	mullw	1
 24803  011D1C  0E26               	movlw	38
 24804  011D1E  24F3               	addwf	prodl,w,c
 24805  011D20  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 24806  011D22  0E0F               	movlw	15
 24807  011D24  20F4               	addwfc	prodh,w,c
 24808  011D26  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 24809                           
 24810                           ; BSR set to: 13
 24811                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 24812  011D28  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 24813  011D2C  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 24814  011D30  0EFE               	movlw	254
 24815  011D32  16DF               	andwf	indf2,f,c
 24816                           
 24817                           ; BSR set to: 13
 24818  011D34  0012               	return	
 24819  011D36                     __end_of_USBStdFeatureReqHandler:
 24820                           	opt stack 0
 24821                           pclatu	equ	0xFFB
 24822                           pclath	equ	0xFFA
 24823                           tblptru	equ	0xFF8
 24824                           tblptrh	equ	0xFF7
 24825                           tblptrl	equ	0xFF6
 24826                           tablat	equ	0xFF5
 24827                           prodh	equ	0xFF4
 24828                           prodl	equ	0xFF3
 24829                           intcon	equ	0xFF2
 24830                           intcon2	equ	0xFF1
 24831                           postinc0	equ	0xFEE
 24832                           fsr0h	equ	0xFEA
 24833                           fsr0l	equ	0xFE9
 24834                           wreg	equ	0xFE8
 24835                           indf1	equ	0xFE7
 24836                           postinc1	equ	0xFE6
 24837                           postdec1	equ	0xFE5
 24838                           fsr1h	equ	0xFE2
 24839                           fsr1l	equ	0xFE1
 24840                           indf2	equ	0xFDF
 24841                           postinc2	equ	0xFDE
 24842                           postdec2	equ	0xFDD
 24843                           plusw2	equ	0xFDB
 24844                           fsr2h	equ	0xFDA
 24845                           fsr2l	equ	0xFD9
 24846                           status	equ	0xFD8
 24847                           
 24848 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 24849 ;; Defined at:
 24850 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 24851 ;; Parameters:    Size  Location     Type
 24852 ;;  event           2   12[COMRAM] enum E8545
 24853 ;;  pdata           2   14[COMRAM] PTR void 
 24854 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 24855 ;;  size            2   16[COMRAM] unsigned int 
 24856 ;; Auto vars:     Size  Location     Type
 24857 ;;		None
 24858 ;; Return value:  Size  Location     Type
 24859 ;;                  1    wreg      unsigned char 
 24860 ;; Registers used:
 24861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24862 ;; Tracked objects:
 24863 ;;		On entry : 0/0
 24864 ;;		On exit  : 0/0
 24865 ;;		Unchanged: 0/0
 24866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24867 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24870 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24871 ;;Total ram usage:        8 bytes
 24872 ;; Hardware stack levels used:    1
 24873 ;; Hardware stack levels required when called:    3
 24874 ;; This function calls:
 24875 ;;		_CDCInitEP
 24876 ;;		_USBCheckCDCRequest
 24877 ;; This function is called by:
 24878 ;;		_USBDeviceTasks
 24879 ;;		_USBStdSetCfgHandler
 24880 ;;		_USBSuspend
 24881 ;;		_USBWakeFromSuspend
 24882 ;;		_USBCtrlTrfSetupHandler
 24883 ;;		_USBCheckStdRequest
 24884 ;;		_USBStdFeatureReqHandler
 24885 ;; This function uses a non-reentrant model
 24886 ;;
 24887                           
 24888                           	psect	text117
 24889  015CA4                     __ptext117:
 24890                           	opt stack 0
 24891  015CA4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 24892                           	opt stack 16
 24893                           
 24894                           ;My_usb_cdc.c: 40: switch ((int) event) {
 24895                           
 24896                           ;incstack = 0
 24897  015CA4  D006               	goto	i2l5689
 24898  015CA6                     i2l5683:
 24899                           
 24900                           ;My_usb_cdc.c: 42: CDCInitEP();
 24901  015CA6  EC7B  F0A9         	call	_CDCInitEP	;wreg free
 24902                           
 24903                           ;My_usb_cdc.c: 43: break;
 24904  015CAA  0012               	return	
 24905  015CAC                     i2l5685:
 24906                           
 24907                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 24908  015CAC  EC25  F09E         	call	_USBCheckCDCRequest	;wreg free
 24909                           
 24910                           ;My_usb_cdc.c: 47: }
 24911                           
 24912                           ;My_usb_cdc.c: 46: break;
 24913  015CB0  0012               	return	
 24914  015CB2                     i2l5689:
 24915  015CB2  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 24916  015CB6  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 24917                           
 24918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24919                           ; Switch size 1, requested type "space"
 24920                           ; Number of cases is 1, Range of values is 0 to 0
 24921                           ; switch strategies available:
 24922                           ; Name         Instructions Cycles
 24923                           ; simple_byte            4     3 (average)
 24924                           ;	Chosen strategy is simple_byte
 24925  015CBA  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 24926  015CBC  0A00               	xorlw	0	; case 0
 24927  015CBE  A4D8               	btfss	status,2,c
 24928  015CC0  0012               	return	
 24929                           
 24930                           ; Switch size 1, requested type "space"
 24931                           ; Number of cases is 2, Range of values is 1 to 3
 24932                           ; switch strategies available:
 24933                           ; Name         Instructions Cycles
 24934                           ; simple_byte            7     4 (average)
 24935                           ;	Chosen strategy is simple_byte
 24936  015CC2  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 24937  015CC4  0A01               	xorlw	1	; case 1
 24938  015CC6  B4D8               	btfsc	status,2,c
 24939  015CC8  D7EE               	goto	i2l5683
 24940  015CCA  0A02               	xorlw	2	; case 3
 24941  015CCC  A4D8               	btfss	status,2,c
 24942  015CCE  0012               	return	
 24943  015CD0  D7ED               	goto	i2l5685
 24944  015CD2                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 24945                           	opt stack 0
 24946                           pclatu	equ	0xFFB
 24947                           pclath	equ	0xFFA
 24948                           tblptru	equ	0xFF8
 24949                           tblptrh	equ	0xFF7
 24950                           tblptrl	equ	0xFF6
 24951                           tablat	equ	0xFF5
 24952                           prodh	equ	0xFF4
 24953                           prodl	equ	0xFF3
 24954                           intcon	equ	0xFF2
 24955                           intcon2	equ	0xFF1
 24956                           postinc0	equ	0xFEE
 24957                           fsr0h	equ	0xFEA
 24958                           fsr0l	equ	0xFE9
 24959                           wreg	equ	0xFE8
 24960                           indf1	equ	0xFE7
 24961                           postinc1	equ	0xFE6
 24962                           postdec1	equ	0xFE5
 24963                           fsr1h	equ	0xFE2
 24964                           fsr1l	equ	0xFE1
 24965                           indf2	equ	0xFDF
 24966                           postinc2	equ	0xFDE
 24967                           postdec2	equ	0xFDD
 24968                           plusw2	equ	0xFDB
 24969                           fsr2h	equ	0xFDA
 24970                           fsr2l	equ	0xFD9
 24971                           status	equ	0xFD8
 24972                           
 24973 ;; *************** function _USBCheckCDCRequest *****************
 24974 ;; Defined at:
 24975 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 24976 ;; Parameters:    Size  Location     Type
 24977 ;;		None
 24978 ;; Auto vars:     Size  Location     Type
 24979 ;;		None
 24980 ;; Return value:  Size  Location     Type
 24981 ;;		None               void
 24982 ;; Registers used:
 24983 ;;		wreg, status,2, status,0
 24984 ;; Tracked objects:
 24985 ;;		On entry : 0/0
 24986 ;;		On exit  : 0/0
 24987 ;;		Unchanged: 0/0
 24988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24993 ;;Total ram usage:        0 bytes
 24994 ;; Hardware stack levels used:    1
 24995 ;; This function calls:
 24996 ;;		Nothing
 24997 ;; This function is called by:
 24998 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24999 ;; This function uses a non-reentrant model
 25000 ;;
 25001                           
 25002                           	psect	text118
 25003  013C4A                     __ptext118:
 25004                           	opt stack 0
 25005  013C4A                     _USBCheckCDCRequest:
 25006                           	opt stack 18
 25007                           
 25008                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 25009                           
 25010                           ;incstack = 0
 25011  013C4A  010D               	movlb	13	; () banked
 25012  013C4C  5130               	movf	48,w,b	;volatile
 25013  013C4E  0B1F               	andlw	31
 25014  013C50  06E8               	decf	wreg,f,c
 25015  013C52  A4D8               	btfss	status,2,c
 25016  013C54  0012               	return	
 25017                           
 25018                           ; BSR set to: 13
 25019                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 25020                           
 25021                           ; BSR set to: 13
 25022                           
 25023                           ; BSR set to: 13
 25024  013C56  010D               	movlb	13	; () banked
 25025  013C58  3930               	swapf	48,w,b	;volatile
 25026  013C5A  32E8               	rrcf	wreg,f,c
 25027  013C5C  0B03               	andlw	3
 25028  013C5E  06E8               	decf	wreg,f,c
 25029  013C60  A4D8               	btfss	status,2,c
 25030  013C62  0012               	return	
 25031                           
 25032                           ; BSR set to: 13
 25033                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 25034                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 25035                           
 25036                           ; BSR set to: 13
 25037                           
 25038                           ; BSR set to: 13
 25039  013C64  010D               	movlb	13	; () banked
 25040  013C66  5134               	movf	52,w,b	;volatile
 25041  013C68  B4D8               	btfsc	status,2,c
 25042  013C6A  D048               	goto	i2l5665
 25043                           
 25044                           ; BSR set to: 13
 25045  013C6C  010D               	movlb	13	; () banked
 25046  013C6E  0534               	decf	52,w,b	;volatile
 25047  013C70  A4D8               	btfss	status,2,c
 25048  013C72  0012               	return	
 25049  013C74  D043               	goto	i2l5665
 25050  013C76                     i2l5641:
 25051                           
 25052                           ; BSR set to: 13
 25053                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 25054  013C76  0EC2               	movlw	low _dummy_encapsulated_cmd_response
 25055  013C78  0100               	movlb	0	; () banked
 25056  013C7A  6F75               	movwf	_inPipes& (0+255),b	;volatile
 25057  013C7C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 25058  013C7E  0100               	movlb	0	; () banked
 25059  013C80  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25060                           
 25061                           ; BSR set to: 0
 25062                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 25063  013C82  0E00               	movlw	0
 25064  013C84  0100               	movlb	0	; () banked
 25065  013C86  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25066  013C88  0E08               	movlw	8
 25067  013C8A  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25071  013C8C  0100               	movlb	0	; () banked
 25072  013C8E  8178               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25073                           
 25074                           ; BSR set to: 0
 25075                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 25076  013C90  0100               	movlb	0	; () banked
 25077  013C92  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25078                           
 25079                           ;usb_device_cdc.c: 232: break;
 25080  013C94  0012               	return	
 25081  013C96                     i2l5649:
 25082                           
 25083                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 25084  013C96  0EC2               	movlw	low _dummy_encapsulated_cmd_response
 25085  013C98  0100               	movlb	0	; () banked
 25086  013C9A  6F75               	movwf	_inPipes& (0+255),b	;volatile
 25087  013C9C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 25088  013C9E  0100               	movlb	0	; () banked
 25089  013CA0  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25090                           
 25091                           ; BSR set to: 0
 25092                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 25093  013CA2  0100               	movlb	0	; () banked
 25094  013CA4  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25095                           
 25096                           ;usb_device_cdc.c: 237: break;
 25097  013CA6  0012               	return	
 25098  013CA8                     i2l1412:
 25099                           
 25100                           ; BSR set to: 13
 25101                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 25102  013CA8  CD36 F070          	movff	3382,_outPipes+4	;volatile
 25103  013CAC  CD37 F071          	movff	3383,_outPipes+5	;volatile
 25104                           
 25105                           ; BSR set to: 13
 25106                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 25107  013CB0  0EE2               	movlw	low _line_coding
 25108  013CB2  0100               	movlb	0	; () banked
 25109  013CB4  6F6C               	movwf	_outPipes& (0+255),b	;volatile
 25110  013CB6  0E03               	movlw	high _line_coding
 25111  013CB8  0100               	movlb	0	; () banked
 25112  013CBA  6F6D               	movwf	(_outPipes+1)& (0+255),b	;volatile
 25113                           
 25114                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 25115  013CBC  0E00               	movlw	0
 25116  013CBE  0100               	movlb	0	; () banked
 25117  013CC0  6F72               	movwf	(_outPipes+6)& (0+255),b	;volatile
 25118  013CC2  0E00               	movlw	0
 25119  013CC4  0100               	movlb	0	; () banked
 25120  013CC6  6F73               	movwf	(_outPipes+7)& (0+255),b	;volatile
 25121  013CC8  0E00               	movlw	0
 25122  013CCA  0100               	movlb	0	; () banked
 25123  013CCC  6F74               	movwf	(_outPipes+8)& (0+255),b	;volatile
 25124                           
 25125                           ; BSR set to: 0
 25126                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 25127  013CCE  0100               	movlb	0	; () banked
 25128  013CD0  8F6F               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 25129                           
 25130                           ;usb_device_cdc.c: 246: break;
 25131  013CD2  0012               	return	
 25132  013CD4                     i2l5657:
 25133                           
 25134                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 25135  013CD4  0EE2               	movlw	low _line_coding
 25136  013CD6  0100               	movlb	0	; () banked
 25137  013CD8  6F75               	movwf	_inPipes& (0+255),b	;volatile
 25138  013CDA  0E03               	movlw	high _line_coding
 25139  013CDC  0100               	movlb	0	; () banked
 25140  013CDE  6F76               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25141                           
 25142                           ; BSR set to: 0
 25143  013CE0  0E00               	movlw	0
 25144  013CE2  0100               	movlb	0	; () banked
 25145  013CE4  6F7A               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25146  013CE6  0E07               	movlw	7
 25147  013CE8  6F79               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25148                           
 25149                           ; BSR set to: 0
 25150  013CEA  0EC1               	movlw	193
 25151  013CEC  0100               	movlb	0	; () banked
 25152  013CEE  6F78               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25153                           
 25154                           ;usb_device_cdc.c: 253: break;
 25155  013CF0  0012               	return	
 25156  013CF2                     i2l1414:
 25157                           
 25158                           ; BSR set to: 13
 25159                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 25160  013CF2  CD32 F04A          	movff	3378,_control_signal_bitmap	;volatile
 25161                           
 25162                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 25163  013CF6  0100               	movlb	0	; () banked
 25164  013CF8  8F78               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;usb_device_cdc.c: 315: }
 25168                           
 25169                           ; BSR set to: 0
 25170                           ;usb_device_cdc.c: 314: break;
 25171                           
 25172                           ;usb_device_cdc.c: 313: default:
 25173                           
 25174                           ;usb_device_cdc.c: 289: break;
 25175  013CFA  0012               	return	
 25176  013CFC                     i2l5665:
 25177  013CFC  010D               	movlb	13	; () banked
 25178  013CFE  5131               	movf	49,w,b	;volatile
 25179                           
 25180                           ; Switch size 1, requested type "space"
 25181                           ; Number of cases is 5, Range of values is 0 to 34
 25182                           ; switch strategies available:
 25183                           ; Name         Instructions Cycles
 25184                           ; simple_byte           16     9 (average)
 25185                           ;	Chosen strategy is simple_byte
 25186  013D00  0A00               	xorlw	0	; case 0
 25187  013D02  B4D8               	btfsc	status,2,c
 25188  013D04  D7B8               	goto	i2l5641
 25189  013D06  0A01               	xorlw	1	; case 1
 25190  013D08  B4D8               	btfsc	status,2,c
 25191  013D0A  D7C5               	goto	i2l5649
 25192  013D0C  0A21               	xorlw	33	; case 32
 25193  013D0E  B4D8               	btfsc	status,2,c
 25194  013D10  D7CB               	goto	i2l1412
 25195  013D12  0A01               	xorlw	1	; case 33
 25196  013D14  B4D8               	btfsc	status,2,c
 25197  013D16  D7DE               	goto	i2l5657
 25198  013D18  0A03               	xorlw	3	; case 34
 25199  013D1A  A4D8               	btfss	status,2,c
 25200  013D1C  0012               	return	
 25201  013D1E  D7E9               	goto	i2l1414
 25202  013D20                     __end_of_USBCheckCDCRequest:
 25203                           	opt stack 0
 25204                           pclatu	equ	0xFFB
 25205                           pclath	equ	0xFFA
 25206                           tblptru	equ	0xFF8
 25207                           tblptrh	equ	0xFF7
 25208                           tblptrl	equ	0xFF6
 25209                           tablat	equ	0xFF5
 25210                           prodh	equ	0xFF4
 25211                           prodl	equ	0xFF3
 25212                           intcon	equ	0xFF2
 25213                           intcon2	equ	0xFF1
 25214                           postinc0	equ	0xFEE
 25215                           fsr0h	equ	0xFEA
 25216                           fsr0l	equ	0xFE9
 25217                           wreg	equ	0xFE8
 25218                           indf1	equ	0xFE7
 25219                           postinc1	equ	0xFE6
 25220                           postdec1	equ	0xFE5
 25221                           fsr1h	equ	0xFE2
 25222                           fsr1l	equ	0xFE1
 25223                           indf2	equ	0xFDF
 25224                           postinc2	equ	0xFDE
 25225                           postdec2	equ	0xFDD
 25226                           plusw2	equ	0xFDB
 25227                           fsr2h	equ	0xFDA
 25228                           fsr2l	equ	0xFD9
 25229                           status	equ	0xFD8
 25230                           
 25231 ;; *************** function _CDCInitEP *****************
 25232 ;; Defined at:
 25233 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 25234 ;; Parameters:    Size  Location     Type
 25235 ;;		None
 25236 ;; Auto vars:     Size  Location     Type
 25237 ;;		None
 25238 ;; Return value:  Size  Location     Type
 25239 ;;		None               void
 25240 ;; Registers used:
 25241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25242 ;; Tracked objects:
 25243 ;;		On entry : 0/0
 25244 ;;		On exit  : 0/0
 25245 ;;		Unchanged: 0/0
 25246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25251 ;;Total ram usage:        0 bytes
 25252 ;; Hardware stack levels used:    1
 25253 ;; Hardware stack levels required when called:    2
 25254 ;; This function calls:
 25255 ;;		_USBEnableEndpoint
 25256 ;;		i2_USBTransferOnePacket
 25257 ;; This function is called by:
 25258 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25259 ;; This function uses a non-reentrant model
 25260 ;;
 25261                           
 25262                           	psect	text119
 25263  0152F6                     __ptext119:
 25264                           	opt stack 0
 25265  0152F6                     _CDCInitEP:
 25266                           	opt stack 16
 25267                           
 25268                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 25269                           
 25270                           ;incstack = 0
 25271  0152F6  0E00               	movlw	0
 25272  0152F8  0103               	movlb	3	; () banked
 25273  0152FA  6FE2               	movwf	_line_coding& (0+255),b
 25274  0152FC  0E4B               	movlw	75
 25275  0152FE  6FE3               	movwf	(_line_coding+1)& (0+255),b
 25276  015300  0E00               	movlw	0
 25277  015302  6FE4               	movwf	(_line_coding+2)& (0+255),b
 25278  015304  0E00               	movlw	0
 25279  015306  6FE5               	movwf	(_line_coding+3)& (0+255),b
 25280                           
 25281                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 25282  015308  0E00               	movlw	0
 25283  01530A  0103               	movlb	3	; () banked
 25284  01530C  6FE6               	movwf	(_line_coding+4)& (0+255),b
 25285                           
 25286                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 25287  01530E  0E00               	movlw	0
 25288  015310  0103               	movlb	3	; () banked
 25289  015312  6FE7               	movwf	(_line_coding+5)& (0+255),b
 25290                           
 25291                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 25292  015314  0E08               	movlw	8
 25293  015316  0103               	movlb	3	; () banked
 25294  015318  6FE8               	movwf	(_line_coding+6)& (0+255),b
 25295                           
 25296                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 25297  01531A  0E00               	movlw	0
 25298  01531C  0100               	movlb	0	; () banked
 25299  01531E  6FA3               	movwf	_cdc_rx_len& (0+255),b
 25300                           
 25301                           ; BSR set to: 0
 25302                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 25303  015320  0E1A               	movlw	26
 25304  015322  6E09               	movwf	USBEnableEndpoint@options,c
 25305  015324  0E01               	movlw	1
 25306  015326  EC14  F0AD         	call	_USBEnableEndpoint
 25307                           
 25308                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 25309  01532A  0E1E               	movlw	30
 25310  01532C  6E09               	movwf	USBEnableEndpoint@options,c
 25311  01532E  0E02               	movlw	2
 25312  015330  EC14  F0AD         	call	_USBEnableEndpoint
 25313                           
 25314                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 25315  015334  0E00               	movlw	0
 25316  015336  6E01               	movwf	i2USBTransferOnePacket@dir,c
 25317  015338  0E42               	movlw	low _cdc_data_rx
 25318  01533A  6E02               	movwf	i2USBTransferOnePacket@data,c
 25319  01533C  0E03               	movlw	high _cdc_data_rx
 25320  01533E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 25321  015340  0E40               	movlw	64
 25322  015342  6E04               	movwf	i2USBTransferOnePacket@len,c
 25323  015344  0E02               	movlw	2
 25324  015346  ECD8  F0A2         	call	i2_USBTransferOnePacket
 25325  01534A  C001  F098         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 25326  01534E  C002  F099         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 25327                           
 25328                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 25329  015352  0E00               	movlw	0
 25330  015354  0100               	movlb	0	; () banked
 25331  015356  6F96               	movwf	_CDCDataInHandle& (0+255),b
 25332  015358  0E00               	movlw	0
 25333  01535A  0100               	movlb	0	; () banked
 25334  01535C  6F97               	movwf	(_CDCDataInHandle+1)& (0+255),b
 25335                           
 25336                           ; BSR set to: 0
 25337                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 25338  01535E  0E00               	movlw	0
 25339  015360  0100               	movlb	0	; () banked
 25340  015362  6FA4               	movwf	_cdc_trf_state& (0+255),b
 25341                           
 25342                           ; BSR set to: 0
 25343  015364  0012               	return		;funcret
 25344  015366                     __end_of_CDCInitEP:
 25345                           	opt stack 0
 25346                           pclatu	equ	0xFFB
 25347                           pclath	equ	0xFFA
 25348                           tblptru	equ	0xFF8
 25349                           tblptrh	equ	0xFF7
 25350                           tblptrl	equ	0xFF6
 25351                           tablat	equ	0xFF5
 25352                           prodh	equ	0xFF4
 25353                           prodl	equ	0xFF3
 25354                           intcon	equ	0xFF2
 25355                           intcon2	equ	0xFF1
 25356                           postinc0	equ	0xFEE
 25357                           fsr0h	equ	0xFEA
 25358                           fsr0l	equ	0xFE9
 25359                           wreg	equ	0xFE8
 25360                           indf1	equ	0xFE7
 25361                           postinc1	equ	0xFE6
 25362                           postdec1	equ	0xFE5
 25363                           fsr1h	equ	0xFE2
 25364                           fsr1l	equ	0xFE1
 25365                           indf2	equ	0xFDF
 25366                           postinc2	equ	0xFDE
 25367                           postdec2	equ	0xFDD
 25368                           plusw2	equ	0xFDB
 25369                           fsr2h	equ	0xFDA
 25370                           fsr2l	equ	0xFD9
 25371                           status	equ	0xFD8
 25372                           
 25373 ;; *************** function i2_USBTransferOnePacket *****************
 25374 ;; Defined at:
 25375 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 25376 ;; Parameters:    Size  Location     Type
 25377 ;;  ep              1    wreg     unsigned char 
 25378 ;;  dir             1    0[COMRAM] unsigned char 
 25379 ;;  data            2    1[COMRAM] PTR unsigned char 
 25380 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 25381 ;;  len             1    3[COMRAM] unsigned char 
 25382 ;; Auto vars:     Size  Location     Type
 25383 ;;  ep              1    4[COMRAM] unsigned char 
 25384 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 25385 ;;		 -> NULL(0), BDT(48), 
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  2    0[COMRAM] PTR void 
 25388 ;; Registers used:
 25389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25396 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25399 ;;Total ram usage:        7 bytes
 25400 ;; Hardware stack levels used:    1
 25401 ;; This function calls:
 25402 ;;		Nothing
 25403 ;; This function is called by:
 25404 ;;		_CDCInitEP
 25405 ;; This function uses a non-reentrant model
 25406 ;;
 25407                           
 25408                           	psect	text120
 25409  0145B0                     __ptext120:
 25410                           	opt stack 0
 25411  0145B0                     i2_USBTransferOnePacket:
 25412                           	opt stack 17
 25413                           
 25414                           ; BSR set to: 0
 25415                           ;incstack = 0
 25416                           ;i2USBTransferOnePacket@ep stored from wreg
 25417  0145B0  6E05               	movwf	i2USBTransferOnePacket@ep,c
 25418                           
 25419                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 25420                           ;usb_device.c: 1000: if(dir != 0)
 25421  0145B2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 25422  0145B4  B4D8               	btfsc	status,2,c
 25423  0145B6  D007               	goto	i2l5577
 25424                           
 25425                           ;usb_device.c: 1001: {
 25426                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 25427  0145B8  5005               	movf	i2USBTransferOnePacket@ep,w,c
 25428  0145BA  0D02               	mullw	2
 25429  0145BC  0E7B               	movlw	low _pBDTEntryIn
 25430  0145BE  24F3               	addwf	prodl,w,c
 25431  0145C0  6ED9               	movwf	fsr2l,c
 25432  0145C2  0E00               	movlw	high _pBDTEntryIn
 25433  0145C4  D006               	goto	L16
 25434  0145C6                     i2l5577:
 25435                           
 25436                           ;usb_device.c: 1005: else
 25437                           ;usb_device.c: 1006: {
 25438                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 25439  0145C6  5005               	movf	i2USBTransferOnePacket@ep,w,c
 25440  0145C8  0D02               	mullw	2
 25441  0145CA  0E81               	movlw	low _pBDTEntryOut
 25442  0145CC  24F3               	addwf	prodl,w,c
 25443  0145CE  6ED9               	movwf	fsr2l,c
 25444  0145D0  0E00               	movlw	high _pBDTEntryOut
 25445  0145D2                     L16:
 25446  0145D2  20F4               	addwfc	prodh,w,c
 25447  0145D4  6EDA               	movwf	fsr2h,c
 25448  0145D6  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 25449  0145DA  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 25450                           
 25451                           ;usb_device.c: 1009: }
 25452                           ;usb_device.c: 1013: if(handle == 0)
 25453  0145DE  5006               	movf	i2USBTransferOnePacket@handle,w,c
 25454  0145E0  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 25455  0145E2  A4D8               	btfss	status,2,c
 25456  0145E4  D005               	goto	i2l5585
 25457                           
 25458                           ;usb_device.c: 1014: {
 25459                           ;usb_device.c: 1015: return 0;
 25460  0145E6  0E00               	movlw	0
 25461  0145E8  6E01               	movwf	?i2_USBTransferOnePacket,c
 25462  0145EA  0E00               	movlw	0
 25463  0145EC  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 25464  0145EE  0012               	return	
 25465  0145F0                     i2l5585:
 25466                           
 25467                           ;usb_device.c: 1016: }
 25468                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 25469  0145F0  EE20 F002          	lfsr	2,2
 25470  0145F4  5006               	movf	i2USBTransferOnePacket@handle,w,c
 25471  0145F6  26D9               	addwf	fsr2l,f,c
 25472  0145F8  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 25473  0145FA  22DA               	addwfc	fsr2h,f,c
 25474  0145FC  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 25475  014600  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 25476                           
 25477                           ;usb_device.c: 1030: handle->CNT = len;
 25478  014604  EE20 F001          	lfsr	2,1
 25479  014608  5006               	movf	i2USBTransferOnePacket@handle,w,c
 25480  01460A  26D9               	addwf	fsr2l,f,c
 25481  01460C  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 25482  01460E  22DA               	addwfc	fsr2h,f,c
 25483  014610  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 25484                           
 25485                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 25486  014614  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 25487  014618  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 25488  01461C  0E40               	movlw	64
 25489  01461E  16DF               	andwf	indf2,f,c
 25490                           
 25491                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 25492  014620  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 25493  014624  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 25494  014628  0E00               	movlw	0
 25495  01462A  86DB               	bsf	plusw2,3,c
 25496                           
 25497                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 25498  01462C  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 25499  014630  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 25500  014634  0E00               	movlw	0
 25501  014636  8EDB               	bsf	plusw2,7,c
 25502                           
 25503                           ;usb_device.c: 1036: if(dir != 0)
 25504  014638  5001               	movf	i2USBTransferOnePacket@dir,w,c
 25505  01463A  B4D8               	btfsc	status,2,c
 25506  01463C  D007               	goto	i2l5597
 25507                           
 25508                           ;usb_device.c: 1037: {
 25509                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 25510  01463E  5005               	movf	i2USBTransferOnePacket@ep,w,c
 25511  014640  0D02               	mullw	2
 25512  014642  0E7B               	movlw	low _pBDTEntryIn
 25513  014644  24F3               	addwf	prodl,w,c
 25514  014646  6ED9               	movwf	fsr2l,c
 25515  014648  0E00               	movlw	high _pBDTEntryIn
 25516  01464A  D006               	goto	L17
 25517  01464C                     i2l5597:
 25518                           
 25519                           ;usb_device.c: 1041: else
 25520                           ;usb_device.c: 1042: {
 25521                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 25522  01464C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 25523  01464E  0D02               	mullw	2
 25524  014650  0E81               	movlw	low _pBDTEntryOut
 25525  014652  24F3               	addwf	prodl,w,c
 25526  014654  6ED9               	movwf	fsr2l,c
 25527  014656  0E00               	movlw	high _pBDTEntryOut
 25528  014658                     L17:
 25529  014658  20F4               	addwfc	prodh,w,c
 25530  01465A  6EDA               	movwf	fsr2h,c
 25531  01465C  0E04               	movlw	4
 25532  01465E  1ADF               	xorwf	indf2,f,c
 25533                           
 25534                           ;usb_device.c: 1045: }
 25535                           ;usb_device.c: 1046: return (void*)handle;
 25536  014660  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 25537  014664  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 25538  014668  0012               	return	
 25539  01466A                     __end_ofi2_USBTransferOnePacket:
 25540                           	opt stack 0
 25541                           pclatu	equ	0xFFB
 25542                           pclath	equ	0xFFA
 25543                           tblptru	equ	0xFF8
 25544                           tblptrh	equ	0xFF7
 25545                           tblptrl	equ	0xFF6
 25546                           tablat	equ	0xFF5
 25547                           prodh	equ	0xFF4
 25548                           prodl	equ	0xFF3
 25549                           intcon	equ	0xFF2
 25550                           intcon2	equ	0xFF1
 25551                           postinc0	equ	0xFEE
 25552                           fsr0h	equ	0xFEA
 25553                           fsr0l	equ	0xFE9
 25554                           wreg	equ	0xFE8
 25555                           indf1	equ	0xFE7
 25556                           postinc1	equ	0xFE6
 25557                           postdec1	equ	0xFE5
 25558                           fsr1h	equ	0xFE2
 25559                           fsr1l	equ	0xFE1
 25560                           indf2	equ	0xFDF
 25561                           postinc2	equ	0xFDE
 25562                           postdec2	equ	0xFDD
 25563                           plusw2	equ	0xFDB
 25564                           fsr2h	equ	0xFDA
 25565                           fsr2l	equ	0xFD9
 25566                           status	equ	0xFD8
 25567                           
 25568 ;; *************** function _USBEnableEndpoint *****************
 25569 ;; Defined at:
 25570 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 25571 ;; Parameters:    Size  Location     Type
 25572 ;;  ep              1    wreg     unsigned char 
 25573 ;;  options         1    8[COMRAM] unsigned char 
 25574 ;; Auto vars:     Size  Location     Type
 25575 ;;  ep              1   11[COMRAM] unsigned char 
 25576 ;;  p               2    9[COMRAM] PTR unsigned char 
 25577 ;;		 -> UEP0(1), 
 25578 ;; Return value:  Size  Location     Type
 25579 ;;		None               void
 25580 ;; Registers used:
 25581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25582 ;; Tracked objects:
 25583 ;;		On entry : 0/0
 25584 ;;		On exit  : 0/0
 25585 ;;		Unchanged: 0/0
 25586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25588 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25591 ;;Total ram usage:        4 bytes
 25592 ;; Hardware stack levels used:    1
 25593 ;; Hardware stack levels required when called:    1
 25594 ;; This function calls:
 25595 ;;		_USBConfigureEndpoint
 25596 ;; This function is called by:
 25597 ;;		_CDCInitEP
 25598 ;; This function uses a non-reentrant model
 25599 ;;
 25600                           
 25601                           	psect	text121
 25602  015A28                     __ptext121:
 25603                           	opt stack 0
 25604  015A28                     _USBEnableEndpoint:
 25605                           	opt stack 16
 25606                           
 25607                           ;incstack = 0
 25608                           ;USBEnableEndpoint@ep stored from wreg
 25609  015A28  6E0C               	movwf	USBEnableEndpoint@ep,c
 25610                           
 25611                           ;usb_device.c: 880: unsigned char* p;
 25612                           ;usb_device.c: 884: if(options & 0x04)
 25613  015A2A  A409               	btfss	USBEnableEndpoint@options,2,c
 25614  015A2C  D005               	goto	i2l5565
 25615                           
 25616                           ;usb_device.c: 885: {
 25617                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 25618  015A2E  0E00               	movlw	0
 25619  015A30  6E01               	movwf	USBConfigureEndpoint@direction,c
 25620  015A32  500C               	movf	USBEnableEndpoint@ep,w,c
 25621  015A34  EC65  F0A6         	call	_USBConfigureEndpoint
 25622  015A38                     i2l5565:
 25623                           
 25624                           ;usb_device.c: 887: }
 25625                           ;usb_device.c: 888: if(options & 0x02)
 25626  015A38  A209               	btfss	USBEnableEndpoint@options,1,c
 25627  015A3A  D005               	goto	i2l5569
 25628                           
 25629                           ;usb_device.c: 889: {
 25630                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 25631  015A3C  0E01               	movlw	1
 25632  015A3E  6E01               	movwf	USBConfigureEndpoint@direction,c
 25633  015A40  500C               	movf	USBEnableEndpoint@ep,w,c
 25634  015A42  EC65  F0A6         	call	_USBConfigureEndpoint
 25635  015A46                     i2l5569:
 25636                           
 25637                           ;usb_device.c: 891: }
 25638                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 25639  015A46  500C               	movf	USBEnableEndpoint@ep,w,c
 25640  015A48  0D01               	mullw	1
 25641  015A4A  0E26               	movlw	38
 25642  015A4C  24F3               	addwf	prodl,w,c
 25643  015A4E  6E0A               	movwf	USBEnableEndpoint@p,c
 25644  015A50  0E0F               	movlw	15
 25645  015A52  20F4               	addwfc	prodh,w,c
 25646  015A54  6E0B               	movwf	USBEnableEndpoint@p+1,c
 25647                           
 25648                           ;usb_device.c: 901: *p = options;
 25649  015A56  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 25650  015A5A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 25651  015A5E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 25652  015A62  0012               	return		;funcret
 25653  015A64                     __end_of_USBEnableEndpoint:
 25654                           	opt stack 0
 25655                           pclatu	equ	0xFFB
 25656                           pclath	equ	0xFFA
 25657                           tblptru	equ	0xFF8
 25658                           tblptrh	equ	0xFF7
 25659                           tblptrl	equ	0xFF6
 25660                           tablat	equ	0xFF5
 25661                           prodh	equ	0xFF4
 25662                           prodl	equ	0xFF3
 25663                           intcon	equ	0xFF2
 25664                           intcon2	equ	0xFF1
 25665                           postinc0	equ	0xFEE
 25666                           fsr0h	equ	0xFEA
 25667                           fsr0l	equ	0xFE9
 25668                           wreg	equ	0xFE8
 25669                           indf1	equ	0xFE7
 25670                           postinc1	equ	0xFE6
 25671                           postdec1	equ	0xFE5
 25672                           fsr1h	equ	0xFE2
 25673                           fsr1l	equ	0xFE1
 25674                           indf2	equ	0xFDF
 25675                           postinc2	equ	0xFDE
 25676                           postdec2	equ	0xFDD
 25677                           plusw2	equ	0xFDB
 25678                           fsr2h	equ	0xFDA
 25679                           fsr2l	equ	0xFD9
 25680                           status	equ	0xFD8
 25681                           
 25682 ;; *************** function _USBConfigureEndpoint *****************
 25683 ;; Defined at:
 25684 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 25685 ;; Parameters:    Size  Location     Type
 25686 ;;  EPNum           1    wreg     unsigned char 
 25687 ;;  direction       1    0[COMRAM] unsigned char 
 25688 ;; Auto vars:     Size  Location     Type
 25689 ;;  EPNum           1    5[COMRAM] unsigned char 
 25690 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 25691 ;;		 -> BDT(48), 
 25692 ;; Return value:  Size  Location     Type
 25693 ;;		None               void
 25694 ;; Registers used:
 25695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25696 ;; Tracked objects:
 25697 ;;		On entry : 0/0
 25698 ;;		On exit  : 0/0
 25699 ;;		Unchanged: 0/0
 25700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25701 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25702 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25703 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25705 ;;Total ram usage:        8 bytes
 25706 ;; Hardware stack levels used:    1
 25707 ;; This function calls:
 25708 ;;		Nothing
 25709 ;; This function is called by:
 25710 ;;		_USBEnableEndpoint
 25711 ;; This function uses a non-reentrant model
 25712 ;;
 25713                           
 25714                           	psect	text122
 25715  014CCA                     __ptext122:
 25716                           	opt stack 0
 25717  014CCA                     _USBConfigureEndpoint:
 25718                           	opt stack 16
 25719                           
 25720                           ;incstack = 0
 25721                           ;USBConfigureEndpoint@EPNum stored from wreg
 25722  014CCA  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 25723                           
 25724                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 25725                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 25726  014CCC  0E00               	movlw	0
 25727  014CCE  6E07               	movwf	USBConfigureEndpoint@handle,c
 25728  014CD0  0E0D               	movlw	13
 25729  014CD2  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 25730                           
 25731                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 25732  014CD4  5001               	movf	USBConfigureEndpoint@direction,w,c
 25733  014CD6  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 25734  014CD8  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 25735  014CDA  90D8               	bcf	status,0,c
 25736  014CDC  3602               	rlcf	??_USBConfigureEndpoint,f,c
 25737  014CDE  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 25738  014CE0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 25739  014CE2  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 25740  014CE4  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 25741  014CE6  90D8               	bcf	status,0,c
 25742  014CE8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25743  014CEA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25744  014CEC  90D8               	bcf	status,0,c
 25745  014CEE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25746  014CF0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25747  014CF2  5002               	movf	??_USBConfigureEndpoint,w,c
 25748  014CF4  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 25749  014CF6  5003               	movf	??_USBConfigureEndpoint+1,w,c
 25750  014CF8  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 25751  014CFA  90D8               	bcf	status,0,c
 25752  014CFC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25753  014CFE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25754  014D00  90D8               	bcf	status,0,c
 25755  014D02  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25756  014D04  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25757  014D06  5004               	movf	??_USBConfigureEndpoint+2,w,c
 25758  014D08  2607               	addwf	USBConfigureEndpoint@handle,f,c
 25759  014D0A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 25760  014D0C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 25761                           
 25762                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 25763  014D0E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 25764  014D12  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 25765  014D16  9EDF               	bcf	indf2,7,c
 25766                           
 25767                           ;usb_device.c: 1557: if(direction == 0)
 25768  014D18  5001               	movf	USBConfigureEndpoint@direction,w,c
 25769  014D1A  A4D8               	btfss	status,2,c
 25770  014D1C  D007               	goto	i2l5555
 25771                           
 25772                           ;usb_device.c: 1558: {
 25773                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 25774  014D1E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 25775  014D20  0D02               	mullw	2
 25776  014D22  0E81               	movlw	low _pBDTEntryOut
 25777  014D24  24F3               	addwf	prodl,w,c
 25778  014D26  6ED9               	movwf	fsr2l,c
 25779  014D28  0E00               	movlw	high _pBDTEntryOut
 25780  014D2A  D006               	goto	L18
 25781  014D2C                     i2l5555:
 25782                           
 25783                           ;usb_device.c: 1561: else
 25784                           ;usb_device.c: 1562: {
 25785                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 25786  014D2C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 25787  014D2E  0D02               	mullw	2
 25788  014D30  0E7B               	movlw	low _pBDTEntryIn
 25789  014D32  24F3               	addwf	prodl,w,c
 25790  014D34  6ED9               	movwf	fsr2l,c
 25791  014D36  0E00               	movlw	high _pBDTEntryIn
 25792  014D38                     L18:
 25793  014D38  20F4               	addwfc	prodh,w,c
 25794  014D3A  6EDA               	movwf	fsr2h,c
 25795  014D3C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 25796  014D40  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 25797                           
 25798                           ;usb_device.c: 1564: }
 25799                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 25800  014D44  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 25801  014D48  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 25802  014D4C  9CDF               	bcf	indf2,6,c
 25803                           
 25804                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 25805  014D4E  EE20 F004          	lfsr	2,4
 25806  014D52  5007               	movf	USBConfigureEndpoint@handle,w,c
 25807  014D54  26D9               	addwf	fsr2l,f,c
 25808  014D56  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 25809  014D58  22DA               	addwfc	fsr2h,f,c
 25810  014D5A  8CDF               	bsf	indf2,6,c
 25811  014D5C  0012               	return		;funcret
 25812  014D5E                     __end_of_USBConfigureEndpoint:
 25813                           	opt stack 0
 25814                           pclatu	equ	0xFFB
 25815                           pclath	equ	0xFFA
 25816                           tblptru	equ	0xFF8
 25817                           tblptrh	equ	0xFF7
 25818                           tblptrl	equ	0xFF6
 25819                           tablat	equ	0xFF5
 25820                           prodh	equ	0xFF4
 25821                           prodl	equ	0xFF3
 25822                           intcon	equ	0xFF2
 25823                           intcon2	equ	0xFF1
 25824                           postinc0	equ	0xFEE
 25825                           fsr0h	equ	0xFEA
 25826                           fsr0l	equ	0xFE9
 25827                           wreg	equ	0xFE8
 25828                           indf1	equ	0xFE7
 25829                           postinc1	equ	0xFE6
 25830                           postdec1	equ	0xFE5
 25831                           fsr1h	equ	0xFE2
 25832                           fsr1l	equ	0xFE1
 25833                           indf2	equ	0xFDF
 25834                           postinc2	equ	0xFDE
 25835                           postdec2	equ	0xFDD
 25836                           plusw2	equ	0xFDB
 25837                           fsr2h	equ	0xFDA
 25838                           fsr2l	equ	0xFD9
 25839                           status	equ	0xFD8
 25840                           
 25841 ;; *************** function _USBCtrlTrfOutHandler *****************
 25842 ;; Defined at:
 25843 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 25844 ;; Parameters:    Size  Location     Type
 25845 ;;		None
 25846 ;; Auto vars:     Size  Location     Type
 25847 ;;		None
 25848 ;; Return value:  Size  Location     Type
 25849 ;;		None               void
 25850 ;; Registers used:
 25851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25852 ;; Tracked objects:
 25853 ;;		On entry : 0/0
 25854 ;;		On exit  : 0/0
 25855 ;;		Unchanged: 0/0
 25856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25861 ;;Total ram usage:        0 bytes
 25862 ;; Hardware stack levels used:    1
 25863 ;; Hardware stack levels required when called:    2
 25864 ;; This function calls:
 25865 ;;		_USBCtrlTrfRxService
 25866 ;; This function is called by:
 25867 ;;		_USBCtrlEPService
 25868 ;; This function uses a non-reentrant model
 25869 ;;
 25870                           
 25871                           	psect	text123
 25872  015548                     __ptext123:
 25873                           	opt stack 0
 25874  015548                     _USBCtrlTrfOutHandler:
 25875                           	opt stack 16
 25876                           
 25877                           ;usb_device.c: 2543: if(controlTransferState == 2)
 25878                           
 25879                           ;incstack = 0
 25880  015548  0E02               	movlw	2
 25881  01554A  1849               	xorwf	_controlTransferState,w,c	;volatile
 25882  01554C  A4D8               	btfss	status,2,c
 25883  01554E  D003               	goto	i2l6643
 25884                           
 25885                           ;usb_device.c: 2544: {
 25886                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 25887  015550  EC0B  F098         	call	_USBCtrlTrfRxService	;wreg free
 25888                           
 25889                           ;usb_device.c: 2546: }
 25890  015554  0012               	return	
 25891  015556                     i2l6643:
 25892                           
 25893                           ;usb_device.c: 2547: else
 25894                           ;usb_device.c: 2548: {
 25895                           ;usb_device.c: 2551: controlTransferState = 0;
 25896  015556  0E00               	movlw	0
 25897  015558  6E49               	movwf	_controlTransferState,c	;volatile
 25898                           
 25899                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 25900  01555A  5040               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 25901  01555C  A4D8               	btfss	status,2,c
 25902  01555E  D01F               	goto	i2l6651
 25903                           
 25904                           ;usb_device.c: 2559: {
 25905                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 25906  015560  EE20 F001          	lfsr	2,1
 25907  015564  5039               	movf	_pBDTEntryEP0OutNext,w,c
 25908  015566  26D9               	addwf	fsr2l,f,c
 25909  015568  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 25910  01556A  22DA               	addwfc	fsr2h,f,c
 25911  01556C  0E08               	movlw	8
 25912  01556E  6EDF               	movwf	indf2,c
 25913                           
 25914                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25915  015570  EE20 F002          	lfsr	2,2
 25916  015574  5039               	movf	_pBDTEntryEP0OutNext,w,c
 25917  015576  26D9               	addwf	fsr2l,f,c
 25918  015578  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 25919  01557A  22DA               	addwfc	fsr2h,f,c
 25920  01557C  0E30               	movlw	48
 25921  01557E  6EDE               	movwf	postinc2,c
 25922  015580  0E0D               	movlw	13
 25923  015582  6EDD               	movwf	postdec2,c
 25924                           
 25925                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25926  015584  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25927  015588  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25928  01558C  0E0C               	movlw	12
 25929  01558E  6EDF               	movwf	indf2,c
 25930                           
 25931                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25932  015590  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25933  015594  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25934  015598  0E00               	movlw	0
 25935  01559A  8EDB               	bsf	plusw2,7,c
 25936                           
 25937                           ;usb_device.c: 2564: }
 25938  01559C  0012               	return	
 25939  01559E                     i2l6651:
 25940                           
 25941                           ;usb_device.c: 2565: else
 25942                           ;usb_device.c: 2566: {
 25943                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 25944  01559E  0E00               	movlw	0
 25945  0155A0  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25946  0155A2  0012               	return	
 25947  0155A4                     __end_of_USBCtrlTrfOutHandler:
 25948                           	opt stack 0
 25949                           pclatu	equ	0xFFB
 25950                           pclath	equ	0xFFA
 25951                           tblptru	equ	0xFF8
 25952                           tblptrh	equ	0xFF7
 25953                           tblptrl	equ	0xFF6
 25954                           tablat	equ	0xFF5
 25955                           prodh	equ	0xFF4
 25956                           prodl	equ	0xFF3
 25957                           intcon	equ	0xFF2
 25958                           intcon2	equ	0xFF1
 25959                           postinc0	equ	0xFEE
 25960                           fsr0h	equ	0xFEA
 25961                           fsr0l	equ	0xFE9
 25962                           wreg	equ	0xFE8
 25963                           indf1	equ	0xFE7
 25964                           postinc1	equ	0xFE6
 25965                           postdec1	equ	0xFE5
 25966                           fsr1h	equ	0xFE2
 25967                           fsr1l	equ	0xFE1
 25968                           indf2	equ	0xFDF
 25969                           postinc2	equ	0xFDE
 25970                           postdec2	equ	0xFDD
 25971                           plusw2	equ	0xFDB
 25972                           fsr2h	equ	0xFDA
 25973                           fsr2l	equ	0xFD9
 25974                           status	equ	0xFD8
 25975                           
 25976 ;; *************** function _USBCtrlTrfRxService *****************
 25977 ;; Defined at:
 25978 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 25979 ;; Parameters:    Size  Location     Type
 25980 ;;		None
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;  byteToRead      1    1[COMRAM] unsigned char 
 25983 ;;  i               1    0[COMRAM] unsigned char 
 25984 ;; Return value:  Size  Location     Type
 25985 ;;		None               void
 25986 ;; Registers used:
 25987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25988 ;; Tracked objects:
 25989 ;;		On entry : 0/0
 25990 ;;		On exit  : 0/0
 25991 ;;		Unchanged: 0/0
 25992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25997 ;;Total ram usage:        2 bytes
 25998 ;; Hardware stack levels used:    1
 25999 ;; Hardware stack levels required when called:    1
 26000 ;; This function calls:
 26001 ;;		_USBCtrlEPAllowStatusStage
 26002 ;; This function is called by:
 26003 ;;		_USBCtrlTrfOutHandler
 26004 ;; This function uses a non-reentrant model
 26005 ;;
 26006                           
 26007                           	psect	text124
 26008  013016                     __ptext124:
 26009                           	opt stack 0
 26010  013016                     _USBCtrlTrfRxService:
 26011                           	opt stack 16
 26012                           
 26013                           ;usb_device.c: 1854: uint8_t byteToRead;
 26014                           ;usb_device.c: 1855: uint8_t i;
 26015                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 26016                           
 26017                           ;incstack = 0
 26018  013016  EE20 F001          	lfsr	2,1
 26019  01301A  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 26020  01301C  26D9               	addwf	fsr2l,f,c
 26021  01301E  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26022  013020  22DA               	addwfc	fsr2h,f,c
 26023  013022  50DF               	movf	indf2,w,c
 26024  013024  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 26025                           
 26026                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 26027  013026  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26028  013028  0100               	movlb	0	; () banked
 26029  01302A  5D70               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 26030  01302C  0E00               	movlw	0
 26031  01302E  5971               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 26032  013030  A0D8               	btfss	status,0,c
 26033                           
 26034                           ; BSR set to: 0
 26035                           ;usb_device.c: 1866: {
 26036                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 26037  013032  C070  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;usb_device.c: 1868: }
 26041                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 26042                           
 26043                           ; BSR set to: 0
 26044  013036  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26045  013038  0100               	movlb	0	; () banked
 26046  01303A  5F70               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 26047  01303C  0E00               	movlw	0
 26048  01303E  5B71               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 26049                           
 26050                           ; BSR set to: 0
 26051                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 26052  013040  0E00               	movlw	0
 26053  013042  6E01               	movwf	USBCtrlTrfRxService@i,c
 26054  013044  D012               	goto	i2l6433
 26055  013046                     i2l6427:
 26056                           
 26057                           ; BSR set to: 0
 26058                           ;usb_device.c: 1875: {
 26059                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 26060  013046  5001               	movf	USBCtrlTrfRxService@i,w,c
 26061  013048  0D01               	mullw	1
 26062  01304A  0E38               	movlw	56
 26063  01304C  24F3               	addwf	prodl,w,c
 26064  01304E  6ED9               	movwf	fsr2l,c
 26065  013050  0E0D               	movlw	13
 26066  013052  20F4               	addwfc	prodh,w,c
 26067  013054  6EDA               	movwf	fsr2h,c
 26068  013056  C06C  FFE1         	movff	_outPipes,fsr1l	;volatile
 26069  01305A  C06D  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 26070  01305E  CFDF FFE7          	movff	indf2,indf1
 26071                           
 26072                           ; BSR set to: 0
 26073  013062  0100               	movlb	0	; () banked
 26074  013064  4B6C               	infsnz	_outPipes& (0+255),f,b	;volatile
 26075  013066  2B6D               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 26076                           
 26077                           ; BSR set to: 0
 26078  013068  2A01               	incf	USBCtrlTrfRxService@i,f,c
 26079  01306A                     i2l6433:
 26080                           
 26081                           ; BSR set to: 0
 26082  01306A  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26083  01306C  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 26084  01306E  A0D8               	btfss	status,0,c
 26085  013070  D7EA               	goto	i2l6427
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;usb_device.c: 1877: }
 26089                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 26090                           
 26091                           ; BSR set to: 0
 26092  013072  0100               	movlb	0	; () banked
 26093  013074  5170               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 26094  013076  0100               	movlb	0	; () banked
 26095  013078  1171               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 26096  01307A  B4D8               	btfsc	status,2,c
 26097  01307C  D032               	goto	i2l6449
 26098                           
 26099                           ; BSR set to: 0
 26100                           ;usb_device.c: 1882: {
 26101                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 26102  01307E  EE20 F001          	lfsr	2,1
 26103  013082  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26104  013084  26D9               	addwf	fsr2l,f,c
 26105  013086  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26106  013088  22DA               	addwfc	fsr2h,f,c
 26107  01308A  0E08               	movlw	8
 26108  01308C  6EDF               	movwf	indf2,c
 26109                           
 26110                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26111  01308E  EE20 F002          	lfsr	2,2
 26112  013092  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26113  013094  26D9               	addwf	fsr2l,f,c
 26114  013096  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26115  013098  22DA               	addwfc	fsr2h,f,c
 26116  01309A  0E38               	movlw	56
 26117  01309C  6EDE               	movwf	postinc2,c
 26118  01309E  0E0D               	movlw	13
 26119  0130A0  6EDD               	movwf	postdec2,c
 26120                           
 26121                           ; BSR set to: 0
 26122                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 26123  0130A2  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26124  0130A6  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26125  0130AA  BCDF               	btfsc	indf2,6,c
 26126  0130AC  D00D               	goto	i2l6445
 26127                           
 26128                           ; BSR set to: 0
 26129                           ;usb_device.c: 1886: {
 26130                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26131  0130AE  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26132  0130B2  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26133  0130B6  0E48               	movlw	72
 26134  0130B8  6EDF               	movwf	indf2,c
 26135                           
 26136                           ; BSR set to: 0
 26137                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26138  0130BA  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26139  0130BE  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26140  0130C2  0E00               	movlw	0
 26141  0130C4  8EDB               	bsf	plusw2,7,c
 26142                           
 26143                           ;usb_device.c: 1889: }
 26144  0130C6  0012               	return	
 26145  0130C8                     i2l6445:
 26146                           
 26147                           ; BSR set to: 0
 26148                           ;usb_device.c: 1890: else
 26149                           ;usb_device.c: 1891: {
 26150                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 26151  0130C8  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26152  0130CC  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26153  0130D0  0E08               	movlw	8
 26154  0130D2  6EDF               	movwf	indf2,c
 26155                           
 26156                           ; BSR set to: 0
 26157                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26158  0130D4  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26159  0130D8  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26160  0130DC  0E00               	movlw	0
 26161  0130DE  8EDB               	bsf	plusw2,7,c
 26162                           
 26163                           ; BSR set to: 0
 26164                           ;usb_device.c: 1894: }
 26165                           ;usb_device.c: 1895: }
 26166  0130E0  0012               	return	
 26167  0130E2                     i2l6449:
 26168                           
 26169                           ; BSR set to: 0
 26170                           ;usb_device.c: 1896: else
 26171                           ;usb_device.c: 1897: {
 26172                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 26173  0130E2  EE20 F001          	lfsr	2,1
 26174  0130E6  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26175  0130E8  26D9               	addwf	fsr2l,f,c
 26176  0130EA  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26177  0130EC  22DA               	addwfc	fsr2h,f,c
 26178  0130EE  0E08               	movlw	8
 26179  0130F0  6EDF               	movwf	indf2,c
 26180                           
 26181                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26182  0130F2  EE20 F002          	lfsr	2,2
 26183  0130F6  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26184  0130F8  26D9               	addwf	fsr2l,f,c
 26185  0130FA  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26186  0130FC  22DA               	addwfc	fsr2h,f,c
 26187  0130FE  0E30               	movlw	48
 26188  013100  6EDE               	movwf	postinc2,c
 26189  013102  0E0D               	movlw	13
 26190  013104  6EDD               	movwf	postdec2,c
 26191                           
 26192                           ; BSR set to: 0
 26193                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26194  013106  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26195  01310A  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26196  01310E  0E04               	movlw	4
 26197  013110  6EDF               	movwf	indf2,c
 26198                           
 26199                           ; BSR set to: 0
 26200                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26201  013112  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26202  013116  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26203  01311A  0E00               	movlw	0
 26204  01311C  8EDB               	bsf	plusw2,7,c
 26205                           
 26206                           ; BSR set to: 0
 26207                           ;usb_device.c: 1926: }
 26208                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 26209                           
 26210                           ; BSR set to: 0
 26211                           ;usb_device.c: 1915: {
 26212                           ;usb_device.c: 1921: outPipes[0].pFunc();
 26213  01311E  0100               	movlb	0	; () banked
 26214  013120  9F6F               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 26215                           
 26216                           ; BSR set to: 0
 26217                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 26218  013122  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26219  013124  A4D8               	btfss	status,2,c
 26220  013126  0012               	return	
 26221                           
 26222                           ; BSR set to: 0
 26223                           ;usb_device.c: 1942: {
 26224                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 26225  013128  EC99  F0A0         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26226  01312C  0012               	return	
 26227  01312E                     __end_of_USBCtrlTrfRxService:
 26228                           	opt stack 0
 26229                           pclatu	equ	0xFFB
 26230                           pclath	equ	0xFFA
 26231                           tblptru	equ	0xFF8
 26232                           tblptrh	equ	0xFF7
 26233                           tblptrl	equ	0xFF6
 26234                           tablat	equ	0xFF5
 26235                           prodh	equ	0xFF4
 26236                           prodl	equ	0xFF3
 26237                           intcon	equ	0xFF2
 26238                           intcon2	equ	0xFF1
 26239                           postinc0	equ	0xFEE
 26240                           fsr0h	equ	0xFEA
 26241                           fsr0l	equ	0xFE9
 26242                           wreg	equ	0xFE8
 26243                           indf1	equ	0xFE7
 26244                           postinc1	equ	0xFE6
 26245                           postdec1	equ	0xFE5
 26246                           fsr1h	equ	0xFE2
 26247                           fsr1l	equ	0xFE1
 26248                           indf2	equ	0xFDF
 26249                           postinc2	equ	0xFDE
 26250                           postdec2	equ	0xFDD
 26251                           plusw2	equ	0xFDB
 26252                           fsr2h	equ	0xFDA
 26253                           fsr2l	equ	0xFD9
 26254                           status	equ	0xFD8
 26255                           
 26256 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 26257 ;; Defined at:
 26258 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 26259 ;; Parameters:    Size  Location     Type
 26260 ;;		None
 26261 ;; Auto vars:     Size  Location     Type
 26262 ;;		None
 26263 ;; Return value:  Size  Location     Type
 26264 ;;		None               void
 26265 ;; Registers used:
 26266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26267 ;; Tracked objects:
 26268 ;;		On entry : 0/0
 26269 ;;		On exit  : 0/0
 26270 ;;		Unchanged: 0/0
 26271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26276 ;;Total ram usage:        0 bytes
 26277 ;; Hardware stack levels used:    1
 26278 ;; This function calls:
 26279 ;;		Nothing
 26280 ;; This function is called by:
 26281 ;;		_USBDeviceTasks
 26282 ;;		_USBCtrlEPServiceComplete
 26283 ;;		_USBCtrlTrfRxService
 26284 ;; This function uses a non-reentrant model
 26285 ;;
 26286                           
 26287                           	psect	text125
 26288  014132                     __ptext125:
 26289                           	opt stack 0
 26290  014132                     _USBCtrlEPAllowStatusStage:
 26291                           	opt stack 16
 26292                           
 26293                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 26294                           
 26295                           ;incstack = 0
 26296  014132  5046               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 26297  014134  A4D8               	btfss	status,2,c
 26298  014136  0012               	return	
 26299                           
 26300                           ;usb_device.c: 1424: {
 26301                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 26302  014138  0E01               	movlw	1
 26303  01413A  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26304                           
 26305                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 26306  01413C  5047               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 26307  01413E  A4D8               	btfss	status,2,c
 26308  014140  0012               	return	
 26309                           
 26310                           ;usb_device.c: 1427: {
 26311                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 26312  014142  0E01               	movlw	1
 26313  014144  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26314                           
 26315                           ;usb_device.c: 1432: if(controlTransferState == 2)
 26316  014146  0E02               	movlw	2
 26317  014148  1849               	xorwf	_controlTransferState,w,c	;volatile
 26318  01414A  A4D8               	btfss	status,2,c
 26319  01414C  D016               	goto	i2l5987
 26320                           
 26321                           ;usb_device.c: 1433: {
 26322                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 26323  01414E  0100               	movlb	0	; () banked
 26324  014150  EE20 F001          	lfsr	2,1
 26325  014154  517B               	movf	_pBDTEntryIn& (0+255),w,b
 26326  014156  26D9               	addwf	fsr2l,f,c
 26327  014158  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26328  01415A  22DA               	addwfc	fsr2h,f,c
 26329  01415C  0E00               	movlw	0
 26330  01415E  6EDF               	movwf	indf2,c
 26331                           
 26332                           ; BSR set to: 0
 26333                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26334  014160  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26335  014164  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26336  014168  0E48               	movlw	72
 26337  01416A  6EDF               	movwf	indf2,c
 26338                           
 26339                           ; BSR set to: 0
 26340                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26341  01416C  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26342  014170  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26343  014174  0E00               	movlw	0
 26344  014176  8EDB               	bsf	plusw2,7,c
 26345                           
 26346                           ;usb_device.c: 1437: }
 26347  014178  0012               	return	
 26348  01417A                     i2l5987:
 26349                           
 26350                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 26351  01417A  0449               	decf	_controlTransferState,w,c	;volatile
 26352  01417C  A4D8               	btfss	status,2,c
 26353  01417E  0012               	return	
 26354                           
 26355                           ;usb_device.c: 1439: {
 26356                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 26357  014180  0E00               	movlw	0
 26358  014182  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26359                           
 26360                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 26361  014184  EE20 F001          	lfsr	2,1
 26362  014188  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 26363  01418A  26D9               	addwf	fsr2l,f,c
 26364  01418C  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26365  01418E  22DA               	addwfc	fsr2h,f,c
 26366  014190  0E08               	movlw	8
 26367  014192  6EDF               	movwf	indf2,c
 26368                           
 26369                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 26370  014194  EE20 F002          	lfsr	2,2
 26371  014198  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 26372  01419A  26D9               	addwf	fsr2l,f,c
 26373  01419C  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26374  01419E  22DA               	addwfc	fsr2h,f,c
 26375  0141A0  0E30               	movlw	48
 26376  0141A2  6EDE               	movwf	postinc2,c
 26377  0141A4  0E0D               	movlw	13
 26378  0141A6  6EDD               	movwf	postdec2,c
 26379                           
 26380                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 26381  0141A8  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26382  0141AC  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26383  0141B0  0E04               	movlw	4
 26384  0141B2  6EDF               	movwf	indf2,c
 26385                           
 26386                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26387  0141B4  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26388  0141B8  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26389  0141BC  0E00               	movlw	0
 26390  0141BE  8EDB               	bsf	plusw2,7,c
 26391                           
 26392                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 26393  0141C0  0E01               	movlw	1
 26394  0141C2  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26395                           
 26396                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 26397  0141C4  EE20 F001          	lfsr	2,1
 26398  0141C8  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26399  0141CA  26D9               	addwf	fsr2l,f,c
 26400  0141CC  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26401  0141CE  22DA               	addwfc	fsr2h,f,c
 26402  0141D0  0E08               	movlw	8
 26403  0141D2  6EDF               	movwf	indf2,c
 26404                           
 26405                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26406  0141D4  EE20 F002          	lfsr	2,2
 26407  0141D8  5039               	movf	_pBDTEntryEP0OutNext,w,c
 26408  0141DA  26D9               	addwf	fsr2l,f,c
 26409  0141DC  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26410  0141DE  22DA               	addwfc	fsr2h,f,c
 26411  0141E0  0E30               	movlw	48
 26412  0141E2  6EDE               	movwf	postinc2,c
 26413  0141E4  0E0D               	movlw	13
 26414  0141E6  6EDD               	movwf	postdec2,c
 26415                           
 26416                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 26417  0141E8  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26418  0141EC  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26419  0141F0  0E80               	movlw	128
 26420  0141F2  6EDF               	movwf	indf2,c
 26421  0141F4  0012               	return	
 26422  0141F6                     __end_of_USBCtrlEPAllowStatusStage:
 26423                           	opt stack 0
 26424                           pclatu	equ	0xFFB
 26425                           pclath	equ	0xFFA
 26426                           tblptru	equ	0xFF8
 26427                           tblptrh	equ	0xFF7
 26428                           tblptrl	equ	0xFF6
 26429                           tablat	equ	0xFF5
 26430                           prodh	equ	0xFF4
 26431                           prodl	equ	0xFF3
 26432                           intcon	equ	0xFF2
 26433                           intcon2	equ	0xFF1
 26434                           postinc0	equ	0xFEE
 26435                           fsr0h	equ	0xFEA
 26436                           fsr0l	equ	0xFE9
 26437                           wreg	equ	0xFE8
 26438                           indf1	equ	0xFE7
 26439                           postinc1	equ	0xFE6
 26440                           postdec1	equ	0xFE5
 26441                           fsr1h	equ	0xFE2
 26442                           fsr1l	equ	0xFE1
 26443                           indf2	equ	0xFDF
 26444                           postinc2	equ	0xFDE
 26445                           postdec2	equ	0xFDD
 26446                           plusw2	equ	0xFDB
 26447                           fsr2h	equ	0xFDA
 26448                           fsr2l	equ	0xFD9
 26449                           status	equ	0xFD8
 26450                           
 26451 ;; *************** function _USBCtrlTrfInHandler *****************
 26452 ;; Defined at:
 26453 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 26454 ;; Parameters:    Size  Location     Type
 26455 ;;		None
 26456 ;; Auto vars:     Size  Location     Type
 26457 ;;  lastDTS         1    1[COMRAM] unsigned char 
 26458 ;; Return value:  Size  Location     Type
 26459 ;;		None               void
 26460 ;; Registers used:
 26461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26462 ;; Tracked objects:
 26463 ;;		On entry : 0/0
 26464 ;;		On exit  : 0/0
 26465 ;;		Unchanged: 0/0
 26466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26471 ;;Total ram usage:        1 bytes
 26472 ;; Hardware stack levels used:    1
 26473 ;; Hardware stack levels required when called:    1
 26474 ;; This function calls:
 26475 ;;		_USBCtrlTrfTxService
 26476 ;; This function is called by:
 26477 ;;		_USBCtrlEPService
 26478 ;; This function uses a non-reentrant model
 26479 ;;
 26480                           
 26481                           	psect	text126
 26482  0141F6                     __ptext126:
 26483                           	opt stack 0
 26484  0141F6                     _USBCtrlTrfInHandler:
 26485                           	opt stack 17
 26486                           
 26487                           ;usb_device.c: 2597: uint8_t lastDTS;
 26488                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 26489                           
 26490                           ;incstack = 0
 26491  0141F6  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26492  0141FA  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26493  0141FE  0E00               	movlw	0
 26494  014200  BCDF               	btfsc	indf2,6,c
 26495  014202  0E01               	movlw	1
 26496  014204  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 26497                           
 26498                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26499  014206  0E04               	movlw	4
 26500  014208  0100               	movlb	0	; () banked
 26501  01420A  1B7B               	xorwf	_pBDTEntryIn& (0+255),f,b
 26502                           
 26503                           ; BSR set to: 0
 26504                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 26505  01420C  0E08               	movlw	8
 26506  01420E  1845               	xorwf	_USBDeviceState,w,c	;volatile
 26507  014210  A4D8               	btfss	status,2,c
 26508  014212  D00D               	goto	i2l6667
 26509                           
 26510                           ; BSR set to: 0
 26511                           ;usb_device.c: 2608: {
 26512                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 26513  014214  010D               	movlb	13	; () banked
 26514  014216  5132               	movf	50,w,b	;volatile
 26515  014218  0B7F               	andlw	127
 26516  01421A  010F               	movlb	15	; () banked
 26517  01421C  6F38               	movwf	56,b	;volatile
 26518                           
 26519                           ; BSR set to: 15
 26520                           ;usb_device.c: 2610: if(UADDR != 0u)
 26521  01421E  010F               	movlb	15	; () banked
 26522  014220  5138               	movf	56,w,b	;volatile
 26523  014222  B4D8               	btfsc	status,2,c
 26524  014224  D002               	goto	i2l6665
 26525                           
 26526                           ; BSR set to: 15
 26527                           ;usb_device.c: 2611: {
 26528                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 26529  014226  0E10               	movlw	16
 26530  014228  D001               	goto	L19
 26531  01422A                     i2l6665:
 26532                           
 26533                           ; BSR set to: 15
 26534                           ;usb_device.c: 2614: else
 26535                           ;usb_device.c: 2615: {
 26536                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 26537  01422A  0E04               	movlw	4
 26538  01422C                     L19:
 26539  01422C  6E45               	movwf	_USBDeviceState,c	;volatile
 26540  01422E                     i2l6667:
 26541                           
 26542                           ;usb_device.c: 2617: }
 26543                           ;usb_device.c: 2618: }
 26544                           ;usb_device.c: 2621: if(controlTransferState == 1)
 26545  01422E  0449               	decf	_controlTransferState,w,c	;volatile
 26546  014230  A4D8               	btfss	status,2,c
 26547  014232  D03B               	goto	i2l1307
 26548                           
 26549                           ;usb_device.c: 2622: {
 26550                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 26551  014234  0100               	movlb	0	; () banked
 26552  014236  EE20 F002          	lfsr	2,2
 26553  01423A  517B               	movf	_pBDTEntryIn& (0+255),w,b
 26554  01423C  26D9               	addwf	fsr2l,f,c
 26555  01423E  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26556  014240  22DA               	addwfc	fsr2h,f,c
 26557  014242  0E38               	movlw	56
 26558  014244  6EDE               	movwf	postinc2,c
 26559  014246  0E0D               	movlw	13
 26560  014248  6EDD               	movwf	postdec2,c
 26561                           
 26562                           ; BSR set to: 0
 26563                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 26564  01424A  ECB9  F09D         	call	_USBCtrlTrfTxService	;wreg free
 26565                           
 26566                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 26567  01424E  0E02               	movlw	2
 26568  014250  184E               	xorwf	_shortPacketStatus,w,c	;volatile
 26569  014252  A4D8               	btfss	status,2,c
 26570  014254  D00D               	goto	i2l6679
 26571                           
 26572                           ;usb_device.c: 2631: {
 26573                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 26574  014256  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26575  01425A  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26576  01425E  0E04               	movlw	4
 26577  014260  6EDF               	movwf	indf2,c
 26578                           
 26579                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26580  014262  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26581  014266  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26582  01426A  0E00               	movlw	0
 26583  01426C  8EDB               	bsf	plusw2,7,c
 26584                           
 26585                           ;usb_device.c: 2636: }
 26586  01426E  0012               	return	
 26587  014270                     i2l6679:
 26588                           
 26589                           ;usb_device.c: 2637: else
 26590                           ;usb_device.c: 2638: {
 26591                           ;usb_device.c: 2639: if(lastDTS == 0)
 26592  014270  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 26593  014272  A4D8               	btfss	status,2,c
 26594  014274  D00D               	goto	i2l6685
 26595                           
 26596                           ;usb_device.c: 2640: {
 26597                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26598  014276  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26599  01427A  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26600  01427E  0E48               	movlw	72
 26601  014280  6EDF               	movwf	indf2,c
 26602                           
 26603                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26604  014282  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26605  014286  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26606  01428A  0E00               	movlw	0
 26607  01428C  8EDB               	bsf	plusw2,7,c
 26608                           
 26609                           ;usb_device.c: 2643: }
 26610  01428E  0012               	return	
 26611  014290                     i2l6685:
 26612                           
 26613                           ;usb_device.c: 2644: else
 26614                           ;usb_device.c: 2645: {
 26615                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 26616  014290  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26617  014294  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26618  014298  0E08               	movlw	8
 26619  01429A  6EDF               	movwf	indf2,c
 26620                           
 26621                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26622  01429C  C07B  FFD9         	movff	_pBDTEntryIn,fsr2l
 26623  0142A0  C07C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26624  0142A4  0E00               	movlw	0
 26625  0142A6  8EDB               	bsf	plusw2,7,c
 26626                           
 26627                           ;usb_device.c: 2648: }
 26628                           ;usb_device.c: 2649: }
 26629                           ;usb_device.c: 2650: }
 26630  0142A8  0012               	return	
 26631  0142AA                     i2l1307:
 26632                           
 26633                           ;usb_device.c: 2651: else
 26634                           ;usb_device.c: 2652: {
 26635                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 26636  0142AA  0100               	movlb	0	; () banked
 26637  0142AC  AF6F               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 26638  0142AE  D002               	goto	i2l6691
 26639                           
 26640                           ; BSR set to: 0
 26641                           ;usb_device.c: 2661: }
 26642                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 26643                           
 26644                           ; BSR set to: 0
 26645                           ;usb_device.c: 2659: {
 26646                           ;usb_device.c: 2660: outPipes[0].pFunc();
 26647  0142B0  0100               	movlb	0	; () banked
 26648  0142B2  9F6F               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 26649  0142B4                     i2l6691:
 26650                           
 26651                           ; BSR set to: 0
 26652                           ;usb_device.c: 2663: }
 26653                           ;usb_device.c: 2665: controlTransferState = 0;
 26654  0142B4  0E00               	movlw	0
 26655  0142B6  6E49               	movwf	_controlTransferState,c	;volatile
 26656  0142B8  0012               	return	
 26657  0142BA                     __end_of_USBCtrlTrfInHandler:
 26658                           	opt stack 0
 26659                           pclatu	equ	0xFFB
 26660                           pclath	equ	0xFFA
 26661                           tblptru	equ	0xFF8
 26662                           tblptrh	equ	0xFF7
 26663                           tblptrl	equ	0xFF6
 26664                           tablat	equ	0xFF5
 26665                           prodh	equ	0xFF4
 26666                           prodl	equ	0xFF3
 26667                           intcon	equ	0xFF2
 26668                           intcon2	equ	0xFF1
 26669                           postinc0	equ	0xFEE
 26670                           fsr0h	equ	0xFEA
 26671                           fsr0l	equ	0xFE9
 26672                           wreg	equ	0xFE8
 26673                           indf1	equ	0xFE7
 26674                           postinc1	equ	0xFE6
 26675                           postdec1	equ	0xFE5
 26676                           fsr1h	equ	0xFE2
 26677                           fsr1l	equ	0xFE1
 26678                           indf2	equ	0xFDF
 26679                           postinc2	equ	0xFDE
 26680                           postdec2	equ	0xFDD
 26681                           plusw2	equ	0xFDB
 26682                           fsr2h	equ	0xFDA
 26683                           fsr2l	equ	0xFD9
 26684                           status	equ	0xFD8
 26685                           
 26686 ;; *************** function _USBCtrlTrfTxService *****************
 26687 ;; Defined at:
 26688 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 26689 ;; Parameters:    Size  Location     Type
 26690 ;;		None
 26691 ;; Auto vars:     Size  Location     Type
 26692 ;;  byteToSend      1    0[COMRAM] unsigned char 
 26693 ;; Return value:  Size  Location     Type
 26694 ;;		None               void
 26695 ;; Registers used:
 26696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26697 ;; Tracked objects:
 26698 ;;		On entry : 0/0
 26699 ;;		On exit  : 0/0
 26700 ;;		Unchanged: 0/0
 26701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26706 ;;Total ram usage:        1 bytes
 26707 ;; Hardware stack levels used:    1
 26708 ;; This function calls:
 26709 ;;		Nothing
 26710 ;; This function is called by:
 26711 ;;		_USBCtrlEPAllowDataStage
 26712 ;;		_USBCtrlTrfInHandler
 26713 ;; This function uses a non-reentrant model
 26714 ;;
 26715                           
 26716                           	psect	text127
 26717  013B72                     __ptext127:
 26718                           	opt stack 0
 26719  013B72                     _USBCtrlTrfTxService:
 26720                           	opt stack 15
 26721                           
 26722                           ;usb_device.c: 1773: uint8_t byteToSend;
 26723                           ;usb_device.c: 1777: byteToSend = 8;
 26724                           
 26725                           ;incstack = 0
 26726  013B72  0E08               	movlw	8
 26727  013B74  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 26728                           
 26729                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 26730  013B76  0100               	movlb	0	; () banked
 26731  013B78  517A               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26732  013B7A  E111               	bnz	i2l5709
 26733  013B7C  0E08               	movlw	8
 26734  013B7E  0100               	movlb	0	; () banked
 26735  013B80  5D79               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 26736  013B82  B0D8               	btfsc	status,0,c
 26737  013B84  D00C               	goto	i2l5709
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;usb_device.c: 1779: {
 26741                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 26742  013B86  C079  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 26743                           
 26744                           ; BSR set to: 0
 26745                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 26746  013B8A  504E               	movf	_shortPacketStatus,w,c	;volatile
 26747  013B8C  A4D8               	btfss	status,2,c
 26748  013B8E  D002               	goto	i2l5705
 26749                           
 26750                           ; BSR set to: 0
 26751                           ;usb_device.c: 1788: {
 26752                           ;usb_device.c: 1789: shortPacketStatus = 1;
 26753  013B90  0E01               	movlw	1
 26754  013B92  D004               	goto	L20
 26755  013B94                     i2l5705:
 26756                           
 26757                           ; BSR set to: 0
 26758                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 26759  013B94  044E               	decf	_shortPacketStatus,w,c	;volatile
 26760  013B96  A4D8               	btfss	status,2,c
 26761  013B98  D002               	goto	i2l5709
 26762                           
 26763                           ; BSR set to: 0
 26764                           ;usb_device.c: 1792: {
 26765                           ;usb_device.c: 1793: shortPacketStatus = 2;
 26766  013B9A  0E02               	movlw	2
 26767  013B9C                     L20:
 26768  013B9C  6E4E               	movwf	_shortPacketStatus,c	;volatile
 26769  013B9E                     i2l5709:
 26770                           
 26771                           ; BSR set to: 0
 26772                           ;usb_device.c: 1794: }
 26773                           ;usb_device.c: 1795: }
 26774                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 26775  013B9E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26776  013BA0  0100               	movlb	0	; () banked
 26777  013BA2  5F79               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 26778  013BA4  0E00               	movlw	0
 26779  013BA6  5B7A               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 26780                           
 26781                           ; BSR set to: 0
 26782                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 26783  013BA8  0100               	movlb	0	; () banked
 26784  013BAA  EE20 F001          	lfsr	2,1
 26785  013BAE  517B               	movf	_pBDTEntryIn& (0+255),w,b
 26786  013BB0  26D9               	addwf	fsr2l,f,c
 26787  013BB2  517C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26788  013BB4  22DA               	addwfc	fsr2h,f,c
 26789  013BB6  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 26790                           
 26791                           ; BSR set to: 0
 26792                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 26793  013BBA  0E38               	movlw	56
 26794  013BBC  6E3B               	movwf	_pDst,c
 26795  013BBE  0E0D               	movlw	13
 26796  013BC0  6E3C               	movwf	_pDst+1,c
 26797                           
 26798                           ; BSR set to: 0
 26799                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 26800  013BC2  0100               	movlb	0	; () banked
 26801  013BC4  A178               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 26802  013BC6  D01D               	goto	i2l5727
 26803  013BC8  D03C               	goto	i2l5737
 26804  013BCA                     i2l5719:
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;usb_device.c: 1812: {
 26808                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 26809  013BCA  C075  FFF6         	movff	_inPipes,tblptrl	;volatile
 26810  013BCE  C076  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26811  013BD2  0E00               	movlw	low (__mediumconst shr (0+16))
 26812  013BD4  6EF8               	movwf	tblptru,c
 26813  013BD6  C03B  FFD9         	movff	_pDst,fsr2l
 26814  013BDA  C03C  FFDA         	movff	_pDst+1,fsr2h
 26815  013BDE  0E0E               	movlw	(high __ramtop+-1)
 26816  013BE0  64F7               	cpfsgt	tblptrh,c
 26817  013BE2  D003               	bra	i2u490_47
 26818  013BE4  0008               	tblrd		*
 26819  013BE6  50F5               	movf	tablat,w,c
 26820  013BE8  D005               	bra	i2u490_40
 26821  013BEA                     i2u490_47:
 26822  013BEA  CFF6 FFE1          	movff	tblptrl,fsr1l
 26823  013BEE  CFF7 FFE2          	movff	tblptrh,fsr1h
 26824  013BF2  50E7               	movf	indf1,w,c
 26825  013BF4                     i2u490_40:
 26826  013BF4  6EDF               	movwf	indf2,c
 26827  013BF6  0100               	movlb	0	; () banked
 26828  013BF8  4B75               	infsnz	_inPipes& (0+255),f,b	;volatile
 26829  013BFA  2B76               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 26830                           
 26831                           ; BSR set to: 0
 26832  013BFC  4A3B               	infsnz	_pDst,f,c
 26833  013BFE  2A3C               	incf	_pDst+1,f,c
 26834                           
 26835                           ; BSR set to: 0
 26836                           ;usb_device.c: 1814: byteToSend--;
 26837  013C00  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 26838  013C02                     i2l5727:
 26839                           
 26840                           ; BSR set to: 0
 26841  013C02  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26842  013C04  B4D8               	btfsc	status,2,c
 26843  013C06  0012               	return	
 26844  013C08  D7E0               	goto	i2l5719
 26845  013C0A                     i2l5729:
 26846                           
 26847                           ; BSR set to: 0
 26848                           ;usb_device.c: 1820: {
 26849                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 26850  013C0A  C075  FFF6         	movff	_inPipes,tblptrl	;volatile
 26851  013C0E  C076  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26852  013C12  0E00               	movlw	low (__mediumconst shr (0+16))
 26853  013C14  6EF8               	movwf	tblptru,c
 26854  013C16  C03B  FFD9         	movff	_pDst,fsr2l
 26855  013C1A  C03C  FFDA         	movff	_pDst+1,fsr2h
 26856  013C1E  0E0E               	movlw	(high __ramtop+-1)
 26857  013C20  64F7               	cpfsgt	tblptrh,c
 26858  013C22  D003               	bra	i2u492_47
 26859  013C24  0008               	tblrd		*
 26860  013C26  50F5               	movf	tablat,w,c
 26861  013C28  D005               	bra	i2u492_40
 26862  013C2A                     i2u492_47:
 26863  013C2A  CFF6 FFE1          	movff	tblptrl,fsr1l
 26864  013C2E  CFF7 FFE2          	movff	tblptrh,fsr1h
 26865  013C32  50E7               	movf	indf1,w,c
 26866  013C34                     i2u492_40:
 26867  013C34  6EDF               	movwf	indf2,c
 26868  013C36  0100               	movlb	0	; () banked
 26869  013C38  4B75               	infsnz	_inPipes& (0+255),f,b	;volatile
 26870  013C3A  2B76               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 26871                           
 26872                           ; BSR set to: 0
 26873  013C3C  4A3B               	infsnz	_pDst,f,c
 26874  013C3E  2A3C               	incf	_pDst+1,f,c
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;usb_device.c: 1822: byteToSend--;
 26878  013C40  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 26879  013C42                     i2l5737:
 26880                           
 26881                           ; BSR set to: 0
 26882  013C42  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26883  013C44  B4D8               	btfsc	status,2,c
 26884  013C46  0012               	return	
 26885  013C48  D7E0               	goto	i2l5729
 26886  013C4A                     __end_of_USBCtrlTrfTxService:
 26887                           	opt stack 0
 26888                           pclatu	equ	0xFFB
 26889                           pclath	equ	0xFFA
 26890                           tblptru	equ	0xFF8
 26891                           tblptrh	equ	0xFF7
 26892                           tblptrl	equ	0xFF6
 26893                           tablat	equ	0xFF5
 26894                           prodh	equ	0xFF4
 26895                           prodl	equ	0xFF3
 26896                           intcon	equ	0xFF2
 26897                           intcon2	equ	0xFF1
 26898                           postinc0	equ	0xFEE
 26899                           fsr0h	equ	0xFEA
 26900                           fsr0l	equ	0xFE9
 26901                           wreg	equ	0xFE8
 26902                           indf1	equ	0xFE7
 26903                           postinc1	equ	0xFE6
 26904                           postdec1	equ	0xFE5
 26905                           fsr1h	equ	0xFE2
 26906                           fsr1l	equ	0xFE1
 26907                           indf2	equ	0xFDF
 26908                           postinc2	equ	0xFDE
 26909                           postdec2	equ	0xFDD
 26910                           plusw2	equ	0xFDB
 26911                           fsr2h	equ	0xFDA
 26912                           fsr2l	equ	0xFD9
 26913                           status	equ	0xFD8
 26914                           pclatu	equ	0xFFB
 26915                           pclath	equ	0xFFA
 26916                           tblptru	equ	0xFF8
 26917                           tblptrh	equ	0xFF7
 26918                           tblptrl	equ	0xFF6
 26919                           tablat	equ	0xFF5
 26920                           prodh	equ	0xFF4
 26921                           prodl	equ	0xFF3
 26922                           intcon	equ	0xFF2
 26923                           intcon2	equ	0xFF1
 26924                           postinc0	equ	0xFEE
 26925                           fsr0h	equ	0xFEA
 26926                           fsr0l	equ	0xFE9
 26927                           wreg	equ	0xFE8
 26928                           indf1	equ	0xFE7
 26929                           postinc1	equ	0xFE6
 26930                           postdec1	equ	0xFE5
 26931                           fsr1h	equ	0xFE2
 26932                           fsr1l	equ	0xFE1
 26933                           indf2	equ	0xFDF
 26934                           postinc2	equ	0xFDE
 26935                           postdec2	equ	0xFDD
 26936                           plusw2	equ	0xFDB
 26937                           fsr2h	equ	0xFDA
 26938                           fsr2l	equ	0xFD9
 26939                           status	equ	0xFD8
 26940                           
 26941                           	psect	rparam
 26942  0000                     pclatu	equ	0xFFB
 26943                           pclath	equ	0xFFA
 26944                           tblptru	equ	0xFF8
 26945                           tblptrh	equ	0xFF7
 26946                           tblptrl	equ	0xFF6
 26947                           tablat	equ	0xFF5
 26948                           prodh	equ	0xFF4
 26949                           prodl	equ	0xFF3
 26950                           intcon	equ	0xFF2
 26951                           intcon2	equ	0xFF1
 26952                           postinc0	equ	0xFEE
 26953                           fsr0h	equ	0xFEA
 26954                           fsr0l	equ	0xFE9
 26955                           wreg	equ	0xFE8
 26956                           indf1	equ	0xFE7
 26957                           postinc1	equ	0xFE6
 26958                           postdec1	equ	0xFE5
 26959                           fsr1h	equ	0xFE2
 26960                           fsr1l	equ	0xFE1
 26961                           indf2	equ	0xFDF
 26962                           postinc2	equ	0xFDE
 26963                           postdec2	equ	0xFDD
 26964                           plusw2	equ	0xFDB
 26965                           fsr2h	equ	0xFDA
 26966                           fsr2l	equ	0xFD9
 26967                           status	equ	0xFD8
 26968                           
 26969                           	psect	temp
 26970  000058                     btemp:
 26971                           	opt stack 0
 26972  000058                     	ds	1
 26973  0000                     int$flags	set	btemp
 26974                           pclatu	equ	0xFFB
 26975                           pclath	equ	0xFFA
 26976                           tblptru	equ	0xFF8
 26977                           tblptrh	equ	0xFF7
 26978                           tblptrl	equ	0xFF6
 26979                           tablat	equ	0xFF5
 26980                           prodh	equ	0xFF4
 26981                           prodl	equ	0xFF3
 26982                           intcon	equ	0xFF2
 26983                           intcon2	equ	0xFF1
 26984                           postinc0	equ	0xFEE
 26985                           fsr0h	equ	0xFEA
 26986                           fsr0l	equ	0xFE9
 26987                           wreg	equ	0xFE8
 26988                           indf1	equ	0xFE7
 26989                           postinc1	equ	0xFE6
 26990                           postdec1	equ	0xFE5
 26991                           fsr1h	equ	0xFE2
 26992                           fsr1l	equ	0xFE1
 26993                           indf2	equ	0xFDF
 26994                           postinc2	equ	0xFDE
 26995                           postdec2	equ	0xFDD
 26996                           plusw2	equ	0xFDB
 26997                           fsr2h	equ	0xFDA
 26998                           fsr2l	equ	0xFD9
 26999                           status	equ	0xFD8


Data Sizes:
    Strings     721
    Constant    229
    Data        5
    BSS         384
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      87
    BANK0           160     70     160
    BANK1           256    251     256
    BANK2           256    250     256
    BANK3           256      0     245
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4050_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4050_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4050_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4050_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2783$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S2773$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2773$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2749$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2749$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2749$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2749$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    F9633.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    command_operation@opland2	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK2[100]), 

    command_operation@opland1	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), 

    command_operation@opcode	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opcode(BANK1[100]), 

    comm_at@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_adjust_time_button@cnt_dec	PTR struct button size(2) Largest target is 4
		 -> ct1(BANK3[4]), 

    RTCC_adjust_time_button@cnt_inc	PTR struct button size(2) Largest target is 4
		 -> ct0(BANK2[4]), 

    RTCC_adjust_time_button@mode	PTR struct button size(2) Largest target is 4
		 -> ctm(BANK3[4]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_78(CODE[2]), STR_77(CODE[11]), STR_76(CODE[3]), STR_75(CODE[16]), 
		 -> STR_74(CODE[3]), STR_73(CODE[19]), STR_72(CODE[2]), STR_71(CODE[8]), 
		 -> STR_70(CODE[2]), STR_69(CODE[6]), STR_68(CODE[3]), STR_67(CODE[16]), 
		 -> STR_66(CODE[3]), STR_65(CODE[19]), STR_64(CODE[2]), STR_63(CODE[8]), 
		 -> STR_62(CODE[2]), STR_61(CODE[7]), STR_60(CODE[3]), STR_59(CODE[16]), 
		 -> STR_58(CODE[3]), STR_57(CODE[19]), STR_56(CODE[2]), STR_55(CODE[8]), 
		 -> STR_54(CODE[2]), STR_53(CODE[5]), STR_52(CODE[2]), STR_51(CODE[8]), 
		 -> STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[2]), STR_47(CODE[2]), 
		 -> STR_46(CODE[2]), STR_45(CODE[2]), STR_44(CODE[12]), STR_43(CODE[3]), 
		 -> STR_42(CODE[10]), STR_41(CODE[4]), STR_40(CODE[9]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK2[100]), rx_loop@opland1(BANK2[100]), rx_loop@opcode(BANK1[100]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK2[100]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> comm_d@str(BANK0[10]), tx_send_dec@str(BANK0[10]), display_LCD@str(BANK1[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_83(CODE[9]), STR_82(CODE[17]), STR_19(CODE[14]), STR_18(CODE[13]), 
		 -> STR_17(CODE[16]), STR_16(CODE[17]), STR_15(CODE[16]), STR_14(CODE[2]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[4]), 
		 -> display_LCD@str(BANK1[10]), STR_9(CODE[13]), STR_8(CODE[17]), STR_7(CODE[11]), 
		 -> STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[10]), 
		 -> STR_2(CODE[10]), weekday_3char(CODE[28]), STR_1(CODE[3]), display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> ctm(BANK3[4]), ct2(BANK3[4]), ct1(BANK3[4]), ct0(BANK2[4]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 362
		 -> STR_81(CODE[4]), STR_80(CODE[4]), STR_79(CODE[3]), STR_39(CODE[362]), 
		 -> STR_36(CODE[2]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> comm_d@str(BANK0[10]), STR_32(CODE[2]), STR_31(CODE[5]), STR_30(CODE[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[2]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_20(CODE[3]), tx_send_dec@str(BANK0[10]), weekday_3char(CODE[28]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK3[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK3[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK3[8]), rx_buf(BANK3[8]), tx_buf(BANK3[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK3[8]), rx_buf(BANK3[8]), tx_buf(BANK3[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK3[8]), rx_buf(BANK3[8]), tx_buf(BANK3[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK3[8]), rx_buf(BANK3[8]), tx_buf(BANK3[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _lchika->i2___awdiv
    _integrating->i2___lldiv
    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_rx_loop
    _rx_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_comm_at
    _my_atoi->___wmul
    _comm_d->_my_utoa
    _tx_sendn->___lwdiv
    _print_time->_tx_send_dec
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _tx_send->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _normal_mode_loop->_RTCC_adjust_time_button
    _port_loop->_delay_set
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _my_utoa->___lwdiv
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    ___llmod->___lldiv
    _RTCC_adjust_time_button->_RTCC_adjust_time_dec
    _RTCC_adjust_time_button->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_loop->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_init
    _normal_mode_loop->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_main_init

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  370830
                                            250 BANK1      1     1      0
                          _CTMU_read
                            _LED_OUT
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                           _USB_loop
                            ___lwdiv
                             ___wmul
                          _ctmu_loop
                          _main_init
                   _normal_mode_loop
                            _rx_loop
 ---------------------------------------------------------------------------------
 (1) _rx_loop                                            407   407      0  176625
                                             67 BANK0      3     3      0
                                              0 BANK1    204   204      0
                                              0 BANK2    200   200      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                    7     1      6  147402
                                             60 BANK0      7     1      6
                            _comm_at
                             _comm_d
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    8782
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    8930
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _comm_d                                              16    15      1   42115
                                             43 BANK0     16    15      1
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sendn                                             6     3      3   10314
                                             35 BANK0      6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (3) _comm_at                                              5     0      5   51112
                                             55 BANK0      5     0      5
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _print_time                                           0     0      0   26408
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (4) _tx_send_dec                                         12    11      1   17104
                                             43 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sends                                             2     0      2    6073
                                             15 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    3231
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_caltime                                    4     0      4   15949
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _normal_mode_loop                                     0     0      0  125593
                           _Auto_cut
            _RTCC_adjust_time_button
                        _display_LCD
                          _port_loop
 ---------------------------------------------------------------------------------
 (2) _port_loop                                            1     1      0    4239
                                              4 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                          _delay_set
                      _sw_flag_clear
                       _sw_flag_read
 ---------------------------------------------------------------------------------
 (3) _sw_flag_read                                         3     1      2     748
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _sw_flag_clear                                        3     1      2     644
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _delay_set                                            4     0      4     717
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LED_OUT                                              2     1      1     643
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   64951
                                              0 BANK1     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                            _my_utoa
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   29802
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   15372
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5   10161
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2520
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         0     0      0    6251
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2534
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Puts                                         5     3      2    3717
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1688
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _RTCC_adjust_time_button                              6     0      6   47211
                                             63 BANK0      6     0      6
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   23279
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   23279
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_epoch                                      4     0      4   11213
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    9218
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    5648
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9192
                                             28 BANK0      3     3      0
                                _ADC
                                 _IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8108
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _CTMU_read (ARG)
                                 _IN (ARG)
 ---------------------------------------------------------------------------------
 (3) _OUT                                                  2     1      1     706
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _IN                                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                          500   500      0    4457
                                              0 BANK1    250   250      0
                                              0 BANK2    250   250      0
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8697
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (2) _button_timer_interrupt                               5     2      3    1979
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    3915
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CTMU_read                                            9     7      2    2803
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    2667
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   13828
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    3200
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1924
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    7025
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 14    14      0   30452
                                             30 COMRAM    14    14      0
                            _USB_ISR
                  _charge_time_count
              _delay_timer_interrupt
                        _integrating
                             _lchika
 ---------------------------------------------------------------------------------
 (10) _lchika                                              4     4      0    1020
                                              8 COMRAM     4     4      0
                          i2_LED_OUT
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_LED_OUT                                           2     1      1     166
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (10) _integrating                                         3     3      0     348
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (11) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) _delay_timer_interrupt                               4     2      2     177
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _charge_time_count                                   3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CTMU_read
     ___lldiv
   _LED_OUT
   _OUT
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   ___lwdiv
     _CTMU_read (ARG)
       ___lldiv
     ___lwmod (ARG)
     ___wmul (ARG)
       _ADC (ARG)
       _CTMU_read (ARG)
         ___lldiv
       _IN (ARG)
   ___wmul
     _ADC (ARG)
     _CTMU_read (ARG)
       ___lldiv
     _IN (ARG)
   _ctmu_loop
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _button_timer_interrupt
       _CTMU_read (ARG)
         ___lldiv
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
   _main_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_mode_loop
     _Auto_cut
       _ADC
       _IN
       _OUT
       ___wmul
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _RTCC_adjust_time_button
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod (ARG)
     _port_loop
       _LED_OUT
       _OUT
       _delay_set
       _sw_flag_clear
       _sw_flag_read
   _rx_loop
     _command_operation
       _comm_at
         _RTCC_from_caltime
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         _print_time (ARG)
           _tx_send
             _ringbuf_put
               _ringbuf_num
           _tx_send_dec
             _my_utoa
               ___lldiv (ARG)
               ___llmod (ARG)
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   _IN (ARG)
               ___lwmod (ARG)
             _tx_sends
               _ringbuf_put
                 _ringbuf_num
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends (ARG)
           _ringbuf_put
             _ringbuf_num
       _comm_d
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod (ARG)
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_sendn
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod
           _tx_send
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _month_length
         ___awmod
       _my_atoi
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _my_strcmp
       _print_time
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_send_dec
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_sendn
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _tx_send
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _charge_time_count
   _delay_timer_interrupt
   _integrating
     i2___lldiv
   _lchika
     i2_LED_OUT
     i2___awdiv
     i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0       0      36        0.0%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F5      12       95.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     FA     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FB     100       7      100.0%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      57       1       92.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EC       8        0.0%
DATA                 0      0     3EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 22:45:43 2015

                         get_string_usb@s 00C6                                         _I 002D  
                              _USB_SD_Ptr FC49                                         _S 0300  
                                       _s 030C                              ?_display_LCD 0001  
                       _charge_time_count 58D4                        __size_of_I2C_Start 0030  
                            ?_display_dec 00E4                             my_strcmp@str1 00B9  
                           my_strcmp@str2 00BB                                        _IN 5CFE  
                                      _d1 0336                              ___awdiv@sign 00BE  
               __size_of_normal_mode_loop 00B2                                        _ms 0332  
                           _USBDeviceInit 2752                       ___wmul@multiplicand 00D1  
                      i2___lwdiv@dividend 0001                         ??_RTCC_from_epoch 00EE  
                            _sw_flag_read 511A                        __size_of_CDCInitEP 0070  
                      ?_charge_time_count 0001                              __CFG_CP0$OFF 000000  
                                     ?_IN 0001                              _rx_loop$5326 01C8  
                                     IN@b 00B9      USER_USB_CALLBACK_EVENT_HANDLER@event 000D  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F                                       l142 57D0  
                                     l137 5A7C                                       l234 520C  
                                     l413 3EC8               __end_of_USBStdGetDscHandler 2B50  
                                     l334 5F9E                                       l510 5508  
                                     l407 466A                                       l247 4314  
                                     l319 5C38                                       l343 5B3A  
                                     l159 5C68                                       l503 5FB6  
                                     _ADC 5C48                                       l512 5516  
                                     l282 12CE                                       l514 5524  
                                     l426 22E4                                       l283 12F6  
                                     l355 5ACA                                       l284 131C  
                                     l620 546A                                       l516 5532  
                                     l508 54FA                                       l285 1342  
                                     l286 1366                                       l287 138A  
                                     l455 4F0A                                       l288 13AE  
                                     l289 13D2                                       l617 544E  
                                     l633 584A                                       l563 591C  
                                     l619 545C                                       l635 5858  
                                     l636 5866                                       l910 2590  
                                     _BDT 000D00                                       l839 1086  
                                     l872 4BD8                                       l947 5F6E  
                                     l867 47C2                                       _GIE 007F97  
                                     _ISR 0008                                       _UIE 000F36  
                             comm_at@hand 00F0                                       _UIR 000F62  
                                     _OUT 5432                         get_string_usb@len 00C8  
                           ?_get_quot_rem 00D2                             ?_display_port 0001  
                      caltime_to_epoch@ep 00D4                        caltime_to_epoch@ct 00D2  
                                     _ct0 02FC                                       _ct1 03E9  
                                     _ct2 03ED                                       _ctm 03F1  
                              _USBSuspend 5D82                         _RTCC_from_caltime 5B46  
                           _sw_flag_clear 56AC                              ___awmod@sign 00BE  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2B50  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0045  
             RTCC_adjust_time_button@mode 00F8                       ??_charge_time_count 0001  
                 _RTCC_adjust_time_button 2DDA                   _RTCC_adjust_time_cursor 54EC  
                      ?_RTCC_from_caltime 00EA                                      ??_IN 00B9  
                   ??_USBCtrlTrfRxService 0001                              _I2C_LCD_Putc 5A9E  
                            _I2C_LCD_Puts 4DEC                  __size_ofi2_USBDeviceInit 0144  
                          ??_getsUSBUSART 00C3                                      ?_ADC 00B9  
                USBEnableEndpoint@options 0009                       sw_flag_read@bit_and 00B9  
                 _RTCC_adjust_time_toggle 5FA6                         ??_I2C_LCD_Command 00BD  
                         __end_of_LED_OUT 588C                                      ?_ISR 0001  
                  __end_of_get_string_usb 5844                                      ?_OUT 00B9  
                            _I2C_LCD_init 5654                             comm_d@content 00F3  
                                    l1108 27C8                                      l1170 5B02  
                                    l1169 5B04                                      l1471 2680  
                                    l1466 2624                                      l1900 5200  
              USBConfigureEndpoint@handle 0007                                      l1910 5428  
                                    l1847 44E4                                      l1857 4B84  
                                    OUT@b 00BA                                      l9001 4938  
                                    l9011 4968                                      l9013 496E  
                                    l9021 49A0                                      l9005 4948  
                      __CFG_WPFP$PAGE_127 000000                                      l9025 49B4  
                                    l9017 4992                                      l9009 495C  
                                    l9035 4468                                      l9037 4478  
                                    l9061 51C2                                      l9303 1936  
                                    l9047 44D2                                      l9039 447E  
                                    l9151 4F18                                      l9057 51B0  
                                    l9081 53F6                                      l9153 4F36  
                                    l9161 4F76                                      l9139 396C  
                                    l9059 51BC                                      l9403 5BCE  
                                    l9091 5368                                      l9069 51F2  
                                    l9261 2356                                      l9085 541A  
                                    l9077 53E4                                      l9325 521C  
                                    l9501 48C6                                      l9263 235A  
                                    l9183 4E1A                                      l9191 4E74  
                                    l9079 53F0                                      l9095 53A4  
                                    l9319 55EA                                      l9335 5272  
                                    l9503 48D2                                      l9281 1844  
                                    l9417 3AEC                                      l9409 3AB8  
                                    l9601 1EB8                                      l9329 523E  
                                    l9283 184A                                      l9267 2362  
                                    l9603 1EC0                                      l9507 48F6  
                                    l9293 18AE                                      l9429 3B52  
                                    l9613 1F78                                      l9453 4B72  
                                    l9445 4B18                                      l9189 4E4C  
                                    l9541 29C4                                      l9701 5874  
                                    l9287 1854                                      l9295 18B2  
                                    l9631 1FFE                                      l9623 1FC6  
                                    l9607 1F2C                                      l9447 4B28  
                                    l8921 36A0                                      l9609 1F44  
                                    l9449 4B2E                                      l9369 5642  
                                    l9713 5154                                      l9705 5120  
                                    l9385 2FD2                                      l9481 49CA  
                                    l9299 18D2                                      l9467 5D58  
                                    l9563 5540                                      l9643 20AC  
                                    l9635 201C                                      l9627 1FE0  
                                    l9571 1D62                                      l9539 29BE  
                                    l9731 56D6                                      l9723 517A  
                                    l9387 2FD8                                      l9491 4A46  
                                    l8941 5292                                      l8933 3EB0  
                                    l9469 5D6A                                      l9653 211C  
                                    l9661 21A8                                      l9717 516E  
                                    l9709 513A                                      l9399 5BBC  
                                    l9655 2124                                      l9639 2092  
                                    l9591 1E48                                      l9583 1DB8  
                                    l9575 1D7C                                      l9751 3A46  
                                    l9743 39F8                                      l9727 56B2  
                                    l9735 56E8                                      l9495 487A  
                                    l8945 52B8                                      l8937 5F22  
                                    l9681 5D08                                      l9673 5478  
                                    l9665 21DC                                      l9745 3A0A  
                                    l9729 56C4                                      l9489 4A40  
                                    l9843 279E                                      l9691 5D10  
                                    l8971 43D8                                      l8963 43AE  
                                    l9659 2190                                      l9595 1E52  
                                    l9587 1E2E                                      l9579 1D9A  
                                    l9755 3A70                                      l9739 39CE  
                                    l9827 0FA0                                      l9933 2614  
                                    l9685 5D0C                                      l9677 5D04  
                                    l8981 440E                                      l8973 43DE  
                                    l8957 4398                                      l9749 3A34  
                                    l9773 54DA                                      l9951 2684  
                                    l9927 25FA                                      l9871 280E  
                                    l9847 27A8                                      l9759 3A82  
                                    l9791 0CEE                                      STR_1 FFD8  
                                    STR_2 FF7E                                      l9945 2668  
                                    l9929 2604                                      l9881 287E  
                                    l8969 43CC                                      l8985 441C  
                                    l9777 0BBC                                      STR_3 FF6A  
                                    STR_4 FF3D                                      l9939 2630  
                                    l9875 2818                                      l9859 27D6  
                                    l9867 27EE                                      STR_5 FF25  
                                    STR_6 FF5F                                      l8989 4430  
                                    l9797 0D34                                      STR_7 FF49  
                                    STR_8 FEAB                                      l9959 26AE  
                                    l9967 26D2                                      STR_9 FF0B  
                                    l9985 2724                                      l9969 26DE  
                                    l9977 2702                                      l9987 272A  
                                    l9979 270C                                      l9989 274E  
                   ??_USBCtrlTrfTxService 0001                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u9700 5396  
                                    u9710 53C6                                      u9810 395E  
                                    u9707 538C                                      u9820 3960  
                                    u9740 5C44                                      u9900 4E6E  
                                    u9717 53BC                                      u9830 39B8  
                                    u9840 39BA                                      u9808 394C  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9770 3916                                      u9907 4E64  
                                    u9780 3918                                      u9790 3948  
                                    u9890 4E3C                                      u9897 4E32  
                         _CDCDataInHandle 0096                              comm_at@value 00F4  
                     ??_RTCC_from_caltime 00EE    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 003B                                      _main 23EA  
                ??i2_USBTransferOnePacket 0005                  button_timer_interrupt@bt 00DC  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0005                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 032E                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 5FA6                           _USBDeviceAttach 5AD6  
                                    btemp 0058                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 5FE8                          __end_of_I2C_Stop 5FE2  
                                    pclat 000FFA                               _tx_send_dec 55A4  
                        __end_of_I2C_init 5FCE                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00E6  
                        __end_of_ADC_init 5EFE                             __CFG_IESO$OFF 000000  
              RTCC_adjust_time_dec@i_2112 00F6                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 3628  
                  ??_USBCtrlTrfOutHandler 0003                 __end_of_charge_time_count 591C  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0015  
                           _I2C_LCD_Clear 5F74                                     ??_ADC 00BB  
                                   ADC@ch 00BC                             ADC_init@p_ref 00B9  
                                   ??_ISR 001F                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 00BA                  ??_USBStdGetStatusHandler 0001  
                          ?_USBDeviceInit 0001                        __size_ofi2_LED_OUT 003E  
                       ??_RTCC_to_caltime 00BD                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                                     l10011 374E  
                                   l10003 5E72                                     l10021 3798  
                                   l10013 3758                                     l10025 37C8  
                                   l10113 4112                                     l10121 412E  
                                   l10041 5A94                                     l10019 3790  
                                   l10115 4128                                     l10211 141E  
                                   l10131 4DA2                                     l10029 37FA  
                                   l10053 57D2                                     l10231 14EA  
                                   l10223 1496                                     l10215 1446  
                                   l10207 13F6                                     l10303 324E  
                                   l11031 2528                                     l10153 42E0  
                                   l10313 3322                                     l10321 067E  
                                   l10235 1514                                     l10227 14C0  
                                   l10219 146E                                     l10315 333C  
                                   l10403 0B32                                     l11035 2534  
                                   l10181 4336                                     l10149 42D6  
                                   l10501 04DA                                     l10421 003C  
                                   l10239 153C                                     l10327 06B8  
                                   l10415 0B74                                     l10511 055E  
                                   l10423 004C                                     l11039 253E  
                                   l10257 5C8C                                     l10409 0B52  
                                   l10345 07FE                                     l10329 06D6  
                                   l10521 05E2                                     l10505 0516  
                                   l10441 0178                                     l10433 00DC  
                                   l10291 2EBA                                     l10355 0860  
                                   l10603 11F2                                     l10611 122C  
                                   l10523 05EE                                     l10515 059A  
                                   l10507 0522                                     l10451 0222  
                                   l10427 0088                                     l10285 2E78  
                                   l10277 2E46                                     l10621 1280  
                                   l10541 0FC8                                     l10533 0672  
                                   l10517 05A6                                     l10437 012A  
                                   l10429 00A0                                     l10391 0AEE  
                                   l10607 120E                                     l10527 062A  
                                   l10471 0372                                     l10463 02FA  
                                   l10455 0270                                     l10447 01D4  
                                   l10711 16CE                                     l10703 167C  
                                   l10385 0ACC                                     l10625 1286  
                                   l10537 0FBE                                     l10473 037E  
                                   l10529 0636                                     l10721 1760  
                                   l10713 16D2                                     l10705 1680  
                                   l10635 580C                                     l10651 59BE  
                                   l10299 3244                                     l10483 0402  
                                   l10467 0336                                     l10459 02BE  
                                   l10731 179E                                     l10637 5810  
                                   l10653 59C2                                     l10397 0B10  
                                   l10581 1128                                     l10557 1046  
                                   l10493 0486                                     l10477 03BA  
                                   l10485 040E                                     l10725 1782  
                                   l10807 4C08                                     l10591 117E  
                                   l10559 104C                                     l10495 0492  
                                   l10479 03C6                                     l10735 17DE  
                                   l10727 178A                                     l10719 1742  
                                   l10743 180C                                     l10489 044A  
                                   l10771 474C                                     l10499 04CE  
                                   l10589 1174                                     l10781 4776  
                                   l10685 159A                                     l10791 47B4  
                                   l10775 4754                                     l10767 4744  
                                   l10695 162A                                     l10785 47A6  
                                   l10769 4748                                     l10697 162E  
                                   l10689 15CC                                     l10779 4758  
               __end_of_RTCC_from_caltime 5B7C                                     ?_main 0001  
                 __size_of_put_string_usb 0042                            ??_get_quot_rem 00D6  
                          ??_display_port 00C3                           __end_of___awdiv 443A  
                                   _ADRES 000FC3                                     STR_10 FFCA  
                                   STR_11 FFDE                                     STR_20 FFD8  
                                   STR_12 FFE1                                     STR_21 FFF3  
                                   STR_13 FFE4                                     STR_30 FFF3  
                                   STR_14 FF98                                     STR_22 FFF7  
                                   STR_23 FFF7                                     STR_31 FFB7  
                                   STR_15 FECD                                     STR_32 FFF3  
                                   STR_24 FFE7                                     STR_40 FF91  
                                   STR_16 FEBC                                     STR_33 FFDE  
                                   STR_25 FFDB                                     STR_41 FFCE  
                                   STR_17 FEED                                     STR_34 FFE1  
                                   STR_50 FF98                                     STR_26 FFF5  
                                   STR_42 FF74                                     STR_18 FF18  
                                   STR_35 FFE4                                     STR_43 FFED  
                                   STR_51 FFA2                                     STR_27 FF9A  
                                   STR_19 FEFD                                     STR_28 FFF3  
                                   STR_52 FECB                                     STR_36 FF98  
                                   STR_60 FFF0                                     STR_44 FF31  
                         __end_of___awmod 49BE                                     STR_45 FFA8  
                                   STR_29 FFD5                                     STR_53 FFC1  
                                   STR_37 FFBC                                     STR_61 FFAA  
                                   STR_38 FEDB                                     STR_62 FFEB  
                                   STR_70 FFAF                                     STR_54 FFFB  
                                   STR_46 FFF9                                     STR_47 FECB  
                                   STR_71 FEA3                                     STR_63 FEA3  
                                   STR_55 FEA3                                     STR_39 FD2E  
                                   STR_72 FFEB                                     STR_64 FFEB  
                                   STR_56 FFEB                                     STR_48 FFCC  
                                   STR_80 FFC6                                     STR_81 FFC6  
                                   STR_73 FE98                                     STR_65 FE98  
                                   STR_49 FFFD                                     STR_57 FE98  
                                   STR_74 FFEA                                     STR_66 FFEA  
                                   STR_58 FFEA                                     STR_75 FEDD  
                                   STR_67 FEDD                                     STR_83 FF88  
                                   STR_59 FEDD                                     STR_76 FFF0  
                                   STR_68 FFF0                                     STR_69 FFB1  
                                   STR_77 FF54                                     STR_78 FFEE  
                                   STR_79 FFD2         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 44F6                                     u11220 14AC  
                                   u12100 31B2                                     u11070 436E  
                                   u11230 14D6                                     u12110 31B4  
                                   u11240 1500                                     u12120 31F2  
                                   u10520 5458                                     u10600 5862  
                                   u11250 152A                                     u12130 31F4  
                                   u11075 4360                                     u12140 3232  
                                   u10540 5466                                     u10620 5870  
                         ___awdiv@divisor 00BB                                     u12150 3234  
                                   u11335 3276                                     u12080 3172  
                                   u10560 5474                                     u11360 3312  
                         __end_of___llmod 4B96                    __end_of_USBDeviceTasks 2C96  
                                   u12090 3174                                     u10580 5854  
                                   u10930 373E                                     u10790 25EA  
                                   _LATB2 007C52                                     _LATA5 007C4D  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   u12537 5AD0                                     _LATA7 007C4F  
                                   u10938 3742                                     _LATB6 007C56  
                                   u12547 4E48                                     _LATB7 007C57  
                                   u12557 5F82                                     u10798 25EE  
                                   u12567 5B40                                     u12577 5D60  
               ?_USBCtrlEPServiceComplete 0001                                     u12587 4300  
                                   u10995 5EEE                                     u10996 5EF0  
                                   u12597 430A                           __end_of___lwdiv 520A  
                          ?_sw_flag_clear 00B9                           __end_of___lwmod 5432  
                                   i2l633 59EE                                     i2l635 59FA  
                                   i2l636 5A06                                     i2l902 00AA  
                                   _UADDR 000F38                           ___awdiv@counter 00BD  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 00CA                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 4AFC                           __end_of_comm_at 54EC  
                                   _sd000 FD2A                                     _sd001 FC94  
                                   _sd002 FCC8                      caltime_to_epoch@year 00DA  
                              i2memset@p1 0001                                     _colon 00A6  
                      __size_of_RTCC_init 002E                           ?_get_string_usb 00C6  
                      __size_of_RTCC_loop 0046                          ringbuf_delete@rb 00B9  
                                   main@i 01FA                         __end_of_I2C_Start 5C48  
                         __end_of_my_atoi 4A5E                                     tablat 000FF5  
                         __end_of_my_utoa 4F90                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5366                    ?_delay_timer_interrupt 0001  
                        __end_of_USB_init 5FD8                          __end_of_USB_loop 4C30  
              __size_of_ringbuf_backspace 008E                           __end_of_rx_loop 182A  
                            ?_integrating 0001                                     status 000FD8  
                         __end_of_tx_send 5F58                          __end_ofi2_memset 5DDA  
                        __end_of_Delay_ms 5D82                            delay_set@value 00BB  
                      __size_ofi2___awdiv 0084                         month_length@month 00BF  
                             CTMU_read@ch 00C9                        __size_ofi2___lldiv 0082  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 00B9  
            __size_of_USBStdSetCfgHandler 00E2                              LED_OUT@value 00B9  
                          ?_I2C_LCD_Clear 0001                           __initialization 4F90  
                       i2___lldiv@divisor 0005                              __end_of_main 25C6  
                       i2___lldiv@counter 000D                     _control_signal_bitmap 004A  
                        __end_of_Auto_cut 3342                       ringbuf_init@bufsize 00BD  
                        RTCC_from_RTCC@ep 00E3                          RTCC_from_RTCC@ct 00E1  
              RTCC_adjust_time_inc@i_2099 00F6                 __size_of_USBCtrlEPService 00CE  
                                  ??_main 00FF                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001                 ??_RTCC_adjust_time_button 00FE  
               ??_RTCC_adjust_time_cursor 00B9                                 ??_LED_OUT 00BA  
                             ?_USBSuspend 0001                 ??_RTCC_adjust_time_toggle 00B9  
                       __end_of_CTMU_init 5E2A                         __end_of_CTMU_read 437C  
                            _cdc_mem_type 00A2                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 5F1E                   __end_of_USBDeviceAttach 5B0E  
                        _CDCDataOutHandle 0098                         _getsUSBUSART$4439 00C4  
                        ___llmod@dividend 00C6                         _I2C_LCD_SetCursor 5CD2  
                     display_time_1602@ep 00F2                       display_time_1602@ct 00F0  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 00B9  
                               ??_USB_ISR 001F                        I2C_LCD_Command@ans 00BE  
                         getsUSBUSART@len 00C2                     __size_of_CDCTxService 018C  
                                  i2l1120 2B80                                    i2l1130 2C1A  
                                  i2l1131 2C92                                    i2l1108 2CFC  
                                  i2l1132 2C2C                                    i2l1321 3546  
                                  i2l1330 35AA                                    i2l1307 42AA  
                                  i2l1412 3CA8                                    i2l1260 4592  
                                  i2l1261 4514                                    i2l1414 3CF2  
                                  i2l1262 451A                                    i2l1270 59A4  
                                  i2l1336 1ADC                                    i2l1257 4504  
                                  i2l1194 34BC                                    i2l1355 1CA2  
                                  i2l1900 579C                         __end_ofi2_LED_OUT 5A28  
                          __CFG_WDTEN$OFF 000000                                    i2l6021 4AC8  
                                  i2l1847 5108                                    i2l6041 384A  
                                  i2l6017 4AAC                                    i2l6205 1D04  
                                  i2l6109 453A                                    i2l6037 3842  
                                  i2l6207 1D10                                    i2l6151 1B52  
                                  i2l6071 2A14                                    i2l6119 457A  
                                  i2l6063 38C0                                    i2l6047 3876  
                                  i2l6137 1AD8                                    i2l6163 1BB4  
                                  i2l6091 2B28                                    i2l6083 2AC6  
                                  i2l6075 2A2C                                    i2l6173 1C06  
                                  i2l6157 1B96                                    i2l6093 2B30  
                                  i2l6085 2ACE                                    i2l7301 5C12  
                                  i2l6191 1C8E                                    i2l6175 1C22  
                                  i2l6159 1B98                                    i2l8103 2BA6  
                                  i2l5705 3B94                                    i2l6433 306A  
                                  i2l5641 3C76                                    i2l6097 2B38  
                                  i2l6427 3046                                    i2l5555 4D2C  
                                  i2l6179 1C3C                                    i2l7323 59A0  
                                  i2l7403 2D40                                    i2l8211 508E  
                                  i2l8203 5076                                    i2l5709 3B9E  
                                  i2l6445 30C8                                    i2l5565 5A38  
                                  i2l6189 1C82                                    i2l7413 2DA4  
                                  i2l8133 2C10                                    i2l8125 2BE8  
                                  i2l8109 2BCC                                    i2l8221 50BA  
                                  i2l5719 3BCA                                    i2l5727 3C02  
                                  i2l6199 1CBE                                    i2l6471 355C  
                                  i2l7351 4036                                    i2l7343 3FF0  
                                  i2l7407 2D48                                    i2l8119 2BDC  
                                  i2l8223 50C6                                    i2l8207 5080  
                                  i2l8303 343E                                    i2l5729 3C0A  
                                  i2l5737 3C42                                    i2l6449 30E2  
                                  i2l5569 5A46                                    i2l5585 45F0  
                                  i2l5577 45C6                                    i2l5657 3CD4  
                                  i2l5649 3C96                                    i2l5665 3CFC  
                                  i2l6481 357E                                    i2l8161 2C8E  
                                  i2l8153 2C52                                    i2l8081 2B78  
                                  i2l8073 2B68                                    i2l8233 50FA  
                                  i2l8225 50CA                                    i2l8313 4C3C  
                                  i2l6651 559E                                    i2l6643 5556  
                                  i2l5683 5CA6                                    i2l6483 3584  
                                  i2l6467 3550                                    i2l6379 3466  
                                  i2l7339 3FE8                                    i2l7355 4050  
                                  i2l8139 2C24                                    i2l8331 5918  
                                  i2l8323 58D8                                    i2l8243 576A  
                                  i2l5597 464C                                    i2l5685 5CAC  
                                  i2l6493 35C6                                    i2l6469 3556  
                                  i2l7357 4056                                    i2l8309 4C34  
                                  i2l8245 5772                                    i2l6479 3578  
                                  i2l6399 34E2                                    i2l7391 2D0A  
                                  i2l7375 2CD8                                    i2l8159 2C72  
                                  i2l8095 2B96                                    i2l8327 58E0  
                                  i2l8263 58AC                                    i2l8191 504E  
                                  i2l8255 5792                                    i2l8247 5776  
                                  i2l6665 422A                                    i2l5689 5CB2  
                                  i2l6497 35E4                                    i2l8169 5A12  
                                  i2l8193 5056                                    i2l8185 5038  
                                  i2l8281 3346                                    i2l6691 42B4  
                                  i2l6667 422E                                    i2l5891 5DB8  
                                  i2l7299 5C10                                    i2l7379 2CE0  
                                  i2l8195 505A                                    i2l8179 5028  
                                  i2l6685 4290                                    i2l8285 334E  
                                  i2l6679 4270                                    i2l5895 5DC8  
                                  i2l7399 2D22                                    i2l8295 33F8  
                                  i2l8703 0086                                    i2l8289 3382  
                                  i2l5987 417A                                    i2l8709 0092  
                                  i2l8691 005C                                    i2l8695 0068  
                      ?_I2C_LCD_SetCursor 00BF                                    _RCREG1 000FAF  
                           CDCTxService@i 00C3                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                         sw_flag_clear@port 00BB  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0005  
                       ??i2_USBDeviceInit 0009           __size_ofi2_USBTransferOnePacket 00BA  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 5F74  
                      epoch_to_caltime@ep 00DC                        epoch_to_caltime@ct 00DA  
                    get_string_usb@rx_len 00CB                         _shortPacketStatus 004E  
                     ??_I2C_LCD_SetCursor 00C0                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 00DA                __size_of_charge_time_count 0048  
                         USBDeviceTasks@i 001E                     caltime_to_epoch@epoch 00DC  
             USBStdFeatureReqHandler@pUEP 0016                  USBTransferOnePacket@data 00BA  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 00C1  
                            ?_ringbuf_pop 00C1                              ?_ringbuf_num 00B9  
                            ?_ringbuf_put 00C1                     caltime_to_epoch@month 00E0  
                                  ___lmul 5280                              ?_putUSBUSART 00B9  
                         _caltime_to_RTCC 3EC8                                    ___wmul 5B7C  
                      ??_epoch_to_caltime 00DE                                 ??___awdiv 00BD  
                               ??___awmod 00BD              __end_of_RTCC_adjust_time_dec 21FE  
            __end_of_RTCC_adjust_time_inc 1F9A                                    _d_to_x 5DDA  
                               ??___lldiv 00C1                      __end_of_getsUSBUSART 3800  
                            ?_timer0_init 0001                                 ??___llmod 00CE  
                       __end_of_RTCC_init 5CA4                              ?_timer1_init 00B9  
                               ??___lwdiv 00D9                         __end_of_RTCC_loop 5962  
                               ??___lwmod 00BD                              ?_timer3_init 0001  
                                  _comm_d 0BB6                         _USBEnableEndpoint 5A28  
         __size_of_USBStdGetStatusHandler 00BA                                    _lchika 3342  
                        _normal_mode_loop 4720                                    _memset 5BB2  
                                  clear_0 4F96                                    clear_1 4FB6  
                                  clear_2 4FC2                           put_string_usb@s 00C5  
                         __CFG_CLKOEC$OFF 000000                              rx_loop@ascii 01CA  
                        ___awdiv@quotient 00BF                           ___awmod@divisor 00BB  
                         ??_sw_flag_clear 00BB                      __size_of_display_LCD 053E  
                         ___awmod@counter 00BD                                    _x_to_d 5EFE  
                      ?_USBEnableEndpoint 0009                                    _rx_buf 03CA  
              __size_of_RTCC_from_caltime 0036                         _command_operation 0000  
                                  _tx_buf 03D2                      __size_of_display_dec 0058  
                               ??_comm_at 00F5                            i2___awdiv@sign 0006  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 0288  
                    rx_loop@comm_buf_init 01FD                              __pdataCOMRAM 0057  
                      ?_command_operation 00F5                         __end_ofi2___awdiv 5098  
                               ?_I2C_Send 0001                              _CDCTxService 25C6  
                               ?_I2C_Stop 0001                         __end_ofi2___lldiv 511A  
                       __end_ofi2___lwdiv 57A6                              __mediumconst FC48  
                           _cut_time_flag 004B                                 ?_I2C_init 0001  
               __end_of_I2C_LCD_SetCursor 5CFE                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                 ??_my_atoi 00D7  
                                  tblptru 000FF8                                 ?_ADC_init 0001  
                     ??_USBEnableEndpoint 000A                            ?_I2C_IdleCheck 0001  
                               ??_my_utoa 00E1                                 ??_rx_loop 00FC  
                  delay_timer_interrupt@d 0001                                 ??_tx_send 00C8  
                             _CtrlTrfData 000D38                          __end_of_tx_sendn 5280  
                        __end_of_tx_sends 53D0                       ??_command_operation 00FB  
                    _controlTransferState 0049            RTCC_adjust_time_button@cnt_dec 00FC  
                    __CFG_LS48MHZ$SYS48X8 000000            RTCC_adjust_time_button@cnt_inc 00FA  
                              __accesstop 0060                   __end_of__initialization 500A  
                            CTMU_read@sum 00CA                      __end_of_get_quot_rem 3DF4  
                    __end_of_display_port 3A9A                             ___rparam_used 000001  
                         ??_I2C_LCD_Clear 00BF                           _RTCC_from_epoch 5E9A  
                __size_of_USBStallHandler 0046                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5A64                        i2___lldiv@dividend 0001  
                           __end_of_sd000 FD2E                             __end_of_sd001 FCC8  
                           __end_of_sd002 FCFC                              __pidataBANK0 5FEC  
                            __pidataBANK1 5FE8                  command_operation@opland1 00F7  
                command_operation@opland2 00F9          __size_of_USBCtrlEPAllowDataStage 009E  
               __end_of_command_operation 0678             __size_of_USBConfigureEndpoint 0094  
             __end_of_USBCtrlTrfInHandler 42BA                           __CFG_DSWDTPS$G2 000000  
                              __end_of_IN 5D2A                           _I2C_LCD_Command 5B0E  
                          _put_string_usb 59A8                        __size_of_delay_set 0024  
                  i2_USBTransferOnePacket 45B0                                 ?_USB_init 0001  
                               ?_USB_loop 0001                   sleep_loop@prev_power_sw 0057  
                        I2C_LCD_Command@c 00BD                                ??_I2C_Send 00BB  
                       _CDCTxService$4487 00C1                                ??_I2C_Stop 00BB  
                              _cdc_notice 0318                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 0001                                _cdc_rx_len 00A3  
                              ??_I2C_init 00B9                                 ?_Delay_ms 00B9  
                              _cdc_tx_len 00A5                                ??_ADC_init 00B9  
              caltime_to_epoch@month_2017 00DB                  ??_USBCtrlTrfSetupHandler 001B  
                  RTCC_adjust_time_dec@ep 00F0                    RTCC_adjust_time_dec@ct 00EE  
                        ?_USBDeviceAttach 0001                    _USBStdGetStatusHandler 44F6  
                      i2___lldiv@quotient 0009                    RTCC_adjust_time_inc@ep 00F0  
                  RTCC_adjust_time_inc@ct 00EE                        __size_of_main_init 00A6  
                              __pbssBANK0 0060                                __pbssBANK1 01FE  
                              __pbssBANK2 02FA                                __pbssBANK3 0300  
                               ?_Auto_cut 0001                        __size_of_ctmu_loop 0110  
                               ISR@cnt_t0 0033                                 ISR@cnt_t1 003F  
                 __end_of_caltime_to_RTCC 3F98                           _RTCC_to_caltime 466A  
                            ?_tx_send_dec 00E4               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 007B                      __size_of_integrating 009A  
        __end_of_USBCtrlEPServiceComplete 3536               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FD18                      USBCtrlTrfRxService@i 0001  
                                 ?___lmul 00C6                                   ?___wmul 00CF  
                                 ?_d_to_x 0001                            i2LED_OUT@value 0001  
                  __end_of_put_string_usb 59EA                                   ?_comm_d 00E4  
                                 ?_lchika 0001                                   ?_memset 00B9  
                    I2C_LCD_SetCursor@col 00C2                            ___lmul@product 00CE  
                              _device_dsc FD18                      I2C_LCD_SetCursor@row 00BF  
                        _USBCtrlEPService 3F98                                   ?_x_to_d 0001  
                            I2C_Send@data 00BB                                _ep_data_in 008A  
             __end_of_USBCtrlTrfRxService 312E                        _USBCheckStdRequest 3536  
                              ??_USB_init 00C2                         _configDescriptor1 FC51  
                              ??_USB_loop 00CD                                   _LED_OUT 5844  
                        ??_get_string_usb 00CA                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 00B9                        __size_of_my_strcmp 00A4  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 3C4A  
                              ??_Delay_ms 00BB                       _USBStdSetCfgHandler 3800  
              __size_of_I2C_LCD_SetCursor 002C                        __size_of_port_loop 02E4  
                  I2C_LCD_SetCursor@F8672 01FB                           __CFG_WDTPS$1024 000000  
                            tx_sendn@temp 00E0                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                 ??_delay_timer_interrupt 0003                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 5FE2                   __end_of_RTCC_from_epoch 5EBC  
                    timer1_init@prescaler 00BB                      _RTCC_adjust_time_dec 1F9A  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 1D36  
                              ??_Auto_cut 00D5                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 00DF                             _cdc_trf_state 00A4  
                         integrating@port 0010                         __end_of_delay_set 5E9A  
                           ?_month_length 00BF                       epoch_to_caltime@day 00E2  
                       RTCC_from_epoch@ep 00EC                         RTCC_from_epoch@ct 00EA  
                     epoch_to_caltime@num 00E6                                 _I2C_Start 5C18  
                                 _pCDCDst 0090                                   _pCDCSrc 0093  
                   __size_of_getsUSBUSART 00EA                                   __Hparam 0000  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 52F6  
                                 __Lparam 0000                              USB_loop@data 00CF  
                              _ctmu_value 0322                   __end_of_I2C_LCD_Command 5B46  
                          display_LCD@str 0100                __size_of_USBEnableEndpoint 003C  
                    ??_USBCheckStdRequest 001B             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 00B9                                   ___awdiv 437C  
                         __size_of___lmul 0076                                   ___awmod 491C  
                                 ___lldiv 443A                          ??_USBDeviceTasks 001E  
                         __size_of___wmul 0036                                   ___llmod 4AFC  
                                 ___lwdiv 5192                           ?_put_string_usb 00C5  
                       ??_USBStallHandler 0001                                   ___lwmod 53D0  
                         __size_of_d_to_x 0028                __size_of_command_operation 0678  
                         __size_of_comm_d 0402                      __size_of_ringbuf_pop 00CC  
                    __size_of_ringbuf_num 00EE                      __size_of_ringbuf_put 00D4  
                         __CFG_STVREN$OFF 000000                           __size_of_lchika 0100  
                       __end_of_main_init 4878                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 00FF                                   __pcinit 4F90  
                      getsUSBUSART@buffer 00C0                                 ?_tx_sendn 00DC  
                               ?_tx_sends 00C8                           __size_of_memset 0034  
                           rx_loop@i_2491 00FE                 __end_of_configDescriptor1 FC94  
                                 __ramtop 0F00                      __size_of_timer0_init 003A  
                                 _halfsec 00A9                      __size_of_timer1_init 0050  
                                 __ptext0 23EA                                   __ptext1 1564  
                                 __ptext2 5E2A                                   __ptext3 4D5E  
                                 __ptext4 0000                                   __ptext5 4878  
                                 __ptext6 49BE                                   __ptext7 0BB6  
                                 __ptext8 520A                                   __ptext9 5490  
                           I2C_LCD_Putc@c 00BD                                   _inPipes 0075  
                    __size_of_timer3_init 002C                         __end_of_ctmu_loop 323E  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 00BD  
                                 _comm_at 5490               _USBDeferOUTDataStagePackets 0043  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                        _time_change_flag 004F                          _caltime_to_epoch 182A  
                            __size_of_ISR 00DE                                 _T1CONbits 000FCD  
                            __size_of_OUT 005E                                   _cut_cnt 0328  
                            ??_USBSuspend 0015                   __size_of_RTCC_from_RTCC 0022  
                               _T3CONbits 000F79                          ___awmod@dividend 00B9  
                               _T5CONbits 000F22                                   _my_atoi 49BE  
                         i2_USBDeviceInit 2C96                          i2USBDeviceInit@i 0009  
                                 _my_utoa 4F08                             rx_loop@opcode 0164  
                      __end_of_USB_CD_Ptr FC51                                   _rx_loop 1564  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 4720  
                                 _tx_send 5F3C                                   lchika@i 000C  
                   ?_RTCC_adjust_time_dec 00EE                     ?_RTCC_adjust_time_inc 00EE  
                   __size_of_get_quot_rem 00D4                     __size_of_display_port 00DA  
                    end_of_initialization 500A                              _getsUSBUSART 3716  
                              delay_set@d 00B9                                 _CTMU_init 5E02  
                               _CTMU_read 42BA                  __end_of_normal_mode_loop 47D2  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FC4F  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0039  
                          ??_month_length 00C0                            display_dec@dec 00EF  
                                 memset@c 00BB                                   memset@n 00BD  
                                 memset@p 00BF                            display_dec@str 00E5  
         _dummy_encapsulated_cmd_response 03C2                  ?_USBStdFeatureReqHandler 0001  
                        ?_caltime_to_RTCC 00C2                                ?_I2C_Start 00BB  
                               i2_LED_OUT 59EA                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 00BD                      timer3_init@prescaler 00BA  
                       __end_of_my_strcmp 491C                                ?_CDCInitEP 0001  
                         ___lldiv@counter 00C5                         ?_is_usb_available 0001  
                          tx_send_dec@dec 00EF                            tx_sendn@digits 00DE  
                          tx_send_dec@str 00E5                        __end_of_USBSuspend 5DAE  
                          ??_ringbuf_init 00BF                   _USBCtrlEPAllowDataStage 4A5E  
                       __end_of_port_loop 129C                                _sleep_flag 00AC  
                      ??_is_usb_available 00B9                                   postdec1 000FE5  
                                 postdec2 000FDD                      sw_flag_clear@bit_and 00B9  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 3442  
                              ??_tx_sendn 00DF                                ??_tx_sends 00CA  
              _USBStatusStageEnabledFlag1 0046                _USBStatusStageEnabledFlag2 0047  
                      USBEnableEndpoint@p 000A                                 _PORTBbits 000F81  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 5C76  
                               _RTCC_loop 591C                              _display_flag 004C  
               epoch_to_caltime@day_cache 02FA                              _get_quot_rem 3D20  
                            _display_port 39C0                                _print_time 2EFE  
                              _print_port 00AB                            _ringbuf_delete 5E2A  
               __size_of_epoch_to_caltime 01EC                          __CFG_CPUDIV$OSC1 000000  
                     RTCC_from_caltime@ep 00EC                       RTCC_from_caltime@ct 00EA  
                      _BothEP0OutUOWNsSet 0040                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                comm_d@port 00E4  
                               i2___awdiv 5014                         __size_of_I2C_init 0012  
               USBConfigureEndpoint@EPNum 0006                         i2___lwdiv@divisor 0003  
                               i2___lldiv 5098                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 0001                                 i2___lwdiv 5754  
                       i2___lwdiv@counter 0007                          ?_RTCC_from_epoch 00EA  
                              ?_CTMU_init 0001                                ?_CTMU_read 00C6  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                comm_at@max 00F3  
                              comm_at@min 00F2                                 _USTATcopy 0056  
                               Auto_cut@i 00D7           __size_of_button_timer_interrupt 02C8  
                 timer1_init@clock_select 00B9              __end_of_USBTransferOnePacket 3B72  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 0001  
                              ?i2_LED_OUT 0001                         putUSBUSART@length 00BB  
                    __size_of_tx_send_dec 0058                       __CFG_MSSP7B_EN$MSK7 000000  
                        ?_I2C_LCD_Command 0001                            ringbuf_init@rb 00B9  
                              lchika@cntf 033F                    _USBCtrlTrfSetupHandler 4E7A  
                           ??_display_LCD 00F5                            ringbuf_pop@ret 00C7  
                           ??_display_dec 00E5                   ?i2_USBTransferOnePacket 0001  
                   __end_of_USBDeviceInit 28B4                            __end_of___lmul 52F6  
                ?_RTCC_adjust_time_button 00F8                  ?_RTCC_adjust_time_cursor 0001  
                          __end_of___wmul 5BB2                             ?_sw_flag_read 00B9  
                          __end_of_d_to_x 5E02                             __pidataCOMRAM 5FEB  
                ?_RTCC_adjust_time_toggle 0001                   __end_ofi2_USBDeviceInit 2DDA  
                          __end_of_comm_d 0FB8                            __end_of_lchika 3442  
                  __end_of_ringbuf_delete 5E50                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memset 5BE6                                ?_RTCC_init 0001  
                              ?_RTCC_loop 0001                          __CFG_DSWDTEN$OFF 000000  
                   __end_of_sw_flag_clear 5700                         _USBBusIsSuspended 00A1  
                          __end_of_x_to_d 5F1E                     epoch_to_caltime@month 00E5  
                     start_initialization 4F90                                CTMU_read@i 00CE  
                        month_length@year 00C4                   ?_USBStdGetStatusHandler 0001  
                             __end_of_ADC 5C76                        i2___awdiv@quotient 0007  
                             __end_of_ISR 00E6             USBCtrlTrfRxService@byteToRead 0002  
                             __end_of_OUT 5490                         __size_of_USB_init 000A  
                       __size_of_USB_loop 009A                             ?_I2C_LCD_Putc 0001  
                           ?_I2C_LCD_Puts 00BD                    ??_RTCC_adjust_time_dec 00F2  
                  ??_RTCC_adjust_time_inc 00F2                             ?_I2C_LCD_init 0001  
                             _cdc_data_rx 0342                               _cdc_data_tx 0382  
                       __size_ofi2_memset 002C                                ?i2___awdiv 0001  
            __end_of_USBConfigureEndpoint 4D5E                         __size_of_Delay_ms 002C  
                              ?i2___lldiv 0001                          ?_RTCC_to_caltime 00BB  
                              ?i2___lwdiv 0001           __end_of_USBStdFeatureReqHandler 1D36  
       __end_of_USBCtrlEPAllowStatusStage 41F6                  __end_of_USBCtrlEPService 4066  
                         ___llmod@divisor 00CA                         __size_of_Auto_cut 0104  
                             ??_I2C_Start 00BC                           ___llmod@counter 00CE  
               ??_USBCtrlEPAllowDataStage 0002                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 00C1                     __end_of_I2C_LCD_Clear 5F8E  
                  _pBDTEntryEP0OutCurrent 0037                   USBTransferOnePacket@dir 00B9  
                 USBTransferOnePacket@len 00BC            __end_ofi2_USBTransferOnePacket 466A  
                                ??___lmul 00CE                                  ??___wmul 00D3  
                          USB_loop@rx_len 00CD                       _USBStdGetDscHandler 2A02  
                                ??_d_to_x 00C1                            ??_sw_flag_read 00BB  
                       __CFG_ADCSEL$BIT12 000000                                  ??_comm_d 00E5  
                             __pdataBANK0 00FF                               __pdataBANK1 01FB  
                                ??_lchika 0009                                  ??_memset 00BF  
                  _button_timer_interrupt 129C                                  ??_x_to_d 00B9  
                         ?_ringbuf_delete 00B9                      __end_of_month_length 39C0  
                          _RTCC_from_RTCC 5EBC                       __end_of_display_LCD 0BB6  
                  _USBActiveConfiguration 0055            __end_of_USBStdGetStatusHandler 45B0  
                             ?_print_time 0001                                  ?_LED_OUT 00B9  
                     __end_of_display_dec 5654                               __pbssCOMRAM 002D  
                     RTCC_to_caltime@dumy 00BD                             __pcstackBANK0 00B9  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C4                            ??_I2C_LCD_Putc 00BD  
                        sw_flag_read@port 00BB                            ??_I2C_LCD_Puts 00BF  
                                LED_OUT@b 00BA                            ??_I2C_LCD_init 00C0  
                 command_operation@opcode 00F5                               _caltime_now 00AE  
                           _delay_display 0050                      __end_of_ringbuf_init 5754  
                    ?_USBStdGetDscHandler 0001                               _charge_time 0060  
                        tx_send@asciicode 00C8                                  ?_USB_ISR 0001  
                             ??_CTMU_init 00B9                               ??_CTMU_read 00C8  
          __size_of_delay_timer_interrupt 0048             __end_of_delay_timer_interrupt 58D4  
              __end_of_USBWakeFromSuspend 5C18                             ??_integrating 000E  
                   RTCC_adjust_time_dec@i 00F7                           _USBStallHandler 5962  
                            _pBDTEntryOut 0081                     RTCC_adjust_time_inc@i 00F7  
              __end_of_USBCheckCDCRequest 3D20                  __end_of_caltime_to_epoch 1AB2  
                             ??i2_LED_OUT 0002                           millis_timer@cnt 003D  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 00C9  
                        ___lwdiv@dividend 00D5           __end_of_RTCC_adjust_time_button 2EFE  
         __end_of_RTCC_adjust_time_cursor 5548                                 _delay_set 5E76  
                               _edit_flag 00A8                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 5FBC                             __pmediumconst FC48  
                                ?___awdiv 00B9                                 __ptext100 58D4  
                               __ptext101 5FE2                                 __ptext110 4A5E  
                               __ptext102 2B50                                 __ptext111 3536  
                               __ptext103 2C96                                 __ptext120 45B0  
                               __ptext112 3800                                 __ptext104 5BE6  
                               __ptext121 5A28                                 __ptext113 5DAE  
                               __ptext105 5D82                                 __ptext122 4CCA  
                               __ptext114 44F6                                 __ptext106 5962  
                               __ptext123 5548                                 __ptext115 2A02  
                               __ptext107 3F98                                 __ptext124 3016  
                               __ptext116 1AB2                                 __ptext108 4E7A  
                               __ptext125 4132                                 __ptext117 5CA4  
                               __ptext109 3442                                 __ptext126 41F6  
                               __ptext118 3C4A                                 __ptext127 3B72  
                               __ptext119 52F6                                  ?___awmod 00B9  
                                ?___lldiv 00B9                        charge_time_count@i 0003  
                                ?___llmod 00C6                                  ?___lwdiv 00D5  
                                ?___lwmod 00B9                     _is_usb_available$2687 00B9  
                         I2C_LCD_Putc@ans 00BE                    __end_of_RTCC_from_RTCC 5EDE  
                         I2C_LCD_Puts@ans 00C0                          ?i2_USBDeviceInit 0001  
              USBCBSendResume@delay_count 01FE                                  ?_comm_at 00F0  
                             ??_RTCC_init 00B9                               ??_RTCC_loop 00E5  
                    _USBTransferOnePacket 3A9A                         __size_of_tx_sendn 0076  
                       __size_of_tx_sends 006A                                 _epoch_now 00B5  
                               _main_init 47D2                               I2C_Start@rw 00BB  
                        _epoch_to_caltime 21FE                                  _I2C_Send 5F8E  
                                OUT@value 00B9                                  _I2C_Stop 5FD8  
                    __CFG_RTCOSC$T1OSCREF 000000                                 _ctmu_flag 00A7  
                                _I2C_init 5FBC                          _display_LCD$5323 010A  
                               _ctmu_loop 312E                                  ?_my_atoi 00D5  
                                _ADC_init 5EDE                               _comm_d$5324 00EF  
                   __end_of_I2C_IdleCheck 5F3C                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 55A4                                  ?_my_utoa 00DC  
                     ringbuf_backspace@rb 00C1                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 008D                          ___lwdiv@quotient 00DA  
                                ?_rx_loop 0001                               ??i2___awdiv 0005  
                                ?_tx_send 0001                               ??i2___lldiv 0009  
            __size_of_USBCtrlTrfRxService 0118                                my_atoi@ret 00DB  
           USBConfigureEndpoint@direction 0001                                my_atoi@str 00D5  
                             ??i2___lwdiv 0005                               __size_of_IN 002C  
                               d_to_x@dec 00C1                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
                       ?_normal_mode_loop 0001              __size_of_USBCtrlTrfTxService 00D8  
                ringbuf_init@internal_buf 00BB                            ___wmul@product 00D3  
              ??_USBCtrlEPServiceComplete 0002                        ??_normal_mode_loop 00FE  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                         rx_loop@comm_buf 03DA                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 0118  
                              ?_delay_set 00B9                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR5bits 000F98  
                                i2u490_40 3BF4                                  i2u546_40 2A8A  
              epoch_to_caltime@year_cache 00AD                                  i2u490_47 3BEA  
                                i2u546_47 2A80                                  i2u547_40 2AC0  
                                i2u547_47 2AB6                                  i2u492_40 3C34  
                                i2u492_47 3C2A                                  i2u549_40 2B1C  
                                i2u549_47 2B12                 USBCtrlEPService@setup_cnt 001D  
                                i2u842_40 59F6                                  i2u844_40 5A02  
                                i2u846_40 5A0E                             ??_ringbuf_pop 00C3  
                           ??_ringbuf_num 00BB                                  i2u872_40 58FE  
                           ??_ringbuf_put 00C4                       __end_of_integrating 4CCA  
                                _RCONbits 000FD0                         _display_time_1602 28B4  
                           ??_putUSBUSART 00BC                                  _UEP0bits 000F26  
                           tx_sendn@value 00DC                _USBDeferINDataStagePackets 0042  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 00B9                             ??_timer1_init 00BA  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 0678  
                           ??_timer3_init 00B9                                 _my_strcmp 4878  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00F0                               _display_dec 55FC  
                    _USBConfigureEndpoint 4CCA                                 _port_loop 0FB8  
                         ?_RTCC_from_RTCC 00E1                                my_utoa@str 00DC  
        __size_of_USBStdFeatureReqHandler 0284                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                 comm_d@str 00E5  
                       ___wmul@multiplier 00CF                     ?_USBTransferOnePacket 00B9  
                        __CFG_SOSCSEL$LOW 000000            button_timer_interrupt@sw_value 00DE  
                                _USB_init 5FCE                                  _USB_loop 4B96  
                              ?_main_init 0001                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 0001                       ??_display_time_1602 00F4  
                            _RemoteWakeup 0041                         i2___awdiv@divisor 0003  
                                i2_memset 5DAE                          __size_of_LED_OUT 0048  
                                _Delay_ms 5D56                         i2___awdiv@counter 0005  
                              ?_ctmu_loop 0001                                 lchika@cnt 033C  
                           ringbuf_pop@rb 00C1                             ringbuf_num@rb 00B9  
                 __end_of_USBStallHandler 59A8                             I2C_Start@adrs 00BC  
                           ringbuf_put@rb 00C1                         ___lmul@multiplier 00C6  
                             _INTCON2bits 000FF1                                port_loop@i 00BD  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 38E2  
                    __end_of_sw_flag_read 5192                          __size_of_USB_ISR 0006  
                                _Auto_cut 323E                      epoch_to_caltime@year 00E4  
                 __size_of_get_string_usb 004E                               _auto_cut_ON 0087  
                      __end_of_device_dsc FD2A                   ?_USBCtrlTrfSetupHandler 0001  
               __end_of_display_time_1602 2A02                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                               _ctmu_value0 009A  
                             _ctmu_value1 009C                               _ctmu_value2 009E  
                             _ctmu_valuem 0035                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 00BD                      __end_of_I2C_LCD_Putc 5AD6  
                    __end_of_I2C_LCD_Puts 4E7A                                rx_loop@buf 0100  
                                _SetupPkt 000D30                             _weekday_3char FCFC  
                    __end_of_I2C_LCD_init 56AC                     __size_of_month_length 00DE  
                              ?_my_strcmp 00B9                     ?_USBConfigureEndpoint 0001  
                __size_of_caltime_to_RTCC 00D0                         ??_USBDeviceAttach 00B9  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                       I2C_IdleCheck@mask 00BA                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                                ?_port_loop 0001  
                       tx_sends@asciicode 00C8                       __end_of_ringbuf_pop 4132  
                     __end_of_ringbuf_num 3716                       __end_of_ringbuf_put 3EC8  
                     __end_of_putUSBUSART 5E76                               _line_coding 03E2  
                          ??_CDCTxService 00C0                       __end_of_timer0_init 5A9E  
                   __size_of_ringbuf_init 0054                          __size_of_comm_at 005C  
                     __end_of_timer1_init 57F6                       __end_of_timer3_init 5D56  
                 __size_of_USBDeviceTasks 0146                                i2LED_OUT@b 0002  
                         ___lwdiv@divisor 00D7                           ___lwdiv@counter 00D9  
                    timer0_init@prescaler 00BA                                  __ptext10 2EFE  
                                __ptext11 55A4                                  __ptext20 5844  
                                __ptext12 5366                                  __ptext21 0678  
                                __ptext13 5F3C                                  __ptext30 4AFC  
                                __ptext22 28B4                                  __ptext14 5B46  
                                __ptext31 2DDA                                  __ptext23 55FC  
                                __ptext15 4720                                  __ptext40 437C  
                                __ptext32 5FA6                                  __ptext24 4F08  
                                __ptext16 0FB8                                  __ptext41 54EC  
                                __ptext33 1D36                                  __ptext25 53D0  
                                __ptext17 511A                                  __ptext50 5A64  
                                __ptext42 323E                                  __ptext34 1F9A  
                                __ptext26 5A9E                                  __ptext18 56AC  
                                __ptext51 5700                                  __ptext43 5B7C  
                                __ptext35 5E9A                                  __ptext27 39C0  
                                __ptext19 5E76                                  __ptext60 5B0E  
                                __ptext52 5FCE                                  __ptext44 5432  
                                __ptext36 21FE                                  __ptext28 5CD2  
                                __ptext61 5FD8                                  __ptext53 2752  
                                __ptext45 5CFE                                  __ptext37 3D20  
                                __ptext29 4DEC                                  __ptext70 5192  
                                __ptext62 5C18                                  __ptext54 5BB2  
                                __ptext46 5C48                                  __ptext38 3EC8  
                                __ptext71 42BA                                  __ptext63 5F8E  
                                __ptext55 5AD6                                  __ptext47 47D2  
                                __ptext39 5DDA                                  __ptext80 5F58  
                                __ptext72 443A                                  __ptext64 5F1E  
                                __ptext56 5C76                                  __ptext48 5D2A  
                                __ptext81 3716                                  __ptext73 4B96  
                                __ptext65 5D56                                  __ptext57 5FBC  
                                __ptext49 57A6                                  __ptext90 466A  
                                __ptext82 25C6                                  __ptext74 3DF4  
                                __ptext66 5E02                                  __ptext58 5654  
                                __ptext91 5EFE                                  __ptext83 3A9A  
                                __ptext75 4066                                  __ptext67 5EDE  
                                __ptext59 5F74                                  __ptext84 591C  
                                __ptext76 3628                                  __ptext68 312E  
                                __ptext93 3342                                  __ptext85 5EBC  
                                __ptext77 59A8                                  __ptext69 129C  
                                __ptext94 5754                                  __ptext86 182A  
                                __ptext78 5E50                                  __ptext95 5014  
                                __ptext87 38E2                                  __ptext79 57F6  
                                __ptext96 59EA                                  __ptext88 491C  
                                __ptext97 4C30                                  __ptext89 5280  
                                __ptext98 5098                                  __ptext99 588C  
                        __size_of_my_atoi 00A0                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_button 0124          __size_of_RTCC_adjust_time_cursor 005C  
                        __size_of_my_utoa 0088                          __size_of_rx_loop 02C6  
        __size_of_RTCC_adjust_time_toggle 0016                     RTCC_loop@prev_halfsec 00A0  
                        __size_of_tx_send 001C                               _integrating 4C30  
          __end_of_USBCtrlTrfSetupHandler 4F08                             __size_of_main 01DC  
                       ?_USBCtrlEPService 0001                             ??_tx_send_dec 00E5  
                            _month_length 38E2                         put_string_usb@len 00C7  
                      ??_USBCtrlEPService 001B                  __size_of_RTCC_from_epoch 0022  
                             ??_delay_set 00BD                       _USBCtrlTrfInHandler 41F6  
                                _outPipes 006C                          ??_ringbuf_delete 00BB  
                 ?_button_timer_interrupt 00DC                      _USBCtrlTrfOutHandler 5548  
                                int$flags 0058                            rx_loop@opland1 0200  
                          rx_loop@opland2 0264                                  _out_flag 0339  
                            _ringbuf_init 5700                 _USBCtrlEPAllowStatusStage 4132  
                               x_to_d@hex 00BA                    ??_USBTransferOnePacket 00BD  
                                _tx_sendn 520A                                  _tx_sends 5366  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0044  
                            ??_print_time 00F0                  CDCTxService@byte_to_send 00C4  
                          main_init@rxbuf 0200                            main_init@txbuf 0100  
                             ??_main_init 00C2                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 00C3  
                    ?_USBCtrlTrfInHandler 0001                               ??_ctmu_loop 00E1  
           USBCtrlTrfTxService@byteToSend 0001              I2C_LCD_SetCursor@row_offsets 00C0  
                              Delay_ms@ms 00B9                           display_dec@edit 00E4  
                                memset@p1 00B9                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                          get_quot_rem@quot 00D2  
                       RTCC_to_caltime@ct 00BB             __size_of_RTCC_adjust_time_dec 0264  
           __size_of_RTCC_adjust_time_inc 0264                                  intlevel2 0000  
                  __size_of_USBDeviceInit 0162   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5CD2  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 5CA4  
                        ___lwmod@dividend 00B9              i2USBTransferOnePacket@handle 0006  
                        ___lldiv@dividend 00B9                                 tx_sendn@i 00DF  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 00D2  
                       _ringbuf_backspace 4D5E                __size_of_display_time_1602 014E  
                __end_of_epoch_to_caltime 23EA                    __size_of_sw_flag_clear 0054  
                __size_of_RTCC_to_caltime 00B6                             _print_content 00AA  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 1564  
                         tx_send_dec@edit 00E4                        __end_of_print_time 3016  
              i2USBTransferOnePacket@data 0002                        ??_caltime_to_epoch 00D6  
                      ?_ringbuf_backspace 00C1                    ??_USBConfigureEndpoint 0002  
                                my_utoa@d 00E1                     ?_USBCtrlTrfOutHandler 0001  
                                my_utoa@v 00E2                               _ringbuf_pop 4066  
                             _ringbuf_num 3628                               _ringbuf_put 3DF4  
                             _putUSBUSART 5E50                       __end_of_tx_send_dec 55FC  
                             ??_my_strcmp 00BD                       _USBCtrlTrfRxService 3016  
                             _timer0_init 5A64                        _USBWakeFromSuspend 5BE6  
                             _timer1_init 57A6                               _timer3_init 5D2A  
                 _USBStdFeatureReqHandler 1AB2                               ??_port_loop 00BD  
                      _USBCheckCDCRequest 3C4A                       _USBCtrlTrfTxService 3B72  
                                rx_loop@i 01CB                       ??_ringbuf_backspace 00C3  
                         get_quot_rem@div 00D4                           get_quot_rem@num 00D6  
                              _RTCCFGbits 000F3F                       ?_USBWakeFromSuspend 0001  
                        _is_usb_available 5F58                          ___lldiv@quotient 00C1  
                       caltime_to_RTCC@ct 00C2                           ___lwmod@divisor 00BB  
                       ??_caltime_to_RTCC 00C4                     ??_USBCtrlTrfInHandler 0002  
                   _USBAlternateInterface 0053                           ___lwmod@counter 00BD  
                     ?_USBCheckCDCRequest 0001                     __size_of_sw_flag_read 0078  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 004D  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 0001  
         epoch_to_caltime@day_since_epoch 00E0                             ?_getsUSBUSART 00C0  
                ?_USBCtrlEPAllowDataStage 0001                            _get_string_usb 57F6  
                    ?_USBCtrlTrfTxService 0001                             my_utoa@digits 00E0  
               __end_of_ringbuf_backspace 4DEC              _USBStatusStageTimeoutCounter 0048  
                   __size_of_I2C_LCD_Putc 0038                     __size_of_I2C_LCD_Puts 008E  
                   _delay_timer_interrupt 588C                     __size_of_I2C_LCD_init 0058  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 00BE  
                    __end_of_CDCTxService 2752                              my_utoa@value 00DE  
                  _command_operation$5325 00FB                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr FC4F                          ??_RTCC_from_RTCC 00E5  
