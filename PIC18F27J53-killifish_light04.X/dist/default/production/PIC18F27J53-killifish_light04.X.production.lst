

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 15:02:44 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           	psect	idataBANK0
    78  012D12                     __pidataBANK0:
    79                           	opt stack 0
    80                           
    81                           ;initializer for epoch_to_caltime@month_cache
    82  012D12  01                 	db	1
    83                           
    84                           	psect	mediumconst
    85  00FDE6                     __pmediumconst:
    86                           	opt stack 0
    87  00FDE6  00                 	db	0
    88  00FDE7                     _dpowers:
    89                           	opt stack 0
    90  00FDE7  0001               	dw	1
    91  00FDE9  000A               	dw	10
    92  00FDEB  0064               	dw	100
    93  00FDED  03E8               	dw	1000
    94  00FDEF  2710               	dw	10000
    95  00FDF1                     __end_of_dpowers:
    96                           	opt stack 0
    97  00FDF1                     _weekday_3char:
    98                           	opt stack 0
    99  00FDF1  53                 	db	83
   100  00FDF2  55                 	db	85
   101  00FDF3  4E                 	db	78
   102  00FDF4  00                 	db	0
   103  00FDF5  4D                 	db	77
   104  00FDF6  4F                 	db	79
   105  00FDF7  4E                 	db	78
   106  00FDF8  00                 	db	0
   107  00FDF9  54                 	db	84
   108  00FDFA  55                 	db	85
   109  00FDFB  45                 	db	69
   110  00FDFC  00                 	db	0
   111  00FDFD  57                 	db	87
   112  00FDFE  45                 	db	69
   113  00FDFF  44                 	db	68
   114  00FE00  00                 	db	0
   115  00FE01  54                 	db	84
   116  00FE02  48                 	db	72
   117  00FE03  55                 	db	85
   118  00FE04  00                 	db	0
   119  00FE05  46                 	db	70
   120  00FE06  52                 	db	82
   121  00FE07  49                 	db	73
   122  00FE08  00                 	db	0
   123  00FE09  53                 	db	83
   124  00FE0A  41                 	db	65
   125  00FE0B  54                 	db	84
   126  00FE0C  00                 	db	0
   127  00FE0D                     __end_of_weekday_3char:
   128                           	opt stack 0
   129  0000                     _PPSCONbits	set	3775
   130  0000                     _RPOR3	set	3779
   131  0000                     _RPOR4	set	3780
   132  0000                     _RPOR5	set	3781
   133  0000                     _ANCON0	set	3912
   134  0000                     _ANCON1	set	3913
   135  0000                     _CCP3CONbits	set	3861
   136  0000                     _CCP4CONbits	set	3858
   137  0000                     _CCPR3L	set	3862
   138  0000                     _CCPR3Lbits	set	3862
   139  0000                     _CCPR4L	set	3859
   140  0000                     _CCPR4Lbits	set	3859
   141  0000                     _CCPTMRS0bits	set	3922
   142  0000                     _CCPTMRS1bits	set	3921
   143  0000                     _PADCFG1bits	set	3900
   144  0000                     _RTCCAL	set	3902
   145  0000                     _RTCCFGbits	set	3903
   146  0000                     _RTCVALH	set	3899
   147  0000                     _RTCVALL	set	3898
   148  0000                     _T5CONbits	set	3874
   149  0000                     _ADRES	set	4035
   150  0000                     _ADCON0bits	set	4034
   151  0000                     _ADCON1bits	set	4033
   152  0000                     _BAUDCON1bits	set	3966
   153  0000                     _CCP1CONbits	set	4026
   154  0000                     _CCP2CONbits	set	4020
   155  0000                     _CCPR1L	set	4027
   156  0000                     _CCPR1Lbits	set	4027
   157  0000                     _CCPR2L	set	4021
   158  0000                     _CCPR2Lbits	set	4021
   159  0000                     _CTMUCONH	set	4019
   160  0000                     _CTMUCONHbits	set	4019
   161  0000                     _CTMUCONL	set	4018
   162  0000                     _CTMUCONLbits	set	4018
   163  0000                     _CTMUICON	set	4017
   164  0000                     _EECON2	set	4007
   165  0000                     _INTCON2bits	set	4081
   166  0000                     _INTCONbits	set	4082
   167  0000                     _IPR1bits	set	3999
   168  0000                     _IPR2bits	set	4002
   169  0000                     _IPR5bits	set	3993
   170  0000                     _OSCCONbits	set	4051
   171  0000                     _OSCTUNEbits	set	3995
   172  0000                     _PIE1bits	set	3997
   173  0000                     _PIE2bits	set	4000
   174  0000                     _PIE5bits	set	3985
   175  0000                     _PIR1bits	set	3998
   176  0000                     _PIR2bits	set	4001
   177  0000                     _PIR5bits	set	3992
   178  0000                     _PORTAbits	set	3968
   179  0000                     _PR2	set	4043
   180  0000                     _RCREG1	set	4015
   181  0000                     _RCSTA1bits	set	4012
   182  0000                     _SPBRG1	set	4016
   183  0000                     _SPBRGH1	set	3967
   184  0000                     _T0CONbits	set	4053
   185  0000                     _T1CONbits	set	4045
   186  0000                     _T2CONbits	set	4042
   187  0000                     _T3CONbits	set	3961
   188  0000                     _TMR1H	set	4047
   189  0000                     _TRISA	set	3986
   190  0000                     _TRISB	set	3987
   191  0000                     _TRISC	set	3988
   192  0000                     _TXREG1	set	4014
   193  0000                     _TXSTA1bits	set	4013
   194  0000                     _LATB2	set	31826
   195  00FE0D                     STR_24:
   196  00FE0D  09                 	db	9
   197  00FE0E  2A                 	db	42
   198  00FE0F  2A                 	db	42
   199  00FE10  2A                 	db	42
   200  00FE11  2A                 	db	42
   201  00FE12  2A                 	db	42
   202  00FE13  2A                 	db	42
   203  00FE14  2A                 	db	42
   204  00FE15  2A                 	db	42
   205  00FE16  2A                 	db	42
   206  00FE17  2A                 	db	42
   207  00FE18  2A                 	db	42
   208  00FE19  2A                 	db	42
   209  00FE1A  2A                 	db	42
   210  00FE1B  2A                 	db	42
   211  00FE1C  2A                 	db	42
   212  00FE1D  2A                 	db	42
   213  00FE1E  2A                 	db	42
   214  00FE1F  2A                 	db	42
   215  00FE20  2A                 	db	42
   216  00FE21  2A                 	db	42
   217  00FE22  2A                 	db	42
   218  00FE23  2A                 	db	42
   219  00FE24  2A                 	db	42
   220  00FE25  2A                 	db	42
   221  00FE26  2A                 	db	42
   222  00FE27  2A                 	db	42
   223  00FE28  0A                 	db	10
   224  00FE29  09                 	db	9
   225  00FE2A  2A                 	db	42
   226  00FE2B  2A                 	db	42
   227  00FE2C  2A                 	db	42
   228  00FE2D  2A                 	db	42
   229  00FE2E  20                 	db	32
   230  00FE2F  4B                 	db	75	;'K'
   231  00FE30  69                 	db	105	;'i'
   232  00FE31  6C                 	db	108	;'l'
   233  00FE32  6C                 	db	108	;'l'
   234  00FE33  69                 	db	105	;'i'
   235  00FE34  66                 	db	102	;'f'
   236  00FE35  69                 	db	105	;'i'
   237  00FE36  73                 	db	115	;'s'
   238  00FE37  68                 	db	104	;'h'
   239  00FE38  20                 	db	32
   240  00FE39  4C                 	db	76	;'L'
   241  00FE3A  69                 	db	105	;'i'
   242  00FE3B  67                 	db	103	;'g'
   243  00FE3C  68                 	db	104	;'h'
   244  00FE3D  74                 	db	116	;'t'
   245  00FE3E  20                 	db	32
   246  00FE3F  20                 	db	32
   247  00FE40  2A                 	db	42
   248  00FE41  2A                 	db	42
   249  00FE42  2A                 	db	42
   250  00FE43  2A                 	db	42
   251  00FE44  0A                 	db	10
   252  00FE45  09                 	db	9
   253  00FE46  2A                 	db	42
   254  00FE47  2A                 	db	42
   255  00FE48  2A                 	db	42
   256  00FE49  2A                 	db	42
   257  00FE4A  20                 	db	32
   258  00FE4B  4D                 	db	77	;'M'
   259  00FE4C  61                 	db	97	;'a'
   260  00FE4D  64                 	db	100	;'d'
   261  00FE4E  65                 	db	101	;'e'
   262  00FE4F  20                 	db	32
   263  00FE50  62                 	db	98	;'b'
   264  00FE51  79                 	db	121	;'y'
   265  00FE52  20                 	db	32
   266  00FE53  40                 	db	64	;'@'
   267  00FE54  52                 	db	82	;'R'
   268  00FE55  79                 	db	121	;'y'
   269  00FE56  6F                 	db	111	;'o'
   270  00FE57  6B                 	db	107	;'k'
   271  00FE58  65                 	db	101	;'e'
   272  00FE59  72                 	db	114	;'r'
   273  00FE5A  69                 	db	105	;'i'
   274  00FE5B  20                 	db	32
   275  00FE5C  2A                 	db	42
   276  00FE5D  2A                 	db	42
   277  00FE5E  2A                 	db	42
   278  00FE5F  2A                 	db	42
   279  00FE60  0A                 	db	10
   280  00FE61  09                 	db	9
   281  00FE62  2A                 	db	42
   282  00FE63  2A                 	db	42
   283  00FE64  2A                 	db	42
   284  00FE65  2A                 	db	42
   285  00FE66  2A                 	db	42
   286  00FE67  2A                 	db	42
   287  00FE68  2A                 	db	42
   288  00FE69  2A                 	db	42
   289  00FE6A  2A                 	db	42
   290  00FE6B  2A                 	db	42
   291  00FE6C  2A                 	db	42
   292  00FE6D  2A                 	db	42
   293  00FE6E  2A                 	db	42
   294  00FE6F  2A                 	db	42
   295  00FE70  2A                 	db	42
   296  00FE71  2A                 	db	42
   297  00FE72  2A                 	db	42
   298  00FE73  2A                 	db	42
   299  00FE74  2A                 	db	42
   300  00FE75  2A                 	db	42
   301  00FE76  2A                 	db	42
   302  00FE77  2A                 	db	42
   303  00FE78  2A                 	db	42
   304  00FE79  2A                 	db	42
   305  00FE7A  2A                 	db	42
   306  00FE7B  2A                 	db	42
   307  00FE7C  0A                 	db	10
   308  00FE7D  0A                 	db	10
   309  00FE7E  09                 	db	9
   310  00FE7F  63                 	db	99	;'c'
   311  00FE80  6F                 	db	111	;'o'
   312  00FE81  6D                 	db	109	;'m'
   313  00FE82  6D                 	db	109	;'m'
   314  00FE83  61                 	db	97	;'a'
   315  00FE84  6E                 	db	110	;'n'
   316  00FE85  64                 	db	100	;'d'
   317  00FE86  20                 	db	32
   318  00FE87  09                 	db	9
   319  00FE88  6F                 	db	111	;'o'
   320  00FE89  70                 	db	112	;'p'
   321  00FE8A  65                 	db	101	;'e'
   322  00FE8B  6C                 	db	108	;'l'
   323  00FE8C  61                 	db	97	;'a'
   324  00FE8D  6E                 	db	110	;'n'
   325  00FE8E  64                 	db	100	;'d'
   326  00FE8F  31                 	db	49	;'1'
   327  00FE90  09                 	db	9
   328  00FE91  6F                 	db	111	;'o'
   329  00FE92  70                 	db	112	;'p'
   330  00FE93  65                 	db	101	;'e'
   331  00FE94  6C                 	db	108	;'l'
   332  00FE95  61                 	db	97	;'a'
   333  00FE96  6E                 	db	110	;'n'
   334  00FE97  64                 	db	100	;'d'
   335  00FE98  32                 	db	50	;'2'
   336  00FE99  0A                 	db	10
   337  00FE9A  0A                 	db	10
   338  00FE9B  09                 	db	9
   339  00FE9C  70                 	db	112	;'p'
   340  00FE9D  72                 	db	114	;'r'
   341  00FE9E  69                 	db	105	;'i'
   342  00FE9F  6E                 	db	110	;'n'
   343  00FEA0  74                 	db	116	;'t'
   344  00FEA1  5F                 	db	95	;'_'
   345  00FEA2  74                 	db	116	;'t'
   346  00FEA3  69                 	db	105	;'i'
   347  00FEA4  6D                 	db	109	;'m'
   348  00FEA5  65                 	db	101	;'e'
   349  00FEA6  28                 	db	40
   350  00FEA7  74                 	db	116	;'t'
   351  00FEA8  29                 	db	41
   352  00FEA9  0A                 	db	10
   353  00FEAA  09                 	db	9
   354  00FEAB  61                 	db	97	;'a'
   355  00FEAC  64                 	db	100	;'d'
   356  00FEAD  6A                 	db	106	;'j'
   357  00FEAE  75                 	db	117	;'u'
   358  00FEAF  73                 	db	115	;'s'
   359  00FEB0  74                 	db	116	;'t'
   360  00FEB1  5F                 	db	95	;'_'
   361  00FEB2  74                 	db	116	;'t'
   362  00FEB3  69                 	db	105	;'i'
   363  00FEB4  6D                 	db	109	;'m'
   364  00FEB5  65                 	db	101	;'e'
   365  00FEB6  28                 	db	40
   366  00FEB7  61                 	db	97	;'a'
   367  00FEB8  74                 	db	116	;'t'
   368  00FEB9  29                 	db	41
   369  00FEBA  20                 	db	32
   370  00FEBB  5B                 	db	91	;'['
   371  00FEBC  68                 	db	104	;'h'
   372  00FEBD  61                 	db	97	;'a'
   373  00FEBE  6E                 	db	110	;'n'
   374  00FEBF  64                 	db	100	;'d'
   375  00FEC0  3A                 	db	58	;':'
   376  00FEC1  79                 	db	121	;'y'
   377  00FEC2  2C                 	db	44
   378  00FEC3  4D                 	db	77	;'M'
   379  00FEC4  2C                 	db	44
   380  00FEC5  64                 	db	100	;'d'
   381  00FEC6  2C                 	db	44
   382  00FEC7  68                 	db	104	;'h'
   383  00FEC8  2C                 	db	44
   384  00FEC9  6D                 	db	109	;'m'
   385  00FECA  2C                 	db	44
   386  00FECB  73                 	db	115	;'s'
   387  00FECC  5D                 	db	93	;']'
   388  00FECD  20                 	db	32
   389  00FECE  5B                 	db	91	;'['
   390  00FECF  76                 	db	118	;'v'
   391  00FED0  61                 	db	97	;'a'
   392  00FED1  6C                 	db	108	;'l'
   393  00FED2  75                 	db	117	;'u'
   394  00FED3  65                 	db	101	;'e'
   395  00FED4  28                 	db	40
   396  00FED5  64                 	db	100	;'d'
   397  00FED6  65                 	db	101	;'e'
   398  00FED7  63                 	db	99	;'c'
   399  00FED8  69                 	db	105	;'i'
   400  00FED9  6D                 	db	109	;'m'
   401  00FEDA  61                 	db	97	;'a'
   402  00FEDB  6C                 	db	108	;'l'
   403  00FEDC  29                 	db	41
   404  00FEDD  5D                 	db	93	;']'
   405  00FEDE  0A                 	db	10
   406  00FEDF  09                 	db	9
   407  00FEE0  70                 	db	112	;'p'
   408  00FEE1  77                 	db	119	;'w'
   409  00FEE2  6D                 	db	109	;'m'
   410  00FEE3  20                 	db	32
   411  00FEE4  5B                 	db	91	;'['
   412  00FEE5  63                 	db	99	;'c'
   413  00FEE6  6F                 	db	111	;'o'
   414  00FEE7  6C                 	db	108	;'l'
   415  00FEE8  6F                 	db	111	;'o'
   416  00FEE9  72                 	db	114	;'r'
   417  00FEEA  3A                 	db	58	;':'
   418  00FEEB  52                 	db	82	;'R'
   419  00FEEC  2C                 	db	44
   420  00FEED  47                 	db	71	;'G'
   421  00FEEE  2C                 	db	44
   422  00FEEF  42                 	db	66	;'B'
   423  00FEF0  2C                 	db	44
   424  00FEF1  57                 	db	87	;'W'
   425  00FEF2  5D                 	db	93	;']'
   426  00FEF3  20                 	db	32
   427  00FEF4  5B                 	db	91	;'['
   428  00FEF5  76                 	db	118	;'v'
   429  00FEF6  61                 	db	97	;'a'
   430  00FEF7  6C                 	db	108	;'l'
   431  00FEF8  75                 	db	117	;'u'
   432  00FEF9  65                 	db	101	;'e'
   433  00FEFA  28                 	db	40
   434  00FEFB  25                 	db	37
   435  00FEFC  29                 	db	41
   436  00FEFD  3A                 	db	58	;':'
   437  00FEFE  30                 	db	48	;'0'
   438  00FEFF  7E                 	db	126
   439  00FF00  31                 	db	49	;'1'
   440  00FF01  30                 	db	48	;'0'
   441  00FF02  30                 	db	48	;'0'
   442  00FF03  5D                 	db	93	;']'
   443  00FF04  0A                 	db	10
   444  00FF05  09                 	db	9
   445  00FF06  70                 	db	112	;'p'
   446  00FF07  77                 	db	119	;'w'
   447  00FF08  6D                 	db	109	;'m'
   448  00FF09  20                 	db	32
   449  00FF0A  63                 	db	99	;'c'
   450  00FF0B  6C                 	db	108	;'l'
   451  00FF0C  65                 	db	101	;'e'
   452  00FF0D  61                 	db	97	;'a'
   453  00FF0E  72                 	db	114	;'r'
   454  00FF0F  0A                 	db	10
   455  00FF10  09                 	db	9
   456  00FF11  73                 	db	115	;'s'
   457  00FF12  65                 	db	101	;'e'
   458  00FF13  74                 	db	116	;'t'
   459  00FF14  20                 	db	32
   460  00FF15  74                 	db	116	;'t'
   461  00FF16  69                 	db	105	;'i'
   462  00FF17  6D                 	db	109	;'m'
   463  00FF18  65                 	db	101	;'e'
   464  00FF19  5F                 	db	95	;'_'
   465  00FF1A  73                 	db	115	;'s'
   466  00FF1B  79                 	db	121	;'y'
   467  00FF1C  6E                 	db	110	;'n'
   468  00FF1D  63                 	db	99	;'c'
   469  00FF1E  5F                 	db	95	;'_'
   470  00FF1F  6D                 	db	109	;'m'
   471  00FF20  6F                 	db	111	;'o'
   472  00FF21  64                 	db	100	;'d'
   473  00FF22  65                 	db	101	;'e'
   474  00FF23  28                 	db	40
   475  00FF24  73                 	db	115	;'s'
   476  00FF25  79                 	db	121	;'y'
   477  00FF26  6E                 	db	110	;'n'
   478  00FF27  63                 	db	99	;'c'
   479  00FF28  29                 	db	41
   480  00FF29  0A                 	db	10
   481  00FF2A  09                 	db	9
   482  00FF2B  73                 	db	115	;'s'
   483  00FF2C  65                 	db	101	;'e'
   484  00FF2D  74                 	db	116	;'t'
   485  00FF2E  20                 	db	32
   486  00FF2F  41                 	db	65	;'A'
   487  00FF30  44                 	db	68	;'D'
   488  00FF31  43                 	db	67	;'C'
   489  00FF32  5F                 	db	95	;'_'
   490  00FF33  6D                 	db	109	;'m'
   491  00FF34  6F                 	db	111	;'o'
   492  00FF35  64                 	db	100	;'d'
   493  00FF36  65                 	db	101	;'e'
   494  00FF37  28                 	db	40
   495  00FF38  61                 	db	97	;'a'
   496  00FF39  64                 	db	100	;'d'
   497  00FF3A  63                 	db	99	;'c'
   498  00FF3B  29                 	db	41
   499  00FF3C  0A                 	db	10
   500  00FF3D  09                 	db	9
   501  00FF3E  52                 	db	82	;'R'
   502  00FF3F  45                 	db	69	;'E'
   503  00FF40  53                 	db	83	;'S'
   504  00FF41  45                 	db	69	;'E'
   505  00FF42  54                 	db	84	;'T'
   506  00FF43  28                 	db	40
   507  00FF44  29                 	db	41
   508  00FF45  3B                 	db	59	;';'
   509  00FF46  0A                 	db	10
   510  00FF47  00                 	db	0
   511  00FF48                     STR_4:
   512  00FF48  09                 	db	9
   513  00FF49  32                 	db	50	;'2'
   514  00FF4A  30                 	db	48	;'0'
   515  00FF4B  25                 	db	37
   516  00FF4C  30                 	db	48	;'0'
   517  00FF4D  32                 	db	50	;'2'
   518  00FF4E  64                 	db	100	;'d'
   519  00FF4F  2F                 	db	47
   520  00FF50  25                 	db	37
   521  00FF51  30                 	db	48	;'0'
   522  00FF52  32                 	db	50	;'2'
   523  00FF53  64                 	db	100	;'d'
   524  00FF54  2F                 	db	47
   525  00FF55  25                 	db	37
   526  00FF56  30                 	db	48	;'0'
   527  00FF57  32                 	db	50	;'2'
   528  00FF58  64                 	db	100	;'d'
   529  00FF59  28                 	db	40
   530  00FF5A  25                 	db	37
   531  00FF5B  73                 	db	115	;'s'
   532  00FF5C  29                 	db	41
   533  00FF5D  25                 	db	37
   534  00FF5E  30                 	db	48	;'0'
   535  00FF5F  32                 	db	50	;'2'
   536  00FF60  64                 	db	100	;'d'
   537  00FF61  3A                 	db	58	;':'
   538  00FF62  25                 	db	37
   539  00FF63  30                 	db	48	;'0'
   540  00FF64  32                 	db	50	;'2'
   541  00FF65  64                 	db	100	;'d'
   542  00FF66  2D                 	db	45
   543  00FF67  25                 	db	37
   544  00FF68  30                 	db	48	;'0'
   545  00FF69  32                 	db	50	;'2'
   546  00FF6A  64                 	db	100	;'d'
   547  00FF6B  0A                 	db	10
   548  00FF6C  00                 	db	0
   549  00FF6D                     STR_9:
   550  00FF6D  61                 	db	97	;'a'
   551  00FF6E  64                 	db	100	;'d'
   552  00FF6F  6A                 	db	106	;'j'
   553  00FF70  75                 	db	117	;'u'
   554  00FF71  73                 	db	115	;'s'
   555  00FF72  74                 	db	116	;'t'
   556  00FF73  5F                 	db	95	;'_'
   557  00FF74  74                 	db	116	;'t'
   558  00FF75  69                 	db	105	;'i'
   559  00FF76  6D                 	db	109	;'m'
   560  00FF77  65                 	db	101	;'e'
   561  00FF78  00                 	db	0
   562  00FF79                     STR_6:
   563  00FF79  70                 	db	112	;'p'
   564  00FF7A  72                 	db	114	;'r'
   565  00FF7B  69                 	db	105	;'i'
   566  00FF7C  6E                 	db	110	;'n'
   567  00FF7D  74                 	db	116	;'t'
   568  00FF7E  5F                 	db	95	;'_'
   569  00FF7F  74                 	db	116	;'t'
   570  00FF80  69                 	db	105	;'i'
   571  00FF81  6D                 	db	109	;'m'
   572  00FF82  65                 	db	101	;'e'
   573  00FF83  00                 	db	0
   574  00FF84                     STR_25:
   575  00FF84  52                 	db	82	;'R'
   576  00FF85  45                 	db	69	;'E'
   577  00FF86  53                 	db	83	;'S'
   578  00FF87  45                 	db	69	;'E'
   579  00FF88  54                 	db	84	;'T'
   580  00FF89  28                 	db	40
   581  00FF8A  29                 	db	41
   582  00FF8B  3B                 	db	59	;';'
   583  00FF8C  00                 	db	0
   584  00FF8D                     STR_5:
   585  00FF8D  09                 	db	9
   586  00FF8E  65                 	db	101	;'e'
   587  00FF8F  72                 	db	114	;'r'
   588  00FF90  72                 	db	114	;'r'
   589  00FF91  6F                 	db	111	;'o'
   590  00FF92  72                 	db	114	;'r'
   591  00FF93  0A                 	db	10
   592  00FF94  00                 	db	0
   593  00FF95                     STR_41:
   594  00FF95  28                 	db	40
   595  00FF96  6E                 	db	110	;'n'
   596  00FF97  75                 	db	117	;'u'
   597  00FF98  6C                 	db	108	;'l'
   598  00FF99  6C                 	db	108	;'l'
   599  00FF9A  29                 	db	41
   600  00FF9B  00                 	db	0
   601  00FF9C                     STR_21:
   602  00FF9C  73                 	db	115	;'s'
   603  00FF9D  65                 	db	101	;'e'
   604  00FF9E  63                 	db	99	;'c'
   605  00FF9F  6F                 	db	111	;'o'
   606  00FFA0  6E                 	db	110	;'n'
   607  00FFA1  64                 	db	100	;'d'
   608  00FFA2  00                 	db	0
   609  00FFA3                     STR_19:
   610  00FFA3  6D                 	db	109	;'m'
   611  00FFA4  69                 	db	105	;'i'
   612  00FFA5  6E                 	db	110	;'n'
   613  00FFA6  75                 	db	117	;'u'
   614  00FFA7  74                 	db	116	;'t'
   615  00FFA8  65                 	db	101	;'e'
   616  00FFA9  00                 	db	0
   617  00FFAA                     STR_13:
   618  00FFAA  6D                 	db	109	;'m'
   619  00FFAB  6F                 	db	111	;'o'
   620  00FFAC  6E                 	db	110	;'n'
   621  00FFAD  74                 	db	116	;'t'
   622  00FFAE  68                 	db	104	;'h'
   623  00FFAF  00                 	db	0
   624  00FFB0                     STR_40:
   625  00FFB0  63                 	db	99	;'c'
   626  00FFB1  6C                 	db	108	;'l'
   627  00FFB2  65                 	db	101	;'e'
   628  00FFB3  61                 	db	97	;'a'
   629  00FFB4  72                 	db	114	;'r'
   630  00FFB5  00                 	db	0
   631  00FFB6                     STR_27:
   632  00FFB6  73                 	db	115	;'s'
   633  00FFB7  79                 	db	121	;'y'
   634  00FFB8  6E                 	db	110	;'n'
   635  00FFB9  63                 	db	99	;'c'
   636  00FFBA  00                 	db	0
   637  00FFBB                     STR_22:
   638  00FFBB  68                 	db	104	;'h'
   639  00FFBC  65                 	db	101	;'e'
   640  00FFBD  6C                 	db	108	;'l'
   641  00FFBE  70                 	db	112	;'p'
   642  00FFBF  00                 	db	0
   643  00FFC0                     STR_11:
   644  00FFC0  79                 	db	121	;'y'
   645  00FFC1  65                 	db	101	;'e'
   646  00FFC2  61                 	db	97	;'a'
   647  00FFC3  72                 	db	114	;'r'
   648  00FFC4  00                 	db	0
   649  00FFC5                     STR_17:
   650  00FFC5  68                 	db	104	;'h'
   651  00FFC6  6F                 	db	111	;'o'
   652  00FFC7  75                 	db	117	;'u'
   653  00FFC8  72                 	db	114	;'r'
   654  00FFC9  00                 	db	0
   655  00FFCA                     STR_1:
   656  00FFCA  08                 	db	8
   657  00FFCB  20                 	db	32
   658  00FFCC  08                 	db	8
   659  00FFCD  00                 	db	0
   660  00FFCE                     STR_29:
   661  00FFCE  41                 	db	65	;'A'
   662  00FFCF  44                 	db	68	;'D'
   663  00FFD0  43                 	db	67	;'C'
   664  00FFD1  00                 	db	0
   665  00FFD2                     STR_31:
   666  00FFD2  50                 	db	80	;'P'
   667  00FFD3  57                 	db	87	;'W'
   668  00FFD4  4D                 	db	77	;'M'
   669  00FFD5  00                 	db	0
   670  00FFD6                     STR_28:
   671  00FFD6  61                 	db	97	;'a'
   672  00FFD7  64                 	db	100	;'d'
   673  00FFD8  63                 	db	99	;'c'
   674  00FFD9  00                 	db	0
   675  00FFDA                     STR_30:
   676  00FFDA  70                 	db	112	;'p'
   677  00FFDB  77                 	db	119	;'w'
   678  00FFDC  6D                 	db	109	;'m'
   679  00FFDD  00                 	db	0
   680  00FFDE                     STR_26:
   681  00FFDE  73                 	db	115	;'s'
   682  00FFDF  65                 	db	101	;'e'
   683  00FFE0  74                 	db	116	;'t'
   684  00FFE1  00                 	db	0
   685  00FFE2                     STR_15:
   686  00FFE2  64                 	db	100	;'d'
   687  00FFE3  61                 	db	97	;'a'
   688  00FFE4  79                 	db	121	;'y'
   689  00FFE5  00                 	db	0
   690  00FFE6  20                 	db	32
   691  00FFE7  20                 	db	32
   692  00FFE8  00                 	db	0
   693  00FFE9                     STR_8:
   694  00FFE9  61                 	db	97	;'a'
   695  00FFEA  74                 	db	116	;'t'
   696  00FFEB  00                 	db	0
   697  00FFEC                     STR_23:
   698  00FFEC  3F                 	db	63	;'?'
   699  00FFED  00                 	db	0
   700  00FFEE                     STR_37:
   701  00FFEE  42                 	db	66	;'B'
   702  00FFEF  00                 	db	0
   703  00FFF0                     STR_35:
   704  00FFF0  47                 	db	71	;'G'
   705  00FFF1  00                 	db	0
   706  00FFF2                     STR_33:
   707  00FFF2  52                 	db	82	;'R'
   708  00FFF3  00                 	db	0
   709  00FFF4                     STR_39:
   710  00FFF4  57                 	db	87	;'W'
   711  00FFF5  00                 	db	0
   712  00FFF6                     STR_36:
   713  00FFF6  62                 	db	98	;'b'
   714  00FFF7  00                 	db	0
   715  00FFF8                     STR_34:
   716  00FFF8  67                 	db	103	;'g'
   717  00FFF9  00                 	db	0
   718  00FFFA                     STR_20:
   719  00FFFA  73                 	db	115	;'s'
   720  00FFFB  00                 	db	0
   721  00FFFC                     STR_38:
   722  00FFFC  77                 	db	119	;'w'
   723  00FFFD  00                 	db	0
   724  0000                     
   725                           ; #config settings
   726  00FFFE  00                 	db	0	; dummy byte at the end
   727  0000                     
   728                           	psect	cinit
   729  012910                     __pcinit:
   730                           	opt stack 0
   731  012910                     start_initialization:
   732                           	opt stack 0
   733  012910                     __initialization:
   734                           	opt stack 0
   735                           
   736                           ; Clear objects allocated to BIGRAM (1000 bytes)
   737  012910  EE02  F0FA         	lfsr	0,__pbssBIGRAM
   738  012914  EE13 F0E8          	lfsr	1,1000
   739  012918                     clear_0:
   740  012918  6AEE               	clrf	postinc0,c
   741  01291A  50E5               	movf	postdec1,w,c
   742  01291C  50E1               	movf	fsr1l,w,c
   743  01291E  E1FC               	bnz	clear_0
   744  012920  50E2               	movf	fsr1h,w,c
   745  012922  E1FA               	bnz	clear_0
   746                           
   747                           ; Clear objects allocated to BANK2 (250 bytes)
   748  012924  EE02  F000         	lfsr	0,__pbssBANK2
   749  012928  0EFA               	movlw	250
   750  01292A                     clear_1:
   751  01292A  6AEE               	clrf	postinc0,c
   752  01292C  06E8               	decf	wreg,f,c
   753  01292E  E1FD               	bnz	clear_1
   754                           
   755                           ; Clear objects allocated to BANK1 (60 bytes)
   756  012930  EE01  F083         	lfsr	0,__pbssBANK1
   757  012934  0E3C               	movlw	60
   758  012936                     clear_2:
   759  012936  6AEE               	clrf	postinc0,c
   760  012938  06E8               	decf	wreg,f,c
   761  01293A  E1FD               	bnz	clear_2
   762                           
   763                           ; Clear objects allocated to BANK0 (62 bytes)
   764  01293C  EE00  F0C0         	lfsr	0,__pbssBANK0
   765  012940  0E3E               	movlw	62
   766  012942                     clear_3:
   767  012942  6AEE               	clrf	postinc0,c
   768  012944  06E8               	decf	wreg,f,c
   769  012946  E1FD               	bnz	clear_3
   770                           
   771                           ; Clear objects allocated to COMRAM (27 bytes)
   772  012948  EE00  F026         	lfsr	0,__pbssCOMRAM
   773  01294C  0E1B               	movlw	27
   774  01294E                     clear_4:
   775  01294E  6AEE               	clrf	postinc0,c
   776  012950  06E8               	decf	wreg,f,c
   777  012952  E1FD               	bnz	clear_4
   778                           
   779                           ; Initialize objects allocated to BANK0 (1 bytes)
   780                           ; load TBLPTR registers with __pidataBANK0
   781  012954  0E12               	movlw	low __pidataBANK0
   782  012956  6EF6               	movwf	tblptrl,c
   783  012958  0E2D               	movlw	high __pidataBANK0
   784  01295A  6EF7               	movwf	tblptrh,c
   785  01295C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   786  01295E  6EF8               	movwf	tblptru,c
   787  012960  0009               	tblrd		*+	;fetch initializer
   788  012962  CFF5 F0FE          	movff	tablat,__pdataBANK0
   789  012966                     end_of_initialization:
   790                           	opt stack 0
   791  012966                     __end_of__initialization:
   792                           	opt stack 0
   793  012966  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   794  012968  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   795  01296A  0100               	movlb	0
   796  01296C  EFD1  F091         	goto	_main	;jump to C main() function
   797                           tblptru	equ	0xFF8
   798                           tblptrh	equ	0xFF7
   799                           tblptrl	equ	0xFF6
   800                           tablat	equ	0xFF5
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postdec1	equ	0xFE5
   804                           fsr1h	equ	0xFE2
   805                           fsr1l	equ	0xFE1
   806                           
   807                           	psect	bssCOMRAM
   808  000026                     __pbssCOMRAM:
   809                           	opt stack 0
   810  000026                     _d1:
   811                           	opt stack 0
   812  000026                     	ds	3
   813  000029                     millis_timer@cnt:
   814                           	opt stack 0
   815  000029                     	ds	2
   816  00002B                     _ADC_flag:
   817                           	opt stack 0
   818  00002B                     	ds	1
   819  00002C                     _edit_flag:
   820                           	opt stack 0
   821  00002C                     	ds	1
   822  00002D                     _tx_buf:
   823                           	opt stack 0
   824  00002D                     	ds	8
   825  000035                     _sw_B:
   826                           	opt stack 0
   827  000035                     	ds	4
   828  000039                     _sw_G:
   829                           	opt stack 0
   830  000039                     	ds	4
   831  00003D                     _sw_R:
   832                           	opt stack 0
   833  00003D                     	ds	4
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1h	equ	0xFE2
   842                           fsr1l	equ	0xFE1
   843                           
   844                           	psect	bssBANK0
   845  0000C0                     __pbssBANK0:
   846                           	opt stack 0
   847  0000C0                     _ms:
   848                           	opt stack 0
   849  0000C0                     	ds	4
   850  0000C4                     epoch_to_caltime@day_cache:
   851                           	opt stack 0
   852  0000C4                     	ds	2
   853  0000C6                     RTCC_loop@prev_halfsec:
   854                           	opt stack 0
   855  0000C6                     	ds	1
   856  0000C7                     _colon:
   857                           	opt stack 0
   858  0000C7                     	ds	1
   859  0000C8                     _halfsec:
   860                           	opt stack 0
   861  0000C8                     	ds	1
   862  0000C9                     _light_mode:
   863                           	opt stack 0
   864  0000C9                     	ds	1
   865  0000CA                     _time_change_flag:
   866                           	opt stack 0
   867  0000CA                     	ds	1
   868  0000CB                     epoch_to_caltime@year_cache:
   869                           	opt stack 0
   870  0000CB                     	ds	1
   871  0000CC                     my_terminal_loop@command_init:
   872                           	opt stack 0
   873  0000CC                     	ds	1
   874  0000CD                     my_terminal_loop@op0:
   875                           	opt stack 0
   876  0000CD                     	ds	20
   877  0000E1                     _rx_buf:
   878                           	opt stack 0
   879  0000E1                     	ds	8
   880  0000E9                     my_terminal_loop@command:
   881                           	opt stack 0
   882  0000E9                     	ds	8
   883  0000F1                     _caltime_now:
   884                           	opt stack 0
   885  0000F1                     	ds	7
   886  0000F8                     _epoch_now:
   887                           	opt stack 0
   888  0000F8                     	ds	4
   889  0000FC                     light_loop@_2506:
   890                           	opt stack 0
   891  0000FC                     	ds	1
   892  0000FD                     light_loop@n:
   893                           	opt stack 0
   894  0000FD                     	ds	1
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           postdec1	equ	0xFE5
   902                           fsr1h	equ	0xFE2
   903                           fsr1l	equ	0xFE1
   904                           
   905                           	psect	dataBANK0
   906  0000FE                     __pdataBANK0:
   907                           	opt stack 0
   908  0000FE                     epoch_to_caltime@month_cache:
   909                           	opt stack 0
   910  0000FE                     	ds	1
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1h	equ	0xFE2
   919                           fsr1l	equ	0xFE1
   920                           
   921                           	psect	bssBANK1
   922  000183                     __pbssBANK1:
   923                           	opt stack 0
   924  000183                     my_terminal_loop@op1:
   925                           	opt stack 0
   926  000183                     	ds	20
   927  000197                     my_terminal_loop@op2:
   928                           	opt stack 0
   929  000197                     	ds	20
   930  0001AB                     my_terminal_loop@op3:
   931                           	opt stack 0
   932  0001AB                     	ds	20
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           postinc0	equ	0xFEE
   938                           wreg	equ	0xFE8
   939                           postdec1	equ	0xFE5
   940                           fsr1h	equ	0xFE2
   941                           fsr1l	equ	0xFE1
   942                           
   943                           	psect	bssBANK2
   944  000200                     __pbssBANK2:
   945                           	opt stack 0
   946  000200                     main_init@rxbuf:
   947                           	opt stack 0
   948  000200                     	ds	250
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1h	equ	0xFE2
   957                           fsr1l	equ	0xFE1
   958                           
   959                           	psect	bssBIGRAM
   960  0002FA                     __pbssBIGRAM:
   961                           	opt stack 0
   962  0002FA                     main_init@txbuf:
   963                           	opt stack 0
   964  0002FA                     	ds	1000
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1h	equ	0xFE2
   973                           fsr1l	equ	0xFE1
   974                           
   975                           	psect	cstackBANK1
   976  000100                     __pcstackBANK1:
   977                           	opt stack 0
   978  000100                     command_time@tx:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x0
   982  000100                     	ds	2
   983  000102                     command_time@op0:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x2
   987  000102                     	ds	2
   988  000104                     command_time@op1:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x4
   992  000104                     	ds	2
   993  000106                     command_time@op2:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x6
   997  000106                     	ds	2
   998  000108                     command_operation@tx:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x8
  1002  000108                     	ds	2
  1003  00010A                     command_operation@op0:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0xA
  1007  00010A                     	ds	2
  1008  00010C                     command_operation@op1:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0xC
  1012  00010C                     	ds	2
  1013  00010E                     command_operation@op2:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0xE
  1017  00010E                     	ds	2
  1018  000110                     command_operation@op3:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x10
  1022  000110                     	ds	2
  1023  000112                     _command_operation$3239:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x12
  1027  000112                     	ds	2
  1028  000114                     _command_operation$3240:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x14
  1032  000114                     	ds	2
  1033  000116                     my_terminal_loop@tx:
  1034                           	opt stack 0
  1035                           
  1036                           ; 2 bytes @ 0x16
  1037  000116                     	ds	2
  1038  000118                     my_terminal_loop@rx:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x18
  1042  000118                     	ds	2
  1043  00011A                     my_terminal_loop@buf:
  1044                           	opt stack 0
  1045                           
  1046                           ; 100 bytes @ 0x1A
  1047  00011A                     	ds	100
  1048  00017E                     _my_terminal_loop$3237:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x7E
  1052  00017E                     	ds	2
  1053  000180                     my_terminal_loop@i_2284:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x80
  1057  000180                     	ds	1
  1058  000181                     my_terminal_loop@ascii:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x81
  1062  000181                     	ds	1
  1063  000182                     my_terminal_loop@i:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x82
  1067  000182                     	ds	1
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1h	equ	0xFE2
  1076                           fsr1l	equ	0xFE1
  1077                           
  1078                           	psect	cstackBANK0
  1079  000060                     __pcstackBANK0:
  1080                           	opt stack 0
  1081  000060                     ??_ringbuf_num:
  1082  000060                     ??_month_length:
  1083  000060                     ?_my_atoi:
  1084                           	opt stack 0
  1085  000060                     ?___llmod:
  1086                           	opt stack 0
  1087  000060                     ___awdiv@counter:
  1088                           	opt stack 0
  1089  000060                     my_atoi@str:
  1090                           	opt stack 0
  1091  000060                     ___llmod@dividend:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x0
  1095  000060                     	ds	1
  1096  000061                     ___awdiv@sign:
  1097                           	opt stack 0
  1098                           
  1099                           ; 1 bytes @ 0x1
  1100  000061                     	ds	1
  1101  000062                     ??_my_atoi:
  1102  000062                     ___awdiv@quotient:
  1103                           	opt stack 0
  1104                           
  1105                           ; 2 bytes @ 0x2
  1106  000062                     	ds	2
  1107  000064                     month_length@year:
  1108                           	opt stack 0
  1109  000064                     ___llmod@divisor:
  1110                           	opt stack 0
  1111                           
  1112                           ; 4 bytes @ 0x4
  1113  000064                     	ds	1
  1114  000065                     ?___lmul:
  1115                           	opt stack 0
  1116  000065                     ___lmul@multiplier:
  1117                           	opt stack 0
  1118                           
  1119                           ; 4 bytes @ 0x5
  1120  000065                     	ds	1
  1121  000066                     ??_ringbuf_put:
  1122  000066                     ??_ringbuf_pop:
  1123  000066                     ??_ringbuf_backspace:
  1124  000066                     my_atoi@ret:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x6
  1128  000066                     	ds	2
  1129  000068                     ?___lwdiv:
  1130                           	opt stack 0
  1131  000068                     ___lwdiv@dividend:
  1132                           	opt stack 0
  1133                           
  1134                           ; 2 bytes @ 0x8
  1135  000068                     	ds	1
  1136  000069                     ___lmul@multiplicand:
  1137                           	opt stack 0
  1138                           
  1139                           ; 4 bytes @ 0x9
  1140  000069                     	ds	1
  1141  00006A                     ringbuf_put_str@rb:
  1142                           	opt stack 0
  1143  00006A                     ___lwdiv@divisor:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0xA
  1147  00006A                     	ds	2
  1148  00006C                     ___lwdiv@counter:
  1149                           	opt stack 0
  1150  00006C                     ringbuf_put_str@str:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0xC
  1154  00006C                     	ds	1
  1155  00006D                     ___lwdiv@quotient:
  1156                           	opt stack 0
  1157  00006D                     ___lmul@product:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0xD
  1161  00006D                     	ds	2
  1162  00006F                     ?___lwmod:
  1163                           	opt stack 0
  1164  00006F                     PWM_set@value:
  1165                           	opt stack 0
  1166  00006F                     ___lwmod@dividend:
  1167                           	opt stack 0
  1168                           
  1169                           ; 2 bytes @ 0xF
  1170  00006F                     	ds	2
  1171  000071                     ??_PWM_set:
  1172  000071                     ?___lldiv:
  1173                           	opt stack 0
  1174  000071                     caltime_to_epoch@ct:
  1175                           	opt stack 0
  1176  000071                     ___lwmod@divisor:
  1177                           	opt stack 0
  1178  000071                     ___lldiv@dividend:
  1179                           	opt stack 0
  1180                           
  1181                           ; 4 bytes @ 0x11
  1182  000071                     	ds	2
  1183  000073                     ?_sprintf:
  1184                           	opt stack 0
  1185  000073                     ringbuf_put_num@rb:
  1186                           	opt stack 0
  1187  000073                     caltime_to_epoch@ep:
  1188                           	opt stack 0
  1189  000073                     sprintf@sp:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0x13
  1193  000073                     	ds	2
  1194  000075                     ??_caltime_to_epoch:
  1195  000075                     ringbuf_put_num@value:
  1196                           	opt stack 0
  1197  000075                     sprintf@f:
  1198                           	opt stack 0
  1199  000075                     ___lldiv@divisor:
  1200                           	opt stack 0
  1201                           
  1202                           ; 4 bytes @ 0x15
  1203  000075                     	ds	2
  1204  000077                     ringbuf_put_num@digits:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x17
  1208  000077                     	ds	1
  1209  000078                     ringbuf_put_num@i:
  1210                           	opt stack 0
  1211                           
  1212                           ; 1 bytes @ 0x18
  1213  000078                     	ds	1
  1214  000079                     caltime_to_epoch@year:
  1215                           	opt stack 0
  1216  000079                     ringbuf_put_num@temp:
  1217                           	opt stack 0
  1218  000079                     ___lldiv@quotient:
  1219                           	opt stack 0
  1220                           
  1221                           ; 4 bytes @ 0x19
  1222  000079                     	ds	1
  1223  00007A                     caltime_to_epoch@month_2079:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x1A
  1227  00007A                     	ds	1
  1228  00007B                     caltime_to_epoch@epoch:
  1229                           	opt stack 0
  1230                           
  1231                           ; 4 bytes @ 0x1B
  1232  00007B                     	ds	2
  1233  00007D                     ___lldiv@counter:
  1234                           	opt stack 0
  1235                           
  1236                           ; 1 bytes @ 0x1D
  1237  00007D                     	ds	1
  1238  00007E                     ?_get_quot_rem:
  1239                           	opt stack 0
  1240  00007E                     get_quot_rem@quot:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x1E
  1244  00007E                     	ds	1
  1245  00007F                     caltime_to_epoch@month:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x1F
  1249  00007F                     	ds	1
  1250  000080                     get_quot_rem@div:
  1251                           	opt stack 0
  1252  000080                     RTCC_from_RTCC@ct:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x20
  1256  000080                     	ds	2
  1257  000082                     RTCC_from_RTCC@ep:
  1258                           	opt stack 0
  1259  000082                     get_quot_rem@num:
  1260                           	opt stack 0
  1261                           
  1262                           ; 4 bytes @ 0x22
  1263  000082                     	ds	2
  1264  000084                     ??_light_loop:
  1265                           
  1266                           ; 0 bytes @ 0x24
  1267  000084                     	ds	1
  1268  000085                     ??_sprintf:
  1269                           
  1270                           ; 0 bytes @ 0x25
  1271  000085                     	ds	1
  1272  000086                     epoch_to_caltime@ct:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x26
  1276  000086                     	ds	2
  1277  000088                     light_loop@value:
  1278                           	opt stack 0
  1279  000088                     epoch_to_caltime@ep:
  1280                           	opt stack 0
  1281                           
  1282                           ; 2 bytes @ 0x28
  1283  000088                     	ds	1
  1284  000089                     light_loop@value_2507:
  1285                           	opt stack 0
  1286  000089                     sprintf@prec:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x29
  1290  000089                     	ds	1
  1291  00008A                     ??_epoch_to_caltime:
  1292  00008A                     sprintf@ap:
  1293                           	opt stack 0
  1294  00008A                     light_loop@temp:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0x2A
  1298  00008A                     	ds	2
  1299  00008C                     epoch_to_caltime@day_since_epoch:
  1300                           	opt stack 0
  1301  00008C                     sprintf@cp:
  1302                           	opt stack 0
  1303                           
  1304                           ; 2 bytes @ 0x2C
  1305  00008C                     	ds	2
  1306  00008E                     light_loop@i:
  1307                           	opt stack 0
  1308  00008E                     epoch_to_caltime@day:
  1309                           	opt stack 0
  1310  00008E                     sprintf@val:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x2E
  1314  00008E                     	ds	2
  1315  000090                     epoch_to_caltime@year:
  1316                           	opt stack 0
  1317  000090                     sprintf@len:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x30
  1321  000090                     	ds	1
  1322  000091                     epoch_to_caltime@month:
  1323                           	opt stack 0
  1324                           
  1325                           ; 1 bytes @ 0x31
  1326  000091                     	ds	1
  1327  000092                     sprintf@flag:
  1328                           	opt stack 0
  1329  000092                     epoch_to_caltime@num:
  1330                           	opt stack 0
  1331                           
  1332                           ; 4 bytes @ 0x32
  1333  000092                     	ds	1
  1334  000093                     sprintf@c:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x33
  1338  000093                     	ds	1
  1339  000094                     sprintf@width:
  1340                           	opt stack 0
  1341                           
  1342                           ; 2 bytes @ 0x34
  1343  000094                     	ds	2
  1344  000096                     RTCC_from_caltime@ct:
  1345                           	opt stack 0
  1346  000096                     RTCC_from_epoch@ct:
  1347                           	opt stack 0
  1348  000096                     print_time@tx:
  1349                           	opt stack 0
  1350                           
  1351                           ; 2 bytes @ 0x36
  1352  000096                     	ds	2
  1353  000098                     RTCC_from_caltime@ep:
  1354                           	opt stack 0
  1355  000098                     RTCC_from_epoch@ep:
  1356                           	opt stack 0
  1357  000098                     print_time@str:
  1358                           	opt stack 0
  1359                           
  1360                           ; 30 bytes @ 0x38
  1361  000098                     	ds	30
  1362  0000B6                     command_at_hand@tx:
  1363                           	opt stack 0
  1364                           
  1365                           ; 2 bytes @ 0x56
  1366  0000B6                     	ds	2
  1367  0000B8                     command_at_hand@hand:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x58
  1371  0000B8                     	ds	2
  1372  0000BA                     command_at_hand@min:
  1373                           	opt stack 0
  1374                           
  1375                           ; 1 bytes @ 0x5A
  1376  0000BA                     	ds	1
  1377  0000BB                     command_at_hand@max:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0x5B
  1381  0000BB                     	ds	1
  1382  0000BC                     command_at_hand@value:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x5C
  1386  0000BC                     	ds	1
  1387  0000BD                     _command_time$3238:
  1388                           	opt stack 0
  1389                           
  1390                           ; 1 bytes @ 0x5D
  1391  0000BD                     	ds	1
  1392  0000BE                     ??_my_terminal_loop:
  1393                           
  1394                           ; 0 bytes @ 0x5E
  1395  0000BE                     	ds	2
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406                           	psect	cstackCOMRAM
  1407  000001                     __pcstackCOMRAM:
  1408                           	opt stack 0
  1409  000001                     ?i2_ringbuf_num:
  1410                           	opt stack 0
  1411  000001                     button_timer_interrupt@bt:
  1412                           	opt stack 0
  1413  000001                     i2ringbuf_num@rb:
  1414                           	opt stack 0
  1415                           
  1416                           ; 2 bytes @ 0x0
  1417  000001                     	ds	2
  1418  000003                     ??i2_ringbuf_num:
  1419  000003                     button_timer_interrupt@sw_value:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x2
  1423  000003                     	ds	1
  1424  000004                     
  1425                           ; 0 bytes @ 0x3
  1426  000004                     	ds	5
  1427  000009                     i2ringbuf_put@rb:
  1428                           	opt stack 0
  1429  000009                     i2ringbuf_pop@rb:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x8
  1433  000009                     	ds	2
  1434  00000B                     ??i2_ringbuf_pop:
  1435  00000B                     i2ringbuf_put@asciicode:
  1436                           	opt stack 0
  1437                           
  1438                           ; 1 bytes @ 0xA
  1439  00000B                     	ds	1
  1440  00000C                     ??i2_ringbuf_put:
  1441                           
  1442                           ; 0 bytes @ 0xB
  1443  00000C                     	ds	3
  1444  00000F                     i2ringbuf_pop@ret:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0xE
  1448  00000F                     	ds	1
  1449  000010                     UART_ISR@ascii:
  1450                           	opt stack 0
  1451                           
  1452                           ; 1 bytes @ 0xF
  1453  000010                     	ds	1
  1454  000011                     ??_ISR:
  1455                           
  1456                           ; 0 bytes @ 0x10
  1457  000011                     	ds	14
  1458  00001F                     ??_isdigit:
  1459  00001F                     ??_timer0_init:
  1460  00001F                     ??_timer3_init:
  1461  00001F                     ??_x_to_d:
  1462  00001F                     ?_ringbuf_num:
  1463                           	opt stack 0
  1464  00001F                     ?___wmul:
  1465                           	opt stack 0
  1466  00001F                     ?___awdiv:
  1467                           	opt stack 0
  1468  00001F                     ?___awmod:
  1469                           	opt stack 0
  1470  00001F                     timer1_init@clock_select:
  1471                           	opt stack 0
  1472  00001F                     ADC_init@p_ref:
  1473                           	opt stack 0
  1474  00001F                     PWM_init@PR:
  1475                           	opt stack 0
  1476  00001F                     ___llmod@counter:
  1477                           	opt stack 0
  1478  00001F                     ringbuf_init@rb:
  1479                           	opt stack 0
  1480  00001F                     ringbuf_num@rb:
  1481                           	opt stack 0
  1482  00001F                     ringbuf_delete@rb:
  1483                           	opt stack 0
  1484  00001F                     my_strcmp@str1:
  1485                           	opt stack 0
  1486  00001F                     ___wmul@multiplier:
  1487                           	opt stack 0
  1488  00001F                     ___awdiv@dividend:
  1489                           	opt stack 0
  1490  00001F                     ___awmod@dividend:
  1491                           	opt stack 0
  1492                           
  1493                           ; 2 bytes @ 0x1E
  1494  00001F                     	ds	1
  1495  000020                     ??_timer1_init:
  1496  000020                     timer0_init@prescaler:
  1497                           	opt stack 0
  1498  000020                     timer3_init@prescaler:
  1499                           	opt stack 0
  1500  000020                     x_to_d@hex:
  1501                           	opt stack 0
  1502  000020                     _isdigit$2792:
  1503                           	opt stack 0
  1504                           
  1505                           ; 1 bytes @ 0x1F
  1506  000020                     	ds	1
  1507  000021                     timer1_init@prescaler:
  1508                           	opt stack 0
  1509  000021                     isdigit@c:
  1510                           	opt stack 0
  1511  000021                     ringbuf_init@internal_buf:
  1512                           	opt stack 0
  1513  000021                     ringbuf_put@rb:
  1514                           	opt stack 0
  1515  000021                     ringbuf_pop@rb:
  1516                           	opt stack 0
  1517  000021                     ringbuf_backspace@rb:
  1518                           	opt stack 0
  1519  000021                     RTCC_to_caltime@ct:
  1520                           	opt stack 0
  1521  000021                     my_strcmp@str2:
  1522                           	opt stack 0
  1523  000021                     ___wmul@multiplicand:
  1524                           	opt stack 0
  1525  000021                     ___awdiv@divisor:
  1526                           	opt stack 0
  1527  000021                     ___awmod@divisor:
  1528                           	opt stack 0
  1529                           
  1530                           ; 2 bytes @ 0x20
  1531  000021                     	ds	2
  1532  000023                     ??_my_strcmp:
  1533  000023                     ringbuf_put@asciicode:
  1534                           	opt stack 0
  1535  000023                     ringbuf_pop@ret:
  1536                           	opt stack 0
  1537  000023                     d_to_x@dec:
  1538                           	opt stack 0
  1539  000023                     RTCC_to_caltime@dumy:
  1540                           	opt stack 0
  1541  000023                     ___awmod@counter:
  1542                           	opt stack 0
  1543  000023                     ringbuf_init@bufsize:
  1544                           	opt stack 0
  1545  000023                     ___wmul@product:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x22
  1549  000023                     	ds	1
  1550  000024                     ___awmod@sign:
  1551                           	opt stack 0
  1552  000024                     tx_sends@asciicode:
  1553                           	opt stack 0
  1554  000024                     caltime_to_RTCC@ct:
  1555                           	opt stack 0
  1556                           
  1557                           ; 2 bytes @ 0x23
  1558  000024                     	ds	1
  1559  000025                     month_length@month:
  1560                           	opt stack 0
  1561  000025                     PWM_set@color:
  1562                           	opt stack 0
  1563  000025                     ___lwmod@counter:
  1564                           	opt stack 0
  1565                           
  1566                           ; 1 bytes @ 0x24
  1567  000025                     	ds	1
  1568  000026                     tblptru	equ	0xFF8
  1569                           tblptrh	equ	0xFF7
  1570                           tblptrl	equ	0xFF6
  1571                           tablat	equ	0xFF5
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           postdec1	equ	0xFE5
  1575                           fsr1h	equ	0xFE2
  1576                           fsr1l	equ	0xFE1
  1577                           
  1578                           ; 0 bytes @ 0x25
  1579 ;;
  1580 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1581 ;;
  1582 ;; *************** function _main *****************
  1583 ;; Defined at:
  1584 ;;		line 298 in file "PIC18F27J53-killifish_light04.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2  670[None  ] int 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels required when called:   13
  1604 ;; This function calls:
  1605 ;;		_RTCC_from_RTCC
  1606 ;;		_RTCC_from_epoch
  1607 ;;		_RTCC_loop
  1608 ;;		_light_loop
  1609 ;;		_main_init
  1610 ;;		_my_terminal_loop
  1611 ;;		_ringbuf_num
  1612 ;; This function is called by:
  1613 ;;		Startup code after reset
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text0
  1618  0123A2                     __ptext0:
  1619                           	opt stack 0
  1620  0123A2                     _main:
  1621                           	opt stack 18
  1622                           
  1623                           ;PIC18F27J53-killifish_light04.c: 299: main_init();
  1624                           
  1625                           ;incstack = 0
  1626  0123A2  ECF0  F092         	call	_main_init	;wreg free
  1627                           
  1628                           ;PIC18F27J53-killifish_light04.c: 301: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1629  0123A6  0EF1               	movlw	low _caltime_now
  1630  0123A8  0100               	movlb	0	; () banked
  1631  0123AA  6F80               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1632  0123AC  0E00               	movlw	high _caltime_now
  1633  0123AE  0100               	movlb	0	; () banked
  1634  0123B0  6F81               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1635  0123B2  0EF8               	movlw	low _epoch_now
  1636  0123B4  0100               	movlb	0	; () banked
  1637  0123B6  6F82               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1638  0123B8  0E00               	movlw	high _epoch_now
  1639  0123BA  0100               	movlb	0	; () banked
  1640  0123BC  6F83               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1641  0123BE  EC18  F096         	call	_RTCC_from_RTCC	;wreg free
  1642                           
  1643                           ;PIC18F27J53-killifish_light04.c: 302: if (caltime_now.DD == 0) {
  1644  0123C2  0100               	movlb	0	; () banked
  1645  0123C4  51F5               	movf	(_caltime_now+4)& (0+255),w,b
  1646  0123C6  A4D8               	btfss	status,2,c
  1647  0123C8  D017               	goto	l5709
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;PIC18F27J53-killifish_light04.c: 303: epoch_now = 0;
  1651  0123CA  0E00               	movlw	0
  1652  0123CC  0100               	movlb	0	; () banked
  1653  0123CE  6FF8               	movwf	_epoch_now& (0+255),b
  1654  0123D0  0E00               	movlw	0
  1655  0123D2  6FF9               	movwf	(_epoch_now+1)& (0+255),b
  1656  0123D4  0E00               	movlw	0
  1657  0123D6  6FFA               	movwf	(_epoch_now+2)& (0+255),b
  1658  0123D8  0E00               	movlw	0
  1659  0123DA  6FFB               	movwf	(_epoch_now+3)& (0+255),b
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;PIC18F27J53-killifish_light04.c: 304: RTCC_from_epoch(&caltime_now, &epoch_now);
  1663  0123DC  0EF1               	movlw	low _caltime_now
  1664  0123DE  0100               	movlb	0	; () banked
  1665  0123E0  6F96               	movwf	RTCC_from_epoch@ct& (0+255),b
  1666  0123E2  0E00               	movlw	high _caltime_now
  1667  0123E4  0100               	movlb	0	; () banked
  1668  0123E6  6F97               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1669  0123E8  0EF8               	movlw	low _epoch_now
  1670  0123EA  0100               	movlb	0	; () banked
  1671  0123EC  6F98               	movwf	RTCC_from_epoch@ep& (0+255),b
  1672  0123EE  0E00               	movlw	high _epoch_now
  1673  0123F0  0100               	movlb	0	; () banked
  1674  0123F2  6F99               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1675  0123F4  EC29  F096         	call	_RTCC_from_epoch	;wreg free
  1676  0123F8                     l5709:
  1677                           
  1678                           ;PIC18F27J53-killifish_light04.c: 308: INTCONbits.GIE = 0;
  1679  0123F8  9EF2               	bcf	intcon,7,c	;volatile
  1680                           
  1681                           ;PIC18F27J53-killifish_light04.c: 309: RTCC_loop();
  1682  0123FA  EC32  F095         	call	_RTCC_loop	;wreg free
  1683                           
  1684                           ;PIC18F27J53-killifish_light04.c: 310: my_terminal_loop(&tx_buf, &rx_buf);
  1685  0123FE  0E2D               	movlw	low _tx_buf
  1686  012400  0101               	movlb	1	; () banked
  1687  012402  6F16               	movwf	my_terminal_loop@tx& (0+255),b
  1688  012404  0E00               	movlw	high _tx_buf
  1689  012406  0101               	movlb	1	; () banked
  1690  012408  6F17               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  1691  01240A  0EE1               	movlw	low _rx_buf
  1692  01240C  0101               	movlb	1	; () banked
  1693  01240E  6F18               	movwf	my_terminal_loop@rx& (0+255),b
  1694  012410  0E00               	movlw	high _rx_buf
  1695  012412  0101               	movlb	1	; () banked
  1696  012414  6F19               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  1697  012416  EC0C  F084         	call	_my_terminal_loop	;wreg free
  1698                           
  1699                           ;PIC18F27J53-killifish_light04.c: 311: if (ringbuf_num(&tx_buf))PIE1bits.TXIE = 1;
  1700  01241A  0E2D               	movlw	low _tx_buf
  1701  01241C  6E1F               	movwf	ringbuf_num@rb,c
  1702  01241E  0E00               	movlw	high _tx_buf
  1703  012420  6E20               	movwf	ringbuf_num@rb+1,c
  1704  012422  EC6F  F08C         	call	_ringbuf_num	;wreg free
  1705  012426  501F               	movf	?_ringbuf_num,w,c
  1706  012428  1020               	iorwf	?_ringbuf_num+1,w,c
  1707  01242A  A4D8               	btfss	status,2,c
  1708  01242C  889D               	bsf	3997,4,c	;volatile
  1709                           
  1710                           ;PIC18F27J53-killifish_light04.c: 312: light_loop();
  1711  01242E  ECA6  F089         	call	_light_loop	;wreg free
  1712                           
  1713                           ;PIC18F27J53-killifish_light04.c: 313: INTCONbits.GIE = 1;
  1714  012432  8EF2               	bsf	intcon,7,c	;volatile
  1715  012434  D7E1               	goto	l5709
  1716  012436                     __end_of_main:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           intcon	equ	0xFF2
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1h	equ	0xFE2
  1727                           fsr1l	equ	0xFE1
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _my_terminal_loop *****************
  1731 ;; Defined at:
  1732 ;;		line 22 in file "../My_header\My_terminal.h"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  tx              2   22[BANK1 ] PTR struct ringbuf
  1735 ;;		 -> tx_buf(8), 
  1736 ;;  rx              2   24[BANK1 ] PTR struct ringbuf
  1737 ;;		 -> rx_buf(8), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  i               1  128[BANK1 ] unsigned char 
  1740 ;;  i               1  130[BANK1 ] unsigned char 
  1741 ;;  ascii           1  129[BANK1 ] unsigned char 
  1742 ;;  buf           100   26[BANK1 ] unsigned char [100]
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1752 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Totals:         0       2     109       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;Total ram usage:      111 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:   12
  1759 ;; This function calls:
  1760 ;;		_command_operation
  1761 ;;		_ringbuf_backspace
  1762 ;;		_ringbuf_delete
  1763 ;;		_ringbuf_init
  1764 ;;		_ringbuf_num
  1765 ;;		_ringbuf_pop
  1766 ;;		_ringbuf_put
  1767 ;;		_ringbuf_put_num
  1768 ;;		_ringbuf_put_str
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text1
  1775  010818                     __ptext1:
  1776                           	opt stack 0
  1777  010818                     _my_terminal_loop:
  1778                           	opt stack 18
  1779                           
  1780                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
  1781                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
  1782                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
  1783                           
  1784                           ;incstack = 0
  1785  010818  0100               	movlb	0	; () banked
  1786  01081A  51CC               	movf	my_terminal_loop@command_init& (0+255),w,b
  1787  01081C  0100               	movlb	0	; () banked
  1788  01081E  A4D8               	btfss	status,2,c
  1789  010820  D011               	goto	l5463
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;My_header\My_terminal.h: 26: command_init = 1;
  1793  010822  0E01               	movlw	1
  1794  010824  0100               	movlb	0	; () banked
  1795  010826  6FCC               	movwf	my_terminal_loop@command_init& (0+255),b
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;My_header\My_terminal.h: 27: char buf[100];
  1799                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
  1800  010828  0EE9               	movlw	low my_terminal_loop@command
  1801  01082A  6E1F               	movwf	ringbuf_init@rb,c
  1802  01082C  0E00               	movlw	high my_terminal_loop@command
  1803  01082E  6E20               	movwf	ringbuf_init@rb+1,c
  1804  010830  0E1A               	movlw	low my_terminal_loop@buf
  1805  010832  6E21               	movwf	ringbuf_init@internal_buf,c
  1806  010834  0E01               	movlw	high my_terminal_loop@buf
  1807  010836  6E22               	movwf	ringbuf_init@internal_buf+1,c
  1808  010838  0E00               	movlw	0
  1809  01083A  6E24               	movwf	ringbuf_init@bufsize+1,c
  1810  01083C  0E64               	movlw	100
  1811  01083E  6E23               	movwf	ringbuf_init@bufsize,c
  1812  010840  ECE6  F094         	call	_ringbuf_init	;wreg free
  1813  010844                     l5463:
  1814                           
  1815                           ;My_header\My_terminal.h: 29: }
  1816                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
  1817  010844  C118  F01F         	movff	my_terminal_loop@rx,ringbuf_num@rb
  1818  010848  C119  F020         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
  1819  01084C  EC6F  F08C         	call	_ringbuf_num	;wreg free
  1820  010850  501F               	movf	?_ringbuf_num,w,c
  1821  010852  1020               	iorwf	?_ringbuf_num+1,w,c
  1822  010854  B4D8               	btfsc	status,2,c
  1823  010856  0012               	return	
  1824                           
  1825                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
  1826  010858  C118  F021         	movff	my_terminal_loop@rx,ringbuf_pop@rb
  1827  01085C  C119  F022         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
  1828  010860  EC29  F08F         	call	_ringbuf_pop	;wreg free
  1829  010864  0101               	movlb	1	; () banked
  1830  010866  6F81               	movwf	my_terminal_loop@ascii& (0+255),b
  1831                           
  1832                           ;My_header\My_terminal.h: 32: switch (ascii) {
  1833  010868  D157               	goto	l5527
  1834  01086A                     l5467:
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
  1838  01086A  0EE9               	movlw	low my_terminal_loop@command
  1839  01086C  6E21               	movwf	ringbuf_put@rb,c
  1840  01086E  0E00               	movlw	high my_terminal_loop@command
  1841  010870  6E22               	movwf	ringbuf_put@rb+1,c
  1842  010872  0E00               	movlw	0
  1843  010874  6E23               	movwf	ringbuf_put@asciicode,c
  1844  010876  ECA9  F08D         	call	_ringbuf_put	;wreg free
  1845                           
  1846                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
  1847  01087A  C116  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  1848  01087E  C117  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  1849  010882  0E09               	movlw	9
  1850  010884  6E23               	movwf	ringbuf_put@asciicode,c
  1851  010886  ECA9  F08D         	call	_ringbuf_put	;wreg free
  1852                           
  1853                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  1854  01088A  0EE9               	movlw	low my_terminal_loop@command
  1855  01088C  6E1F               	movwf	ringbuf_num@rb,c
  1856  01088E  0E00               	movlw	high my_terminal_loop@command
  1857  010890  6E20               	movwf	ringbuf_num@rb+1,c
  1858  010892  EC6F  F08C         	call	_ringbuf_num	;wreg free
  1859  010896  0EFF               	movlw	255
  1860  010898  241F               	addwf	?_ringbuf_num,w,c
  1861  01089A  0101               	movlb	1	; () banked
  1862  01089C  6F7E               	movwf	_my_terminal_loop$3237& (0+255),b
  1863  01089E  0EFF               	movlw	255
  1864  0108A0  2020               	addwfc	?_ringbuf_num+1,w,c
  1865  0108A2  0101               	movlb	1	; () banked
  1866  0108A4  6F7F               	movwf	(_my_terminal_loop$3237+1)& (0+255),b
  1867                           
  1868                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  1869  0108A6  C116  F073         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
  1870  0108AA  C117  F074         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
  1871  0108AE  C17E  F075         	movff	_my_terminal_loop$3237,ringbuf_put_num@value
  1872  0108B2  C17F  F076         	movff	_my_terminal_loop$3237+1,ringbuf_put_num@value+1
  1873  0108B6  0E02               	movlw	2
  1874  0108B8  0100               	movlb	0	; () banked
  1875  0108BA  6F77               	movwf	ringbuf_put_num@digits& (0+255),b
  1876  0108BC  EC31  F093         	call	_ringbuf_put_num	;wreg free
  1877                           
  1878                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
  1879  0108C0  C116  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  1880  0108C4  C117  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  1881  0108C8  0E0A               	movlw	10
  1882  0108CA  6E23               	movwf	ringbuf_put@asciicode,c
  1883  0108CC  ECA9  F08D         	call	_ringbuf_put	;wreg free
  1884                           
  1885                           ;My_header\My_terminal.h: 38: static char op0[20];
  1886                           ;My_header\My_terminal.h: 39: static char op1[20];
  1887                           ;My_header\My_terminal.h: 40: static char op2[20];
  1888                           ;My_header\My_terminal.h: 41: static char op3[20];
  1889                           ;My_header\My_terminal.h: 42: uint8_t i;
  1890                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  1891  0108D0  0E00               	movlw	0
  1892  0108D2  0101               	movlb	1	; () banked
  1893  0108D4  6F82               	movwf	my_terminal_loop@i& (0+255),b
  1894  0108D6  D002               	goto	l5473
  1895  0108D8                     l5471:
  1896                           
  1897                           ; BSR set to: 1
  1898  0108D8  0101               	movlb	1	; () banked
  1899  0108DA  2B82               	incf	my_terminal_loop@i& (0+255),f,b
  1900  0108DC                     l5473:
  1901                           
  1902                           ; BSR set to: 1
  1903  0108DC  0EE9               	movlw	low my_terminal_loop@command
  1904  0108DE  6E21               	movwf	ringbuf_pop@rb,c
  1905  0108E0  0E00               	movlw	high my_terminal_loop@command
  1906  0108E2  6E22               	movwf	ringbuf_pop@rb+1,c
  1907  0108E4  EC29  F08F         	call	_ringbuf_pop	;wreg free
  1908  0108E8  0100               	movlb	0	; () banked
  1909  0108EA  6FBE               	movwf	??_my_terminal_loop& (0+255),b
  1910  0108EC  0101               	movlb	1	; () banked
  1911  0108EE  5182               	movf	my_terminal_loop@i& (0+255),w,b
  1912  0108F0  0D01               	mullw	1
  1913  0108F2  0ECD               	movlw	low my_terminal_loop@op0
  1914  0108F4  24F3               	addwf	prodl,w,c
  1915  0108F6  6ED9               	movwf	fsr2l,c
  1916  0108F8  0E00               	movlw	high my_terminal_loop@op0
  1917  0108FA  20F4               	addwfc	prodh,w,c
  1918  0108FC  6EDA               	movwf	fsr2h,c
  1919  0108FE  C0BE  FFDF         	movff	??_my_terminal_loop,indf2
  1920  010902  50DF               	movf	indf2,w,c
  1921  010904  A4D8               	btfss	status,2,c
  1922  010906  D7E8               	goto	l5471
  1923                           
  1924                           ; BSR set to: 1
  1925                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
  1926                           
  1927                           ; BSR set to: 1
  1928  010908  0101               	movlb	1	; () banked
  1929  01090A  5182               	movf	my_terminal_loop@i& (0+255),w,b
  1930  01090C  0D01               	mullw	1
  1931  01090E  0ECD               	movlw	low my_terminal_loop@op0
  1932  010910  24F3               	addwf	prodl,w,c
  1933  010912  6ED9               	movwf	fsr2l,c
  1934  010914  0E00               	movlw	high my_terminal_loop@op0
  1935  010916  20F4               	addwfc	prodh,w,c
  1936  010918  6EDA               	movwf	fsr2h,c
  1937  01091A  0E00               	movlw	0
  1938  01091C  6EDF               	movwf	indf2,c
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  1942  01091E  0E00               	movlw	0
  1943  010920  0101               	movlb	1	; () banked
  1944  010922  6F82               	movwf	my_terminal_loop@i& (0+255),b
  1945  010924  D002               	goto	l5481
  1946  010926                     l5479:
  1947                           
  1948                           ; BSR set to: 1
  1949  010926  0101               	movlb	1	; () banked
  1950  010928  2B82               	incf	my_terminal_loop@i& (0+255),f,b
  1951  01092A                     l5481:
  1952                           
  1953                           ; BSR set to: 1
  1954  01092A  0EE9               	movlw	low my_terminal_loop@command
  1955  01092C  6E21               	movwf	ringbuf_pop@rb,c
  1956  01092E  0E00               	movlw	high my_terminal_loop@command
  1957  010930  6E22               	movwf	ringbuf_pop@rb+1,c
  1958  010932  EC29  F08F         	call	_ringbuf_pop	;wreg free
  1959  010936  0100               	movlb	0	; () banked
  1960  010938  6FBE               	movwf	??_my_terminal_loop& (0+255),b
  1961  01093A  0101               	movlb	1	; () banked
  1962  01093C  5182               	movf	my_terminal_loop@i& (0+255),w,b
  1963  01093E  0D01               	mullw	1
  1964  010940  0E83               	movlw	low my_terminal_loop@op1
  1965  010942  24F3               	addwf	prodl,w,c
  1966  010944  6ED9               	movwf	fsr2l,c
  1967  010946  0E01               	movlw	high my_terminal_loop@op1
  1968  010948  20F4               	addwfc	prodh,w,c
  1969  01094A  6EDA               	movwf	fsr2h,c
  1970  01094C  C0BE  FFDF         	movff	??_my_terminal_loop,indf2
  1971  010950  50DF               	movf	indf2,w,c
  1972  010952  A4D8               	btfss	status,2,c
  1973  010954  D7E8               	goto	l5479
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
  1977                           
  1978                           ; BSR set to: 1
  1979  010956  0101               	movlb	1	; () banked
  1980  010958  5182               	movf	my_terminal_loop@i& (0+255),w,b
  1981  01095A  0D01               	mullw	1
  1982  01095C  0E83               	movlw	low my_terminal_loop@op1
  1983  01095E  24F3               	addwf	prodl,w,c
  1984  010960  6ED9               	movwf	fsr2l,c
  1985  010962  0E01               	movlw	high my_terminal_loop@op1
  1986  010964  20F4               	addwfc	prodh,w,c
  1987  010966  6EDA               	movwf	fsr2h,c
  1988  010968  0E00               	movlw	0
  1989  01096A  6EDF               	movwf	indf2,c
  1990                           
  1991                           ; BSR set to: 1
  1992                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  1993  01096C  0E00               	movlw	0
  1994  01096E  0101               	movlb	1	; () banked
  1995  010970  6F82               	movwf	my_terminal_loop@i& (0+255),b
  1996  010972  D002               	goto	l5489
  1997  010974                     l5487:
  1998                           
  1999                           ; BSR set to: 1
  2000  010974  0101               	movlb	1	; () banked
  2001  010976  2B82               	incf	my_terminal_loop@i& (0+255),f,b
  2002  010978                     l5489:
  2003                           
  2004                           ; BSR set to: 1
  2005  010978  0EE9               	movlw	low my_terminal_loop@command
  2006  01097A  6E21               	movwf	ringbuf_pop@rb,c
  2007  01097C  0E00               	movlw	high my_terminal_loop@command
  2008  01097E  6E22               	movwf	ringbuf_pop@rb+1,c
  2009  010980  EC29  F08F         	call	_ringbuf_pop	;wreg free
  2010  010984  0100               	movlb	0	; () banked
  2011  010986  6FBE               	movwf	??_my_terminal_loop& (0+255),b
  2012  010988  0101               	movlb	1	; () banked
  2013  01098A  5182               	movf	my_terminal_loop@i& (0+255),w,b
  2014  01098C  0D01               	mullw	1
  2015  01098E  0E97               	movlw	low my_terminal_loop@op2
  2016  010990  24F3               	addwf	prodl,w,c
  2017  010992  6ED9               	movwf	fsr2l,c
  2018  010994  0E01               	movlw	high my_terminal_loop@op2
  2019  010996  20F4               	addwfc	prodh,w,c
  2020  010998  6EDA               	movwf	fsr2h,c
  2021  01099A  C0BE  FFDF         	movff	??_my_terminal_loop,indf2
  2022  01099E  50DF               	movf	indf2,w,c
  2023  0109A0  A4D8               	btfss	status,2,c
  2024  0109A2  D7E8               	goto	l5487
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
  2028                           
  2029                           ; BSR set to: 1
  2030  0109A4  0101               	movlb	1	; () banked
  2031  0109A6  5182               	movf	my_terminal_loop@i& (0+255),w,b
  2032  0109A8  0D01               	mullw	1
  2033  0109AA  0E97               	movlw	low my_terminal_loop@op2
  2034  0109AC  24F3               	addwf	prodl,w,c
  2035  0109AE  6ED9               	movwf	fsr2l,c
  2036  0109B0  0E01               	movlw	high my_terminal_loop@op2
  2037  0109B2  20F4               	addwfc	prodh,w,c
  2038  0109B4  6EDA               	movwf	fsr2h,c
  2039  0109B6  0E00               	movlw	0
  2040  0109B8  6EDF               	movwf	indf2,c
  2041                           
  2042                           ; BSR set to: 1
  2043                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2044  0109BA  0E00               	movlw	0
  2045  0109BC  0101               	movlb	1	; () banked
  2046  0109BE  6F82               	movwf	my_terminal_loop@i& (0+255),b
  2047  0109C0  D002               	goto	l5497
  2048  0109C2                     l5495:
  2049                           
  2050                           ; BSR set to: 1
  2051  0109C2  0101               	movlb	1	; () banked
  2052  0109C4  2B82               	incf	my_terminal_loop@i& (0+255),f,b
  2053  0109C6                     l5497:
  2054                           
  2055                           ; BSR set to: 1
  2056  0109C6  0EE9               	movlw	low my_terminal_loop@command
  2057  0109C8  6E21               	movwf	ringbuf_pop@rb,c
  2058  0109CA  0E00               	movlw	high my_terminal_loop@command
  2059  0109CC  6E22               	movwf	ringbuf_pop@rb+1,c
  2060  0109CE  EC29  F08F         	call	_ringbuf_pop	;wreg free
  2061  0109D2  0100               	movlb	0	; () banked
  2062  0109D4  6FBE               	movwf	??_my_terminal_loop& (0+255),b
  2063  0109D6  0101               	movlb	1	; () banked
  2064  0109D8  5182               	movf	my_terminal_loop@i& (0+255),w,b
  2065  0109DA  0D01               	mullw	1
  2066  0109DC  0EAB               	movlw	low my_terminal_loop@op3
  2067  0109DE  24F3               	addwf	prodl,w,c
  2068  0109E0  6ED9               	movwf	fsr2l,c
  2069  0109E2  0E01               	movlw	high my_terminal_loop@op3
  2070  0109E4  20F4               	addwfc	prodh,w,c
  2071  0109E6  6EDA               	movwf	fsr2h,c
  2072  0109E8  C0BE  FFDF         	movff	??_my_terminal_loop,indf2
  2073  0109EC  50DF               	movf	indf2,w,c
  2074  0109EE  A4D8               	btfss	status,2,c
  2075  0109F0  D7E8               	goto	l5495
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
  2079                           
  2080                           ; BSR set to: 1
  2081  0109F2  0101               	movlb	1	; () banked
  2082  0109F4  5182               	movf	my_terminal_loop@i& (0+255),w,b
  2083  0109F6  0D01               	mullw	1
  2084  0109F8  0EAB               	movlw	low my_terminal_loop@op3
  2085  0109FA  24F3               	addwf	prodl,w,c
  2086  0109FC  6ED9               	movwf	fsr2l,c
  2087  0109FE  0E01               	movlw	high my_terminal_loop@op3
  2088  010A00  20F4               	addwfc	prodh,w,c
  2089  010A02  6EDA               	movwf	fsr2h,c
  2090  010A04  0E00               	movlw	0
  2091  010A06  6EDF               	movwf	indf2,c
  2092                           
  2093                           ; BSR set to: 1
  2094                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
  2095  010A08  C116  F108         	movff	my_terminal_loop@tx,command_operation@tx
  2096  010A0C  C117  F109         	movff	my_terminal_loop@tx+1,command_operation@tx+1
  2097  010A10  0ECD               	movlw	low my_terminal_loop@op0
  2098  010A12  0101               	movlb	1	; () banked
  2099  010A14  6F0A               	movwf	command_operation@op0& (0+255),b
  2100  010A16  0E00               	movlw	high my_terminal_loop@op0
  2101  010A18  0101               	movlb	1	; () banked
  2102  010A1A  6F0B               	movwf	(command_operation@op0+1)& (0+255),b
  2103  010A1C  0E83               	movlw	low my_terminal_loop@op1
  2104  010A1E  0101               	movlb	1	; () banked
  2105  010A20  6F0C               	movwf	command_operation@op1& (0+255),b
  2106  010A22  0E01               	movlw	high my_terminal_loop@op1
  2107  010A24  0101               	movlb	1	; () banked
  2108  010A26  6F0D               	movwf	(command_operation@op1+1)& (0+255),b
  2109  010A28  0E97               	movlw	low my_terminal_loop@op2
  2110  010A2A  0101               	movlb	1	; () banked
  2111  010A2C  6F0E               	movwf	command_operation@op2& (0+255),b
  2112  010A2E  0E01               	movlw	high my_terminal_loop@op2
  2113  010A30  0101               	movlb	1	; () banked
  2114  010A32  6F0F               	movwf	(command_operation@op2+1)& (0+255),b
  2115  010A34  0EAB               	movlw	low my_terminal_loop@op3
  2116  010A36  0101               	movlb	1	; () banked
  2117  010A38  6F10               	movwf	command_operation@op3& (0+255),b
  2118  010A3A  0E01               	movlw	high my_terminal_loop@op3
  2119  010A3C  0101               	movlb	1	; () banked
  2120  010A3E  6F11               	movwf	(command_operation@op3+1)& (0+255),b
  2121  010A40  EC2C  F082         	call	_command_operation	;wreg free
  2122                           
  2123                           ;My_header\My_terminal.h: 52: break;
  2124  010A44  0012               	return	
  2125  010A46                     l5503:
  2126                           
  2127                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
  2128  010A46  0EE9               	movlw	low my_terminal_loop@command
  2129  010A48  6E21               	movwf	ringbuf_put@rb,c
  2130  010A4A  0E00               	movlw	high my_terminal_loop@command
  2131  010A4C  6E22               	movwf	ringbuf_put@rb+1,c
  2132  010A4E  0E00               	movlw	0
  2133  010A50  6E23               	movwf	ringbuf_put@asciicode,c
  2134  010A52  ECA9  F08D         	call	_ringbuf_put	;wreg free
  2135                           
  2136                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
  2137  010A56  C116  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2138  010A5A  C117  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2139  010A5E  0E20               	movlw	32
  2140  010A60  6E23               	movwf	ringbuf_put@asciicode,c
  2141  010A62  ECA9  F08D         	call	_ringbuf_put	;wreg free
  2142                           
  2143                           ;My_header\My_terminal.h: 56: break;
  2144  010A66  0012               	return	
  2145  010A68                     l5505:
  2146                           
  2147                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
  2148  010A68  0EE9               	movlw	low my_terminal_loop@command
  2149  010A6A  6E21               	movwf	ringbuf_backspace@rb,c
  2150  010A6C  0E00               	movlw	high my_terminal_loop@command
  2151  010A6E  6E22               	movwf	ringbuf_backspace@rb+1,c
  2152  010A70  ECAF  F092         	call	_ringbuf_backspace	;wreg free
  2153                           
  2154                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
  2155  010A74  C116  F06A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2156  010A78  C117  F06B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2157  010A7C  0ECA               	movlw	low STR_1
  2158  010A7E  0100               	movlb	0	; () banked
  2159  010A80  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  2160  010A82  0EFF               	movlw	high STR_1
  2161  010A84  0100               	movlb	0	; () banked
  2162  010A86  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2163  010A88  EC57  F094         	call	_ringbuf_put_str	;wreg free
  2164                           
  2165                           ;My_header\My_terminal.h: 60: break;
  2166  010A8C  0012               	return	
  2167  010A8E                     l5509:
  2168                           
  2169                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
  2170  010A8E  0E00               	movlw	0
  2171  010A90  0101               	movlb	1	; () banked
  2172  010A92  6F80               	movwf	my_terminal_loop@i_2284& (0+255),b
  2173  010A94  D00E               	goto	l5515
  2174  010A96                     l5511:
  2175  010A96  C116  F06A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2176  010A9A  C117  F06B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2177  010A9E  0ECA               	movlw	low STR_1
  2178  010AA0  0100               	movlb	0	; () banked
  2179  010AA2  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  2180  010AA4  0EFF               	movlw	high STR_1
  2181  010AA6  0100               	movlb	0	; () banked
  2182  010AA8  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2183  010AAA  EC57  F094         	call	_ringbuf_put_str	;wreg free
  2184  010AAE  0101               	movlb	1	; () banked
  2185  010AB0  2B80               	incf	my_terminal_loop@i_2284& (0+255),f,b
  2186  010AB2                     l5515:
  2187                           
  2188                           ; BSR set to: 1
  2189  010AB2  0EE9               	movlw	low my_terminal_loop@command
  2190  010AB4  6E1F               	movwf	ringbuf_num@rb,c
  2191  010AB6  0E00               	movlw	high my_terminal_loop@command
  2192  010AB8  6E20               	movwf	ringbuf_num@rb+1,c
  2193  010ABA  EC6F  F08C         	call	_ringbuf_num	;wreg free
  2194  010ABE  0101               	movlb	1	; () banked
  2195  010AC0  5180               	movf	my_terminal_loop@i_2284& (0+255),w,b
  2196  010AC2  0100               	movlb	0	; () banked
  2197  010AC4  6FBE               	movwf	??_my_terminal_loop& (0+255),b
  2198  010AC6  6BBF               	clrf	(??_my_terminal_loop+1)& (0+255),b
  2199  010AC8  501F               	movf	?_ringbuf_num,w,c
  2200  010ACA  0100               	movlb	0	; () banked
  2201  010ACC  5DBE               	subwf	??_my_terminal_loop& (0+255),w,b
  2202  010ACE  5020               	movf	?_ringbuf_num+1,w,c
  2203  010AD0  0100               	movlb	0	; () banked
  2204  010AD2  59BF               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
  2205  010AD4  A0D8               	btfss	status,0,c
  2206  010AD6  D7DF               	goto	l5511
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
  2210                           
  2211                           ; BSR set to: 0
  2212  010AD8  0EE9               	movlw	low my_terminal_loop@command
  2213  010ADA  6E1F               	movwf	ringbuf_delete@rb,c
  2214  010ADC  0E00               	movlw	high my_terminal_loop@command
  2215  010ADE  6E20               	movwf	ringbuf_delete@rb+1,c
  2216  010AE0  EC07  F096         	call	_ringbuf_delete	;wreg free
  2217                           
  2218                           ;My_header\My_terminal.h: 64: break;
  2219  010AE4  0012               	return	
  2220  010AE6                     l5519:
  2221                           
  2222                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
  2223  010AE6  0E1F               	movlw	31
  2224  010AE8  0101               	movlb	1	; () banked
  2225  010AEA  6581               	cpfsgt	my_terminal_loop@ascii& (0+255),b
  2226  010AEC  0012               	return	
  2227                           
  2228                           ; BSR set to: 1
  2229  010AEE  0E7F               	movlw	127
  2230  010AF0  0101               	movlb	1	; () banked
  2231  010AF2  6181               	cpfslt	my_terminal_loop@ascii& (0+255),b
  2232  010AF4  0012               	return	
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
  2236  010AF6  0EE9               	movlw	low my_terminal_loop@command
  2237  010AF8  6E21               	movwf	ringbuf_put@rb,c
  2238  010AFA  0E00               	movlw	high my_terminal_loop@command
  2239  010AFC  6E22               	movwf	ringbuf_put@rb+1,c
  2240  010AFE  C181  F023         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2241  010B02  ECA9  F08D         	call	_ringbuf_put	;wreg free
  2242                           
  2243                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
  2244  010B06  C116  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2245  010B0A  C117  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2246  010B0E  C181  F023         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2247  010B12  ECA9  F08D         	call	_ringbuf_put	;wreg free
  2248                           
  2249                           ;My_header\My_terminal.h: 71: }
  2250                           
  2251                           ;My_header\My_terminal.h: 69: }
  2252                           ;My_header\My_terminal.h: 70: break;
  2253  010B16  0012               	return	
  2254  010B18                     l5527:
  2255  010B18  0101               	movlb	1	; () banked
  2256  010B1A  5181               	movf	my_terminal_loop@ascii& (0+255),w,b
  2257                           
  2258                           ; Switch size 1, requested type "space"
  2259                           ; Number of cases is 4, Range of values is 8 to 127
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte           13     7 (average)
  2263                           ;	Chosen strategy is simple_byte
  2264  010B1C  0A08               	xorlw	8	; case 8
  2265  010B1E  B4D8               	btfsc	status,2,c
  2266  010B20  D7A3               	goto	l5505
  2267  010B22  0A05               	xorlw	5	; case 13
  2268  010B24  B4D8               	btfsc	status,2,c
  2269  010B26  D6A1               	goto	l5467
  2270  010B28  0A2D               	xorlw	45	; case 32
  2271  010B2A  B4D8               	btfsc	status,2,c
  2272  010B2C  D78C               	goto	l5503
  2273  010B2E  0A5F               	xorlw	95	; case 127
  2274  010B30  B4D8               	btfsc	status,2,c
  2275  010B32  D7AD               	goto	l5509
  2276  010B34  D7D8               	goto	l5519
  2277  010B36                     __end_of_my_terminal_loop:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           prodh	equ	0xFF4
  2284                           prodl	equ	0xFF3
  2285                           intcon	equ	0xFF2
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           postdec1	equ	0xFE5
  2289                           fsr1h	equ	0xFE2
  2290                           fsr1l	equ	0xFE1
  2291                           indf2	equ	0xFDF
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _ringbuf_put_num *****************
  2297 ;; Defined at:
  2298 ;;		line 47 in file "../My_header\My_ringbuf.h"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  rb              2   19[BANK0 ] PTR struct ringbuf
  2301 ;;		 -> tx_buf(8), 
  2302 ;;  value           2   21[BANK0 ] const unsigned int 
  2303 ;;  digits          1   23[BANK0 ] unsigned char 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  i               1   24[BANK0 ] unsigned char 
  2306 ;;  temp            2   25[BANK0 ] unsigned int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;		None               void
  2309 ;; Registers used:
  2310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2316 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;Total ram usage:        8 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    6
  2323 ;; This function calls:
  2324 ;;		___lwdiv
  2325 ;;		___lwmod
  2326 ;;		_ringbuf_put
  2327 ;; This function is called by:
  2328 ;;		_my_terminal_loop
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text2
  2333  012662                     __ptext2:
  2334                           	opt stack 0
  2335  012662                     _ringbuf_put_num:
  2336                           	opt stack 23
  2337                           
  2338                           ;My_header\My_ringbuf.h: 48: while (digits--) {
  2339                           
  2340                           ;incstack = 0
  2341  012662  D038               	goto	l5183
  2342  012664                     l184:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
  2346  012664  C075  F079         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  2347  012668  C076  F07A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
  2351  01266C  0E00               	movlw	0
  2352  01266E  0100               	movlb	0	; () banked
  2353  012670  6F78               	movwf	ringbuf_put_num@i& (0+255),b
  2354  012672  D011               	goto	l5177
  2355  012674                     l5173:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;My_header\My_ringbuf.h: 51: temp /= 10;
  2359  012674  C079  F068         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  2360  012678  C07A  F069         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  2361  01267C  0E00               	movlw	0
  2362  01267E  0100               	movlb	0	; () banked
  2363  012680  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2364  012682  0E0A               	movlw	10
  2365  012684  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  2366  012686  EC71  F093         	call	___lwdiv	;wreg free
  2367  01268A  C068  F079         	movff	?___lwdiv,ringbuf_put_num@temp
  2368  01268E  C069  F07A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  2369  012692  0100               	movlb	0	; () banked
  2370  012694  2B78               	incf	ringbuf_put_num@i& (0+255),f,b
  2371  012696                     l5177:
  2372                           
  2373                           ; BSR set to: 0
  2374  012696  0100               	movlb	0	; () banked
  2375  012698  5177               	movf	ringbuf_put_num@digits& (0+255),w,b
  2376  01269A  0100               	movlb	0	; () banked
  2377  01269C  5D78               	subwf	ringbuf_put_num@i& (0+255),w,b
  2378  01269E  A0D8               	btfss	status,0,c
  2379  0126A0  D7E9               	goto	l5173
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;My_header\My_ringbuf.h: 52: }
  2383                           ;My_header\My_ringbuf.h: 53: temp %= 10;
  2384                           
  2385                           ; BSR set to: 0
  2386  0126A2  C079  F06F         	movff	ringbuf_put_num@temp,___lwmod@dividend
  2387  0126A6  C07A  F070         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  2388  0126AA  0E00               	movlw	0
  2389  0126AC  0100               	movlb	0	; () banked
  2390  0126AE  6F72               	movwf	(___lwmod@divisor+1)& (0+255),b
  2391  0126B0  0E0A               	movlw	10
  2392  0126B2  6F71               	movwf	___lwmod@divisor& (0+255),b
  2393  0126B4  ECB8  F094         	call	___lwmod	;wreg free
  2394  0126B8  C06F  F079         	movff	?___lwmod,ringbuf_put_num@temp
  2395  0126BC  C070  F07A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  2396                           
  2397                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
  2398  0126C0  C073  F021         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  2399  0126C4  C074  F022         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  2400  0126C8  0100               	movlb	0	; () banked
  2401  0126CA  5179               	movf	ringbuf_put_num@temp& (0+255),w,b
  2402  0126CC  0F30               	addlw	48
  2403  0126CE  6E23               	movwf	ringbuf_put@asciicode,c
  2404  0126D0  ECA9  F08D         	call	_ringbuf_put	;wreg free
  2405  0126D4                     l5183:
  2406  0126D4  0100               	movlb	0	; () banked
  2407  0126D6  0777               	decf	ringbuf_put_num@digits& (0+255),f,b
  2408  0126D8  0100               	movlb	0	; () banked
  2409  0126DA  2977               	incf	ringbuf_put_num@digits& (0+255),w,b
  2410  0126DC  B4D8               	btfsc	status,2,c
  2411  0126DE  0012               	return	
  2412  0126E0  D7C1               	goto	l184
  2413  0126E2                     __end_of_ringbuf_put_num:
  2414                           	opt stack 0
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           fsr1h	equ	0xFE2
  2426                           fsr1l	equ	0xFE1
  2427                           indf2	equ	0xFDF
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8
  2431                           
  2432 ;; *************** function _ringbuf_pop *****************
  2433 ;; Defined at:
  2434 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2437 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  ret             1   34[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      unsigned char 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;Total ram usage:        7 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    5
  2456 ;; This function calls:
  2457 ;;		_ringbuf_num
  2458 ;; This function is called by:
  2459 ;;		_my_terminal_loop
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text3
  2464  011E52                     __ptext3:
  2465                           	opt stack 0
  2466  011E52                     _ringbuf_pop:
  2467                           	opt stack 24
  2468                           
  2469                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;incstack = 0
  2473  011E52  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2474  011E56  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2475  011E5A  EC6F  F08C         	call	_ringbuf_num	;wreg free
  2476  011E5E  501F               	movf	?_ringbuf_num,w,c
  2477  011E60  1020               	iorwf	?_ringbuf_num+1,w,c
  2478  011E62  B4D8               	btfsc	status,2,c
  2479  011E64  D051               	goto	l5201
  2480                           
  2481                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2482  011E66  EE20 F006          	lfsr	2,6
  2483  011E6A  5021               	movf	ringbuf_pop@rb,w,c
  2484  011E6C  26D9               	addwf	fsr2l,f,c
  2485  011E6E  5022               	movf	ringbuf_pop@rb+1,w,c
  2486  011E70  22DA               	addwfc	fsr2h,f,c
  2487  011E72  CFDE F066          	movff	postinc2,??_ringbuf_pop
  2488  011E76  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  2489  011E7A  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2490  011E7E  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2491  011E82  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  2492  011E86  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  2493  011E8A  0100               	movlb	0	; () banked
  2494  011E8C  5166               	movf	??_ringbuf_pop& (0+255),w,b
  2495  011E8E  0100               	movlb	0	; () banked
  2496  011E90  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2497  011E92  6ED9               	movwf	fsr2l,c
  2498  011E94  0100               	movlb	0	; () banked
  2499  011E96  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2500  011E98  0100               	movlb	0	; () banked
  2501  011E9A  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2502  011E9C  6EDA               	movwf	fsr2h,c
  2503  011E9E  50DF               	movf	indf2,w,c
  2504  011EA0  6E23               	movwf	ringbuf_pop@ret,c
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2508  011EA2  EE20 F002          	lfsr	2,2
  2509  011EA6  5021               	movf	ringbuf_pop@rb,w,c
  2510  011EA8  26D9               	addwf	fsr2l,f,c
  2511  011EAA  5022               	movf	ringbuf_pop@rb+1,w,c
  2512  011EAC  22DA               	addwfc	fsr2h,f,c
  2513  011EAE  EE10 F006          	lfsr	1,6
  2514  011EB2  5021               	movf	ringbuf_pop@rb,w,c
  2515  011EB4  26E1               	addwf	fsr1l,f,c
  2516  011EB6  5022               	movf	ringbuf_pop@rb+1,w,c
  2517  011EB8  22E2               	addwfc	fsr1h,f,c
  2518  011EBA  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  2519  011EBE  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  2520  011EC2  0E01               	movlw	1
  2521  011EC4  0100               	movlb	0	; () banked
  2522  011EC6  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2523  011EC8  0E00               	movlw	0
  2524  011ECA  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2525  011ECC  50DE               	movf	postinc2,w,c
  2526  011ECE  0100               	movlb	0	; () banked
  2527  011ED0  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2528  011ED2  50DE               	movf	postinc2,w,c
  2529  011ED4  0100               	movlb	0	; () banked
  2530  011ED6  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2531  011ED8  B0D8               	btfsc	status,0,c
  2532  011EDA  D00A               	goto	l5193
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2536  011EDC  EE20 F006          	lfsr	2,6
  2537  011EE0  5021               	movf	ringbuf_pop@rb,w,c
  2538  011EE2  26D9               	addwf	fsr2l,f,c
  2539  011EE4  5022               	movf	ringbuf_pop@rb+1,w,c
  2540  011EE6  22DA               	addwfc	fsr2h,f,c
  2541  011EE8  2ADE               	incf	postinc2,f,c
  2542  011EEA  0E00               	movlw	0
  2543  011EEC  22DD               	addwfc	postdec2,f,c
  2544                           
  2545                           ;My_header\My_ringbuf.h: 69: } else {
  2546  011EEE  D00A               	goto	l5195
  2547  011EF0                     l5193:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2551  011EF0  EE20 F006          	lfsr	2,6
  2552  011EF4  5021               	movf	ringbuf_pop@rb,w,c
  2553  011EF6  26D9               	addwf	fsr2l,f,c
  2554  011EF8  5022               	movf	ringbuf_pop@rb+1,w,c
  2555  011EFA  22DA               	addwfc	fsr2h,f,c
  2556  011EFC  0E00               	movlw	0
  2557  011EFE  6EDE               	movwf	postinc2,c
  2558  011F00  0E00               	movlw	0
  2559  011F02  6EDD               	movwf	postdec2,c
  2560  011F04                     l5195:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;My_header\My_ringbuf.h: 71: }
  2564                           ;My_header\My_ringbuf.h: 72: return ret;
  2565  011F04  5023               	movf	ringbuf_pop@ret,w,c
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;My_header\My_ringbuf.h: 73: } else {
  2569                           
  2570                           ; BSR set to: 0
  2571  011F06  0012               	return	
  2572  011F08                     l5201:
  2573                           
  2574                           ;My_header\My_ringbuf.h: 74: return 0;
  2575  011F08  0E00               	movlw	0
  2576  011F0A  0012               	return	
  2577  011F0C                     __end_of_ringbuf_pop:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           intcon	equ	0xFF2
  2586                           postinc0	equ	0xFEE
  2587                           wreg	equ	0xFE8
  2588                           postinc1	equ	0xFE6
  2589                           postdec1	equ	0xFE5
  2590                           fsr1h	equ	0xFE2
  2591                           fsr1l	equ	0xFE1
  2592                           indf2	equ	0xFDF
  2593                           postinc2	equ	0xFDE
  2594                           postdec2	equ	0xFDD
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _ringbuf_delete *****************
  2600 ;; Defined at:
  2601 ;;		line 85 in file "../My_header\My_ringbuf.h"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  2604 ;;		 -> my_terminal_loop@command(8), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;		None               void
  2609 ;; Registers used:
  2610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;Total ram usage:        2 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    4
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_my_terminal_loop
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text4
  2631  012C0E                     __ptext4:
  2632                           	opt stack 0
  2633  012C0E                     _ringbuf_delete:
  2634                           	opt stack 25
  2635                           
  2636                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  2637                           
  2638                           ;incstack = 0
  2639  012C0E  EE20 F006          	lfsr	2,6
  2640  012C12  501F               	movf	ringbuf_delete@rb,w,c
  2641  012C14  26D9               	addwf	fsr2l,f,c
  2642  012C16  5020               	movf	ringbuf_delete@rb+1,w,c
  2643  012C18  22DA               	addwfc	fsr2h,f,c
  2644  012C1A  EE10 F004          	lfsr	1,4
  2645  012C1E  501F               	movf	ringbuf_delete@rb,w,c
  2646  012C20  26E1               	addwf	fsr1l,f,c
  2647  012C22  5020               	movf	ringbuf_delete@rb+1,w,c
  2648  012C24  22E2               	addwfc	fsr1h,f,c
  2649  012C26  CFDE FFE6          	movff	postinc2,postinc1
  2650  012C2A  CFDD FFE5          	movff	postdec2,postdec1
  2651  012C2E  0012               	return		;funcret
  2652  012C30                     __end_of_ringbuf_delete:
  2653                           	opt stack 0
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           intcon	equ	0xFF2
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           postinc1	equ	0xFE6
  2664                           postdec1	equ	0xFE5
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           indf2	equ	0xFDF
  2668                           postinc2	equ	0xFDE
  2669                           postdec2	equ	0xFDD
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _ringbuf_backspace *****************
  2675 ;; Defined at:
  2676 ;;		line 78 in file "../My_header\My_ringbuf.h"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2679 ;;		 -> my_terminal_loop@command(8), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;Total ram usage:        6 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    5
  2698 ;; This function calls:
  2699 ;;		_ringbuf_num
  2700 ;; This function is called by:
  2701 ;;		_my_terminal_loop
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text5
  2706  01255E                     __ptext5:
  2707                           	opt stack 0
  2708  01255E                     _ringbuf_backspace:
  2709                           	opt stack 24
  2710                           
  2711                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  2712                           
  2713                           ;incstack = 0
  2714  01255E  C021  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  2715  012562  C022  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  2716  012566  EC6F  F08C         	call	_ringbuf_num	;wreg free
  2717  01256A  501F               	movf	?_ringbuf_num,w,c
  2718  01256C  1020               	iorwf	?_ringbuf_num+1,w,c
  2719  01256E  B4D8               	btfsc	status,2,c
  2720  012570  0012               	return	
  2721                           
  2722                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  2723  012572  EE20 F004          	lfsr	2,4
  2724  012576  5021               	movf	ringbuf_backspace@rb,w,c
  2725  012578  26D9               	addwf	fsr2l,f,c
  2726  01257A  5022               	movf	ringbuf_backspace@rb+1,w,c
  2727  01257C  22DA               	addwfc	fsr2h,f,c
  2728  01257E  50DE               	movf	postinc2,w,c
  2729  012580  10DE               	iorwf	postinc2,w,c
  2730  012582  B4D8               	btfsc	status,2,c
  2731  012584  D00A               	goto	l5211
  2732  012586  EE20 F004          	lfsr	2,4
  2733  01258A  5021               	movf	ringbuf_backspace@rb,w,c
  2734  01258C  26D9               	addwf	fsr2l,f,c
  2735  01258E  5022               	movf	ringbuf_backspace@rb+1,w,c
  2736  012590  22DA               	addwfc	fsr2h,f,c
  2737  012592  06DE               	decf	postinc2,f,c
  2738  012594  0E00               	movlw	0
  2739  012596  5ADD               	subwfb	postdec2,f,c
  2740  012598  0012               	return	
  2741  01259A                     l5211:
  2742                           
  2743                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  2744  01259A  0EFF               	movlw	255
  2745  01259C  0100               	movlb	0	; () banked
  2746  01259E  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  2747  0125A0  0EFF               	movlw	255
  2748  0125A2  0100               	movlb	0	; () banked
  2749  0125A4  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  2750  0125A6  EE20 F002          	lfsr	2,2
  2751  0125AA  5021               	movf	ringbuf_backspace@rb,w,c
  2752  0125AC  26D9               	addwf	fsr2l,f,c
  2753  0125AE  5022               	movf	ringbuf_backspace@rb+1,w,c
  2754  0125B0  22DA               	addwfc	fsr2h,f,c
  2755  0125B2  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  2756  0125B6  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  2757  0125BA  0100               	movlb	0	; () banked
  2758  0125BC  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  2759  0125BE  0100               	movlb	0	; () banked
  2760  0125C0  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  2761  0125C2  0100               	movlb	0	; () banked
  2762  0125C4  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  2763  0125C6  0100               	movlb	0	; () banked
  2764  0125C8  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  2765  0125CA  EE20 F004          	lfsr	2,4
  2766  0125CE  5021               	movf	ringbuf_backspace@rb,w,c
  2767  0125D0  26D9               	addwf	fsr2l,f,c
  2768  0125D2  5022               	movf	ringbuf_backspace@rb+1,w,c
  2769  0125D4  22DA               	addwfc	fsr2h,f,c
  2770  0125D6  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  2771  0125DA  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  2772                           
  2773                           ; BSR set to: 0
  2774  0125DE  0012               	return	
  2775  0125E0                     __end_of_ringbuf_backspace:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           prodh	equ	0xFF4
  2782                           prodl	equ	0xFF3
  2783                           intcon	equ	0xFF2
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           postinc1	equ	0xFE6
  2787                           postdec1	equ	0xFE5
  2788                           fsr1h	equ	0xFE2
  2789                           fsr1l	equ	0xFE1
  2790                           indf2	equ	0xFDF
  2791                           postinc2	equ	0xFDE
  2792                           postdec2	equ	0xFDD
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _command_operation *****************
  2798 ;; Defined at:
  2799 ;;		line 163 in file "PIC18F27J53-killifish_light04.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  tx              2    8[BANK1 ] PTR struct ringbuf
  2802 ;;		 -> tx_buf(8), 
  2803 ;;  op0             2   10[BANK1 ] PTR unsigned char 
  2804 ;;		 -> my_terminal_loop@op0(20), 
  2805 ;;  op1             2   12[BANK1 ] PTR unsigned char 
  2806 ;;		 -> my_terminal_loop@op1(20), 
  2807 ;;  op2             2   14[BANK1 ] PTR unsigned char 
  2808 ;;		 -> my_terminal_loop@op2(20), 
  2809 ;;  op3             2   16[BANK1 ] PTR unsigned char 
  2810 ;;		 -> my_terminal_loop@op3(20), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;		None               void
  2815 ;; Registers used:
  2816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2822 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;Total ram usage:       14 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:   11
  2829 ;; This function calls:
  2830 ;;		_PWM_set
  2831 ;;		___lwdiv
  2832 ;;		___wmul
  2833 ;;		_command_time
  2834 ;;		_my_atoi
  2835 ;;		_my_strcmp
  2836 ;;		_tx_sends
  2837 ;; This function is called by:
  2838 ;;		_my_terminal_loop
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text6
  2843  010458                     __ptext6:
  2844                           	opt stack 0
  2845  010458                     _command_operation:
  2846                           	opt stack 18
  2847                           
  2848                           ;PIC18F27J53-killifish_light04.c: 164: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?
      +                          ")) {
  2849                           
  2850                           ;incstack = 0
  2851  010458  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2852  01045C  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2853  010460  0EBB               	movlw	low STR_22
  2854  010462  6E21               	movwf	my_strcmp@str2,c
  2855  010464  0EFF               	movlw	high STR_22
  2856  010466  6E22               	movwf	my_strcmp@str2+1,c
  2857  010468  EC1B  F092         	call	_my_strcmp	;wreg free
  2858  01046C  0900               	iorlw	0
  2859  01046E  B4D8               	btfsc	status,2,c
  2860  010470  D00D               	goto	l5217
  2861  010472  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2862  010476  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2863  01047A  0EEC               	movlw	low STR_23
  2864  01047C  6E21               	movwf	my_strcmp@str2,c
  2865  01047E  0EFF               	movlw	high STR_23
  2866  010480  6E22               	movwf	my_strcmp@str2+1,c
  2867  010482  EC1B  F092         	call	_my_strcmp	;wreg free
  2868  010486  0900               	iorlw	0
  2869  010488  A4D8               	btfss	status,2,c
  2870  01048A  D006               	goto	l5219
  2871  01048C                     l5217:
  2872                           
  2873                           ;PIC18F27J53-killifish_light04.c: 165: tx_sends(
  2874                           ;PIC18F27J53-killifish_light04.c: 166: "\t**************************\n"
  2875                           ;PIC18F27J53-killifish_light04.c: 167: "\t**** Killifish Light  ****\n"
  2876                           ;PIC18F27J53-killifish_light04.c: 168: "\t**** Made by @Ryokeri ****\n"
  2877                           ;PIC18F27J53-killifish_light04.c: 169: "\t**************************\n\n"
  2878                           ;PIC18F27J53-killifish_light04.c: 170: "\tcommand \topeland1\topeland2\n\n"
  2879                           ;PIC18F27J53-killifish_light04.c: 171: "\tprint_time(t)\n"
  2880                           ;PIC18F27J53-killifish_light04.c: 172: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2881  01048C  0E0D               	movlw	low STR_24
  2882  01048E  6E24               	movwf	tx_sends@asciicode,c
  2883  010490  0EFE               	movlw	high STR_24
  2884  010492  6E25               	movwf	tx_sends@asciicode+1,c
  2885  010494  EC78  F095         	call	_tx_sends	;wreg free
  2886  010498                     l5219:
  2887                           
  2888                           ;PIC18F27J53-killifish_light04.c: 179: }
  2889                           ;PIC18F27J53-killifish_light04.c: 180: command_time(tx, op0, op1, op2);
  2890  010498  C108  F100         	movff	command_operation@tx,command_time@tx
  2891  01049C  C109  F101         	movff	command_operation@tx+1,command_time@tx+1
  2892  0104A0  C10A  F102         	movff	command_operation@op0,command_time@op0
  2893  0104A4  C10B  F103         	movff	command_operation@op0+1,command_time@op0+1
  2894  0104A8  C10C  F104         	movff	command_operation@op1,command_time@op1
  2895  0104AC  C10D  F105         	movff	command_operation@op1+1,command_time@op1+1
  2896  0104B0  C10E  F106         	movff	command_operation@op2,command_time@op2
  2897  0104B4  C10F  F107         	movff	command_operation@op2+1,command_time@op2+1
  2898  0104B8  EC9B  F085         	call	_command_time	;wreg free
  2899                           
  2900                           ;PIC18F27J53-killifish_light04.c: 181: if (!my_strcmp(op0, "RESET();")) {
  2901  0104BC  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2902  0104C0  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2903  0104C4  0E84               	movlw	low STR_25
  2904  0104C6  6E21               	movwf	my_strcmp@str2,c
  2905  0104C8  0EFF               	movlw	high STR_25
  2906  0104CA  6E22               	movwf	my_strcmp@str2+1,c
  2907  0104CC  EC1B  F092         	call	_my_strcmp	;wreg free
  2908  0104D0  0900               	iorlw	0
  2909  0104D2  B4D8               	btfsc	status,2,c
  2910  0104D4  00FF               	reset		;# 
  2911                           
  2912                           ;PIC18F27J53-killifish_light04.c: 183: }
  2913                           ;PIC18F27J53-killifish_light04.c: 184: if (!my_strcmp(op0, "set")) {
  2914  0104D6  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2915  0104DA  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2916  0104DE  0EDE               	movlw	low STR_26
  2917  0104E0  6E21               	movwf	my_strcmp@str2,c
  2918  0104E2  0EFF               	movlw	high STR_26
  2919  0104E4  6E22               	movwf	my_strcmp@str2+1,c
  2920  0104E6  EC1B  F092         	call	_my_strcmp	;wreg free
  2921  0104EA  0900               	iorlw	0
  2922  0104EC  A4D8               	btfss	status,2,c
  2923  0104EE  D02D               	goto	l5237
  2924                           
  2925                           ;PIC18F27J53-killifish_light04.c: 185: if (!my_strcmp(op1, "sync")) {
  2926  0104F0  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  2927  0104F4  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  2928  0104F8  0EB6               	movlw	low STR_27
  2929  0104FA  6E21               	movwf	my_strcmp@str2,c
  2930  0104FC  0EFF               	movlw	high STR_27
  2931  0104FE  6E22               	movwf	my_strcmp@str2+1,c
  2932  010500  EC1B  F092         	call	_my_strcmp	;wreg free
  2933  010504  0900               	iorlw	0
  2934  010506  A4D8               	btfss	status,2,c
  2935  010508  D003               	goto	l5231
  2936                           
  2937                           ;PIC18F27J53-killifish_light04.c: 186: light_mode = TIME_SYNC_mode;
  2938  01050A  0E00               	movlw	0
  2939  01050C  0100               	movlb	0	; () banked
  2940  01050E  6FC9               	movwf	_light_mode& (0+255),b
  2941  010510                     l5231:
  2942                           
  2943                           ;PIC18F27J53-killifish_light04.c: 187: }
  2944                           ;PIC18F27J53-killifish_light04.c: 188: if (!my_strcmp(op1, "adc") || !my_strcmp(op1, "AD
      +                          C")) {
  2945  010510  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  2946  010514  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  2947  010518  0ED6               	movlw	low STR_28
  2948  01051A  6E21               	movwf	my_strcmp@str2,c
  2949  01051C  0EFF               	movlw	high STR_28
  2950  01051E  6E22               	movwf	my_strcmp@str2+1,c
  2951  010520  EC1B  F092         	call	_my_strcmp	;wreg free
  2952  010524  0900               	iorlw	0
  2953  010526  B4D8               	btfsc	status,2,c
  2954  010528  D00D               	goto	l5235
  2955  01052A  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  2956  01052E  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  2957  010532  0ECE               	movlw	low STR_29
  2958  010534  6E21               	movwf	my_strcmp@str2,c
  2959  010536  0EFF               	movlw	high STR_29
  2960  010538  6E22               	movwf	my_strcmp@str2+1,c
  2961  01053A  EC1B  F092         	call	_my_strcmp	;wreg free
  2962  01053E  0900               	iorlw	0
  2963  010540  A4D8               	btfss	status,2,c
  2964  010542  D003               	goto	l5237
  2965  010544                     l5235:
  2966                           
  2967                           ;PIC18F27J53-killifish_light04.c: 189: light_mode = ADC_mode;
  2968  010544  0E01               	movlw	1
  2969  010546  0100               	movlb	0	; () banked
  2970  010548  6FC9               	movwf	_light_mode& (0+255),b
  2971  01054A                     l5237:
  2972                           
  2973                           ;PIC18F27J53-killifish_light04.c: 190: }
  2974                           ;PIC18F27J53-killifish_light04.c: 191: }
  2975                           ;PIC18F27J53-killifish_light04.c: 192: if (!my_strcmp(op0, "pwm") || !my_strcmp(op0, "PW
      +                          M")) {
  2976  01054A  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2977  01054E  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2978  010552  0EDA               	movlw	low STR_30
  2979  010554  6E21               	movwf	my_strcmp@str2,c
  2980  010556  0EFF               	movlw	high STR_30
  2981  010558  6E22               	movwf	my_strcmp@str2+1,c
  2982  01055A  EC1B  F092         	call	_my_strcmp	;wreg free
  2983  01055E  0900               	iorlw	0
  2984  010560  B4D8               	btfsc	status,2,c
  2985  010562  D00D               	goto	l5241
  2986  010564  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2987  010568  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2988  01056C  0ED2               	movlw	low STR_31
  2989  01056E  6E21               	movwf	my_strcmp@str2,c
  2990  010570  0EFF               	movlw	high STR_31
  2991  010572  6E22               	movwf	my_strcmp@str2+1,c
  2992  010574  EC1B  F092         	call	_my_strcmp	;wreg free
  2993  010578  0900               	iorlw	0
  2994  01057A  A4D8               	btfss	status,2,c
  2995  01057C  0012               	return	
  2996  01057E                     l5241:
  2997                           
  2998                           ;PIC18F27J53-killifish_light04.c: 193: if (!my_strcmp(op1, "r") || !my_strcmp(op1, "R"))
      +                           {
  2999  01057E  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3000  010582  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3001  010586  0EB4               	movlw	low (STR_40+4)
  3002  010588  6E21               	movwf	my_strcmp@str2,c
  3003  01058A  0EFF               	movlw	high (STR_40+4)
  3004  01058C  6E22               	movwf	my_strcmp@str2+1,c
  3005  01058E  EC1B  F092         	call	_my_strcmp	;wreg free
  3006  010592  0900               	iorlw	0
  3007  010594  B4D8               	btfsc	status,2,c
  3008  010596  D00D               	goto	l5245
  3009  010598  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3010  01059C  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3011  0105A0  0EF2               	movlw	low STR_33
  3012  0105A2  6E21               	movwf	my_strcmp@str2,c
  3013  0105A4  0EFF               	movlw	high STR_33
  3014  0105A6  6E22               	movwf	my_strcmp@str2+1,c
  3015  0105A8  EC1B  F092         	call	_my_strcmp	;wreg free
  3016  0105AC  0900               	iorlw	0
  3017  0105AE  A4D8               	btfss	status,2,c
  3018  0105B0  D02D               	goto	l5253
  3019  0105B2                     l5245:
  3020                           
  3021                           ;PIC18F27J53-killifish_light04.c: 194: light_mode = COMMAND_mode;
  3022  0105B2  0E02               	movlw	2
  3023  0105B4  0100               	movlb	0	; () banked
  3024  0105B6  6FC9               	movwf	_light_mode& (0+255),b
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;PIC18F27J53-killifish_light04.c: 195: PWM_set(0, my_atoi(op2) * 250 / 100);
  3028  0105B8  C10E  F060         	movff	command_operation@op2,my_atoi@str
  3029  0105BC  C10F  F061         	movff	command_operation@op2+1,my_atoi@str+1
  3030  0105C0  ECE8  F090         	call	_my_atoi	;wreg free
  3031  0105C4  C060  F112         	movff	?_my_atoi,_command_operation$3239
  3032  0105C8  C061  F113         	movff	?_my_atoi+1,_command_operation$3239+1
  3033                           
  3034                           ;PIC18F27J53-killifish_light04.c: 195: PWM_set(0, my_atoi(op2) * 250 / 100);
  3035  0105CC  C112  F01F         	movff	_command_operation$3239,___wmul@multiplier
  3036  0105D0  C113  F020         	movff	_command_operation$3239+1,___wmul@multiplier+1
  3037  0105D4  0E00               	movlw	0
  3038  0105D6  6E22               	movwf	___wmul@multiplicand+1,c
  3039  0105D8  0EFA               	movlw	250
  3040  0105DA  6E21               	movwf	___wmul@multiplicand,c
  3041  0105DC  ECF4  F095         	call	___wmul	;wreg free
  3042  0105E0  C01F  F068         	movff	?___wmul,___lwdiv@dividend
  3043  0105E4  C020  F069         	movff	?___wmul+1,___lwdiv@dividend+1
  3044  0105E8  0E00               	movlw	0
  3045  0105EA  0100               	movlb	0	; () banked
  3046  0105EC  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3047  0105EE  0E64               	movlw	100
  3048  0105F0  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  3049  0105F2  EC71  F093         	call	___lwdiv	;wreg free
  3050  0105F6  C068  F114         	movff	?___lwdiv,_command_operation$3240
  3051  0105FA  C069  F115         	movff	?___lwdiv+1,_command_operation$3240+1
  3052                           
  3053                           ;PIC18F27J53-killifish_light04.c: 195: PWM_set(0, my_atoi(op2) * 250 / 100);
  3054  0105FE  C114  F06F         	movff	_command_operation$3240,PWM_set@value
  3055  010602  C115  F070         	movff	_command_operation$3240+1,PWM_set@value+1
  3056  010606  0E00               	movlw	0
  3057  010608  ECA8  F08B         	call	_PWM_set
  3058  01060C                     l5253:
  3059                           
  3060                           ;PIC18F27J53-killifish_light04.c: 196: }
  3061                           ;PIC18F27J53-killifish_light04.c: 197: if (!my_strcmp(op1, "g") || !my_strcmp(op1, "G"))
      +                           {
  3062  01060C  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3063  010610  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3064  010614  0EF8               	movlw	low STR_34
  3065  010616  6E21               	movwf	my_strcmp@str2,c
  3066  010618  0EFF               	movlw	high STR_34
  3067  01061A  6E22               	movwf	my_strcmp@str2+1,c
  3068  01061C  EC1B  F092         	call	_my_strcmp	;wreg free
  3069  010620  0900               	iorlw	0
  3070  010622  B4D8               	btfsc	status,2,c
  3071  010624  D00D               	goto	l5257
  3072  010626  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3073  01062A  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3074  01062E  0EF0               	movlw	low STR_35
  3075  010630  6E21               	movwf	my_strcmp@str2,c
  3076  010632  0EFF               	movlw	high STR_35
  3077  010634  6E22               	movwf	my_strcmp@str2+1,c
  3078  010636  EC1B  F092         	call	_my_strcmp	;wreg free
  3079  01063A  0900               	iorlw	0
  3080  01063C  A4D8               	btfss	status,2,c
  3081  01063E  D02D               	goto	l5265
  3082  010640                     l5257:
  3083                           
  3084                           ;PIC18F27J53-killifish_light04.c: 198: light_mode = COMMAND_mode;
  3085  010640  0E02               	movlw	2
  3086  010642  0100               	movlb	0	; () banked
  3087  010644  6FC9               	movwf	_light_mode& (0+255),b
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;PIC18F27J53-killifish_light04.c: 199: PWM_set(1, my_atoi(op2) * 250 / 100);
  3091  010646  C10E  F060         	movff	command_operation@op2,my_atoi@str
  3092  01064A  C10F  F061         	movff	command_operation@op2+1,my_atoi@str+1
  3093  01064E  ECE8  F090         	call	_my_atoi	;wreg free
  3094  010652  C060  F112         	movff	?_my_atoi,_command_operation$3239
  3095  010656  C061  F113         	movff	?_my_atoi+1,_command_operation$3239+1
  3096                           
  3097                           ;PIC18F27J53-killifish_light04.c: 199: PWM_set(1, my_atoi(op2) * 250 / 100);
  3098  01065A  C112  F01F         	movff	_command_operation$3239,___wmul@multiplier
  3099  01065E  C113  F020         	movff	_command_operation$3239+1,___wmul@multiplier+1
  3100  010662  0E00               	movlw	0
  3101  010664  6E22               	movwf	___wmul@multiplicand+1,c
  3102  010666  0EFA               	movlw	250
  3103  010668  6E21               	movwf	___wmul@multiplicand,c
  3104  01066A  ECF4  F095         	call	___wmul	;wreg free
  3105  01066E  C01F  F068         	movff	?___wmul,___lwdiv@dividend
  3106  010672  C020  F069         	movff	?___wmul+1,___lwdiv@dividend+1
  3107  010676  0E00               	movlw	0
  3108  010678  0100               	movlb	0	; () banked
  3109  01067A  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3110  01067C  0E64               	movlw	100
  3111  01067E  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  3112  010680  EC71  F093         	call	___lwdiv	;wreg free
  3113  010684  C068  F114         	movff	?___lwdiv,_command_operation$3240
  3114  010688  C069  F115         	movff	?___lwdiv+1,_command_operation$3240+1
  3115                           
  3116                           ;PIC18F27J53-killifish_light04.c: 199: PWM_set(1, my_atoi(op2) * 250 / 100);
  3117  01068C  C114  F06F         	movff	_command_operation$3240,PWM_set@value
  3118  010690  C115  F070         	movff	_command_operation$3240+1,PWM_set@value+1
  3119  010694  0E01               	movlw	1
  3120  010696  ECA8  F08B         	call	_PWM_set
  3121  01069A                     l5265:
  3122                           
  3123                           ;PIC18F27J53-killifish_light04.c: 200: }
  3124                           ;PIC18F27J53-killifish_light04.c: 201: if (!my_strcmp(op1, "b") || !my_strcmp(op1, "B"))
      +                           {
  3125  01069A  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3126  01069E  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3127  0106A2  0EF6               	movlw	low STR_36
  3128  0106A4  6E21               	movwf	my_strcmp@str2,c
  3129  0106A6  0EFF               	movlw	high STR_36
  3130  0106A8  6E22               	movwf	my_strcmp@str2+1,c
  3131  0106AA  EC1B  F092         	call	_my_strcmp	;wreg free
  3132  0106AE  0900               	iorlw	0
  3133  0106B0  B4D8               	btfsc	status,2,c
  3134  0106B2  D00D               	goto	l5269
  3135  0106B4  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3136  0106B8  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3137  0106BC  0EEE               	movlw	low STR_37
  3138  0106BE  6E21               	movwf	my_strcmp@str2,c
  3139  0106C0  0EFF               	movlw	high STR_37
  3140  0106C2  6E22               	movwf	my_strcmp@str2+1,c
  3141  0106C4  EC1B  F092         	call	_my_strcmp	;wreg free
  3142  0106C8  0900               	iorlw	0
  3143  0106CA  A4D8               	btfss	status,2,c
  3144  0106CC  D02D               	goto	l5277
  3145  0106CE                     l5269:
  3146                           
  3147                           ;PIC18F27J53-killifish_light04.c: 202: light_mode = COMMAND_mode;
  3148  0106CE  0E02               	movlw	2
  3149  0106D0  0100               	movlb	0	; () banked
  3150  0106D2  6FC9               	movwf	_light_mode& (0+255),b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;PIC18F27J53-killifish_light04.c: 203: PWM_set(2, my_atoi(op2) * 250 / 100);
  3154  0106D4  C10E  F060         	movff	command_operation@op2,my_atoi@str
  3155  0106D8  C10F  F061         	movff	command_operation@op2+1,my_atoi@str+1
  3156  0106DC  ECE8  F090         	call	_my_atoi	;wreg free
  3157  0106E0  C060  F112         	movff	?_my_atoi,_command_operation$3239
  3158  0106E4  C061  F113         	movff	?_my_atoi+1,_command_operation$3239+1
  3159                           
  3160                           ;PIC18F27J53-killifish_light04.c: 203: PWM_set(2, my_atoi(op2) * 250 / 100);
  3161  0106E8  C112  F01F         	movff	_command_operation$3239,___wmul@multiplier
  3162  0106EC  C113  F020         	movff	_command_operation$3239+1,___wmul@multiplier+1
  3163  0106F0  0E00               	movlw	0
  3164  0106F2  6E22               	movwf	___wmul@multiplicand+1,c
  3165  0106F4  0EFA               	movlw	250
  3166  0106F6  6E21               	movwf	___wmul@multiplicand,c
  3167  0106F8  ECF4  F095         	call	___wmul	;wreg free
  3168  0106FC  C01F  F068         	movff	?___wmul,___lwdiv@dividend
  3169  010700  C020  F069         	movff	?___wmul+1,___lwdiv@dividend+1
  3170  010704  0E00               	movlw	0
  3171  010706  0100               	movlb	0	; () banked
  3172  010708  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3173  01070A  0E64               	movlw	100
  3174  01070C  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  3175  01070E  EC71  F093         	call	___lwdiv	;wreg free
  3176  010712  C068  F114         	movff	?___lwdiv,_command_operation$3240
  3177  010716  C069  F115         	movff	?___lwdiv+1,_command_operation$3240+1
  3178                           
  3179                           ;PIC18F27J53-killifish_light04.c: 203: PWM_set(2, my_atoi(op2) * 250 / 100);
  3180  01071A  C114  F06F         	movff	_command_operation$3240,PWM_set@value
  3181  01071E  C115  F070         	movff	_command_operation$3240+1,PWM_set@value+1
  3182  010722  0E02               	movlw	2
  3183  010724  ECA8  F08B         	call	_PWM_set
  3184  010728                     l5277:
  3185                           
  3186                           ;PIC18F27J53-killifish_light04.c: 204: }
  3187                           ;PIC18F27J53-killifish_light04.c: 205: if (!my_strcmp(op1, "w") || !my_strcmp(op1, "W"))
      +                           {
  3188  010728  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3189  01072C  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3190  010730  0EFC               	movlw	low STR_38
  3191  010732  6E21               	movwf	my_strcmp@str2,c
  3192  010734  0EFF               	movlw	high STR_38
  3193  010736  6E22               	movwf	my_strcmp@str2+1,c
  3194  010738  EC1B  F092         	call	_my_strcmp	;wreg free
  3195  01073C  0900               	iorlw	0
  3196  01073E  B4D8               	btfsc	status,2,c
  3197  010740  D00D               	goto	l5281
  3198  010742  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3199  010746  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3200  01074A  0EF4               	movlw	low STR_39
  3201  01074C  6E21               	movwf	my_strcmp@str2,c
  3202  01074E  0EFF               	movlw	high STR_39
  3203  010750  6E22               	movwf	my_strcmp@str2+1,c
  3204  010752  EC1B  F092         	call	_my_strcmp	;wreg free
  3205  010756  0900               	iorlw	0
  3206  010758  A4D8               	btfss	status,2,c
  3207  01075A  D02D               	goto	l5289
  3208  01075C                     l5281:
  3209                           
  3210                           ;PIC18F27J53-killifish_light04.c: 206: light_mode = COMMAND_mode;
  3211  01075C  0E02               	movlw	2
  3212  01075E  0100               	movlb	0	; () banked
  3213  010760  6FC9               	movwf	_light_mode& (0+255),b
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;PIC18F27J53-killifish_light04.c: 207: PWM_set(3, my_atoi(op2) * 250 / 100);
  3217  010762  C10E  F060         	movff	command_operation@op2,my_atoi@str
  3218  010766  C10F  F061         	movff	command_operation@op2+1,my_atoi@str+1
  3219  01076A  ECE8  F090         	call	_my_atoi	;wreg free
  3220  01076E  C060  F112         	movff	?_my_atoi,_command_operation$3239
  3221  010772  C061  F113         	movff	?_my_atoi+1,_command_operation$3239+1
  3222                           
  3223                           ;PIC18F27J53-killifish_light04.c: 207: PWM_set(3, my_atoi(op2) * 250 / 100);
  3224  010776  C112  F01F         	movff	_command_operation$3239,___wmul@multiplier
  3225  01077A  C113  F020         	movff	_command_operation$3239+1,___wmul@multiplier+1
  3226  01077E  0E00               	movlw	0
  3227  010780  6E22               	movwf	___wmul@multiplicand+1,c
  3228  010782  0EFA               	movlw	250
  3229  010784  6E21               	movwf	___wmul@multiplicand,c
  3230  010786  ECF4  F095         	call	___wmul	;wreg free
  3231  01078A  C01F  F068         	movff	?___wmul,___lwdiv@dividend
  3232  01078E  C020  F069         	movff	?___wmul+1,___lwdiv@dividend+1
  3233  010792  0E00               	movlw	0
  3234  010794  0100               	movlb	0	; () banked
  3235  010796  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3236  010798  0E64               	movlw	100
  3237  01079A  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  3238  01079C  EC71  F093         	call	___lwdiv	;wreg free
  3239  0107A0  C068  F114         	movff	?___lwdiv,_command_operation$3240
  3240  0107A4  C069  F115         	movff	?___lwdiv+1,_command_operation$3240+1
  3241                           
  3242                           ;PIC18F27J53-killifish_light04.c: 207: PWM_set(3, my_atoi(op2) * 250 / 100);
  3243  0107A8  C114  F06F         	movff	_command_operation$3240,PWM_set@value
  3244  0107AC  C115  F070         	movff	_command_operation$3240+1,PWM_set@value+1
  3245  0107B0  0E03               	movlw	3
  3246  0107B2  ECA8  F08B         	call	_PWM_set
  3247  0107B6                     l5289:
  3248                           
  3249                           ;PIC18F27J53-killifish_light04.c: 208: }
  3250                           ;PIC18F27J53-killifish_light04.c: 209: if (!my_strcmp(op1, "clear")) {
  3251  0107B6  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3252  0107BA  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3253  0107BE  0EB0               	movlw	low STR_40
  3254  0107C0  6E21               	movwf	my_strcmp@str2,c
  3255  0107C2  0EFF               	movlw	high STR_40
  3256  0107C4  6E22               	movwf	my_strcmp@str2+1,c
  3257  0107C6  EC1B  F092         	call	_my_strcmp	;wreg free
  3258  0107CA  0900               	iorlw	0
  3259  0107CC  A4D8               	btfss	status,2,c
  3260  0107CE  0012               	return	
  3261                           
  3262                           ;PIC18F27J53-killifish_light04.c: 210: light_mode = COMMAND_mode;
  3263  0107D0  0E02               	movlw	2
  3264  0107D2  0100               	movlb	0	; () banked
  3265  0107D4  6FC9               	movwf	_light_mode& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;PIC18F27J53-killifish_light04.c: 211: PWM_set(0, 0);
  3269  0107D6  0E00               	movlw	0
  3270  0107D8  0100               	movlb	0	; () banked
  3271  0107DA  6F70               	movwf	(PWM_set@value+1)& (0+255),b
  3272  0107DC  0E00               	movlw	0
  3273  0107DE  6F6F               	movwf	PWM_set@value& (0+255),b
  3274  0107E0  0E00               	movlw	0
  3275  0107E2  ECA8  F08B         	call	_PWM_set
  3276                           
  3277                           ;PIC18F27J53-killifish_light04.c: 212: PWM_set(1, 0);
  3278  0107E6  0E00               	movlw	0
  3279  0107E8  0100               	movlb	0	; () banked
  3280  0107EA  6F70               	movwf	(PWM_set@value+1)& (0+255),b
  3281  0107EC  0E00               	movlw	0
  3282  0107EE  6F6F               	movwf	PWM_set@value& (0+255),b
  3283  0107F0  0E01               	movlw	1
  3284  0107F2  ECA8  F08B         	call	_PWM_set
  3285                           
  3286                           ;PIC18F27J53-killifish_light04.c: 213: PWM_set(2, 0);
  3287  0107F6  0E00               	movlw	0
  3288  0107F8  0100               	movlb	0	; () banked
  3289  0107FA  6F70               	movwf	(PWM_set@value+1)& (0+255),b
  3290  0107FC  0E00               	movlw	0
  3291  0107FE  6F6F               	movwf	PWM_set@value& (0+255),b
  3292  010800  0E02               	movlw	2
  3293  010802  ECA8  F08B         	call	_PWM_set
  3294                           
  3295                           ;PIC18F27J53-killifish_light04.c: 214: PWM_set(3, 0);
  3296  010806  0E00               	movlw	0
  3297  010808  0100               	movlb	0	; () banked
  3298  01080A  6F70               	movwf	(PWM_set@value+1)& (0+255),b
  3299  01080C  0E00               	movlw	0
  3300  01080E  6F6F               	movwf	PWM_set@value& (0+255),b
  3301  010810  0E03               	movlw	3
  3302  010812  ECA8  F08B         	call	_PWM_set
  3303  010816  0012               	return	
  3304  010818                     __end_of_command_operation:
  3305                           	opt stack 0
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           intcon	equ	0xFF2
  3313                           postinc0	equ	0xFEE
  3314                           wreg	equ	0xFE8
  3315                           postinc1	equ	0xFE6
  3316                           postdec1	equ	0xFE5
  3317                           fsr1h	equ	0xFE2
  3318                           fsr1l	equ	0xFE1
  3319                           indf2	equ	0xFDF
  3320                           postinc2	equ	0xFDE
  3321                           postdec2	equ	0xFDD
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _tx_sends *****************
  3327 ;; Defined at:
  3328 ;;		line 227 in file "../My_header\My_header.h"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  asciicode       2   35[COMRAM] PTR const unsigned char 
  3331 ;;		 -> STR_24(315), 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;		None               void
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;Total ram usage:        2 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    6
  3350 ;; This function calls:
  3351 ;;		_ringbuf_put
  3352 ;; This function is called by:
  3353 ;;		_command_operation
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text7
  3358  012AF0                     __ptext7:
  3359                           	opt stack 0
  3360  012AF0                     _tx_sends:
  3361                           	opt stack 22
  3362                           
  3363                           ;My_header\My_header.h: 228: while (*asciicode) {
  3364                           
  3365                           ;incstack = 0
  3366  012AF0  D011               	goto	l5077
  3367  012AF2                     l5073:
  3368                           
  3369                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  3370  012AF2  0E2D               	movlw	low _tx_buf
  3371  012AF4  6E21               	movwf	ringbuf_put@rb,c
  3372  012AF6  0E00               	movlw	high _tx_buf
  3373  012AF8  6E22               	movwf	ringbuf_put@rb+1,c
  3374  012AFA  C024  FFF6         	movff	tx_sends@asciicode,tblptrl
  3375  012AFE  C025  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3376  012B02                     	if	0	;tblptru may be non-zero
  3377  012B02                     	endif
  3378  012B02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3379  012B02  0E00               	movlw	low (__mediumconst shr (0+16))
  3380  012B04  6EF8               	movwf	tblptru,c
  3381  012B06                     	endif
  3382  012B06  0008               	tblrd		*
  3383  012B08  CFF5 F023          	movff	tablat,ringbuf_put@asciicode
  3384  012B0C  ECA9  F08D         	call	_ringbuf_put	;wreg free
  3385  012B10  4A24               	infsnz	tx_sends@asciicode,f,c
  3386  012B12  2A25               	incf	tx_sends@asciicode+1,f,c
  3387  012B14                     l5077:
  3388  012B14  C024  FFF6         	movff	tx_sends@asciicode,tblptrl
  3389  012B18  C025  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3390  012B1C                     	if	0	;tblptru may be non-zero
  3391  012B1C                     	endif
  3392  012B1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3393  012B1C  0E00               	movlw	low (__mediumconst shr (0+16))
  3394  012B1E  6EF8               	movwf	tblptru,c
  3395  012B20                     	endif
  3396  012B20  0008               	tblrd		*
  3397  012B22  50F5               	movf	tablat,w,c
  3398  012B24  0900               	iorlw	0
  3399  012B26  A4D8               	btfss	status,2,c
  3400  012B28  D7E4               	goto	l5073
  3401                           
  3402                           ;My_header\My_header.h: 230: }
  3403                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  3404  012B2A  889D               	bsf	3997,4,c	;volatile
  3405  012B2C  0012               	return		;funcret
  3406  012B2E                     __end_of_tx_sends:
  3407                           	opt stack 0
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           postinc1	equ	0xFE6
  3418                           postdec1	equ	0xFE5
  3419                           fsr1h	equ	0xFE2
  3420                           fsr1l	equ	0xFE1
  3421                           indf2	equ	0xFDF
  3422                           postinc2	equ	0xFDE
  3423                           postdec2	equ	0xFDD
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _command_time *****************
  3429 ;; Defined at:
  3430 ;;		line 107 in file "../My_header\My_terminal.h"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3433 ;;		 -> tx_buf(8), 
  3434 ;;  op0             2    2[BANK1 ] PTR unsigned char 
  3435 ;;		 -> my_terminal_loop@op0(20), 
  3436 ;;  op1             2    4[BANK1 ] PTR unsigned char 
  3437 ;;		 -> my_terminal_loop@op1(20), 
  3438 ;;  op2             2    6[BANK1 ] PTR unsigned char 
  3439 ;;		 -> my_terminal_loop@op2(20), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3451 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;Total ram usage:        9 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:   10
  3458 ;; This function calls:
  3459 ;;		_command_at_hand
  3460 ;;		_month_length
  3461 ;;		_my_atoi
  3462 ;;		_my_strcmp
  3463 ;;		_print_time
  3464 ;; This function is called by:
  3465 ;;		_command_operation
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text8
  3470  010B36                     __ptext8:
  3471                           	opt stack 0
  3472  010B36                     _command_time:
  3473                           	opt stack 18
  3474                           
  3475                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
  3476                           
  3477                           ;incstack = 0
  3478  010B36  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3479  010B3A  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3480  010B3E  0E79               	movlw	low STR_6
  3481  010B40  6E21               	movwf	my_strcmp@str2,c
  3482  010B42  0EFF               	movlw	high STR_6
  3483  010B44  6E22               	movwf	my_strcmp@str2+1,c
  3484  010B46  EC1B  F092         	call	_my_strcmp	;wreg free
  3485  010B4A  0900               	iorlw	0
  3486  010B4C  B4D8               	btfsc	status,2,c
  3487  010B4E  D00D               	goto	l5083
  3488  010B50  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3489  010B54  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3490  010B58  0EEA               	movlw	low (STR_8+1)
  3491  010B5A  6E21               	movwf	my_strcmp@str2,c
  3492  010B5C  0EFF               	movlw	high (STR_8+1)
  3493  010B5E  6E22               	movwf	my_strcmp@str2+1,c
  3494  010B60  EC1B  F092         	call	_my_strcmp	;wreg free
  3495  010B64  0900               	iorlw	0
  3496  010B66  A4D8               	btfss	status,2,c
  3497  010B68  D006               	goto	l5085
  3498  010B6A                     l5083:
  3499                           
  3500                           ;My_header\My_terminal.h: 109: print_time(tx);
  3501  010B6A  C100  F096         	movff	command_time@tx,print_time@tx
  3502  010B6E  C101  F097         	movff	command_time@tx+1,print_time@tx+1
  3503  010B72  EC85  F091         	call	_print_time	;wreg free
  3504  010B76                     l5085:
  3505                           
  3506                           ;My_header\My_terminal.h: 110: }
  3507                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
  3508  010B76  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3509  010B7A  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3510  010B7E  0EE9               	movlw	low STR_8
  3511  010B80  6E21               	movwf	my_strcmp@str2,c
  3512  010B82  0EFF               	movlw	high STR_8
  3513  010B84  6E22               	movwf	my_strcmp@str2+1,c
  3514  010B86  EC1B  F092         	call	_my_strcmp	;wreg free
  3515  010B8A  0900               	iorlw	0
  3516  010B8C  B4D8               	btfsc	status,2,c
  3517  010B8E  D00D               	goto	l5089
  3518  010B90  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3519  010B94  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3520  010B98  0E6D               	movlw	low STR_9
  3521  010B9A  6E21               	movwf	my_strcmp@str2,c
  3522  010B9C  0EFF               	movlw	high STR_9
  3523  010B9E  6E22               	movwf	my_strcmp@str2+1,c
  3524  010BA0  EC1B  F092         	call	_my_strcmp	;wreg free
  3525  010BA4  0900               	iorlw	0
  3526  010BA6  A4D8               	btfss	status,2,c
  3527  010BA8  0012               	return	
  3528  010BAA                     l5089:
  3529                           
  3530                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
  3531  010BAA  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3532  010BAE  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3533  010BB2  0EE4               	movlw	low (STR_15+2)
  3534  010BB4  6E21               	movwf	my_strcmp@str2,c
  3535  010BB6  0EFF               	movlw	high (STR_15+2)
  3536  010BB8  6E22               	movwf	my_strcmp@str2+1,c
  3537  010BBA  EC1B  F092         	call	_my_strcmp	;wreg free
  3538  010BBE  0900               	iorlw	0
  3539  010BC0  B4D8               	btfsc	status,2,c
  3540  010BC2  D00D               	goto	l5093
  3541  010BC4  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3542  010BC8  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3543  010BCC  0EC0               	movlw	low STR_11
  3544  010BCE  6E21               	movwf	my_strcmp@str2,c
  3545  010BD0  0EFF               	movlw	high STR_11
  3546  010BD2  6E22               	movwf	my_strcmp@str2+1,c
  3547  010BD4  EC1B  F092         	call	_my_strcmp	;wreg free
  3548  010BD8  0900               	iorlw	0
  3549  010BDA  A4D8               	btfss	status,2,c
  3550  010BDC  D01C               	goto	l5095
  3551  010BDE                     l5093:
  3552                           
  3553                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
  3554  010BDE  C100  F0B6         	movff	command_time@tx,command_at_hand@tx
  3555  010BE2  C101  F0B7         	movff	command_time@tx+1,command_at_hand@tx+1
  3556  010BE6  0EF7               	movlw	low (_caltime_now+6)
  3557  010BE8  0100               	movlb	0	; () banked
  3558  010BEA  6FB8               	movwf	command_at_hand@hand& (0+255),b
  3559  010BEC  0E00               	movlw	high (_caltime_now+6)
  3560  010BEE  0100               	movlb	0	; () banked
  3561  010BF0  6FB9               	movwf	(command_at_hand@hand+1)& (0+255),b
  3562  010BF2  0E00               	movlw	0
  3563  010BF4  0100               	movlb	0	; () banked
  3564  010BF6  6FBA               	movwf	command_at_hand@min& (0+255),b
  3565  010BF8  0E63               	movlw	99
  3566  010BFA  0100               	movlb	0	; () banked
  3567  010BFC  6FBB               	movwf	command_at_hand@max& (0+255),b
  3568  010BFE  C106  F060         	movff	command_time@op2,my_atoi@str
  3569  010C02  C107  F061         	movff	command_time@op2+1,my_atoi@str+1
  3570  010C06  ECE8  F090         	call	_my_atoi	;wreg free
  3571  010C0A  0100               	movlb	0	; () banked
  3572  010C0C  5160               	movf	?_my_atoi& (0+255),w,b
  3573  010C0E  0100               	movlb	0	; () banked
  3574  010C10  6FBC               	movwf	command_at_hand@value& (0+255),b
  3575  010C12  EC20  F094         	call	_command_at_hand	;wreg free
  3576  010C16                     l5095:
  3577                           
  3578                           ;My_header\My_terminal.h: 114: }
  3579                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
  3580  010C16  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3581  010C1A  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3582  010C1E  0ED4               	movlw	low (STR_31+2)
  3583  010C20  6E21               	movwf	my_strcmp@str2,c
  3584  010C22  0EFF               	movlw	high (STR_31+2)
  3585  010C24  6E22               	movwf	my_strcmp@str2+1,c
  3586  010C26  EC1B  F092         	call	_my_strcmp	;wreg free
  3587  010C2A  0900               	iorlw	0
  3588  010C2C  B4D8               	btfsc	status,2,c
  3589  010C2E  D00D               	goto	l5099
  3590  010C30  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3591  010C34  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3592  010C38  0EAA               	movlw	low STR_13
  3593  010C3A  6E21               	movwf	my_strcmp@str2,c
  3594  010C3C  0EFF               	movlw	high STR_13
  3595  010C3E  6E22               	movwf	my_strcmp@str2+1,c
  3596  010C40  EC1B  F092         	call	_my_strcmp	;wreg free
  3597  010C44  0900               	iorlw	0
  3598  010C46  A4D8               	btfss	status,2,c
  3599  010C48  D01C               	goto	l5101
  3600  010C4A                     l5099:
  3601                           
  3602                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
  3603  010C4A  C100  F0B6         	movff	command_time@tx,command_at_hand@tx
  3604  010C4E  C101  F0B7         	movff	command_time@tx+1,command_at_hand@tx+1
  3605  010C52  0EF6               	movlw	low (_caltime_now+5)
  3606  010C54  0100               	movlb	0	; () banked
  3607  010C56  6FB8               	movwf	command_at_hand@hand& (0+255),b
  3608  010C58  0E00               	movlw	high (_caltime_now+5)
  3609  010C5A  0100               	movlb	0	; () banked
  3610  010C5C  6FB9               	movwf	(command_at_hand@hand+1)& (0+255),b
  3611  010C5E  0E01               	movlw	1
  3612  010C60  0100               	movlb	0	; () banked
  3613  010C62  6FBA               	movwf	command_at_hand@min& (0+255),b
  3614  010C64  0E0C               	movlw	12
  3615  010C66  0100               	movlb	0	; () banked
  3616  010C68  6FBB               	movwf	command_at_hand@max& (0+255),b
  3617  010C6A  C106  F060         	movff	command_time@op2,my_atoi@str
  3618  010C6E  C107  F061         	movff	command_time@op2+1,my_atoi@str+1
  3619  010C72  ECE8  F090         	call	_my_atoi	;wreg free
  3620  010C76  0100               	movlb	0	; () banked
  3621  010C78  5160               	movf	?_my_atoi& (0+255),w,b
  3622  010C7A  0100               	movlb	0	; () banked
  3623  010C7C  6FBC               	movwf	command_at_hand@value& (0+255),b
  3624  010C7E  EC20  F094         	call	_command_at_hand	;wreg free
  3625  010C82                     l5101:
  3626                           
  3627                           ;My_header\My_terminal.h: 117: }
  3628                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
  3629  010C82  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3630  010C86  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3631  010C8A  0EA1               	movlw	low (STR_21+5)
  3632  010C8C  6E21               	movwf	my_strcmp@str2,c
  3633  010C8E  0EFF               	movlw	high (STR_21+5)
  3634  010C90  6E22               	movwf	my_strcmp@str2+1,c
  3635  010C92  EC1B  F092         	call	_my_strcmp	;wreg free
  3636  010C96  0900               	iorlw	0
  3637  010C98  B4D8               	btfsc	status,2,c
  3638  010C9A  D00D               	goto	l5105
  3639  010C9C  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3640  010CA0  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3641  010CA4  0EE2               	movlw	low STR_15
  3642  010CA6  6E21               	movwf	my_strcmp@str2,c
  3643  010CA8  0EFF               	movlw	high STR_15
  3644  010CAA  6E22               	movwf	my_strcmp@str2+1,c
  3645  010CAC  EC1B  F092         	call	_my_strcmp	;wreg free
  3646  010CB0  0900               	iorlw	0
  3647  010CB2  A4D8               	btfss	status,2,c
  3648  010CB4  D023               	goto	l5109
  3649  010CB6                     l5105:
  3650                           
  3651                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  3652  010CB6  C0F6  F025         	movff	_caltime_now+5,month_length@month
  3653  010CBA  0100               	movlb	0	; () banked
  3654  010CBC  51F7               	movf	(_caltime_now+6)& (0+255),w,b
  3655  010CBE  EC45  F08D         	call	_month_length
  3656  010CC2  0100               	movlb	0	; () banked
  3657  010CC4  6FBD               	movwf	_command_time$3238& (0+255),b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  3661  010CC6  C100  F0B6         	movff	command_time@tx,command_at_hand@tx
  3662  010CCA  C101  F0B7         	movff	command_time@tx+1,command_at_hand@tx+1
  3663  010CCE  0EF5               	movlw	low (_caltime_now+4)
  3664  010CD0  0100               	movlb	0	; () banked
  3665  010CD2  6FB8               	movwf	command_at_hand@hand& (0+255),b
  3666  010CD4  0E00               	movlw	high (_caltime_now+4)
  3667  010CD6  0100               	movlb	0	; () banked
  3668  010CD8  6FB9               	movwf	(command_at_hand@hand+1)& (0+255),b
  3669  010CDA  0E01               	movlw	1
  3670  010CDC  0100               	movlb	0	; () banked
  3671  010CDE  6FBA               	movwf	command_at_hand@min& (0+255),b
  3672  010CE0  C0BD  F0BB         	movff	_command_time$3238,command_at_hand@max
  3673  010CE4  C106  F060         	movff	command_time@op2,my_atoi@str
  3674  010CE8  C107  F061         	movff	command_time@op2+1,my_atoi@str+1
  3675  010CEC  ECE8  F090         	call	_my_atoi	;wreg free
  3676  010CF0  0100               	movlb	0	; () banked
  3677  010CF2  5160               	movf	?_my_atoi& (0+255),w,b
  3678  010CF4  0100               	movlb	0	; () banked
  3679  010CF6  6FBC               	movwf	command_at_hand@value& (0+255),b
  3680  010CF8  EC20  F094         	call	_command_at_hand	;wreg free
  3681  010CFC                     l5109:
  3682                           
  3683                           ;My_header\My_terminal.h: 120: }
  3684                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
  3685  010CFC  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3686  010D00  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3687  010D04  0EAE               	movlw	low (STR_13+4)
  3688  010D06  6E21               	movwf	my_strcmp@str2,c
  3689  010D08  0EFF               	movlw	high (STR_13+4)
  3690  010D0A  6E22               	movwf	my_strcmp@str2+1,c
  3691  010D0C  EC1B  F092         	call	_my_strcmp	;wreg free
  3692  010D10  0900               	iorlw	0
  3693  010D12  B4D8               	btfsc	status,2,c
  3694  010D14  D00D               	goto	l5113
  3695  010D16  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3696  010D1A  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3697  010D1E  0EC5               	movlw	low STR_17
  3698  010D20  6E21               	movwf	my_strcmp@str2,c
  3699  010D22  0EFF               	movlw	high STR_17
  3700  010D24  6E22               	movwf	my_strcmp@str2+1,c
  3701  010D26  EC1B  F092         	call	_my_strcmp	;wreg free
  3702  010D2A  0900               	iorlw	0
  3703  010D2C  A4D8               	btfss	status,2,c
  3704  010D2E  D01C               	goto	l5115
  3705  010D30                     l5113:
  3706                           
  3707                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
  3708  010D30  C100  F0B6         	movff	command_time@tx,command_at_hand@tx
  3709  010D34  C101  F0B7         	movff	command_time@tx+1,command_at_hand@tx+1
  3710  010D38  0EF3               	movlw	low (_caltime_now+2)
  3711  010D3A  0100               	movlb	0	; () banked
  3712  010D3C  6FB8               	movwf	command_at_hand@hand& (0+255),b
  3713  010D3E  0E00               	movlw	high (_caltime_now+2)
  3714  010D40  0100               	movlb	0	; () banked
  3715  010D42  6FB9               	movwf	(command_at_hand@hand+1)& (0+255),b
  3716  010D44  0E00               	movlw	0
  3717  010D46  0100               	movlb	0	; () banked
  3718  010D48  6FBA               	movwf	command_at_hand@min& (0+255),b
  3719  010D4A  0E17               	movlw	23
  3720  010D4C  0100               	movlb	0	; () banked
  3721  010D4E  6FBB               	movwf	command_at_hand@max& (0+255),b
  3722  010D50  C106  F060         	movff	command_time@op2,my_atoi@str
  3723  010D54  C107  F061         	movff	command_time@op2+1,my_atoi@str+1
  3724  010D58  ECE8  F090         	call	_my_atoi	;wreg free
  3725  010D5C  0100               	movlb	0	; () banked
  3726  010D5E  5160               	movf	?_my_atoi& (0+255),w,b
  3727  010D60  0100               	movlb	0	; () banked
  3728  010D62  6FBC               	movwf	command_at_hand@value& (0+255),b
  3729  010D64  EC20  F094         	call	_command_at_hand	;wreg free
  3730  010D68                     l5115:
  3731                           
  3732                           ;My_header\My_terminal.h: 123: }
  3733                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
  3734  010D68  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3735  010D6C  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3736  010D70  0EDC               	movlw	low (STR_30+2)
  3737  010D72  6E21               	movwf	my_strcmp@str2,c
  3738  010D74  0EFF               	movlw	high (STR_30+2)
  3739  010D76  6E22               	movwf	my_strcmp@str2+1,c
  3740  010D78  EC1B  F092         	call	_my_strcmp	;wreg free
  3741  010D7C  0900               	iorlw	0
  3742  010D7E  B4D8               	btfsc	status,2,c
  3743  010D80  D00D               	goto	l5119
  3744  010D82  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3745  010D86  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3746  010D8A  0EA3               	movlw	low STR_19
  3747  010D8C  6E21               	movwf	my_strcmp@str2,c
  3748  010D8E  0EFF               	movlw	high STR_19
  3749  010D90  6E22               	movwf	my_strcmp@str2+1,c
  3750  010D92  EC1B  F092         	call	_my_strcmp	;wreg free
  3751  010D96  0900               	iorlw	0
  3752  010D98  A4D8               	btfss	status,2,c
  3753  010D9A  D01C               	goto	l5121
  3754  010D9C                     l5119:
  3755                           
  3756                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
  3757  010D9C  C100  F0B6         	movff	command_time@tx,command_at_hand@tx
  3758  010DA0  C101  F0B7         	movff	command_time@tx+1,command_at_hand@tx+1
  3759  010DA4  0EF2               	movlw	low (_caltime_now+1)
  3760  010DA6  0100               	movlb	0	; () banked
  3761  010DA8  6FB8               	movwf	command_at_hand@hand& (0+255),b
  3762  010DAA  0E00               	movlw	high (_caltime_now+1)
  3763  010DAC  0100               	movlb	0	; () banked
  3764  010DAE  6FB9               	movwf	(command_at_hand@hand+1)& (0+255),b
  3765  010DB0  0E00               	movlw	0
  3766  010DB2  0100               	movlb	0	; () banked
  3767  010DB4  6FBA               	movwf	command_at_hand@min& (0+255),b
  3768  010DB6  0E3B               	movlw	59
  3769  010DB8  0100               	movlb	0	; () banked
  3770  010DBA  6FBB               	movwf	command_at_hand@max& (0+255),b
  3771  010DBC  C106  F060         	movff	command_time@op2,my_atoi@str
  3772  010DC0  C107  F061         	movff	command_time@op2+1,my_atoi@str+1
  3773  010DC4  ECE8  F090         	call	_my_atoi	;wreg free
  3774  010DC8  0100               	movlb	0	; () banked
  3775  010DCA  5160               	movf	?_my_atoi& (0+255),w,b
  3776  010DCC  0100               	movlb	0	; () banked
  3777  010DCE  6FBC               	movwf	command_at_hand@value& (0+255),b
  3778  010DD0  EC20  F094         	call	_command_at_hand	;wreg free
  3779  010DD4                     l5121:
  3780                           
  3781                           ;My_header\My_terminal.h: 126: }
  3782                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
  3783  010DD4  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3784  010DD8  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3785  010DDC  0EFA               	movlw	low STR_20
  3786  010DDE  6E21               	movwf	my_strcmp@str2,c
  3787  010DE0  0EFF               	movlw	high STR_20
  3788  010DE2  6E22               	movwf	my_strcmp@str2+1,c
  3789  010DE4  EC1B  F092         	call	_my_strcmp	;wreg free
  3790  010DE8  0900               	iorlw	0
  3791  010DEA  B4D8               	btfsc	status,2,c
  3792  010DEC  D00D               	goto	l5125
  3793  010DEE  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3794  010DF2  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3795  010DF6  0E9C               	movlw	low STR_21
  3796  010DF8  6E21               	movwf	my_strcmp@str2,c
  3797  010DFA  0EFF               	movlw	high STR_21
  3798  010DFC  6E22               	movwf	my_strcmp@str2+1,c
  3799  010DFE  EC1B  F092         	call	_my_strcmp	;wreg free
  3800  010E02  0900               	iorlw	0
  3801  010E04  A4D8               	btfss	status,2,c
  3802  010E06  0012               	return	
  3803  010E08                     l5125:
  3804                           
  3805                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
  3806  010E08  C100  F0B6         	movff	command_time@tx,command_at_hand@tx
  3807  010E0C  C101  F0B7         	movff	command_time@tx+1,command_at_hand@tx+1
  3808  010E10  0EF1               	movlw	low _caltime_now
  3809  010E12  0100               	movlb	0	; () banked
  3810  010E14  6FB8               	movwf	command_at_hand@hand& (0+255),b
  3811  010E16  0E00               	movlw	high _caltime_now
  3812  010E18  0100               	movlb	0	; () banked
  3813  010E1A  6FB9               	movwf	(command_at_hand@hand+1)& (0+255),b
  3814  010E1C  0E00               	movlw	0
  3815  010E1E  0100               	movlb	0	; () banked
  3816  010E20  6FBA               	movwf	command_at_hand@min& (0+255),b
  3817  010E22  0E3B               	movlw	59
  3818  010E24  0100               	movlb	0	; () banked
  3819  010E26  6FBB               	movwf	command_at_hand@max& (0+255),b
  3820  010E28  C106  F060         	movff	command_time@op2,my_atoi@str
  3821  010E2C  C107  F061         	movff	command_time@op2+1,my_atoi@str+1
  3822  010E30  ECE8  F090         	call	_my_atoi	;wreg free
  3823  010E34  0100               	movlb	0	; () banked
  3824  010E36  5160               	movf	?_my_atoi& (0+255),w,b
  3825  010E38  0100               	movlb	0	; () banked
  3826  010E3A  6FBC               	movwf	command_at_hand@value& (0+255),b
  3827  010E3C  EC20  F094         	call	_command_at_hand	;wreg free
  3828  010E40  0012               	return	
  3829  010E42                     __end_of_command_time:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           intcon	equ	0xFF2
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           postinc1	equ	0xFE6
  3841                           postdec1	equ	0xFE5
  3842                           fsr1h	equ	0xFE2
  3843                           fsr1l	equ	0xFE1
  3844                           indf2	equ	0xFDF
  3845                           postinc2	equ	0xFDE
  3846                           postdec2	equ	0xFDD
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function _my_strcmp *****************
  3852 ;; Defined at:
  3853 ;;		line 53 in file "../My_header\My_stdlib.h"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  3856 ;;		 -> my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
  3857 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  3858 ;;		 -> STR_40(6), STR_39(2), STR_38(2), STR_37(2), 
  3859 ;;		 -> STR_36(2), STR_35(2), STR_34(2), STR_33(2), 
  3860 ;;		 -> STR_32(2), STR_31(4), STR_30(4), STR_29(4), 
  3861 ;;		 -> STR_28(4), STR_27(5), STR_26(4), STR_25(9), 
  3862 ;;		 -> STR_23(2), STR_22(5), STR_21(7), STR_20(2), 
  3863 ;;		 -> STR_19(7), STR_18(2), STR_17(5), STR_16(2), 
  3864 ;;		 -> STR_15(4), STR_14(2), STR_13(6), STR_12(2), 
  3865 ;;		 -> STR_11(5), STR_10(2), STR_9(12), STR_8(3), 
  3866 ;;		 -> STR_7(2), STR_6(11), 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      char 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3881 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;Total ram usage:        5 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    4
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_command_time
  3889 ;;		_command_operation
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text9
  3894  012436                     __ptext9:
  3895                           	opt stack 0
  3896  012436                     _my_strcmp:
  3897                           	opt stack 24
  3898                           
  3899                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  3900                           
  3901                           ;incstack = 0
  3902  012436  D026               	goto	l5049
  3903  012438                     l5041:
  3904                           
  3905                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  3906  012438  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3907  01243C  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3908  012440  50DF               	movf	indf2,w,c
  3909  012442  6E23               	movwf	??_my_strcmp& (0+255),c
  3910  012444  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3911  012448  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3912  01244C                     	if	0	;tblptru may be non-zero
  3913  01244C                     	endif
  3914  01244C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3915  01244C  0E00               	movlw	low (__mediumconst shr (0+16))
  3916  01244E  6EF8               	movwf	tblptru,c
  3917  012450                     	endif
  3918  012450  0008               	tblrd		*
  3919  012452  50F5               	movf	tablat,w,c
  3920  012454  1823               	xorwf	??_my_strcmp,w,c
  3921  012456  B4D8               	btfsc	status,2,c
  3922  012458  D011               	goto	l5047
  3923  01245A  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3924  01245E  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3925  012462  50DF               	movf	indf2,w,c
  3926  012464  6E23               	movwf	??_my_strcmp& (0+255),c
  3927  012466  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3928  01246A  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3929  01246E                     	if	0	;tblptru may be non-zero
  3930  01246E                     	endif
  3931  01246E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3932  01246E  0E00               	movlw	low (__mediumconst shr (0+16))
  3933  012470  6EF8               	movwf	tblptru,c
  3934  012472                     	endif
  3935  012472  0008               	tblrd		*
  3936  012474  50F5               	movf	tablat,w,c
  3937  012476  0800               	sublw	0
  3938  012478  2423               	addwf	??_my_strcmp,w,c
  3939  01247A  0012               	return	
  3940  01247C                     l5047:
  3941                           
  3942                           ;My_header\My_stdlib.h: 56: str1++;
  3943  01247C  4A1F               	infsnz	my_strcmp@str1,f,c
  3944  01247E  2A20               	incf	my_strcmp@str1+1,f,c
  3945                           
  3946                           ;My_header\My_stdlib.h: 57: str2++;
  3947  012480  4A21               	infsnz	my_strcmp@str2,f,c
  3948  012482  2A22               	incf	my_strcmp@str2+1,f,c
  3949  012484                     l5049:
  3950  012484  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3951  012488  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3952  01248C  50DF               	movf	indf2,w,c
  3953  01248E  B4D8               	btfsc	status,2,c
  3954  012490  D00B               	goto	l5053
  3955  012492  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3956  012496  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3957  01249A                     	if	0	;tblptru may be non-zero
  3958  01249A                     	endif
  3959  01249A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3960  01249A  0E00               	movlw	low (__mediumconst shr (0+16))
  3961  01249C  6EF8               	movwf	tblptru,c
  3962  01249E                     	endif
  3963  01249E  0008               	tblrd		*
  3964  0124A0  50F5               	movf	tablat,w,c
  3965  0124A2  0900               	iorlw	0
  3966  0124A4  A4D8               	btfss	status,2,c
  3967  0124A6  D7C8               	goto	l5041
  3968  0124A8                     l5053:
  3969                           
  3970                           ;My_header\My_stdlib.h: 58: }
  3971                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  3972  0124A8  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3973  0124AC  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3974  0124B0  50DF               	movf	indf2,w,c
  3975  0124B2  6E23               	movwf	??_my_strcmp& (0+255),c
  3976  0124B4  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3977  0124B8  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3978  0124BC                     	if	0	;tblptru may be non-zero
  3979  0124BC                     	endif
  3980  0124BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3981  0124BC  0E00               	movlw	low (__mediumconst shr (0+16))
  3982  0124BE  6EF8               	movwf	tblptru,c
  3983  0124C0                     	endif
  3984  0124C0  0008               	tblrd		*
  3985  0124C2  50F5               	movf	tablat,w,c
  3986  0124C4  0800               	sublw	0
  3987  0124C6  2423               	addwf	??_my_strcmp,w,c
  3988  0124C8  0012               	return	
  3989  0124CA                     __end_of_my_strcmp:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           prodh	equ	0xFF4
  3996                           prodl	equ	0xFF3
  3997                           intcon	equ	0xFF2
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           postinc1	equ	0xFE6
  4001                           postdec1	equ	0xFE5
  4002                           fsr1h	equ	0xFE2
  4003                           fsr1l	equ	0xFE1
  4004                           indf2	equ	0xFDF
  4005                           postinc2	equ	0xFDE
  4006                           postdec2	equ	0xFDD
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _my_atoi *****************
  4012 ;; Defined at:
  4013 ;;		line 41 in file "../My_header\My_stdlib.h"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  4016 ;;		 -> my_terminal_loop@op2(20), 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  ret             2    6[BANK0 ] unsigned int 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2    0[BANK0 ] unsigned int 
  4021 ;; Registers used:
  4022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4031 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4032 ;;Total ram usage:        8 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    5
  4035 ;; This function calls:
  4036 ;;		___wmul
  4037 ;; This function is called by:
  4038 ;;		_command_time
  4039 ;;		_command_operation
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text10
  4044  0121D0                     __ptext10:
  4045                           	opt stack 0
  4046  0121D0                     _my_atoi:
  4047                           	opt stack 23
  4048                           
  4049                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  4050                           
  4051                           ;incstack = 0
  4052  0121D0  0E00               	movlw	0
  4053  0121D2  0100               	movlb	0	; () banked
  4054  0121D4  6F67               	movwf	(my_atoi@ret+1)& (0+255),b
  4055  0121D6  0E00               	movlw	0
  4056  0121D8  6F66               	movwf	my_atoi@ret& (0+255),b
  4057                           
  4058                           ;My_header\My_stdlib.h: 43: while (*str) {
  4059  0121DA  D03D               	goto	l5037
  4060  0121DC                     l5027:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  4064  0121DC  C060  FFD9         	movff	my_atoi@str,fsr2l
  4065  0121E0  C061  FFDA         	movff	my_atoi@str+1,fsr2h
  4066  0121E4  0E2F               	movlw	47
  4067  0121E6  64DF               	cpfsgt	indf2,c
  4068  0121E8  D033               	goto	l5035
  4069                           
  4070                           ; BSR set to: 0
  4071  0121EA  C060  FFD9         	movff	my_atoi@str,fsr2l
  4072  0121EE  C061  FFDA         	movff	my_atoi@str+1,fsr2h
  4073  0121F2  0E3A               	movlw	58
  4074  0121F4  60DF               	cpfslt	indf2,c
  4075  0121F6  D02C               	goto	l5035
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;My_header\My_stdlib.h: 45: ret *= 10;
  4079  0121F8  C066  F01F         	movff	my_atoi@ret,___wmul@multiplier
  4080  0121FC  C067  F020         	movff	my_atoi@ret+1,___wmul@multiplier+1
  4081  012200  0E00               	movlw	0
  4082  012202  6E22               	movwf	___wmul@multiplicand+1,c
  4083  012204  0E0A               	movlw	10
  4084  012206  6E21               	movwf	___wmul@multiplicand,c
  4085  012208  ECF4  F095         	call	___wmul	;wreg free
  4086  01220C  C01F  F066         	movff	?___wmul,my_atoi@ret
  4087  012210  C020  F067         	movff	?___wmul+1,my_atoi@ret+1
  4088                           
  4089                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  4090  012214  0ED0               	movlw	208
  4091  012216  0100               	movlb	0	; () banked
  4092  012218  6F62               	movwf	??_my_atoi& (0+255),b
  4093  01221A  0EFF               	movlw	255
  4094  01221C  0100               	movlb	0	; () banked
  4095  01221E  6F63               	movwf	(??_my_atoi+1)& (0+255),b
  4096  012220  C060  FFD9         	movff	my_atoi@str,fsr2l
  4097  012224  C061  FFDA         	movff	my_atoi@str+1,fsr2h
  4098  012228  50DF               	movf	indf2,w,c
  4099  01222A  0100               	movlb	0	; () banked
  4100  01222C  6F64               	movwf	(??_my_atoi+2)& (0+255),b
  4101  01222E  6B65               	clrf	(??_my_atoi+3)& (0+255),b
  4102  012230  0100               	movlb	0	; () banked
  4103  012232  5162               	movf	??_my_atoi& (0+255),w,b
  4104  012234  0100               	movlb	0	; () banked
  4105  012236  2764               	addwf	(??_my_atoi+2)& (0+255),f,b
  4106  012238  0100               	movlb	0	; () banked
  4107  01223A  5163               	movf	(??_my_atoi+1)& (0+255),w,b
  4108  01223C  0100               	movlb	0	; () banked
  4109  01223E  2365               	addwfc	(??_my_atoi+3)& (0+255),f,b
  4110  012240  0100               	movlb	0	; () banked
  4111  012242  5164               	movf	(??_my_atoi+2)& (0+255),w,b
  4112  012244  0100               	movlb	0	; () banked
  4113  012246  2766               	addwf	my_atoi@ret& (0+255),f,b
  4114  012248  0100               	movlb	0	; () banked
  4115  01224A  5165               	movf	(??_my_atoi+3)& (0+255),w,b
  4116  01224C  0100               	movlb	0	; () banked
  4117  01224E  2367               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  4118  012250                     l5035:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;My_header\My_stdlib.h: 47: }
  4122                           ;My_header\My_stdlib.h: 48: str++;
  4123  012250  0100               	movlb	0	; () banked
  4124  012252  4B60               	infsnz	my_atoi@str& (0+255),f,b
  4125  012254  2B61               	incf	(my_atoi@str+1)& (0+255),f,b
  4126  012256                     l5037:
  4127                           
  4128                           ; BSR set to: 0
  4129  012256  C060  FFD9         	movff	my_atoi@str,fsr2l
  4130  01225A  C061  FFDA         	movff	my_atoi@str+1,fsr2h
  4131  01225E  50DF               	movf	indf2,w,c
  4132  012260  A4D8               	btfss	status,2,c
  4133  012262  D7BC               	goto	l5027
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;My_header\My_stdlib.h: 49: }
  4137                           ;My_header\My_stdlib.h: 50: return ret;
  4138  012264  C066  F060         	movff	my_atoi@ret,?_my_atoi
  4139  012268  C067  F061         	movff	my_atoi@ret+1,?_my_atoi+1
  4140                           
  4141                           ; BSR set to: 0
  4142  01226C  0012               	return		;funcret
  4143  01226E                     __end_of_my_atoi:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           intcon	equ	0xFF2
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           postinc1	equ	0xFE6
  4155                           postdec1	equ	0xFE5
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _command_at_hand *****************
  4166 ;; Defined at:
  4167 ;;		line 96 in file "../My_header\My_terminal.h"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  4170 ;;		 -> tx_buf(8), 
  4171 ;;  hand            2   88[BANK0 ] PTR unsigned char 
  4172 ;;		 -> caltime_now(7), 
  4173 ;;  min             1   90[BANK0 ] unsigned char 
  4174 ;;  max             1   91[BANK0 ] unsigned char 
  4175 ;;  value           1   92[BANK0 ] unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;		None               void
  4180 ;; Registers used:
  4181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4187 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;Total ram usage:        7 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    9
  4194 ;; This function calls:
  4195 ;;		_RTCC_from_caltime
  4196 ;;		_print_time
  4197 ;;		_ringbuf_put_str
  4198 ;; This function is called by:
  4199 ;;		_command_time
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text11
  4204  012840                     __ptext11:
  4205                           	opt stack 0
  4206  012840                     _command_at_hand:
  4207                           	opt stack 18
  4208                           
  4209                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;incstack = 0
  4213  012840  0100               	movlb	0	; () banked
  4214  012842  51BA               	movf	command_at_hand@min& (0+255),w,b
  4215  012844  0100               	movlb	0	; () banked
  4216  012846  5DBC               	subwf	command_at_hand@value& (0+255),w,b
  4217  012848  A0D8               	btfss	status,0,c
  4218  01284A  D024               	goto	l5069
  4219                           
  4220                           ; BSR set to: 0
  4221  01284C  0100               	movlb	0	; () banked
  4222  01284E  51BC               	movf	command_at_hand@value& (0+255),w,b
  4223  012850  0100               	movlb	0	; () banked
  4224  012852  5DBB               	subwf	command_at_hand@max& (0+255),w,b
  4225  012854  A0D8               	btfss	status,0,c
  4226  012856  D01E               	goto	l5069
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;My_header\My_terminal.h: 98: *hand = value;
  4230  012858  C0B8  FFD9         	movff	command_at_hand@hand,fsr2l
  4231  01285C  C0B9  FFDA         	movff	command_at_hand@hand+1,fsr2h
  4232  012860  C0BC  FFDF         	movff	command_at_hand@value,indf2
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
  4236  012864  0EF1               	movlw	low _caltime_now
  4237  012866  0100               	movlb	0	; () banked
  4238  012868  6F96               	movwf	RTCC_from_caltime@ct& (0+255),b
  4239  01286A  0E00               	movlw	high _caltime_now
  4240  01286C  0100               	movlb	0	; () banked
  4241  01286E  6F97               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  4242  012870  0EF8               	movlw	low _epoch_now
  4243  012872  0100               	movlb	0	; () banked
  4244  012874  6F98               	movwf	RTCC_from_caltime@ep& (0+255),b
  4245  012876  0E00               	movlw	high _epoch_now
  4246  012878  0100               	movlb	0	; () banked
  4247  01287A  6F99               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  4248  01287C  EC97  F095         	call	_RTCC_from_caltime	;wreg free
  4249                           
  4250                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
  4251  012880  0E01               	movlw	1
  4252  012882  0100               	movlb	0	; () banked
  4253  012884  6FCA               	movwf	_time_change_flag& (0+255),b
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;My_header\My_terminal.h: 101: print_time(tx);
  4257  012886  C0B6  F096         	movff	command_at_hand@tx,print_time@tx
  4258  01288A  C0B7  F097         	movff	command_at_hand@tx+1,print_time@tx+1
  4259  01288E  EC85  F091         	call	_print_time	;wreg free
  4260                           
  4261                           ;My_header\My_terminal.h: 102: } else {
  4262  012892  0012               	return	
  4263  012894                     l5069:
  4264                           
  4265                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
  4266  012894  C0B6  F06A         	movff	command_at_hand@tx,ringbuf_put_str@rb
  4267  012898  C0B7  F06B         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
  4268  01289C  0E8D               	movlw	low STR_5
  4269  01289E  0100               	movlb	0	; () banked
  4270  0128A0  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4271  0128A2  0EFF               	movlw	high STR_5
  4272  0128A4  0100               	movlb	0	; () banked
  4273  0128A6  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4274  0128A8  EC57  F094         	call	_ringbuf_put_str	;wreg free
  4275  0128AC  0012               	return	
  4276  0128AE                     __end_of_command_at_hand:
  4277                           	opt stack 0
  4278                           tblptru	equ	0xFF8
  4279                           tblptrh	equ	0xFF7
  4280                           tblptrl	equ	0xFF6
  4281                           tablat	equ	0xFF5
  4282                           prodh	equ	0xFF4
  4283                           prodl	equ	0xFF3
  4284                           intcon	equ	0xFF2
  4285                           postinc0	equ	0xFEE
  4286                           wreg	equ	0xFE8
  4287                           postinc1	equ	0xFE6
  4288                           postdec1	equ	0xFE5
  4289                           fsr1h	equ	0xFE2
  4290                           fsr1l	equ	0xFE1
  4291                           indf2	equ	0xFDF
  4292                           postinc2	equ	0xFDE
  4293                           postdec2	equ	0xFDD
  4294                           fsr2h	equ	0xFDA
  4295                           fsr2l	equ	0xFD9
  4296                           status	equ	0xFD8
  4297                           
  4298 ;; *************** function _print_time *****************
  4299 ;; Defined at:
  4300 ;;		line 82 in file "../My_header\My_terminal.h"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  tx              2   54[BANK0 ] PTR struct ringbuf
  4303 ;;		 -> tx_buf(8), 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  str            30   56[BANK0 ] unsigned char [30]
  4306 ;; Return value:  Size  Location     Type
  4307 ;;		None               void
  4308 ;; Registers used:
  4309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4318 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;Total ram usage:       32 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    8
  4322 ;; This function calls:
  4323 ;;		_RTCC_from_RTCC
  4324 ;;		_ringbuf_put_str
  4325 ;;		_sprintf
  4326 ;; This function is called by:
  4327 ;;		_command_at_hand
  4328 ;;		_command_time
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text12
  4333  01230A                     __ptext12:
  4334                           	opt stack 0
  4335  01230A                     _print_time:
  4336                           	opt stack 19
  4337                           
  4338                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4339                           
  4340                           ;incstack = 0
  4341  01230A  0EF1               	movlw	low _caltime_now
  4342  01230C  0100               	movlb	0	; () banked
  4343  01230E  6F80               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4344  012310  0E00               	movlw	high _caltime_now
  4345  012312  0100               	movlb	0	; () banked
  4346  012314  6F81               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4347  012316  0EF8               	movlw	low _epoch_now
  4348  012318  0100               	movlb	0	; () banked
  4349  01231A  6F82               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4350  01231C  0E00               	movlw	high _epoch_now
  4351  01231E  0100               	movlb	0	; () banked
  4352  012320  6F83               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4353  012322  EC18  F096         	call	_RTCC_from_RTCC	;wreg free
  4354                           
  4355                           ;My_header\My_terminal.h: 84: char str[30];
  4356                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4357                           ;My_header\My_terminal.h: 86: caltime_now.YY,
  4358                           ;My_header\My_terminal.h: 87: caltime_now.MM,
  4359                           ;My_header\My_terminal.h: 88: caltime_now.DD,
  4360                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
  4361                           ;My_header\My_terminal.h: 90: caltime_now.hh,
  4362                           ;My_header\My_terminal.h: 91: caltime_now.mm,
  4363                           ;My_header\My_terminal.h: 92: caltime_now.ss);
  4364  012326  0E98               	movlw	low print_time@str
  4365  012328  0100               	movlb	0	; () banked
  4366  01232A  6F73               	movwf	sprintf@sp& (0+255),b
  4367  01232C  0E00               	movlw	high print_time@str
  4368  01232E  0100               	movlb	0	; () banked
  4369  012330  6F74               	movwf	(sprintf@sp+1)& (0+255),b
  4370  012332  0E48               	movlw	low STR_4
  4371  012334  0100               	movlb	0	; () banked
  4372  012336  6F75               	movwf	sprintf@f& (0+255),b
  4373  012338  0EFF               	movlw	high STR_4
  4374  01233A  0100               	movlb	0	; () banked
  4375  01233C  6F76               	movwf	(sprintf@f+1)& (0+255),b
  4376  01233E  C0F7  F077         	movff	_caltime_now+6,?_sprintf+4
  4377  012342  0100               	movlb	0	; () banked
  4378  012344  6B78               	clrf	(?_sprintf+5)& (0+255),b
  4379  012346  C0F6  F079         	movff	_caltime_now+5,?_sprintf+6
  4380  01234A  0100               	movlb	0	; () banked
  4381  01234C  6B7A               	clrf	(?_sprintf+7)& (0+255),b
  4382  01234E  C0F5  F07B         	movff	_caltime_now+4,?_sprintf+8
  4383  012352  0100               	movlb	0	; () banked
  4384  012354  6B7C               	clrf	(?_sprintf+9)& (0+255),b
  4385  012356  0100               	movlb	0	; () banked
  4386  012358  51F4               	movf	(_caltime_now+3)& (0+255),w,b
  4387  01235A  0D04               	mullw	4
  4388  01235C  0EF1               	movlw	low _weekday_3char
  4389  01235E  24F3               	addwf	prodl,w,c
  4390  012360  0100               	movlb	0	; () banked
  4391  012362  6F7D               	movwf	(?_sprintf+10)& (0+255),b
  4392  012364  0EFD               	movlw	high _weekday_3char
  4393  012366  20F4               	addwfc	prodh,w,c
  4394  012368  0100               	movlb	0	; () banked
  4395  01236A  6F7E               	movwf	(?_sprintf+11)& (0+255),b
  4396  01236C  C0F3  F07F         	movff	_caltime_now+2,?_sprintf+12
  4397  012370  0100               	movlb	0	; () banked
  4398  012372  6B80               	clrf	(?_sprintf+13)& (0+255),b
  4399  012374  C0F2  F081         	movff	_caltime_now+1,?_sprintf+14
  4400  012378  0100               	movlb	0	; () banked
  4401  01237A  6B82               	clrf	(?_sprintf+15)& (0+255),b
  4402  01237C  C0F1  F083         	movff	_caltime_now,?_sprintf+16
  4403  012380  0100               	movlb	0	; () banked
  4404  012382  6B84               	clrf	(?_sprintf+17)& (0+255),b
  4405  012384  EC00  F080         	call	_sprintf	;wreg free
  4406                           
  4407                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
  4408  012388  C096  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4409  01238C  C097  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4410  012390  0E98               	movlw	low print_time@str
  4411  012392  0100               	movlb	0	; () banked
  4412  012394  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4413  012396  0E00               	movlw	high print_time@str
  4414  012398  0100               	movlb	0	; () banked
  4415  01239A  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4416  01239C  EC57  F094         	call	_ringbuf_put_str	;wreg free
  4417  0123A0  0012               	return		;funcret
  4418  0123A2                     __end_of_print_time:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           prodh	equ	0xFF4
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           postinc0	equ	0xFEE
  4428                           wreg	equ	0xFE8
  4429                           postinc1	equ	0xFE6
  4430                           postdec1	equ	0xFE5
  4431                           fsr1h	equ	0xFE2
  4432                           fsr1l	equ	0xFE1
  4433                           indf2	equ	0xFDF
  4434                           postinc2	equ	0xFDE
  4435                           postdec2	equ	0xFDD
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _sprintf *****************
  4441 ;; Defined at:
  4442 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  sp              2   19[BANK0 ] PTR unsigned char 
  4445 ;;		 -> print_time@str(30), 
  4446 ;;  f               2   21[BANK0 ] PTR const unsigned char 
  4447 ;;		 -> STR_4(37), 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  tmpval          4    0        struct .
  4450 ;;  width           2   52[BANK0 ] int 
  4451 ;;  len             2   48[BANK0 ] unsigned int 
  4452 ;;  val             2   46[BANK0 ] unsigned int 
  4453 ;;  cp              2   44[BANK0 ] PTR const unsigned char 
  4454 ;;		 -> STR_41(7), weekday_3char(28), 
  4455 ;;  ap              2   42[BANK0 ] PTR void [1]
  4456 ;;		 -> ?_sprintf(2), 
  4457 ;;  c               1   51[BANK0 ] char 
  4458 ;;  flag            1   50[BANK0 ] unsigned char 
  4459 ;;  prec            1   41[BANK0 ] char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  2   19[BANK0 ] int 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4469 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;Total ram usage:       35 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    5
  4476 ;; This function calls:
  4477 ;;		___lwdiv
  4478 ;;		___lwmod
  4479 ;;		___wmul
  4480 ;;		_isdigit
  4481 ;; This function is called by:
  4482 ;;		_print_time
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text13
  4487  010000                     __ptext13:
  4488                           	opt stack 0
  4489  010000                     _sprintf:
  4490                           	opt stack 21
  4491                           
  4492                           ;doprnt.c: 494: va_list ap;
  4493                           ;doprnt.c: 499: signed char c;
  4494                           ;doprnt.c: 501: int width;
  4495                           ;doprnt.c: 506: signed char prec;
  4496                           ;doprnt.c: 508: unsigned char flag;
  4497                           ;doprnt.c: 523: union {
  4498                           ;doprnt.c: 524: unsigned long vd;
  4499                           ;doprnt.c: 525: double integ;
  4500                           ;doprnt.c: 526: } tmpval;
  4501                           ;doprnt.c: 528: unsigned int val;
  4502                           ;doprnt.c: 529: unsigned len;
  4503                           ;doprnt.c: 530: const char * cp;
  4504                           ;doprnt.c: 533: *ap = __va_start();
  4505                           
  4506                           ;incstack = 0
  4507  010000  0E77               	movlw	low (?_sprintf+4)
  4508  010002  0100               	movlb	0	; () banked
  4509  010004  6F8A               	movwf	sprintf@ap& (0+255),b
  4510  010006  0E00               	movlw	high (?_sprintf+4)
  4511  010008  0100               	movlb	0	; () banked
  4512  01000A  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  4513                           
  4514                           ;doprnt.c: 536: while(c = *f++) {
  4515  01000C  D20E               	goto	l5009
  4516  01000E                     l4869:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;doprnt.c: 538: if(c != '%')
  4520  01000E  0E25               	movlw	37
  4521  010010  0100               	movlb	0	; () banked
  4522  010012  1993               	xorwf	sprintf@c& (0+255),w,b
  4523  010014  B4D8               	btfsc	status,2,c
  4524  010016  D00A               	goto	l4875
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;doprnt.c: 540: {
  4528                           ;doprnt.c: 541: ((*sp++ = (c)));
  4529  010018  C073  FFD9         	movff	sprintf@sp,fsr2l
  4530  01001C  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  4531  010020  C093  FFDF         	movff	sprintf@c,indf2
  4532                           
  4533                           ; BSR set to: 0
  4534  010024  0100               	movlb	0	; () banked
  4535  010026  4B73               	infsnz	sprintf@sp& (0+255),f,b
  4536  010028  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  4537                           
  4538                           ;doprnt.c: 542: continue;
  4539  01002A  D1FF               	goto	l5009
  4540  01002C                     l4875:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;doprnt.c: 543: }
  4544                           ;doprnt.c: 546: width = 0;
  4545  01002C  0E00               	movlw	0
  4546  01002E  0100               	movlb	0	; () banked
  4547  010030  6F95               	movwf	(sprintf@width+1)& (0+255),b
  4548  010032  0E00               	movlw	0
  4549  010034  6F94               	movwf	sprintf@width& (0+255),b
  4550                           
  4551                           ;doprnt.c: 548: flag = 0;
  4552  010036  0E00               	movlw	0
  4553  010038  0100               	movlb	0	; () banked
  4554  01003A  6F92               	movwf	sprintf@flag& (0+255),b
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;doprnt.c: 551: switch(*f) {
  4558                           
  4559                           ;doprnt.c: 550: for(;;) {
  4560  01003C  D005               	goto	l4881
  4561  01003E                     l4877:
  4562                           
  4563                           ;doprnt.c: 580: flag |= 0x04;
  4564  01003E  0100               	movlb	0	; () banked
  4565  010040  8592               	bsf	sprintf@flag& (0+255),2,b
  4566                           
  4567                           ;doprnt.c: 581: f++;
  4568  010042  0100               	movlb	0	; () banked
  4569  010044  4B75               	infsnz	sprintf@f& (0+255),f,b
  4570  010046  2B76               	incf	(sprintf@f+1)& (0+255),f,b
  4571  010048                     l4881:
  4572  010048  C075  FFF6         	movff	sprintf@f,tblptrl
  4573  01004C  C076  FFF7         	movff	sprintf@f+1,tblptrh
  4574  010050                     	if	0	;tblptru may be non-zero
  4575  010050                     	endif
  4576  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4577  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  4578  010052  6EF8               	movwf	tblptru,c
  4579  010054                     	endif
  4580  010054  0008               	tblrd		*
  4581  010056  50F5               	movf	tablat,w,c
  4582                           
  4583                           ; Switch size 1, requested type "space"
  4584                           ; Number of cases is 1, Range of values is 48 to 48
  4585                           ; switch strategies available:
  4586                           ; Name         Instructions Cycles
  4587                           ; simple_byte            4     3 (average)
  4588                           ;	Chosen strategy is simple_byte
  4589  010058  0A30               	xorlw	48	; case 48
  4590  01005A  B4D8               	btfsc	status,2,c
  4591  01005C  D7F0               	goto	l4877
  4592                           
  4593                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4594                           
  4595                           ;doprnt.c: 586: }
  4596                           
  4597                           ;doprnt.c: 585: break;
  4598  01005E  C075  FFF6         	movff	sprintf@f,tblptrl
  4599  010062  C076  FFF7         	movff	sprintf@f+1,tblptrh
  4600  010066                     	if	0	;tblptru may be non-zero
  4601  010066                     	endif
  4602  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4603  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  4604  010068  6EF8               	movwf	tblptru,c
  4605  01006A                     	endif
  4606  01006A  0008               	tblrd		*
  4607  01006C  50F5               	movf	tablat,w,c
  4608  01006E  EC4A  F096         	call	_isdigit
  4609  010072  A0D8               	btfss	status,0,c
  4610  010074  D0CA               	goto	l4931
  4611                           
  4612                           ;doprnt.c: 598: width = 0;
  4613  010076  0E00               	movlw	0
  4614  010078  0100               	movlb	0	; () banked
  4615  01007A  6F95               	movwf	(sprintf@width+1)& (0+255),b
  4616  01007C  0E00               	movlw	0
  4617  01007E  6F94               	movwf	sprintf@width& (0+255),b
  4618  010080                     l4887:
  4619                           
  4620                           ;doprnt.c: 600: width *= 10;
  4621  010080  C094  F01F         	movff	sprintf@width,___wmul@multiplier
  4622  010084  C095  F020         	movff	sprintf@width+1,___wmul@multiplier+1
  4623  010088  0E00               	movlw	0
  4624  01008A  6E22               	movwf	___wmul@multiplicand+1,c
  4625  01008C  0E0A               	movlw	10
  4626  01008E  6E21               	movwf	___wmul@multiplicand,c
  4627  010090  ECF4  F095         	call	___wmul	;wreg free
  4628  010094  C01F  F094         	movff	?___wmul,sprintf@width
  4629  010098  C020  F095         	movff	?___wmul+1,sprintf@width+1
  4630                           
  4631                           ;doprnt.c: 601: width += *f++ - '0';
  4632  01009C  0ED0               	movlw	208
  4633  01009E  0100               	movlb	0	; () banked
  4634  0100A0  6F85               	movwf	??_sprintf& (0+255),b
  4635  0100A2  0EFF               	movlw	255
  4636  0100A4  0100               	movlb	0	; () banked
  4637  0100A6  6F86               	movwf	(??_sprintf+1)& (0+255),b
  4638  0100A8  C075  FFF6         	movff	sprintf@f,tblptrl
  4639  0100AC  C076  FFF7         	movff	sprintf@f+1,tblptrh
  4640  0100B0                     	if	0	;tblptru may be non-zero
  4641  0100B0                     	endif
  4642  0100B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4643  0100B0  0E00               	movlw	low (__mediumconst shr (0+16))
  4644  0100B2  6EF8               	movwf	tblptru,c
  4645  0100B4                     	endif
  4646  0100B4  0008               	tblrd		*
  4647  0100B6  50F5               	movf	tablat,w,c
  4648  0100B8  0100               	movlb	0	; () banked
  4649  0100BA  6F87               	movwf	(??_sprintf+2)& (0+255),b
  4650  0100BC  6B88               	clrf	(??_sprintf+3)& (0+255),b
  4651  0100BE  0100               	movlb	0	; () banked
  4652  0100C0  5185               	movf	??_sprintf& (0+255),w,b
  4653  0100C2  0100               	movlb	0	; () banked
  4654  0100C4  2787               	addwf	(??_sprintf+2)& (0+255),f,b
  4655  0100C6  0100               	movlb	0	; () banked
  4656  0100C8  5186               	movf	(??_sprintf+1)& (0+255),w,b
  4657  0100CA  0100               	movlb	0	; () banked
  4658  0100CC  2388               	addwfc	(??_sprintf+3)& (0+255),f,b
  4659  0100CE  0100               	movlb	0	; () banked
  4660  0100D0  5187               	movf	(??_sprintf+2)& (0+255),w,b
  4661  0100D2  0100               	movlb	0	; () banked
  4662  0100D4  2794               	addwf	sprintf@width& (0+255),f,b
  4663  0100D6  0100               	movlb	0	; () banked
  4664  0100D8  5188               	movf	(??_sprintf+3)& (0+255),w,b
  4665  0100DA  0100               	movlb	0	; () banked
  4666  0100DC  2395               	addwfc	(sprintf@width+1)& (0+255),f,b
  4667                           
  4668                           ; BSR set to: 0
  4669  0100DE  0100               	movlb	0	; () banked
  4670  0100E0  4B75               	infsnz	sprintf@f& (0+255),f,b
  4671  0100E2  2B76               	incf	(sprintf@f+1)& (0+255),f,b
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4675  0100E4  C075  FFF6         	movff	sprintf@f,tblptrl
  4676  0100E8  C076  FFF7         	movff	sprintf@f+1,tblptrh
  4677  0100EC                     	if	0	;tblptru may be non-zero
  4678  0100EC                     	endif
  4679  0100EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4680  0100EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4681  0100EE  6EF8               	movwf	tblptru,c
  4682  0100F0                     	endif
  4683  0100F0  0008               	tblrd		*
  4684  0100F2  50F5               	movf	tablat,w,c
  4685  0100F4  EC4A  F096         	call	_isdigit
  4686  0100F8  A0D8               	btfss	status,0,c
  4687  0100FA  D087               	goto	l4931
  4688  0100FC  D7C1               	goto	l4887
  4689  0100FE                     l4895:
  4690                           
  4691                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4692  0100FE  C08A  FFD9         	movff	sprintf@ap,fsr2l
  4693  010102  C08B  FFDA         	movff	sprintf@ap+1,fsr2h
  4694  010106  CFDE F08C          	movff	postinc2,sprintf@cp
  4695  01010A  CFDD F08D          	movff	postdec2,sprintf@cp+1
  4696  01010E  0E02               	movlw	2
  4697  010110  0100               	movlb	0	; () banked
  4698  010112  278A               	addwf	sprintf@ap& (0+255),f,b
  4699  010114  0E00               	movlw	0
  4700  010116  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;doprnt.c: 740: if(!cp)
  4704  010118  0100               	movlb	0	; () banked
  4705  01011A  518C               	movf	sprintf@cp& (0+255),w,b
  4706  01011C  0100               	movlb	0	; () banked
  4707  01011E  118D               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4708  010120  A4D8               	btfss	status,2,c
  4709  010122  D006               	goto	l4903
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;doprnt.c: 741: cp = "(null)";
  4713  010124  0E95               	movlw	low STR_41
  4714  010126  0100               	movlb	0	; () banked
  4715  010128  6F8C               	movwf	sprintf@cp& (0+255),b
  4716  01012A  0EFF               	movlw	high STR_41
  4717  01012C  0100               	movlb	0	; () banked
  4718  01012E  6F8D               	movwf	(sprintf@cp+1)& (0+255),b
  4719  010130                     l4903:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;doprnt.c: 745: len = 0;
  4723  010130  0E00               	movlw	0
  4724  010132  0100               	movlb	0	; () banked
  4725  010134  6F91               	movwf	(sprintf@len+1)& (0+255),b
  4726  010136  0E00               	movlw	0
  4727  010138  6F90               	movwf	sprintf@len& (0+255),b
  4728                           
  4729                           ;doprnt.c: 746: while(cp[len])
  4730  01013A  D003               	goto	l4907
  4731  01013C                     l4905:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;doprnt.c: 747: len++;
  4735  01013C  0100               	movlb	0	; () banked
  4736  01013E  4B90               	infsnz	sprintf@len& (0+255),f,b
  4737  010140  2B91               	incf	(sprintf@len+1)& (0+255),f,b
  4738  010142                     l4907:
  4739                           
  4740                           ; BSR set to: 0
  4741  010142  0100               	movlb	0	; () banked
  4742  010144  5190               	movf	sprintf@len& (0+255),w,b
  4743  010146  0100               	movlb	0	; () banked
  4744  010148  258C               	addwf	sprintf@cp& (0+255),w,b
  4745  01014A  0100               	movlb	0	; () banked
  4746  01014C  6F85               	movwf	??_sprintf& (0+255),b
  4747  01014E  0100               	movlb	0	; () banked
  4748  010150  5191               	movf	(sprintf@len+1)& (0+255),w,b
  4749  010152  0100               	movlb	0	; () banked
  4750  010154  218D               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4751  010156  0100               	movlb	0	; () banked
  4752  010158  6F86               	movwf	(??_sprintf+1)& (0+255),b
  4753  01015A  C085  FFF6         	movff	??_sprintf,tblptrl
  4754  01015E  C086  FFF7         	movff	??_sprintf+1,tblptrh
  4755  010162                     	if	0	;tblptru may be non-zero
  4756  010162                     	endif
  4757  010162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4758  010162  0E00               	movlw	low (__mediumconst shr (0+16))
  4759  010164  6EF8               	movwf	tblptru,c
  4760  010166                     	endif
  4761  010166  0008               	tblrd		*
  4762  010168  50F5               	movf	tablat,w,c
  4763  01016A  0900               	iorlw	0
  4764  01016C  A4D8               	btfss	status,2,c
  4765  01016E  D7E6               	goto	l4905
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;doprnt.c: 757: if(width > len)
  4769                           
  4770                           ; BSR set to: 0
  4771  010170  0100               	movlb	0	; () banked
  4772  010172  5194               	movf	sprintf@width& (0+255),w,b
  4773  010174  0100               	movlb	0	; () banked
  4774  010176  5D90               	subwf	sprintf@len& (0+255),w,b
  4775  010178  0100               	movlb	0	; () banked
  4776  01017A  5195               	movf	(sprintf@width+1)& (0+255),w,b
  4777  01017C  0100               	movlb	0	; () banked
  4778  01017E  5991               	subwfb	(sprintf@len+1)& (0+255),w,b
  4779  010180  B0D8               	btfsc	status,0,c
  4780  010182  D009               	goto	l4913
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;doprnt.c: 758: width -= len;
  4784  010184  0100               	movlb	0	; () banked
  4785  010186  5190               	movf	sprintf@len& (0+255),w,b
  4786  010188  0100               	movlb	0	; () banked
  4787  01018A  5F94               	subwf	sprintf@width& (0+255),f,b
  4788  01018C  0100               	movlb	0	; () banked
  4789  01018E  5191               	movf	(sprintf@len+1)& (0+255),w,b
  4790  010190  0100               	movlb	0	; () banked
  4791  010192  5B95               	subwfb	(sprintf@width+1)& (0+255),f,b
  4792  010194  D00F               	goto	l4919
  4793  010196                     l4913:
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;doprnt.c: 759: else
  4797                           ;doprnt.c: 760: width = 0;
  4798  010196  0E00               	movlw	0
  4799  010198  0100               	movlb	0	; () banked
  4800  01019A  6F95               	movwf	(sprintf@width+1)& (0+255),b
  4801  01019C  0E00               	movlw	0
  4802  01019E  6F94               	movwf	sprintf@width& (0+255),b
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;doprnt.c: 764: while(width--)
  4806  0101A0  D009               	goto	l4919
  4807  0101A2                     l4915:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4811  0101A2  C073  FFD9         	movff	sprintf@sp,fsr2l
  4812  0101A6  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  4813  0101AA  0E20               	movlw	32
  4814  0101AC  6EDF               	movwf	indf2,c
  4815                           
  4816                           ; BSR set to: 0
  4817  0101AE  0100               	movlb	0	; () banked
  4818  0101B0  4B73               	infsnz	sprintf@sp& (0+255),f,b
  4819  0101B2  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  4820  0101B4                     l4919:
  4821                           
  4822                           ; BSR set to: 0
  4823  0101B4  0100               	movlb	0	; () banked
  4824  0101B6  0794               	decf	sprintf@width& (0+255),f,b
  4825  0101B8  A0D8               	btfss	status,0,c
  4826  0101BA  0795               	decf	(sprintf@width+1)& (0+255),f,b
  4827  0101BC  0100               	movlb	0	; () banked
  4828  0101BE  2994               	incf	sprintf@width& (0+255),w,b
  4829  0101C0  E1F0               	bnz	l4915
  4830  0101C2  0100               	movlb	0	; () banked
  4831  0101C4  2995               	incf	(sprintf@width+1)& (0+255),w,b
  4832  0101C6  B4D8               	btfsc	status,2,c
  4833  0101C8  D014               	goto	l4927
  4834  0101CA  D7EB               	goto	l4915
  4835  0101CC                     l4921:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4839  0101CC  C08C  FFF6         	movff	sprintf@cp,tblptrl
  4840  0101D0  C08D  FFF7         	movff	sprintf@cp+1,tblptrh
  4841  0101D4                     	if	0	;tblptru may be non-zero
  4842  0101D4                     	endif
  4843  0101D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4844  0101D4  0E00               	movlw	low (__mediumconst shr (0+16))
  4845  0101D6  6EF8               	movwf	tblptru,c
  4846  0101D8                     	endif
  4847  0101D8  C073  FFD9         	movff	sprintf@sp,fsr2l
  4848  0101DC  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  4849  0101E0  0008               	tblrd		*
  4850  0101E2  CFF5 FFDF          	movff	tablat,indf2
  4851                           
  4852                           ; BSR set to: 0
  4853  0101E6  0100               	movlb	0	; () banked
  4854  0101E8  4B8C               	infsnz	sprintf@cp& (0+255),f,b
  4855  0101EA  2B8D               	incf	(sprintf@cp+1)& (0+255),f,b
  4856                           
  4857                           ; BSR set to: 0
  4858  0101EC  0100               	movlb	0	; () banked
  4859  0101EE  4B73               	infsnz	sprintf@sp& (0+255),f,b
  4860  0101F0  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  4861  0101F2                     l4927:
  4862                           
  4863                           ; BSR set to: 0
  4864  0101F2  0100               	movlb	0	; () banked
  4865  0101F4  0790               	decf	sprintf@len& (0+255),f,b
  4866  0101F6  A0D8               	btfss	status,0,c
  4867  0101F8  0791               	decf	(sprintf@len+1)& (0+255),f,b
  4868  0101FA  0100               	movlb	0	; () banked
  4869  0101FC  2990               	incf	sprintf@len& (0+255),w,b
  4870  0101FE  E1E6               	bnz	l4921
  4871  010200  0100               	movlb	0	; () banked
  4872  010202  2991               	incf	(sprintf@len+1)& (0+255),w,b
  4873  010204  B4D8               	btfsc	status,2,c
  4874  010206  D111               	goto	l5009
  4875  010208  D7E1               	goto	l4921
  4876  01020A                     l4931:
  4877  01020A  C075  FFF6         	movff	sprintf@f,tblptrl
  4878  01020E  C076  FFF7         	movff	sprintf@f+1,tblptrh
  4879  010212  0100               	movlb	0	; () banked
  4880  010214  4B75               	infsnz	sprintf@f& (0+255),f,b
  4881  010216  2B76               	incf	(sprintf@f+1)& (0+255),f,b
  4882  010218                     	if	0	;tblptru may be non-zero
  4883  010218                     	endif
  4884  010218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4885  010218  0E00               	movlw	low (__mediumconst shr (0+16))
  4886  01021A  6EF8               	movwf	tblptru,c
  4887  01021C                     	endif
  4888  01021C  0008               	tblrd		*
  4889  01021E  CFF5 F093          	movff	tablat,sprintf@c
  4890  010222  0100               	movlb	0	; () banked
  4891  010224  5193               	movf	sprintf@c& (0+255),w,b
  4892                           
  4893                           ; Switch size 1, requested type "space"
  4894                           ; Number of cases is 4, Range of values is 0 to 115
  4895                           ; switch strategies available:
  4896                           ; Name         Instructions Cycles
  4897                           ; simple_byte           13     7 (average)
  4898                           ;	Chosen strategy is simple_byte
  4899  010226  0A00               	xorlw	0	; case 0
  4900  010228  B4D8               	btfsc	status,2,c
  4901  01022A  D10F               	goto	l5011
  4902  01022C  0A64               	xorlw	100	; case 100
  4903  01022E  B4D8               	btfsc	status,2,c
  4904  010230  D007               	goto	l4933
  4905  010232  0A0D               	xorlw	13	; case 105
  4906  010234  B4D8               	btfsc	status,2,c
  4907  010236  D004               	goto	l4933
  4908  010238  0A1A               	xorlw	26	; case 115
  4909  01023A  B4D8               	btfsc	status,2,c
  4910  01023C  D760               	goto	l4895
  4911  01023E  D0F5               	goto	l5009
  4912  010240                     l4933:
  4913                           
  4914                           ;doprnt.c: 1253: {
  4915                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4916  010240  C08A  FFD9         	movff	sprintf@ap,fsr2l
  4917  010244  C08B  FFDA         	movff	sprintf@ap+1,fsr2h
  4918  010248  CFDE F08E          	movff	postinc2,sprintf@val
  4919  01024C  CFDD F08F          	movff	postdec2,sprintf@val+1
  4920  010250  0E02               	movlw	2
  4921  010252  0100               	movlb	0	; () banked
  4922  010254  278A               	addwf	sprintf@ap& (0+255),f,b
  4923  010256  0E00               	movlw	0
  4924  010258  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;doprnt.c: 1261: if((int)val < 0) {
  4928  01025A  0100               	movlb	0	; () banked
  4929  01025C  AF8F               	btfss	(sprintf@val+1)& (0+255),7,b
  4930  01025E  D008               	goto	l4943
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;doprnt.c: 1262: flag |= 0x03;
  4934  010260  0E03               	movlw	3
  4935  010262  0100               	movlb	0	; () banked
  4936  010264  1392               	iorwf	sprintf@flag& (0+255),f,b
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;doprnt.c: 1263: val = -val;
  4940  010266  0100               	movlb	0	; () banked
  4941  010268  6D8E               	negf	sprintf@val& (0+255),b
  4942  01026A  1F8F               	comf	(sprintf@val+1)& (0+255),f,b
  4943  01026C  B0D8               	btfsc	status,0,c
  4944  01026E  2B8F               	incf	(sprintf@val+1)& (0+255),f,b
  4945  010270                     l4943:
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;doprnt.c: 1264: }
  4949                           ;doprnt.c: 1266: }
  4950                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4951  010270  0E01               	movlw	1
  4952  010272  0100               	movlb	0	; () banked
  4953  010274  6F93               	movwf	sprintf@c& (0+255),b
  4954  010276                     l4945:
  4955                           
  4956                           ; BSR set to: 0
  4957  010276  0E05               	movlw	5
  4958  010278  0100               	movlb	0	; () banked
  4959  01027A  1993               	xorwf	sprintf@c& (0+255),w,b
  4960  01027C  B4D8               	btfsc	status,2,c
  4961  01027E  D019               	goto	l4957
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;doprnt.c: 1306: if(val < dpowers[c])
  4965                           
  4966                           ; BSR set to: 0
  4967                           
  4968                           ; BSR set to: 0
  4969  010280  0100               	movlb	0	; () banked
  4970  010282  5193               	movf	sprintf@c& (0+255),w,b
  4971  010284  0D02               	mullw	2
  4972  010286  0EE7               	movlw	low _dpowers
  4973  010288  24F3               	addwf	prodl,w,c
  4974  01028A  6EF6               	movwf	tblptrl,c
  4975  01028C  0EFD               	movlw	high _dpowers
  4976  01028E  20F4               	addwfc	prodh,w,c
  4977  010290  6EF7               	movwf	tblptrh,c
  4978  010292                     	if	1	;There are 3 active tblptr bytes
  4979  010292  6AF8               	clrf	tblptru,c
  4980  010294  0E00               	movlw	low (__mediumconst shr (0+16))
  4981  010296  22F8               	addwfc	tblptru,f,c
  4982  010298                     	endif
  4983  010298  0009               	tblrd		*+
  4984  01029A  50F5               	movf	tablat,w,c
  4985  01029C  0100               	movlb	0	; () banked
  4986  01029E  5D8E               	subwf	sprintf@val& (0+255),w,b
  4987  0102A0  0009               	tblrd		*+
  4988  0102A2  50F5               	movf	tablat,w,c
  4989  0102A4  0100               	movlb	0	; () banked
  4990  0102A6  598F               	subwfb	(sprintf@val+1)& (0+255),w,b
  4991  0102A8  A0D8               	btfss	status,0,c
  4992  0102AA  D003               	goto	l4957
  4993                           
  4994                           ; BSR set to: 0
  4995                           
  4996                           ; BSR set to: 0
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;doprnt.c: 1307: break;
  5000  0102AC  0100               	movlb	0	; () banked
  5001  0102AE  2B93               	incf	sprintf@c& (0+255),f,b
  5002  0102B0  D7E2               	goto	l4945
  5003  0102B2                     l4957:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5007  0102B2  0100               	movlb	0	; () banked
  5008  0102B4  5194               	movf	sprintf@width& (0+255),w,b
  5009  0102B6  0100               	movlb	0	; () banked
  5010  0102B8  1195               	iorwf	(sprintf@width+1)& (0+255),w,b
  5011  0102BA  B4D8               	btfsc	status,2,c
  5012  0102BC  D00B               	goto	l4963
  5013                           
  5014                           ; BSR set to: 0
  5015  0102BE  C092  F085         	movff	sprintf@flag,??_sprintf
  5016  0102C2  0E03               	movlw	3
  5017  0102C4  0100               	movlb	0	; () banked
  5018  0102C6  1785               	andwf	??_sprintf& (0+255),f,b
  5019  0102C8  B4D8               	btfsc	status,2,c
  5020  0102CA  D004               	goto	l4963
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;doprnt.c: 1346: width--;
  5024  0102CC  0100               	movlb	0	; () banked
  5025  0102CE  0794               	decf	sprintf@width& (0+255),f,b
  5026  0102D0  A0D8               	btfss	status,0,c
  5027  0102D2  0795               	decf	(sprintf@width+1)& (0+255),f,b
  5028  0102D4                     l4963:
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;doprnt.c: 1381: if(width > c)
  5032  0102D4  0E80               	movlw	128
  5033  0102D6  0100               	movlb	0	; () banked
  5034  0102D8  BF93               	btfsc	sprintf@c& (0+255),7,b
  5035  0102DA  0E7F               	movlw	127
  5036  0102DC  0100               	movlb	0	; () banked
  5037  0102DE  6F85               	movwf	??_sprintf& (0+255),b
  5038  0102E0  0100               	movlb	0	; () banked
  5039  0102E2  5194               	movf	sprintf@width& (0+255),w,b
  5040  0102E4  0100               	movlb	0	; () banked
  5041  0102E6  5D93               	subwf	sprintf@c& (0+255),w,b
  5042  0102E8  0100               	movlb	0	; () banked
  5043  0102EA  5195               	movf	(sprintf@width+1)& (0+255),w,b
  5044  0102EC  0A80               	xorlw	128
  5045  0102EE  0100               	movlb	0	; () banked
  5046  0102F0  5985               	subwfb	??_sprintf& (0+255),w,b
  5047  0102F2  B0D8               	btfsc	status,0,c
  5048  0102F4  D00B               	goto	l4967
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;doprnt.c: 1382: width -= c;
  5052  0102F6  0100               	movlb	0	; () banked
  5053  0102F8  5193               	movf	sprintf@c& (0+255),w,b
  5054  0102FA  0100               	movlb	0	; () banked
  5055  0102FC  5F94               	subwf	sprintf@width& (0+255),f,b
  5056  0102FE  0E00               	movlw	0
  5057  010300  0100               	movlb	0	; () banked
  5058  010302  BF93               	btfsc	sprintf@c& (0+255),7,b
  5059  010304  0EFF               	movlw	255
  5060  010306  0100               	movlb	0	; () banked
  5061  010308  5B95               	subwfb	(sprintf@width+1)& (0+255),f,b
  5062  01030A  D005               	goto	l4969
  5063  01030C                     l4967:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;doprnt.c: 1383: else
  5067                           ;doprnt.c: 1384: width = 0;
  5068  01030C  0E00               	movlw	0
  5069  01030E  0100               	movlb	0	; () banked
  5070  010310  6F95               	movwf	(sprintf@width+1)& (0+255),b
  5071  010312  0E00               	movlw	0
  5072  010314  6F94               	movwf	sprintf@width& (0+255),b
  5073  010316                     l4969:
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;doprnt.c: 1387: if(flag & 0x04) {
  5077  010316  0100               	movlb	0	; () banked
  5078  010318  A592               	btfss	sprintf@flag& (0+255),2,b
  5079  01031A  D024               	goto	l4985
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;doprnt.c: 1392: if(flag & 0x03)
  5083  01031C  C092  F085         	movff	sprintf@flag,??_sprintf
  5084  010320  0E03               	movlw	3
  5085  010322  0100               	movlb	0	; () banked
  5086  010324  1785               	andwf	??_sprintf& (0+255),f,b
  5087  010326  B4D8               	btfsc	status,2,c
  5088  010328  D009               	goto	l4977
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5092  01032A  C073  FFD9         	movff	sprintf@sp,fsr2l
  5093  01032E  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  5094  010332  0E2D               	movlw	45
  5095  010334  6EDF               	movwf	indf2,c
  5096                           
  5097                           ; BSR set to: 0
  5098  010336  0100               	movlb	0	; () banked
  5099  010338  4B73               	infsnz	sprintf@sp& (0+255),f,b
  5100  01033A  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  5101  01033C                     l4977:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;doprnt.c: 1415: if(width)
  5105  01033C  0100               	movlb	0	; () banked
  5106  01033E  5194               	movf	sprintf@width& (0+255),w,b
  5107  010340  0100               	movlb	0	; () banked
  5108  010342  1195               	iorwf	(sprintf@width+1)& (0+255),w,b
  5109  010344  B4D8               	btfsc	status,2,c
  5110  010346  D037               	goto	l4999
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5114                           
  5115                           ; BSR set to: 0
  5116                           
  5117                           ;doprnt.c: 1416: do
  5118  010348  C073  FFD9         	movff	sprintf@sp,fsr2l
  5119  01034C  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  5120  010350  0E30               	movlw	48
  5121  010352  6EDF               	movwf	indf2,c
  5122                           
  5123                           ; BSR set to: 0
  5124  010354  0100               	movlb	0	; () banked
  5125  010356  4B73               	infsnz	sprintf@sp& (0+255),f,b
  5126  010358  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;doprnt.c: 1418: while(--width);
  5130  01035A  0100               	movlb	0	; () banked
  5131  01035C  0794               	decf	sprintf@width& (0+255),f,b
  5132  01035E  A0D8               	btfss	status,0,c
  5133  010360  0795               	decf	(sprintf@width+1)& (0+255),f,b
  5134  010362  D7EC               	goto	l4977
  5135  010364                     l4985:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;doprnt.c: 1422: {
  5139                           ;doprnt.c: 1424: if(width
  5140                           ;doprnt.c: 1428: )
  5141  010364  0100               	movlb	0	; () banked
  5142  010366  5194               	movf	sprintf@width& (0+255),w,b
  5143  010368  0100               	movlb	0	; () banked
  5144  01036A  1195               	iorwf	(sprintf@width+1)& (0+255),w,b
  5145  01036C  B4D8               	btfsc	status,2,c
  5146  01036E  D013               	goto	l4993
  5147  010370                     l4987:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5151  010370  C073  FFD9         	movff	sprintf@sp,fsr2l
  5152  010374  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  5153  010378  0E20               	movlw	32
  5154  01037A  6EDF               	movwf	indf2,c
  5155                           
  5156                           ; BSR set to: 0
  5157  01037C  0100               	movlb	0	; () banked
  5158  01037E  4B73               	infsnz	sprintf@sp& (0+255),f,b
  5159  010380  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;doprnt.c: 1431: while(--width);
  5163  010382  0100               	movlb	0	; () banked
  5164  010384  0794               	decf	sprintf@width& (0+255),f,b
  5165  010386  A0D8               	btfss	status,0,c
  5166  010388  0795               	decf	(sprintf@width+1)& (0+255),f,b
  5167  01038A  0100               	movlb	0	; () banked
  5168  01038C  5194               	movf	sprintf@width& (0+255),w,b
  5169  01038E  0100               	movlb	0	; () banked
  5170  010390  1195               	iorwf	(sprintf@width+1)& (0+255),w,b
  5171  010392  A4D8               	btfss	status,2,c
  5172  010394  D7ED               	goto	l4987
  5173  010396                     l4993:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;doprnt.c: 1438: if(flag & 0x03)
  5177  010396  C092  F085         	movff	sprintf@flag,??_sprintf
  5178  01039A  0E03               	movlw	3
  5179  01039C  0100               	movlb	0	; () banked
  5180  01039E  1785               	andwf	??_sprintf& (0+255),f,b
  5181  0103A0  B4D8               	btfsc	status,2,c
  5182  0103A2  D009               	goto	l4999
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5186  0103A4  C073  FFD9         	movff	sprintf@sp,fsr2l
  5187  0103A8  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  5188  0103AC  0E2D               	movlw	45
  5189  0103AE  6EDF               	movwf	indf2,c
  5190                           
  5191                           ; BSR set to: 0
  5192  0103B0  0100               	movlb	0	; () banked
  5193  0103B2  4B73               	infsnz	sprintf@sp& (0+255),f,b
  5194  0103B4  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  5195  0103B6                     l4999:
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;doprnt.c: 1469: }
  5199                           ;doprnt.c: 1472: prec = c;
  5200  0103B6  C093  F089         	movff	sprintf@c,sprintf@prec
  5201                           
  5202                           ;doprnt.c: 1474: while(prec--) {
  5203  0103BA  D031               	goto	l5007
  5204  0103BC                     l5001:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;doprnt.c: 1478: {
  5208                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5209  0103BC  0100               	movlb	0	; () banked
  5210  0103BE  5189               	movf	sprintf@prec& (0+255),w,b
  5211  0103C0  0D02               	mullw	2
  5212  0103C2  0EE7               	movlw	low _dpowers
  5213  0103C4  24F3               	addwf	prodl,w,c
  5214  0103C6  6EF6               	movwf	tblptrl,c
  5215  0103C8  0EFD               	movlw	high _dpowers
  5216  0103CA  20F4               	addwfc	prodh,w,c
  5217  0103CC  6EF7               	movwf	tblptrh,c
  5218  0103CE                     	if	1	;There are 3 active tblptr bytes
  5219  0103CE  6AF8               	clrf	tblptru,c
  5220  0103D0  0E00               	movlw	low (__mediumconst shr (0+16))
  5221  0103D2  22F8               	addwfc	tblptru,f,c
  5222  0103D4                     	endif
  5223  0103D4  0009               	tblrd		*+
  5224  0103D6  CFF5 F06A          	movff	tablat,___lwdiv@divisor
  5225  0103DA  000A               	tblrd		*-
  5226  0103DC  CFF5 F06B          	movff	tablat,___lwdiv@divisor+1
  5227  0103E0  C08E  F068         	movff	sprintf@val,___lwdiv@dividend
  5228  0103E4  C08F  F069         	movff	sprintf@val+1,___lwdiv@dividend+1
  5229  0103E8  EC71  F093         	call	___lwdiv	;wreg free
  5230  0103EC  C068  F06F         	movff	?___lwdiv,___lwmod@dividend
  5231  0103F0  C069  F070         	movff	?___lwdiv+1,___lwmod@dividend+1
  5232  0103F4  0E00               	movlw	0
  5233  0103F6  0100               	movlb	0	; () banked
  5234  0103F8  6F72               	movwf	(___lwmod@divisor+1)& (0+255),b
  5235  0103FA  0E0A               	movlw	10
  5236  0103FC  6F71               	movwf	___lwmod@divisor& (0+255),b
  5237  0103FE  ECB8  F094         	call	___lwmod	;wreg free
  5238  010402  0100               	movlb	0	; () banked
  5239  010404  516F               	movf	?___lwmod& (0+255),w,b
  5240  010406  0F30               	addlw	48
  5241  010408  0100               	movlb	0	; () banked
  5242  01040A  6F93               	movwf	sprintf@c& (0+255),b
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;doprnt.c: 1523: }
  5246                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5247  01040C  C073  FFD9         	movff	sprintf@sp,fsr2l
  5248  010410  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  5249  010414  C093  FFDF         	movff	sprintf@c,indf2
  5250                           
  5251                           ; BSR set to: 0
  5252  010418  0100               	movlb	0	; () banked
  5253  01041A  4B73               	infsnz	sprintf@sp& (0+255),f,b
  5254  01041C  2B74               	incf	(sprintf@sp+1)& (0+255),f,b
  5255  01041E                     l5007:
  5256                           
  5257                           ; BSR set to: 0
  5258  01041E  0100               	movlb	0	; () banked
  5259  010420  0789               	decf	sprintf@prec& (0+255),f,b
  5260  010422  0100               	movlb	0	; () banked
  5261  010424  2989               	incf	sprintf@prec& (0+255),w,b
  5262  010426  A4D8               	btfss	status,2,c
  5263  010428  D7C9               	goto	l5001
  5264  01042A                     l5009:
  5265                           
  5266                           ; BSR set to: 0
  5267  01042A  C075  FFF6         	movff	sprintf@f,tblptrl
  5268  01042E  C076  FFF7         	movff	sprintf@f+1,tblptrh
  5269  010432  0100               	movlb	0	; () banked
  5270  010434  4B75               	infsnz	sprintf@f& (0+255),f,b
  5271  010436  2B76               	incf	(sprintf@f+1)& (0+255),f,b
  5272  010438                     	if	0	;tblptru may be non-zero
  5273  010438                     	endif
  5274  010438                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5275  010438  0E00               	movlw	low (__mediumconst shr (0+16))
  5276  01043A  6EF8               	movwf	tblptru,c
  5277  01043C                     	endif
  5278  01043C  0008               	tblrd		*
  5279  01043E  CFF5 F093          	movff	tablat,sprintf@c
  5280  010442  0100               	movlb	0	; () banked
  5281  010444  5193               	movf	sprintf@c& (0+255),w,b
  5282  010446  A4D8               	btfss	status,2,c
  5283  010448  D5E2               	goto	l4869
  5284  01044A                     l5011:
  5285                           
  5286                           ;doprnt.c: 1538: *sp = 0;
  5287  01044A  C073  FFD9         	movff	sprintf@sp,fsr2l
  5288  01044E  C074  FFDA         	movff	sprintf@sp+1,fsr2h
  5289  010452  0E00               	movlw	0
  5290  010454  6EDF               	movwf	indf2,c
  5291  010456  0012               	return	
  5292  010458                     __end_of_sprintf:
  5293                           	opt stack 0
  5294                           tblptru	equ	0xFF8
  5295                           tblptrh	equ	0xFF7
  5296                           tblptrl	equ	0xFF6
  5297                           tablat	equ	0xFF5
  5298                           prodh	equ	0xFF4
  5299                           prodl	equ	0xFF3
  5300                           intcon	equ	0xFF2
  5301                           postinc0	equ	0xFEE
  5302                           wreg	equ	0xFE8
  5303                           postinc1	equ	0xFE6
  5304                           postdec1	equ	0xFE5
  5305                           fsr1h	equ	0xFE2
  5306                           fsr1l	equ	0xFE1
  5307                           indf2	equ	0xFDF
  5308                           postinc2	equ	0xFDE
  5309                           postdec2	equ	0xFDD
  5310                           fsr2h	equ	0xFDA
  5311                           fsr2l	equ	0xFD9
  5312                           status	equ	0xFD8
  5313                           
  5314 ;; *************** function _isdigit *****************
  5315 ;; Defined at:
  5316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  c               1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  c               1   32[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;		None               void
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;Total ram usage:        3 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    4
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_sprintf
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text14
  5345  012C94                     __ptext14:
  5346                           	opt stack 0
  5347  012C94                     _isdigit:
  5348                           	opt stack 21
  5349                           
  5350                           ;incstack = 0
  5351                           ;isdigit@c stored from wreg
  5352  012C94  6E21               	movwf	isdigit@c,c
  5353  012C96  0E00               	movlw	0
  5354  012C98  6E20               	movwf	_isdigit$2792,c
  5355  012C9A  0E3A               	movlw	58
  5356  012C9C  6021               	cpfslt	isdigit@c,c
  5357  012C9E  D005               	goto	l4727
  5358  012CA0  0E2F               	movlw	47
  5359  012CA2  6421               	cpfsgt	isdigit@c,c
  5360  012CA4  D002               	goto	l4727
  5361  012CA6  0E01               	movlw	1
  5362  012CA8  6E20               	movwf	_isdigit$2792,c
  5363  012CAA                     l4727:
  5364  012CAA  C020  F01F         	movff	_isdigit$2792,??_isdigit
  5365  012CAE  301F               	rrcf	??_isdigit,w,c
  5366  012CB0  0012               	return	
  5367  012CB2                     __end_of_isdigit:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           intcon	equ	0xFF2
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postinc1	equ	0xFE6
  5379                           postdec1	equ	0xFE5
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           postdec2	equ	0xFDD
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function ___lwmod *****************
  5390 ;; Defined at:
  5391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  dividend        2   15[BANK0 ] unsigned int 
  5394 ;;  divisor         2   17[BANK0 ] unsigned int 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  counter         1   36[COMRAM] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2   15[BANK0 ] unsigned int 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5409 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5410 ;;Total ram usage:        5 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    4
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_ringbuf_put_num
  5417 ;;		_sprintf
  5418 ;;		_tx_sendn
  5419 ;;		_my_utoa
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text15
  5424  012970                     __ptext15:
  5425                           	opt stack 0
  5426  012970                     ___lwmod:
  5427                           	opt stack 24
  5428                           
  5429                           ;incstack = 0
  5430  012970  0100               	movlb	0	; () banked
  5431  012972  5171               	movf	___lwmod@divisor& (0+255),w,b
  5432  012974  0100               	movlb	0	; () banked
  5433  012976  1172               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5434  012978  B4D8               	btfsc	status,2,c
  5435  01297A  D023               	goto	l1158
  5436                           
  5437                           ; BSR set to: 0
  5438  01297C  0E01               	movlw	1
  5439  01297E  6E25               	movwf	___lwmod@counter,c
  5440  012980  D005               	goto	l4765
  5441  012982                     l4763:
  5442                           
  5443                           ; BSR set to: 0
  5444  012982  0100               	movlb	0	; () banked
  5445  012984  90D8               	bcf	status,0,c
  5446  012986  3771               	rlcf	___lwmod@divisor& (0+255),f,b
  5447  012988  3772               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5448  01298A  2A25               	incf	___lwmod@counter,f,c
  5449  01298C                     l4765:
  5450                           
  5451                           ; BSR set to: 0
  5452  01298C  0100               	movlb	0	; () banked
  5453  01298E  AF72               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5454  012990  D7F8               	goto	l4763
  5455  012992                     l4767:
  5456                           
  5457                           ; BSR set to: 0
  5458  012992  0100               	movlb	0	; () banked
  5459  012994  5171               	movf	___lwmod@divisor& (0+255),w,b
  5460  012996  0100               	movlb	0	; () banked
  5461  012998  5D6F               	subwf	___lwmod@dividend& (0+255),w,b
  5462  01299A  0100               	movlb	0	; () banked
  5463  01299C  5172               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5464  01299E  0100               	movlb	0	; () banked
  5465  0129A0  5970               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5466  0129A2  A0D8               	btfss	status,0,c
  5467  0129A4  D008               	goto	l4771
  5468                           
  5469                           ; BSR set to: 0
  5470  0129A6  0100               	movlb	0	; () banked
  5471  0129A8  5171               	movf	___lwmod@divisor& (0+255),w,b
  5472  0129AA  0100               	movlb	0	; () banked
  5473  0129AC  5F6F               	subwf	___lwmod@dividend& (0+255),f,b
  5474  0129AE  0100               	movlb	0	; () banked
  5475  0129B0  5172               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5476  0129B2  0100               	movlb	0	; () banked
  5477  0129B4  5B70               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5478  0129B6                     l4771:
  5479                           
  5480                           ; BSR set to: 0
  5481  0129B6  0100               	movlb	0	; () banked
  5482  0129B8  90D8               	bcf	status,0,c
  5483  0129BA  3372               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5484  0129BC  3371               	rrcf	___lwmod@divisor& (0+255),f,b
  5485                           
  5486                           ; BSR set to: 0
  5487  0129BE  2E25               	decfsz	___lwmod@counter,f,c
  5488  0129C0  D7E8               	goto	l4767
  5489  0129C2                     l1158:
  5490                           
  5491                           ; BSR set to: 0
  5492  0129C2  C06F  F06F         	movff	___lwmod@dividend,?___lwmod
  5493  0129C6  C070  F070         	movff	___lwmod@dividend+1,?___lwmod+1
  5494                           
  5495                           ; BSR set to: 0
  5496  0129CA  0012               	return		;funcret
  5497  0129CC                     __end_of___lwmod:
  5498                           	opt stack 0
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           intcon	equ	0xFF2
  5506                           postinc0	equ	0xFEE
  5507                           wreg	equ	0xFE8
  5508                           postinc1	equ	0xFE6
  5509                           postdec1	equ	0xFE5
  5510                           fsr1h	equ	0xFE2
  5511                           fsr1l	equ	0xFE1
  5512                           indf2	equ	0xFDF
  5513                           postinc2	equ	0xFDE
  5514                           postdec2	equ	0xFDD
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _ringbuf_put_str *****************
  5520 ;; Defined at:
  5521 ;;		line 58 in file "../My_header\My_ringbuf.h"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  rb              2   10[BANK0 ] PTR struct ringbuf
  5524 ;;		 -> tx_buf(8), 
  5525 ;;  str             2   12[BANK0 ] PTR const unsigned char 
  5526 ;;		 -> STR_5(8), print_time@str(30), STR_3(3), print_time_dec@str(10), 
  5527 ;;		 -> STR_2(4), STR_1(4), 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;		None               void
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5539 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5542 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5543 ;;Total ram usage:        4 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    6
  5546 ;; This function calls:
  5547 ;;		_ringbuf_put
  5548 ;; This function is called by:
  5549 ;;		_my_terminal_loop
  5550 ;;		_print_time
  5551 ;;		_command_at_hand
  5552 ;;		_print_time_dec
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text16
  5557  0128AE                     __ptext16:
  5558                           	opt stack 0
  5559  0128AE                     _ringbuf_put_str:
  5560                           	opt stack 23
  5561                           
  5562                           ;My_header\My_ringbuf.h: 59: while (*str) {
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;incstack = 0
  5566  0128AE  D01B               	goto	l4781
  5567  0128B0                     l4777:
  5568                           
  5569                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
  5570  0128B0  C06A  F021         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5571  0128B4  C06B  F022         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5572  0128B8  C06C  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5573  0128BC  C06D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5574  0128C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5575  0128C2  6EF8               	movwf	tblptru,c
  5576  0128C4  0E0E               	movlw	(high __ramtop+-1)
  5577  0128C6  64F7               	cpfsgt	tblptrh,c
  5578  0128C8  D003               	bra	u5217
  5579  0128CA  0008               	tblrd		*
  5580  0128CC  50F5               	movf	tablat,w,c
  5581  0128CE  D005               	bra	u5210
  5582  0128D0                     u5217:
  5583  0128D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5584  0128D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5585  0128D8  50E7               	movf	indf1,w,c
  5586  0128DA                     u5210:
  5587  0128DA  6E23               	movwf	ringbuf_put@asciicode,c
  5588  0128DC  ECA9  F08D         	call	_ringbuf_put	;wreg free
  5589  0128E0  0100               	movlb	0	; () banked
  5590  0128E2  4B6C               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5591  0128E4  2B6D               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5592  0128E6                     l4781:
  5593  0128E6  C06C  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5594  0128EA  C06D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5595  0128EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5596  0128F0  6EF8               	movwf	tblptru,c
  5597  0128F2  0E0E               	movlw	(high __ramtop+-1)
  5598  0128F4  64F7               	cpfsgt	tblptrh,c
  5599  0128F6  D003               	bra	u5227
  5600  0128F8  0008               	tblrd		*
  5601  0128FA  50F5               	movf	tablat,w,c
  5602  0128FC  D005               	bra	u5220
  5603  0128FE                     u5227:
  5604  0128FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  5605  012902  CFF7 FFE2          	movff	tblptrh,fsr1h
  5606  012906  50E7               	movf	indf1,w,c
  5607  012908                     u5220:
  5608  012908  0900               	iorlw	0
  5609  01290A  B4D8               	btfsc	status,2,c
  5610  01290C  0012               	return	
  5611  01290E  D7D0               	goto	l4777
  5612  012910                     __end_of_ringbuf_put_str:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           intcon	equ	0xFF2
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           indf1	equ	0xFE7
  5624                           postinc1	equ	0xFE6
  5625                           postdec1	equ	0xFE5
  5626                           fsr1h	equ	0xFE2
  5627                           fsr1l	equ	0xFE1
  5628                           indf2	equ	0xFDF
  5629                           postinc2	equ	0xFDE
  5630                           postdec2	equ	0xFDD
  5631                           fsr2h	equ	0xFDA
  5632                           fsr2l	equ	0xFD9
  5633                           status	equ	0xFD8
  5634                           
  5635 ;; *************** function _ringbuf_put *****************
  5636 ;; Defined at:
  5637 ;;		line 39 in file "../My_header\My_ringbuf.h"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  5640 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5641 ;;  asciicode       1   34[COMRAM] unsigned char 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;		None               void
  5646 ;; Registers used:
  5647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5657 ;;Total ram usage:        7 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    5
  5660 ;; This function calls:
  5661 ;;		_ringbuf_num
  5662 ;; This function is called by:
  5663 ;;		_ringbuf_put_num
  5664 ;;		_ringbuf_put_str
  5665 ;;		_tx_sends
  5666 ;;		_my_terminal_loop
  5667 ;;		_tx_send
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text17
  5672  011B52                     __ptext17:
  5673                           	opt stack 0
  5674  011B52                     _ringbuf_put:
  5675                           	opt stack 23
  5676                           
  5677                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  5678                           
  5679                           ;incstack = 0
  5680  011B52  C021  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  5681  011B56  C022  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5682  011B5A  EC6F  F08C         	call	_ringbuf_num	;wreg free
  5683  011B5E  EE20 F002          	lfsr	2,2
  5684  011B62  5021               	movf	ringbuf_put@rb,w,c
  5685  011B64  26D9               	addwf	fsr2l,f,c
  5686  011B66  5022               	movf	ringbuf_put@rb+1,w,c
  5687  011B68  22DA               	addwfc	fsr2h,f,c
  5688  011B6A  50DE               	movf	postinc2,w,c
  5689  011B6C  5C1F               	subwf	?_ringbuf_num,w,c
  5690  011B6E  50DE               	movf	postinc2,w,c
  5691  011B70  5820               	subwfb	?_ringbuf_num+1,w,c
  5692  011B72  B0D8               	btfsc	status,0,c
  5693  011B74  0012               	return	
  5694                           
  5695                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  5696  011B76  EE20 F004          	lfsr	2,4
  5697  011B7A  5021               	movf	ringbuf_put@rb,w,c
  5698  011B7C  26D9               	addwf	fsr2l,f,c
  5699  011B7E  5022               	movf	ringbuf_put@rb+1,w,c
  5700  011B80  22DA               	addwfc	fsr2h,f,c
  5701  011B82  CFDE F066          	movff	postinc2,??_ringbuf_put
  5702  011B86  CFDD F067          	movff	postdec2,??_ringbuf_put+1
  5703  011B8A  C021  FFD9         	movff	ringbuf_put@rb,fsr2l
  5704  011B8E  C022  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5705  011B92  CFDE F068          	movff	postinc2,??_ringbuf_put+2
  5706  011B96  CFDD F069          	movff	postdec2,??_ringbuf_put+3
  5707  011B9A  0100               	movlb	0	; () banked
  5708  011B9C  5166               	movf	??_ringbuf_put& (0+255),w,b
  5709  011B9E  0100               	movlb	0	; () banked
  5710  011BA0  2568               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5711  011BA2  6ED9               	movwf	fsr2l,c
  5712  011BA4  0100               	movlb	0	; () banked
  5713  011BA6  5167               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5714  011BA8  0100               	movlb	0	; () banked
  5715  011BAA  2169               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5716  011BAC  6EDA               	movwf	fsr2h,c
  5717  011BAE  C023  FFDF         	movff	ringbuf_put@asciicode,indf2
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  5721  011BB2  EE20 F002          	lfsr	2,2
  5722  011BB6  5021               	movf	ringbuf_put@rb,w,c
  5723  011BB8  26D9               	addwf	fsr2l,f,c
  5724  011BBA  5022               	movf	ringbuf_put@rb+1,w,c
  5725  011BBC  22DA               	addwfc	fsr2h,f,c
  5726  011BBE  EE10 F004          	lfsr	1,4
  5727  011BC2  5021               	movf	ringbuf_put@rb,w,c
  5728  011BC4  26E1               	addwf	fsr1l,f,c
  5729  011BC6  5022               	movf	ringbuf_put@rb+1,w,c
  5730  011BC8  22E2               	addwfc	fsr1h,f,c
  5731  011BCA  CFE6 F068          	movff	postinc1,??_ringbuf_put+2
  5732  011BCE  CFE5 F069          	movff	postdec1,??_ringbuf_put+3
  5733  011BD2  0E01               	movlw	1
  5734  011BD4  0100               	movlb	0	; () banked
  5735  011BD6  2768               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  5736  011BD8  0E00               	movlw	0
  5737  011BDA  2369               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  5738  011BDC  50DE               	movf	postinc2,w,c
  5739  011BDE  0100               	movlb	0	; () banked
  5740  011BE0  5D68               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  5741  011BE2  50DE               	movf	postinc2,w,c
  5742  011BE4  0100               	movlb	0	; () banked
  5743  011BE6  5969               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  5744  011BE8  B0D8               	btfsc	status,0,c
  5745  011BEA  D00A               	goto	l4669
  5746                           
  5747                           ; BSR set to: 0
  5748  011BEC  EE20 F004          	lfsr	2,4
  5749  011BF0  5021               	movf	ringbuf_put@rb,w,c
  5750  011BF2  26D9               	addwf	fsr2l,f,c
  5751  011BF4  5022               	movf	ringbuf_put@rb+1,w,c
  5752  011BF6  22DA               	addwfc	fsr2h,f,c
  5753  011BF8  2ADE               	incf	postinc2,f,c
  5754  011BFA  0E00               	movlw	0
  5755  011BFC  22DD               	addwfc	postdec2,f,c
  5756  011BFE  0012               	return	
  5757  011C00                     l4669:
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  5761  011C00  EE20 F004          	lfsr	2,4
  5762  011C04  5021               	movf	ringbuf_put@rb,w,c
  5763  011C06  26D9               	addwf	fsr2l,f,c
  5764  011C08  5022               	movf	ringbuf_put@rb+1,w,c
  5765  011C0A  22DA               	addwfc	fsr2h,f,c
  5766  011C0C  0E00               	movlw	0
  5767  011C0E  6EDE               	movwf	postinc2,c
  5768  011C10  0E00               	movlw	0
  5769  011C12  6EDD               	movwf	postdec2,c
  5770                           
  5771                           ; BSR set to: 0
  5772  011C14  0012               	return	
  5773  011C16                     __end_of_ringbuf_put:
  5774                           	opt stack 0
  5775                           tblptru	equ	0xFF8
  5776                           tblptrh	equ	0xFF7
  5777                           tblptrl	equ	0xFF6
  5778                           tablat	equ	0xFF5
  5779                           prodh	equ	0xFF4
  5780                           prodl	equ	0xFF3
  5781                           intcon	equ	0xFF2
  5782                           postinc0	equ	0xFEE
  5783                           wreg	equ	0xFE8
  5784                           indf1	equ	0xFE7
  5785                           postinc1	equ	0xFE6
  5786                           postdec1	equ	0xFE5
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           postdec2	equ	0xFDD
  5792                           fsr2h	equ	0xFDA
  5793                           fsr2l	equ	0xFD9
  5794                           status	equ	0xFD8
  5795                           
  5796 ;; *************** function _ringbuf_num *****************
  5797 ;; Defined at:
  5798 ;;		line 31 in file "../My_header\My_ringbuf.h"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  5801 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  2   30[COMRAM] unsigned int 
  5806 ;; Registers used:
  5807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5816 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5817 ;;Total ram usage:        8 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    4
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_ringbuf_put
  5824 ;;		_ringbuf_pop
  5825 ;;		_ringbuf_backspace
  5826 ;;		_my_terminal_loop
  5827 ;;		_main
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text18
  5832  0118DE                     __ptext18:
  5833                           	opt stack 0
  5834  0118DE                     _ringbuf_num:
  5835                           	opt stack 26
  5836                           
  5837                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  5838                           
  5839                           ;incstack = 0
  5840  0118DE  EE20 F006          	lfsr	2,6
  5841  0118E2  501F               	movf	ringbuf_num@rb,w,c
  5842  0118E4  26D9               	addwf	fsr2l,f,c
  5843  0118E6  5020               	movf	ringbuf_num@rb+1,w,c
  5844  0118E8  22DA               	addwfc	fsr2h,f,c
  5845  0118EA  EE10 F004          	lfsr	1,4
  5846  0118EE  501F               	movf	ringbuf_num@rb,w,c
  5847  0118F0  26E1               	addwf	fsr1l,f,c
  5848  0118F2  5020               	movf	ringbuf_num@rb+1,w,c
  5849  0118F4  22E2               	addwfc	fsr1h,f,c
  5850  0118F6  50DE               	movf	postinc2,w,c
  5851  0118F8  5CE6               	subwf	postinc1,w,c
  5852  0118FA  50DE               	movf	postinc2,w,c
  5853  0118FC  58E6               	subwfb	postinc1,w,c
  5854  0118FE  A0D8               	btfss	status,0,c
  5855  011900  D024               	goto	l4565
  5856                           
  5857                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  5858  011902  EE20 F004          	lfsr	2,4
  5859  011906  501F               	movf	ringbuf_num@rb,w,c
  5860  011908  26D9               	addwf	fsr2l,f,c
  5861  01190A  5020               	movf	ringbuf_num@rb+1,w,c
  5862  01190C  22DA               	addwfc	fsr2h,f,c
  5863  01190E  CFDE F060          	movff	postinc2,??_ringbuf_num
  5864  011912  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  5865  011916  EE20 F006          	lfsr	2,6
  5866  01191A  501F               	movf	ringbuf_num@rb,w,c
  5867  01191C  26D9               	addwf	fsr2l,f,c
  5868  01191E  5020               	movf	ringbuf_num@rb+1,w,c
  5869  011920  22DA               	addwfc	fsr2h,f,c
  5870  011922  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  5871  011926  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  5872  01192A  0100               	movlb	0	; () banked
  5873  01192C  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  5874  01192E  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  5875  011930  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  5876  011932  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  5877  011934  0100               	movlb	0	; () banked
  5878  011936  5160               	movf	??_ringbuf_num& (0+255),w,b
  5879  011938  0100               	movlb	0	; () banked
  5880  01193A  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  5881  01193C  6E1F               	movwf	?_ringbuf_num,c
  5882  01193E  0100               	movlb	0	; () banked
  5883  011940  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  5884  011942  0100               	movlb	0	; () banked
  5885  011944  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  5886  011946  6E20               	movwf	?_ringbuf_num+1,c
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;My_header\My_ringbuf.h: 34: } else {
  5890                           
  5891                           ; BSR set to: 0
  5892  011948  0012               	return	
  5893  01194A                     l4565:
  5894                           
  5895                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  5896  01194A  EE20 F004          	lfsr	2,4
  5897  01194E  501F               	movf	ringbuf_num@rb,w,c
  5898  011950  26D9               	addwf	fsr2l,f,c
  5899  011952  5020               	movf	ringbuf_num@rb+1,w,c
  5900  011954  22DA               	addwfc	fsr2h,f,c
  5901  011956  CFDE F060          	movff	postinc2,??_ringbuf_num
  5902  01195A  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  5903  01195E  EE20 F002          	lfsr	2,2
  5904  011962  501F               	movf	ringbuf_num@rb,w,c
  5905  011964  26D9               	addwf	fsr2l,f,c
  5906  011966  5020               	movf	ringbuf_num@rb+1,w,c
  5907  011968  22DA               	addwfc	fsr2h,f,c
  5908  01196A  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  5909  01196E  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  5910  011972  EE20 F006          	lfsr	2,6
  5911  011976  501F               	movf	ringbuf_num@rb,w,c
  5912  011978  26D9               	addwf	fsr2l,f,c
  5913  01197A  5020               	movf	ringbuf_num@rb+1,w,c
  5914  01197C  22DA               	addwfc	fsr2h,f,c
  5915  01197E  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  5916  011982  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  5917  011986  0100               	movlb	0	; () banked
  5918  011988  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  5919  01198A  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  5920  01198C  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  5921  01198E  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  5922  011990  0100               	movlb	0	; () banked
  5923  011992  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  5924  011994  0100               	movlb	0	; () banked
  5925  011996  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  5926  011998  0100               	movlb	0	; () banked
  5927  01199A  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  5928  01199C  0100               	movlb	0	; () banked
  5929  01199E  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  5930  0119A0  0100               	movlb	0	; () banked
  5931  0119A2  5160               	movf	??_ringbuf_num& (0+255),w,b
  5932  0119A4  0100               	movlb	0	; () banked
  5933  0119A6  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  5934  0119A8  6E1F               	movwf	?_ringbuf_num,c
  5935  0119AA  0100               	movlb	0	; () banked
  5936  0119AC  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  5937  0119AE  0100               	movlb	0	; () banked
  5938  0119B0  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  5939  0119B2  6E20               	movwf	?_ringbuf_num+1,c
  5940                           
  5941                           ; BSR set to: 0
  5942  0119B4  0012               	return	
  5943  0119B6                     __end_of_ringbuf_num:
  5944                           	opt stack 0
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           intcon	equ	0xFF2
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           indf1	equ	0xFE7
  5955                           postinc1	equ	0xFE6
  5956                           postdec1	equ	0xFE5
  5957                           fsr1h	equ	0xFE2
  5958                           fsr1l	equ	0xFE1
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _RTCC_from_caltime *****************
  5967 ;; Defined at:
  5968 ;;		line 236 in file "../My_header\My_RTCC.h"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  ct              2   54[BANK0 ] PTR struct .
  5971 ;;		 -> caltime_now(7), 
  5972 ;;  ep              2   56[BANK0 ] PTR unsigned long 
  5973 ;;		 -> epoch_now(4), 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;		None               void
  5978 ;; Registers used:
  5979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;Total ram usage:        4 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    7
  5992 ;; This function calls:
  5993 ;;		_caltime_to_RTCC
  5994 ;;		_caltime_to_epoch
  5995 ;;		_epoch_to_caltime
  5996 ;; This function is called by:
  5997 ;;		_command_at_hand
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text19
  6002  012B2E                     __ptext19:
  6003                           	opt stack 0
  6004  012B2E                     _RTCC_from_caltime:
  6005                           	opt stack 19
  6006                           
  6007                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;incstack = 0
  6011  012B2E  C096  F071         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  6012  012B32  C097  F072         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  6013  012B36  C098  F073         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  6014  012B3A  C099  F074         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  6015  012B3E  EC21  F087         	call	_caltime_to_epoch	;wreg free
  6016                           
  6017                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  6018  012B42  C096  F086         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  6019  012B46  C097  F087         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  6020  012B4A  C098  F088         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  6021  012B4E  C099  F089         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  6022  012B52  ECB2  F08A         	call	_epoch_to_caltime	;wreg free
  6023                           
  6024                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  6025  012B56  C096  F024         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  6026  012B5A  C097  F025         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  6027  012B5E  EC0B  F08E         	call	_caltime_to_RTCC	;wreg free
  6028  012B62  0012               	return		;funcret
  6029  012B64                     __end_of_RTCC_from_caltime:
  6030                           	opt stack 0
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           intcon	equ	0xFF2
  6038                           postinc0	equ	0xFEE
  6039                           wreg	equ	0xFE8
  6040                           indf1	equ	0xFE7
  6041                           postinc1	equ	0xFE6
  6042                           postdec1	equ	0xFE5
  6043                           fsr1h	equ	0xFE2
  6044                           fsr1l	equ	0xFE1
  6045                           indf2	equ	0xFDF
  6046                           postinc2	equ	0xFDE
  6047                           postdec2	equ	0xFDD
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052 ;; *************** function _main_init *****************
  6053 ;; Defined at:
  6054 ;;		line 275 in file "PIC18F27J53-killifish_light04.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;		None               void
  6061 ;; Registers used:
  6062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6072 ;;Total ram usage:        0 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    5
  6075 ;; This function calls:
  6076 ;;		_ADC_init
  6077 ;;		_OSC_init
  6078 ;;		_PWM_init
  6079 ;;		_RTCC_init
  6080 ;;		_UART_init
  6081 ;;		_ringbuf_init
  6082 ;;		_timer0_init
  6083 ;;		_timer1_init
  6084 ;;		_timer3_init
  6085 ;; This function is called by:
  6086 ;;		_main
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text20
  6091  0125E0                     __ptext20:
  6092                           	opt stack 0
  6093  0125E0                     _main_init:
  6094                           	opt stack 25
  6095                           
  6096                           ;PIC18F27J53-killifish_light04.c: 276: OSC_init();
  6097                           
  6098                           ;incstack = 0
  6099  0125E0  EC82  F096         	call	_OSC_init	;wreg free
  6100                           
  6101                           ;PIC18F27J53-killifish_light04.c: 277: TRISA = 0b11100111;
  6102  0125E4  0EE7               	movlw	231
  6103  0125E6  6E92               	movwf	3986,c	;volatile
  6104                           
  6105                           ;PIC18F27J53-killifish_light04.c: 278: TRISB = 0b00000000;
  6106  0125E8  0E00               	movlw	0
  6107  0125EA  6E93               	movwf	3987,c	;volatile
  6108                           
  6109                           ;PIC18F27J53-killifish_light04.c: 279: TRISC = 0b10111010;
  6110  0125EC  0EBA               	movlw	186
  6111  0125EE  6E94               	movwf	3988,c	;volatile
  6112                           
  6113                           ;PIC18F27J53-killifish_light04.c: 280: ANCON0 = 0b11111000;
  6114  0125F0  0EF8               	movlw	248
  6115  0125F2  010F               	movlb	15	; () banked
  6116  0125F4  6F48               	movwf	72,b	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;PIC18F27J53-killifish_light04.c: 281: ANCON1 = 0b00011111;
  6120  0125F6  0E1F               	movlw	31
  6121  0125F8  010F               	movlb	15	; () banked
  6122  0125FA  6F49               	movwf	73,b	;volatile
  6123                           
  6124                           ; BSR set to: 15
  6125                           ;PIC18F27J53-killifish_light04.c: 282: INTCON2bits.RBPU = 0;
  6126  0125FC  9EF1               	bcf	intcon2,7,c	;volatile
  6127                           
  6128                           ; BSR set to: 15
  6129                           ;PIC18F27J53-killifish_light04.c: 284: timer0_init(8);
  6130  0125FE  0E08               	movlw	8
  6131  012600  ECB2  F095         	call	_timer0_init
  6132                           
  6133                           ;PIC18F27J53-killifish_light04.c: 285: timer1_init(0, 2);
  6134  012604  0E02               	movlw	2
  6135  012606  6E1F               	movwf	timer1_init@clock_select,c
  6136  012608  0E00               	movlw	0
  6137  01260A  EC56  F095         	call	_timer1_init
  6138                           
  6139                           ;PIC18F27J53-killifish_light04.c: 286: timer3_init(2);
  6140  01260E  0E02               	movlw	2
  6141  012610  ECE1  F095         	call	_timer3_init
  6142                           
  6143                           ;PIC18F27J53-killifish_light04.c: 287: ADC_init(0);
  6144  012614  0E00               	movlw	0
  6145  012616  EC68  F096         	call	_ADC_init
  6146                           
  6147                           ;PIC18F27J53-killifish_light04.c: 288: RTCC_init();
  6148  01261A  ECCA  F095         	call	_RTCC_init	;wreg free
  6149                           
  6150                           ;PIC18F27J53-killifish_light04.c: 289: PWM_init(250);
  6151  01261E  0EFA               	movlw	250
  6152  012620  EC86  F08F         	call	_PWM_init
  6153                           
  6154                           ;PIC18F27J53-killifish_light04.c: 291: UART_init();
  6155  012624  EC3A  F096         	call	_UART_init	;wreg free
  6156                           
  6157                           ;PIC18F27J53-killifish_light04.c: 292: static uint8_t txbuf[1000];
  6158                           ;PIC18F27J53-killifish_light04.c: 293: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  6159  012628  0E2D               	movlw	low _tx_buf
  6160  01262A  6E1F               	movwf	ringbuf_init@rb,c
  6161  01262C  0E00               	movlw	high _tx_buf
  6162  01262E  6E20               	movwf	ringbuf_init@rb+1,c
  6163  012630  0EFA               	movlw	low main_init@txbuf
  6164  012632  6E21               	movwf	ringbuf_init@internal_buf,c
  6165  012634  0E02               	movlw	high main_init@txbuf
  6166  012636  6E22               	movwf	ringbuf_init@internal_buf+1,c
  6167  012638  0E03               	movlw	3
  6168  01263A  6E24               	movwf	ringbuf_init@bufsize+1,c
  6169  01263C  0EE8               	movlw	232
  6170  01263E  6E23               	movwf	ringbuf_init@bufsize,c
  6171  012640  ECE6  F094         	call	_ringbuf_init	;wreg free
  6172                           
  6173                           ;PIC18F27J53-killifish_light04.c: 294: static uint8_t rxbuf[250];
  6174                           ;PIC18F27J53-killifish_light04.c: 295: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  6175  012644  0EE1               	movlw	low _rx_buf
  6176  012646  6E1F               	movwf	ringbuf_init@rb,c
  6177  012648  0E00               	movlw	high _rx_buf
  6178  01264A  6E20               	movwf	ringbuf_init@rb+1,c
  6179  01264C  0E00               	movlw	low main_init@rxbuf
  6180  01264E  6E21               	movwf	ringbuf_init@internal_buf,c
  6181  012650  0E02               	movlw	high main_init@rxbuf
  6182  012652  6E22               	movwf	ringbuf_init@internal_buf+1,c
  6183  012654  0E00               	movlw	0
  6184  012656  6E24               	movwf	ringbuf_init@bufsize+1,c
  6185  012658  0EFA               	movlw	250
  6186  01265A  6E23               	movwf	ringbuf_init@bufsize,c
  6187  01265C  ECE6  F094         	call	_ringbuf_init	;wreg free
  6188  012660  0012               	return		;funcret
  6189  012662                     __end_of_main_init:
  6190                           	opt stack 0
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           intcon2	equ	0xFF1
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           indf1	equ	0xFE7
  6202                           postinc1	equ	0xFE6
  6203                           postdec1	equ	0xFE5
  6204                           fsr1h	equ	0xFE2
  6205                           fsr1l	equ	0xFE1
  6206                           indf2	equ	0xFDF
  6207                           postinc2	equ	0xFDE
  6208                           postdec2	equ	0xFDD
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _timer3_init *****************
  6214 ;; Defined at:
  6215 ;;		line 85 in file "../My_header\My_header.h"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  prescaler       1    wreg     unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  prescaler       1   31[COMRAM] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;		None               void
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6233 ;;Total ram usage:        2 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    4
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_main_init
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text21
  6244  012BC2                     __ptext21:
  6245                           	opt stack 0
  6246  012BC2                     _timer3_init:
  6247                           	opt stack 25
  6248                           
  6249                           ;incstack = 0
  6250                           ;timer3_init@prescaler stored from wreg
  6251  012BC2  6E20               	movwf	timer3_init@prescaler,c
  6252                           
  6253                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  6254  012BC4  0E3F               	movlw	-193
  6255  012BC6  1679               	andwf	3961,f,c	;volatile
  6256                           
  6257                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  6258  012BC8  9679               	bcf	3961,3,c	;volatile
  6259                           
  6260                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  6261  012BCA  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  6262  012BCE  3A1F               	swapf	??_timer3_init,f,c
  6263  012BD0  5079               	movf	3961,w,c	;volatile
  6264  012BD2  181F               	xorwf	??_timer3_init,w,c
  6265  012BD4  0BCF               	andlw	-49
  6266  012BD6  181F               	xorwf	??_timer3_init,w,c
  6267  012BD8  6E79               	movwf	3961,c	;volatile
  6268                           
  6269                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  6270  012BDA  9E79               	bcf	3961,7,c	;volatile
  6271                           
  6272                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  6273  012BDC  8079               	bsf	3961,0,c	;volatile
  6274                           
  6275                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  6276  012BDE  92A2               	bcf	4002,1,c	;volatile
  6277                           
  6278                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  6279  012BE0  92A1               	bcf	4001,1,c	;volatile
  6280                           
  6281                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  6282  012BE2  82A0               	bsf	4000,1,c	;volatile
  6283                           
  6284                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  6285  012BE4  8CF2               	bsf	intcon,6,c	;volatile
  6286  012BE6  0012               	return		;funcret
  6287  012BE8                     __end_of_timer3_init:
  6288                           	opt stack 0
  6289                           tblptru	equ	0xFF8
  6290                           tblptrh	equ	0xFF7
  6291                           tblptrl	equ	0xFF6
  6292                           tablat	equ	0xFF5
  6293                           prodh	equ	0xFF4
  6294                           prodl	equ	0xFF3
  6295                           intcon	equ	0xFF2
  6296                           intcon2	equ	0xFF1
  6297                           postinc0	equ	0xFEE
  6298                           wreg	equ	0xFE8
  6299                           indf1	equ	0xFE7
  6300                           postinc1	equ	0xFE6
  6301                           postdec1	equ	0xFE5
  6302                           fsr1h	equ	0xFE2
  6303                           fsr1l	equ	0xFE1
  6304                           indf2	equ	0xFDF
  6305                           postinc2	equ	0xFDE
  6306                           postdec2	equ	0xFDD
  6307                           fsr2h	equ	0xFDA
  6308                           fsr2l	equ	0xFD9
  6309                           status	equ	0xFD8
  6310                           
  6311 ;; *************** function _timer1_init *****************
  6312 ;; Defined at:
  6313 ;;		line 54 in file "../My_header\My_header.h"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  prescaler       1    wreg     unsigned char 
  6316 ;;  clock_select    1   30[COMRAM] unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  prescaler       1   32[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;		None               void
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6328 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;Total ram usage:        3 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    4
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_main_init
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text22
  6343  012AAC                     __ptext22:
  6344                           	opt stack 0
  6345  012AAC                     _timer1_init:
  6346                           	opt stack 25
  6347                           
  6348                           ;incstack = 0
  6349                           ;timer1_init@prescaler stored from wreg
  6350  012AAC  6E21               	movwf	timer1_init@prescaler,c
  6351                           
  6352                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  6353  012AAE  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  6354  012AB2  3A20               	swapf	??_timer1_init,f,c
  6355  012AB4  4620               	rlncf	??_timer1_init,f,c
  6356  012AB6  4620               	rlncf	??_timer1_init,f,c
  6357  012AB8  50CD               	movf	4045,w,c	;volatile
  6358  012ABA  1820               	xorwf	??_timer1_init,w,c
  6359  012ABC  0B3F               	andlw	-193
  6360  012ABE  1820               	xorwf	??_timer1_init,w,c
  6361  012AC0  6ECD               	movwf	4045,c	;volatile
  6362                           
  6363                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6364  012AC2  0E02               	movlw	2
  6365  012AC4  181F               	xorwf	timer1_init@clock_select,w,c
  6366  012AC6  A4D8               	btfss	status,2,c
  6367  012AC8  D002               	goto	l146
  6368  012ACA  86CD               	bsf	4045,3,c	;volatile
  6369  012ACC  D001               	goto	l3653
  6370  012ACE                     l146:
  6371                           
  6372                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  6373  012ACE  96CD               	bcf	4045,3,c	;volatile
  6374  012AD0                     l3653:
  6375                           
  6376                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  6377  012AD0  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  6378  012AD4  3A20               	swapf	??_timer1_init,f,c
  6379  012AD6  50CD               	movf	4045,w,c	;volatile
  6380  012AD8  1820               	xorwf	??_timer1_init,w,c
  6381  012ADA  0BCF               	andlw	-49
  6382  012ADC  1820               	xorwf	??_timer1_init,w,c
  6383  012ADE  6ECD               	movwf	4045,c	;volatile
  6384                           
  6385                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  6386  012AE0  84CD               	bsf	4045,2,c	;volatile
  6387                           
  6388                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  6389  012AE2  92CD               	bcf	4045,1,c	;volatile
  6390                           
  6391                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  6392  012AE4  80CD               	bsf	4045,0,c	;volatile
  6393                           
  6394                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  6395  012AE6  909F               	bcf	3999,0,c	;volatile
  6396                           
  6397                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  6398  012AE8  909E               	bcf	3998,0,c	;volatile
  6399                           
  6400                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  6401  012AEA  809D               	bsf	3997,0,c	;volatile
  6402                           
  6403                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  6404  012AEC  8CF2               	bsf	intcon,6,c	;volatile
  6405  012AEE  0012               	return		;funcret
  6406  012AF0                     __end_of_timer1_init:
  6407                           	opt stack 0
  6408                           tblptru	equ	0xFF8
  6409                           tblptrh	equ	0xFF7
  6410                           tblptrl	equ	0xFF6
  6411                           tablat	equ	0xFF5
  6412                           prodh	equ	0xFF4
  6413                           prodl	equ	0xFF3
  6414                           intcon	equ	0xFF2
  6415                           intcon2	equ	0xFF1
  6416                           postinc0	equ	0xFEE
  6417                           wreg	equ	0xFE8
  6418                           indf1	equ	0xFE7
  6419                           postinc1	equ	0xFE6
  6420                           postdec1	equ	0xFE5
  6421                           fsr1h	equ	0xFE2
  6422                           fsr1l	equ	0xFE1
  6423                           indf2	equ	0xFDF
  6424                           postinc2	equ	0xFDE
  6425                           postdec2	equ	0xFDD
  6426                           fsr2h	equ	0xFDA
  6427                           fsr2l	equ	0xFD9
  6428                           status	equ	0xFD8
  6429                           
  6430 ;; *************** function _timer0_init *****************
  6431 ;; Defined at:
  6432 ;;		line 15 in file "../My_header\My_header.h"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  prescaler       1    wreg     unsigned char 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  prescaler       1   31[COMRAM] unsigned char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;		None               void
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6450 ;;Total ram usage:        2 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    4
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_main_init
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text23
  6461  012B64                     __ptext23:
  6462                           	opt stack 0
  6463  012B64                     _timer0_init:
  6464                           	opt stack 25
  6465                           
  6466                           ;incstack = 0
  6467                           ;timer0_init@prescaler stored from wreg
  6468  012B64  6E20               	movwf	timer0_init@prescaler,c
  6469                           
  6470                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  6471  012B66  8ED5               	bsf	4053,7,c	;volatile
  6472                           
  6473                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  6474  012B68  8CD5               	bsf	4053,6,c	;volatile
  6475                           
  6476                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  6477  012B6A  9AD5               	bcf	4053,5,c	;volatile
  6478                           
  6479                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  6480  012B6C  5020               	movf	timer0_init@prescaler,w,c
  6481  012B6E  A4D8               	btfss	status,2,c
  6482  012B70  D002               	goto	l141
  6483                           
  6484                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  6485  012B72  86D5               	bsf	4053,3,c	;volatile
  6486                           
  6487                           ;My_header\My_header.h: 21: } else {
  6488  012B74  D00A               	goto	l3641
  6489  012B76                     l141:
  6490                           
  6491                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  6492  012B76  96D5               	bcf	4053,3,c	;volatile
  6493                           
  6494                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  6495  012B78  C020  F01F         	movff	timer0_init@prescaler,??_timer0_init
  6496  012B7C  0EFF               	movlw	255
  6497  012B7E  261F               	addwf	??_timer0_init,f,c
  6498  012B80  50D5               	movf	4053,w,c	;volatile
  6499  012B82  181F               	xorwf	??_timer0_init,w,c
  6500  012B84  0BF8               	andlw	-8
  6501  012B86  181F               	xorwf	??_timer0_init,w,c
  6502  012B88  6ED5               	movwf	4053,c	;volatile
  6503  012B8A                     l3641:
  6504                           
  6505                           ;My_header\My_header.h: 24: }
  6506                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  6507  012B8A  8AF2               	bsf	intcon,5,c	;volatile
  6508                           
  6509                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  6510  012B8C  94F2               	bcf	intcon,2,c	;volatile
  6511                           
  6512                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  6513  012B8E  94F1               	bcf	intcon2,2,c	;volatile
  6514                           
  6515                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  6516  012B90  8CF2               	bsf	intcon,6,c	;volatile
  6517  012B92  0012               	return		;funcret
  6518  012B94                     __end_of_timer0_init:
  6519                           	opt stack 0
  6520                           tblptru	equ	0xFF8
  6521                           tblptrh	equ	0xFF7
  6522                           tblptrl	equ	0xFF6
  6523                           tablat	equ	0xFF5
  6524                           prodh	equ	0xFF4
  6525                           prodl	equ	0xFF3
  6526                           intcon	equ	0xFF2
  6527                           intcon2	equ	0xFF1
  6528                           postinc0	equ	0xFEE
  6529                           wreg	equ	0xFE8
  6530                           indf1	equ	0xFE7
  6531                           postinc1	equ	0xFE6
  6532                           postdec1	equ	0xFE5
  6533                           fsr1h	equ	0xFE2
  6534                           fsr1l	equ	0xFE1
  6535                           indf2	equ	0xFDF
  6536                           postinc2	equ	0xFDE
  6537                           postdec2	equ	0xFDD
  6538                           fsr2h	equ	0xFDA
  6539                           fsr2l	equ	0xFD9
  6540                           status	equ	0xFD8
  6541                           
  6542 ;; *************** function _ringbuf_init *****************
  6543 ;; Defined at:
  6544 ;;		line 24 in file "../My_header\My_ringbuf.h"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  6547 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6548 ;;  internal_buf    2   32[COMRAM] PTR unsigned char 
  6549 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), my_terminal_loop@buf(100), 
  6550 ;;  bufsize         2   34[COMRAM] unsigned int 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;		None
  6553 ;; Return value:  Size  Location     Type
  6554 ;;		None               void
  6555 ;; Registers used:
  6556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6562 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;Total ram usage:        6 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    4
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_my_terminal_loop
  6573 ;;		_main_init
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text24
  6578  0129CC                     __ptext24:
  6579                           	opt stack 0
  6580  0129CC                     _ringbuf_init:
  6581                           	opt stack 25
  6582                           
  6583                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  6584                           
  6585                           ;incstack = 0
  6586  0129CC  C01F  FFD9         	movff	ringbuf_init@rb,fsr2l
  6587  0129D0  C020  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6588  0129D4  C021  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6589  0129D8  C022  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6590                           
  6591                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  6592  0129DC  EE20 F002          	lfsr	2,2
  6593  0129E0  501F               	movf	ringbuf_init@rb,w,c
  6594  0129E2  26D9               	addwf	fsr2l,f,c
  6595  0129E4  5020               	movf	ringbuf_init@rb+1,w,c
  6596  0129E6  22DA               	addwfc	fsr2h,f,c
  6597  0129E8  C023  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6598  0129EC  C024  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6599                           
  6600                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  6601  0129F0  EE20 F004          	lfsr	2,4
  6602  0129F4  501F               	movf	ringbuf_init@rb,w,c
  6603  0129F6  26D9               	addwf	fsr2l,f,c
  6604  0129F8  5020               	movf	ringbuf_init@rb+1,w,c
  6605  0129FA  22DA               	addwfc	fsr2h,f,c
  6606  0129FC  0E00               	movlw	0
  6607  0129FE  6EDE               	movwf	postinc2,c
  6608  012A00  0E00               	movlw	0
  6609  012A02  6EDD               	movwf	postdec2,c
  6610                           
  6611                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  6612  012A04  EE20 F006          	lfsr	2,6
  6613  012A08  501F               	movf	ringbuf_init@rb,w,c
  6614  012A0A  26D9               	addwf	fsr2l,f,c
  6615  012A0C  5020               	movf	ringbuf_init@rb+1,w,c
  6616  012A0E  22DA               	addwfc	fsr2h,f,c
  6617  012A10  0E00               	movlw	0
  6618  012A12  6EDE               	movwf	postinc2,c
  6619  012A14  0E00               	movlw	0
  6620  012A16  6EDD               	movwf	postdec2,c
  6621  012A18  0012               	return		;funcret
  6622  012A1A                     __end_of_ringbuf_init:
  6623                           	opt stack 0
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           prodh	equ	0xFF4
  6629                           prodl	equ	0xFF3
  6630                           intcon	equ	0xFF2
  6631                           intcon2	equ	0xFF1
  6632                           postinc0	equ	0xFEE
  6633                           wreg	equ	0xFE8
  6634                           indf1	equ	0xFE7
  6635                           postinc1	equ	0xFE6
  6636                           postdec1	equ	0xFE5
  6637                           fsr1h	equ	0xFE2
  6638                           fsr1l	equ	0xFE1
  6639                           indf2	equ	0xFDF
  6640                           postinc2	equ	0xFDE
  6641                           postdec2	equ	0xFDD
  6642                           fsr2h	equ	0xFDA
  6643                           fsr2l	equ	0xFD9
  6644                           status	equ	0xFD8
  6645                           
  6646 ;; *************** function _UART_init *****************
  6647 ;; Defined at:
  6648 ;;		line 192 in file "../My_header\My_header.h"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;		None               void
  6655 ;; Registers used:
  6656 ;;		wreg, status,2
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    4
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_main_init
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text25
  6677  012C74                     __ptext25:
  6678                           	opt stack 0
  6679  012C74                     _UART_init:
  6680                           	opt stack 25
  6681                           
  6682                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  6683                           
  6684                           ;incstack = 0
  6685  012C74  9CAD               	bcf	4013,6,c	;volatile
  6686                           
  6687                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  6688  012C76  8AAD               	bsf	4013,5,c	;volatile
  6689                           
  6690                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  6691  012C78  98AD               	bcf	4013,4,c	;volatile
  6692                           
  6693                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  6694  012C7A  94AD               	bcf	4013,2,c	;volatile
  6695                           
  6696                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  6697  012C7C  8EAC               	bsf	4012,7,c	;volatile
  6698                           
  6699                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  6700  012C7E  9CAC               	bcf	4012,6,c	;volatile
  6701                           
  6702                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  6703  012C80  88AC               	bsf	4012,4,c	;volatile
  6704                           
  6705                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  6706  012C82  967E               	bcf	3966,3,c	;volatile
  6707                           
  6708                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  6709  012C84  0E4D               	movlw	77
  6710  012C86  6EB0               	movwf	4016,c	;volatile
  6711                           
  6712                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  6713  012C88  0E00               	movlw	0
  6714  012C8A  6E7F               	movwf	3967,c	;volatile
  6715                           
  6716                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  6717  012C8C  9A9F               	bcf	3999,5,c	;volatile
  6718                           
  6719                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  6720  012C8E  8A9D               	bsf	3997,5,c	;volatile
  6721                           
  6722                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  6723  012C90  8CF2               	bsf	intcon,6,c	;volatile
  6724  012C92  0012               	return		;funcret
  6725  012C94                     __end_of_UART_init:
  6726                           	opt stack 0
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           intcon2	equ	0xFF1
  6735                           postinc0	equ	0xFEE
  6736                           wreg	equ	0xFE8
  6737                           indf1	equ	0xFE7
  6738                           postinc1	equ	0xFE6
  6739                           postdec1	equ	0xFE5
  6740                           fsr1h	equ	0xFE2
  6741                           fsr1l	equ	0xFE1
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           postdec2	equ	0xFDD
  6745                           fsr2h	equ	0xFDA
  6746                           fsr2l	equ	0xFD9
  6747                           status	equ	0xFD8
  6748                           
  6749 ;; *************** function _RTCC_init *****************
  6750 ;; Defined at:
  6751 ;;		line 56 in file "../My_header\My_RTCC.h"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, status,2
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6769 ;;Total ram usage:        0 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    4
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_main_init
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text26
  6780  012B94                     __ptext26:
  6781                           	opt stack 0
  6782  012B94                     _RTCC_init:
  6783                           	opt stack 25
  6784                           
  6785                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  6786                           
  6787                           ;incstack = 0
  6788  012B94  010F               	movlb	15	; () banked
  6789  012B96  8B3F               	bsf	63,5,b	;volatile
  6790                           
  6791                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  6792  012B98  010F               	movlb	15	; () banked
  6793  012B9A  BB3F               	btfsc	63,5,b	;volatile
  6794  012B9C  D006               	goto	l3771
  6795                           
  6796                           ; BSR set to: 15
  6797                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  6798  012B9E  0E55               	movlw	85
  6799  012BA0  6EA7               	movwf	4007,c	;volatile
  6800                           
  6801                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  6802  012BA2  0EAA               	movlw	170
  6803  012BA4  6EA7               	movwf	4007,c	;volatile
  6804                           
  6805                           ; BSR set to: 15
  6806                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  6807  012BA6  010F               	movlb	15	; () banked
  6808  012BA8  8B3F               	bsf	63,5,b	;volatile
  6809  012BAA                     l3771:
  6810                           
  6811                           ; BSR set to: 15
  6812                           ;My_header\My_RTCC.h: 62: }
  6813                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  6814  012BAA  010F               	movlb	15	; () banked
  6815  012BAC  8F3F               	bsf	63,7,b	;volatile
  6816                           
  6817                           ; BSR set to: 15
  6818                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  6819  012BAE  010F               	movlb	15	; () banked
  6820  012BB0  953F               	bcf	63,2,b	;volatile
  6821                           
  6822                           ; BSR set to: 15
  6823                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  6824  012BB2  010F               	movlb	15	; () banked
  6825  012BB4  833C               	bsf	60,1,b	;volatile
  6826                           
  6827                           ; BSR set to: 15
  6828                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  6829  012BB6  010F               	movlb	15	; () banked
  6830  012BB8  853C               	bsf	60,2,b	;volatile
  6831                           
  6832                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  6833  012BBA  0E00               	movlw	0
  6834  012BBC  010F               	movlb	15	; () banked
  6835  012BBE  6F3E               	movwf	62,b	;volatile
  6836                           
  6837                           ; BSR set to: 15
  6838  012BC0  0012               	return		;funcret
  6839  012BC2                     __end_of_RTCC_init:
  6840                           	opt stack 0
  6841                           tblptru	equ	0xFF8
  6842                           tblptrh	equ	0xFF7
  6843                           tblptrl	equ	0xFF6
  6844                           tablat	equ	0xFF5
  6845                           prodh	equ	0xFF4
  6846                           prodl	equ	0xFF3
  6847                           intcon	equ	0xFF2
  6848                           intcon2	equ	0xFF1
  6849                           postinc0	equ	0xFEE
  6850                           wreg	equ	0xFE8
  6851                           indf1	equ	0xFE7
  6852                           postinc1	equ	0xFE6
  6853                           postdec1	equ	0xFE5
  6854                           fsr1h	equ	0xFE2
  6855                           fsr1l	equ	0xFE1
  6856                           indf2	equ	0xFDF
  6857                           postinc2	equ	0xFDE
  6858                           postdec2	equ	0xFDD
  6859                           fsr2h	equ	0xFDA
  6860                           fsr2l	equ	0xFD9
  6861                           status	equ	0xFD8
  6862                           
  6863 ;; *************** function _PWM_init *****************
  6864 ;; Defined at:
  6865 ;;		line 73 in file "PIC18F27J53-killifish_light04.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  PR              1    wreg     unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  PR              1   30[COMRAM] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;		None               void
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6883 ;;Total ram usage:        1 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    4
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_main_init
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text27
  6894  011F0C                     __ptext27:
  6895                           	opt stack 0
  6896  011F0C                     _PWM_init:
  6897                           	opt stack 25
  6898                           
  6899                           ; BSR set to: 15
  6900                           ;incstack = 0
  6901                           ;PWM_init@PR stored from wreg
  6902  011F0C  6E1F               	movwf	PWM_init@PR,c
  6903                           
  6904                           ;PIC18F27J53-killifish_light04.c: 74: PPSCONbits.IOLOCK = 0;
  6905  011F0E  010E               	movlb	14	; () banked
  6906  011F10  91BF               	bcf	191,0,b	;volatile
  6907                           
  6908                           ;PIC18F27J53-killifish_light04.c: 75: if (PPSCONbits.IOLOCK != 0) {
  6909  011F12  010E               	movlb	14	; () banked
  6910  011F14  A1BF               	btfss	191,0,b	;volatile
  6911  011F16  D006               	goto	l590
  6912                           
  6913                           ; BSR set to: 14
  6914                           ;PIC18F27J53-killifish_light04.c: 76: EECON2 = 0x55;
  6915  011F18  0E55               	movlw	85
  6916  011F1A  6EA7               	movwf	4007,c	;volatile
  6917                           
  6918                           ;PIC18F27J53-killifish_light04.c: 77: EECON2 = 0xAA;
  6919  011F1C  0EAA               	movlw	170
  6920  011F1E  6EA7               	movwf	4007,c	;volatile
  6921                           
  6922                           ; BSR set to: 14
  6923                           ;PIC18F27J53-killifish_light04.c: 78: PPSCONbits.IOLOCK = 0;
  6924  011F20  010E               	movlb	14	; () banked
  6925  011F22  91BF               	bcf	191,0,b	;volatile
  6926  011F24                     l590:
  6927                           
  6928                           ; BSR set to: 14
  6929                           ;PIC18F27J53-killifish_light04.c: 79: }
  6930                           ;PIC18F27J53-killifish_light04.c: 81: RPOR3 = 14;
  6931  011F24  0E0E               	movlw	14
  6932  011F26  010E               	movlb	14	; () banked
  6933  011F28  6FC3               	movwf	195,b	;volatile
  6934                           
  6935                           ;PIC18F27J53-killifish_light04.c: 82: RPOR4 = 18;
  6936  011F2A  0E12               	movlw	18
  6937  011F2C  010E               	movlb	14	; () banked
  6938  011F2E  6FC4               	movwf	196,b	;volatile
  6939                           
  6940                           ;PIC18F27J53-killifish_light04.c: 83: RPOR5 = 22;
  6941  011F30  0E16               	movlw	22
  6942  011F32  010E               	movlb	14	; () banked
  6943  011F34  6FC5               	movwf	197,b	;volatile
  6944                           
  6945                           ; BSR set to: 14
  6946                           ;PIC18F27J53-killifish_light04.c: 85: CCP1CONbits.CCP1M = 12;
  6947  011F36  50BA               	movf	4026,w,c	;volatile
  6948  011F38  0BF0               	andlw	-16
  6949  011F3A  090C               	iorlw	12
  6950  011F3C  6EBA               	movwf	4026,c	;volatile
  6951                           
  6952                           ; BSR set to: 14
  6953                           ;PIC18F27J53-killifish_light04.c: 86: CCP1CONbits.P1M = 0;
  6954  011F3E  0E3F               	movlw	-193
  6955  011F40  16BA               	andwf	4026,f,c	;volatile
  6956                           
  6957                           ; BSR set to: 14
  6958                           ;PIC18F27J53-killifish_light04.c: 87: CCPTMRS0bits.C1TSEL = 0;
  6959  011F42  010F               	movlb	15	; () banked
  6960  011F44  9152               	bcf	82,0,b	;volatile
  6961  011F46  9352               	bcf	82,1,b	;volatile
  6962  011F48  9552               	bcf	82,2,b	;volatile
  6963                           
  6964                           ; BSR set to: 15
  6965                           ;PIC18F27J53-killifish_light04.c: 88: CCPR1Lbits.CCPR1L = 0;
  6966  011F4A  0E00               	movlw	0
  6967  011F4C  6EBB               	movwf	4027,c	;volatile
  6968                           
  6969                           ; BSR set to: 15
  6970                           ;PIC18F27J53-killifish_light04.c: 89: CCP1CONbits.DC1B = 0;
  6971  011F4E  0ECF               	movlw	-49
  6972  011F50  16BA               	andwf	4026,f,c	;volatile
  6973                           
  6974                           ; BSR set to: 15
  6975                           ;PIC18F27J53-killifish_light04.c: 91: CCP2CONbits.CCP2M = 12;
  6976  011F52  50B4               	movf	4020,w,c	;volatile
  6977  011F54  0BF0               	andlw	-16
  6978  011F56  090C               	iorlw	12
  6979  011F58  6EB4               	movwf	4020,c	;volatile
  6980                           
  6981                           ; BSR set to: 15
  6982                           ;PIC18F27J53-killifish_light04.c: 92: CCP2CONbits.P2M = 0;
  6983  011F5A  0E3F               	movlw	-193
  6984  011F5C  16B4               	andwf	4020,f,c	;volatile
  6985                           
  6986                           ; BSR set to: 15
  6987                           ;PIC18F27J53-killifish_light04.c: 93: CCPTMRS0bits.C2TSEL = 0;
  6988  011F5E  010F               	movlb	15	; () banked
  6989  011F60  9752               	bcf	82,3,b	;volatile
  6990  011F62  9952               	bcf	82,4,b	;volatile
  6991  011F64  9B52               	bcf	82,5,b	;volatile
  6992                           
  6993                           ; BSR set to: 15
  6994                           ;PIC18F27J53-killifish_light04.c: 94: CCPR2Lbits.CCPR2L = 0;
  6995  011F66  0E00               	movlw	0
  6996  011F68  6EB5               	movwf	4021,c	;volatile
  6997                           
  6998                           ; BSR set to: 15
  6999                           ;PIC18F27J53-killifish_light04.c: 95: CCP2CONbits.DC2B = 0;
  7000  011F6A  0ECF               	movlw	-49
  7001  011F6C  16B4               	andwf	4020,f,c	;volatile
  7002                           
  7003                           ; BSR set to: 15
  7004                           ;PIC18F27J53-killifish_light04.c: 97: CCP3CONbits.CCP3M = 12;
  7005  011F6E  010F               	movlb	15	; () banked
  7006  011F70  5115               	movf	21,w,b	;volatile
  7007  011F72  0BF0               	andlw	-16
  7008  011F74  090C               	iorlw	12
  7009  011F76  6F15               	movwf	21,b	;volatile
  7010                           
  7011                           ; BSR set to: 15
  7012                           ;PIC18F27J53-killifish_light04.c: 98: CCP3CONbits.P3M = 0;
  7013  011F78  0E3F               	movlw	-193
  7014  011F7A  010F               	movlb	15	; () banked
  7015  011F7C  1715               	andwf	21,f,b	;volatile
  7016                           
  7017                           ; BSR set to: 15
  7018                           ;PIC18F27J53-killifish_light04.c: 99: CCPTMRS0bits.C3TSEL = 0;
  7019  011F7E  0E3F               	movlw	-193
  7020  011F80  010F               	movlb	15	; () banked
  7021  011F82  1752               	andwf	82,f,b	;volatile
  7022                           
  7023                           ; BSR set to: 15
  7024                           ;PIC18F27J53-killifish_light04.c: 100: CCPR3Lbits.CCPR3L = 0;
  7025  011F84  0E00               	movlw	0
  7026  011F86  010F               	movlb	15	; () banked
  7027  011F88  6F16               	movwf	22,b	;volatile
  7028                           
  7029                           ; BSR set to: 15
  7030                           ;PIC18F27J53-killifish_light04.c: 101: CCP3CONbits.DC3B = 0;
  7031  011F8A  0ECF               	movlw	-49
  7032  011F8C  010F               	movlb	15	; () banked
  7033  011F8E  1715               	andwf	21,f,b	;volatile
  7034                           
  7035                           ; BSR set to: 15
  7036                           ;PIC18F27J53-killifish_light04.c: 103: CCP4CONbits.CCP4M = 12;
  7037  011F90  010F               	movlb	15	; () banked
  7038  011F92  5112               	movf	18,w,b	;volatile
  7039  011F94  0BF0               	andlw	-16
  7040  011F96  090C               	iorlw	12
  7041  011F98  6F12               	movwf	18,b	;volatile
  7042                           
  7043                           ; BSR set to: 15
  7044                           ;PIC18F27J53-killifish_light04.c: 104: CCPTMRS1bits.C4TSEL = 0;
  7045  011F9A  0EFC               	movlw	-4
  7046  011F9C  010F               	movlb	15	; () banked
  7047  011F9E  1751               	andwf	81,f,b	;volatile
  7048                           
  7049                           ; BSR set to: 15
  7050                           ;PIC18F27J53-killifish_light04.c: 105: CCPR4Lbits.CCPR4L = 0;
  7051  011FA0  0E00               	movlw	0
  7052  011FA2  010F               	movlb	15	; () banked
  7053  011FA4  6F13               	movwf	19,b	;volatile
  7054                           
  7055                           ; BSR set to: 15
  7056                           ;PIC18F27J53-killifish_light04.c: 106: CCP4CONbits.DC4B = 0;
  7057  011FA6  0ECF               	movlw	-49
  7058  011FA8  010F               	movlb	15	; () banked
  7059  011FAA  1712               	andwf	18,f,b	;volatile
  7060                           
  7061                           ; BSR set to: 15
  7062                           ;PIC18F27J53-killifish_light04.c: 108: T2CONbits.T2OUTPS = 0;
  7063  011FAC  96CA               	bcf	4042,3,c	;volatile
  7064  011FAE  98CA               	bcf	4042,4,c	;volatile
  7065  011FB0  9ACA               	bcf	4042,5,c	;volatile
  7066  011FB2  9CCA               	bcf	4042,6,c	;volatile
  7067                           
  7068                           ; BSR set to: 15
  7069                           ;PIC18F27J53-killifish_light04.c: 109: T2CONbits.T2CKPS = 2;
  7070  011FB4  50CA               	movf	4042,w,c	;volatile
  7071  011FB6  0BFC               	andlw	-4
  7072  011FB8  0902               	iorlw	2
  7073  011FBA  6ECA               	movwf	4042,c	;volatile
  7074                           
  7075                           ; BSR set to: 15
  7076                           ;PIC18F27J53-killifish_light04.c: 110: PR2 = PR - 1;
  7077  011FBC  041F               	decf	PWM_init@PR,w,c
  7078  011FBE  6ECB               	movwf	4043,c	;volatile
  7079                           
  7080                           ; BSR set to: 15
  7081                           ;PIC18F27J53-killifish_light04.c: 111: T2CONbits.TMR2ON = 1;
  7082  011FC0  84CA               	bsf	4042,2,c	;volatile
  7083                           
  7084                           ; BSR set to: 15
  7085  011FC2  0012               	return		;funcret
  7086  011FC4                     __end_of_PWM_init:
  7087                           	opt stack 0
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           intcon2	equ	0xFF1
  7096                           postinc0	equ	0xFEE
  7097                           wreg	equ	0xFE8
  7098                           indf1	equ	0xFE7
  7099                           postinc1	equ	0xFE6
  7100                           postdec1	equ	0xFE5
  7101                           fsr1h	equ	0xFE2
  7102                           fsr1l	equ	0xFE1
  7103                           indf2	equ	0xFDF
  7104                           postinc2	equ	0xFDE
  7105                           postdec2	equ	0xFDD
  7106                           fsr2h	equ	0xFDA
  7107                           fsr2l	equ	0xFD9
  7108                           status	equ	0xFD8
  7109                           
  7110 ;; *************** function _OSC_init *****************
  7111 ;; Defined at:
  7112 ;;		line 119 in file "../My_header\My_header.h"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;		None               void
  7119 ;; Registers used:
  7120 ;;		wreg, status,2
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;Total ram usage:        0 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    4
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_main_init
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text28
  7141  012D04                     __ptext28:
  7142                           	opt stack 0
  7143  012D04                     _OSC_init:
  7144                           	opt stack 25
  7145                           
  7146                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  7147                           
  7148                           ; BSR set to: 15
  7149                           ;incstack = 0
  7150  012D04  88D3               	bsf	4051,4,c	;volatile
  7151  012D06  8AD3               	bsf	4051,5,c	;volatile
  7152  012D08  8CD3               	bsf	4051,6,c	;volatile
  7153                           
  7154                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  7155  012D0A  8C9B               	bsf	3995,6,c	;volatile
  7156                           
  7157                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  7158  012D0C  0EFC               	movlw	-4
  7159  012D0E  16D3               	andwf	4051,f,c	;volatile
  7160  012D10  0012               	return		;funcret
  7161  012D12                     __end_of_OSC_init:
  7162                           	opt stack 0
  7163                           tblptru	equ	0xFF8
  7164                           tblptrh	equ	0xFF7
  7165                           tblptrl	equ	0xFF6
  7166                           tablat	equ	0xFF5
  7167                           prodh	equ	0xFF4
  7168                           prodl	equ	0xFF3
  7169                           intcon	equ	0xFF2
  7170                           intcon2	equ	0xFF1
  7171                           postinc0	equ	0xFEE
  7172                           wreg	equ	0xFE8
  7173                           indf1	equ	0xFE7
  7174                           postinc1	equ	0xFE6
  7175                           postdec1	equ	0xFE5
  7176                           fsr1h	equ	0xFE2
  7177                           fsr1l	equ	0xFE1
  7178                           indf2	equ	0xFDF
  7179                           postinc2	equ	0xFDE
  7180                           postdec2	equ	0xFDD
  7181                           fsr2h	equ	0xFDA
  7182                           fsr2l	equ	0xFD9
  7183                           status	equ	0xFD8
  7184                           
  7185 ;; *************** function _ADC_init *****************
  7186 ;; Defined at:
  7187 ;;		line 149 in file "../My_header\My_header.h"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  p_ref           1    wreg     unsigned char 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  p_ref           1   30[COMRAM] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;		None               void
  7194 ;; Registers used:
  7195 ;;		wreg, status,2
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7205 ;;Total ram usage:        1 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    4
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_main_init
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text29
  7216  012CD0                     __ptext29:
  7217                           	opt stack 0
  7218  012CD0                     _ADC_init:
  7219                           	opt stack 25
  7220                           
  7221                           ;incstack = 0
  7222                           ;ADC_init@p_ref stored from wreg
  7223  012CD0  6E1F               	movwf	ADC_init@p_ref,c
  7224                           
  7225                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  7226  012CD2  9EC2               	bcf	4034,7,c	;volatile
  7227                           
  7228                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  7229  012CD4  B01F               	btfsc	ADC_init@p_ref,0,c
  7230  012CD6  D002               	bra	u3445
  7231  012CD8  9CC2               	bcf	4034,6,c	;volatile
  7232  012CDA  D001               	bra	u3446
  7233  012CDC                     u3445:
  7234  012CDC  8CC2               	bsf	4034,6,c	;volatile
  7235  012CDE                     u3446:
  7236                           
  7237                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  7238  012CDE  8EC1               	bsf	4033,7,c	;volatile
  7239                           
  7240                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  7241  012CE0  9CC1               	bcf	4033,6,c	;volatile
  7242                           
  7243                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  7244  012CE2  50C1               	movf	4033,w,c	;volatile
  7245  012CE4  0BF8               	andlw	-8
  7246  012CE6  0906               	iorlw	6
  7247  012CE8  6EC1               	movwf	4033,c	;volatile
  7248  012CEA  0012               	return		;funcret
  7249  012CEC                     __end_of_ADC_init:
  7250                           	opt stack 0
  7251                           tblptru	equ	0xFF8
  7252                           tblptrh	equ	0xFF7
  7253                           tblptrl	equ	0xFF6
  7254                           tablat	equ	0xFF5
  7255                           prodh	equ	0xFF4
  7256                           prodl	equ	0xFF3
  7257                           intcon	equ	0xFF2
  7258                           intcon2	equ	0xFF1
  7259                           postinc0	equ	0xFEE
  7260                           wreg	equ	0xFE8
  7261                           indf1	equ	0xFE7
  7262                           postinc1	equ	0xFE6
  7263                           postdec1	equ	0xFE5
  7264                           fsr1h	equ	0xFE2
  7265                           fsr1l	equ	0xFE1
  7266                           indf2	equ	0xFDF
  7267                           postinc2	equ	0xFDE
  7268                           postdec2	equ	0xFDD
  7269                           fsr2h	equ	0xFDA
  7270                           fsr2l	equ	0xFD9
  7271                           status	equ	0xFD8
  7272                           
  7273 ;; *************** function _light_loop *****************
  7274 ;; Defined at:
  7275 ;;		line 219 in file "PIC18F27J53-killifish_light04.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  temp            4   42[BANK0 ] unsigned long 
  7280 ;;  value           1   41[BANK0 ] unsigned char 
  7281 ;;  value           1   40[BANK0 ] unsigned char 
  7282 ;;  i               1   46[BANK0 ] unsigned char 
  7283 ;; Return value:  Size  Location     Type
  7284 ;;		None               void
  7285 ;; Registers used:
  7286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7293 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7294 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7295 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7296 ;;Total ram usage:       11 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    8
  7299 ;; This function calls:
  7300 ;;		_PWM_set
  7301 ;;		_RTCC_from_RTCC
  7302 ;;		___lldiv
  7303 ;;		___llmod
  7304 ;;		___lmul
  7305 ;; This function is called by:
  7306 ;;		_main
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text30
  7311  01134C                     __ptext30:
  7312                           	opt stack 0
  7313  01134C                     _light_loop:
  7314                           	opt stack 22
  7315                           
  7316                           ;PIC18F27J53-killifish_light04.c: 220: uint8_t i;
  7317                           ;PIC18F27J53-killifish_light04.c: 221: if (time_change_flag) {
  7318                           
  7319                           ;incstack = 0
  7320  01134C  0100               	movlb	0	; () banked
  7321  01134E  51CA               	movf	_time_change_flag& (0+255),w,b
  7322  011350  B4D8               	btfsc	status,2,c
  7323  011352  D0B4               	goto	l643
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;PIC18F27J53-killifish_light04.c: 222: time_change_flag = 0;
  7327  011354  0E00               	movlw	0
  7328  011356  0100               	movlb	0	; () banked
  7329  011358  6FCA               	movwf	_time_change_flag& (0+255),b
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;PIC18F27J53-killifish_light04.c: 223: RTCC_from_RTCC(&caltime_now, &epoch_now);
  7333  01135A  0EF1               	movlw	low _caltime_now
  7334  01135C  0100               	movlb	0	; () banked
  7335  01135E  6F80               	movwf	RTCC_from_RTCC@ct& (0+255),b
  7336  011360  0E00               	movlw	high _caltime_now
  7337  011362  0100               	movlb	0	; () banked
  7338  011364  6F81               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  7339  011366  0EF8               	movlw	low _epoch_now
  7340  011368  0100               	movlb	0	; () banked
  7341  01136A  6F82               	movwf	RTCC_from_RTCC@ep& (0+255),b
  7342  01136C  0E00               	movlw	high _epoch_now
  7343  01136E  0100               	movlb	0	; () banked
  7344  011370  6F83               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  7345  011372  EC18  F096         	call	_RTCC_from_RTCC	;wreg free
  7346                           
  7347                           ;PIC18F27J53-killifish_light04.c: 224: if (light_mode == TIME_SYNC_mode) {
  7348  011376  0100               	movlb	0	; () banked
  7349  011378  51C9               	movf	_light_mode& (0+255),w,b
  7350  01137A  A4D8               	btfss	status,2,c
  7351  01137C  D09F               	goto	l643
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;PIC18F27J53-killifish_light04.c: 225: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  7355  01137E  C0F8  F060         	movff	_epoch_now,___llmod@dividend
  7356  011382  C0F9  F061         	movff	_epoch_now+1,___llmod@dividend+1
  7357  011386  C0FA  F062         	movff	_epoch_now+2,___llmod@dividend+2
  7358  01138A  C0FB  F063         	movff	_epoch_now+3,___llmod@dividend+3
  7359  01138E  0E80               	movlw	128
  7360  011390  0100               	movlb	0	; () banked
  7361  011392  6F64               	movwf	___llmod@divisor& (0+255),b
  7362  011394  0E51               	movlw	81
  7363  011396  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  7364  011398  0E01               	movlw	1
  7365  01139A  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  7366  01139C  0E00               	movlw	0
  7367  01139E  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  7368  0113A0  EC65  F092         	call	___llmod	;wreg free
  7369  0113A4  C060  F08A         	movff	?___llmod,light_loop@temp
  7370  0113A8  C061  F08B         	movff	?___llmod+1,light_loop@temp+1
  7371  0113AC  C062  F08C         	movff	?___llmod+2,light_loop@temp+2
  7372  0113B0  C063  F08D         	movff	?___llmod+3,light_loop@temp+3
  7373                           
  7374                           ;PIC18F27J53-killifish_light04.c: 226: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  7375  0113B4  0100               	movlb	0	; () banked
  7376  0113B6  518D               	movf	(light_loop@temp+3)& (0+255),w,b
  7377  0113B8  0100               	movlb	0	; () banked
  7378  0113BA  118C               	iorwf	(light_loop@temp+2)& (0+255),w,b
  7379  0113BC  E108               	bnz	u6410
  7380  0113BE  0EC1               	movlw	193
  7381  0113C0  0100               	movlb	0	; () banked
  7382  0113C2  5D8A               	subwf	light_loop@temp& (0+255),w,b
  7383  0113C4  0EA8               	movlw	168
  7384  0113C6  0100               	movlb	0	; () banked
  7385  0113C8  598B               	subwfb	(light_loop@temp+1)& (0+255),w,b
  7386  0113CA  A0D8               	btfss	status,0,c
  7387  0113CC  D026               	goto	l5543
  7388  0113CE                     u6410:
  7389                           
  7390                           ; BSR set to: 0
  7391  0113CE  C08A  F084         	movff	light_loop@temp,??_light_loop
  7392  0113D2  C08B  F085         	movff	light_loop@temp+1,??_light_loop+1
  7393  0113D6  C08C  F086         	movff	light_loop@temp+2,??_light_loop+2
  7394  0113DA  C08D  F087         	movff	light_loop@temp+3,??_light_loop+3
  7395  0113DE  0100               	movlb	0	; () banked
  7396  0113E0  1F84               	comf	??_light_loop& (0+255),f,b
  7397  0113E2  1F85               	comf	(??_light_loop+1)& (0+255),f,b
  7398  0113E4  1F86               	comf	(??_light_loop+2)& (0+255),f,b
  7399  0113E6  1F87               	comf	(??_light_loop+3)& (0+255),f,b
  7400  0113E8  2B84               	incf	??_light_loop& (0+255),f,b
  7401  0113EA  0E00               	movlw	0
  7402  0113EC  2385               	addwfc	(??_light_loop+1)& (0+255),f,b
  7403  0113EE  2386               	addwfc	(??_light_loop+2)& (0+255),f,b
  7404  0113F0  2387               	addwfc	(??_light_loop+3)& (0+255),f,b
  7405  0113F2  0E80               	movlw	128
  7406  0113F4  0100               	movlb	0	; () banked
  7407  0113F6  2584               	addwf	??_light_loop& (0+255),w,b
  7408  0113F8  0100               	movlb	0	; () banked
  7409  0113FA  6F8A               	movwf	light_loop@temp& (0+255),b
  7410  0113FC  0E51               	movlw	81
  7411  0113FE  0100               	movlb	0	; () banked
  7412  011400  2185               	addwfc	(??_light_loop+1)& (0+255),w,b
  7413  011402  0100               	movlb	0	; () banked
  7414  011404  6F8B               	movwf	(light_loop@temp+1)& (0+255),b
  7415  011406  0E01               	movlw	1
  7416  011408  0100               	movlb	0	; () banked
  7417  01140A  2186               	addwfc	(??_light_loop+2)& (0+255),w,b
  7418  01140C  0100               	movlb	0	; () banked
  7419  01140E  6F8C               	movwf	(light_loop@temp+2)& (0+255),b
  7420  011410  0E00               	movlw	0
  7421  011412  0100               	movlb	0	; () banked
  7422  011414  2187               	addwfc	(??_light_loop+3)& (0+255),w,b
  7423  011416  0100               	movlb	0	; () banked
  7424  011418  6F8D               	movwf	(light_loop@temp+3)& (0+255),b
  7425  01141A                     l5543:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;PIC18F27J53-killifish_light04.c: 227: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  7429  01141A  90D8               	bcf	status,0,c
  7430  01141C  0100               	movlb	0	; () banked
  7431  01141E  358A               	rlcf	light_loop@temp& (0+255),w,b
  7432  011420  0100               	movlb	0	; () banked
  7433  011422  6F65               	movwf	___lmul@multiplier& (0+255),b
  7434  011424  0100               	movlb	0	; () banked
  7435  011426  358B               	rlcf	(light_loop@temp+1)& (0+255),w,b
  7436  011428  0100               	movlb	0	; () banked
  7437  01142A  6F66               	movwf	(___lmul@multiplier+1)& (0+255),b
  7438  01142C  0100               	movlb	0	; () banked
  7439  01142E  358C               	rlcf	(light_loop@temp+2)& (0+255),w,b
  7440  011430  0100               	movlb	0	; () banked
  7441  011432  6F67               	movwf	(___lmul@multiplier+2)& (0+255),b
  7442  011434  0100               	movlb	0	; () banked
  7443  011436  358D               	rlcf	(light_loop@temp+3)& (0+255),w,b
  7444  011438  0100               	movlb	0	; () banked
  7445  01143A  6F68               	movwf	(___lmul@multiplier+3)& (0+255),b
  7446  01143C  0EFA               	movlw	250
  7447  01143E  0100               	movlb	0	; () banked
  7448  011440  6F69               	movwf	___lmul@multiplicand& (0+255),b
  7449  011442  0E00               	movlw	0
  7450  011444  6F6A               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7451  011446  0E00               	movlw	0
  7452  011448  6F6B               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7453  01144A  0E00               	movlw	0
  7454  01144C  6F6C               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7455  01144E  ECAD  F093         	call	___lmul	;wreg free
  7456  011452  C065  F071         	movff	?___lmul,___lldiv@dividend
  7457  011456  C066  F072         	movff	?___lmul+1,___lldiv@dividend+1
  7458  01145A  C067  F073         	movff	?___lmul+2,___lldiv@dividend+2
  7459  01145E  C068  F074         	movff	?___lmul+3,___lldiv@dividend+3
  7460  011462  0E80               	movlw	128
  7461  011464  0100               	movlb	0	; () banked
  7462  011466  6F75               	movwf	___lldiv@divisor& (0+255),b
  7463  011468  0E51               	movlw	81
  7464  01146A  6F76               	movwf	(___lldiv@divisor+1)& (0+255),b
  7465  01146C  0E01               	movlw	1
  7466  01146E  6F77               	movwf	(___lldiv@divisor+2)& (0+255),b
  7467  011470  0E00               	movlw	0
  7468  011472  6F78               	movwf	(___lldiv@divisor+3)& (0+255),b
  7469  011474  EC6D  F08E         	call	___lldiv	;wreg free
  7470  011478  C071  F08A         	movff	?___lldiv,light_loop@temp
  7471  01147C  C072  F08B         	movff	?___lldiv+1,light_loop@temp+1
  7472  011480  C073  F08C         	movff	?___lldiv+2,light_loop@temp+2
  7473  011484  C074  F08D         	movff	?___lldiv+3,light_loop@temp+3
  7474                           
  7475                           ;PIC18F27J53-killifish_light04.c: 228: PWM_set(3, temp);
  7476  011488  C08A  F06F         	movff	light_loop@temp,PWM_set@value
  7477  01148C  C08B  F070         	movff	light_loop@temp+1,PWM_set@value+1
  7478  011490  0E03               	movlw	3
  7479  011492  ECA8  F08B         	call	_PWM_set
  7480                           
  7481                           ;PIC18F27J53-killifish_light04.c: 229: for (i = 0; i < 3; i++) {
  7482  011496  0E00               	movlw	0
  7483  011498  0100               	movlb	0	; () banked
  7484  01149A  6F8E               	movwf	light_loop@i& (0+255),b
  7485  01149C                     l5549:
  7486                           
  7487                           ; BSR set to: 0
  7488  01149C  0E02               	movlw	2
  7489  01149E  0100               	movlb	0	; () banked
  7490  0114A0  658E               	cpfsgt	light_loop@i& (0+255),b
  7491  0114A2  D001               	goto	l5553
  7492  0114A4  D00B               	goto	l643
  7493  0114A6                     l5553:
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;PIC18F27J53-killifish_light04.c: 230: PWM_set(i, temp);
  7497  0114A6  C08A  F06F         	movff	light_loop@temp,PWM_set@value
  7498  0114AA  C08B  F070         	movff	light_loop@temp+1,PWM_set@value+1
  7499  0114AE  0100               	movlb	0	; () banked
  7500  0114B0  518E               	movf	light_loop@i& (0+255),w,b
  7501  0114B2  ECA8  F08B         	call	_PWM_set
  7502  0114B6  0100               	movlb	0	; () banked
  7503  0114B8  2B8E               	incf	light_loop@i& (0+255),f,b
  7504  0114BA  D7F0               	goto	l5549
  7505  0114BC                     l643:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;PIC18F27J53-killifish_light04.c: 231: }
  7509                           ;PIC18F27J53-killifish_light04.c: 232: }
  7510                           ;PIC18F27J53-killifish_light04.c: 233: }
  7511                           ;PIC18F27J53-killifish_light04.c: 234: if (sw_G.flag.press) {
  7512  0114BC  A03B               	btfss	_sw_G+2,0,c
  7513  0114BE  D029               	goto	l648
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;PIC18F27J53-killifish_light04.c: 235: sw_G.flags = 0;
  7517  0114C0  0E00               	movlw	0
  7518  0114C2  6E3C               	movwf	_sw_G+3,c
  7519  0114C4  0E00               	movlw	0
  7520  0114C6  6E3B               	movwf	_sw_G+2,c
  7521                           
  7522                           ;PIC18F27J53-killifish_light04.c: 236: light_mode = COMMAND_mode;
  7523  0114C8  0E02               	movlw	2
  7524  0114CA  0100               	movlb	0	; () banked
  7525  0114CC  6FC9               	movwf	_light_mode& (0+255),b
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;PIC18F27J53-killifish_light04.c: 237: static uint8_t n = 0;
  7529                           ;PIC18F27J53-killifish_light04.c: 238: if (n >= 3) n = 0;
  7530  0114CE  0E02               	movlw	2
  7531  0114D0  0100               	movlb	0	; () banked
  7532  0114D2  65FD               	cpfsgt	light_loop@n& (0+255),b
  7533  0114D4  D004               	goto	l5565
  7534                           
  7535                           ; BSR set to: 0
  7536  0114D6  0E00               	movlw	0
  7537  0114D8  0100               	movlb	0	; () banked
  7538  0114DA  6FFD               	movwf	light_loop@n& (0+255),b
  7539  0114DC  D002               	goto	l5567
  7540  0114DE                     l5565:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;PIC18F27J53-killifish_light04.c: 239: else n++;
  7544  0114DE  0100               	movlb	0	; () banked
  7545  0114E0  2BFD               	incf	light_loop@n& (0+255),f,b
  7546  0114E2                     l5567:
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;PIC18F27J53-killifish_light04.c: 240: uint8_t value = 250 / 3 * n;
  7550  0114E2  0100               	movlb	0	; () banked
  7551  0114E4  51FD               	movf	light_loop@n& (0+255),w,b
  7552  0114E6  0D53               	mullw	83
  7553  0114E8  CFF3 F088          	movff	prodl,light_loop@value
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;PIC18F27J53-killifish_light04.c: 241: for (i = 0; i < 3; i++) {
  7557  0114EC  0E00               	movlw	0
  7558  0114EE  0100               	movlb	0	; () banked
  7559  0114F0  6F8E               	movwf	light_loop@i& (0+255),b
  7560  0114F2                     l5571:
  7561                           
  7562                           ; BSR set to: 0
  7563  0114F2  0E02               	movlw	2
  7564  0114F4  0100               	movlb	0	; () banked
  7565  0114F6  658E               	cpfsgt	light_loop@i& (0+255),b
  7566  0114F8  D001               	goto	l5575
  7567  0114FA  D00B               	goto	l648
  7568  0114FC                     l5575:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;PIC18F27J53-killifish_light04.c: 242: PWM_set(i, value);
  7572  0114FC  C088  F06F         	movff	light_loop@value,PWM_set@value
  7573  011500  0100               	movlb	0	; () banked
  7574  011502  6B70               	clrf	(PWM_set@value+1)& (0+255),b
  7575  011504  0100               	movlb	0	; () banked
  7576  011506  518E               	movf	light_loop@i& (0+255),w,b
  7577  011508  ECA8  F08B         	call	_PWM_set
  7578  01150C  0100               	movlb	0	; () banked
  7579  01150E  2B8E               	incf	light_loop@i& (0+255),f,b
  7580  011510  D7F0               	goto	l5571
  7581  011512                     l648:
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;PIC18F27J53-killifish_light04.c: 243: }
  7585                           ;PIC18F27J53-killifish_light04.c: 244: }
  7586                           ;PIC18F27J53-killifish_light04.c: 245: if (sw_B.flag.press) {
  7587  011512  A037               	btfss	_sw_B+2,0,c
  7588  011514  D01D               	goto	l5593
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;PIC18F27J53-killifish_light04.c: 246: sw_B.flags = 0;
  7592  011516  0E00               	movlw	0
  7593  011518  6E38               	movwf	_sw_B+3,c
  7594  01151A  0E00               	movlw	0
  7595  01151C  6E37               	movwf	_sw_B+2,c
  7596                           
  7597                           ;PIC18F27J53-killifish_light04.c: 247: light_mode = COMMAND_mode;
  7598  01151E  0E02               	movlw	2
  7599  011520  0100               	movlb	0	; () banked
  7600  011522  6FC9               	movwf	_light_mode& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;PIC18F27J53-killifish_light04.c: 248: static uint8_t n = 0;
  7604                           ;PIC18F27J53-killifish_light04.c: 249: if (n >= 3) n = 0;
  7605  011524  0E02               	movlw	2
  7606  011526  0100               	movlb	0	; () banked
  7607  011528  65FC               	cpfsgt	light_loop@_2506& (0+255),b
  7608  01152A  D004               	goto	l5587
  7609                           
  7610                           ; BSR set to: 0
  7611  01152C  0E00               	movlw	0
  7612  01152E  0100               	movlb	0	; () banked
  7613  011530  6FFC               	movwf	light_loop@_2506& (0+255),b
  7614  011532  D002               	goto	l5589
  7615  011534                     l5587:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;PIC18F27J53-killifish_light04.c: 250: else n++;
  7619  011534  0100               	movlb	0	; () banked
  7620  011536  2BFC               	incf	light_loop@_2506& (0+255),f,b
  7621  011538                     l5589:
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;PIC18F27J53-killifish_light04.c: 251: uint8_t value = 250 / 3 * n;
  7625  011538  0100               	movlb	0	; () banked
  7626  01153A  51FC               	movf	light_loop@_2506& (0+255),w,b
  7627  01153C  0D53               	mullw	83
  7628  01153E  CFF3 F089          	movff	prodl,light_loop@value_2507
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;PIC18F27J53-killifish_light04.c: 252: PWM_set(3, value);
  7632  011542  C089  F06F         	movff	light_loop@value_2507,PWM_set@value
  7633  011546  0100               	movlb	0	; () banked
  7634  011548  6B70               	clrf	(PWM_set@value+1)& (0+255),b
  7635  01154A  0E03               	movlw	3
  7636  01154C  ECA8  F08B         	call	_PWM_set
  7637  011550                     l5593:
  7638                           
  7639                           ;PIC18F27J53-killifish_light04.c: 253: }
  7640                           ;PIC18F27J53-killifish_light04.c: 254: if (sw_R.flag.press) {
  7641  011550  A03F               	btfss	_sw_R+2,0,c
  7642  011552  0012               	return	
  7643                           
  7644                           ;PIC18F27J53-killifish_light04.c: 255: sw_R.flags = 0;
  7645  011554  0E00               	movlw	0
  7646  011556  6E40               	movwf	_sw_R+3,c
  7647  011558  0E00               	movlw	0
  7648  01155A  6E3F               	movwf	_sw_R+2,c
  7649                           
  7650                           ;PIC18F27J53-killifish_light04.c: 256: light_mode = TIME_SYNC_mode;
  7651  01155C  0E00               	movlw	0
  7652  01155E  0100               	movlb	0	; () banked
  7653  011560  6FC9               	movwf	_light_mode& (0+255),b
  7654  011562  0012               	return	
  7655  011564                     __end_of_light_loop:
  7656                           	opt stack 0
  7657                           tblptru	equ	0xFF8
  7658                           tblptrh	equ	0xFF7
  7659                           tblptrl	equ	0xFF6
  7660                           tablat	equ	0xFF5
  7661                           prodh	equ	0xFF4
  7662                           prodl	equ	0xFF3
  7663                           intcon	equ	0xFF2
  7664                           intcon2	equ	0xFF1
  7665                           postinc0	equ	0xFEE
  7666                           wreg	equ	0xFE8
  7667                           indf1	equ	0xFE7
  7668                           postinc1	equ	0xFE6
  7669                           postdec1	equ	0xFE5
  7670                           fsr1h	equ	0xFE2
  7671                           fsr1l	equ	0xFE1
  7672                           indf2	equ	0xFDF
  7673                           postinc2	equ	0xFDE
  7674                           postdec2	equ	0xFDD
  7675                           fsr2h	equ	0xFDA
  7676                           fsr2l	equ	0xFD9
  7677                           status	equ	0xFD8
  7678                           
  7679 ;; *************** function ___llmod *****************
  7680 ;; Defined at:
  7681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  dividend        4    0[BANK0 ] unsigned long 
  7684 ;;  divisor         4    4[BANK0 ] unsigned long 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  counter         1   30[COMRAM] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  4    0[BANK0 ] unsigned long 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;Total ram usage:        9 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    4
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		_light_loop
  7707 ;;		_my_utoa32
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text31
  7712  0124CA                     __ptext31:
  7713                           	opt stack 0
  7714  0124CA                     ___llmod:
  7715                           	opt stack 25
  7716                           
  7717                           ;incstack = 0
  7718  0124CA  0100               	movlb	0	; () banked
  7719  0124CC  5164               	movf	___llmod@divisor& (0+255),w,b
  7720  0124CE  0100               	movlb	0	; () banked
  7721  0124D0  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7722  0124D2  0100               	movlb	0	; () banked
  7723  0124D4  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7724  0124D6  0100               	movlb	0	; () banked
  7725  0124D8  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7726  0124DA  B4D8               	btfsc	status,2,c
  7727  0124DC  D037               	goto	l1105
  7728                           
  7729                           ; BSR set to: 0
  7730  0124DE  0E01               	movlw	1
  7731  0124E0  6E1F               	movwf	___llmod@counter,c
  7732  0124E2  D007               	goto	l5307
  7733  0124E4                     l5305:
  7734                           
  7735                           ; BSR set to: 0
  7736  0124E4  0100               	movlb	0	; () banked
  7737  0124E6  90D8               	bcf	status,0,c
  7738  0124E8  3764               	rlcf	___llmod@divisor& (0+255),f,b
  7739  0124EA  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7740  0124EC  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7741  0124EE  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7742  0124F0  2A1F               	incf	___llmod@counter,f,c
  7743  0124F2                     l5307:
  7744                           
  7745                           ; BSR set to: 0
  7746  0124F2  0100               	movlb	0	; () banked
  7747  0124F4  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7748  0124F6  D7F6               	goto	l5305
  7749  0124F8                     l5309:
  7750                           
  7751                           ; BSR set to: 0
  7752  0124F8  0100               	movlb	0	; () banked
  7753  0124FA  5164               	movf	___llmod@divisor& (0+255),w,b
  7754  0124FC  0100               	movlb	0	; () banked
  7755  0124FE  5D60               	subwf	___llmod@dividend& (0+255),w,b
  7756  012500  0100               	movlb	0	; () banked
  7757  012502  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  7758  012504  0100               	movlb	0	; () banked
  7759  012506  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7760  012508  0100               	movlb	0	; () banked
  7761  01250A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  7762  01250C  0100               	movlb	0	; () banked
  7763  01250E  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7764  012510  0100               	movlb	0	; () banked
  7765  012512  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  7766  012514  0100               	movlb	0	; () banked
  7767  012516  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7768  012518  A0D8               	btfss	status,0,c
  7769  01251A  D010               	goto	l5313
  7770                           
  7771                           ; BSR set to: 0
  7772  01251C  0100               	movlb	0	; () banked
  7773  01251E  5164               	movf	___llmod@divisor& (0+255),w,b
  7774  012520  0100               	movlb	0	; () banked
  7775  012522  5F60               	subwf	___llmod@dividend& (0+255),f,b
  7776  012524  0100               	movlb	0	; () banked
  7777  012526  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  7778  012528  0100               	movlb	0	; () banked
  7779  01252A  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7780  01252C  0100               	movlb	0	; () banked
  7781  01252E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  7782  012530  0100               	movlb	0	; () banked
  7783  012532  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7784  012534  0100               	movlb	0	; () banked
  7785  012536  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  7786  012538  0100               	movlb	0	; () banked
  7787  01253A  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7788  01253C                     l5313:
  7789                           
  7790                           ; BSR set to: 0
  7791  01253C  0100               	movlb	0	; () banked
  7792  01253E  90D8               	bcf	status,0,c
  7793  012540  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7794  012542  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7795  012544  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7796  012546  3364               	rrcf	___llmod@divisor& (0+255),f,b
  7797                           
  7798                           ; BSR set to: 0
  7799  012548  2E1F               	decfsz	___llmod@counter,f,c
  7800  01254A  D7D6               	goto	l5309
  7801  01254C                     l1105:
  7802                           
  7803                           ; BSR set to: 0
  7804  01254C  C060  F060         	movff	___llmod@dividend,?___llmod
  7805  012550  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  7806  012554  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  7807  012558  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  7808                           
  7809                           ; BSR set to: 0
  7810  01255C  0012               	return		;funcret
  7811  01255E                     __end_of___llmod:
  7812                           	opt stack 0
  7813                           tblptru	equ	0xFF8
  7814                           tblptrh	equ	0xFF7
  7815                           tblptrl	equ	0xFF6
  7816                           tablat	equ	0xFF5
  7817                           prodh	equ	0xFF4
  7818                           prodl	equ	0xFF3
  7819                           intcon	equ	0xFF2
  7820                           intcon2	equ	0xFF1
  7821                           postinc0	equ	0xFEE
  7822                           wreg	equ	0xFE8
  7823                           indf1	equ	0xFE7
  7824                           postinc1	equ	0xFE6
  7825                           postdec1	equ	0xFE5
  7826                           fsr1h	equ	0xFE2
  7827                           fsr1l	equ	0xFE1
  7828                           indf2	equ	0xFDF
  7829                           postinc2	equ	0xFDE
  7830                           postdec2	equ	0xFDD
  7831                           fsr2h	equ	0xFDA
  7832                           fsr2l	equ	0xFD9
  7833                           status	equ	0xFD8
  7834                           
  7835 ;; *************** function _PWM_set *****************
  7836 ;; Defined at:
  7837 ;;		line 114 in file "PIC18F27J53-killifish_light04.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  color           1    wreg     unsigned char 
  7840 ;;  value           2   15[BANK0 ] unsigned int 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  color           1   36[COMRAM] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;		None               void
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;Total ram usage:        5 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    5
  7859 ;; This function calls:
  7860 ;;		___lwdiv
  7861 ;;		___wmul
  7862 ;; This function is called by:
  7863 ;;		_command_operation
  7864 ;;		_light_loop
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text32
  7869  011750                     __ptext32:
  7870                           	opt stack 0
  7871  011750                     _PWM_set:
  7872                           	opt stack 23
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;incstack = 0
  7876                           ;PWM_set@color stored from wreg
  7877  011750  6E25               	movwf	PWM_set@color,c
  7878                           
  7879                           ;PIC18F27J53-killifish_light04.c: 115: value = value * value / 250;
  7880  011752  C06F  F01F         	movff	PWM_set@value,___wmul@multiplier
  7881  011756  C070  F020         	movff	PWM_set@value+1,___wmul@multiplier+1
  7882  01175A  C06F  F021         	movff	PWM_set@value,___wmul@multiplicand
  7883  01175E  C070  F022         	movff	PWM_set@value+1,___wmul@multiplicand+1
  7884  011762  ECF4  F095         	call	___wmul	;wreg free
  7885  011766  C01F  F068         	movff	?___wmul,___lwdiv@dividend
  7886  01176A  C020  F069         	movff	?___wmul+1,___lwdiv@dividend+1
  7887  01176E  0E00               	movlw	0
  7888  011770  0100               	movlb	0	; () banked
  7889  011772  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7890  011774  0EFA               	movlw	250
  7891  011776  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  7892  011778  EC71  F093         	call	___lwdiv	;wreg free
  7893  01177C  C068  F06F         	movff	?___lwdiv,PWM_set@value
  7894  011780  C069  F070         	movff	?___lwdiv+1,PWM_set@value+1
  7895                           
  7896                           ;PIC18F27J53-killifish_light04.c: 116: value = value * value / 250;
  7897  011784  C06F  F01F         	movff	PWM_set@value,___wmul@multiplier
  7898  011788  C070  F020         	movff	PWM_set@value+1,___wmul@multiplier+1
  7899  01178C  C06F  F021         	movff	PWM_set@value,___wmul@multiplicand
  7900  011790  C070  F022         	movff	PWM_set@value+1,___wmul@multiplicand+1
  7901  011794  ECF4  F095         	call	___wmul	;wreg free
  7902  011798  C01F  F068         	movff	?___wmul,___lwdiv@dividend
  7903  01179C  C020  F069         	movff	?___wmul+1,___lwdiv@dividend+1
  7904  0117A0  0E00               	movlw	0
  7905  0117A2  0100               	movlb	0	; () banked
  7906  0117A4  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7907  0117A6  0EFA               	movlw	250
  7908  0117A8  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  7909  0117AA  EC71  F093         	call	___lwdiv	;wreg free
  7910  0117AE  C068  F06F         	movff	?___lwdiv,PWM_set@value
  7911  0117B2  C069  F070         	movff	?___lwdiv+1,PWM_set@value+1
  7912                           
  7913                           ;PIC18F27J53-killifish_light04.c: 117: value = value * 3 / 4;
  7914  0117B6  C06F  F01F         	movff	PWM_set@value,___wmul@multiplier
  7915  0117BA  C070  F020         	movff	PWM_set@value+1,___wmul@multiplier+1
  7916  0117BE  0E00               	movlw	0
  7917  0117C0  6E22               	movwf	___wmul@multiplicand+1,c
  7918  0117C2  0E03               	movlw	3
  7919  0117C4  6E21               	movwf	___wmul@multiplicand,c
  7920  0117C6  ECF4  F095         	call	___wmul	;wreg free
  7921  0117CA  90D8               	bcf	status,0,c
  7922  0117CC  3220               	rrcf	?___wmul+1,f,c
  7923  0117CE  321F               	rrcf	?___wmul,f,c
  7924  0117D0  90D8               	bcf	status,0,c
  7925  0117D2  3220               	rrcf	?___wmul+1,f,c
  7926  0117D4  321F               	rrcf	?___wmul,f,c
  7927  0117D6  C01F  F06F         	movff	?___wmul,PWM_set@value
  7928  0117DA  C020  F070         	movff	?___wmul+1,PWM_set@value+1
  7929                           
  7930                           ;PIC18F27J53-killifish_light04.c: 118: switch (color) {
  7931  0117DE  D04F               	goto	l5147
  7932  0117E0                     l5129:
  7933                           
  7934                           ;PIC18F27J53-killifish_light04.c: 120: if (value < 250 / 4) {
  7935  0117E0  0100               	movlb	0	; () banked
  7936  0117E2  5170               	movf	(PWM_set@value+1)& (0+255),w,b
  7937  0117E4  E105               	bnz	l5133
  7938  0117E6  0E3E               	movlw	62
  7939  0117E8  0100               	movlb	0	; () banked
  7940  0117EA  5D6F               	subwf	PWM_set@value& (0+255),w,b
  7941  0117EC  A0D8               	btfss	status,0,c
  7942  0117EE  D069               	goto	l5167
  7943  0117F0                     l5133:
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;PIC18F27J53-killifish_light04.c: 123: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  7947  0117F0  C06F  F071         	movff	PWM_set@value,??_PWM_set
  7948  0117F4  C070  F072         	movff	PWM_set@value+1,??_PWM_set+1
  7949  0117F8  90D8               	bcf	status,0,c
  7950  0117FA  0100               	movlb	0	; () banked
  7951  0117FC  3771               	rlcf	??_PWM_set& (0+255),f,b
  7952  0117FE  3772               	rlcf	(??_PWM_set+1)& (0+255),f,b
  7953  011800  0E84               	movlw	132
  7954  011802  0100               	movlb	0	; () banked
  7955  011804  2571               	addwf	??_PWM_set& (0+255),w,b
  7956  011806  0100               	movlb	0	; () banked
  7957  011808  6F68               	movwf	___lwdiv@dividend& (0+255),b
  7958  01180A  0EFF               	movlw	255
  7959  01180C  0100               	movlb	0	; () banked
  7960  01180E  2172               	addwfc	(??_PWM_set+1)& (0+255),w,b
  7961  011810  0100               	movlb	0	; () banked
  7962  011812  6F69               	movwf	(___lwdiv@dividend+1)& (0+255),b
  7963  011814  0E00               	movlw	0
  7964  011816  0100               	movlb	0	; () banked
  7965  011818  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7966  01181A  0E03               	movlw	3
  7967  01181C  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  7968  01181E  EC71  F093         	call	___lwdiv	;wreg free
  7969  011822  0E3E               	movlw	62
  7970  011824  0100               	movlb	0	; () banked
  7971  011826  2568               	addwf	?___lwdiv& (0+255),w,b
  7972  011828  0100               	movlb	0	; () banked
  7973  01182A  6F6F               	movwf	PWM_set@value& (0+255),b
  7974  01182C  0E00               	movlw	0
  7975  01182E  0100               	movlb	0	; () banked
  7976  011830  2169               	addwfc	(?___lwdiv+1)& (0+255),w,b
  7977  011832  D022               	goto	L1
  7978  011834                     l5139:
  7979                           
  7980                           ;PIC18F27J53-killifish_light04.c: 134: if (value < 250 / 4) {
  7981  011834  0100               	movlb	0	; () banked
  7982  011836  5170               	movf	(PWM_set@value+1)& (0+255),w,b
  7983  011838  E105               	bnz	l5143
  7984  01183A  0E3E               	movlw	62
  7985  01183C  0100               	movlb	0	; () banked
  7986  01183E  5D6F               	subwf	PWM_set@value& (0+255),w,b
  7987  011840  A0D8               	btfss	status,0,c
  7988  011842  D03F               	goto	l5167
  7989  011844                     l5143:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;PIC18F27J53-killifish_light04.c: 137: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
  7993  011844  0EC2               	movlw	194
  7994  011846  0100               	movlb	0	; () banked
  7995  011848  256F               	addwf	PWM_set@value& (0+255),w,b
  7996  01184A  6E1F               	movwf	___wmul@multiplier,c
  7997  01184C  0EFF               	movlw	255
  7998  01184E  0100               	movlb	0	; () banked
  7999  011850  2170               	addwfc	(PWM_set@value+1)& (0+255),w,b
  8000  011852  6E20               	movwf	___wmul@multiplier+1,c
  8001  011854  0E00               	movlw	0
  8002  011856  6E22               	movwf	___wmul@multiplicand+1,c
  8003  011858  0E03               	movlw	3
  8004  01185A  6E21               	movwf	___wmul@multiplicand,c
  8005  01185C  ECF4  F095         	call	___wmul	;wreg free
  8006  011860  90D8               	bcf	status,0,c
  8007  011862  3220               	rrcf	?___wmul+1,f,c
  8008  011864  321F               	rrcf	?___wmul,f,c
  8009  011866  90D8               	bcf	status,0,c
  8010  011868  3220               	rrcf	?___wmul+1,f,c
  8011  01186A  321F               	rrcf	?___wmul,f,c
  8012  01186C  0E3E               	movlw	62
  8013  01186E  241F               	addwf	?___wmul,w,c
  8014  011870  0100               	movlb	0	; () banked
  8015  011872  6F6F               	movwf	PWM_set@value& (0+255),b
  8016  011874  0E00               	movlw	0
  8017  011876  2020               	addwfc	?___wmul+1,w,c
  8018  011878                     L1:
  8019  011878  0100               	movlb	0	; () banked
  8020  01187A  6F70               	movwf	(PWM_set@value+1)& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;PIC18F27J53-killifish_light04.c: 142: }
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;PIC18F27J53-killifish_light04.c: 141: break;
  8027                           
  8028                           ;PIC18F27J53-killifish_light04.c: 140: case 3:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;PIC18F27J53-killifish_light04.c: 138: }
  8032                           ;PIC18F27J53-killifish_light04.c: 139: break;
  8033  01187C  D022               	goto	l5167
  8034  01187E                     l5147:
  8035  01187E  5025               	movf	PWM_set@color,w,c
  8036                           
  8037                           ; Switch size 1, requested type "space"
  8038                           ; Number of cases is 4, Range of values is 0 to 3
  8039                           ; switch strategies available:
  8040                           ; Name         Instructions Cycles
  8041                           ; simple_byte           13     7 (average)
  8042                           ;	Chosen strategy is simple_byte
  8043  011880  0A00               	xorlw	0	; case 0
  8044  011882  B4D8               	btfsc	status,2,c
  8045  011884  D7AD               	goto	l5129
  8046  011886  0A01               	xorlw	1	; case 1
  8047  011888  B4D8               	btfsc	status,2,c
  8048  01188A  D01B               	goto	l5167
  8049  01188C  0A03               	xorlw	3	; case 2
  8050  01188E  B4D8               	btfsc	status,2,c
  8051  011890  D7D1               	goto	l5139
  8052  011892  0A01               	xorlw	1	; case 3
  8053                           
  8054                           ;PIC18F27J53-killifish_light04.c: 143: switch (color) {
  8055  011894  D016               	goto	l5167
  8056  011896                     l5149:
  8057                           
  8058                           ;PIC18F27J53-killifish_light04.c: 145: CCP1CONbits.DC1B = 0;
  8059  011896  0ECF               	movlw	-49
  8060  011898  16BA               	andwf	4026,f,c	;volatile
  8061                           
  8062                           ;PIC18F27J53-killifish_light04.c: 146: CCPR1L = value;
  8063  01189A  C06F  FFBB         	movff	PWM_set@value,4027	;volatile
  8064                           
  8065                           ;PIC18F27J53-killifish_light04.c: 147: break;
  8066  01189E  0012               	return	
  8067  0118A0                     l5153:
  8068                           
  8069                           ;PIC18F27J53-killifish_light04.c: 149: CCP2CONbits.DC2B = 0;
  8070  0118A0  0ECF               	movlw	-49
  8071  0118A2  16B4               	andwf	4020,f,c	;volatile
  8072                           
  8073                           ;PIC18F27J53-killifish_light04.c: 150: CCPR2L = value;
  8074  0118A4  C06F  FFB5         	movff	PWM_set@value,4021	;volatile
  8075                           
  8076                           ;PIC18F27J53-killifish_light04.c: 151: break;
  8077  0118A8  0012               	return	
  8078  0118AA                     l5157:
  8079                           
  8080                           ;PIC18F27J53-killifish_light04.c: 153: CCP3CONbits.DC3B = 0;
  8081  0118AA  0ECF               	movlw	-49
  8082  0118AC  010F               	movlb	15	; () banked
  8083  0118AE  1715               	andwf	21,f,b	;volatile
  8084                           
  8085                           ; BSR set to: 15
  8086                           ;PIC18F27J53-killifish_light04.c: 154: CCPR3L = value;
  8087  0118B0  C06F  FF16         	movff	PWM_set@value,3862	;volatile
  8088                           
  8089                           ;PIC18F27J53-killifish_light04.c: 155: break;
  8090  0118B4  0012               	return	
  8091  0118B6                     l5161:
  8092                           
  8093                           ;PIC18F27J53-killifish_light04.c: 157: CCP4CONbits.DC4B = 0;
  8094  0118B6  0ECF               	movlw	-49
  8095  0118B8  010F               	movlb	15	; () banked
  8096  0118BA  1712               	andwf	18,f,b	;volatile
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;PIC18F27J53-killifish_light04.c: 158: CCPR4L = value;
  8100  0118BC  C06F  FF13         	movff	PWM_set@value,3859	;volatile
  8101                           
  8102                           ; BSR set to: 15
  8103                           ;PIC18F27J53-killifish_light04.c: 160: }
  8104                           
  8105                           ;PIC18F27J53-killifish_light04.c: 159: break;
  8106  0118C0  0012               	return	
  8107  0118C2                     l5167:
  8108  0118C2  5025               	movf	PWM_set@color,w,c
  8109                           
  8110                           ; Switch size 1, requested type "space"
  8111                           ; Number of cases is 4, Range of values is 0 to 3
  8112                           ; switch strategies available:
  8113                           ; Name         Instructions Cycles
  8114                           ; simple_byte           13     7 (average)
  8115                           ;	Chosen strategy is simple_byte
  8116  0118C4  0A00               	xorlw	0	; case 0
  8117  0118C6  B4D8               	btfsc	status,2,c
  8118  0118C8  D7E6               	goto	l5149
  8119  0118CA  0A01               	xorlw	1	; case 1
  8120  0118CC  B4D8               	btfsc	status,2,c
  8121  0118CE  D7E8               	goto	l5153
  8122  0118D0  0A03               	xorlw	3	; case 2
  8123  0118D2  B4D8               	btfsc	status,2,c
  8124  0118D4  D7EA               	goto	l5157
  8125  0118D6  0A01               	xorlw	1	; case 3
  8126  0118D8  A4D8               	btfss	status,2,c
  8127  0118DA  0012               	return	
  8128  0118DC  D7EC               	goto	l5161
  8129  0118DE                     __end_of_PWM_set:
  8130                           	opt stack 0
  8131                           tblptru	equ	0xFF8
  8132                           tblptrh	equ	0xFF7
  8133                           tblptrl	equ	0xFF6
  8134                           tablat	equ	0xFF5
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           intcon	equ	0xFF2
  8138                           intcon2	equ	0xFF1
  8139                           postinc0	equ	0xFEE
  8140                           wreg	equ	0xFE8
  8141                           indf1	equ	0xFE7
  8142                           postinc1	equ	0xFE6
  8143                           postdec1	equ	0xFE5
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           indf2	equ	0xFDF
  8147                           postinc2	equ	0xFDE
  8148                           postdec2	equ	0xFDD
  8149                           fsr2h	equ	0xFDA
  8150                           fsr2l	equ	0xFD9
  8151                           status	equ	0xFD8
  8152                           
  8153 ;; *************** function ___wmul *****************
  8154 ;; Defined at:
  8155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  multiplier      2   30[COMRAM] unsigned int 
  8158 ;;  multiplicand    2   32[COMRAM] unsigned int 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  product         2   34[COMRAM] unsigned int 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  2   30[COMRAM] unsigned int 
  8163 ;; Registers used:
  8164 ;;		wreg, status,2, status,0, prodl, prodh
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;Total ram usage:        6 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:    4
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_my_atoi
  8181 ;;		_PWM_set
  8182 ;;		_command_operation
  8183 ;;		_sprintf
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text33
  8188  012BE8                     __ptext33:
  8189                           	opt stack 0
  8190  012BE8                     ___wmul:
  8191                           	opt stack 23
  8192                           
  8193                           ;incstack = 0
  8194  012BE8  501F               	movf	___wmul@multiplier,w,c
  8195  012BEA  0221               	mulwf	___wmul@multiplicand,c
  8196  012BEC  CFF3 F023          	movff	prodl,___wmul@product
  8197  012BF0  CFF4 F024          	movff	prodh,___wmul@product+1
  8198  012BF4  501F               	movf	___wmul@multiplier,w,c
  8199  012BF6  0222               	mulwf	___wmul@multiplicand+1,c
  8200  012BF8  50F3               	movf	prodl,w,c
  8201  012BFA  2624               	addwf	___wmul@product+1,f,c
  8202  012BFC  5020               	movf	___wmul@multiplier+1,w,c
  8203  012BFE  0221               	mulwf	___wmul@multiplicand,c
  8204  012C00  50F3               	movf	prodl,w,c
  8205  012C02  2624               	addwf	___wmul@product+1,f,c
  8206  012C04  C023  F01F         	movff	___wmul@product,?___wmul
  8207  012C08  C024  F020         	movff	___wmul@product+1,?___wmul+1
  8208  012C0C  0012               	return	
  8209  012C0E                     __end_of___wmul:
  8210                           	opt stack 0
  8211                           tblptru	equ	0xFF8
  8212                           tblptrh	equ	0xFF7
  8213                           tblptrl	equ	0xFF6
  8214                           tablat	equ	0xFF5
  8215                           prodh	equ	0xFF4
  8216                           prodl	equ	0xFF3
  8217                           intcon	equ	0xFF2
  8218                           intcon2	equ	0xFF1
  8219                           postinc0	equ	0xFEE
  8220                           wreg	equ	0xFE8
  8221                           indf1	equ	0xFE7
  8222                           postinc1	equ	0xFE6
  8223                           postdec1	equ	0xFE5
  8224                           fsr1h	equ	0xFE2
  8225                           fsr1l	equ	0xFE1
  8226                           indf2	equ	0xFDF
  8227                           postinc2	equ	0xFDE
  8228                           postdec2	equ	0xFDD
  8229                           fsr2h	equ	0xFDA
  8230                           fsr2l	equ	0xFD9
  8231                           status	equ	0xFD8
  8232                           
  8233 ;; *************** function ___lwdiv *****************
  8234 ;; Defined at:
  8235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  dividend        2    8[BANK0 ] unsigned int 
  8238 ;;  divisor         2   10[BANK0 ] unsigned int 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  quotient        2   13[BANK0 ] unsigned int 
  8241 ;;  counter         1   12[BANK0 ] unsigned char 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  2    8[BANK0 ] unsigned int 
  8244 ;; Registers used:
  8245 ;;		wreg, status,2, status,0
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8252 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8254 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8255 ;;Total ram usage:        7 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    4
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_ringbuf_put_num
  8262 ;;		_PWM_set
  8263 ;;		_command_operation
  8264 ;;		_sprintf
  8265 ;;		_tx_sendn
  8266 ;;		_my_utoa
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text34
  8271  0126E2                     __ptext34:
  8272                           	opt stack 0
  8273  0126E2                     ___lwdiv:
  8274                           	opt stack 24
  8275                           
  8276                           ;incstack = 0
  8277  0126E2  0E00               	movlw	0
  8278  0126E4  0100               	movlb	0	; () banked
  8279  0126E6  6F6E               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8280  0126E8  0E00               	movlw	0
  8281  0126EA  6F6D               	movwf	___lwdiv@quotient& (0+255),b
  8282                           
  8283                           ; BSR set to: 0
  8284  0126EC  0100               	movlb	0	; () banked
  8285  0126EE  516A               	movf	___lwdiv@divisor& (0+255),w,b
  8286  0126F0  0100               	movlb	0	; () banked
  8287  0126F2  116B               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  8288  0126F4  B4D8               	btfsc	status,2,c
  8289  0126F6  D02C               	goto	l1148
  8290                           
  8291                           ; BSR set to: 0
  8292  0126F8  0E01               	movlw	1
  8293  0126FA  0100               	movlb	0	; () banked
  8294  0126FC  6F6C               	movwf	___lwdiv@counter& (0+255),b
  8295  0126FE  D006               	goto	l4745
  8296  012700                     l4743:
  8297                           
  8298                           ; BSR set to: 0
  8299  012700  0100               	movlb	0	; () banked
  8300  012702  90D8               	bcf	status,0,c
  8301  012704  376A               	rlcf	___lwdiv@divisor& (0+255),f,b
  8302  012706  376B               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8303  012708  0100               	movlb	0	; () banked
  8304  01270A  2B6C               	incf	___lwdiv@counter& (0+255),f,b
  8305  01270C                     l4745:
  8306                           
  8307                           ; BSR set to: 0
  8308  01270C  0100               	movlb	0	; () banked
  8309  01270E  AF6B               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8310  012710  D7F7               	goto	l4743
  8311  012712                     l4747:
  8312                           
  8313                           ; BSR set to: 0
  8314  012712  0100               	movlb	0	; () banked
  8315  012714  90D8               	bcf	status,0,c
  8316  012716  376D               	rlcf	___lwdiv@quotient& (0+255),f,b
  8317  012718  376E               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8318                           
  8319                           ; BSR set to: 0
  8320  01271A  0100               	movlb	0	; () banked
  8321  01271C  516A               	movf	___lwdiv@divisor& (0+255),w,b
  8322  01271E  0100               	movlb	0	; () banked
  8323  012720  5D68               	subwf	___lwdiv@dividend& (0+255),w,b
  8324  012722  0100               	movlb	0	; () banked
  8325  012724  516B               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8326  012726  0100               	movlb	0	; () banked
  8327  012728  5969               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8328  01272A  A0D8               	btfss	status,0,c
  8329  01272C  D00A               	goto	l4755
  8330                           
  8331                           ; BSR set to: 0
  8332  01272E  0100               	movlb	0	; () banked
  8333  012730  516A               	movf	___lwdiv@divisor& (0+255),w,b
  8334  012732  0100               	movlb	0	; () banked
  8335  012734  5F68               	subwf	___lwdiv@dividend& (0+255),f,b
  8336  012736  0100               	movlb	0	; () banked
  8337  012738  516B               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8338  01273A  0100               	movlb	0	; () banked
  8339  01273C  5B69               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8340                           
  8341                           ; BSR set to: 0
  8342  01273E  0100               	movlb	0	; () banked
  8343  012740  816D               	bsf	___lwdiv@quotient& (0+255),0,b
  8344  012742                     l4755:
  8345                           
  8346                           ; BSR set to: 0
  8347  012742  0100               	movlb	0	; () banked
  8348  012744  90D8               	bcf	status,0,c
  8349  012746  336B               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8350  012748  336A               	rrcf	___lwdiv@divisor& (0+255),f,b
  8351                           
  8352                           ; BSR set to: 0
  8353  01274A  0100               	movlb	0	; () banked
  8354  01274C  2F6C               	decfsz	___lwdiv@counter& (0+255),f,b
  8355  01274E  D7E1               	goto	l4747
  8356  012750                     l1148:
  8357                           
  8358                           ; BSR set to: 0
  8359  012750  C06D  F068         	movff	___lwdiv@quotient,?___lwdiv
  8360  012754  C06E  F069         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8361                           
  8362                           ; BSR set to: 0
  8363  012758  0012               	return		;funcret
  8364  01275A                     __end_of___lwdiv:
  8365                           	opt stack 0
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           intcon2	equ	0xFF1
  8374                           postinc0	equ	0xFEE
  8375                           wreg	equ	0xFE8
  8376                           indf1	equ	0xFE7
  8377                           postinc1	equ	0xFE6
  8378                           postdec1	equ	0xFE5
  8379                           fsr1h	equ	0xFE2
  8380                           fsr1l	equ	0xFE1
  8381                           indf2	equ	0xFDF
  8382                           postinc2	equ	0xFDE
  8383                           postdec2	equ	0xFDD
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8
  8387                           
  8388 ;; *************** function _RTCC_loop *****************
  8389 ;; Defined at:
  8390 ;;		line 387 in file "../My_header\My_RTCC.h"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;		None               void
  8397 ;; Registers used:
  8398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    8
  8411 ;; This function calls:
  8412 ;;		_RTCC_from_RTCC
  8413 ;; This function is called by:
  8414 ;;		_main
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text35
  8419  012A64                     __ptext35:
  8420                           	opt stack 0
  8421  012A64                     _RTCC_loop:
  8422                           	opt stack 22
  8423  012A64                     l453:
  8424  012A64  010F               	movlb	15	; () banked
  8425  012A66  B93F               	btfsc	63,4,b	;volatile
  8426  012A68  D7FD               	goto	l453
  8427                           
  8428                           ; BSR set to: 15
  8429                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
  8430                           
  8431                           ; BSR set to: 15
  8432  012A6A  0E00               	movlw	0
  8433  012A6C  B73F               	btfsc	63,3,b	;volatile
  8434  012A6E  0E01               	movlw	1
  8435  012A70  0100               	movlb	0	; () banked
  8436  012A72  6FC8               	movwf	_halfsec& (0+255),b
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
  8440  012A74  0100               	movlb	0	; () banked
  8441  012A76  51C8               	movf	_halfsec& (0+255),w,b
  8442  012A78  0100               	movlb	0	; () banked
  8443  012A7A  19C6               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
  8444  012A7C  B4D8               	btfsc	status,2,c
  8445  012A7E  0012               	return	
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
  8449  012A80  C0C8  F0C6         	movff	_halfsec,RTCC_loop@prev_halfsec
  8450                           
  8451                           ;My_header\My_RTCC.h: 393: colon = halfsec;
  8452  012A84  C0C8  F0C7         	movff	_halfsec,_colon
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
  8456  012A88  0E01               	movlw	1
  8457  012A8A  0100               	movlb	0	; () banked
  8458  012A8C  6FCA               	movwf	_time_change_flag& (0+255),b
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
  8462  012A8E  0EF1               	movlw	low _caltime_now
  8463  012A90  0100               	movlb	0	; () banked
  8464  012A92  6F80               	movwf	RTCC_from_RTCC@ct& (0+255),b
  8465  012A94  0E00               	movlw	high _caltime_now
  8466  012A96  0100               	movlb	0	; () banked
  8467  012A98  6F81               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  8468  012A9A  0EF8               	movlw	low _epoch_now
  8469  012A9C  0100               	movlb	0	; () banked
  8470  012A9E  6F82               	movwf	RTCC_from_RTCC@ep& (0+255),b
  8471  012AA0  0E00               	movlw	high _epoch_now
  8472  012AA2  0100               	movlb	0	; () banked
  8473  012AA4  6F83               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  8474  012AA6  EC18  F096         	call	_RTCC_from_RTCC	;wreg free
  8475  012AAA  0012               	return	
  8476  012AAC                     __end_of_RTCC_loop:
  8477                           	opt stack 0
  8478                           tblptru	equ	0xFF8
  8479                           tblptrh	equ	0xFF7
  8480                           tblptrl	equ	0xFF6
  8481                           tablat	equ	0xFF5
  8482                           prodh	equ	0xFF4
  8483                           prodl	equ	0xFF3
  8484                           intcon	equ	0xFF2
  8485                           intcon2	equ	0xFF1
  8486                           postinc0	equ	0xFEE
  8487                           wreg	equ	0xFE8
  8488                           indf1	equ	0xFE7
  8489                           postinc1	equ	0xFE6
  8490                           postdec1	equ	0xFE5
  8491                           fsr1h	equ	0xFE2
  8492                           fsr1l	equ	0xFE1
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           fsr2h	equ	0xFDA
  8497                           fsr2l	equ	0xFD9
  8498                           status	equ	0xFD8
  8499                           
  8500 ;; *************** function _RTCC_from_RTCC *****************
  8501 ;; Defined at:
  8502 ;;		line 231 in file "../My_header\My_RTCC.h"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  ct              2   32[BANK0 ] PTR struct .
  8505 ;;		 -> caltime_now(7), 
  8506 ;;  ep              2   34[BANK0 ] PTR unsigned long 
  8507 ;;		 -> epoch_now(4), 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;		None               void
  8512 ;; Registers used:
  8513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8523 ;;Total ram usage:        4 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    7
  8526 ;; This function calls:
  8527 ;;		_RTCC_to_caltime
  8528 ;;		_caltime_to_epoch
  8529 ;; This function is called by:
  8530 ;;		_RTCC_loop
  8531 ;;		_print_time
  8532 ;;		_light_loop
  8533 ;;		_main
  8534 ;;		_RTCC_adjust_time_inc
  8535 ;;		_RTCC_adjust_time_dec
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text36
  8540  012C30                     __ptext36:
  8541                           	opt stack 0
  8542  012C30                     _RTCC_from_RTCC:
  8543                           	opt stack 19
  8544                           
  8545                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  8546                           
  8547                           ;incstack = 0
  8548  012C30  C080  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  8549  012C34  C081  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  8550  012C38  EC93  F090         	call	_RTCC_to_caltime	;wreg free
  8551                           
  8552                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  8553  012C3C  C080  F071         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  8554  012C40  C081  F072         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  8555  012C44  C082  F073         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  8556  012C48  C083  F074         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  8557  012C4C  EC21  F087         	call	_caltime_to_epoch	;wreg free
  8558  012C50  0012               	return		;funcret
  8559  012C52                     __end_of_RTCC_from_RTCC:
  8560                           	opt stack 0
  8561                           tblptru	equ	0xFF8
  8562                           tblptrh	equ	0xFF7
  8563                           tblptrl	equ	0xFF6
  8564                           tablat	equ	0xFF5
  8565                           prodh	equ	0xFF4
  8566                           prodl	equ	0xFF3
  8567                           intcon	equ	0xFF2
  8568                           intcon2	equ	0xFF1
  8569                           postinc0	equ	0xFEE
  8570                           wreg	equ	0xFE8
  8571                           indf1	equ	0xFE7
  8572                           postinc1	equ	0xFE6
  8573                           postdec1	equ	0xFE5
  8574                           fsr1h	equ	0xFE2
  8575                           fsr1l	equ	0xFE1
  8576                           indf2	equ	0xFDF
  8577                           postinc2	equ	0xFDE
  8578                           postdec2	equ	0xFDD
  8579                           fsr2h	equ	0xFDA
  8580                           fsr2l	equ	0xFD9
  8581                           status	equ	0xFD8
  8582                           
  8583 ;; *************** function _caltime_to_epoch *****************
  8584 ;; Defined at:
  8585 ;;		line 211 in file "../My_header\My_RTCC.h"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  ct              2   17[BANK0 ] PTR struct .
  8588 ;;		 -> caltime_now(7), 
  8589 ;;  ep              2   19[BANK0 ] PTR unsigned long 
  8590 ;;		 -> epoch_now(4), 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  month           1   31[BANK0 ] unsigned char 
  8593 ;;  month           1   26[BANK0 ] unsigned char 
  8594 ;;  year            1   25[BANK0 ] unsigned char 
  8595 ;;  epoch           4   27[BANK0 ] unsigned long 
  8596 ;; Return value:  Size  Location     Type
  8597 ;;		None               void
  8598 ;; Registers used:
  8599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8607 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8608 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8609 ;;Total ram usage:       15 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    6
  8612 ;; This function calls:
  8613 ;;		___lmul
  8614 ;;		_month_length
  8615 ;; This function is called by:
  8616 ;;		_RTCC_from_RTCC
  8617 ;;		_RTCC_from_caltime
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text37
  8622  010E42                     __ptext37:
  8623                           	opt stack 0
  8624  010E42                     _caltime_to_epoch:
  8625                           	opt stack 19
  8626                           
  8627                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  8628                           
  8629                           ;incstack = 0
  8630  010E42  0E00               	movlw	0
  8631  010E44  0100               	movlb	0	; () banked
  8632  010E46  6F7B               	movwf	caltime_to_epoch@epoch& (0+255),b
  8633  010E48  0E00               	movlw	0
  8634  010E4A  6F7C               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  8635  010E4C  0E00               	movlw	0
  8636  010E4E  6F7D               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  8637  010E50  0E00               	movlw	0
  8638  010E52  6F7E               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  8639                           
  8640                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  8641  010E54  0E00               	movlw	0
  8642  010E56  0100               	movlb	0	; () banked
  8643  010E58  6F79               	movwf	caltime_to_epoch@year& (0+255),b
  8644  010E5A  D037               	goto	l4703
  8645  010E5C                     l4689:
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  8649  010E5C  0E01               	movlw	1
  8650  010E5E  0100               	movlb	0	; () banked
  8651  010E60  6F7F               	movwf	caltime_to_epoch@month& (0+255),b
  8652  010E62                     l4691:
  8653                           
  8654                           ; BSR set to: 0
  8655  010E62  0E0C               	movlw	12
  8656  010E64  0100               	movlb	0	; () banked
  8657  010E66  657F               	cpfsgt	caltime_to_epoch@month& (0+255),b
  8658  010E68  D001               	goto	l4695
  8659  010E6A  D02D               	goto	l4701
  8660  010E6C                     l4695:
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  8664  010E6C  C07F  F025         	movff	caltime_to_epoch@month,month_length@month
  8665  010E70  0100               	movlb	0	; () banked
  8666  010E72  5179               	movf	caltime_to_epoch@year& (0+255),w,b
  8667  010E74  EC45  F08D         	call	_month_length
  8668  010E78  0100               	movlb	0	; () banked
  8669  010E7A  6F75               	movwf	??_caltime_to_epoch& (0+255),b
  8670  010E7C  0100               	movlb	0	; () banked
  8671  010E7E  5175               	movf	??_caltime_to_epoch& (0+255),w,b
  8672  010E80  0100               	movlb	0	; () banked
  8673  010E82  6F65               	movwf	___lmul@multiplier& (0+255),b
  8674  010E84  6B66               	clrf	(___lmul@multiplier+1)& (0+255),b
  8675  010E86  6B67               	clrf	(___lmul@multiplier+2)& (0+255),b
  8676  010E88  6B68               	clrf	(___lmul@multiplier+3)& (0+255),b
  8677  010E8A  0E80               	movlw	128
  8678  010E8C  0100               	movlb	0	; () banked
  8679  010E8E  6F69               	movwf	___lmul@multiplicand& (0+255),b
  8680  010E90  0E51               	movlw	81
  8681  010E92  6F6A               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8682  010E94  0E01               	movlw	1
  8683  010E96  6F6B               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8684  010E98  0E00               	movlw	0
  8685  010E9A  6F6C               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8686  010E9C  ECAD  F093         	call	___lmul	;wreg free
  8687  010EA0  0100               	movlb	0	; () banked
  8688  010EA2  5165               	movf	?___lmul& (0+255),w,b
  8689  010EA4  0100               	movlb	0	; () banked
  8690  010EA6  277B               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8691  010EA8  0100               	movlb	0	; () banked
  8692  010EAA  5166               	movf	(?___lmul+1)& (0+255),w,b
  8693  010EAC  0100               	movlb	0	; () banked
  8694  010EAE  237C               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8695  010EB0  0100               	movlb	0	; () banked
  8696  010EB2  5167               	movf	(?___lmul+2)& (0+255),w,b
  8697  010EB4  0100               	movlb	0	; () banked
  8698  010EB6  237D               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8699  010EB8  0100               	movlb	0	; () banked
  8700  010EBA  5168               	movf	(?___lmul+3)& (0+255),w,b
  8701  010EBC  0100               	movlb	0	; () banked
  8702  010EBE  237E               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8703                           
  8704                           ; BSR set to: 0
  8705  010EC0  0100               	movlb	0	; () banked
  8706  010EC2  2B7F               	incf	caltime_to_epoch@month& (0+255),f,b
  8707  010EC4  D7CE               	goto	l4691
  8708  010EC6                     l4701:
  8709                           
  8710                           ; BSR set to: 0
  8711  010EC6  0100               	movlb	0	; () banked
  8712  010EC8  2B79               	incf	caltime_to_epoch@year& (0+255),f,b
  8713  010ECA                     l4703:
  8714                           
  8715                           ; BSR set to: 0
  8716  010ECA  0100               	movlb	0	; () banked
  8717  010ECC  EE20 F006          	lfsr	2,6
  8718  010ED0  5171               	movf	caltime_to_epoch@ct& (0+255),w,b
  8719  010ED2  26D9               	addwf	fsr2l,f,c
  8720  010ED4  5172               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8721  010ED6  22DA               	addwfc	fsr2h,f,c
  8722  010ED8  50DE               	movf	postinc2,w,c
  8723  010EDA  0100               	movlb	0	; () banked
  8724  010EDC  5D79               	subwf	caltime_to_epoch@year& (0+255),w,b
  8725  010EDE  A0D8               	btfss	status,0,c
  8726  010EE0  D7BD               	goto	l4689
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;My_header\My_RTCC.h: 216: }
  8730                           ;My_header\My_RTCC.h: 217: }
  8731                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  8732                           
  8733                           ; BSR set to: 0
  8734  010EE2  0E01               	movlw	1
  8735  010EE4  0100               	movlb	0	; () banked
  8736  010EE6  6F7A               	movwf	caltime_to_epoch@month_2079& (0+255),b
  8737  010EE8  D032               	goto	l4711
  8738  010EEA                     l4707:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  8742  010EEA  C07A  F025         	movff	caltime_to_epoch@month_2079,month_length@month
  8743  010EEE  0100               	movlb	0	; () banked
  8744  010EF0  EE20 F006          	lfsr	2,6
  8745  010EF4  5171               	movf	caltime_to_epoch@ct& (0+255),w,b
  8746  010EF6  26D9               	addwf	fsr2l,f,c
  8747  010EF8  5172               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8748  010EFA  22DA               	addwfc	fsr2h,f,c
  8749  010EFC  50DF               	movf	indf2,w,c
  8750  010EFE  EC45  F08D         	call	_month_length
  8751  010F02  0100               	movlb	0	; () banked
  8752  010F04  6F75               	movwf	??_caltime_to_epoch& (0+255),b
  8753  010F06  0100               	movlb	0	; () banked
  8754  010F08  5175               	movf	??_caltime_to_epoch& (0+255),w,b
  8755  010F0A  0100               	movlb	0	; () banked
  8756  010F0C  6F65               	movwf	___lmul@multiplier& (0+255),b
  8757  010F0E  6B66               	clrf	(___lmul@multiplier+1)& (0+255),b
  8758  010F10  6B67               	clrf	(___lmul@multiplier+2)& (0+255),b
  8759  010F12  6B68               	clrf	(___lmul@multiplier+3)& (0+255),b
  8760  010F14  0E80               	movlw	128
  8761  010F16  0100               	movlb	0	; () banked
  8762  010F18  6F69               	movwf	___lmul@multiplicand& (0+255),b
  8763  010F1A  0E51               	movlw	81
  8764  010F1C  6F6A               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8765  010F1E  0E01               	movlw	1
  8766  010F20  6F6B               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8767  010F22  0E00               	movlw	0
  8768  010F24  6F6C               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8769  010F26  ECAD  F093         	call	___lmul	;wreg free
  8770  010F2A  0100               	movlb	0	; () banked
  8771  010F2C  5165               	movf	?___lmul& (0+255),w,b
  8772  010F2E  0100               	movlb	0	; () banked
  8773  010F30  277B               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8774  010F32  0100               	movlb	0	; () banked
  8775  010F34  5166               	movf	(?___lmul+1)& (0+255),w,b
  8776  010F36  0100               	movlb	0	; () banked
  8777  010F38  237C               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8778  010F3A  0100               	movlb	0	; () banked
  8779  010F3C  5167               	movf	(?___lmul+2)& (0+255),w,b
  8780  010F3E  0100               	movlb	0	; () banked
  8781  010F40  237D               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8782  010F42  0100               	movlb	0	; () banked
  8783  010F44  5168               	movf	(?___lmul+3)& (0+255),w,b
  8784  010F46  0100               	movlb	0	; () banked
  8785  010F48  237E               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8786                           
  8787                           ; BSR set to: 0
  8788  010F4A  0100               	movlb	0	; () banked
  8789  010F4C  2B7A               	incf	caltime_to_epoch@month_2079& (0+255),f,b
  8790  010F4E                     l4711:
  8791                           
  8792                           ; BSR set to: 0
  8793  010F4E  0100               	movlb	0	; () banked
  8794  010F50  EE20 F005          	lfsr	2,5
  8795  010F54  5171               	movf	caltime_to_epoch@ct& (0+255),w,b
  8796  010F56  26D9               	addwf	fsr2l,f,c
  8797  010F58  5172               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8798  010F5A  22DA               	addwfc	fsr2h,f,c
  8799  010F5C  50DE               	movf	postinc2,w,c
  8800  010F5E  0100               	movlb	0	; () banked
  8801  010F60  5D7A               	subwf	caltime_to_epoch@month_2079& (0+255),w,b
  8802  010F62  A0D8               	btfss	status,0,c
  8803  010F64  D7C2               	goto	l4707
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;My_header\My_RTCC.h: 220: }
  8807                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  8808                           
  8809                           ; BSR set to: 0
  8810  010F66  0EFF               	movlw	255
  8811  010F68  0100               	movlb	0	; () banked
  8812  010F6A  6F75               	movwf	??_caltime_to_epoch& (0+255),b
  8813  010F6C  0EFF               	movlw	255
  8814  010F6E  0100               	movlb	0	; () banked
  8815  010F70  6F76               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  8816  010F72  0100               	movlb	0	; () banked
  8817  010F74  EE20 F004          	lfsr	2,4
  8818  010F78  5171               	movf	caltime_to_epoch@ct& (0+255),w,b
  8819  010F7A  26D9               	addwf	fsr2l,f,c
  8820  010F7C  5172               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8821  010F7E  22DA               	addwfc	fsr2h,f,c
  8822  010F80  50DF               	movf	indf2,w,c
  8823  010F82  0100               	movlb	0	; () banked
  8824  010F84  6F77               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  8825  010F86  6B78               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  8826  010F88  0100               	movlb	0	; () banked
  8827  010F8A  5175               	movf	??_caltime_to_epoch& (0+255),w,b
  8828  010F8C  0100               	movlb	0	; () banked
  8829  010F8E  2777               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  8830  010F90  0100               	movlb	0	; () banked
  8831  010F92  5176               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8832  010F94  0100               	movlb	0	; () banked
  8833  010F96  2378               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  8834  010F98  C077  F065         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  8835  010F9C  C078  F066         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  8836  010FA0  0100               	movlb	0	; () banked
  8837  010FA2  0E00               	movlw	0
  8838  010FA4  BF66               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  8839  010FA6  0EFF               	movlw	-1
  8840  010FA8  6F67               	movwf	(___lmul@multiplier+2)& (0+255),b
  8841  010FAA  6F68               	movwf	(___lmul@multiplier+3)& (0+255),b
  8842  010FAC  0E80               	movlw	128
  8843  010FAE  0100               	movlb	0	; () banked
  8844  010FB0  6F69               	movwf	___lmul@multiplicand& (0+255),b
  8845  010FB2  0E51               	movlw	81
  8846  010FB4  6F6A               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8847  010FB6  0E01               	movlw	1
  8848  010FB8  6F6B               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8849  010FBA  0E00               	movlw	0
  8850  010FBC  6F6C               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8851  010FBE  ECAD  F093         	call	___lmul	;wreg free
  8852  010FC2  0100               	movlb	0	; () banked
  8853  010FC4  5165               	movf	?___lmul& (0+255),w,b
  8854  010FC6  0100               	movlb	0	; () banked
  8855  010FC8  277B               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8856  010FCA  0100               	movlb	0	; () banked
  8857  010FCC  5166               	movf	(?___lmul+1)& (0+255),w,b
  8858  010FCE  0100               	movlb	0	; () banked
  8859  010FD0  237C               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8860  010FD2  0100               	movlb	0	; () banked
  8861  010FD4  5167               	movf	(?___lmul+2)& (0+255),w,b
  8862  010FD6  0100               	movlb	0	; () banked
  8863  010FD8  237D               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8864  010FDA  0100               	movlb	0	; () banked
  8865  010FDC  5168               	movf	(?___lmul+3)& (0+255),w,b
  8866  010FDE  0100               	movlb	0	; () banked
  8867  010FE0  237E               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8868                           
  8869                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  8870  010FE2  0100               	movlb	0	; () banked
  8871  010FE4  EE20 F002          	lfsr	2,2
  8872  010FE8  5171               	movf	caltime_to_epoch@ct& (0+255),w,b
  8873  010FEA  26D9               	addwf	fsr2l,f,c
  8874  010FEC  5172               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8875  010FEE  22DA               	addwfc	fsr2h,f,c
  8876  010FF0  50DF               	movf	indf2,w,c
  8877  010FF2  0100               	movlb	0	; () banked
  8878  010FF4  6F75               	movwf	??_caltime_to_epoch& (0+255),b
  8879  010FF6  0100               	movlb	0	; () banked
  8880  010FF8  5175               	movf	??_caltime_to_epoch& (0+255),w,b
  8881  010FFA  0100               	movlb	0	; () banked
  8882  010FFC  6F65               	movwf	___lmul@multiplier& (0+255),b
  8883  010FFE  6B66               	clrf	(___lmul@multiplier+1)& (0+255),b
  8884  011000  6B67               	clrf	(___lmul@multiplier+2)& (0+255),b
  8885  011002  6B68               	clrf	(___lmul@multiplier+3)& (0+255),b
  8886  011004  0E10               	movlw	16
  8887  011006  0100               	movlb	0	; () banked
  8888  011008  6F69               	movwf	___lmul@multiplicand& (0+255),b
  8889  01100A  0E0E               	movlw	14
  8890  01100C  6F6A               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8891  01100E  0E00               	movlw	0
  8892  011010  6F6B               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8893  011012  0E00               	movlw	0
  8894  011014  6F6C               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8895  011016  ECAD  F093         	call	___lmul	;wreg free
  8896  01101A  0100               	movlb	0	; () banked
  8897  01101C  5165               	movf	?___lmul& (0+255),w,b
  8898  01101E  0100               	movlb	0	; () banked
  8899  011020  277B               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8900  011022  0100               	movlb	0	; () banked
  8901  011024  5166               	movf	(?___lmul+1)& (0+255),w,b
  8902  011026  0100               	movlb	0	; () banked
  8903  011028  237C               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8904  01102A  0100               	movlb	0	; () banked
  8905  01102C  5167               	movf	(?___lmul+2)& (0+255),w,b
  8906  01102E  0100               	movlb	0	; () banked
  8907  011030  237D               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8908  011032  0100               	movlb	0	; () banked
  8909  011034  5168               	movf	(?___lmul+3)& (0+255),w,b
  8910  011036  0100               	movlb	0	; () banked
  8911  011038  237E               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8912                           
  8913                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  8914  01103A  0100               	movlb	0	; () banked
  8915  01103C  EE20 F001          	lfsr	2,1
  8916  011040  5171               	movf	caltime_to_epoch@ct& (0+255),w,b
  8917  011042  26D9               	addwf	fsr2l,f,c
  8918  011044  5172               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8919  011046  22DA               	addwfc	fsr2h,f,c
  8920  011048  50DF               	movf	indf2,w,c
  8921  01104A  0100               	movlb	0	; () banked
  8922  01104C  6F75               	movwf	??_caltime_to_epoch& (0+255),b
  8923  01104E  0100               	movlb	0	; () banked
  8924  011050  5175               	movf	??_caltime_to_epoch& (0+255),w,b
  8925  011052  0100               	movlb	0	; () banked
  8926  011054  6F65               	movwf	___lmul@multiplier& (0+255),b
  8927  011056  6B66               	clrf	(___lmul@multiplier+1)& (0+255),b
  8928  011058  6B67               	clrf	(___lmul@multiplier+2)& (0+255),b
  8929  01105A  6B68               	clrf	(___lmul@multiplier+3)& (0+255),b
  8930  01105C  0E3C               	movlw	60
  8931  01105E  0100               	movlb	0	; () banked
  8932  011060  6F69               	movwf	___lmul@multiplicand& (0+255),b
  8933  011062  0E00               	movlw	0
  8934  011064  6F6A               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8935  011066  0E00               	movlw	0
  8936  011068  6F6B               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8937  01106A  0E00               	movlw	0
  8938  01106C  6F6C               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8939  01106E  ECAD  F093         	call	___lmul	;wreg free
  8940  011072  0100               	movlb	0	; () banked
  8941  011074  5165               	movf	?___lmul& (0+255),w,b
  8942  011076  0100               	movlb	0	; () banked
  8943  011078  277B               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8944  01107A  0100               	movlb	0	; () banked
  8945  01107C  5166               	movf	(?___lmul+1)& (0+255),w,b
  8946  01107E  0100               	movlb	0	; () banked
  8947  011080  237C               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8948  011082  0100               	movlb	0	; () banked
  8949  011084  5167               	movf	(?___lmul+2)& (0+255),w,b
  8950  011086  0100               	movlb	0	; () banked
  8951  011088  237D               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8952  01108A  0100               	movlb	0	; () banked
  8953  01108C  5168               	movf	(?___lmul+3)& (0+255),w,b
  8954  01108E  0100               	movlb	0	; () banked
  8955  011090  237E               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  8959  011092  C071  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  8960  011096  C072  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  8961  01109A  50DF               	movf	indf2,w,c
  8962  01109C  0100               	movlb	0	; () banked
  8963  01109E  6F75               	movwf	??_caltime_to_epoch& (0+255),b
  8964  0110A0  0100               	movlb	0	; () banked
  8965  0110A2  5175               	movf	??_caltime_to_epoch& (0+255),w,b
  8966  0110A4  0100               	movlb	0	; () banked
  8967  0110A6  277B               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8968  0110A8  0E00               	movlw	0
  8969  0110AA  237C               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8970  0110AC  237D               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8971  0110AE  237E               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  8975  0110B0  C073  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  8976  0110B4  C074  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  8977  0110B8  C07B  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  8978  0110BC  C07C  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  8979  0110C0  C07D  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  8980  0110C4  C07E  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  8981                           
  8982                           ; BSR set to: 0
  8983  0110C8  0012               	return		;funcret
  8984  0110CA                     __end_of_caltime_to_epoch:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           intcon	equ	0xFF2
  8993                           intcon2	equ	0xFF1
  8994                           postinc0	equ	0xFEE
  8995                           wreg	equ	0xFE8
  8996                           indf1	equ	0xFE7
  8997                           postinc1	equ	0xFE6
  8998                           postdec1	equ	0xFE5
  8999                           fsr1h	equ	0xFE2
  9000                           fsr1l	equ	0xFE1
  9001                           indf2	equ	0xFDF
  9002                           postinc2	equ	0xFDE
  9003                           postdec2	equ	0xFDD
  9004                           fsr2h	equ	0xFDA
  9005                           fsr2l	equ	0xFD9
  9006                           status	equ	0xFD8
  9007                           
  9008 ;; *************** function _RTCC_to_caltime *****************
  9009 ;; Defined at:
  9010 ;;		line 121 in file "../My_header\My_RTCC.h"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  ct              2   32[COMRAM] PTR struct .
  9013 ;;		 -> caltime_now(7), 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  dumy            1   34[COMRAM] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;		None               void
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;Total ram usage:        3 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    5
  9032 ;; This function calls:
  9033 ;;		_x_to_d
  9034 ;; This function is called by:
  9035 ;;		_RTCC_from_RTCC
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text38
  9040  012126                     __ptext38:
  9041                           	opt stack 0
  9042  012126                     _RTCC_to_caltime:
  9043                           	opt stack 20
  9044  012126                     l346:
  9045  012126  010F               	movlb	15	; () banked
  9046  012128  B93F               	btfsc	63,4,b	;volatile
  9047  01212A  D7FD               	goto	l346
  9048                           
  9049                           ; BSR set to: 15
  9050                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  9051  01212C  010F               	movlb	15	; () banked
  9052  01212E  813F               	bsf	63,0,b	;volatile
  9053                           
  9054                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  9055  012130  010F               	movlb	15	; () banked
  9056  012132  833F               	bsf	63,1,b	;volatile
  9057                           
  9058                           ; BSR set to: 15
  9059                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  9060  012134  EE20 F006          	lfsr	2,6
  9061  012138  5021               	movf	RTCC_to_caltime@ct,w,c
  9062  01213A  26D9               	addwf	fsr2l,f,c
  9063  01213C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9064  01213E  22DA               	addwfc	fsr2h,f,c
  9065  012140  010F               	movlb	15	; () banked
  9066  012142  513A               	movf	58,w,b	;volatile
  9067  012144  EC76  F096         	call	_x_to_d
  9068  012148  6EDF               	movwf	indf2,c
  9069                           
  9070                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  9071  01214A  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  9072                           
  9073                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  9074  01214E  EE20 F004          	lfsr	2,4
  9075  012152  5021               	movf	RTCC_to_caltime@ct,w,c
  9076  012154  26D9               	addwf	fsr2l,f,c
  9077  012156  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9078  012158  22DA               	addwfc	fsr2h,f,c
  9079  01215A  010F               	movlb	15	; () banked
  9080  01215C  513A               	movf	58,w,b	;volatile
  9081  01215E  EC76  F096         	call	_x_to_d
  9082  012162  6EDF               	movwf	indf2,c
  9083                           
  9084                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  9085  012164  EE20 F005          	lfsr	2,5
  9086  012168  5021               	movf	RTCC_to_caltime@ct,w,c
  9087  01216A  26D9               	addwf	fsr2l,f,c
  9088  01216C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9089  01216E  22DA               	addwfc	fsr2h,f,c
  9090  012170  010F               	movlb	15	; () banked
  9091  012172  513B               	movf	59,w,b	;volatile
  9092  012174  EC76  F096         	call	_x_to_d
  9093  012178  6EDF               	movwf	indf2,c
  9094                           
  9095                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  9096  01217A  EE20 F002          	lfsr	2,2
  9097  01217E  5021               	movf	RTCC_to_caltime@ct,w,c
  9098  012180  26D9               	addwf	fsr2l,f,c
  9099  012182  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9100  012184  22DA               	addwfc	fsr2h,f,c
  9101  012186  010F               	movlb	15	; () banked
  9102  012188  513A               	movf	58,w,b	;volatile
  9103  01218A  EC76  F096         	call	_x_to_d
  9104  01218E  6EDF               	movwf	indf2,c
  9105                           
  9106                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  9107  012190  EE20 F003          	lfsr	2,3
  9108  012194  5021               	movf	RTCC_to_caltime@ct,w,c
  9109  012196  26D9               	addwf	fsr2l,f,c
  9110  012198  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9111  01219A  22DA               	addwfc	fsr2h,f,c
  9112  01219C  010F               	movlb	15	; () banked
  9113  01219E  513B               	movf	59,w,b	;volatile
  9114  0121A0  EC76  F096         	call	_x_to_d
  9115  0121A4  6EDF               	movwf	indf2,c
  9116                           
  9117                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  9118  0121A6  010F               	movlb	15	; () banked
  9119  0121A8  513A               	movf	58,w,b	;volatile
  9120  0121AA  EC76  F096         	call	_x_to_d
  9121  0121AE  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  9122  0121B2  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  9123  0121B6  6EDF               	movwf	indf2,c
  9124                           
  9125                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  9126  0121B8  EE20 F001          	lfsr	2,1
  9127  0121BC  5021               	movf	RTCC_to_caltime@ct,w,c
  9128  0121BE  26D9               	addwf	fsr2l,f,c
  9129  0121C0  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9130  0121C2  22DA               	addwfc	fsr2h,f,c
  9131  0121C4  010F               	movlb	15	; () banked
  9132  0121C6  513B               	movf	59,w,b	;volatile
  9133  0121C8  EC76  F096         	call	_x_to_d
  9134  0121CC  6EDF               	movwf	indf2,c
  9135  0121CE  0012               	return		;funcret
  9136  0121D0                     __end_of_RTCC_to_caltime:
  9137                           	opt stack 0
  9138                           tblptru	equ	0xFF8
  9139                           tblptrh	equ	0xFF7
  9140                           tblptrl	equ	0xFF6
  9141                           tablat	equ	0xFF5
  9142                           prodh	equ	0xFF4
  9143                           prodl	equ	0xFF3
  9144                           intcon	equ	0xFF2
  9145                           intcon2	equ	0xFF1
  9146                           postinc0	equ	0xFEE
  9147                           wreg	equ	0xFE8
  9148                           indf1	equ	0xFE7
  9149                           postinc1	equ	0xFE6
  9150                           postdec1	equ	0xFE5
  9151                           fsr1h	equ	0xFE2
  9152                           fsr1l	equ	0xFE1
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           fsr2h	equ	0xFDA
  9157                           fsr2l	equ	0xFD9
  9158                           status	equ	0xFD8
  9159                           
  9160 ;; *************** function _x_to_d *****************
  9161 ;; Defined at:
  9162 ;;		line 81 in file "../My_header\My_RTCC.h"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  hex             1    wreg     unsigned char 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  hex             1   31[COMRAM] unsigned char 
  9167 ;; Return value:  Size  Location     Type
  9168 ;;                  1    wreg      unsigned char 
  9169 ;; Registers used:
  9170 ;;		wreg, status,2, status,0, prodl, prodh
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;Total ram usage:        2 bytes
  9181 ;; Hardware stack levels used:    1
  9182 ;; Hardware stack levels required when called:    4
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		_RTCC_to_caltime
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text39
  9191  012CEC                     __ptext39:
  9192                           	opt stack 0
  9193  012CEC                     _x_to_d:
  9194                           	opt stack 20
  9195                           
  9196                           ;incstack = 0
  9197                           ;x_to_d@hex stored from wreg
  9198  012CEC  6E20               	movwf	x_to_d@hex,c
  9199                           
  9200                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  9201  012CEE  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  9202  012CF2  0E0F               	movlw	15
  9203  012CF4  161F               	andwf	??_x_to_d,f,c
  9204  012CF6  3820               	swapf	x_to_d@hex,w,c
  9205  012CF8  0B0F               	andlw	15
  9206  012CFA  0B0F               	andlw	15
  9207  012CFC  0D0A               	mullw	10
  9208  012CFE  50F3               	movf	prodl,w,c
  9209  012D00  241F               	addwf	??_x_to_d,w,c
  9210  012D02  0012               	return	
  9211  012D04                     __end_of_x_to_d:
  9212                           	opt stack 0
  9213                           tblptru	equ	0xFF8
  9214                           tblptrh	equ	0xFF7
  9215                           tblptrl	equ	0xFF6
  9216                           tablat	equ	0xFF5
  9217                           prodh	equ	0xFF4
  9218                           prodl	equ	0xFF3
  9219                           intcon	equ	0xFF2
  9220                           intcon2	equ	0xFF1
  9221                           postinc0	equ	0xFEE
  9222                           wreg	equ	0xFE8
  9223                           indf1	equ	0xFE7
  9224                           postinc1	equ	0xFE6
  9225                           postdec1	equ	0xFE5
  9226                           fsr1h	equ	0xFE2
  9227                           fsr1l	equ	0xFE1
  9228                           indf2	equ	0xFDF
  9229                           postinc2	equ	0xFDE
  9230                           postdec2	equ	0xFDD
  9231                           fsr2h	equ	0xFDA
  9232                           fsr2l	equ	0xFD9
  9233                           status	equ	0xFD8
  9234                           
  9235 ;; *************** function _RTCC_from_epoch *****************
  9236 ;; Defined at:
  9237 ;;		line 242 in file "../My_header\My_RTCC.h"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  ct              2   54[BANK0 ] PTR struct .
  9240 ;;		 -> caltime_now(7), 
  9241 ;;  ep              2   56[BANK0 ] PTR unsigned long 
  9242 ;;		 -> epoch_now(4), 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;		None               void
  9247 ;; Registers used:
  9248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9258 ;;Total ram usage:        4 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    7
  9261 ;; This function calls:
  9262 ;;		_caltime_to_RTCC
  9263 ;;		_epoch_to_caltime
  9264 ;; This function is called by:
  9265 ;;		_main
  9266 ;;		_RTCC_adjust_time_inc
  9267 ;;		_RTCC_adjust_time_dec
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text40
  9272  012C52                     __ptext40:
  9273                           	opt stack 0
  9274  012C52                     _RTCC_from_epoch:
  9275                           	opt stack 23
  9276                           
  9277                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  9278                           
  9279                           ;incstack = 0
  9280  012C52  C096  F086         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  9281  012C56  C097  F087         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  9282  012C5A  C098  F088         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  9283  012C5E  C099  F089         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  9284  012C62  ECB2  F08A         	call	_epoch_to_caltime	;wreg free
  9285                           
  9286                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  9287  012C66  C096  F024         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  9288  012C6A  C097  F025         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  9289  012C6E  EC0B  F08E         	call	_caltime_to_RTCC	;wreg free
  9290  012C72  0012               	return		;funcret
  9291  012C74                     __end_of_RTCC_from_epoch:
  9292                           	opt stack 0
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           intcon2	equ	0xFF1
  9301                           postinc0	equ	0xFEE
  9302                           wreg	equ	0xFE8
  9303                           indf1	equ	0xFE7
  9304                           postinc1	equ	0xFE6
  9305                           postdec1	equ	0xFE5
  9306                           fsr1h	equ	0xFE2
  9307                           fsr1l	equ	0xFE1
  9308                           indf2	equ	0xFDF
  9309                           postinc2	equ	0xFDE
  9310                           postdec2	equ	0xFDD
  9311                           fsr2h	equ	0xFDA
  9312                           fsr2l	equ	0xFD9
  9313                           status	equ	0xFD8
  9314                           
  9315 ;; *************** function _epoch_to_caltime *****************
  9316 ;; Defined at:
  9317 ;;		line 157 in file "../My_header\My_RTCC.h"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  ct              2   38[BANK0 ] PTR struct .
  9320 ;;		 -> caltime_now(7), 
  9321 ;;  ep              2   40[BANK0 ] PTR unsigned long 
  9322 ;;		 -> epoch_now(4), 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  num             4   50[BANK0 ] unsigned long 
  9325 ;;  day             2   46[BANK0 ] unsigned int 
  9326 ;;  day_since_ep    2   44[BANK0 ] unsigned int 
  9327 ;;  month           1   49[BANK0 ] unsigned char 
  9328 ;;  year            1   48[BANK0 ] unsigned char 
  9329 ;; Return value:  Size  Location     Type
  9330 ;;		None               void
  9331 ;; Registers used:
  9332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9341 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9342 ;;Total ram usage:       16 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    6
  9345 ;; This function calls:
  9346 ;;		_get_quot_rem
  9347 ;;		_month_length
  9348 ;; This function is called by:
  9349 ;;		_RTCC_from_caltime
  9350 ;;		_RTCC_from_epoch
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text41
  9355  011564                     __ptext41:
  9356                           	opt stack 0
  9357  011564                     _epoch_to_caltime:
  9358                           	opt stack 19
  9359                           
  9360                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  9361                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  9362                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  9363                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  9364                           ;My_header\My_RTCC.h: 164: uint16_t day;
  9365                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  9366                           
  9367                           ;incstack = 0
  9368  011564  0E00               	movlw	0
  9369  011566  0100               	movlb	0	; () banked
  9370  011568  6F90               	movwf	epoch_to_caltime@year& (0+255),b
  9371                           
  9372                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  9373  01156A  0E01               	movlw	1
  9374  01156C  0100               	movlb	0	; () banked
  9375  01156E  6F91               	movwf	epoch_to_caltime@month& (0+255),b
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;My_header\My_RTCC.h: 167: epoch_t num;
  9379                           ;My_header\My_RTCC.h: 169: num = *ep;
  9380  011570  C088  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  9381  011574  C089  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  9382  011578  CFDE F092          	movff	postinc2,epoch_to_caltime@num
  9383  01157C  CFDE F093          	movff	postinc2,epoch_to_caltime@num+1
  9384  011580  CFDE F094          	movff	postinc2,epoch_to_caltime@num+2
  9385  011584  CFDE F095          	movff	postinc2,epoch_to_caltime@num+3
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  9389  011588  0E92               	movlw	low epoch_to_caltime@num
  9390  01158A  0100               	movlb	0	; () banked
  9391  01158C  6F7E               	movwf	get_quot_rem@quot& (0+255),b
  9392  01158E  0E00               	movlw	high epoch_to_caltime@num
  9393  011590  0100               	movlb	0	; () banked
  9394  011592  6F7F               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9395  011594  0E3C               	movlw	60
  9396  011596  0100               	movlb	0	; () banked
  9397  011598  6F80               	movwf	get_quot_rem@div& (0+255),b
  9398  01159A  ECDB  F08C         	call	_get_quot_rem	;wreg free
  9399  01159E  0100               	movlb	0	; () banked
  9400  0115A0  517E               	movf	?_get_quot_rem& (0+255),w,b
  9401  0115A2  C086  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  9402  0115A6  C087  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  9403  0115AA  6EDF               	movwf	indf2,c
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  9407  0115AC  0E92               	movlw	low epoch_to_caltime@num
  9408  0115AE  0100               	movlb	0	; () banked
  9409  0115B0  6F7E               	movwf	get_quot_rem@quot& (0+255),b
  9410  0115B2  0E00               	movlw	high epoch_to_caltime@num
  9411  0115B4  0100               	movlb	0	; () banked
  9412  0115B6  6F7F               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9413  0115B8  0E3C               	movlw	60
  9414  0115BA  0100               	movlb	0	; () banked
  9415  0115BC  6F80               	movwf	get_quot_rem@div& (0+255),b
  9416  0115BE  ECDB  F08C         	call	_get_quot_rem	;wreg free
  9417  0115C2  0100               	movlb	0	; () banked
  9418  0115C4  EE20 F001          	lfsr	2,1
  9419  0115C8  5186               	movf	epoch_to_caltime@ct& (0+255),w,b
  9420  0115CA  26D9               	addwf	fsr2l,f,c
  9421  0115CC  5187               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9422  0115CE  22DA               	addwfc	fsr2h,f,c
  9423  0115D0  0100               	movlb	0	; () banked
  9424  0115D2  C07E  FFDF         	movff	?_get_quot_rem,indf2
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  9428  0115D6  0E92               	movlw	low epoch_to_caltime@num
  9429  0115D8  0100               	movlb	0	; () banked
  9430  0115DA  6F7E               	movwf	get_quot_rem@quot& (0+255),b
  9431  0115DC  0E00               	movlw	high epoch_to_caltime@num
  9432  0115DE  0100               	movlb	0	; () banked
  9433  0115E0  6F7F               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9434  0115E2  0E18               	movlw	24
  9435  0115E4  0100               	movlb	0	; () banked
  9436  0115E6  6F80               	movwf	get_quot_rem@div& (0+255),b
  9437  0115E8  ECDB  F08C         	call	_get_quot_rem	;wreg free
  9438  0115EC  0100               	movlb	0	; () banked
  9439  0115EE  EE20 F002          	lfsr	2,2
  9440  0115F2  5186               	movf	epoch_to_caltime@ct& (0+255),w,b
  9441  0115F4  26D9               	addwf	fsr2l,f,c
  9442  0115F6  5187               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9443  0115F8  22DA               	addwfc	fsr2h,f,c
  9444  0115FA  0100               	movlb	0	; () banked
  9445  0115FC  C07E  FFDF         	movff	?_get_quot_rem,indf2
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;My_header\My_RTCC.h: 173: day = num;
  9449  011600  C092  F08E         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  9450  011604  C093  F08F         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  9454  011608  C08E  F08C         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  9455  01160C  C08F  F08D         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;My_header\My_RTCC.h: 176: num += 6;
  9459  011610  0E06               	movlw	6
  9460  011612  0100               	movlb	0	; () banked
  9461  011614  2792               	addwf	epoch_to_caltime@num& (0+255),f,b
  9462  011616  0E00               	movlw	0
  9463  011618  2393               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  9464  01161A  2394               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  9465  01161C  2395               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  9469  01161E  0E92               	movlw	low epoch_to_caltime@num
  9470  011620  0100               	movlb	0	; () banked
  9471  011622  6F7E               	movwf	get_quot_rem@quot& (0+255),b
  9472  011624  0E00               	movlw	high epoch_to_caltime@num
  9473  011626  0100               	movlb	0	; () banked
  9474  011628  6F7F               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9475  01162A  0E07               	movlw	7
  9476  01162C  0100               	movlb	0	; () banked
  9477  01162E  6F80               	movwf	get_quot_rem@div& (0+255),b
  9478  011630  ECDB  F08C         	call	_get_quot_rem	;wreg free
  9479  011634  0100               	movlb	0	; () banked
  9480  011636  EE20 F003          	lfsr	2,3
  9481  01163A  5186               	movf	epoch_to_caltime@ct& (0+255),w,b
  9482  01163C  26D9               	addwf	fsr2l,f,c
  9483  01163E  5187               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9484  011640  22DA               	addwfc	fsr2h,f,c
  9485  011642  0100               	movlb	0	; () banked
  9486  011644  C07E  FFDF         	movff	?_get_quot_rem,indf2
  9487                           
  9488                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  9489  011648  D03F               	goto	l4851
  9490  01164A                     l365:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  9494  01164A  848A               	bsf	3978,2,c	;volatile
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  9498  01164C  C091  F025         	movff	epoch_to_caltime@month,month_length@month
  9499  011650  0100               	movlb	0	; () banked
  9500  011652  5190               	movf	epoch_to_caltime@year& (0+255),w,b
  9501  011654  EC45  F08D         	call	_month_length
  9502  011658  0100               	movlb	0	; () banked
  9503  01165A  6F8A               	movwf	??_epoch_to_caltime& (0+255),b
  9504  01165C  6B8B               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  9505  01165E  0100               	movlb	0	; () banked
  9506  011660  1F8A               	comf	??_epoch_to_caltime& (0+255),f,b
  9507  011662  1F8B               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9508  011664  4B8A               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9509  011666  2B8B               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9510  011668  0100               	movlb	0	; () banked
  9511  01166A  518E               	movf	epoch_to_caltime@day& (0+255),w,b
  9512  01166C  0100               	movlb	0	; () banked
  9513  01166E  258A               	addwf	??_epoch_to_caltime& (0+255),w,b
  9514  011670  0100               	movlb	0	; () banked
  9515  011672  6F8E               	movwf	epoch_to_caltime@day& (0+255),b
  9516  011674  0100               	movlb	0	; () banked
  9517  011676  518F               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  9518  011678  0100               	movlb	0	; () banked
  9519  01167A  218B               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9520  01167C  0100               	movlb	0	; () banked
  9521  01167E  6F8F               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  9525  011680  0E0C               	movlw	12
  9526  011682  0100               	movlb	0	; () banked
  9527  011684  1991               	xorwf	epoch_to_caltime@month& (0+255),w,b
  9528  011686  A4D8               	btfss	status,2,c
  9529  011688  D019               	goto	l4845
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;My_header\My_RTCC.h: 190: month = 1;
  9533  01168A  0E01               	movlw	1
  9534  01168C  0100               	movlb	0	; () banked
  9535  01168E  6F91               	movwf	epoch_to_caltime@month& (0+255),b
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;My_header\My_RTCC.h: 191: year++;
  9539  011690  0100               	movlb	0	; () banked
  9540  011692  2B90               	incf	epoch_to_caltime@year& (0+255),f,b
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  9544  011694  0E63               	movlw	99
  9545  011696  0100               	movlb	0	; () banked
  9546  011698  6590               	cpfsgt	epoch_to_caltime@year& (0+255),b
  9547  01169A  D012               	goto	l4847
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  9551  01169C  C088  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  9552  0116A0  C089  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  9553  0116A4  0E80               	movlw	128
  9554  0116A6  5EDE               	subwf	postinc2,f,c
  9555  0116A8  0E13               	movlw	19
  9556  0116AA  5ADE               	subwfb	postinc2,f,c
  9557  0116AC  0E19               	movlw	25
  9558  0116AE  5ADE               	subwfb	postinc2,f,c
  9559  0116B0  0EBC               	movlw	188
  9560  0116B2  5ADE               	subwfb	postinc2,f,c
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;My_header\My_RTCC.h: 195: year = 0;
  9564  0116B4  0E00               	movlw	0
  9565  0116B6  0100               	movlb	0	; () banked
  9566  0116B8  6F90               	movwf	epoch_to_caltime@year& (0+255),b
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;My_header\My_RTCC.h: 196: }
  9570                           ;My_header\My_RTCC.h: 197: } else {
  9571  0116BA  D002               	goto	l4847
  9572  0116BC                     l4845:
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;My_header\My_RTCC.h: 198: month++;
  9576  0116BC  0100               	movlb	0	; () banked
  9577  0116BE  2B91               	incf	epoch_to_caltime@month& (0+255),f,b
  9578  0116C0                     l4847:
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;My_header\My_RTCC.h: 199: }
  9582                           ;My_header\My_RTCC.h: 200: month_cache = month;
  9583  0116C0  C091  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;My_header\My_RTCC.h: 201: year_cache = year;
  9587  0116C4  C090  F0CB         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  9588  0116C8                     l4851:
  9589                           
  9590                           ; BSR set to: 0
  9591  0116C8  C091  F025         	movff	epoch_to_caltime@month,month_length@month
  9592  0116CC  0100               	movlb	0	; () banked
  9593  0116CE  5190               	movf	epoch_to_caltime@year& (0+255),w,b
  9594  0116D0  EC45  F08D         	call	_month_length
  9595  0116D4  0100               	movlb	0	; () banked
  9596  0116D6  6F8A               	movwf	??_epoch_to_caltime& (0+255),b
  9597  0116D8  0100               	movlb	0	; () banked
  9598  0116DA  518A               	movf	??_epoch_to_caltime& (0+255),w,b
  9599  0116DC  0100               	movlb	0	; () banked
  9600  0116DE  5D8E               	subwf	epoch_to_caltime@day& (0+255),w,b
  9601  0116E0  0E00               	movlw	0
  9602  0116E2  598F               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  9603  0116E4  B0D8               	btfsc	status,0,c
  9604  0116E6  D7B1               	goto	l365
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;My_header\My_RTCC.h: 202: }
  9608                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  9609                           
  9610                           ; BSR set to: 0
  9611  0116E8  C08E  F08A         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  9612  0116EC  C08F  F08B         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  9613  0116F0  0100               	movlb	0	; () banked
  9614  0116F2  1F8A               	comf	??_epoch_to_caltime& (0+255),f,b
  9615  0116F4  1F8B               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9616  0116F6  4B8A               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9617  0116F8  2B8B               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9618  0116FA  0100               	movlb	0	; () banked
  9619  0116FC  518C               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  9620  0116FE  0100               	movlb	0	; () banked
  9621  011700  258A               	addwf	??_epoch_to_caltime& (0+255),w,b
  9622  011702  0100               	movlb	0	; () banked
  9623  011704  6FC4               	movwf	epoch_to_caltime@day_cache& (0+255),b
  9624  011706  0100               	movlb	0	; () banked
  9625  011708  518D               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  9626  01170A  0100               	movlb	0	; () banked
  9627  01170C  218B               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9628  01170E  0100               	movlb	0	; () banked
  9629  011710  6FC5               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;My_header\My_RTCC.h: 204: day++;
  9633  011712  0100               	movlb	0	; () banked
  9634  011714  4B8E               	infsnz	epoch_to_caltime@day& (0+255),f,b
  9635  011716  2B8F               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  9639  011718  0100               	movlb	0	; () banked
  9640  01171A  EE20 F006          	lfsr	2,6
  9641  01171E  5186               	movf	epoch_to_caltime@ct& (0+255),w,b
  9642  011720  26D9               	addwf	fsr2l,f,c
  9643  011722  5187               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9644  011724  22DA               	addwfc	fsr2h,f,c
  9645  011726  C090  FFDF         	movff	epoch_to_caltime@year,indf2
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  9649  01172A  0100               	movlb	0	; () banked
  9650  01172C  EE20 F005          	lfsr	2,5
  9651  011730  5186               	movf	epoch_to_caltime@ct& (0+255),w,b
  9652  011732  26D9               	addwf	fsr2l,f,c
  9653  011734  5187               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9654  011736  22DA               	addwfc	fsr2h,f,c
  9655  011738  C091  FFDF         	movff	epoch_to_caltime@month,indf2
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  9659  01173C  0100               	movlb	0	; () banked
  9660  01173E  EE20 F004          	lfsr	2,4
  9661  011742  5186               	movf	epoch_to_caltime@ct& (0+255),w,b
  9662  011744  26D9               	addwf	fsr2l,f,c
  9663  011746  5187               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9664  011748  22DA               	addwfc	fsr2h,f,c
  9665  01174A  C08E  FFDF         	movff	epoch_to_caltime@day,indf2
  9666                           
  9667                           ; BSR set to: 0
  9668  01174E  0012               	return		;funcret
  9669  011750                     __end_of_epoch_to_caltime:
  9670                           	opt stack 0
  9671                           tblptru	equ	0xFF8
  9672                           tblptrh	equ	0xFF7
  9673                           tblptrl	equ	0xFF6
  9674                           tablat	equ	0xFF5
  9675                           prodh	equ	0xFF4
  9676                           prodl	equ	0xFF3
  9677                           intcon	equ	0xFF2
  9678                           intcon2	equ	0xFF1
  9679                           postinc0	equ	0xFEE
  9680                           wreg	equ	0xFE8
  9681                           indf1	equ	0xFE7
  9682                           postinc1	equ	0xFE6
  9683                           postdec1	equ	0xFE5
  9684                           fsr1h	equ	0xFE2
  9685                           fsr1l	equ	0xFE1
  9686                           indf2	equ	0xFDF
  9687                           postinc2	equ	0xFDE
  9688                           postdec2	equ	0xFDD
  9689                           fsr2h	equ	0xFDA
  9690                           fsr2l	equ	0xFD9
  9691                           status	equ	0xFD8
  9692                           
  9693 ;; *************** function _month_length *****************
  9694 ;; Defined at:
  9695 ;;		line 87 in file "../My_header\My_RTCC.h"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  year            1    wreg     unsigned char 
  9698 ;;  month           1   36[COMRAM] unsigned char 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;  year            1    4[BANK0 ] unsigned char 
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      unsigned char 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0, cstack
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9710 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9713 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;Total ram usage:        6 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; Hardware stack levels required when called:    5
  9717 ;; This function calls:
  9718 ;;		___awmod
  9719 ;; This function is called by:
  9720 ;;		_epoch_to_caltime
  9721 ;;		_caltime_to_epoch
  9722 ;;		_command_time
  9723 ;;		_RTCC_adjust_time_inc
  9724 ;;		_RTCC_adjust_time_dec
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text42
  9729  011A8A                     __ptext42:
  9730                           	opt stack 0
  9731  011A8A                     _month_length:
  9732                           	opt stack 19
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;incstack = 0
  9736                           ;month_length@year stored from wreg
  9737  011A8A  0100               	movlb	0	; () banked
  9738  011A8C  6F64               	movwf	month_length@year& (0+255),b
  9739                           
  9740                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  9741  011A8E  0E02               	movlw	2
  9742  011A90  1825               	xorwf	month_length@month,w,c
  9743  011A92  A4D8               	btfss	status,2,c
  9744  011A94  D036               	goto	l4581
  9745  011A96  C064  F01F         	movff	month_length@year,___awmod@dividend
  9746  011A9A  6A20               	clrf	___awmod@dividend+1,c
  9747  011A9C  0E00               	movlw	0
  9748  011A9E  6E22               	movwf	___awmod@divisor+1,c
  9749  011AA0  0E64               	movlw	100
  9750  011AA2  6E21               	movwf	___awmod@divisor,c
  9751  011AA4  ECE8  F093         	call	___awmod	;wreg free
  9752  011AA8  501F               	movf	?___awmod,w,c
  9753  011AAA  1020               	iorwf	?___awmod+1,w,c
  9754  011AAC  A4D8               	btfss	status,2,c
  9755  011AAE  D002               	goto	u4870
  9756  011AB0  0E01               	movlw	1
  9757  011AB2  D001               	goto	u4880
  9758  011AB4                     u4870:
  9759  011AB4  0E00               	movlw	0
  9760  011AB6                     u4880:
  9761  011AB6  0800               	sublw	0
  9762  011AB8  0100               	movlb	0	; () banked
  9763  011ABA  6F60               	movwf	??_month_length& (0+255),b
  9764  011ABC  C064  F01F         	movff	month_length@year,___awmod@dividend
  9765  011AC0  6A20               	clrf	___awmod@dividend+1,c
  9766  011AC2  0E01               	movlw	1
  9767  011AC4  6E22               	movwf	___awmod@divisor+1,c
  9768  011AC6  0E90               	movlw	144
  9769  011AC8  6E21               	movwf	___awmod@divisor,c
  9770  011ACA  ECE8  F093         	call	___awmod	;wreg free
  9771  011ACE  501F               	movf	?___awmod,w,c
  9772  011AD0  1020               	iorwf	?___awmod+1,w,c
  9773  011AD2  A4D8               	btfss	status,2,c
  9774  011AD4  D004               	goto	u4890
  9775  011AD6  0100               	movlb	0	; () banked
  9776  011AD8  6B61               	clrf	(??_month_length+1)& (0+255),b
  9777  011ADA  2B61               	incf	(??_month_length+1)& (0+255),f,b
  9778  011ADC  D002               	goto	u4908
  9779  011ADE                     u4890:
  9780  011ADE  0100               	movlb	0	; () banked
  9781  011AE0  6B61               	clrf	(??_month_length+1)& (0+255),b
  9782  011AE2                     u4908:
  9783  011AE2  C064  F062         	movff	month_length@year,??_month_length+2
  9784  011AE6  0E03               	movlw	3
  9785  011AE8  0100               	movlb	0	; () banked
  9786  011AEA  1762               	andwf	(??_month_length+2)& (0+255),f,b
  9787  011AEC  A4D8               	btfss	status,2,c
  9788  011AEE  D002               	goto	u4910
  9789  011AF0  0E01               	movlw	1
  9790  011AF2  D001               	goto	u4920
  9791  011AF4                     u4910:
  9792  011AF4  0E00               	movlw	0
  9793  011AF6                     u4920:
  9794  011AF6  0100               	movlb	0	; () banked
  9795  011AF8  2561               	addwf	(??_month_length+1)& (0+255),w,b
  9796  011AFA  0100               	movlb	0	; () banked
  9797  011AFC  2560               	addwf	??_month_length& (0+255),w,b
  9798  011AFE  0F1C               	addlw	28
  9799                           
  9800                           ; BSR set to: 0
  9801                           
  9802                           ; BSR set to: 0
  9803  011B00  0012               	return	
  9804  011B02                     l4581:
  9805                           
  9806                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  9807  011B02  5025               	movf	month_length@month,w,c
  9808  011B04  0B01               	andlw	1
  9809  011B06  0100               	movlb	0	; () banked
  9810  011B08  6F60               	movwf	??_month_length& (0+255),b
  9811  011B0A  6B61               	clrf	(??_month_length+1)& (0+255),b
  9812  011B0C  0100               	movlb	0	; () banked
  9813  011B0E  1F60               	comf	??_month_length& (0+255),f,b
  9814  011B10  1F61               	comf	(??_month_length+1)& (0+255),f,b
  9815  011B12  4B60               	infsnz	??_month_length& (0+255),f,b
  9816  011B14  2B61               	incf	(??_month_length+1)& (0+255),f,b
  9817  011B16  5025               	movf	month_length@month,w,c
  9818  011B18  0100               	movlb	0	; () banked
  9819  011B1A  6F62               	movwf	(??_month_length+2)& (0+255),b
  9820  011B1C  6B63               	clrf	(??_month_length+3)& (0+255),b
  9821  011B1E  0100               	movlb	0	; () banked
  9822  011B20  5160               	movf	??_month_length& (0+255),w,b
  9823  011B22  0100               	movlb	0	; () banked
  9824  011B24  1B62               	xorwf	(??_month_length+2)& (0+255),f,b
  9825  011B26  0100               	movlb	0	; () banked
  9826  011B28  5161               	movf	(??_month_length+1)& (0+255),w,b
  9827  011B2A  0100               	movlb	0	; () banked
  9828  011B2C  1B63               	xorwf	(??_month_length+3)& (0+255),f,b
  9829  011B2E  0E0D               	movlw	13
  9830  011B30  0100               	movlb	0	; () banked
  9831  011B32  1762               	andwf	(??_month_length+2)& (0+255),f,b
  9832  011B34  0E00               	movlw	0
  9833  011B36  1763               	andwf	(??_month_length+3)& (0+255),f,b
  9834  011B38  0E04               	movlw	4
  9835  011B3A  0100               	movlb	0	; () banked
  9836  011B3C  1962               	xorwf	(??_month_length+2)& (0+255),w,b
  9837  011B3E  0100               	movlb	0	; () banked
  9838  011B40  1163               	iorwf	(??_month_length+3)& (0+255),w,b
  9839  011B42  A4D8               	btfss	status,2,c
  9840  011B44  D002               	goto	u4930
  9841  011B46  0E01               	movlw	1
  9842  011B48  D001               	goto	u4940
  9843  011B4A                     u4930:
  9844  011B4A  0E00               	movlw	0
  9845  011B4C                     u4940:
  9846  011B4C  0800               	sublw	0
  9847  011B4E  0F1F               	addlw	31
  9848                           
  9849                           ; BSR set to: 0
  9850  011B50  0012               	return	
  9851  011B52                     __end_of_month_length:
  9852                           	opt stack 0
  9853                           tblptru	equ	0xFF8
  9854                           tblptrh	equ	0xFF7
  9855                           tblptrl	equ	0xFF6
  9856                           tablat	equ	0xFF5
  9857                           prodh	equ	0xFF4
  9858                           prodl	equ	0xFF3
  9859                           intcon	equ	0xFF2
  9860                           intcon2	equ	0xFF1
  9861                           postinc0	equ	0xFEE
  9862                           wreg	equ	0xFE8
  9863                           indf1	equ	0xFE7
  9864                           postinc1	equ	0xFE6
  9865                           postdec1	equ	0xFE5
  9866                           fsr1h	equ	0xFE2
  9867                           fsr1l	equ	0xFE1
  9868                           indf2	equ	0xFDF
  9869                           postinc2	equ	0xFDE
  9870                           postdec2	equ	0xFDD
  9871                           fsr2h	equ	0xFDA
  9872                           fsr2l	equ	0xFD9
  9873                           status	equ	0xFD8
  9874                           
  9875 ;; *************** function ___awmod *****************
  9876 ;; Defined at:
  9877 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  dividend        2   30[COMRAM] int 
  9880 ;;  divisor         2   32[COMRAM] int 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  sign            1   35[COMRAM] unsigned char 
  9883 ;;  counter         1   34[COMRAM] unsigned char 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  2   30[COMRAM] int 
  9886 ;; Registers used:
  9887 ;;		wreg, status,2, status,0
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9897 ;;Total ram usage:        6 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    4
  9900 ;; This function calls:
  9901 ;;		Nothing
  9902 ;; This function is called by:
  9903 ;;		_month_length
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           	psect	text43
  9908  0127D0                     __ptext43:
  9909                           	opt stack 0
  9910  0127D0                     ___awmod:
  9911                           	opt stack 19
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;incstack = 0
  9915  0127D0  0E00               	movlw	0
  9916  0127D2  6E24               	movwf	___awmod@sign,c
  9917  0127D4  AE20               	btfss	___awmod@dividend+1,7,c
  9918  0127D6  D006               	goto	l4529
  9919  0127D8  6C1F               	negf	___awmod@dividend,c
  9920  0127DA  1E20               	comf	___awmod@dividend+1,f,c
  9921  0127DC  B0D8               	btfsc	status,0,c
  9922  0127DE  2A20               	incf	___awmod@dividend+1,f,c
  9923  0127E0  0E01               	movlw	1
  9924  0127E2  6E24               	movwf	___awmod@sign,c
  9925  0127E4                     l4529:
  9926  0127E4  AE22               	btfss	___awmod@divisor+1,7,c
  9927  0127E6  D004               	goto	l4533
  9928  0127E8  6C21               	negf	___awmod@divisor,c
  9929  0127EA  1E22               	comf	___awmod@divisor+1,f,c
  9930  0127EC  B0D8               	btfsc	status,0,c
  9931  0127EE  2A22               	incf	___awmod@divisor+1,f,c
  9932  0127F0                     l4533:
  9933  0127F0  5021               	movf	___awmod@divisor,w,c
  9934  0127F2  1022               	iorwf	___awmod@divisor+1,w,c
  9935  0127F4  B4D8               	btfsc	status,2,c
  9936  0127F6  D018               	goto	l4549
  9937  0127F8  0E01               	movlw	1
  9938  0127FA  6E23               	movwf	___awmod@counter,c
  9939  0127FC  D004               	goto	l4539
  9940  0127FE                     l4537:
  9941  0127FE  90D8               	bcf	status,0,c
  9942  012800  3621               	rlcf	___awmod@divisor,f,c
  9943  012802  3622               	rlcf	___awmod@divisor+1,f,c
  9944  012804  2A23               	incf	___awmod@counter,f,c
  9945  012806                     l4539:
  9946  012806  AE22               	btfss	___awmod@divisor+1,7,c
  9947  012808  D7FA               	goto	l4537
  9948  01280A                     l4541:
  9949  01280A  5021               	movf	___awmod@divisor,w,c
  9950  01280C  5C1F               	subwf	___awmod@dividend,w,c
  9951  01280E  5022               	movf	___awmod@divisor+1,w,c
  9952  012810  5820               	subwfb	___awmod@dividend+1,w,c
  9953  012812  A0D8               	btfss	status,0,c
  9954  012814  D004               	goto	l4545
  9955  012816  5021               	movf	___awmod@divisor,w,c
  9956  012818  5E1F               	subwf	___awmod@dividend,f,c
  9957  01281A  5022               	movf	___awmod@divisor+1,w,c
  9958  01281C  5A20               	subwfb	___awmod@dividend+1,f,c
  9959  01281E                     l4545:
  9960  01281E  90D8               	bcf	status,0,c
  9961  012820  3222               	rrcf	___awmod@divisor+1,f,c
  9962  012822  3221               	rrcf	___awmod@divisor,f,c
  9963  012824  2E23               	decfsz	___awmod@counter,f,c
  9964  012826  D7F1               	goto	l4541
  9965  012828                     l4549:
  9966  012828  5024               	movf	___awmod@sign,w,c
  9967  01282A  B4D8               	btfsc	status,2,c
  9968  01282C  D004               	goto	l4553
  9969  01282E  6C1F               	negf	___awmod@dividend,c
  9970  012830  1E20               	comf	___awmod@dividend+1,f,c
  9971  012832  B0D8               	btfsc	status,0,c
  9972  012834  2A20               	incf	___awmod@dividend+1,f,c
  9973  012836                     l4553:
  9974  012836  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9975  01283A  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9976  01283E  0012               	return	
  9977  012840                     __end_of___awmod:
  9978                           	opt stack 0
  9979                           tblptru	equ	0xFF8
  9980                           tblptrh	equ	0xFF7
  9981                           tblptrl	equ	0xFF6
  9982                           tablat	equ	0xFF5
  9983                           prodh	equ	0xFF4
  9984                           prodl	equ	0xFF3
  9985                           intcon	equ	0xFF2
  9986                           intcon2	equ	0xFF1
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           indf1	equ	0xFE7
  9990                           postinc1	equ	0xFE6
  9991                           postdec1	equ	0xFE5
  9992                           fsr1h	equ	0xFE2
  9993                           fsr1l	equ	0xFE1
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           fsr2h	equ	0xFDA
  9998                           fsr2l	equ	0xFD9
  9999                           status	equ	0xFD8
 10000                           
 10001 ;; *************** function _get_quot_rem *****************
 10002 ;; Defined at:
 10003 ;;		line 112 in file "../My_header\My_RTCC.h"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  quot            2   30[BANK0 ] PTR unsigned long 
 10006 ;;		 -> epoch_to_caltime@num(4), 
 10007 ;;  div             1   32[BANK0 ] unsigned char 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  num             4   34[BANK0 ] unsigned long 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  4   30[BANK0 ] unsigned long 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10019 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10022 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10023 ;;Total ram usage:        8 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    5
 10026 ;; This function calls:
 10027 ;;		___lldiv
 10028 ;;		___lmul
 10029 ;; This function is called by:
 10030 ;;		_epoch_to_caltime
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text44
 10035  0119B6                     __ptext44:
 10036                           	opt stack 0
 10037  0119B6                     _get_quot_rem:
 10038                           	opt stack 19
 10039                           
 10040                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 10041                           
 10042                           ;incstack = 0
 10043  0119B6  C07E  FFD9         	movff	get_quot_rem@quot,fsr2l
 10044  0119BA  C07F  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10045  0119BE  CFDE F082          	movff	postinc2,get_quot_rem@num
 10046  0119C2  CFDE F083          	movff	postinc2,get_quot_rem@num+1
 10047  0119C6  CFDE F084          	movff	postinc2,get_quot_rem@num+2
 10048  0119CA  CFDE F085          	movff	postinc2,get_quot_rem@num+3
 10049                           
 10050                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 10051  0119CE  0100               	movlb	0	; () banked
 10052  0119D0  5180               	movf	get_quot_rem@div& (0+255),w,b
 10053  0119D2  0100               	movlb	0	; () banked
 10054  0119D4  6F75               	movwf	___lldiv@divisor& (0+255),b
 10055  0119D6  6B76               	clrf	(___lldiv@divisor+1)& (0+255),b
 10056  0119D8  6B77               	clrf	(___lldiv@divisor+2)& (0+255),b
 10057  0119DA  6B78               	clrf	(___lldiv@divisor+3)& (0+255),b
 10058  0119DC  C082  F071         	movff	get_quot_rem@num,___lldiv@dividend
 10059  0119E0  C083  F072         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10060  0119E4  C084  F073         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10061  0119E8  C085  F074         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10062  0119EC  EC6D  F08E         	call	___lldiv	;wreg free
 10063  0119F0  C07E  FFD9         	movff	get_quot_rem@quot,fsr2l
 10064  0119F4  C07F  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10065  0119F8  0100               	movlb	0	; () banked
 10066  0119FA  C071  FFDE         	movff	?___lldiv,postinc2
 10067  0119FE  0100               	movlb	0	; () banked
 10068  011A00  C072  FFDE         	movff	?___lldiv+1,postinc2
 10069  011A04  0100               	movlb	0	; () banked
 10070  011A06  C073  FFDE         	movff	?___lldiv+2,postinc2
 10071  011A0A  0100               	movlb	0	; () banked
 10072  011A0C  C074  FFDD         	movff	?___lldiv+3,postdec2
 10073  011A10  52DD               	movf	postdec2,f,c
 10074  011A12  52DD               	movf	postdec2,f,c
 10075  011A14  CFDE F065          	movff	postinc2,___lmul@multiplier
 10076  011A18  CFDE F066          	movff	postinc2,___lmul@multiplier+1
 10077  011A1C  CFDE F067          	movff	postinc2,___lmul@multiplier+2
 10078  011A20  CFDE F068          	movff	postinc2,___lmul@multiplier+3
 10079  011A24  0100               	movlb	0	; () banked
 10080  011A26  5180               	movf	get_quot_rem@div& (0+255),w,b
 10081  011A28  0100               	movlb	0	; () banked
 10082  011A2A  6F69               	movwf	___lmul@multiplicand& (0+255),b
 10083  011A2C  6B6A               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10084  011A2E  6B6B               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10085  011A30  6B6C               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10086  011A32  ECAD  F093         	call	___lmul	;wreg free
 10087  011A36  0100               	movlb	0	; () banked
 10088  011A38  1F65               	comf	?___lmul& (0+255),f,b
 10089  011A3A  0100               	movlb	0	; () banked
 10090  011A3C  1F66               	comf	(?___lmul+1)& (0+255),f,b
 10091  011A3E  0100               	movlb	0	; () banked
 10092  011A40  1F67               	comf	(?___lmul+2)& (0+255),f,b
 10093  011A42  0100               	movlb	0	; () banked
 10094  011A44  1F68               	comf	(?___lmul+3)& (0+255),f,b
 10095  011A46  0100               	movlb	0	; () banked
 10096  011A48  2B65               	incf	?___lmul& (0+255),f,b
 10097  011A4A  0E00               	movlw	0
 10098  011A4C  0100               	movlb	0	; () banked
 10099  011A4E  2366               	addwfc	(?___lmul+1)& (0+255),f,b
 10100  011A50  0100               	movlb	0	; () banked
 10101  011A52  2367               	addwfc	(?___lmul+2)& (0+255),f,b
 10102  011A54  0100               	movlb	0	; () banked
 10103  011A56  2368               	addwfc	(?___lmul+3)& (0+255),f,b
 10104  011A58  0100               	movlb	0	; () banked
 10105  011A5A  5182               	movf	get_quot_rem@num& (0+255),w,b
 10106  011A5C  0100               	movlb	0	; () banked
 10107  011A5E  2565               	addwf	?___lmul& (0+255),w,b
 10108  011A60  0100               	movlb	0	; () banked
 10109  011A62  6F7E               	movwf	?_get_quot_rem& (0+255),b
 10110  011A64  0100               	movlb	0	; () banked
 10111  011A66  5183               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10112  011A68  0100               	movlb	0	; () banked
 10113  011A6A  2166               	addwfc	(?___lmul+1)& (0+255),w,b
 10114  011A6C  0100               	movlb	0	; () banked
 10115  011A6E  6F7F               	movwf	(?_get_quot_rem+1)& (0+255),b
 10116  011A70  0100               	movlb	0	; () banked
 10117  011A72  5184               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10118  011A74  0100               	movlb	0	; () banked
 10119  011A76  2167               	addwfc	(?___lmul+2)& (0+255),w,b
 10120  011A78  0100               	movlb	0	; () banked
 10121  011A7A  6F80               	movwf	(?_get_quot_rem+2)& (0+255),b
 10122  011A7C  0100               	movlb	0	; () banked
 10123  011A7E  5185               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10124  011A80  0100               	movlb	0	; () banked
 10125  011A82  2168               	addwfc	(?___lmul+3)& (0+255),w,b
 10126  011A84  0100               	movlb	0	; () banked
 10127  011A86  6F81               	movwf	(?_get_quot_rem+3)& (0+255),b
 10128  011A88  0012               	return	
 10129  011A8A                     __end_of_get_quot_rem:
 10130                           	opt stack 0
 10131                           tblptru	equ	0xFF8
 10132                           tblptrh	equ	0xFF7
 10133                           tblptrl	equ	0xFF6
 10134                           tablat	equ	0xFF5
 10135                           prodh	equ	0xFF4
 10136                           prodl	equ	0xFF3
 10137                           intcon	equ	0xFF2
 10138                           intcon2	equ	0xFF1
 10139                           postinc0	equ	0xFEE
 10140                           wreg	equ	0xFE8
 10141                           indf1	equ	0xFE7
 10142                           postinc1	equ	0xFE6
 10143                           postdec1	equ	0xFE5
 10144                           fsr1h	equ	0xFE2
 10145                           fsr1l	equ	0xFE1
 10146                           indf2	equ	0xFDF
 10147                           postinc2	equ	0xFDE
 10148                           postdec2	equ	0xFDD
 10149                           fsr2h	equ	0xFDA
 10150                           fsr2l	equ	0xFD9
 10151                           status	equ	0xFD8
 10152                           
 10153 ;; *************** function ___lmul *****************
 10154 ;; Defined at:
 10155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  multiplier      4    5[BANK0 ] unsigned long 
 10158 ;;  multiplicand    4    9[BANK0 ] unsigned long 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  product         4   13[BANK0 ] unsigned long 
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  4    5[BANK0 ] unsigned long 
 10163 ;; Registers used:
 10164 ;;		wreg, status,2, status,0
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10170 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10173 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10174 ;;Total ram usage:       12 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:    4
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_get_quot_rem
 10181 ;;		_caltime_to_epoch
 10182 ;;		_light_loop
 10183 ;;		_RTCC_adjust_time_inc
 10184 ;;		_RTCC_adjust_time_dec
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text45
 10189  01275A                     __ptext45:
 10190                           	opt stack 0
 10191  01275A                     ___lmul:
 10192                           	opt stack 20
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;incstack = 0
 10196  01275A  0E00               	movlw	0
 10197  01275C  0100               	movlb	0	; () banked
 10198  01275E  6F6D               	movwf	___lmul@product& (0+255),b
 10199  012760  0E00               	movlw	0
 10200  012762  6F6E               	movwf	(___lmul@product+1)& (0+255),b
 10201  012764  0E00               	movlw	0
 10202  012766  6F6F               	movwf	(___lmul@product+2)& (0+255),b
 10203  012768  0E00               	movlw	0
 10204  01276A  6F70               	movwf	(___lmul@product+3)& (0+255),b
 10205  01276C                     l4587:
 10206                           
 10207                           ; BSR set to: 0
 10208  01276C  0100               	movlb	0	; () banked
 10209  01276E  A165               	btfss	___lmul@multiplier& (0+255),0,b
 10210  012770  D010               	goto	l4591
 10211                           
 10212                           ; BSR set to: 0
 10213  012772  0100               	movlb	0	; () banked
 10214  012774  5169               	movf	___lmul@multiplicand& (0+255),w,b
 10215  012776  0100               	movlb	0	; () banked
 10216  012778  276D               	addwf	___lmul@product& (0+255),f,b
 10217  01277A  0100               	movlb	0	; () banked
 10218  01277C  516A               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10219  01277E  0100               	movlb	0	; () banked
 10220  012780  236E               	addwfc	(___lmul@product+1)& (0+255),f,b
 10221  012782  0100               	movlb	0	; () banked
 10222  012784  516B               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10223  012786  0100               	movlb	0	; () banked
 10224  012788  236F               	addwfc	(___lmul@product+2)& (0+255),f,b
 10225  01278A  0100               	movlb	0	; () banked
 10226  01278C  516C               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10227  01278E  0100               	movlb	0	; () banked
 10228  012790  2370               	addwfc	(___lmul@product+3)& (0+255),f,b
 10229  012792                     l4591:
 10230                           
 10231                           ; BSR set to: 0
 10232  012792  0100               	movlb	0	; () banked
 10233  012794  90D8               	bcf	status,0,c
 10234  012796  3769               	rlcf	___lmul@multiplicand& (0+255),f,b
 10235  012798  376A               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10236  01279A  376B               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10237  01279C  376C               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10238                           
 10239                           ; BSR set to: 0
 10240  01279E  0100               	movlb	0	; () banked
 10241  0127A0  90D8               	bcf	status,0,c
 10242  0127A2  3368               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10243  0127A4  3367               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10244  0127A6  3366               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10245  0127A8  3365               	rrcf	___lmul@multiplier& (0+255),f,b
 10246  0127AA  0100               	movlb	0	; () banked
 10247  0127AC  5165               	movf	___lmul@multiplier& (0+255),w,b
 10248  0127AE  0100               	movlb	0	; () banked
 10249  0127B0  1166               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10250  0127B2  0100               	movlb	0	; () banked
 10251  0127B4  1167               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10252  0127B6  0100               	movlb	0	; () banked
 10253  0127B8  1168               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10254  0127BA  A4D8               	btfss	status,2,c
 10255  0127BC  D7D7               	goto	l4587
 10256                           
 10257                           ; BSR set to: 0
 10258  0127BE  C06D  F065         	movff	___lmul@product,?___lmul
 10259  0127C2  C06E  F066         	movff	___lmul@product+1,?___lmul+1
 10260  0127C6  C06F  F067         	movff	___lmul@product+2,?___lmul+2
 10261  0127CA  C070  F068         	movff	___lmul@product+3,?___lmul+3
 10262                           
 10263                           ; BSR set to: 0
 10264  0127CE  0012               	return		;funcret
 10265  0127D0                     __end_of___lmul:
 10266                           	opt stack 0
 10267                           tblptru	equ	0xFF8
 10268                           tblptrh	equ	0xFF7
 10269                           tblptrl	equ	0xFF6
 10270                           tablat	equ	0xFF5
 10271                           prodh	equ	0xFF4
 10272                           prodl	equ	0xFF3
 10273                           intcon	equ	0xFF2
 10274                           intcon2	equ	0xFF1
 10275                           postinc0	equ	0xFEE
 10276                           wreg	equ	0xFE8
 10277                           indf1	equ	0xFE7
 10278                           postinc1	equ	0xFE6
 10279                           postdec1	equ	0xFE5
 10280                           fsr1h	equ	0xFE2
 10281                           fsr1l	equ	0xFE1
 10282                           indf2	equ	0xFDF
 10283                           postinc2	equ	0xFDE
 10284                           postdec2	equ	0xFDD
 10285                           fsr2h	equ	0xFDA
 10286                           fsr2l	equ	0xFD9
 10287                           status	equ	0xFD8
 10288                           
 10289 ;; *************** function ___lldiv *****************
 10290 ;; Defined at:
 10291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  dividend        4   17[BANK0 ] unsigned long 
 10294 ;;  divisor         4   21[BANK0 ] unsigned long 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  quotient        4   25[BANK0 ] unsigned long 
 10297 ;;  counter         1   29[BANK0 ] unsigned char 
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  4   17[BANK0 ] unsigned long 
 10300 ;; Registers used:
 10301 ;;		wreg, status,2, status,0
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10307 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10308 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10310 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;Total ram usage:       13 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:    4
 10314 ;; This function calls:
 10315 ;;		Nothing
 10316 ;; This function is called by:
 10317 ;;		_get_quot_rem
 10318 ;;		_light_loop
 10319 ;;		_CTMU_read
 10320 ;;		_my_utoa32
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	text46
 10325  011CDA                     __ptext46:
 10326                           	opt stack 0
 10327  011CDA                     ___lldiv:
 10328                           	opt stack 19
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;incstack = 0
 10332  011CDA  0E00               	movlw	0
 10333  011CDC  0100               	movlb	0	; () banked
 10334  011CDE  6F79               	movwf	___lldiv@quotient& (0+255),b
 10335  011CE0  0E00               	movlw	0
 10336  011CE2  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 10337  011CE4  0E00               	movlw	0
 10338  011CE6  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 10339  011CE8  0E00               	movlw	0
 10340  011CEA  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 10341                           
 10342                           ; BSR set to: 0
 10343  011CEC  0100               	movlb	0	; () banked
 10344  011CEE  5175               	movf	___lldiv@divisor& (0+255),w,b
 10345  011CF0  0100               	movlb	0	; () banked
 10346  011CF2  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10347  011CF4  0100               	movlb	0	; () banked
 10348  011CF6  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10349  011CF8  0100               	movlb	0	; () banked
 10350  011CFA  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10351  011CFC  B4D8               	btfsc	status,2,c
 10352  011CFE  D042               	goto	l1095
 10353                           
 10354                           ; BSR set to: 0
 10355  011D00  0E01               	movlw	1
 10356  011D02  0100               	movlb	0	; () banked
 10357  011D04  6F7D               	movwf	___lldiv@counter& (0+255),b
 10358  011D06  D008               	goto	l4647
 10359  011D08                     l4645:
 10360                           
 10361                           ; BSR set to: 0
 10362  011D08  0100               	movlb	0	; () banked
 10363  011D0A  90D8               	bcf	status,0,c
 10364  011D0C  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 10365  011D0E  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10366  011D10  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10367  011D12  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10368  011D14  0100               	movlb	0	; () banked
 10369  011D16  2B7D               	incf	___lldiv@counter& (0+255),f,b
 10370  011D18                     l4647:
 10371                           
 10372                           ; BSR set to: 0
 10373  011D18  0100               	movlb	0	; () banked
 10374  011D1A  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10375  011D1C  D7F5               	goto	l4645
 10376  011D1E                     l4649:
 10377                           
 10378                           ; BSR set to: 0
 10379  011D1E  0100               	movlb	0	; () banked
 10380  011D20  90D8               	bcf	status,0,c
 10381  011D22  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 10382  011D24  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10383  011D26  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10384  011D28  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10385                           
 10386                           ; BSR set to: 0
 10387  011D2A  0100               	movlb	0	; () banked
 10388  011D2C  5175               	movf	___lldiv@divisor& (0+255),w,b
 10389  011D2E  0100               	movlb	0	; () banked
 10390  011D30  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 10391  011D32  0100               	movlb	0	; () banked
 10392  011D34  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10393  011D36  0100               	movlb	0	; () banked
 10394  011D38  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10395  011D3A  0100               	movlb	0	; () banked
 10396  011D3C  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10397  011D3E  0100               	movlb	0	; () banked
 10398  011D40  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10399  011D42  0100               	movlb	0	; () banked
 10400  011D44  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10401  011D46  0100               	movlb	0	; () banked
 10402  011D48  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10403  011D4A  A0D8               	btfss	status,0,c
 10404  011D4C  D012               	goto	l4657
 10405                           
 10406                           ; BSR set to: 0
 10407  011D4E  0100               	movlb	0	; () banked
 10408  011D50  5175               	movf	___lldiv@divisor& (0+255),w,b
 10409  011D52  0100               	movlb	0	; () banked
 10410  011D54  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 10411  011D56  0100               	movlb	0	; () banked
 10412  011D58  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10413  011D5A  0100               	movlb	0	; () banked
 10414  011D5C  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10415  011D5E  0100               	movlb	0	; () banked
 10416  011D60  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10417  011D62  0100               	movlb	0	; () banked
 10418  011D64  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10419  011D66  0100               	movlb	0	; () banked
 10420  011D68  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10421  011D6A  0100               	movlb	0	; () banked
 10422  011D6C  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10423                           
 10424                           ; BSR set to: 0
 10425  011D6E  0100               	movlb	0	; () banked
 10426  011D70  8179               	bsf	___lldiv@quotient& (0+255),0,b
 10427  011D72                     l4657:
 10428                           
 10429                           ; BSR set to: 0
 10430  011D72  0100               	movlb	0	; () banked
 10431  011D74  90D8               	bcf	status,0,c
 10432  011D76  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10433  011D78  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10434  011D7A  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10435  011D7C  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 10436                           
 10437                           ; BSR set to: 0
 10438  011D7E  0100               	movlb	0	; () banked
 10439  011D80  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 10440  011D82  D7CD               	goto	l4649
 10441  011D84                     l1095:
 10442                           
 10443                           ; BSR set to: 0
 10444  011D84  C079  F071         	movff	___lldiv@quotient,?___lldiv
 10445  011D88  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 10446  011D8C  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 10447  011D90  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 10448                           
 10449                           ; BSR set to: 0
 10450  011D94  0012               	return		;funcret
 10451  011D96                     __end_of___lldiv:
 10452                           	opt stack 0
 10453                           tblptru	equ	0xFF8
 10454                           tblptrh	equ	0xFF7
 10455                           tblptrl	equ	0xFF6
 10456                           tablat	equ	0xFF5
 10457                           prodh	equ	0xFF4
 10458                           prodl	equ	0xFF3
 10459                           intcon	equ	0xFF2
 10460                           intcon2	equ	0xFF1
 10461                           postinc0	equ	0xFEE
 10462                           wreg	equ	0xFE8
 10463                           indf1	equ	0xFE7
 10464                           postinc1	equ	0xFE6
 10465                           postdec1	equ	0xFE5
 10466                           fsr1h	equ	0xFE2
 10467                           fsr1l	equ	0xFE1
 10468                           indf2	equ	0xFDF
 10469                           postinc2	equ	0xFDE
 10470                           postdec2	equ	0xFDD
 10471                           fsr2h	equ	0xFDA
 10472                           fsr2l	equ	0xFD9
 10473                           status	equ	0xFD8
 10474                           
 10475 ;; *************** function _caltime_to_RTCC *****************
 10476 ;; Defined at:
 10477 ;;		line 137 in file "../My_header\My_RTCC.h"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  ct              2   35[COMRAM] PTR struct .
 10480 ;;		 -> caltime_now(7), 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;		None
 10483 ;; Return value:  Size  Location     Type
 10484 ;;		None               void
 10485 ;; Registers used:
 10486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10496 ;;Total ram usage:        2 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    6
 10499 ;; This function calls:
 10500 ;;		_d_to_x
 10501 ;; This function is called by:
 10502 ;;		_RTCC_from_caltime
 10503 ;;		_RTCC_from_epoch
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text47
 10508  011C16                     __ptext47:
 10509                           	opt stack 0
 10510  011C16                     _caltime_to_RTCC:
 10511                           	opt stack 19
 10512  011C16                     l352:
 10513  011C16  010F               	movlb	15	; () banked
 10514  011C18  B93F               	btfsc	63,4,b	;volatile
 10515  011C1A  D7FD               	goto	l352
 10516                           
 10517                           ; BSR set to: 15
 10518                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 10519  011C1C  010F               	movlb	15	; () banked
 10520  011C1E  813F               	bsf	63,0,b	;volatile
 10521                           
 10522                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 10523  011C20  010F               	movlb	15	; () banked
 10524  011C22  833F               	bsf	63,1,b	;volatile
 10525                           
 10526                           ; BSR set to: 15
 10527                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 10528  011C24  EE20 F006          	lfsr	2,6
 10529  011C28  5024               	movf	caltime_to_RTCC@ct,w,c
 10530  011C2A  26D9               	addwf	fsr2l,f,c
 10531  011C2C  5025               	movf	caltime_to_RTCC@ct+1,w,c
 10532  011C2E  22DA               	addwfc	fsr2h,f,c
 10533  011C30  50DF               	movf	indf2,w,c
 10534  011C32  EC59  F096         	call	_d_to_x
 10535  011C36  010F               	movlb	15	; () banked
 10536  011C38  6F3A               	movwf	58,b	;volatile
 10537                           
 10538                           ; BSR set to: 15
 10539                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 10540  011C3A  0E00               	movlw	0
 10541  011C3C  010F               	movlb	15	; () banked
 10542  011C3E  6F3B               	movwf	59,b	;volatile
 10543                           
 10544                           ; BSR set to: 15
 10545                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 10546  011C40  010F               	movlb	15	; () banked
 10547  011C42  913F               	bcf	63,0,b	;volatile
 10548                           
 10549                           ; BSR set to: 15
 10550                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 10551  011C44  010F               	movlb	15	; () banked
 10552  011C46  833F               	bsf	63,1,b	;volatile
 10553                           
 10554                           ; BSR set to: 15
 10555                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 10556  011C48  EE20 F004          	lfsr	2,4
 10557  011C4C  5024               	movf	caltime_to_RTCC@ct,w,c
 10558  011C4E  26D9               	addwf	fsr2l,f,c
 10559  011C50  5025               	movf	caltime_to_RTCC@ct+1,w,c
 10560  011C52  22DA               	addwfc	fsr2h,f,c
 10561  011C54  50DF               	movf	indf2,w,c
 10562  011C56  EC59  F096         	call	_d_to_x
 10563  011C5A  010F               	movlb	15	; () banked
 10564  011C5C  6F3A               	movwf	58,b	;volatile
 10565                           
 10566                           ; BSR set to: 15
 10567                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 10568  011C5E  EE20 F005          	lfsr	2,5
 10569  011C62  5024               	movf	caltime_to_RTCC@ct,w,c
 10570  011C64  26D9               	addwf	fsr2l,f,c
 10571  011C66  5025               	movf	caltime_to_RTCC@ct+1,w,c
 10572  011C68  22DA               	addwfc	fsr2h,f,c
 10573  011C6A  50DF               	movf	indf2,w,c
 10574  011C6C  EC59  F096         	call	_d_to_x
 10575  011C70  010F               	movlb	15	; () banked
 10576  011C72  6F3B               	movwf	59,b	;volatile
 10577                           
 10578                           ; BSR set to: 15
 10579                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 10580  011C74  010F               	movlb	15	; () banked
 10581  011C76  813F               	bsf	63,0,b	;volatile
 10582                           
 10583                           ; BSR set to: 15
 10584                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 10585  011C78  010F               	movlb	15	; () banked
 10586  011C7A  933F               	bcf	63,1,b	;volatile
 10587                           
 10588                           ; BSR set to: 15
 10589                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 10590  011C7C  EE20 F002          	lfsr	2,2
 10591  011C80  5024               	movf	caltime_to_RTCC@ct,w,c
 10592  011C82  26D9               	addwf	fsr2l,f,c
 10593  011C84  5025               	movf	caltime_to_RTCC@ct+1,w,c
 10594  011C86  22DA               	addwfc	fsr2h,f,c
 10595  011C88  50DF               	movf	indf2,w,c
 10596  011C8A  EC59  F096         	call	_d_to_x
 10597  011C8E  010F               	movlb	15	; () banked
 10598  011C90  6F3A               	movwf	58,b	;volatile
 10599                           
 10600                           ; BSR set to: 15
 10601                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 10602  011C92  EE20 F003          	lfsr	2,3
 10603  011C96  5024               	movf	caltime_to_RTCC@ct,w,c
 10604  011C98  26D9               	addwf	fsr2l,f,c
 10605  011C9A  5025               	movf	caltime_to_RTCC@ct+1,w,c
 10606  011C9C  22DA               	addwfc	fsr2h,f,c
 10607  011C9E  50DF               	movf	indf2,w,c
 10608  011CA0  EC59  F096         	call	_d_to_x
 10609  011CA4  010F               	movlb	15	; () banked
 10610  011CA6  6F3B               	movwf	59,b	;volatile
 10611                           
 10612                           ; BSR set to: 15
 10613                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 10614  011CA8  010F               	movlb	15	; () banked
 10615  011CAA  913F               	bcf	63,0,b	;volatile
 10616                           
 10617                           ; BSR set to: 15
 10618                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 10619  011CAC  010F               	movlb	15	; () banked
 10620  011CAE  933F               	bcf	63,1,b	;volatile
 10621                           
 10622                           ; BSR set to: 15
 10623                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 10624  011CB0  C024  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 10625  011CB4  C025  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 10626  011CB8  50DF               	movf	indf2,w,c
 10627  011CBA  EC59  F096         	call	_d_to_x
 10628  011CBE  010F               	movlb	15	; () banked
 10629  011CC0  6F3A               	movwf	58,b	;volatile
 10630                           
 10631                           ; BSR set to: 15
 10632                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 10633  011CC2  EE20 F001          	lfsr	2,1
 10634  011CC6  5024               	movf	caltime_to_RTCC@ct,w,c
 10635  011CC8  26D9               	addwf	fsr2l,f,c
 10636  011CCA  5025               	movf	caltime_to_RTCC@ct+1,w,c
 10637  011CCC  22DA               	addwfc	fsr2h,f,c
 10638  011CCE  50DF               	movf	indf2,w,c
 10639  011CD0  EC59  F096         	call	_d_to_x
 10640  011CD4  010F               	movlb	15	; () banked
 10641  011CD6  6F3B               	movwf	59,b	;volatile
 10642                           
 10643                           ; BSR set to: 15
 10644  011CD8  0012               	return		;funcret
 10645  011CDA                     __end_of_caltime_to_RTCC:
 10646                           	opt stack 0
 10647                           tblptru	equ	0xFF8
 10648                           tblptrh	equ	0xFF7
 10649                           tblptrl	equ	0xFF6
 10650                           tablat	equ	0xFF5
 10651                           prodh	equ	0xFF4
 10652                           prodl	equ	0xFF3
 10653                           intcon	equ	0xFF2
 10654                           intcon2	equ	0xFF1
 10655                           postinc0	equ	0xFEE
 10656                           wreg	equ	0xFE8
 10657                           indf1	equ	0xFE7
 10658                           postinc1	equ	0xFE6
 10659                           postdec1	equ	0xFE5
 10660                           fsr1h	equ	0xFE2
 10661                           fsr1l	equ	0xFE1
 10662                           indf2	equ	0xFDF
 10663                           postinc2	equ	0xFDE
 10664                           postdec2	equ	0xFDD
 10665                           fsr2h	equ	0xFDA
 10666                           fsr2l	equ	0xFD9
 10667                           status	equ	0xFD8
 10668                           
 10669 ;; *************** function _d_to_x *****************
 10670 ;; Defined at:
 10671 ;;		line 73 in file "../My_header\My_RTCC.h"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  dec             1    wreg     unsigned char 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;  dec             1   34[COMRAM] unsigned char 
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      unsigned char 
 10678 ;; Registers used:
 10679 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10689 ;;Total ram usage:        1 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:    5
 10692 ;; This function calls:
 10693 ;;		___awdiv
 10694 ;; This function is called by:
 10695 ;;		_caltime_to_RTCC
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text48
 10700  012CB2                     __ptext48:
 10701                           	opt stack 0
 10702  012CB2                     _d_to_x:
 10703                           	opt stack 19
 10704                           
 10705                           ; BSR set to: 15
 10706                           ;incstack = 0
 10707                           ;d_to_x@dec stored from wreg
 10708  012CB2  6E23               	movwf	d_to_x@dec,c
 10709                           
 10710                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 10711  012CB4  C023  F01F         	movff	d_to_x@dec,___awdiv@dividend
 10712  012CB8  6A20               	clrf	___awdiv@dividend+1,c
 10713  012CBA  0E00               	movlw	0
 10714  012CBC  6E22               	movwf	___awdiv@divisor+1,c
 10715  012CBE  0E0A               	movlw	10
 10716  012CC0  6E21               	movwf	___awdiv@divisor,c
 10717  012CC2  EC37  F091         	call	___awdiv	;wreg free
 10718  012CC6  501F               	movf	?___awdiv,w,c
 10719  012CC8  0D06               	mullw	6
 10720  012CCA  50F3               	movf	prodl,w,c
 10721  012CCC  2423               	addwf	d_to_x@dec,w,c
 10722  012CCE  0012               	return	
 10723  012CD0                     __end_of_d_to_x:
 10724                           	opt stack 0
 10725                           tblptru	equ	0xFF8
 10726                           tblptrh	equ	0xFF7
 10727                           tblptrl	equ	0xFF6
 10728                           tablat	equ	0xFF5
 10729                           prodh	equ	0xFF4
 10730                           prodl	equ	0xFF3
 10731                           intcon	equ	0xFF2
 10732                           intcon2	equ	0xFF1
 10733                           postinc0	equ	0xFEE
 10734                           wreg	equ	0xFE8
 10735                           indf1	equ	0xFE7
 10736                           postinc1	equ	0xFE6
 10737                           postdec1	equ	0xFE5
 10738                           fsr1h	equ	0xFE2
 10739                           fsr1l	equ	0xFE1
 10740                           indf2	equ	0xFDF
 10741                           postinc2	equ	0xFDE
 10742                           postdec2	equ	0xFDD
 10743                           fsr2h	equ	0xFDA
 10744                           fsr2l	equ	0xFD9
 10745                           status	equ	0xFD8
 10746                           
 10747 ;; *************** function ___awdiv *****************
 10748 ;; Defined at:
 10749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  dividend        2   30[COMRAM] int 
 10752 ;;  divisor         2   32[COMRAM] int 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  quotient        2    2[BANK0 ] int 
 10755 ;;  sign            1    1[BANK0 ] unsigned char 
 10756 ;;  counter         1    0[BANK0 ] unsigned char 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  2   30[COMRAM] int 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;Total ram usage:        8 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:    4
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_d_to_x
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text49
 10781  01226E                     __ptext49:
 10782                           	opt stack 0
 10783  01226E                     ___awdiv:
 10784                           	opt stack 19
 10785                           
 10786                           ;incstack = 0
 10787  01226E  0E00               	movlw	0
 10788  012270  0100               	movlb	0	; () banked
 10789  012272  6F61               	movwf	___awdiv@sign& (0+255),b
 10790                           
 10791                           ; BSR set to: 0
 10792  012274  AE22               	btfss	___awdiv@divisor+1,7,c
 10793  012276  D007               	goto	l4603
 10794                           
 10795                           ; BSR set to: 0
 10796  012278  6C21               	negf	___awdiv@divisor,c
 10797  01227A  1E22               	comf	___awdiv@divisor+1,f,c
 10798  01227C  B0D8               	btfsc	status,0,c
 10799  01227E  2A22               	incf	___awdiv@divisor+1,f,c
 10800                           
 10801                           ; BSR set to: 0
 10802  012280  0E01               	movlw	1
 10803  012282  0100               	movlb	0	; () banked
 10804  012284  6F61               	movwf	___awdiv@sign& (0+255),b
 10805  012286                     l4603:
 10806                           
 10807                           ; BSR set to: 0
 10808  012286  AE20               	btfss	___awdiv@dividend+1,7,c
 10809  012288  D007               	goto	l4609
 10810                           
 10811                           ; BSR set to: 0
 10812  01228A  6C1F               	negf	___awdiv@dividend,c
 10813  01228C  1E20               	comf	___awdiv@dividend+1,f,c
 10814  01228E  B0D8               	btfsc	status,0,c
 10815  012290  2A20               	incf	___awdiv@dividend+1,f,c
 10816                           
 10817                           ; BSR set to: 0
 10818  012292  0E01               	movlw	1
 10819  012294  0100               	movlb	0	; () banked
 10820  012296  1B61               	xorwf	___awdiv@sign& (0+255),f,b
 10821  012298                     l4609:
 10822                           
 10823                           ; BSR set to: 0
 10824  012298  0E00               	movlw	0
 10825  01229A  0100               	movlb	0	; () banked
 10826  01229C  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
 10827  01229E  0E00               	movlw	0
 10828  0122A0  6F62               	movwf	___awdiv@quotient& (0+255),b
 10829                           
 10830                           ; BSR set to: 0
 10831  0122A2  5021               	movf	___awdiv@divisor,w,c
 10832  0122A4  1022               	iorwf	___awdiv@divisor+1,w,c
 10833  0122A6  B4D8               	btfsc	status,2,c
 10834  0122A8  D021               	goto	l4631
 10835                           
 10836                           ; BSR set to: 0
 10837  0122AA  0E01               	movlw	1
 10838  0122AC  0100               	movlb	0	; () banked
 10839  0122AE  6F60               	movwf	___awdiv@counter& (0+255),b
 10840  0122B0  D005               	goto	l4617
 10841  0122B2                     l4615:
 10842                           
 10843                           ; BSR set to: 0
 10844  0122B2  90D8               	bcf	status,0,c
 10845  0122B4  3621               	rlcf	___awdiv@divisor,f,c
 10846  0122B6  3622               	rlcf	___awdiv@divisor+1,f,c
 10847  0122B8  0100               	movlb	0	; () banked
 10848  0122BA  2B60               	incf	___awdiv@counter& (0+255),f,b
 10849  0122BC                     l4617:
 10850                           
 10851                           ; BSR set to: 0
 10852  0122BC  AE22               	btfss	___awdiv@divisor+1,7,c
 10853  0122BE  D7F9               	goto	l4615
 10854  0122C0                     l4619:
 10855                           
 10856                           ; BSR set to: 0
 10857  0122C0  0100               	movlb	0	; () banked
 10858  0122C2  90D8               	bcf	status,0,c
 10859  0122C4  3762               	rlcf	___awdiv@quotient& (0+255),f,b
 10860  0122C6  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10861                           
 10862                           ; BSR set to: 0
 10863  0122C8  5021               	movf	___awdiv@divisor,w,c
 10864  0122CA  5C1F               	subwf	___awdiv@dividend,w,c
 10865  0122CC  5022               	movf	___awdiv@divisor+1,w,c
 10866  0122CE  5820               	subwfb	___awdiv@dividend+1,w,c
 10867  0122D0  A0D8               	btfss	status,0,c
 10868  0122D2  D006               	goto	l4627
 10869                           
 10870                           ; BSR set to: 0
 10871  0122D4  5021               	movf	___awdiv@divisor,w,c
 10872  0122D6  5E1F               	subwf	___awdiv@dividend,f,c
 10873  0122D8  5022               	movf	___awdiv@divisor+1,w,c
 10874  0122DA  5A20               	subwfb	___awdiv@dividend+1,f,c
 10875                           
 10876                           ; BSR set to: 0
 10877  0122DC  0100               	movlb	0	; () banked
 10878  0122DE  8162               	bsf	___awdiv@quotient& (0+255),0,b
 10879  0122E0                     l4627:
 10880                           
 10881                           ; BSR set to: 0
 10882  0122E0  90D8               	bcf	status,0,c
 10883  0122E2  3222               	rrcf	___awdiv@divisor+1,f,c
 10884  0122E4  3221               	rrcf	___awdiv@divisor,f,c
 10885                           
 10886                           ; BSR set to: 0
 10887  0122E6  0100               	movlb	0	; () banked
 10888  0122E8  2F60               	decfsz	___awdiv@counter& (0+255),f,b
 10889  0122EA  D7EA               	goto	l4619
 10890  0122EC                     l4631:
 10891                           
 10892                           ; BSR set to: 0
 10893  0122EC  0100               	movlb	0	; () banked
 10894  0122EE  5161               	movf	___awdiv@sign& (0+255),w,b
 10895  0122F0  0100               	movlb	0	; () banked
 10896  0122F2  B4D8               	btfsc	status,2,c
 10897  0122F4  D005               	goto	l4635
 10898                           
 10899                           ; BSR set to: 0
 10900  0122F6  0100               	movlb	0	; () banked
 10901  0122F8  6D62               	negf	___awdiv@quotient& (0+255),b
 10902  0122FA  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10903  0122FC  B0D8               	btfsc	status,0,c
 10904  0122FE  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10905  012300                     l4635:
 10906                           
 10907                           ; BSR set to: 0
 10908  012300  C062  F01F         	movff	___awdiv@quotient,?___awdiv
 10909  012304  C063  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 10910  012308  0012               	return	
 10911  01230A                     __end_of___awdiv:
 10912                           	opt stack 0
 10913                           tblptru	equ	0xFF8
 10914                           tblptrh	equ	0xFF7
 10915                           tblptrl	equ	0xFF6
 10916                           tablat	equ	0xFF5
 10917                           prodh	equ	0xFF4
 10918                           prodl	equ	0xFF3
 10919                           intcon	equ	0xFF2
 10920                           intcon2	equ	0xFF1
 10921                           postinc0	equ	0xFEE
 10922                           wreg	equ	0xFE8
 10923                           indf1	equ	0xFE7
 10924                           postinc1	equ	0xFE6
 10925                           postdec1	equ	0xFE5
 10926                           fsr1h	equ	0xFE2
 10927                           fsr1l	equ	0xFE1
 10928                           indf2	equ	0xFDF
 10929                           postinc2	equ	0xFDE
 10930                           postdec2	equ	0xFDD
 10931                           fsr2h	equ	0xFDA
 10932                           fsr2l	equ	0xFD9
 10933                           status	equ	0xFD8
 10934                           
 10935 ;; *************** function _ISR *****************
 10936 ;; Defined at:
 10937 ;;		line 55 in file "PIC18F27J53-killifish_light04.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;		None
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;		None
 10942 ;; Return value:  Size  Location     Type
 10943 ;;		None               void
 10944 ;; Registers used:
 10945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10954 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10955 ;;Total ram usage:       14 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    3
 10958 ;; This function calls:
 10959 ;;		_UART_ISR
 10960 ;;		_button_timer_interrupt
 10961 ;; This function is called by:
 10962 ;;		Interrupt level 2
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	intcode
 10967  000008                     __pintcode:
 10968                           	opt stack 0
 10969  000008                     _ISR:
 10970                           	opt stack 18
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;incstack = 0
 10974  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10975  00000A  CFFA F011          	movff	pclath,??_ISR
 10976  00000E  CFFB F012          	movff	pclatu,??_ISR+1
 10977  000012  CFE9 F013          	movff	fsr0l,??_ISR+2
 10978  000016  CFEA F014          	movff	fsr0h,??_ISR+3
 10979  00001A  CFE1 F015          	movff	fsr1l,??_ISR+4
 10980  00001E  CFE2 F016          	movff	fsr1h,??_ISR+5
 10981  000022  CFD9 F017          	movff	fsr2l,??_ISR+6
 10982  000026  CFDA F018          	movff	fsr2h,??_ISR+7
 10983  00002A  CFF3 F019          	movff	prodl,??_ISR+8
 10984  00002E  CFF4 F01A          	movff	prodh,??_ISR+9
 10985  000032  CFF6 F01B          	movff	tblptrl,??_ISR+10
 10986  000036  CFF7 F01C          	movff	tblptrh,??_ISR+11
 10987  00003A  CFF8 F01D          	movff	tblptru,??_ISR+12
 10988  00003E  CFF5 F01E          	movff	tablat,??_ISR+13
 10989                           
 10990                           ;PIC18F27J53-killifish_light04.c: 56: UART_ISR();
 10991  000042  EC0D  F095         	call	_UART_ISR	;wreg free
 10992                           
 10993                           ;PIC18F27J53-killifish_light04.c: 57: if (INTCONbits.T0IF) {
 10994  000046  B4F2               	btfsc	intcon,2,c	;volatile
 10995                           
 10996                           ;PIC18F27J53-killifish_light04.c: 58: INTCONbits.T0IF = 0;
 10997  000048  94F2               	bcf	intcon,2,c	;volatile
 10998                           
 10999                           ;PIC18F27J53-killifish_light04.c: 59: }
 11000                           ;PIC18F27J53-killifish_light04.c: 60: if (PIR1bits.TMR1IF) {
 11001  00004A  A09E               	btfss	3998,0,c	;volatile
 11002  00004C  D003               	goto	i2l4489
 11003                           
 11004                           ;PIC18F27J53-killifish_light04.c: 61: PIR1bits.TMR1IF = 0;
 11005  00004E  909E               	bcf	3998,0,c	;volatile
 11006                           
 11007                           ;PIC18F27J53-killifish_light04.c: 62: TMR1H = 0x80;
 11008  000050  0E80               	movlw	128
 11009  000052  6ECF               	movwf	4047,c	;volatile
 11010  000054                     i2l4489:
 11011                           
 11012                           ;PIC18F27J53-killifish_light04.c: 63: }
 11013                           ;PIC18F27J53-killifish_light04.c: 64: if (PIR2bits.TMR3IF) {
 11014  000054  A2A1               	btfss	4001,1,c	;volatile
 11015  000056  D027               	goto	i2l587
 11016                           
 11017                           ;PIC18F27J53-killifish_light04.c: 65: PIR2bits.TMR3IF = 0;
 11018  000058  92A1               	bcf	4001,1,c	;volatile
 11019                           
 11020                           ;PIC18F27J53-killifish_light04.c: 66: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 11021  00005A  0E3D               	movlw	low _sw_R
 11022  00005C  6E01               	movwf	button_timer_interrupt@bt,c
 11023  00005E  0E00               	movlw	high _sw_R
 11024  000060  6E02               	movwf	button_timer_interrupt@bt+1,c
 11025  000062  BA80               	btfsc	3968,5,c	;volatile
 11026  000064  D002               	goto	i2u471_40
 11027  000066  0E01               	movlw	1
 11028  000068  D001               	goto	i2u472_40
 11029  00006A                     i2u471_40:
 11030  00006A  0E00               	movlw	0
 11031  00006C                     i2u472_40:
 11032  00006C  6E03               	movwf	button_timer_interrupt@sw_value,c
 11033  00006E  EC65  F088         	call	_button_timer_interrupt	;wreg free
 11034                           
 11035                           ;PIC18F27J53-killifish_light04.c: 67: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 11036  000072  0E39               	movlw	low _sw_G
 11037  000074  6E01               	movwf	button_timer_interrupt@bt,c
 11038  000076  0E00               	movlw	high _sw_G
 11039  000078  6E02               	movwf	button_timer_interrupt@bt+1,c
 11040  00007A  BC80               	btfsc	3968,6,c	;volatile
 11041  00007C  D002               	goto	i2u473_40
 11042  00007E  0E01               	movlw	1
 11043  000080  D001               	goto	i2u474_40
 11044  000082                     i2u473_40:
 11045  000082  0E00               	movlw	0
 11046  000084                     i2u474_40:
 11047  000084  6E03               	movwf	button_timer_interrupt@sw_value,c
 11048  000086  EC65  F088         	call	_button_timer_interrupt	;wreg free
 11049                           
 11050                           ;PIC18F27J53-killifish_light04.c: 68: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 11051  00008A  0E35               	movlw	low _sw_B
 11052  00008C  6E01               	movwf	button_timer_interrupt@bt,c
 11053  00008E  0E00               	movlw	high _sw_B
 11054  000090  6E02               	movwf	button_timer_interrupt@bt+1,c
 11055  000092  BE80               	btfsc	3968,7,c	;volatile
 11056  000094  D002               	goto	i2u475_40
 11057  000096  0E01               	movlw	1
 11058  000098  D001               	goto	i2u476_40
 11059  00009A                     i2u475_40:
 11060  00009A  0E00               	movlw	0
 11061  00009C                     i2u476_40:
 11062  00009C  6E03               	movwf	button_timer_interrupt@sw_value,c
 11063  00009E  EC65  F088         	call	_button_timer_interrupt	;wreg free
 11064                           
 11065                           ;PIC18F27J53-killifish_light04.c: 69: ADC_flag = 1;
 11066  0000A2  0E01               	movlw	1
 11067  0000A4  6E2B               	movwf	_ADC_flag,c
 11068  0000A6                     i2l587:
 11069  0000A6  C01E  FFF5         	movff	??_ISR+13,tablat
 11070  0000AA  C01D  FFF8         	movff	??_ISR+12,tblptru
 11071  0000AE  C01C  FFF7         	movff	??_ISR+11,tblptrh
 11072  0000B2  C01B  FFF6         	movff	??_ISR+10,tblptrl
 11073  0000B6  C01A  FFF4         	movff	??_ISR+9,prodh
 11074  0000BA  C019  FFF3         	movff	??_ISR+8,prodl
 11075  0000BE  C018  FFDA         	movff	??_ISR+7,fsr2h
 11076  0000C2  C017  FFD9         	movff	??_ISR+6,fsr2l
 11077  0000C6  C016  FFE2         	movff	??_ISR+5,fsr1h
 11078  0000CA  C015  FFE1         	movff	??_ISR+4,fsr1l
 11079  0000CE  C014  FFEA         	movff	??_ISR+3,fsr0h
 11080  0000D2  C013  FFE9         	movff	??_ISR+2,fsr0l
 11081  0000D6  C012  FFFB         	movff	??_ISR+1,pclatu
 11082  0000DA  C011  FFFA         	movff	??_ISR,pclath
 11083  0000DE  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11084  0000E0  0011               	retfie		f
 11085  0000E2                     __end_of_ISR:
 11086                           	opt stack 0
 11087                           pclatu	equ	0xFFB
 11088                           pclath	equ	0xFFA
 11089                           tblptru	equ	0xFF8
 11090                           tblptrh	equ	0xFF7
 11091                           tblptrl	equ	0xFF6
 11092                           tablat	equ	0xFF5
 11093                           prodh	equ	0xFF4
 11094                           prodl	equ	0xFF3
 11095                           intcon	equ	0xFF2
 11096                           intcon2	equ	0xFF1
 11097                           postinc0	equ	0xFEE
 11098                           fsr0h	equ	0xFEA
 11099                           fsr0l	equ	0xFE9
 11100                           wreg	equ	0xFE8
 11101                           indf1	equ	0xFE7
 11102                           postinc1	equ	0xFE6
 11103                           postdec1	equ	0xFE5
 11104                           fsr1h	equ	0xFE2
 11105                           fsr1l	equ	0xFE1
 11106                           indf2	equ	0xFDF
 11107                           postinc2	equ	0xFDE
 11108                           postdec2	equ	0xFDD
 11109                           fsr2h	equ	0xFDA
 11110                           fsr2l	equ	0xFD9
 11111                           status	equ	0xFD8
 11112                           
 11113 ;; *************** function _button_timer_interrupt *****************
 11114 ;; Defined at:
 11115 ;;		line 51 in file "../My_header\My_button.h"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  bt              2    0[COMRAM] PTR struct button
 11118 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 11119 ;;  sw_value        1    2[COMRAM] unsigned char 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;		None               void
 11124 ;; Registers used:
 11125 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;Total ram usage:        5 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; This function calls:
 11138 ;;		Nothing
 11139 ;; This function is called by:
 11140 ;;		_ISR
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text51
 11145  0110CA                     __ptext51:
 11146                           	opt stack 0
 11147  0110CA                     _button_timer_interrupt:
 11148                           	opt stack 20
 11149                           
 11150                           ;My_header\My_button.h: 52: if (sw_value) {
 11151                           
 11152                           ;incstack = 0
 11153  0110CA  5003               	movf	button_timer_interrupt@sw_value,w,c
 11154  0110CC  B4D8               	btfsc	status,2,c
 11155  0110CE  D098               	goto	i2l4005
 11156                           
 11157                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 11158  0110D0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11159  0110D4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11160  0110D8  0E84               	movlw	132
 11161  0110DA  18DE               	xorwf	postinc2,w,c
 11162  0110DC  E10B               	bnz	i2l286
 11163  0110DE  0E03               	movlw	3
 11164  0110E0  18DE               	xorwf	postinc2,w,c
 11165  0110E2  A4D8               	btfss	status,2,c
 11166  0110E4  D007               	goto	i2l286
 11167  0110E6  EE20 F003          	lfsr	2,3
 11168  0110EA  5001               	movf	button_timer_interrupt@bt,w,c
 11169  0110EC  26D9               	addwf	fsr2l,f,c
 11170  0110EE  5002               	movf	button_timer_interrupt@bt+1,w,c
 11171  0110F0  22DA               	addwfc	fsr2h,f,c
 11172  0110F2  8EDF               	bsf	indf2,7,c
 11173  0110F4                     i2l286:
 11174                           
 11175                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 11176  0110F4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11177  0110F8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11178  0110FC  0EBC               	movlw	188
 11179  0110FE  18DE               	xorwf	postinc2,w,c
 11180  011100  E10B               	bnz	i2l287
 11181  011102  0E02               	movlw	2
 11182  011104  18DE               	xorwf	postinc2,w,c
 11183  011106  A4D8               	btfss	status,2,c
 11184  011108  D007               	goto	i2l287
 11185  01110A  EE20 F003          	lfsr	2,3
 11186  01110E  5001               	movf	button_timer_interrupt@bt,w,c
 11187  011110  26D9               	addwf	fsr2l,f,c
 11188  011112  5002               	movf	button_timer_interrupt@bt+1,w,c
 11189  011114  22DA               	addwfc	fsr2h,f,c
 11190  011116  8CDF               	bsf	indf2,6,c
 11191  011118                     i2l287:
 11192                           
 11193                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 11194  011118  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11195  01111C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11196  011120  0EF4               	movlw	244
 11197  011122  18DE               	xorwf	postinc2,w,c
 11198  011124  E10A               	bnz	i2l288
 11199  011126  04DE               	decf	postinc2,w,c
 11200  011128  A4D8               	btfss	status,2,c
 11201  01112A  D007               	goto	i2l288
 11202  01112C  EE20 F003          	lfsr	2,3
 11203  011130  5001               	movf	button_timer_interrupt@bt,w,c
 11204  011132  26D9               	addwf	fsr2l,f,c
 11205  011134  5002               	movf	button_timer_interrupt@bt+1,w,c
 11206  011136  22DA               	addwfc	fsr2h,f,c
 11207  011138  8ADF               	bsf	indf2,5,c
 11208  01113A                     i2l288:
 11209                           
 11210                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 11211  01113A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11212  01113E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11213  011142  0E2C               	movlw	44
 11214  011144  18DE               	xorwf	postinc2,w,c
 11215  011146  E10A               	bnz	i2l289
 11216  011148  04DE               	decf	postinc2,w,c
 11217  01114A  A4D8               	btfss	status,2,c
 11218  01114C  D007               	goto	i2l289
 11219  01114E  EE20 F003          	lfsr	2,3
 11220  011152  5001               	movf	button_timer_interrupt@bt,w,c
 11221  011154  26D9               	addwf	fsr2l,f,c
 11222  011156  5002               	movf	button_timer_interrupt@bt+1,w,c
 11223  011158  22DA               	addwfc	fsr2h,f,c
 11224  01115A  88DF               	bsf	indf2,4,c
 11225  01115C                     i2l289:
 11226                           
 11227                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 11228  01115C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11229  011160  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11230  011164  0E96               	movlw	150
 11231  011166  18DE               	xorwf	postinc2,w,c
 11232  011168  10DE               	iorwf	postinc2,w,c
 11233  01116A  A4D8               	btfss	status,2,c
 11234  01116C  D007               	goto	i2l290
 11235  01116E  EE20 F003          	lfsr	2,3
 11236  011172  5001               	movf	button_timer_interrupt@bt,w,c
 11237  011174  26D9               	addwf	fsr2l,f,c
 11238  011176  5002               	movf	button_timer_interrupt@bt+1,w,c
 11239  011178  22DA               	addwfc	fsr2h,f,c
 11240  01117A  86DF               	bsf	indf2,3,c
 11241  01117C                     i2l290:
 11242                           
 11243                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 11244  01117C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11245  011180  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11246  011184  0E3C               	movlw	60
 11247  011186  18DE               	xorwf	postinc2,w,c
 11248  011188  10DE               	iorwf	postinc2,w,c
 11249  01118A  A4D8               	btfss	status,2,c
 11250  01118C  D007               	goto	i2l291
 11251  01118E  EE20 F003          	lfsr	2,3
 11252  011192  5001               	movf	button_timer_interrupt@bt,w,c
 11253  011194  26D9               	addwf	fsr2l,f,c
 11254  011196  5002               	movf	button_timer_interrupt@bt+1,w,c
 11255  011198  22DA               	addwfc	fsr2h,f,c
 11256  01119A  84DF               	bsf	indf2,2,c
 11257  01119C                     i2l291:
 11258                           
 11259                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 11260  01119C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11261  0111A0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11262  0111A4  0E10               	movlw	16
 11263  0111A6  18DE               	xorwf	postinc2,w,c
 11264  0111A8  10DE               	iorwf	postinc2,w,c
 11265  0111AA  A4D8               	btfss	status,2,c
 11266  0111AC  D007               	goto	i2l292
 11267  0111AE  EE20 F003          	lfsr	2,3
 11268  0111B2  5001               	movf	button_timer_interrupt@bt,w,c
 11269  0111B4  26D9               	addwf	fsr2l,f,c
 11270  0111B6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11271  0111B8  22DA               	addwfc	fsr2h,f,c
 11272  0111BA  82DF               	bsf	indf2,1,c
 11273  0111BC                     i2l292:
 11274                           
 11275                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 11276  0111BC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11277  0111C0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11278  0111C4  0E02               	movlw	2
 11279  0111C6  18DE               	xorwf	postinc2,w,c
 11280  0111C8  10DE               	iorwf	postinc2,w,c
 11281  0111CA  A4D8               	btfss	status,2,c
 11282  0111CC  D007               	goto	i2l293
 11283  0111CE  EE20 F003          	lfsr	2,3
 11284  0111D2  5001               	movf	button_timer_interrupt@bt,w,c
 11285  0111D4  26D9               	addwf	fsr2l,f,c
 11286  0111D6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11287  0111D8  22DA               	addwfc	fsr2h,f,c
 11288  0111DA  80DF               	bsf	indf2,0,c
 11289  0111DC                     i2l293:
 11290                           
 11291                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 11292  0111DC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11293  0111E0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11294  0111E4  0E85               	movlw	133
 11295  0111E6  5CDE               	subwf	postinc2,w,c
 11296  0111E8  0E03               	movlw	3
 11297  0111EA  58DE               	subwfb	postinc2,w,c
 11298  0111EC  B0D8               	btfsc	status,0,c
 11299  0111EE  0012               	return	
 11300  0111F0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11301  0111F4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11302  0111F8  2ADE               	incf	postinc2,f,c
 11303  0111FA  0E00               	movlw	0
 11304  0111FC  22DD               	addwfc	postdec2,f,c
 11305                           
 11306                           ;My_header\My_button.h: 62: } else {
 11307  0111FE  0012               	return	
 11308  011200                     i2l4005:
 11309                           
 11310                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 11311  011200  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11312  011204  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11313  011208  0E84               	movlw	132
 11314  01120A  5CDE               	subwf	postinc2,w,c
 11315  01120C  0E03               	movlw	3
 11316  01120E  58DE               	subwfb	postinc2,w,c
 11317  011210  A0D8               	btfss	status,0,c
 11318  011212  D008               	goto	i2l4009
 11319  011214  EE20 F002          	lfsr	2,2
 11320  011218  5001               	movf	button_timer_interrupt@bt,w,c
 11321  01121A  26D9               	addwf	fsr2l,f,c
 11322  01121C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11323  01121E  22DA               	addwfc	fsr2h,f,c
 11324  011220  8EDF               	bsf	indf2,7,c
 11325  011222  D081               	goto	i2l4037
 11326  011224                     i2l4009:
 11327                           
 11328                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 11329  011224  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11330  011228  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11331  01122C  0EBC               	movlw	188
 11332  01122E  5CDE               	subwf	postinc2,w,c
 11333  011230  0E02               	movlw	2
 11334  011232  58DE               	subwfb	postinc2,w,c
 11335  011234  A0D8               	btfss	status,0,c
 11336  011236  D008               	goto	i2l4013
 11337  011238  EE20 F002          	lfsr	2,2
 11338  01123C  5001               	movf	button_timer_interrupt@bt,w,c
 11339  01123E  26D9               	addwf	fsr2l,f,c
 11340  011240  5002               	movf	button_timer_interrupt@bt+1,w,c
 11341  011242  22DA               	addwfc	fsr2h,f,c
 11342  011244  8CDF               	bsf	indf2,6,c
 11343  011246  D06F               	goto	i2l4037
 11344  011248                     i2l4013:
 11345                           
 11346                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 11347  011248  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11348  01124C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11349  011250  0EF4               	movlw	244
 11350  011252  5CDE               	subwf	postinc2,w,c
 11351  011254  0E01               	movlw	1
 11352  011256  58DE               	subwfb	postinc2,w,c
 11353  011258  A0D8               	btfss	status,0,c
 11354  01125A  D008               	goto	i2l4017
 11355  01125C  EE20 F002          	lfsr	2,2
 11356  011260  5001               	movf	button_timer_interrupt@bt,w,c
 11357  011262  26D9               	addwf	fsr2l,f,c
 11358  011264  5002               	movf	button_timer_interrupt@bt+1,w,c
 11359  011266  22DA               	addwfc	fsr2h,f,c
 11360  011268  8ADF               	bsf	indf2,5,c
 11361  01126A  D05D               	goto	i2l4037
 11362  01126C                     i2l4017:
 11363                           
 11364                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 11365  01126C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11366  011270  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11367  011274  0E2C               	movlw	44
 11368  011276  5CDE               	subwf	postinc2,w,c
 11369  011278  0E01               	movlw	1
 11370  01127A  58DE               	subwfb	postinc2,w,c
 11371  01127C  A0D8               	btfss	status,0,c
 11372  01127E  D008               	goto	i2l4021
 11373  011280  EE20 F002          	lfsr	2,2
 11374  011284  5001               	movf	button_timer_interrupt@bt,w,c
 11375  011286  26D9               	addwf	fsr2l,f,c
 11376  011288  5002               	movf	button_timer_interrupt@bt+1,w,c
 11377  01128A  22DA               	addwfc	fsr2h,f,c
 11378  01128C  88DF               	bsf	indf2,4,c
 11379  01128E  D04B               	goto	i2l4037
 11380  011290                     i2l4021:
 11381                           
 11382                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 11383  011290  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11384  011294  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11385  011298  0E01               	movlw	1
 11386  01129A  50DB               	movf	plusw2,w,c
 11387  01129C  E104               	bnz	i2u397_40
 11388  01129E  0E96               	movlw	150
 11389  0112A0  5CDE               	subwf	postinc2,w,c
 11390  0112A2  A0D8               	btfss	status,0,c
 11391  0112A4  D008               	goto	i2l4025
 11392  0112A6                     i2u397_40:
 11393  0112A6  EE20 F002          	lfsr	2,2
 11394  0112AA  5001               	movf	button_timer_interrupt@bt,w,c
 11395  0112AC  26D9               	addwf	fsr2l,f,c
 11396  0112AE  5002               	movf	button_timer_interrupt@bt+1,w,c
 11397  0112B0  22DA               	addwfc	fsr2h,f,c
 11398  0112B2  86DF               	bsf	indf2,3,c
 11399  0112B4  D038               	goto	i2l4037
 11400  0112B6                     i2l4025:
 11401                           
 11402                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 11403  0112B6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11404  0112BA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11405  0112BE  0E01               	movlw	1
 11406  0112C0  50DB               	movf	plusw2,w,c
 11407  0112C2  E104               	bnz	i2u398_40
 11408  0112C4  0E3C               	movlw	60
 11409  0112C6  5CDE               	subwf	postinc2,w,c
 11410  0112C8  A0D8               	btfss	status,0,c
 11411  0112CA  D008               	goto	i2l4029
 11412  0112CC                     i2u398_40:
 11413  0112CC  EE20 F002          	lfsr	2,2
 11414  0112D0  5001               	movf	button_timer_interrupt@bt,w,c
 11415  0112D2  26D9               	addwf	fsr2l,f,c
 11416  0112D4  5002               	movf	button_timer_interrupt@bt+1,w,c
 11417  0112D6  22DA               	addwfc	fsr2h,f,c
 11418  0112D8  84DF               	bsf	indf2,2,c
 11419  0112DA  D025               	goto	i2l4037
 11420  0112DC                     i2l4029:
 11421                           
 11422                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 11423  0112DC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11424  0112E0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11425  0112E4  0E01               	movlw	1
 11426  0112E6  50DB               	movf	plusw2,w,c
 11427  0112E8  E104               	bnz	i2u399_40
 11428  0112EA  0E10               	movlw	16
 11429  0112EC  5CDE               	subwf	postinc2,w,c
 11430  0112EE  A0D8               	btfss	status,0,c
 11431  0112F0  D008               	goto	i2l4033
 11432  0112F2                     i2u399_40:
 11433  0112F2  EE20 F002          	lfsr	2,2
 11434  0112F6  5001               	movf	button_timer_interrupt@bt,w,c
 11435  0112F8  26D9               	addwf	fsr2l,f,c
 11436  0112FA  5002               	movf	button_timer_interrupt@bt+1,w,c
 11437  0112FC  22DA               	addwfc	fsr2h,f,c
 11438  0112FE  82DF               	bsf	indf2,1,c
 11439  011300  D012               	goto	i2l4037
 11440  011302                     i2l4033:
 11441                           
 11442                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 11443  011302  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11444  011306  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11445  01130A  0E01               	movlw	1
 11446  01130C  50DB               	movf	plusw2,w,c
 11447  01130E  E104               	bnz	i2u400_40
 11448  011310  0E02               	movlw	2
 11449  011312  5CDE               	subwf	postinc2,w,c
 11450  011314  A0D8               	btfss	status,0,c
 11451  011316  D007               	goto	i2l4037
 11452  011318                     i2u400_40:
 11453  011318  EE20 F002          	lfsr	2,2
 11454  01131C  5001               	movf	button_timer_interrupt@bt,w,c
 11455  01131E  26D9               	addwf	fsr2l,f,c
 11456  011320  5002               	movf	button_timer_interrupt@bt+1,w,c
 11457  011322  22DA               	addwfc	fsr2h,f,c
 11458  011324  80DF               	bsf	indf2,0,c
 11459  011326                     i2l4037:
 11460                           
 11461                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 11462  011326  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11463  01132A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11464  01132E  0E00               	movlw	0
 11465  011330  6EDE               	movwf	postinc2,c
 11466  011332  0E00               	movlw	0
 11467  011334  6EDD               	movwf	postdec2,c
 11468                           
 11469                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 11470  011336  EE20 F002          	lfsr	2,2
 11471  01133A  5001               	movf	button_timer_interrupt@bt,w,c
 11472  01133C  26D9               	addwf	fsr2l,f,c
 11473  01133E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11474  011340  22DA               	addwfc	fsr2h,f,c
 11475  011342  0EFF               	movlw	255
 11476  011344  16DE               	andwf	postinc2,f,c
 11477  011346  0E00               	movlw	0
 11478  011348  16DD               	andwf	postdec2,f,c
 11479  01134A  0012               	return	
 11480  01134C                     __end_of_button_timer_interrupt:
 11481                           	opt stack 0
 11482                           pclatu	equ	0xFFB
 11483                           pclath	equ	0xFFA
 11484                           tblptru	equ	0xFF8
 11485                           tblptrh	equ	0xFF7
 11486                           tblptrl	equ	0xFF6
 11487                           tablat	equ	0xFF5
 11488                           prodh	equ	0xFF4
 11489                           prodl	equ	0xFF3
 11490                           intcon	equ	0xFF2
 11491                           intcon2	equ	0xFF1
 11492                           postinc0	equ	0xFEE
 11493                           fsr0h	equ	0xFEA
 11494                           fsr0l	equ	0xFE9
 11495                           wreg	equ	0xFE8
 11496                           indf1	equ	0xFE7
 11497                           postinc1	equ	0xFE6
 11498                           postdec1	equ	0xFE5
 11499                           fsr1h	equ	0xFE2
 11500                           fsr1l	equ	0xFE1
 11501                           indf2	equ	0xFDF
 11502                           postinc2	equ	0xFDE
 11503                           postdec2	equ	0xFDD
 11504                           plusw2	equ	0xFDB
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _UART_ISR *****************
 11510 ;; Defined at:
 11511 ;;		line 208 in file "../My_header\My_header.h"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;		None
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  ascii           1   15[COMRAM] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;Total ram usage:        1 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    2
 11532 ;; This function calls:
 11533 ;;		i2_ringbuf_num
 11534 ;;		i2_ringbuf_pop
 11535 ;;		i2_ringbuf_put
 11536 ;; This function is called by:
 11537 ;;		_ISR
 11538 ;; This function uses a non-reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text52
 11542  012A1A                     __ptext52:
 11543                           	opt stack 0
 11544  012A1A                     _UART_ISR:
 11545                           	opt stack 18
 11546                           
 11547                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 11548                           
 11549                           ;incstack = 0
 11550  012A1A  B89D               	btfsc	3997,4,c	;volatile
 11551  012A1C  A89E               	btfss	3998,4,c	;volatile
 11552  012A1E  D013               	goto	i2l221
 11553                           
 11554                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 11555  012A20  0E2D               	movlw	low _tx_buf
 11556  012A22  6E01               	movwf	i2ringbuf_num@rb,c
 11557  012A24  0E00               	movlw	high _tx_buf
 11558  012A26  6E02               	movwf	i2ringbuf_num@rb+1,c
 11559  012A28  ECCB  F08E         	call	i2_ringbuf_num	;wreg free
 11560  012A2C  5001               	movf	?i2_ringbuf_num,w,c
 11561  012A2E  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11562  012A30  B4D8               	btfsc	status,2,c
 11563  012A32  D008               	goto	i2l222
 11564                           
 11565                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 11566  012A34  0E2D               	movlw	low _tx_buf
 11567  012A36  6E09               	movwf	i2ringbuf_pop@rb,c
 11568  012A38  0E00               	movlw	high _tx_buf
 11569  012A3A  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 11570  012A3C  EC3D  F090         	call	i2_ringbuf_pop	;wreg free
 11571  012A40  6EAE               	movwf	4014,c	;volatile
 11572                           
 11573                           ;My_header\My_header.h: 212: } else {
 11574  012A42  D001               	goto	i2l221
 11575  012A44                     i2l222:
 11576                           
 11577                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 11578  012A44  989D               	bcf	3997,4,c	;volatile
 11579  012A46                     i2l221:
 11580                           
 11581                           ;My_header\My_header.h: 214: }
 11582                           ;My_header\My_header.h: 215: }
 11583                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 11584  012A46  AA9E               	btfss	3998,5,c	;volatile
 11585  012A48  0012               	return	
 11586  012A4A  AA9D               	btfss	3997,5,c	;volatile
 11587  012A4C  0012               	return	
 11588                           
 11589                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 11590  012A4E  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 11591                           
 11592                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 11593  012A52  0EE1               	movlw	low _rx_buf
 11594  012A54  6E09               	movwf	i2ringbuf_put@rb,c
 11595  012A56  0E00               	movlw	high _rx_buf
 11596  012A58  6E0A               	movwf	i2ringbuf_put@rb+1,c
 11597  012A5A  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 11598  012A5E  ECE2  F08F         	call	i2_ringbuf_put	;wreg free
 11599  012A62  0012               	return	
 11600  012A64                     __end_of_UART_ISR:
 11601                           	opt stack 0
 11602                           pclatu	equ	0xFFB
 11603                           pclath	equ	0xFFA
 11604                           tblptru	equ	0xFF8
 11605                           tblptrh	equ	0xFF7
 11606                           tblptrl	equ	0xFF6
 11607                           tablat	equ	0xFF5
 11608                           prodh	equ	0xFF4
 11609                           prodl	equ	0xFF3
 11610                           intcon	equ	0xFF2
 11611                           intcon2	equ	0xFF1
 11612                           postinc0	equ	0xFEE
 11613                           fsr0h	equ	0xFEA
 11614                           fsr0l	equ	0xFE9
 11615                           wreg	equ	0xFE8
 11616                           indf1	equ	0xFE7
 11617                           postinc1	equ	0xFE6
 11618                           postdec1	equ	0xFE5
 11619                           fsr1h	equ	0xFE2
 11620                           fsr1l	equ	0xFE1
 11621                           indf2	equ	0xFDF
 11622                           postinc2	equ	0xFDE
 11623                           postdec2	equ	0xFDD
 11624                           plusw2	equ	0xFDB
 11625                           fsr2h	equ	0xFDA
 11626                           fsr2l	equ	0xFD9
 11627                           status	equ	0xFD8
 11628                           
 11629 ;; *************** function i2_ringbuf_put *****************
 11630 ;; Defined at:
 11631 ;;		line 39 in file "../My_header\My_ringbuf.h"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11634 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11635 ;;  asciicode       1   10[COMRAM] unsigned char 
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;		None               void
 11640 ;; Registers used:
 11641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11647 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11649 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11651 ;;Total ram usage:        7 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    1
 11654 ;; This function calls:
 11655 ;;		i2_ringbuf_num
 11656 ;; This function is called by:
 11657 ;;		_UART_ISR
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text53
 11662  011FC4                     __ptext53:
 11663                           	opt stack 0
 11664  011FC4                     i2_ringbuf_put:
 11665                           	opt stack 18
 11666                           
 11667                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 11668                           
 11669                           ;incstack = 0
 11670  011FC4  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 11671  011FC8  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 11672  011FCC  ECCB  F08E         	call	i2_ringbuf_num	;wreg free
 11673  011FD0  EE20 F002          	lfsr	2,2
 11674  011FD4  5009               	movf	i2ringbuf_put@rb,w,c
 11675  011FD6  26D9               	addwf	fsr2l,f,c
 11676  011FD8  500A               	movf	i2ringbuf_put@rb+1,w,c
 11677  011FDA  22DA               	addwfc	fsr2h,f,c
 11678  011FDC  50DE               	movf	postinc2,w,c
 11679  011FDE  5C01               	subwf	?i2_ringbuf_num,w,c
 11680  011FE0  50DE               	movf	postinc2,w,c
 11681  011FE2  5802               	subwfb	?i2_ringbuf_num+1,w,c
 11682  011FE4  B0D8               	btfsc	status,0,c
 11683  011FE6  0012               	return	
 11684                           
 11685                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 11686  011FE8  EE20 F004          	lfsr	2,4
 11687  011FEC  5009               	movf	i2ringbuf_put@rb,w,c
 11688  011FEE  26D9               	addwf	fsr2l,f,c
 11689  011FF0  500A               	movf	i2ringbuf_put@rb+1,w,c
 11690  011FF2  22DA               	addwfc	fsr2h,f,c
 11691  011FF4  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 11692  011FF8  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 11693  011FFC  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 11694  012000  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 11695  012004  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 11696  012008  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 11697  01200C  500C               	movf	??i2_ringbuf_put,w,c
 11698  01200E  240E               	addwf	??i2_ringbuf_put+2,w,c
 11699  012010  6ED9               	movwf	fsr2l,c
 11700  012012  500D               	movf	??i2_ringbuf_put+1,w,c
 11701  012014  200F               	addwfc	??i2_ringbuf_put+3,w,c
 11702  012016  6EDA               	movwf	fsr2h,c
 11703  012018  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 11704                           
 11705                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 11706  01201C  EE20 F002          	lfsr	2,2
 11707  012020  5009               	movf	i2ringbuf_put@rb,w,c
 11708  012022  26D9               	addwf	fsr2l,f,c
 11709  012024  500A               	movf	i2ringbuf_put@rb+1,w,c
 11710  012026  22DA               	addwfc	fsr2h,f,c
 11711  012028  EE10 F004          	lfsr	1,4
 11712  01202C  5009               	movf	i2ringbuf_put@rb,w,c
 11713  01202E  26E1               	addwf	fsr1l,f,c
 11714  012030  500A               	movf	i2ringbuf_put@rb+1,w,c
 11715  012032  22E2               	addwfc	fsr1h,f,c
 11716  012034  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11717  012038  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11718  01203C  0E01               	movlw	1
 11719  01203E  260E               	addwf	??i2_ringbuf_put+2,f,c
 11720  012040  0E00               	movlw	0
 11721  012042  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11722  012044  50DE               	movf	postinc2,w,c
 11723  012046  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11724  012048  50DE               	movf	postinc2,w,c
 11725  01204A  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11726  01204C  B0D8               	btfsc	status,0,c
 11727  01204E  D00A               	goto	i2l3943
 11728  012050  EE20 F004          	lfsr	2,4
 11729  012054  5009               	movf	i2ringbuf_put@rb,w,c
 11730  012056  26D9               	addwf	fsr2l,f,c
 11731  012058  500A               	movf	i2ringbuf_put@rb+1,w,c
 11732  01205A  22DA               	addwfc	fsr2h,f,c
 11733  01205C  2ADE               	incf	postinc2,f,c
 11734  01205E  0E00               	movlw	0
 11735  012060  22DD               	addwfc	postdec2,f,c
 11736  012062  0012               	return	
 11737  012064                     i2l3943:
 11738                           
 11739                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 11740  012064  EE20 F004          	lfsr	2,4
 11741  012068  5009               	movf	i2ringbuf_put@rb,w,c
 11742  01206A  26D9               	addwf	fsr2l,f,c
 11743  01206C  500A               	movf	i2ringbuf_put@rb+1,w,c
 11744  01206E  22DA               	addwfc	fsr2h,f,c
 11745  012070  0E00               	movlw	0
 11746  012072  6EDE               	movwf	postinc2,c
 11747  012074  0E00               	movlw	0
 11748  012076  6EDD               	movwf	postdec2,c
 11749  012078  0012               	return	
 11750  01207A                     __end_ofi2_ringbuf_put:
 11751                           	opt stack 0
 11752                           pclatu	equ	0xFFB
 11753                           pclath	equ	0xFFA
 11754                           tblptru	equ	0xFF8
 11755                           tblptrh	equ	0xFF7
 11756                           tblptrl	equ	0xFF6
 11757                           tablat	equ	0xFF5
 11758                           prodh	equ	0xFF4
 11759                           prodl	equ	0xFF3
 11760                           intcon	equ	0xFF2
 11761                           intcon2	equ	0xFF1
 11762                           postinc0	equ	0xFEE
 11763                           fsr0h	equ	0xFEA
 11764                           fsr0l	equ	0xFE9
 11765                           wreg	equ	0xFE8
 11766                           indf1	equ	0xFE7
 11767                           postinc1	equ	0xFE6
 11768                           postdec1	equ	0xFE5
 11769                           fsr1h	equ	0xFE2
 11770                           fsr1l	equ	0xFE1
 11771                           indf2	equ	0xFDF
 11772                           postinc2	equ	0xFDE
 11773                           postdec2	equ	0xFDD
 11774                           plusw2	equ	0xFDB
 11775                           fsr2h	equ	0xFDA
 11776                           fsr2l	equ	0xFD9
 11777                           status	equ	0xFD8
 11778                           
 11779 ;; *************** function i2_ringbuf_pop *****************
 11780 ;; Defined at:
 11781 ;;		line 64 in file "../My_header\My_ringbuf.h"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11784 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      unsigned char 
 11789 ;; Registers used:
 11790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11800 ;;Total ram usage:        7 bytes
 11801 ;; Hardware stack levels used:    1
 11802 ;; Hardware stack levels required when called:    1
 11803 ;; This function calls:
 11804 ;;		i2_ringbuf_num
 11805 ;; This function is called by:
 11806 ;;		_UART_ISR
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text54
 11811  01207A                     __ptext54:
 11812                           	opt stack 0
 11813  01207A                     i2_ringbuf_pop:
 11814                           	opt stack 18
 11815                           
 11816                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 11817                           
 11818                           ;incstack = 0
 11819  01207A  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11820  01207E  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11821  012082  ECCB  F08E         	call	i2_ringbuf_num	;wreg free
 11822  012086  5001               	movf	?i2_ringbuf_num,w,c
 11823  012088  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11824  01208A  B4D8               	btfsc	status,2,c
 11825  01208C  D04A               	goto	i2l3961
 11826                           
 11827                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 11828  01208E  EE20 F006          	lfsr	2,6
 11829  012092  5009               	movf	i2ringbuf_pop@rb,w,c
 11830  012094  26D9               	addwf	fsr2l,f,c
 11831  012096  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11832  012098  22DA               	addwfc	fsr2h,f,c
 11833  01209A  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 11834  01209E  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 11835  0120A2  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11836  0120A6  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11837  0120AA  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 11838  0120AE  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 11839  0120B2  500B               	movf	??i2_ringbuf_pop,w,c
 11840  0120B4  240D               	addwf	??i2_ringbuf_pop+2,w,c
 11841  0120B6  6ED9               	movwf	fsr2l,c
 11842  0120B8  500C               	movf	??i2_ringbuf_pop+1,w,c
 11843  0120BA  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 11844  0120BC  6EDA               	movwf	fsr2h,c
 11845  0120BE  50DF               	movf	indf2,w,c
 11846  0120C0  6E0F               	movwf	i2ringbuf_pop@ret,c
 11847                           
 11848                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 11849  0120C2  EE20 F002          	lfsr	2,2
 11850  0120C6  5009               	movf	i2ringbuf_pop@rb,w,c
 11851  0120C8  26D9               	addwf	fsr2l,f,c
 11852  0120CA  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11853  0120CC  22DA               	addwfc	fsr2h,f,c
 11854  0120CE  EE10 F006          	lfsr	1,6
 11855  0120D2  5009               	movf	i2ringbuf_pop@rb,w,c
 11856  0120D4  26E1               	addwf	fsr1l,f,c
 11857  0120D6  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11858  0120D8  22E2               	addwfc	fsr1h,f,c
 11859  0120DA  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 11860  0120DE  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 11861  0120E2  0E01               	movlw	1
 11862  0120E4  260D               	addwf	??i2_ringbuf_pop+2,f,c
 11863  0120E6  0E00               	movlw	0
 11864  0120E8  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 11865  0120EA  50DE               	movf	postinc2,w,c
 11866  0120EC  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 11867  0120EE  50DE               	movf	postinc2,w,c
 11868  0120F0  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 11869  0120F2  B0D8               	btfsc	status,0,c
 11870  0120F4  D00A               	goto	i2l3953
 11871                           
 11872                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 11873  0120F6  EE20 F006          	lfsr	2,6
 11874  0120FA  5009               	movf	i2ringbuf_pop@rb,w,c
 11875  0120FC  26D9               	addwf	fsr2l,f,c
 11876  0120FE  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11877  012100  22DA               	addwfc	fsr2h,f,c
 11878  012102  2ADE               	incf	postinc2,f,c
 11879  012104  0E00               	movlw	0
 11880  012106  22DD               	addwfc	postdec2,f,c
 11881                           
 11882                           ;My_header\My_ringbuf.h: 69: } else {
 11883  012108  D00A               	goto	i2l3955
 11884  01210A                     i2l3953:
 11885                           
 11886                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 11887  01210A  EE20 F006          	lfsr	2,6
 11888  01210E  5009               	movf	i2ringbuf_pop@rb,w,c
 11889  012110  26D9               	addwf	fsr2l,f,c
 11890  012112  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11891  012114  22DA               	addwfc	fsr2h,f,c
 11892  012116  0E00               	movlw	0
 11893  012118  6EDE               	movwf	postinc2,c
 11894  01211A  0E00               	movlw	0
 11895  01211C  6EDD               	movwf	postdec2,c
 11896  01211E                     i2l3955:
 11897                           
 11898                           ;My_header\My_ringbuf.h: 71: }
 11899                           ;My_header\My_ringbuf.h: 72: return ret;
 11900  01211E  500F               	movf	i2ringbuf_pop@ret,w,c
 11901                           
 11902                           ;My_header\My_ringbuf.h: 73: } else {
 11903  012120  0012               	return	
 11904  012122                     i2l3961:
 11905                           
 11906                           ;My_header\My_ringbuf.h: 74: return 0;
 11907  012122  0E00               	movlw	0
 11908  012124  0012               	return	
 11909  012126                     __end_ofi2_ringbuf_pop:
 11910                           	opt stack 0
 11911                           pclatu	equ	0xFFB
 11912                           pclath	equ	0xFFA
 11913                           tblptru	equ	0xFF8
 11914                           tblptrh	equ	0xFF7
 11915                           tblptrl	equ	0xFF6
 11916                           tablat	equ	0xFF5
 11917                           prodh	equ	0xFF4
 11918                           prodl	equ	0xFF3
 11919                           intcon	equ	0xFF2
 11920                           intcon2	equ	0xFF1
 11921                           postinc0	equ	0xFEE
 11922                           fsr0h	equ	0xFEA
 11923                           fsr0l	equ	0xFE9
 11924                           wreg	equ	0xFE8
 11925                           indf1	equ	0xFE7
 11926                           postinc1	equ	0xFE6
 11927                           postdec1	equ	0xFE5
 11928                           fsr1h	equ	0xFE2
 11929                           fsr1l	equ	0xFE1
 11930                           indf2	equ	0xFDF
 11931                           postinc2	equ	0xFDE
 11932                           postdec2	equ	0xFDD
 11933                           plusw2	equ	0xFDB
 11934                           fsr2h	equ	0xFDA
 11935                           fsr2l	equ	0xFD9
 11936                           status	equ	0xFD8
 11937                           
 11938 ;; *************** function i2_ringbuf_num *****************
 11939 ;; Defined at:
 11940 ;;		line 31 in file "../My_header\My_ringbuf.h"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 11943 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  2    0[COMRAM] unsigned int 
 11948 ;; Registers used:
 11949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11957 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11959 ;;Total ram usage:        8 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; This function calls:
 11962 ;;		Nothing
 11963 ;; This function is called by:
 11964 ;;		_UART_ISR
 11965 ;;		i2_ringbuf_put
 11966 ;;		i2_ringbuf_pop
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           	psect	text55
 11971  011D96                     __ptext55:
 11972                           	opt stack 0
 11973  011D96                     i2_ringbuf_num:
 11974                           	opt stack 18
 11975                           
 11976                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 11977                           
 11978                           ;incstack = 0
 11979  011D96  EE20 F006          	lfsr	2,6
 11980  011D9A  5001               	movf	i2ringbuf_num@rb,w,c
 11981  011D9C  26D9               	addwf	fsr2l,f,c
 11982  011D9E  5002               	movf	i2ringbuf_num@rb+1,w,c
 11983  011DA0  22DA               	addwfc	fsr2h,f,c
 11984  011DA2  EE10 F004          	lfsr	1,4
 11985  011DA6  5001               	movf	i2ringbuf_num@rb,w,c
 11986  011DA8  26E1               	addwf	fsr1l,f,c
 11987  011DAA  5002               	movf	i2ringbuf_num@rb+1,w,c
 11988  011DAC  22E2               	addwfc	fsr1h,f,c
 11989  011DAE  50DE               	movf	postinc2,w,c
 11990  011DB0  5CE6               	subwf	postinc1,w,c
 11991  011DB2  50DE               	movf	postinc2,w,c
 11992  011DB4  58E6               	subwfb	postinc1,w,c
 11993  011DB6  A0D8               	btfss	status,0,c
 11994  011DB8  D01F               	goto	i2l3629
 11995                           
 11996                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 11997  011DBA  EE20 F004          	lfsr	2,4
 11998  011DBE  5001               	movf	i2ringbuf_num@rb,w,c
 11999  011DC0  26D9               	addwf	fsr2l,f,c
 12000  011DC2  5002               	movf	i2ringbuf_num@rb+1,w,c
 12001  011DC4  22DA               	addwfc	fsr2h,f,c
 12002  011DC6  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12003  011DCA  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12004  011DCE  EE20 F006          	lfsr	2,6
 12005  011DD2  5001               	movf	i2ringbuf_num@rb,w,c
 12006  011DD4  26D9               	addwf	fsr2l,f,c
 12007  011DD6  5002               	movf	i2ringbuf_num@rb+1,w,c
 12008  011DD8  22DA               	addwfc	fsr2h,f,c
 12009  011DDA  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12010  011DDE  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12011  011DE2  1E05               	comf	??i2_ringbuf_num+2,f,c
 12012  011DE4  1E06               	comf	??i2_ringbuf_num+3,f,c
 12013  011DE6  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 12014  011DE8  2A06               	incf	??i2_ringbuf_num+3,f,c
 12015  011DEA  5003               	movf	??i2_ringbuf_num,w,c
 12016  011DEC  2405               	addwf	??i2_ringbuf_num+2,w,c
 12017  011DEE  6E01               	movwf	?i2_ringbuf_num,c
 12018  011DF0  5004               	movf	??i2_ringbuf_num+1,w,c
 12019  011DF2  2006               	addwfc	??i2_ringbuf_num+3,w,c
 12020  011DF4  6E02               	movwf	?i2_ringbuf_num+1,c
 12021                           
 12022                           ;My_header\My_ringbuf.h: 34: } else {
 12023  011DF6  0012               	return	
 12024  011DF8                     i2l3629:
 12025                           
 12026                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 12027  011DF8  EE20 F004          	lfsr	2,4
 12028  011DFC  5001               	movf	i2ringbuf_num@rb,w,c
 12029  011DFE  26D9               	addwf	fsr2l,f,c
 12030  011E00  5002               	movf	i2ringbuf_num@rb+1,w,c
 12031  011E02  22DA               	addwfc	fsr2h,f,c
 12032  011E04  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12033  011E08  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12034  011E0C  EE20 F002          	lfsr	2,2
 12035  011E10  5001               	movf	i2ringbuf_num@rb,w,c
 12036  011E12  26D9               	addwf	fsr2l,f,c
 12037  011E14  5002               	movf	i2ringbuf_num@rb+1,w,c
 12038  011E16  22DA               	addwfc	fsr2h,f,c
 12039  011E18  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12040  011E1C  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12041  011E20  EE20 F006          	lfsr	2,6
 12042  011E24  5001               	movf	i2ringbuf_num@rb,w,c
 12043  011E26  26D9               	addwf	fsr2l,f,c
 12044  011E28  5002               	movf	i2ringbuf_num@rb+1,w,c
 12045  011E2A  22DA               	addwfc	fsr2h,f,c
 12046  011E2C  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 12047  011E30  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 12048  011E34  1E07               	comf	??i2_ringbuf_num+4,f,c
 12049  011E36  1E08               	comf	??i2_ringbuf_num+5,f,c
 12050  011E38  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 12051  011E3A  2A08               	incf	??i2_ringbuf_num+5,f,c
 12052  011E3C  5005               	movf	??i2_ringbuf_num+2,w,c
 12053  011E3E  2607               	addwf	??i2_ringbuf_num+4,f,c
 12054  011E40  5006               	movf	??i2_ringbuf_num+3,w,c
 12055  011E42  2208               	addwfc	??i2_ringbuf_num+5,f,c
 12056  011E44  5003               	movf	??i2_ringbuf_num,w,c
 12057  011E46  2407               	addwf	??i2_ringbuf_num+4,w,c
 12058  011E48  6E01               	movwf	?i2_ringbuf_num,c
 12059  011E4A  5004               	movf	??i2_ringbuf_num+1,w,c
 12060  011E4C  2008               	addwfc	??i2_ringbuf_num+5,w,c
 12061  011E4E  6E02               	movwf	?i2_ringbuf_num+1,c
 12062  011E50  0012               	return	
 12063  011E52                     __end_ofi2_ringbuf_num:
 12064                           	opt stack 0
 12065                           pclatu	equ	0xFFB
 12066                           pclath	equ	0xFFA
 12067                           tblptru	equ	0xFF8
 12068                           tblptrh	equ	0xFF7
 12069                           tblptrl	equ	0xFF6
 12070                           tablat	equ	0xFF5
 12071                           prodh	equ	0xFF4
 12072                           prodl	equ	0xFF3
 12073                           intcon	equ	0xFF2
 12074                           intcon2	equ	0xFF1
 12075                           postinc0	equ	0xFEE
 12076                           fsr0h	equ	0xFEA
 12077                           fsr0l	equ	0xFE9
 12078                           wreg	equ	0xFE8
 12079                           indf1	equ	0xFE7
 12080                           postinc1	equ	0xFE6
 12081                           postdec1	equ	0xFE5
 12082                           fsr1h	equ	0xFE2
 12083                           fsr1l	equ	0xFE1
 12084                           indf2	equ	0xFDF
 12085                           postinc2	equ	0xFDE
 12086                           postdec2	equ	0xFDD
 12087                           plusw2	equ	0xFDB
 12088                           fsr2h	equ	0xFDA
 12089                           fsr2l	equ	0xFD9
 12090                           status	equ	0xFD8
 12091                           pclatu	equ	0xFFB
 12092                           pclath	equ	0xFFA
 12093                           tblptru	equ	0xFF8
 12094                           tblptrh	equ	0xFF7
 12095                           tblptrl	equ	0xFF6
 12096                           tablat	equ	0xFF5
 12097                           prodh	equ	0xFF4
 12098                           prodl	equ	0xFF3
 12099                           intcon	equ	0xFF2
 12100                           intcon2	equ	0xFF1
 12101                           postinc0	equ	0xFEE
 12102                           fsr0h	equ	0xFEA
 12103                           fsr0l	equ	0xFE9
 12104                           wreg	equ	0xFE8
 12105                           indf1	equ	0xFE7
 12106                           postinc1	equ	0xFE6
 12107                           postdec1	equ	0xFE5
 12108                           fsr1h	equ	0xFE2
 12109                           fsr1l	equ	0xFE1
 12110                           indf2	equ	0xFDF
 12111                           postinc2	equ	0xFDE
 12112                           postdec2	equ	0xFDD
 12113                           plusw2	equ	0xFDB
 12114                           fsr2h	equ	0xFDA
 12115                           fsr2l	equ	0xFD9
 12116                           status	equ	0xFD8
 12117                           
 12118                           	psect	rparam
 12119  0000                     pclatu	equ	0xFFB
 12120                           pclath	equ	0xFFA
 12121                           tblptru	equ	0xFF8
 12122                           tblptrh	equ	0xFF7
 12123                           tblptrl	equ	0xFF6
 12124                           tablat	equ	0xFF5
 12125                           prodh	equ	0xFF4
 12126                           prodl	equ	0xFF3
 12127                           intcon	equ	0xFF2
 12128                           intcon2	equ	0xFF1
 12129                           postinc0	equ	0xFEE
 12130                           fsr0h	equ	0xFEA
 12131                           fsr0l	equ	0xFE9
 12132                           wreg	equ	0xFE8
 12133                           indf1	equ	0xFE7
 12134                           postinc1	equ	0xFE6
 12135                           postdec1	equ	0xFE5
 12136                           fsr1h	equ	0xFE2
 12137                           fsr1l	equ	0xFE1
 12138                           indf2	equ	0xFDF
 12139                           postinc2	equ	0xFDE
 12140                           postdec2	equ	0xFDD
 12141                           plusw2	equ	0xFDB
 12142                           fsr2h	equ	0xFDA
 12143                           fsr2l	equ	0xFD9
 12144                           status	equ	0xFD8
 12145                           
 12146                           	psect	temp
 12147  000041                     btemp:
 12148                           	opt stack 0
 12149  000041                     	ds	1
 12150  0000                     int$flags	set	btemp
 12151                           pclatu	equ	0xFFB
 12152                           pclath	equ	0xFFA
 12153                           tblptru	equ	0xFF8
 12154                           tblptrh	equ	0xFF7
 12155                           tblptrl	equ	0xFF6
 12156                           tablat	equ	0xFF5
 12157                           prodh	equ	0xFF4
 12158                           prodl	equ	0xFF3
 12159                           intcon	equ	0xFF2
 12160                           intcon2	equ	0xFF1
 12161                           postinc0	equ	0xFEE
 12162                           fsr0h	equ	0xFEA
 12163                           fsr0l	equ	0xFE9
 12164                           wreg	equ	0xFE8
 12165                           indf1	equ	0xFE7
 12166                           postinc1	equ	0xFE6
 12167                           postdec1	equ	0xFE5
 12168                           fsr1h	equ	0xFE2
 12169                           fsr1l	equ	0xFE1
 12170                           indf2	equ	0xFDF
 12171                           postinc2	equ	0xFDE
 12172                           postdec2	equ	0xFDD
 12173                           plusw2	equ	0xFDB
 12174                           fsr2h	equ	0xFDA
 12175                           fsr2l	equ	0xFD9
 12176                           status	equ	0xFD8


Data Sizes:
    Strings     497
    Constant    38
    Data        1
    BSS         1399
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      64
    BANK0           160     96     159
    BANK1           256    131     191
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK1[20]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_41(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_4(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK0[20]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK0[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    F8846.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[6]), STR_39(CODE[2]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_27(CODE[5]), STR_26(CODE[4]), STR_25(CODE[9]), 
		 -> STR_23(CODE[2]), STR_22(CODE[5]), STR_21(CODE[7]), STR_20(CODE[2]), 
		 -> STR_19(CODE[7]), STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[2]), 
		 -> STR_15(CODE[4]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[2]), 
		 -> STR_11(CODE[5]), STR_10(CODE[2]), STR_9(CODE[12]), STR_8(CODE[3]), 
		 -> STR_7(CODE[2]), STR_6(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), my_terminal_loop@op0(BANK0[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(COMRAM[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_24(CODE[315]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[8]), print_time@str(BANK0[30]), STR_3(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _ringbuf_put_num->___lwmod
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_PWM_set
    _command_operation->_tx_sends
    _tx_sends->_ringbuf_put
    _command_time->_month_length
    _my_atoi->___wmul
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_caltime->_caltime_to_RTCC
    _main_init->_ringbuf_init
    _light_loop->_PWM_set
    _PWM_set->___wmul
    ___lwdiv->___wmul
    _caltime_to_epoch->_month_length
    _RTCC_to_caltime->_x_to_d
    _RTCC_from_epoch->_caltime_to_RTCC
    _epoch_to_caltime->_month_length
    _month_length->___awmod
    ___lmul->_month_length
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_my_terminal_loop
    _ringbuf_put_num->___lwmod
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_time
    _tx_sends->_ringbuf_put
    _command_time->_command_at_hand
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_caltime->_epoch_to_caltime
    _light_loop->_RTCC_from_RTCC
    _PWM_set->___lwdiv
    ___lwdiv->_my_atoi
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop
    _my_terminal_loop->_command_operation
    _command_operation->_command_time

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  173700
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                         _light_loop
                          _main_init
                   _my_terminal_loop
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  129805
                                             94 BANK0      2     2      0
                                             22 BANK1    109   105      4
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7887
                                             19 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1854
                                             32 COMRAM     3     1      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     133
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1273
                                             32 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   26    16     10  106861
                                              8 BANK1     14     4     10
                            _PWM_set
                            ___lwdiv
                             ___wmul
                       _command_time
                            _my_atoi
                          _my_strcmp
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_sends                                             2     0      2    3888
                                             35 COMRAM     2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8   78242
                                             93 BANK0      1     1      0
                                              0 BANK1      8     0      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    7326
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    3550
                                              0 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   43451
                                             86 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time                                          32    30      2   20387
                                             54 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             39    21     18    7938
                                             19 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1064
                                             36 COMRAM     1     1      0
                                             15 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4    5063
                                             10 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    3719
                                             32 COMRAM     3     0      3
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_num                                          8     6      2    1014
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   14633
                                             54 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1198
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     933
                                             30 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_loop                                          11    11      0   17944
                                             36 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     648
                                             30 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    6600
                                             36 COMRAM     1     1      0
                                             15 BANK0      4     2      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2312
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    2529
                                              8 BANK0      7     3      4
                             ___wmul (ARG)
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_RTCC                                       4     0      4    7025
                                             32 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (6) _caltime_to_epoch                                    15    11      4    5298
                                             17 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (7) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9689
                                             54 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    16    12      4    7832
                                             38 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _month_length                                         6     5      1    2179
                                             36 COMRAM     1     0      1
                                              0 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     849
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4262
                                             30 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2168
                                              5 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8    1073
                                             17 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1140
                                             35 COMRAM     2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     715
                                             34 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0    2520
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _light_loop
     _PWM_set
       ___lwdiv
         ___wmul (ARG)
         _my_atoi (ARG)
           ___wmul
       ___wmul
       _my_atoi (ARG)
         ___wmul
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
       ___lmul (ARG)
         _month_length (ARG)
           ___awmod
     ___llmod
     ___lmul
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _PWM_set
         ___lwdiv
           ___wmul (ARG)
           _my_atoi (ARG)
             ___wmul
         ___wmul
         _my_atoi (ARG)
           ___wmul
       ___lwdiv
         ___wmul (ARG)
         _my_atoi (ARG)
           ___wmul
       ___wmul
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                   ___lmul (ARG)
                     _month_length (ARG)
                       ___awmod
                 ___lmul
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
                 _my_atoi (ARG)
                   ___wmul
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                   _my_atoi (ARG)
                     ___wmul
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num
         _month_length
           ___awmod
         _my_atoi
           ___wmul
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
               _my_atoi (ARG)
                 ___wmul
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
                 _my_atoi (ARG)
                   ___wmul
             ___wmul
             _isdigit
       _my_atoi
         ___wmul
       _my_strcmp
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
         _my_atoi (ARG)
           ___wmul
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
           _my_atoi (ARG)
             ___wmul
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
   _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     83      BF       8       74.6%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      40       1       68.1%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     298       6        0.0%
DATA                 0      0     680       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 15:02:44 2015

                  ?_command_time 0100                  _ringbuf_put_num 2662  
                _ringbuf_put_str 28AE                    my_strcmp@str1 001F  
                  my_strcmp@str2 0021                               _d1 0026  
                   ___awdiv@sign 0061                               _ms 00C0  
            ___wmul@multiplicand 0021                ??_RTCC_from_epoch 0026  
                   __CFG_CP0$OFF 000000                              l141 2B76  
                            l146 2ACE                              l352 1C16  
                            l184 2664                              l346 2126  
                            l365 164A                              l453 2A64  
                            l643 14BC                              l590 1F24  
                            l648 1512                              _PR2 000FCB  
                            _ISR 0008                    ?_get_quot_rem 007E  
             caltime_to_epoch@ep 0073               caltime_to_epoch@ct 0071  
              _RTCC_from_caltime 2B2E                     ___awmod@sign 0024  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD               ?_RTCC_from_caltime 0096  
                           ?_ISR 0001              command_operation@tx 0108  
               ?_command_at_hand 00B6                             l1105 254C  
                           l1148 2750                             l1158 29C2  
                           l1095 1D84                             l5001 03BC  
                           l5011 044A                             l5101 0C82  
                           l5007 041E                             l5009 042A  
                           l5041 2438                             l5121 0DD4  
                           l5113 0D30                             l5105 0CB6  
                           l5201 1F08                             l5035 2250  
                           l5027 21DC                             l5115 0D68  
                           l5211 259A                             l5133 17F0  
                           l5037 2256                             l5053 24A8  
                           l5125 0E08                             l5109 0CFC  
                           l5143 1844                             l5047 247C  
                           l5119 0D9C                             l5231 0510  
                           l5161 18B6                             l5153 18A0  
                           l5129 17E0                             l5313 253C  
                           l5305 24E4                             l3641 2B8A  
                           l5049 2484                             l5073 2AF2  
                           l5241 057E                             l5217 048C  
                           l4603 2286                             l5139 1834  
                           l5147 187E                             l5307 24F2  
                           l5083 0B6A                             l5235 0544  
                           l5219 0498                             l4541 280A  
                           l4533 27F0                             l4701 0EC6  
                           l5157 18AA                             l5149 1896  
                           l5309 24F8                             l3653 2AD0  
                           l5069 2894                             l5093 0BDE  
                           l5085 0B76                             l5077 2B14  
                           l5253 060C                             l5245 05B2  
                           l5237 054A                             l5173 2674  
                           l4615 22B2                             l4631 22EC  
                           l4711 0F4E                             l4703 0ECA  
                           l5167 18C2                             l5095 0C16  
                           l5183 26D4                             l5511 0A96  
                           l5503 0A46                             l4617 22BC  
                           l4609 2298                             l4553 2836  
                           l4545 281E                             l4537 27FE  
                           l4529 27E4                             l5089 0BAA  
                           l5281 075C                             l5265 069A  
                           l5257 0640                             l5193 1EF0  
                           l5177 2696                             l5505 0A68  
                           l4635 2300                             l4627 22E0  
                           l4619 22C0                             l4539 2806  
                           l4707 0EEA                             l3771 2BAA  
                           l5099 0C4A                             l5195 1F04  
                           l5515 0AB2                             l4645 1D08  
                           l4549 2828                             l4581 1B02  
                           l4565 194A                             l5277 0728  
                           l5269 06CE                             l5509 0A8E  
                           l4647 1D18                             l4591 2792  
                           l4743 2700                             l5543 141A  
                           l4727 2CAA                             l4903 0130  
                           l5519 0AE6                             l5471 08D8  
                           l5527 0B18                             l5463 0844  
                           l4657 1D72                             l4649 1D1E  
                           l4745 270C                             l5553 14A6  
                           l4921 01CC                             l4913 0196  
                           l4905 013C                             l5289 07B6  
                           l5481 092A                             l5473 08DC  
                           l4587 276C                             l4851 16C8  
                           l4691 0E62                             l4755 2742  
                           l4747 2712                             l5571 14F2  
                           l4771 29B6                             l4763 2982  
                           l4915 01A2                             l4907 0142  
                           l4931 020A                             l5467 086A  
                           l4845 16BC                             l5565 14DE  
                           l5549 149C                             l4669 1C00  
                           l4781 28E6                             l4765 298C  
                           l4933 0240                             l5709 23F8  
                           l4847 16C0                             l4695 0E6C  
                           l5575 14FC                             l5567 14E2  
                           l4767 2992                             l4943 0270  
                           l4927 01F2                             l4919 01B4  
                           l5495 09C2                             l5487 0974  
                           l5479 0926               __CFG_WPFP$PAGE_127 000000  
                           l4689 0E5C                             l5593 1550  
                           l4777 28B0                             l4945 0276  
                           l4881 0048                             l5497 09C6  
                           l5489 0978                             l5587 1534  
                           l4963 02D4                             l4875 002C  
                           l5589 1538                             l4957 02B2  
                           l4877 003E                             l4869 000E  
                           l4967 030C                             l4895 00FE  
                           l4887 0080                             l4993 0396  
                           l4977 033C                             l4985 0364  
                           l4969 0316                             l4987 0370  
                           l4999 03B6                             STR_1 FFCA  
                           STR_2 FFCA                             STR_3 FFE6  
                           STR_4 FF48                             STR_5 FF8D  
                           STR_6 FF79                             STR_7 FFEA  
                           STR_8 FFE9                             STR_9 FF6D  
           command_at_hand@value 00BC                             u5210 28DA  
                           u5220 2908                             u3445 2CDC  
                           u3446 2CDE                             u5217 28D0  
                           u5227 28FE                             u6410 13CE  
                           u4910 1AF4                             u4920 1AF6  
                           u4930 1B4A                             u4940 1B4C  
                           u4908 1AE2                             u4870 1AB4  
                           u4880 1AB6                             u4890 1ADE  
            ??_RTCC_from_caltime 0026                             _main 23A2  
       button_timer_interrupt@bt 0001                             _sw_B 0035  
                           _sw_G 0039                             _sw_R 003D  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0041           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                  __end_of_PWM_set 18DE  
                           start 00E2                 __end_of_ADC_init 2CEC  
                  __CFG_IESO$OFF 000000                     ___param_bank 000010  
                 ??_command_time 0026            __end_ofi2_ringbuf_pop 2126  
          __end_ofi2_ringbuf_num 1E52            __end_ofi2_ringbuf_put 207A  
                  ADC_init@p_ref 001F                            ??_ISR 0011  
                   print_time@tx 0096             command_operation@op0 010A  
           command_operation@op1 010C             command_operation@op2 010E  
           command_operation@op3 0110                ??_RTCC_to_caltime 0023  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
      __end_of_RTCC_from_caltime 2B64                            ?_main 0001  
                 ??_get_quot_rem 0026                  __end_of___awdiv 230A  
                          _ADRES 000FC3                            STR_10 FFE4  
                          STR_11 FFC0                            STR_12 FFD4  
                          STR_20 FFFA                            STR_13 FFAA  
                          STR_21 FF9C                            STR_14 FFA1  
                          STR_30 FFDA                            STR_22 FFBB  
                          STR_23 FFEC                            STR_15 FFE2  
                          STR_31 FFD2                            STR_16 FFAE  
                          STR_32 FFB4                            STR_40 FFB0  
                          STR_24 FE0D                            STR_33 FFF2  
                          STR_17 FFC5                            STR_41 FF95  
                          STR_25 FF84                            STR_18 FFDC  
                          STR_34 FFF8                            STR_26 FFDE  
                          STR_35 FFF0                            STR_27 FFB6  
                          STR_19 FFA3                            STR_36 FFF6  
                          STR_28 FFD6                  __end_of___awmod 2840  
                          STR_37 FFEE                            STR_29 FFCE  
                          STR_38 FFFC                            STR_39 FFF4  
                __end_of___lldiv 1D96                  ___awdiv@divisor 0021  
                __end_of___llmod 255E                            _LATB2 007C52  
                __end_of___lwdiv 275A                  __end_of___lwmod 29CC  
                          i2l221 2A46                            i2l222 2A44  
                          i2l290 117C                            i2l291 119C  
                          i2l292 11BC                            i2l293 11DC  
                          i2l286 10F4                            i2l287 1118  
                          i2l288 113A                            i2l289 115C  
                          i2l587 00A6                  ___awdiv@counter 0060  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 0069  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2A64  
           caltime_to_epoch@year 0079               __size_of_UART_init 0020  
                __end_of_dpowers FDF1                            _colon 00C7  
               __end_of_OSC_init 2D12                  __end_of_isdigit 2CB2  
             __size_of_RTCC_init 002E               __size_of_RTCC_loop 0048  
               ringbuf_delete@rb 001F                  __end_of_my_atoi 226E  
                          tablat 000FF5                            plusw2 000FDB  
               __end_of_PWM_init 1FC4       __size_of_ringbuf_backspace 0082  
                          status 000FD8                  __end_of_sprintf 0458  
              ?_my_terminal_loop 0116                month_length@month 0025  
        __end_of_ringbuf_put_num 26E2          __end_of_ringbuf_put_str 2910  
             ??_my_terminal_loop 00BE                  __initialization 2910  
                   __end_of_main 2436              ringbuf_init@bufsize 0023  
               RTCC_from_RTCC@ep 0082                 RTCC_from_RTCC@ct 0080  
            my_terminal_loop@op0 00CD              my_terminal_loop@op1 0183  
            my_terminal_loop@op2 0197              my_terminal_loop@op3 01AB  
            my_terminal_loop@buf 011A                    print_time@str 0098  
                         ??_main 0026                    __activetblptr 000003  
         my_terminal_loop@i_2284 0180                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 001F  
                      ??_PWM_set 0071                           i2l4021 1290  
                         i2l4013 1248                           i2l4005 1200  
                         i2l4033 1302                           i2l4025 12B6  
                         i2l4017 126C                           i2l4009 1224  
                         i2l4029 12DC                           i2l4037 1326  
                 __CFG_WDTEN$OFF 000000                           i2l3629 1DF8  
                         i2l3943 2064                           i2l3953 210A  
                         i2l3961 2122                           i2l4489 0054  
                         i2l3955 211E                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 0088               epoch_to_caltime@ct 0086  
              _command_time$3238 00BD                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0086                 ringbuf_put_num@i 0078  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 007B                     ?_ringbuf_pop 0021  
                   ?_ringbuf_num 001F                     ?_ringbuf_put 0021  
          caltime_to_epoch@month 007F                           ___lmul 275A  
                _caltime_to_RTCC 1C16                      light_loop@i 008E  
                    light_loop@n 00FD                           ___wmul 2BE8  
             ??_epoch_to_caltime 008A                __end_of_UART_init 2C94  
                      ??___awdiv 0023                        ??___awmod 0023  
                         _d_to_x 2CB2                        ??___lldiv 0026  
           ringbuf_put_num@value 0075                     ?_timer0_init 0001  
                      ??___llmod 001F                __end_of_RTCC_init 2BC2  
                   ?_timer1_init 001F                        ??___lwdiv 0025  
              __end_of_RTCC_loop 2AAC                        ??___lwmod 0025  
                   ?_timer3_init 0001                           clear_0 2918  
                         clear_1 292A                           clear_2 2936  
                         clear_3 2942                           clear_4 294E  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 0062  
                ___awmod@divisor 0021                  ___awmod@counter 0023  
                         _x_to_d 2CEC                           _rx_buf 00E1  
     __size_of_RTCC_from_caltime 0036                _command_operation 0458  
                         _tx_buf 002D        __size_of_caltime_to_epoch 0288  
                      ??_isdigit 001F               ?_command_operation 0108  
                   __mediumconst FDE6                           tblptrh 000FF7  
                         tblptrl 000FF6                        ??_my_atoi 0062  
                         tblptru 000FF8                        ?_ADC_init 0001  
                      ??_sprintf 0085             __end_of_command_time 0E42  
               __end_of_tx_sends 2B2E              ??_command_operation 0026  
   my_terminal_loop@command_init 00CC             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 2966  
           __end_of_get_quot_rem 1A8A                    ___rparam_used 000001  
                _RTCC_from_epoch 2C52               command_at_hand@max 00BB  
             command_at_hand@min 00BA                 ?_ringbuf_put_num 0073  
               ?_ringbuf_put_str 006A             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2D12  
                      ?_UART_ISR 0001                  light_loop@_2506 00FC  
      __end_of_command_operation 0818                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                        ?_PWM_init 0001  
                light_loop@value 0088          __size_of_ringbuf_delete 0022  
                     ??_ADC_init 001F       caltime_to_epoch@month_2079 007A  
                   sprintf@width 0094               __size_of_main_init 0082  
                     __pbssBANK0 00C0                       __pbssBANK1 0183  
                     __pbssBANK2 0200          __end_of_caltime_to_RTCC 1CDA  
                _RTCC_to_caltime 2126            __end_of_weekday_3char FE0D  
                        ?___lmul 0065                       ??_UART_ISR 0010  
                        ?___wmul 001F                          ?_d_to_x 0001  
                 command_time@tx 0100                       ??_OSC_init 001F  
                 ___lmul@product 006D                          ?_x_to_d 0001  
                     ??_PWM_init 001F               __CFG_OSC$INTOSCPLL 000000  
             __size_of_my_strcmp 0094          my_terminal_loop@command 00E9  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        __end_of_RTCC_from_epoch 2C74             timer1_init@prescaler 0021  
                        _PWM_set 1750                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0025                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                     PWM_set@value 006F  
                  ?_month_length 0025              epoch_to_caltime@day 008E  
              RTCC_from_epoch@ep 0098                RTCC_from_epoch@ct 0096  
            epoch_to_caltime@num 0092         __size_of_command_at_hand 006E  
                        __Hparam 0000                          __Lparam 0000  
              ringbuf_put_num@rb 0073                ringbuf_put_str@rb 006A  
                  ?_ringbuf_init 001F                          ___awdiv 226E  
                __size_of___lmul 0076                          ___awmod 27D0  
                        ___lldiv 1CDA                  __size_of___wmul 0026  
                        ___llmod 24CA            ringbuf_put_num@digits 0077  
                     _light_mode 00C9                          ___lwdiv 26E2  
                     _light_loop 134C                          ___lwmod 2970  
                __size_of_d_to_x 001E       __size_of_command_operation 03C0  
           __size_of_ringbuf_pop 00BA             __size_of_ringbuf_num 00D8  
           __size_of_ringbuf_put 00C4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 2662      epoch_to_caltime@month_cache 00FE  
                        __pcinit 2910                        ?_tx_sends 0024  
                        __ramtop 0F00        __size_of_my_terminal_loop 031E  
           __size_of_timer0_init 0030                          _halfsec 00C8  
           __size_of_timer1_init 0044                          __ptext0 23A2  
                        __ptext1 0818                          __ptext2 2662  
                        __ptext3 1E52                          __ptext4 2C0E  
                        __ptext5 255E                          __ptext6 0458  
                        __ptext7 2AF0                          __ptext8 0B36  
                        __ptext9 2436             __size_of_timer3_init 0026  
                __size_of_x_to_d 0018                        _T0CONbits 000FD5  
               _time_change_flag 00CA                 _caltime_to_epoch 0E42  
                   __size_of_ISR 00DA                        _T1CONbits 000FCD  
                        _dpowers FDE7          __size_of_RTCC_from_RTCC 0022  
           light_loop@value_2507 0089                        _T2CONbits 000FCA  
          __size_of_command_time 030C                          _isdigit 2C94  
                      _T3CONbits 000F79                 ___awmod@dividend 001F  
                      _T5CONbits 000F22                          _my_atoi 21D0  
                        _sprintf 0000          __end_of_RTCC_to_caltime 21D0  
          __size_of_get_quot_rem 00D4             end_of_initialization 2966  
         __size_ofi2_ringbuf_pop 00AC           __size_ofi2_ringbuf_num 00BC  
         __size_ofi2_ringbuf_put 00B6                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                   ??_month_length 0060  
               ?_caltime_to_RTCC 0024                  ___lldiv@divisor 0075  
           timer3_init@prescaler 0020                __end_of_my_strcmp 24CA  
                ___lldiv@counter 007D                   ??_ringbuf_init 0025  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                     _command_time 0B36  
                     ??_tx_sends 0026                        _PORTAbits 000F80  
                      _UART_init 2C74                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 2B94                        _RTCC_loop 2A64  
      epoch_to_caltime@day_cache 00C4           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 19B6                       _print_time 230A  
                 _ringbuf_delete 2C0E        __size_of_epoch_to_caltime 01EC  
               __CFG_CPUDIV$OSC1 000000              RTCC_from_caltime@ep 0098  
            RTCC_from_caltime@ct 0096                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 0096  __size_of_button_timer_interrupt 0282  
        timer1_init@clock_select 001F              command_at_hand@hand 00B8  
                    _CCP1CONbits 000FBA                      _CCP2CONbits 000FB4  
               __CFG_IOL1WAY$OFF 000000                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 001F                   ringbuf_pop@ret 0023  
                  i2_ringbuf_pop 207A                    i2_ringbuf_num 1D96  
                    ?_light_loop 0001                    i2_ringbuf_put 1FC4  
                 __end_of___lmul 27D0                ??_command_at_hand 0026  
                 __end_of___wmul 2C0E                   __end_of_d_to_x 2CD0  
              __size_of_UART_ISR 004A           __end_of_ringbuf_delete 2C30  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
              __size_of_OSC_init 000E                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000                   __end_of_x_to_d 2D04  
          epoch_to_caltime@month 0091              start_initialization 2910  
               month_length@year 0064                      __end_of_ISR 00E2  
              __size_of_PWM_init 00B8                    UART_ISR@ascii 0010  
             my_terminal_loop@rx 0118               my_terminal_loop@tx 0116  
               ?_RTCC_to_caltime 0021                  ___llmod@divisor 0064  
          my_terminal_loop@ascii 0181                  ___llmod@counter 001F  
            ringbuf_put_num@temp 0079                         ??___lmul 0026  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                         ??___wmul 0023  
                       ??_d_to_x 0023                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00FE         __size_of_ringbuf_put_num 0080  
       __size_of_ringbuf_put_str 0062           _button_timer_interrupt 10CA  
               _my_terminal_loop 0818                         ??_x_to_d 001F  
                ?_ringbuf_delete 001F             __end_of_month_length 1B52  
                 _RTCC_from_RTCC 2C30                      ?_print_time 0096  
                    __pbssBIGRAM 02FA                      __pbssCOMRAM 0026  
              command_at_hand@tx 00B6              RTCC_to_caltime@dumy 0023  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
                    _caltime_now 00F1                     _isdigit$2792 0020  
           __end_of_ringbuf_init 2A1A                         ?_PWM_set 006F  
                 light_loop@temp 008A              __size_of_light_loop 0218  
                    sprintf@flag 0092                      sprintf@prec 0089  
       __end_of_caltime_to_epoch 10CA                  millis_timer@cnt 0029  
               ___lwdiv@dividend 0068                        _edit_flag 002C  
                      __pintcode 0008                    __pmediumconst FDE6  
                       ?___awdiv 001F                         ?___awmod 001F  
                       ?___lldiv 0071                         ?___llmod 0060  
                       ?___lwdiv 0068                         ?___lwmod 006F  
         __end_of_RTCC_from_RTCC 2C52                      ??_UART_init 001F  
                    ??_RTCC_init 001F                      ??_RTCC_loop 0026  
                command_time@op0 0102                  command_time@op1 0104  
                command_time@op2 0106                __size_of_tx_sends 003E  
                      _epoch_now 00F8                        _main_init 25E0  
                       ?_isdigit 0001                 _epoch_to_caltime 1564  
           __CFG_RTCOSC$T1OSCREF 000000                         _ADC_flag 002B  
                       ?_my_atoi 0060                         _ADC_init 2CD0  
                    _PADCFG1bits 000F3C              ringbuf_backspace@rb 0021  
          _my_terminal_loop$3237 017E                 ___lwdiv@quotient 006D  
                       ?_sprintf 0073                       my_atoi@ret 0066  
                     my_atoi@str 0060                        d_to_x@dec 0023  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0021  
                 ___wmul@product 0023                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91              __size_of_print_time 0098  
                       i2u400_40 1318                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                  ??i2_ringbuf_put 000C  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       i2u471_40 006A                         i2u472_40 006C  
                       i2u473_40 0082                         _PIR5bits 000F98  
                       i2u474_40 0084       epoch_to_caltime@year_cache 00CB  
                       i2u475_40 009A                         i2u476_40 009C  
                       i2u397_40 12A6                         i2u398_40 12CC  
                       i2u399_40 12F2                    ??_ringbuf_pop 0066  
                  ??_ringbuf_num 0060                    ??_ringbuf_put 0066  
                       _UART_ISR 2A1A                    ??_timer0_init 001F  
                  ??_timer1_init 0020                    ??_timer3_init 001F  
                      _my_strcmp 2436                         _OSC_init 2D04  
                ?_RTCC_from_RTCC 0080                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 001F  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 1F0C  
 button_timer_interrupt@sw_value 0003                       ?_main_init 0001  
              ??_ringbuf_put_num 0026                ??_ringbuf_put_str 0024  
                  ringbuf_pop@rb 0021                    ringbuf_num@rb 001F  
                  ringbuf_put@rb 0021                ___lmul@multiplier 0065  
                    _INTCON2bits 000FF1             epoch_to_caltime@year 0090  
               __size_of_PWM_set 018E                my_terminal_loop@i 0182  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                _command_at_hand 2840                       _CCPR3Lbits 000F16  
                     _CCPR4Lbits 000F13                         __Hrparam 0000  
                       __Lrparam 0000                    _weekday_3char FDF1  
          __size_of_month_length 00C8                     ??_light_loop 0084  
                     ?_my_strcmp 001F               ringbuf_put_str@str 006C  
       __size_of_caltime_to_RTCC 00C4                 __size_of___awdiv 009C  
               __size_of___awmod 0070                 __size_of___lldiv 00BC  
               __size_of___llmod 0094                 __size_of___lwdiv 0078  
               __size_of___lwmod 005C                tx_sends@asciicode 0024  
            __end_of_ringbuf_pop 1F0C              __end_of_ringbuf_num 19B6  
            __end_of_ringbuf_put 1C16              __end_of_timer0_init 2B94  
          __size_of_ringbuf_init 004E              __end_of_timer1_init 2AF0  
                     sprintf@len 0090              __end_of_timer3_init 2BE8  
                     sprintf@val 008E                 __size_of_isdigit 001E  
                ___lwdiv@divisor 006A                  ___lwdiv@counter 006C  
           timer0_init@prescaler 0020                         __ptext10 21D0  
                       __ptext11 2840                         __ptext20 25E0  
                       __ptext12 230A                         __ptext21 2BC2  
                       __ptext13 0000                         __ptext30 134C  
                       __ptext22 2AAC                         __ptext14 2C94  
                       __ptext31 24CA                         __ptext23 2B64  
                       __ptext15 2970                         __ptext40 2C52  
                       __ptext32 1750                         __ptext24 29CC  
                       __ptext16 28AE                         __ptext41 1564  
                       __ptext33 2BE8                         __ptext25 2C74  
                       __ptext17 1B52                         __ptext42 1A8A  
                       __ptext34 26E2                         __ptext26 2B94  
                       __ptext18 18DE                         __ptext51 10CA  
                       __ptext43 27D0                         __ptext35 2A64  
                       __ptext27 1F0C                         __ptext19 2B2E  
                       __ptext52 2A1A                         __ptext44 19B6  
                       __ptext36 2C30                         __ptext28 2D04  
                       __ptext53 1FC4                         __ptext45 275A  
                       __ptext37 0E42                         __ptext29 2CD0  
                       __ptext54 207A                         __ptext46 1CDA  
                       __ptext38 2126                         __ptext55 1D96  
                       __ptext47 1C16                         __ptext39 2CEC  
                       __ptext48 2CB2                         __ptext49 226E  
               __size_of_my_atoi 009E                       PWM_init@PR 001F  
               __size_of_sprintf 0458            RTCC_loop@prev_halfsec 00C6  
       __end_of_my_terminal_loop 0B36               __end_of_light_loop 1564  
                  __size_of_main 0094                     _month_length 1A8A  
       __size_of_RTCC_from_epoch 0022                 ??_ringbuf_delete 0021  
        ?_button_timer_interrupt 0001                         int$flags 0041  
                   _ringbuf_init 29CC                        x_to_d@hex 0020  
                       _tx_sends 2AF0                     ??_print_time 0026  
                 main_init@rxbuf 0200                   main_init@txbuf 02FA  
                    ??_main_init 0025                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 0023  
                       isdigit@c 0021          __end_of_command_at_hand 28AE  
               get_quot_rem@quot 007E                RTCC_to_caltime@ct 0021  
                       intlevel2 0000                        sprintf@ap 008A  
                      sprintf@cp 008C                        sprintf@sp 0073  
               ___lwmod@dividend 006F                 ___lldiv@dividend 0071  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0071  
              _ringbuf_backspace 255E         __end_of_epoch_to_caltime 1750  
       __size_of_RTCC_to_caltime 00AA                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 134C               __end_of_print_time 23A2  
             ??_caltime_to_epoch 0075               ?_ringbuf_backspace 0021  
                    _ringbuf_pop 1E52                      _ringbuf_num 18DE  
                    _ringbuf_put 1B52                      ??_my_strcmp 0023  
                    _timer0_init 2B64                      _timer1_init 2AAC  
                    _timer3_init 2BC2              ??_ringbuf_backspace 0066  
                get_quot_rem@div 0080                  get_quot_rem@num 0082  
                     _RTCCFGbits 000F3F                         sprintf@c 0093  
                       sprintf@f 0075                       _PPSCONbits 000EBF  
               ___lldiv@quotient 0079                caltime_to_RTCC@ct 0024  
                ___lwmod@divisor 0071                ??_caltime_to_RTCC 0026  
                ___lwmod@counter 0025  epoch_to_caltime@day_since_epoch 008C  
      __end_of_ringbuf_backspace 25E0           _command_operation$3240 0114  
         _command_operation$3239 0112                 ??_RTCC_from_RTCC 0026  
