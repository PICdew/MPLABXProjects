

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jan 09 10:08:33 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext1,local,class=CONST,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0008                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000D                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  008C                     	;# 
    69  008D                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0094                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  010C                     	;# 
    86  010D                     	;# 
    87  0111                     	;# 
    88  0112                     	;# 
    89  0113                     	;# 
    90  0114                     	;# 
    91  0115                     	;# 
    92  0116                     	;# 
    93  0117                     	;# 
    94  0118                     	;# 
    95  0119                     	;# 
    96  011A                     	;# 
    97  011B                     	;# 
    98  011D                     	;# 
    99  011E                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0199                     	;# 
   112  019A                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  0219                     	;# 
   140  021A                     	;# 
   141  021B                     	;# 
   142  021C                     	;# 
   143  021D                     	;# 
   144  021E                     	;# 
   145  021F                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0295                     	;# 
   152  0295                     	;# 
   153  0296                     	;# 
   154  0298                     	;# 
   155  0298                     	;# 
   156  0299                     	;# 
   157  029A                     	;# 
   158  029B                     	;# 
   159  029C                     	;# 
   160  029C                     	;# 
   161  029D                     	;# 
   162  029E                     	;# 
   163  029E                     	;# 
   164  0311                     	;# 
   165  0311                     	;# 
   166  0312                     	;# 
   167  0313                     	;# 
   168  0318                     	;# 
   169  0318                     	;# 
   170  0319                     	;# 
   171  031A                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  039A                     	;# 
   176  039C                     	;# 
   177  039D                     	;# 
   178  039E                     	;# 
   179  039F                     	;# 
   180  0415                     	;# 
   181  0416                     	;# 
   182  0417                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  0FE4                     	;# 
   187  0FE5                     	;# 
   188  0FE6                     	;# 
   189  0FE7                     	;# 
   190  0FE8                     	;# 
   191  0FE9                     	;# 
   192  0FEA                     	;# 
   193  0FEB                     	;# 
   194  0FED                     	;# 
   195  0FEE                     	;# 
   196  0FEF                     	;# 
   197                           
   198                           	psect	idataBANK0
   199  06A0                     __pidataBANK0:	
   200                           
   201                           ;initializer for LCD_SetCursor@F2889
   202  06A0  3400               	retlw	0
   203  06A1  3400               	retlw	0
   204  06A2  3440               	retlw	64
   205  06A3  3400               	retlw	0
   206  000C                     _PORTA	set	12
   207  000D                     _PORTB	set	13
   208  0018                     _T1CON	set	24
   209  0017                     _TMR1H	set	23
   210  0016                     _TMR1L	set	22
   211  0093                     _BCL1IF	set	147
   212  005F                     _GIE	set	95
   213  005E                     _PEIE	set	94
   214  0060                     _RA0	set	96
   215  0061                     _RA1	set	97
   216  008B                     _SSP1IF	set	139
   217  0088                     _TMR1IF	set	136
   218  0095                     _OPTION_REG	set	149
   219  0099                     _OSCCON	set	153
   220  0091                     _PIE1bits	set	145
   221  008C                     _TRISA	set	140
   222  008D                     _TRISB	set	141
   223  0493                     _BCL1IE	set	1171
   224  048B                     _SSP1IE	set	1163
   225  018C                     _ANSELA	set	396
   226  018D                     _ANSELB	set	397
   227  0212                     _SSP1ADD	set	530
   228  0211                     _SSP1BUF	set	529
   229  0215                     _SSP1CON1	set	533
   230  0216                     _SSP1CON2	set	534
   231  0216                     _SSP1CON2bits	set	534
   232  0214                     _SSP1STAT	set	532
   233  020D                     _WPUB	set	525
   234                           
   235                           	psect	stringtext
   236  0700                     __pstringtext:	
   237  0700                     __stringdata:	
   238  0700                     STR_1:	
   239  0700  3420               	retlw	32	;' '
   240  0701  3420               	retlw	32	;' '
   241  0702  3400               	retlw	0
   242  0703                     __end_of__stringdata:	
   243                           
   244                           ; #config settings
   245  0000                     
   246                           	psect	cinit
   247  0039                     start_initialization:	
   248  0039                     __initialization:	
   249                           
   250                           ; Clear objects allocated to COMMON
   251  0039  01F0               	clrf	__pbssCOMMON& (0+127)
   252  003A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   253  003B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   254  003C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   255  003D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   256                           
   257                           ; Clear objects allocated to BANK0
   258  003E  3048               	movlw	low __pbssBANK0
   259  003F  0084               	movwf	4
   260  0040  3000               	movlw	high __pbssBANK0
   261  0041  0085               	movwf	5
   262  0042  300D               	movlw	13
   263  0043  3186  2694  3180   	fcall	clear_ram0
   264                           
   265                           ; Initialize objects allocated to BANK0
   266  0046  3186  26A0  3180   	fcall	__pidataBANK0	;fetch initializer
   267  0049  00D5               	movwf	__pdataBANK0& (0+127)
   268  004A  3186  26A1  3180   	fcall	__pidataBANK0+1	;fetch initializer
   269  004D  00D6               	movwf	(__pdataBANK0+1)& (0+127)
   270  004E  3186  26A2  3180   	fcall	__pidataBANK0+2	;fetch initializer
   271  0051  00D7               	movwf	(__pdataBANK0+2)& (0+127)
   272  0052  3186  26A3         	fcall	__pidataBANK0+3	;fetch initializer
   273  0054  00D8               	movwf	(__pdataBANK0+3)& (0+127)
   274  0055                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  0055                     __end_of__initialization:	
   278  0055  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   279  0056  0020               	movlb	0
   280  0057  3182  2ACC         	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMMON
   283  0070                     __pbssCOMMON:	
   284  0070                     _MM:	
   285  0070                     	ds	1
   286  0071                     _YY:	
   287  0071                     	ds	1
   288  0072                     _hh:	
   289  0072                     	ds	1
   290  0073                     _mm:	
   291  0073                     	ds	1
   292  0074                     _ss:	
   293  0074                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296  0048                     __pbssBANK0:	
   297  0048                     _AckCheck:	
   298  0048                     	ds	2
   299  004A                     _EE:	
   300  004A                     	ds	1
   301  004B                     _cnt_t1:	
   302  004B                     	ds	1
   303  004C                     _sw_RA0:	
   304  004C                     	ds	4
   305  0050                     _sw_RA1:	
   306  0050                     	ds	4
   307  0054                     _DD:	
   308  0054                     	ds	1
   309                           
   310                           	psect	dataBANK0
   311  0055                     __pdataBANK0:	
   312  0055                     LCD_SetCursor@F2889:	
   313  0055                     	ds	4
   314                           
   315                           	psect	clrtext
   316  0694                     clear_ram0:	
   317                           ;	Called with FSR0 containing the base address, and
   318                           ;	WREG with the size to clear
   319                           
   320  0694  0064               	clrwdt	;clear the watchdog before getting into this loop
   321  0695                     clrloop0:	
   322  0695  0180               	clrf	0	;clear RAM location pointed to by FSR
   323  0696  3101               	addfsr 0,1
   324  0697  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   325  0698  2E95               	goto	clrloop0	;have we reached the end yet?
   326  0699  3400               	retlw	0	;all done for this memory range, return
   327                           
   328                           	psect	cstackCOMMON
   329  0075                     __pcstackCOMMON:	
   330  0075                     ?_button_timer:	
   331  0075                     ?_display:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0075                     ?_InterFunction:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0075                     ?_I2C_IdleCheck:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0075                     ?_InitI2C_Master:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0075                     ?_I2C_Stop:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0075                     ?_command:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0075                     ?_LCD_Clear:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0075                     ?_LCD_Putc:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0075                     ?_LCD_Init:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0075                     ?_main:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0075                     ?_RTC_Read:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0075                     ?_I2C_Send:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0075                     button_timer@sw_value:	
   368                           ; 2 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0075                     	ds	1
   373  0076                     ??_button_timer:	
   374                           
   375                           ; 0 bytes @ 0x1
   376  0076                     	ds	1
   377  0077                     button_timer@bt:	
   378                           
   379                           ; 1 bytes @ 0x2
   380  0077                     	ds	1
   381  0078                     ??_InterFunction:	
   382                           
   383                           ; 0 bytes @ 0x3
   384  0078                     	ds	2
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:	
   388  0020                     ??_I2C_IdleCheck:	
   389  0020                     ??_InitI2C_Master:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0020                     ?_month_length:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0020                     ?___awdiv:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0020                     ?___awmod:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0020                     month_length@month:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  0020                     ___awdiv@divisor:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0020                     ___awmod@divisor:	
   408                           ; 2 bytes @ 0x0
   409                           
   410                           
   411                           ; 2 bytes @ 0x0
   412  0020                     	ds	1
   413  0021                     ??_month_length:	
   414  0021                     I2C_IdleCheck@mask:	
   415                           ; 0 bytes @ 0x1
   416                           
   417  0021                     month_length@year:	
   418                           ; 1 bytes @ 0x1
   419                           
   420                           
   421                           ; 1 bytes @ 0x1
   422  0021                     	ds	1
   423  0022                     ??_I2C_Stop:	
   424  0022                     ??_I2C_Send:	
   425                           ; 0 bytes @ 0x2
   426                           
   427  0022                     ?_I2C_Receive:	
   428                           ; 0 bytes @ 0x2
   429                           
   430  0022                     ?_I2C_Start:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0022                     ?_I2C_rStart:	
   434                           ; 2 bytes @ 0x2
   435                           
   436  0022                     I2C_Send@dt:	
   437                           ; 2 bytes @ 0x2
   438                           
   439  0022                     I2C_Start@adrs:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0022                     I2C_rStart@adrs:	
   443                           ; 2 bytes @ 0x2
   444                           
   445  0022                     I2C_Receive@ack:	
   446                           ; 2 bytes @ 0x2
   447                           
   448  0022                     ___awdiv@dividend:	
   449                           ; 2 bytes @ 0x2
   450                           
   451  0022                     ___awmod@dividend:	
   452                           ; 2 bytes @ 0x2
   453                           
   454                           
   455                           ; 2 bytes @ 0x2
   456  0022                     	ds	2
   457  0024                     ??_I2C_Receive:	
   458  0024                     ??___awdiv:	
   459                           ; 0 bytes @ 0x4
   460                           
   461  0024                     ??___awmod:	
   462                           ; 0 bytes @ 0x4
   463                           
   464  0024                     I2C_Start@rw:	
   465                           ; 0 bytes @ 0x4
   466                           
   467  0024                     I2C_rStart@rw:	
   468                           ; 2 bytes @ 0x4
   469                           
   470                           
   471                           ; 2 bytes @ 0x4
   472  0024                     	ds	1
   473  0025                     I2C_Receive@dt:	
   474  0025                     ___awdiv@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0025                     ___awmod@counter:	
   478                           ; 1 bytes @ 0x5
   479                           
   480                           
   481                           ; 1 bytes @ 0x5
   482  0025                     	ds	1
   483  0026                     ??_I2C_Start:	
   484  0026                     ??_I2C_rStart:	
   485                           ; 0 bytes @ 0x6
   486                           
   487  0026                     ___awdiv@sign:	
   488                           ; 0 bytes @ 0x6
   489                           
   490  0026                     ___awmod@sign:	
   491                           ; 1 bytes @ 0x6
   492                           
   493                           
   494                           ; 1 bytes @ 0x6
   495  0026                     	ds	1
   496  0027                     ___awdiv@quotient:	
   497                           
   498                           ; 2 bytes @ 0x7
   499  0027                     	ds	1
   500  0028                     ??_command:	
   501  0028                     ??_LCD_Putc:	
   502                           ; 0 bytes @ 0x8
   503                           
   504  0028                     ?_LCD_Puts:	
   505                           ; 0 bytes @ 0x8
   506                           
   507  0028                     ?_RTC_Write:	
   508                           ; 0 bytes @ 0x8
   509                           
   510  0028                     ??_RTC_Read:	
   511                           ; 0 bytes @ 0x8
   512                           
   513  0028                     RTC_Write@c:	
   514                           ; 0 bytes @ 0x8
   515                           
   516  0028                     LCD_Puts@s:	
   517                           ; 1 bytes @ 0x8
   518                           
   519                           
   520                           ; 2 bytes @ 0x8
   521  0028                     	ds	1
   522  0029                     ??_RTC_Write:	
   523  0029                     ?___bmul:	
   524                           ; 0 bytes @ 0x9
   525                           
   526  0029                     command@c:	
   527                           ; 1 bytes @ 0x9
   528                           
   529  0029                     LCD_Putc@c:	
   530                           ; 1 bytes @ 0x9
   531                           
   532  0029                     RTC_Read@Reg:	
   533                           ; 1 bytes @ 0x9
   534                           
   535  0029                     ___bmul@multiplicand:	
   536                           ; 1 bytes @ 0x9
   537                           
   538                           
   539                           ; 1 bytes @ 0x9
   540  0029                     	ds	1
   541  002A                     ??_LCD_Puts:	
   542  002A                     ??___bmul:	
   543                           ; 0 bytes @ 0xA
   544                           
   545  002A                     RTC_Write@Reg:	
   546                           ; 0 bytes @ 0xA
   547                           
   548  002A                     RTC_Read@data:	
   549                           ; 1 bytes @ 0xA
   550                           
   551  002A                     command@ans:	
   552                           ; 1 bytes @ 0xA
   553                           
   554  002A                     LCD_Putc@ans:	
   555                           ; 2 bytes @ 0xA
   556                           
   557                           
   558                           ; 2 bytes @ 0xA
   559  002A                     	ds	1
   560  002B                     ___bmul@product:	
   561  002B                     LCD_Puts@ans:	
   562                           ; 1 bytes @ 0xB
   563                           
   564  002B                     RTC_Write@ans:	
   565                           ; 2 bytes @ 0xB
   566                           
   567  002B                     RTC_Read@ans:	
   568                           ; 2 bytes @ 0xB
   569                           
   570                           
   571                           ; 2 bytes @ 0xB
   572  002B                     	ds	1
   573  002C                     ??_LCD_Clear:	
   574  002C                     ?_LCD_SetCursor:	
   575                           ; 0 bytes @ 0xC
   576                           
   577  002C                     ___bmul@multiplier:	
   578                           ; 0 bytes @ 0xC
   579                           
   580  002C                     LCD_SetCursor@col:	
   581                           ; 1 bytes @ 0xC
   582                           
   583                           
   584                           ; 2 bytes @ 0xC
   585  002C                     	ds	2
   586  002E                     ??_LCD_Init:	
   587  002E                     LCD_SetCursor@row:	
   588                           ; 0 bytes @ 0xE
   589                           
   590                           
   591                           ; 2 bytes @ 0xE
   592  002E                     	ds	2
   593  0030                     ??_LCD_SetCursor:	
   594  0030                     LCD_SetCursor@row_offsets:	
   595                           ; 0 bytes @ 0x10
   596                           
   597                           
   598                           ; 4 bytes @ 0x10
   599  0030                     	ds	4
   600  0034                     ??_display:	
   601                           
   602                           ; 0 bytes @ 0x14
   603  0034                     	ds	2
   604  0036                     ?_timeset:	
   605  0036                     timeset@min_num:	
   606                           ; 0 bytes @ 0x16
   607                           
   608                           
   609                           ; 1 bytes @ 0x16
   610  0036                     	ds	1
   611  0037                     timeset@max_num:	
   612                           
   613                           ; 1 bytes @ 0x17
   614  0037                     	ds	1
   615  0038                     timeset@Reg:	
   616                           
   617                           ; 1 bytes @ 0x18
   618  0038                     	ds	1
   619  0039                     timeset@column:	
   620                           
   621                           ; 1 bytes @ 0x19
   622  0039                     	ds	1
   623  003A                     timeset@row:	
   624                           
   625                           ; 1 bytes @ 0x1A
   626  003A                     	ds	1
   627  003B                     ??_timeset:	
   628                           
   629                           ; 0 bytes @ 0x1B
   630  003B                     	ds	6
   631  0041                     timeset@t:	
   632                           
   633                           ; 1 bytes @ 0x21
   634  0041                     	ds	1
   635  0042                     timeset@t_213:	
   636                           
   637                           ; 1 bytes @ 0x22
   638  0042                     	ds	1
   639  0043                     timeset@value:	
   640                           
   641                           ; 1 bytes @ 0x23
   642  0043                     	ds	1
   643  0044                     ??_main:	
   644                           
   645                           ; 0 bytes @ 0x24
   646  0044                     	ds	4
   647                           
   648                           	psect	maintext
   649  02CC                     __pmaintext:	
   650 ;;
   651 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   652 ;;
   653 ;; *************** function _main *****************
   654 ;; Defined at:
   655 ;;		line 358 in file "PIC16F1827-I2C02.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;		None               void
   662 ;; Registers used:
   663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 17F/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   669 ;;      Params:         0       0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0
   671 ;;      Temps:          0       4       0       0       0       0
   672 ;;      Totals:         0       4       0       0       0       0
   673 ;;Total ram usage:        4 bytes
   674 ;; Hardware stack levels required when called:    8
   675 ;; This function calls:
   676 ;;		_InitI2C_Master
   677 ;;		_LCD_Init
   678 ;;		_RTC_Write
   679 ;;		_display
   680 ;;		_month_length
   681 ;;		_timeset
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _main
   689  02CC                     _main:	
   690                           
   691                           ;PIC16F1827-I2C02.c: 359: OSCCON = 0b01110010;
   692                           
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   695  02CC  3072               	movlw	114
   696  02CD  0021               	movlb	1	; select bank1
   697  02CE  0099               	movwf	25	;volatile
   698                           
   699                           ;PIC16F1827-I2C02.c: 360: OPTION_REG = 0b00000000;
   700  02CF  0195               	clrf	21	;volatile
   701                           
   702                           ;PIC16F1827-I2C02.c: 361: ANSELA = 0b00000000;
   703  02D0  0023               	movlb	3	; select bank3
   704  02D1  018C               	clrf	12	;volatile
   705                           
   706                           ;PIC16F1827-I2C02.c: 362: ANSELB = 0b00000000;
   707  02D2  018D               	clrf	13	;volatile
   708                           
   709                           ;PIC16F1827-I2C02.c: 363: TRISA = 0b00000011;
   710  02D3  3003               	movlw	3
   711  02D4  0021               	movlb	1	; select bank1
   712  02D5  008C               	movwf	12	;volatile
   713                           
   714                           ;PIC16F1827-I2C02.c: 364: TRISB = 0b00010010;
   715  02D6  3012               	movlw	18
   716  02D7  008D               	movwf	13	;volatile
   717                           
   718                           ;PIC16F1827-I2C02.c: 365: WPUB = 0b00010010;
   719  02D8  3012               	movlw	18
   720  02D9  0024               	movlb	4	; select bank4
   721  02DA  008D               	movwf	13	;volatile
   722                           
   723                           ;PIC16F1827-I2C02.c: 366: PORTA = 0b00000000;
   724  02DB  0020               	movlb	0	; select bank0
   725  02DC  018C               	clrf	12	;volatile
   726                           
   727                           ;PIC16F1827-I2C02.c: 367: PORTB = 0b00000000;
   728  02DD  018D               	clrf	13	;volatile
   729                           
   730                           ;PIC16F1827-I2C02.c: 369: T1CON = 0x21;
   731  02DE  3021               	movlw	33
   732  02DF  0098               	movwf	24	;volatile
   733                           
   734                           ;PIC16F1827-I2C02.c: 370: TMR1H = 0x00;
   735  02E0  0197               	clrf	23	;volatile
   736                           
   737                           ;PIC16F1827-I2C02.c: 371: TMR1L = 0x00;
   738  02E1  0196               	clrf	22	;volatile
   739                           
   740                           ;PIC16F1827-I2C02.c: 372: PIE1bits.TMR1IE = 1;
   741  02E2  0021               	movlb	1	; select bank1
   742  02E3  1411               	bsf	17,0	;volatile
   743                           
   744                           ;PIC16F1827-I2C02.c: 374: InitI2C_Master();
   745  02E4  3186  2666  3182   	fcall	_InitI2C_Master
   746                           
   747                           ;PIC16F1827-I2C02.c: 376: LCD_Init();
   748  02E7  3184  2498  3182   	fcall	_LCD_Init
   749                           
   750                           ;PIC16F1827-I2C02.c: 378: RTC_Write(0x07, 0x00);
   751  02EA  0020               	movlb	0	; select bank0
   752  02EB  01A8               	clrf	RTC_Write@c
   753  02EC  3007               	movlw	7
   754  02ED  3185  253A  3182   	fcall	_RTC_Write
   755  02F0                     l2060:	
   756                           ;PIC16F1827-I2C02.c: 388: while (1) {
   757                           
   758                           
   759                           ;PIC16F1827-I2C02.c: 389: display();
   760  02F0  3181  21CA  3182   	fcall	_display
   761                           
   762                           ;PIC16F1827-I2C02.c: 390: if (sw_RA0.press_flag) {
   763  02F3  0020               	movlb	0	; select bank0
   764  02F4  084D               	movf	_sw_RA0+1,w
   765  02F5  1903               	btfsc	3,2
   766  02F6  2AF0               	goto	l2060
   767                           
   768                           ;PIC16F1827-I2C02.c: 391: sw_RA0.press_flag = 0;
   769  02F7  01CD               	clrf	_sw_RA0+1
   770                           
   771                           ;PIC16F1827-I2C02.c: 392: timeset(&YY, 0, 99, 0x06, 0, 0);
   772  02F8  01B6               	clrf	timeset@min_num
   773  02F9  3063               	movlw	99
   774  02FA  00C4               	movwf	??_main
   775  02FB  0844               	movf	??_main,w
   776  02FC  00B7               	movwf	timeset@max_num
   777  02FD  3006               	movlw	6
   778  02FE  00C5               	movwf	??_main+1
   779  02FF  0845               	movf	??_main+1,w
   780  0300  00B8               	movwf	timeset@Reg
   781  0301  01B9               	clrf	timeset@column
   782  0302  01BA               	clrf	timeset@row
   783  0303  3071               	movlw	_YY& (0+255)
   784  0304  3180  2059  3182   	fcall	_timeset
   785                           
   786                           ;PIC16F1827-I2C02.c: 393: timeset(&MM, 1, 12, 0x05, 3, 0);
   787  0307  0020               	movlb	0	; select bank0
   788  0308  01B6               	clrf	timeset@min_num
   789  0309  0AB6               	incf	timeset@min_num,f
   790  030A  300C               	movlw	12
   791  030B  00C4               	movwf	??_main
   792  030C  0844               	movf	??_main,w
   793  030D  00B7               	movwf	timeset@max_num
   794  030E  3005               	movlw	5
   795  030F  00C5               	movwf	??_main+1
   796  0310  0845               	movf	??_main+1,w
   797  0311  00B8               	movwf	timeset@Reg
   798  0312  3003               	movlw	3
   799  0313  00C6               	movwf	??_main+2
   800  0314  0846               	movf	??_main+2,w
   801  0315  00B9               	movwf	timeset@column
   802  0316  01BA               	clrf	timeset@row
   803  0317  3070               	movlw	_MM& (0+255)
   804  0318  3180  2059  3182   	fcall	_timeset
   805                           
   806                           ;PIC16F1827-I2C02.c: 394: timeset(&DD, 1, month_length(YY, MM), 0x04, 6, 0);
   807  031B  0020               	movlb	0	; select bank0
   808  031C  01B6               	clrf	timeset@min_num
   809  031D  0AB6               	incf	timeset@min_num,f
   810  031E  0870               	movf	_MM,w
   811  031F  00C4               	movwf	??_main
   812  0320  0844               	movf	??_main,w
   813  0321  00A0               	movwf	month_length@month
   814  0322  0871               	movf	_YY,w
   815  0323  3185  25F6  3182   	fcall	_month_length
   816  0326  0020               	movlb	0	; select bank0
   817  0327  00C5               	movwf	??_main+1
   818  0328  0845               	movf	??_main+1,w
   819  0329  00B7               	movwf	timeset@max_num
   820  032A  3004               	movlw	4
   821  032B  00C6               	movwf	??_main+2
   822  032C  0846               	movf	??_main+2,w
   823  032D  00B8               	movwf	timeset@Reg
   824  032E  3006               	movlw	6
   825  032F  00C7               	movwf	??_main+3
   826  0330  0847               	movf	??_main+3,w
   827  0331  00B9               	movwf	timeset@column
   828  0332  01BA               	clrf	timeset@row
   829  0333  3054               	movlw	_DD& (0+255)
   830  0334  3180  2059  3182   	fcall	_timeset
   831                           
   832                           ;PIC16F1827-I2C02.c: 395: timeset(&hh, 0, 23, 0x02, 0, 1);
   833  0337  0020               	movlb	0	; select bank0
   834  0338  01B6               	clrf	timeset@min_num
   835  0339  3017               	movlw	23
   836  033A  00C4               	movwf	??_main
   837  033B  0844               	movf	??_main,w
   838  033C  00B7               	movwf	timeset@max_num
   839  033D  3002               	movlw	2
   840  033E  00C5               	movwf	??_main+1
   841  033F  0845               	movf	??_main+1,w
   842  0340  00B8               	movwf	timeset@Reg
   843  0341  01B9               	clrf	timeset@column
   844  0342  01BA               	clrf	timeset@row
   845  0343  0ABA               	incf	timeset@row,f
   846  0344  3072               	movlw	_hh& (0+255)
   847  0345  3180  2059  3182   	fcall	_timeset
   848                           
   849                           ;PIC16F1827-I2C02.c: 396: timeset(&mm, 0, 59, 0x01, 3, 1);
   850  0348  0020               	movlb	0	; select bank0
   851  0349  01B6               	clrf	timeset@min_num
   852  034A  303B               	movlw	59
   853  034B  00C4               	movwf	??_main
   854  034C  0844               	movf	??_main,w
   855  034D  00B7               	movwf	timeset@max_num
   856  034E  01B8               	clrf	timeset@Reg
   857  034F  0AB8               	incf	timeset@Reg,f
   858  0350  3003               	movlw	3
   859  0351  00C5               	movwf	??_main+1
   860  0352  0845               	movf	??_main+1,w
   861  0353  00B9               	movwf	timeset@column
   862  0354  01BA               	clrf	timeset@row
   863  0355  0ABA               	incf	timeset@row,f
   864  0356  3073               	movlw	_mm& (0+255)
   865  0357  3180  2059  3182   	fcall	_timeset
   866                           
   867                           ;PIC16F1827-I2C02.c: 397: timeset(&ss, 0, 59, 0x00, 6, 1);
   868  035A  0020               	movlb	0	; select bank0
   869  035B  01B6               	clrf	timeset@min_num
   870  035C  303B               	movlw	59
   871  035D  00C4               	movwf	??_main
   872  035E  0844               	movf	??_main,w
   873  035F  00B7               	movwf	timeset@max_num
   874  0360  01B8               	clrf	timeset@Reg
   875  0361  3006               	movlw	6
   876  0362  00C5               	movwf	??_main+1
   877  0363  0845               	movf	??_main+1,w
   878  0364  00B9               	movwf	timeset@column
   879  0365  01BA               	clrf	timeset@row
   880  0366  0ABA               	incf	timeset@row,f
   881  0367  3074               	movlw	_ss& (0+255)
   882  0368  3180  2059  3182   	fcall	_timeset
   883  036B  0020               	movlb	0	; select bank0
   884  036C  2AF0               	goto	l2060
   885  036D                     __end_of_main:	
   886                           
   887                           	psect	text1
   888  0059                     __ptext1:	
   889 ;; *************** function _timeset *****************
   890 ;; Defined at:
   891 ;;		line 288 in file "PIC16F1827-I2C02.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  value           1    wreg     PTR unsigned char 
   894 ;;		 -> YY(1), MM(1), DD(1), hh(1), 
   895 ;;		 -> mm(1), ss(1), 
   896 ;;  min_num         1   22[BANK0 ] unsigned char 
   897 ;;  max_num         1   23[BANK0 ] unsigned char 
   898 ;;  Reg             1   24[BANK0 ] unsigned char 
   899 ;;  column          1   25[BANK0 ] unsigned char 
   900 ;;  row             1   26[BANK0 ] unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  value           1   35[BANK0 ] PTR unsigned char 
   903 ;;		 -> YY(1), MM(1), DD(1), hh(1), 
   904 ;;		 -> mm(1), ss(1), 
   905 ;;  t               1   34[BANK0 ] unsigned char 
   906 ;;  t               1   33[BANK0 ] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;		None               void
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   916 ;;      Params:         0       5       0       0       0       0
   917 ;;      Locals:         0       3       0       0       0       0
   918 ;;      Temps:          0       6       0       0       0       0
   919 ;;      Totals:         0      14       0       0       0       0
   920 ;;Total ram usage:       14 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    7
   923 ;; This function calls:
   924 ;;		_LCD_Putc
   925 ;;		_LCD_Puts
   926 ;;		_LCD_SetCursor
   927 ;;		_RTC_Read
   928 ;;		_RTC_Write
   929 ;;		___awdiv
   930 ;;		___awmod
   931 ;;		___bmul
   932 ;;		_display
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _timeset
   940  0059                     _timeset:	
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _timeset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   944                           ;timeset@value stored from wreg
   945  0059  0020               	movlb	0	; select bank0
   946  005A  00C3               	movwf	timeset@value
   947                           
   948                           ;PIC16F1827-I2C02.c: 289: sw_RA1.press_flag = 0;
   949  005B  01D1               	clrf	_sw_RA1+1
   950                           
   951                           ;PIC16F1827-I2C02.c: 290: sw_RA1.long_hold_flag1 = 0;
   952  005C  01D2               	clrf	_sw_RA1+2
   953                           
   954                           ;PIC16F1827-I2C02.c: 291: sw_RA1.long_hold_flag2 = 0;
   955  005D  01D3               	clrf	_sw_RA1+3
   956  005E                     l2000:	
   957                           ;PIC16F1827-I2C02.c: 292: while (!sw_RA0.press_flag) {
   958                           
   959  005E  0020               	movlb	0	; select bank0
   960  005F  084D               	movf	_sw_RA0+1,w
   961  0060  1D03               	skipz
   962  0061  29C8               	goto	l2002
   963                           
   964                           ;PIC16F1827-I2C02.c: 293: if (cnt_t1 % 4 >= 2) {
   965  0062  3003               	movlw	3
   966  0063  054B               	andwf	_cnt_t1,w
   967  0064  00BB               	movwf	??_timeset
   968  0065  3002               	movlw	2
   969  0066  023B               	subwf	??_timeset,w
   970  0067  1C03               	skipc
   971  0068  2887               	goto	l1966
   972                           
   973                           ;PIC16F1827-I2C02.c: 294: display();
   974  0069  3181  21CA  3180   	fcall	_display
   975                           
   976                           ;PIC16F1827-I2C02.c: 295: LCD_SetCursor(column, row);
   977  006C  0020               	movlb	0	; select bank0
   978  006D  0839               	movf	timeset@column,w
   979  006E  00BB               	movwf	??_timeset
   980  006F  01BC               	clrf	??_timeset+1
   981  0070  083B               	movf	??_timeset,w
   982  0071  00AC               	movwf	LCD_SetCursor@col
   983  0072  083C               	movf	??_timeset+1,w
   984  0073  00AD               	movwf	LCD_SetCursor@col+1
   985  0074  083A               	movf	timeset@row,w
   986  0075  00BD               	movwf	??_timeset+2
   987  0076  01BE               	clrf	??_timeset+3
   988  0077  083D               	movf	??_timeset+2,w
   989  0078  00AE               	movwf	LCD_SetCursor@row
   990  0079  083E               	movf	??_timeset+3,w
   991  007A  00AF               	movwf	LCD_SetCursor@row+1
   992  007B  3186  2641  3180   	fcall	_LCD_SetCursor
   993                           
   994                           ;PIC16F1827-I2C02.c: 296: LCD_Puts("  ");
   995  007E  3000               	movlw	low (STR_1| (0+32768))
   996  007F  0020               	movlb	0	; select bank0
   997  0080  00A8               	movwf	LCD_Puts@s
   998  0081  3087               	movlw	high (STR_1| (0+32768))
   999  0082  00A9               	movwf	LCD_Puts@s+1
  1000  0083  3184  24D6  3180   	fcall	_LCD_Puts
  1001                           
  1002                           ;PIC16F1827-I2C02.c: 297: } else {
  1003  0086  28CA               	goto	l1968
  1004  0087                     l1966:	
  1005                           
  1006                           ;PIC16F1827-I2C02.c: 298: *value = RTC_Read(Reg);
  1007  0087  0020               	movlb	0	; select bank0
  1008  0088  0838               	movf	timeset@Reg,w
  1009  0089  3183  23C1  3180   	fcall	_RTC_Read
  1010  008C  0020               	movlb	0	; select bank0
  1011  008D  00BB               	movwf	??_timeset
  1012  008E  0843               	movf	timeset@value,w
  1013  008F  0086               	movwf	6
  1014  0090  0187               	clrf	7
  1015  0091  083B               	movf	??_timeset,w
  1016  0092  0081               	movwf	1
  1017                           
  1018                           ;PIC16F1827-I2C02.c: 299: display();
  1019  0093  3181  21CA  3180   	fcall	_display
  1020                           
  1021                           ;PIC16F1827-I2C02.c: 300: LCD_SetCursor(column, row);
  1022  0096  0020               	movlb	0	; select bank0
  1023  0097  0839               	movf	timeset@column,w
  1024  0098  00BB               	movwf	??_timeset
  1025  0099  01BC               	clrf	??_timeset+1
  1026  009A  083B               	movf	??_timeset,w
  1027  009B  00AC               	movwf	LCD_SetCursor@col
  1028  009C  083C               	movf	??_timeset+1,w
  1029  009D  00AD               	movwf	LCD_SetCursor@col+1
  1030  009E  083A               	movf	timeset@row,w
  1031  009F  00BD               	movwf	??_timeset+2
  1032  00A0  01BE               	clrf	??_timeset+3
  1033  00A1  083D               	movf	??_timeset+2,w
  1034  00A2  00AE               	movwf	LCD_SetCursor@row
  1035  00A3  083E               	movf	??_timeset+3,w
  1036  00A4  00AF               	movwf	LCD_SetCursor@row+1
  1037  00A5  3186  2641  3180   	fcall	_LCD_SetCursor
  1038                           
  1039                           ;PIC16F1827-I2C02.c: 301: LCD_Putc(*value / 16 + '0');
  1040  00A8  3010               	movlw	16
  1041  00A9  0020               	movlb	0	; select bank0
  1042  00AA  00A0               	movwf	___awdiv@divisor
  1043  00AB  3000               	movlw	0
  1044  00AC  00A1               	movwf	___awdiv@divisor+1
  1045  00AD  0843               	movf	timeset@value,w
  1046  00AE  0086               	movwf	6
  1047  00AF  0187               	clrf	7
  1048  00B0  0801               	movf	1,w
  1049  00B1  00BB               	movwf	??_timeset
  1050  00B2  01BC               	clrf	??_timeset+1
  1051  00B3  083B               	movf	??_timeset,w
  1052  00B4  00A2               	movwf	___awdiv@dividend
  1053  00B5  083C               	movf	??_timeset+1,w
  1054  00B6  00A3               	movwf	___awdiv@dividend+1
  1055  00B7  3183  236D  3180   	fcall	___awdiv
  1056  00BA  0020               	movlb	0	; select bank0
  1057  00BB  0820               	movf	?___awdiv,w
  1058  00BC  3E30               	addlw	48
  1059  00BD  3185  2510  3180   	fcall	_LCD_Putc
  1060                           
  1061                           ;PIC16F1827-I2C02.c: 302: LCD_Putc(*value % 16 + '0');
  1062  00C0  0020               	movlb	0	; select bank0
  1063  00C1  0843               	movf	timeset@value,w
  1064  00C2  0086               	movwf	6
  1065  00C3  0187               	clrf	7
  1066  00C4  0801               	movf	1,w
  1067  00C5  390F               	andlw	15
  1068  00C6  3E30               	addlw	48
  1069  00C7  3185  2510  3180   	fcall	_LCD_Putc
  1070  00CA                     l1968:	
  1071                           
  1072                           ;PIC16F1827-I2C02.c: 303: }
  1073                           ;PIC16F1827-I2C02.c: 304: if (sw_RA1.press_flag) {
  1074  00CA  0020               	movlb	0	; select bank0
  1075  00CB  0851               	movf	_sw_RA1+1,w
  1076  00CC  1903               	btfsc	3,2
  1077  00CD  2939               	goto	l1984
  1078                           
  1079                           ;PIC16F1827-I2C02.c: 305: sw_RA1.press_flag = 0;
  1080  00CE  01D1               	clrf	_sw_RA1+1
  1081                           
  1082                           ;PIC16F1827-I2C02.c: 306: uint8_t t = *value % 16 + (*value / 16)*10;
  1083  00CF  0843               	movf	timeset@value,w
  1084  00D0  0086               	movwf	6
  1085  00D1  0187               	clrf	7
  1086  00D2  300F               	movlw	15
  1087  00D3  0501               	andwf	1,w
  1088  00D4  00BB               	movwf	??_timeset
  1089  00D5  300A               	movlw	10
  1090  00D6  00BC               	movwf	??_timeset+1
  1091  00D7  083C               	movf	??_timeset+1,w
  1092  00D8  00A9               	movwf	___bmul@multiplicand
  1093  00D9  0843               	movf	timeset@value,w
  1094  00DA  0086               	movwf	6
  1095  00DB  0187               	clrf	7
  1096  00DC  0801               	movf	1,w
  1097  00DD  00BD               	movwf	??_timeset+2
  1098  00DE  01BE               	clrf	??_timeset+3
  1099  00DF  083D               	movf	??_timeset+2,w
  1100  00E0  00A2               	movwf	___awdiv@dividend
  1101  00E1  083E               	movf	??_timeset+3,w
  1102  00E2  00A3               	movwf	___awdiv@dividend+1
  1103  00E3  3010               	movlw	16
  1104  00E4  00A0               	movwf	___awdiv@divisor
  1105  00E5  3000               	movlw	0
  1106  00E6  00A1               	movwf	___awdiv@divisor+1
  1107  00E7  3183  236D  3180   	fcall	___awdiv
  1108  00EA  0020               	movlb	0	; select bank0
  1109  00EB  0820               	movf	?___awdiv,w
  1110  00EC  3186  2654  3180   	fcall	___bmul
  1111  00EF  0020               	movlb	0	; select bank0
  1112  00F0  073B               	addwf	??_timeset,w
  1113  00F1  00BF               	movwf	??_timeset+4
  1114  00F2  083F               	movf	??_timeset+4,w
  1115  00F3  00C1               	movwf	timeset@t
  1116                           
  1117                           ;PIC16F1827-I2C02.c: 307: if (t >= max_num) {
  1118  00F4  0837               	movf	timeset@max_num,w
  1119  00F5  0241               	subwf	timeset@t,w
  1120  00F6  1C03               	skipc
  1121  00F7  28FD               	goto	l1978
  1122                           
  1123                           ;PIC16F1827-I2C02.c: 308: t = min_num;
  1124  00F8  0836               	movf	timeset@min_num,w
  1125  00F9  00BB               	movwf	??_timeset
  1126  00FA  083B               	movf	??_timeset,w
  1127  00FB  00C1               	movwf	timeset@t
  1128                           
  1129                           ;PIC16F1827-I2C02.c: 309: } else {
  1130  00FC  2901               	goto	l1980
  1131  00FD                     l1978:	
  1132                           
  1133                           ;PIC16F1827-I2C02.c: 310: t++;
  1134  00FD  3001               	movlw	1
  1135  00FE  00BB               	movwf	??_timeset
  1136  00FF  083B               	movf	??_timeset,w
  1137  0100  07C1               	addwf	timeset@t,f
  1138  0101                     l1980:	
  1139                           
  1140                           ;PIC16F1827-I2C02.c: 311: }
  1141                           ;PIC16F1827-I2C02.c: 312: *value = t % 10 + (t / 10)* 16;
  1142  0101  300A               	movlw	10
  1143  0102  00A0               	movwf	___awdiv@divisor
  1144  0103  3000               	movlw	0
  1145  0104  00A1               	movwf	___awdiv@divisor+1
  1146  0105  0841               	movf	timeset@t,w
  1147  0106  00BB               	movwf	??_timeset
  1148  0107  01BC               	clrf	??_timeset+1
  1149  0108  083B               	movf	??_timeset,w
  1150  0109  00A2               	movwf	___awdiv@dividend
  1151  010A  083C               	movf	??_timeset+1,w
  1152  010B  00A3               	movwf	___awdiv@dividend+1
  1153  010C  3183  236D  3180   	fcall	___awdiv
  1154  010F  0020               	movlb	0	; select bank0
  1155  0110  0820               	movf	?___awdiv,w
  1156  0111  00BD               	movwf	??_timeset+2
  1157  0112  3004               	movlw	4
  1158  0113                     u1495:	
  1159  0113  35BD               	lslf	??_timeset+2,f
  1160  0114  0B89               	decfsz	9,f
  1161  0115  2913               	goto	u1495
  1162  0116  300A               	movlw	10
  1163  0117  00A0               	movwf	___awmod@divisor
  1164  0118  3000               	movlw	0
  1165  0119  00A1               	movwf	___awmod@divisor+1
  1166  011A  0841               	movf	timeset@t,w
  1167  011B  00BE               	movwf	??_timeset+3
  1168  011C  01BF               	clrf	??_timeset+4
  1169  011D  083E               	movf	??_timeset+3,w
  1170  011E  00A2               	movwf	___awmod@dividend
  1171  011F  083F               	movf	??_timeset+4,w
  1172  0120  00A3               	movwf	___awmod@dividend+1
  1173  0121  3184  240A  3180   	fcall	___awmod
  1174  0124  0020               	movlb	0	; select bank0
  1175  0125  0820               	movf	?___awmod,w
  1176  0126  073D               	addwf	??_timeset+2,w
  1177  0127  00C0               	movwf	??_timeset+5
  1178  0128  0843               	movf	timeset@value,w
  1179  0129  0086               	movwf	6
  1180  012A  0187               	clrf	7
  1181  012B  0840               	movf	??_timeset+5,w
  1182  012C  0081               	movwf	1
  1183                           
  1184                           ;PIC16F1827-I2C02.c: 313: RTC_Write(Reg, *value);
  1185  012D  0843               	movf	timeset@value,w
  1186  012E  0086               	movwf	6
  1187  012F  0187               	clrf	7
  1188  0130  0801               	movf	1,w
  1189  0131  00BB               	movwf	??_timeset
  1190  0132  083B               	movf	??_timeset,w
  1191  0133  00A8               	movwf	RTC_Write@c
  1192  0134  0838               	movf	timeset@Reg,w
  1193  0135  3185  253A  3180   	fcall	_RTC_Write
  1194  0138  0020               	movlb	0	; select bank0
  1195  0139                     l1984:	
  1196                           
  1197                           ;PIC16F1827-I2C02.c: 314: }
  1198                           ;PIC16F1827-I2C02.c: 315: if (sw_RA1.long_hold_flag1) {
  1199  0139  0020               	movlb	0	; select bank0
  1200  013A  0852               	movf	_sw_RA1+2,w
  1201  013B  1903               	btfsc	3,2
  1202  013C  285E               	goto	l2000
  1203                           
  1204                           ;PIC16F1827-I2C02.c: 316: sw_RA1.long_hold_flag1 = 0;
  1205  013D  01D2               	clrf	_sw_RA1+2
  1206                           
  1207                           ;PIC16F1827-I2C02.c: 317: uint8_t t = *value % 16 + (*value / 16)*10;
  1208  013E  0843               	movf	timeset@value,w
  1209  013F  0086               	movwf	6
  1210  0140  0187               	clrf	7
  1211  0141  300F               	movlw	15
  1212  0142  0501               	andwf	1,w
  1213  0143  00BB               	movwf	??_timeset
  1214  0144  300A               	movlw	10
  1215  0145  00BC               	movwf	??_timeset+1
  1216  0146  083C               	movf	??_timeset+1,w
  1217  0147  00A9               	movwf	___bmul@multiplicand
  1218  0148  0843               	movf	timeset@value,w
  1219  0149  0086               	movwf	6
  1220  014A  0187               	clrf	7
  1221  014B  0801               	movf	1,w
  1222  014C  00BD               	movwf	??_timeset+2
  1223  014D  01BE               	clrf	??_timeset+3
  1224  014E  083D               	movf	??_timeset+2,w
  1225  014F  00A2               	movwf	___awdiv@dividend
  1226  0150  083E               	movf	??_timeset+3,w
  1227  0151  00A3               	movwf	___awdiv@dividend+1
  1228  0152  3010               	movlw	16
  1229  0153  00A0               	movwf	___awdiv@divisor
  1230  0154  3000               	movlw	0
  1231  0155  00A1               	movwf	___awdiv@divisor+1
  1232  0156  3183  236D  3180   	fcall	___awdiv
  1233  0159  0020               	movlb	0	; select bank0
  1234  015A  0820               	movf	?___awdiv,w
  1235  015B  3186  2654  3180   	fcall	___bmul
  1236  015E  0020               	movlb	0	; select bank0
  1237  015F  073B               	addwf	??_timeset,w
  1238  0160  00BF               	movwf	??_timeset+4
  1239  0161  083F               	movf	??_timeset+4,w
  1240  0162  00C2               	movwf	timeset@t_213
  1241                           
  1242                           ;PIC16F1827-I2C02.c: 318: if (t + 9 >= max_num) {
  1243  0163  0842               	movf	timeset@t_213,w
  1244  0164  3E09               	addlw	9
  1245  0165  00BB               	movwf	??_timeset
  1246  0166  3000               	movlw	0
  1247  0167  1803               	skipnc
  1248  0168  3001               	movlw	1
  1249  0169  00BC               	movwf	??_timeset+1
  1250  016A  083C               	movf	??_timeset+1,w
  1251  016B  3A80               	xorlw	128
  1252  016C  00BD               	movwf	??_timeset+2
  1253  016D  3080               	movlw	128
  1254  016E  023D               	subwf	??_timeset+2,w
  1255  016F  1D03               	skipz
  1256  0170  2973               	goto	u1515
  1257  0171  0837               	movf	timeset@max_num,w
  1258  0172  023B               	subwf	??_timeset,w
  1259  0173                     u1515:	
  1260  0173  1C03               	skipc
  1261  0174  298A               	goto	l1994
  1262                           
  1263                           ;PIC16F1827-I2C02.c: 319: t = t % 10;
  1264  0175  300A               	movlw	10
  1265  0176  0020               	movlb	0	; select bank0
  1266  0177  00A0               	movwf	___awmod@divisor
  1267  0178  3000               	movlw	0
  1268  0179  00A1               	movwf	___awmod@divisor+1
  1269  017A  0842               	movf	timeset@t_213,w
  1270  017B  00BB               	movwf	??_timeset
  1271  017C  01BC               	clrf	??_timeset+1
  1272  017D  083B               	movf	??_timeset,w
  1273  017E  00A2               	movwf	___awmod@dividend
  1274  017F  083C               	movf	??_timeset+1,w
  1275  0180  00A3               	movwf	___awmod@dividend+1
  1276  0181  3184  240A  3180   	fcall	___awmod
  1277  0184  0020               	movlb	0	; select bank0
  1278  0185  0820               	movf	?___awmod,w
  1279  0186  00BD               	movwf	??_timeset+2
  1280  0187  083D               	movf	??_timeset+2,w
  1281  0188  00C2               	movwf	timeset@t_213
  1282                           
  1283                           ;PIC16F1827-I2C02.c: 320: } else {
  1284  0189  298F               	goto	l1996
  1285  018A                     l1994:	
  1286                           
  1287                           ;PIC16F1827-I2C02.c: 321: t += 10;
  1288  018A  300A               	movlw	10
  1289  018B  0020               	movlb	0	; select bank0
  1290  018C  00BB               	movwf	??_timeset
  1291  018D  083B               	movf	??_timeset,w
  1292  018E  07C2               	addwf	timeset@t_213,f
  1293  018F                     l1996:	
  1294                           
  1295                           ;PIC16F1827-I2C02.c: 322: }
  1296                           ;PIC16F1827-I2C02.c: 323: *value = t % 10 + (t / 10)* 16;
  1297  018F  300A               	movlw	10
  1298  0190  00A0               	movwf	___awdiv@divisor
  1299  0191  3000               	movlw	0
  1300  0192  00A1               	movwf	___awdiv@divisor+1
  1301  0193  0842               	movf	timeset@t_213,w
  1302  0194  00BB               	movwf	??_timeset
  1303  0195  01BC               	clrf	??_timeset+1
  1304  0196  083B               	movf	??_timeset,w
  1305  0197  00A2               	movwf	___awdiv@dividend
  1306  0198  083C               	movf	??_timeset+1,w
  1307  0199  00A3               	movwf	___awdiv@dividend+1
  1308  019A  3183  236D  3180   	fcall	___awdiv
  1309  019D  0020               	movlb	0	; select bank0
  1310  019E  0820               	movf	?___awdiv,w
  1311  019F  00BD               	movwf	??_timeset+2
  1312  01A0  3004               	movlw	4
  1313  01A1                     u1525:	
  1314  01A1  35BD               	lslf	??_timeset+2,f
  1315  01A2  0B89               	decfsz	9,f
  1316  01A3  29A1               	goto	u1525
  1317  01A4  300A               	movlw	10
  1318  01A5  00A0               	movwf	___awmod@divisor
  1319  01A6  3000               	movlw	0
  1320  01A7  00A1               	movwf	___awmod@divisor+1
  1321  01A8  0842               	movf	timeset@t_213,w
  1322  01A9  00BE               	movwf	??_timeset+3
  1323  01AA  01BF               	clrf	??_timeset+4
  1324  01AB  083E               	movf	??_timeset+3,w
  1325  01AC  00A2               	movwf	___awmod@dividend
  1326  01AD  083F               	movf	??_timeset+4,w
  1327  01AE  00A3               	movwf	___awmod@dividend+1
  1328  01AF  3184  240A  3180   	fcall	___awmod
  1329  01B2  0020               	movlb	0	; select bank0
  1330  01B3  0820               	movf	?___awmod,w
  1331  01B4  073D               	addwf	??_timeset+2,w
  1332  01B5  00C0               	movwf	??_timeset+5
  1333  01B6  0843               	movf	timeset@value,w
  1334  01B7  0086               	movwf	6
  1335  01B8  0187               	clrf	7
  1336  01B9  0840               	movf	??_timeset+5,w
  1337  01BA  0081               	movwf	1
  1338                           
  1339                           ;PIC16F1827-I2C02.c: 324: RTC_Write(Reg, *value);
  1340  01BB  0843               	movf	timeset@value,w
  1341  01BC  0086               	movwf	6
  1342  01BD  0187               	clrf	7
  1343  01BE  0801               	movf	1,w
  1344  01BF  00BB               	movwf	??_timeset
  1345  01C0  083B               	movf	??_timeset,w
  1346  01C1  00A8               	movwf	RTC_Write@c
  1347  01C2  0838               	movf	timeset@Reg,w
  1348  01C3  3185  253A  3180   	fcall	_RTC_Write
  1349  01C6  0020               	movlb	0	; select bank0
  1350  01C7  285E               	goto	l2000
  1351  01C8                     l2002:	
  1352                           
  1353                           ;PIC16F1827-I2C02.c: 325: }
  1354                           ;PIC16F1827-I2C02.c: 326: }
  1355                           ;PIC16F1827-I2C02.c: 327: sw_RA0.press_flag = 0;
  1356  01C8  01CD               	clrf	_sw_RA0+1
  1357  01C9  0008               	return
  1358  01CA                     __end_of_timeset:	
  1359                           
  1360                           	psect	text2
  1361  01CA                     __ptext2:	
  1362 ;; *************** function _display *****************
  1363 ;; Defined at:
  1364 ;;		line 330 in file "PIC16F1827-I2C02.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1378 ;;      Params:         0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0
  1380 ;;      Temps:          0       2       0       0       0       0
  1381 ;;      Totals:         0       2       0       0       0       0
  1382 ;;Total ram usage:        2 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    6
  1385 ;; This function calls:
  1386 ;;		_LCD_Putc
  1387 ;;		_LCD_SetCursor
  1388 ;;		_RTC_Read
  1389 ;;		___awdiv
  1390 ;; This function is called by:
  1391 ;;		_timeset
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _display
  1398  01CA                     _display:	
  1399                           
  1400                           ;PIC16F1827-I2C02.c: 331: ss = RTC_Read(0x00);
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1404  01CA  3000               	movlw	0
  1405  01CB  3183  23C1  3181   	fcall	_RTC_Read
  1406  01CE  0020               	movlb	0	; select bank0
  1407  01CF  00B4               	movwf	??_display
  1408  01D0  0834               	movf	??_display,w
  1409  01D1  00F4               	movwf	_ss
  1410                           
  1411                           ;PIC16F1827-I2C02.c: 332: mm = RTC_Read(0x01);
  1412  01D2  3001               	movlw	1
  1413  01D3  3183  23C1  3181   	fcall	_RTC_Read
  1414  01D6  0020               	movlb	0	; select bank0
  1415  01D7  00B4               	movwf	??_display
  1416  01D8  0834               	movf	??_display,w
  1417  01D9  00F3               	movwf	_mm
  1418                           
  1419                           ;PIC16F1827-I2C02.c: 333: hh = RTC_Read(0x02);
  1420  01DA  3002               	movlw	2
  1421  01DB  3183  23C1  3181   	fcall	_RTC_Read
  1422  01DE  0020               	movlb	0	; select bank0
  1423  01DF  00B4               	movwf	??_display
  1424  01E0  0834               	movf	??_display,w
  1425  01E1  00F2               	movwf	_hh
  1426                           
  1427                           ;PIC16F1827-I2C02.c: 334: EE = RTC_Read(0x03);
  1428  01E2  3003               	movlw	3
  1429  01E3  3183  23C1  3181   	fcall	_RTC_Read
  1430  01E6  0020               	movlb	0	; select bank0
  1431  01E7  00B4               	movwf	??_display
  1432  01E8  0834               	movf	??_display,w
  1433  01E9  00CA               	movwf	_EE
  1434                           
  1435                           ;PIC16F1827-I2C02.c: 335: DD = RTC_Read(0x04);
  1436  01EA  3004               	movlw	4
  1437  01EB  3183  23C1  3181   	fcall	_RTC_Read
  1438  01EE  0020               	movlb	0	; select bank0
  1439  01EF  00B4               	movwf	??_display
  1440  01F0  0834               	movf	??_display,w
  1441  01F1  00D4               	movwf	_DD
  1442                           
  1443                           ;PIC16F1827-I2C02.c: 336: MM = RTC_Read(0x05);
  1444  01F2  3005               	movlw	5
  1445  01F3  3183  23C1  3181   	fcall	_RTC_Read
  1446  01F6  0020               	movlb	0	; select bank0
  1447  01F7  00B4               	movwf	??_display
  1448  01F8  0834               	movf	??_display,w
  1449  01F9  00F0               	movwf	_MM
  1450                           
  1451                           ;PIC16F1827-I2C02.c: 337: YY = RTC_Read(0x06);
  1452  01FA  3006               	movlw	6
  1453  01FB  3183  23C1  3181   	fcall	_RTC_Read
  1454  01FE  0020               	movlb	0	; select bank0
  1455  01FF  00B4               	movwf	??_display
  1456  0200  0834               	movf	??_display,w
  1457  0201  00F1               	movwf	_YY
  1458                           
  1459                           ;PIC16F1827-I2C02.c: 338: LCD_SetCursor(0, 0);
  1460  0202  3000               	movlw	0
  1461  0203  00AC               	movwf	LCD_SetCursor@col
  1462  0204  3000               	movlw	0
  1463  0205  00AD               	movwf	LCD_SetCursor@col+1
  1464  0206  3000               	movlw	0
  1465  0207  00AE               	movwf	LCD_SetCursor@row
  1466  0208  3000               	movlw	0
  1467  0209  00AF               	movwf	LCD_SetCursor@row+1
  1468  020A  3186  2641  3181   	fcall	_LCD_SetCursor
  1469                           
  1470                           ;PIC16F1827-I2C02.c: 339: LCD_Putc(YY / 16 + '0');
  1471  020D  3010               	movlw	16
  1472  020E  0020               	movlb	0	; select bank0
  1473  020F  00A0               	movwf	___awdiv@divisor
  1474  0210  3000               	movlw	0
  1475  0211  00A1               	movwf	___awdiv@divisor+1
  1476  0212  0871               	movf	_YY,w
  1477  0213  00B4               	movwf	??_display
  1478  0214  01B5               	clrf	??_display+1
  1479  0215  0834               	movf	??_display,w
  1480  0216  00A2               	movwf	___awdiv@dividend
  1481  0217  0835               	movf	??_display+1,w
  1482  0218  00A3               	movwf	___awdiv@dividend+1
  1483  0219  3183  236D  3181   	fcall	___awdiv
  1484  021C  0020               	movlb	0	; select bank0
  1485  021D  0820               	movf	?___awdiv,w
  1486  021E  3E30               	addlw	48
  1487  021F  3185  2510  3181   	fcall	_LCD_Putc
  1488                           
  1489                           ;PIC16F1827-I2C02.c: 340: LCD_Putc(YY % 16 + '0');
  1490  0222  0871               	movf	_YY,w
  1491  0223  390F               	andlw	15
  1492  0224  3E30               	addlw	48
  1493  0225  3185  2510  3181   	fcall	_LCD_Putc
  1494                           
  1495                           ;PIC16F1827-I2C02.c: 341: LCD_Putc('/');
  1496  0228  302F               	movlw	47
  1497  0229  3185  2510  3181   	fcall	_LCD_Putc
  1498                           
  1499                           ;PIC16F1827-I2C02.c: 342: LCD_Putc(MM / 16 + '0');
  1500  022C  3010               	movlw	16
  1501  022D  0020               	movlb	0	; select bank0
  1502  022E  00A0               	movwf	___awdiv@divisor
  1503  022F  3000               	movlw	0
  1504  0230  00A1               	movwf	___awdiv@divisor+1
  1505  0231  0870               	movf	_MM,w
  1506  0232  00B4               	movwf	??_display
  1507  0233  01B5               	clrf	??_display+1
  1508  0234  0834               	movf	??_display,w
  1509  0235  00A2               	movwf	___awdiv@dividend
  1510  0236  0835               	movf	??_display+1,w
  1511  0237  00A3               	movwf	___awdiv@dividend+1
  1512  0238  3183  236D  3181   	fcall	___awdiv
  1513  023B  0020               	movlb	0	; select bank0
  1514  023C  0820               	movf	?___awdiv,w
  1515  023D  3E30               	addlw	48
  1516  023E  3185  2510  3181   	fcall	_LCD_Putc
  1517                           
  1518                           ;PIC16F1827-I2C02.c: 343: LCD_Putc(MM % 16 + '0');
  1519  0241  0870               	movf	_MM,w
  1520  0242  390F               	andlw	15
  1521  0243  3E30               	addlw	48
  1522  0244  3185  2510  3181   	fcall	_LCD_Putc
  1523                           
  1524                           ;PIC16F1827-I2C02.c: 344: LCD_Putc('/');
  1525  0247  302F               	movlw	47
  1526  0248  3185  2510  3181   	fcall	_LCD_Putc
  1527                           
  1528                           ;PIC16F1827-I2C02.c: 345: LCD_Putc(DD / 16 + '0');
  1529  024B  3010               	movlw	16
  1530  024C  0020               	movlb	0	; select bank0
  1531  024D  00A0               	movwf	___awdiv@divisor
  1532  024E  3000               	movlw	0
  1533  024F  00A1               	movwf	___awdiv@divisor+1
  1534  0250  0854               	movf	_DD,w
  1535  0251  00B4               	movwf	??_display
  1536  0252  01B5               	clrf	??_display+1
  1537  0253  0834               	movf	??_display,w
  1538  0254  00A2               	movwf	___awdiv@dividend
  1539  0255  0835               	movf	??_display+1,w
  1540  0256  00A3               	movwf	___awdiv@dividend+1
  1541  0257  3183  236D  3181   	fcall	___awdiv
  1542  025A  0020               	movlb	0	; select bank0
  1543  025B  0820               	movf	?___awdiv,w
  1544  025C  3E30               	addlw	48
  1545  025D  3185  2510  3181   	fcall	_LCD_Putc
  1546                           
  1547                           ;PIC16F1827-I2C02.c: 346: LCD_Putc(DD % 16 + '0');
  1548  0260  0020               	movlb	0	; select bank0
  1549  0261  0854               	movf	_DD,w
  1550  0262  390F               	andlw	15
  1551  0263  3E30               	addlw	48
  1552  0264  3185  2510  3181   	fcall	_LCD_Putc
  1553                           
  1554                           ;PIC16F1827-I2C02.c: 347: LCD_SetCursor(0, 1);
  1555  0267  3000               	movlw	0
  1556  0268  0020               	movlb	0	; select bank0
  1557  0269  00AC               	movwf	LCD_SetCursor@col
  1558  026A  3000               	movlw	0
  1559  026B  00AD               	movwf	LCD_SetCursor@col+1
  1560  026C  3001               	movlw	1
  1561  026D  00AE               	movwf	LCD_SetCursor@row
  1562  026E  3000               	movlw	0
  1563  026F  00AF               	movwf	LCD_SetCursor@row+1
  1564  0270  3186  2641  3181   	fcall	_LCD_SetCursor
  1565                           
  1566                           ;PIC16F1827-I2C02.c: 348: LCD_Putc(hh / 16 + '0');
  1567  0273  3010               	movlw	16
  1568  0274  0020               	movlb	0	; select bank0
  1569  0275  00A0               	movwf	___awdiv@divisor
  1570  0276  3000               	movlw	0
  1571  0277  00A1               	movwf	___awdiv@divisor+1
  1572  0278  0872               	movf	_hh,w
  1573  0279  00B4               	movwf	??_display
  1574  027A  01B5               	clrf	??_display+1
  1575  027B  0834               	movf	??_display,w
  1576  027C  00A2               	movwf	___awdiv@dividend
  1577  027D  0835               	movf	??_display+1,w
  1578  027E  00A3               	movwf	___awdiv@dividend+1
  1579  027F  3183  236D  3181   	fcall	___awdiv
  1580  0282  0020               	movlb	0	; select bank0
  1581  0283  0820               	movf	?___awdiv,w
  1582  0284  3E30               	addlw	48
  1583  0285  3185  2510  3181   	fcall	_LCD_Putc
  1584                           
  1585                           ;PIC16F1827-I2C02.c: 349: LCD_Putc(hh % 16 + '0');
  1586  0288  0872               	movf	_hh,w
  1587  0289  390F               	andlw	15
  1588  028A  3E30               	addlw	48
  1589  028B  3185  2510  3181   	fcall	_LCD_Putc
  1590                           
  1591                           ;PIC16F1827-I2C02.c: 350: LCD_Putc(':');
  1592  028E  303A               	movlw	58
  1593  028F  3185  2510  3181   	fcall	_LCD_Putc
  1594                           
  1595                           ;PIC16F1827-I2C02.c: 351: LCD_Putc(mm / 16 + '0');
  1596  0292  3010               	movlw	16
  1597  0293  0020               	movlb	0	; select bank0
  1598  0294  00A0               	movwf	___awdiv@divisor
  1599  0295  3000               	movlw	0
  1600  0296  00A1               	movwf	___awdiv@divisor+1
  1601  0297  0873               	movf	_mm,w
  1602  0298  00B4               	movwf	??_display
  1603  0299  01B5               	clrf	??_display+1
  1604  029A  0834               	movf	??_display,w
  1605  029B  00A2               	movwf	___awdiv@dividend
  1606  029C  0835               	movf	??_display+1,w
  1607  029D  00A3               	movwf	___awdiv@dividend+1
  1608  029E  3183  236D  3181   	fcall	___awdiv
  1609  02A1  0020               	movlb	0	; select bank0
  1610  02A2  0820               	movf	?___awdiv,w
  1611  02A3  3E30               	addlw	48
  1612  02A4  3185  2510  3181   	fcall	_LCD_Putc
  1613                           
  1614                           ;PIC16F1827-I2C02.c: 352: LCD_Putc(mm % 16 + '0');
  1615  02A7  0873               	movf	_mm,w
  1616  02A8  390F               	andlw	15
  1617  02A9  3E30               	addlw	48
  1618  02AA  3185  2510  3181   	fcall	_LCD_Putc
  1619                           
  1620                           ;PIC16F1827-I2C02.c: 353: LCD_Putc('-');
  1621  02AD  302D               	movlw	45
  1622  02AE  3185  2510  3181   	fcall	_LCD_Putc
  1623                           
  1624                           ;PIC16F1827-I2C02.c: 354: LCD_Putc(ss / 16 + '0');
  1625  02B1  3010               	movlw	16
  1626  02B2  0020               	movlb	0	; select bank0
  1627  02B3  00A0               	movwf	___awdiv@divisor
  1628  02B4  3000               	movlw	0
  1629  02B5  00A1               	movwf	___awdiv@divisor+1
  1630  02B6  0874               	movf	_ss,w
  1631  02B7  00B4               	movwf	??_display
  1632  02B8  01B5               	clrf	??_display+1
  1633  02B9  0834               	movf	??_display,w
  1634  02BA  00A2               	movwf	___awdiv@dividend
  1635  02BB  0835               	movf	??_display+1,w
  1636  02BC  00A3               	movwf	___awdiv@dividend+1
  1637  02BD  3183  236D  3181   	fcall	___awdiv
  1638  02C0  0020               	movlb	0	; select bank0
  1639  02C1  0820               	movf	?___awdiv,w
  1640  02C2  3E30               	addlw	48
  1641  02C3  3185  2510  3181   	fcall	_LCD_Putc
  1642                           
  1643                           ;PIC16F1827-I2C02.c: 355: LCD_Putc(ss % 16 + '0');
  1644  02C6  0874               	movf	_ss,w
  1645  02C7  390F               	andlw	15
  1646  02C8  3E30               	addlw	48
  1647  02C9  3185  2510         	fcall	_LCD_Putc
  1648  02CB  0008               	return
  1649  02CC                     __end_of_display:	
  1650                           
  1651                           	psect	text3
  1652  036D                     __ptext3:	
  1653 ;; *************** function ___awdiv *****************
  1654 ;; Defined at:
  1655 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  divisor         2    0[BANK0 ] int 
  1658 ;;  dividend        2    2[BANK0 ] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  quotient        2    7[BANK0 ] int 
  1661 ;;  sign            1    6[BANK0 ] unsigned char 
  1662 ;;  counter         1    5[BANK0 ] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    0[BANK0 ] int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1672 ;;      Params:         0       4       0       0       0       0
  1673 ;;      Locals:         0       4       0       0       0       0
  1674 ;;      Temps:          0       1       0       0       0       0
  1675 ;;      Totals:         0       9       0       0       0       0
  1676 ;;Total ram usage:        9 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    2
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_timeset
  1683 ;;		_display
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function ___awdiv
  1689  036D                     ___awdiv:	
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1693  036D  0020               	movlb	0	; select bank0
  1694  036E  01A6               	clrf	___awdiv@sign
  1695  036F  1FA1               	btfss	___awdiv@divisor+1,7
  1696  0370  2B78               	goto	l1768
  1697  0371  09A0               	comf	___awdiv@divisor,f
  1698  0372  09A1               	comf	___awdiv@divisor+1,f
  1699  0373  0AA0               	incf	___awdiv@divisor,f
  1700  0374  1903               	skipnz
  1701  0375  0AA1               	incf	___awdiv@divisor+1,f
  1702  0376  01A6               	clrf	___awdiv@sign
  1703  0377  0AA6               	incf	___awdiv@sign,f
  1704  0378                     l1768:	
  1705  0378  1FA3               	btfss	___awdiv@dividend+1,7
  1706  0379  2B83               	goto	l1774
  1707  037A  09A2               	comf	___awdiv@dividend,f
  1708  037B  09A3               	comf	___awdiv@dividend+1,f
  1709  037C  0AA2               	incf	___awdiv@dividend,f
  1710  037D  1903               	skipnz
  1711  037E  0AA3               	incf	___awdiv@dividend+1,f
  1712  037F  3001               	movlw	1
  1713  0380  00A4               	movwf	??___awdiv
  1714  0381  0824               	movf	??___awdiv,w
  1715  0382  06A6               	xorwf	___awdiv@sign,f
  1716  0383                     l1774:	
  1717  0383  01A7               	clrf	___awdiv@quotient
  1718  0384  01A8               	clrf	___awdiv@quotient+1
  1719  0385  0821               	movf	___awdiv@divisor+1,w
  1720  0386  0420               	iorwf	___awdiv@divisor,w
  1721  0387  1903               	skipnz
  1722  0388  2BB2               	goto	l1796
  1723  0389  01A5               	clrf	___awdiv@counter
  1724  038A  0AA5               	incf	___awdiv@counter,f
  1725  038B                     l1784:	
  1726  038B  1BA1               	btfsc	___awdiv@divisor+1,7
  1727  038C  2B97               	goto	l1786
  1728  038D  3001               	movlw	1
  1729  038E                     u1265:	
  1730  038E  35A0               	lslf	___awdiv@divisor,f
  1731  038F  0DA1               	rlf	___awdiv@divisor+1,f
  1732  0390  0B89               	decfsz	9,f
  1733  0391  2B8E               	goto	u1265
  1734  0392  3001               	movlw	1
  1735  0393  00A4               	movwf	??___awdiv
  1736  0394  0824               	movf	??___awdiv,w
  1737  0395  07A5               	addwf	___awdiv@counter,f
  1738  0396  2B8B               	goto	l1784
  1739  0397                     l1786:	
  1740  0397  3001               	movlw	1
  1741  0398                     u1285:	
  1742  0398  35A7               	lslf	___awdiv@quotient,f
  1743  0399  0DA8               	rlf	___awdiv@quotient+1,f
  1744  039A  0B89               	decfsz	9,f
  1745  039B  2B98               	goto	u1285
  1746  039C  0821               	movf	___awdiv@divisor+1,w
  1747  039D  0223               	subwf	___awdiv@dividend+1,w
  1748  039E  1D03               	skipz
  1749  039F  2BA2               	goto	u1295
  1750  03A0  0820               	movf	___awdiv@divisor,w
  1751  03A1  0222               	subwf	___awdiv@dividend,w
  1752  03A2                     u1295:	
  1753  03A2  1C03               	skipc
  1754  03A3  2BA9               	goto	l1792
  1755  03A4  0820               	movf	___awdiv@divisor,w
  1756  03A5  02A2               	subwf	___awdiv@dividend,f
  1757  03A6  0821               	movf	___awdiv@divisor+1,w
  1758  03A7  3BA3               	subwfb	___awdiv@dividend+1,f
  1759  03A8  1427               	bsf	___awdiv@quotient,0
  1760  03A9                     l1792:	
  1761  03A9  3001               	movlw	1
  1762  03AA                     u1305:	
  1763  03AA  36A1               	lsrf	___awdiv@divisor+1,f
  1764  03AB  0CA0               	rrf	___awdiv@divisor,f
  1765  03AC  0B89               	decfsz	9,f
  1766  03AD  2BAA               	goto	u1305
  1767  03AE  3001               	movlw	1
  1768  03AF  02A5               	subwf	___awdiv@counter,f
  1769  03B0  1D03               	btfss	3,2
  1770  03B1  2B97               	goto	l1786
  1771  03B2                     l1796:	
  1772  03B2  0826               	movf	___awdiv@sign,w
  1773  03B3  1903               	btfsc	3,2
  1774  03B4  2BBA               	goto	l1800
  1775  03B5  09A7               	comf	___awdiv@quotient,f
  1776  03B6  09A8               	comf	___awdiv@quotient+1,f
  1777  03B7  0AA7               	incf	___awdiv@quotient,f
  1778  03B8  1903               	skipnz
  1779  03B9  0AA8               	incf	___awdiv@quotient+1,f
  1780  03BA                     l1800:	
  1781  03BA  0828               	movf	___awdiv@quotient+1,w
  1782  03BB  01A1               	clrf	?___awdiv+1
  1783  03BC  07A1               	addwf	?___awdiv+1,f
  1784  03BD  0827               	movf	___awdiv@quotient,w
  1785  03BE  01A0               	clrf	?___awdiv
  1786  03BF  07A0               	addwf	?___awdiv,f
  1787  03C0  0008               	return
  1788  03C1                     __end_of___awdiv:	
  1789                           
  1790                           	psect	text4
  1791  03C1                     __ptext4:	
  1792 ;; *************** function _RTC_Read *****************
  1793 ;; Defined at:
  1794 ;;		line 248 in file "PIC16F1827-I2C02.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  Reg             1    wreg     unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  Reg             1    9[BANK0 ] unsigned char 
  1799 ;;  ans             2   11[BANK0 ] int 
  1800 ;;  data            1   10[BANK0 ] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      unsigned char 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1810 ;;      Params:         0       0       0       0       0       0
  1811 ;;      Locals:         0       4       0       0       0       0
  1812 ;;      Temps:          0       1       0       0       0       0
  1813 ;;      Totals:         0       5       0       0       0       0
  1814 ;;Total ram usage:        5 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    4
  1817 ;; This function calls:
  1818 ;;		_I2C_Receive
  1819 ;;		_I2C_Send
  1820 ;;		_I2C_Start
  1821 ;;		_I2C_Stop
  1822 ;;		_I2C_rStart
  1823 ;; This function is called by:
  1824 ;;		_timeset
  1825 ;;		_display
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _RTC_Read
  1831  03C1                     _RTC_Read:	
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in _RTC_Read: [wreg+status,2+status,0+pclath+cstack]
  1835                           ;RTC_Read@Reg stored from wreg
  1836  03C1  0020               	movlb	0	; select bank0
  1837  03C2  00A9               	movwf	RTC_Read@Reg
  1838                           
  1839                           ;PIC16F1827-I2C02.c: 249: int ans;
  1840                           ;PIC16F1827-I2C02.c: 250: unsigned char data;
  1841                           ;PIC16F1827-I2C02.c: 252: ans = I2C_Start(0x68, 0);
  1842  03C3  3068               	movlw	104
  1843  03C4  00A2               	movwf	I2C_Start@adrs
  1844  03C5  3000               	movlw	0
  1845  03C6  00A3               	movwf	I2C_Start@adrs+1
  1846  03C7  3000               	movlw	0
  1847  03C8  00A4               	movwf	I2C_Start@rw
  1848  03C9  3000               	movlw	0
  1849  03CA  00A5               	movwf	I2C_Start@rw+1
  1850  03CB  3185  25B3  3183   	fcall	_I2C_Start
  1851  03CE  0020               	movlb	0	; select bank0
  1852  03CF  0823               	movf	?_I2C_Start+1,w
  1853  03D0  01AC               	clrf	RTC_Read@ans+1
  1854  03D1  07AC               	addwf	RTC_Read@ans+1,f
  1855  03D2  0822               	movf	?_I2C_Start,w
  1856  03D3  01AB               	clrf	RTC_Read@ans
  1857  03D4  07AB               	addwf	RTC_Read@ans,f
  1858                           
  1859                           ;PIC16F1827-I2C02.c: 253: if (ans == 0) {
  1860  03D5  082C               	movf	RTC_Read@ans+1,w
  1861  03D6  042B               	iorwf	RTC_Read@ans,w
  1862  03D7  1D03               	skipz
  1863  03D8  2BDD               	goto	l174
  1864                           
  1865                           ;PIC16F1827-I2C02.c: 255: I2C_Send(Reg);
  1866  03D9  0829               	movf	RTC_Read@Reg,w
  1867  03DA  3186  262B  3183   	fcall	_I2C_Send
  1868  03DD                     l174:	
  1869                           
  1870                           ;PIC16F1827-I2C02.c: 256: }
  1871                           ;PIC16F1827-I2C02.c: 257: ans = I2C_rStart(0x68, 1);
  1872  03DD  3068               	movlw	104
  1873  03DE  0020               	movlb	0	; select bank0
  1874  03DF  00A2               	movwf	I2C_rStart@adrs
  1875  03E0  3000               	movlw	0
  1876  03E1  00A3               	movwf	I2C_rStart@adrs+1
  1877  03E2  3001               	movlw	1
  1878  03E3  00A4               	movwf	I2C_rStart@rw
  1879  03E4  3000               	movlw	0
  1880  03E5  00A5               	movwf	I2C_rStart@rw+1
  1881  03E6  3185  258E  3183   	fcall	_I2C_rStart
  1882  03E9  0020               	movlb	0	; select bank0
  1883  03EA  0823               	movf	?_I2C_rStart+1,w
  1884  03EB  01AC               	clrf	RTC_Read@ans+1
  1885  03EC  07AC               	addwf	RTC_Read@ans+1,f
  1886  03ED  0822               	movf	?_I2C_rStart,w
  1887  03EE  01AB               	clrf	RTC_Read@ans
  1888  03EF  07AB               	addwf	RTC_Read@ans,f
  1889                           
  1890                           ;PIC16F1827-I2C02.c: 258: if (ans == 0) {
  1891  03F0  082C               	movf	RTC_Read@ans+1,w
  1892  03F1  042B               	iorwf	RTC_Read@ans,w
  1893  03F2  1D03               	skipz
  1894  03F3  2BFF               	goto	l175
  1895                           
  1896                           ;PIC16F1827-I2C02.c: 260: data = I2C_Receive(1);
  1897  03F4  3001               	movlw	1
  1898  03F5  00A2               	movwf	I2C_Receive@ack
  1899  03F6  3000               	movlw	0
  1900  03F7  00A3               	movwf	I2C_Receive@ack+1
  1901  03F8  3185  25D8  3183   	fcall	_I2C_Receive
  1902  03FB  0020               	movlb	0	; select bank0
  1903  03FC  00A8               	movwf	??_RTC_Read
  1904  03FD  0828               	movf	??_RTC_Read,w
  1905  03FE  00AA               	movwf	RTC_Read@data
  1906  03FF                     l175:	
  1907                           
  1908                           ;PIC16F1827-I2C02.c: 261: }
  1909                           ;PIC16F1827-I2C02.c: 262: I2C_Stop();
  1910  03FF  3186  269A  3183   	fcall	_I2C_Stop
  1911                           
  1912                           ;PIC16F1827-I2C02.c: 263: _delay((unsigned long)((26)*(8000000/4000000.0)));
  1913  0402  3011               	movlw	17
  1914  0403  0020               	movlb	0	; select bank0
  1915  0404  00A8               	movwf	??_RTC_Read
  1916  0405                     u1597:	
  1917  0405  0BA8               	decfsz	??_RTC_Read,f
  1918  0406  2C05               	goto	u1597
  1919                           
  1920                           ;PIC16F1827-I2C02.c: 264: return data;
  1921  0407  0020               	movlb	0	; select bank0
  1922  0408  082A               	movf	RTC_Read@data,w
  1923  0409  0008               	return
  1924  040A                     __end_of_RTC_Read:	
  1925                           
  1926                           	psect	text5
  1927  058E                     __ptext5:	
  1928 ;; *************** function _I2C_rStart *****************
  1929 ;; Defined at:
  1930 ;;		line 111 in file "PIC16F1827-I2C02.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  adrs            2    2[BANK0 ] int 
  1933 ;;  rw              2    4[BANK0 ] int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2    2[BANK0 ] int 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1945 ;;      Params:         0       4       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0
  1947 ;;      Temps:          0       2       0       0       0       0
  1948 ;;      Totals:         0       6       0       0       0       0
  1949 ;;Total ram usage:        6 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    3
  1952 ;; This function calls:
  1953 ;;		_I2C_IdleCheck
  1954 ;; This function is called by:
  1955 ;;		_RTC_Read
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _I2C_rStart
  1961  058E                     _I2C_rStart:	
  1962                           
  1963                           ;PIC16F1827-I2C02.c: 113: I2C_IdleCheck(0x5);
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  1967  058E  3005               	movlw	5
  1968  058F  3186  2685  3185   	fcall	_I2C_IdleCheck
  1969                           
  1970                           ;PIC16F1827-I2C02.c: 114: SSP1CON2bits.RSEN = 1;
  1971  0592  0024               	movlb	4	; select bank4
  1972  0593  1496               	bsf	22,1	;volatile
  1973                           
  1974                           ;PIC16F1827-I2C02.c: 116: I2C_IdleCheck(0x5);
  1975  0594  3005               	movlw	5
  1976  0595  3186  2685  3185   	fcall	_I2C_IdleCheck
  1977                           
  1978                           ;PIC16F1827-I2C02.c: 117: AckCheck = 1;
  1979  0598  3001               	movlw	1
  1980  0599  0020               	movlb	0	; select bank0
  1981  059A  00C8               	movwf	_AckCheck
  1982  059B  3000               	movlw	0
  1983  059C  00C9               	movwf	_AckCheck+1
  1984                           
  1985                           ;PIC16F1827-I2C02.c: 118: SSP1BUF = (char) ((adrs << 1) + rw);
  1986  059D  3522               	lslf	I2C_rStart@adrs,w
  1987  059E  0724               	addwf	I2C_rStart@rw,w
  1988  059F  0024               	movlb	4	; select bank4
  1989  05A0  0091               	movwf	17	;volatile
  1990  05A1                     l1706:	
  1991                           ;PIC16F1827-I2C02.c: 119: while (AckCheck);
  1992                           
  1993  05A1  0020               	movlb	0	; select bank0
  1994  05A2  0849               	movf	_AckCheck+1,w
  1995  05A3  0448               	iorwf	_AckCheck,w
  1996  05A4  1D03               	skipz
  1997  05A5  2DA1               	goto	l1706
  1998                           
  1999                           ;PIC16F1827-I2C02.c: 120: return SSP1CON2bits.ACKSTAT;
  2000  05A6  0024               	movlb	4	; select bank4
  2001  05A7  0E16               	swapf	22,w	;volatile
  2002  05A8  0C89               	rrf	9,f
  2003  05A9  0C89               	rrf	9,f
  2004  05AA  3901               	andlw	1
  2005  05AB  0020               	movlb	0	; select bank0
  2006  05AC  00A6               	movwf	??_I2C_rStart
  2007  05AD  01A7               	clrf	??_I2C_rStart+1
  2008  05AE  0826               	movf	??_I2C_rStart,w
  2009  05AF  00A2               	movwf	?_I2C_rStart
  2010  05B0  0827               	movf	??_I2C_rStart+1,w
  2011  05B1  00A3               	movwf	?_I2C_rStart+1
  2012  05B2  0008               	return
  2013  05B3                     __end_of_I2C_rStart:	
  2014                           
  2015                           	psect	text6
  2016  05D8                     __ptext6:	
  2017 ;; *************** function _I2C_Receive *****************
  2018 ;; Defined at:
  2019 ;;		line 137 in file "PIC16F1827-I2C02.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  ack             2    2[BANK0 ] int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  dt              1    5[BANK0 ] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      unsigned char 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2033 ;;      Params:         0       2       0       0       0       0
  2034 ;;      Locals:         0       1       0       0       0       0
  2035 ;;      Temps:          0       1       0       0       0       0
  2036 ;;      Totals:         0       4       0       0       0       0
  2037 ;;Total ram usage:        4 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    3
  2040 ;; This function calls:
  2041 ;;		_I2C_IdleCheck
  2042 ;; This function is called by:
  2043 ;;		_RTC_Read
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _I2C_Receive
  2049  05D8                     _I2C_Receive:	
  2050                           
  2051                           ;PIC16F1827-I2C02.c: 138: char dt;
  2052                           ;PIC16F1827-I2C02.c: 140: I2C_IdleCheck(0x5);
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  2056  05D8  3005               	movlw	5
  2057  05D9  3186  2685  3185   	fcall	_I2C_IdleCheck
  2058                           
  2059                           ;PIC16F1827-I2C02.c: 141: SSP1CON2bits.RCEN = 1;
  2060  05DC  0024               	movlb	4	; select bank4
  2061  05DD  1596               	bsf	22,3	;volatile
  2062                           
  2063                           ;PIC16F1827-I2C02.c: 142: I2C_IdleCheck(0x4);
  2064  05DE  3004               	movlw	4
  2065  05DF  3186  2685  3185   	fcall	_I2C_IdleCheck
  2066                           
  2067                           ;PIC16F1827-I2C02.c: 143: dt = SSP1BUF;
  2068  05E2  0024               	movlb	4	; select bank4
  2069  05E3  0811               	movf	17,w	;volatile
  2070  05E4  0020               	movlb	0	; select bank0
  2071  05E5  00A4               	movwf	??_I2C_Receive
  2072  05E6  0824               	movf	??_I2C_Receive,w
  2073  05E7  00A5               	movwf	I2C_Receive@dt
  2074                           
  2075                           ;PIC16F1827-I2C02.c: 144: I2C_IdleCheck(0x5);
  2076  05E8  3005               	movlw	5
  2077  05E9  3186  2685         	fcall	_I2C_IdleCheck
  2078                           
  2079                           ;PIC16F1827-I2C02.c: 145: SSP1CON2bits.ACKDT = ack;
  2080  05EB  0020               	movlb	0	; select bank0
  2081  05EC  0822               	movf	I2C_Receive@ack,w
  2082  05ED  0024               	movlb	4	; select bank4
  2083  05EE  1D03               	skipz
  2084  05EF  1696               	bsf	22,5	;volatile
  2085  05F0  1903               	skipnz
  2086  05F1  1296               	bcf	22,5	;volatile
  2087                           
  2088                           ;PIC16F1827-I2C02.c: 146: SSP1CON2bits.ACKEN = 1;
  2089  05F2  1616               	bsf	22,4	;volatile
  2090                           
  2091                           ;PIC16F1827-I2C02.c: 147: return dt;
  2092  05F3  0020               	movlb	0	; select bank0
  2093  05F4  0825               	movf	I2C_Receive@dt,w
  2094  05F5  0008               	return
  2095  05F6                     __end_of_I2C_Receive:	
  2096                           
  2097                           	psect	text7
  2098  0641                     __ptext7:	
  2099 ;; *************** function _LCD_SetCursor *****************
  2100 ;; Defined at:
  2101 ;;		line 168 in file "PIC16F1827-I2C02.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  col             2   12[BANK0 ] int 
  2104 ;;  row             2   14[BANK0 ] int 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  row_offsets     4   16[BANK0 ] int [2]
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2116 ;;      Params:         0       4       0       0       0       0
  2117 ;;      Locals:         0       4       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0
  2119 ;;      Totals:         0       8       0       0       0       0
  2120 ;;Total ram usage:        8 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    5
  2123 ;; This function calls:
  2124 ;;		_command
  2125 ;; This function is called by:
  2126 ;;		_timeset
  2127 ;;		_display
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _LCD_SetCursor
  2133  0641                     _LCD_SetCursor:	
  2134                           
  2135                           ;PIC16F1827-I2C02.c: 169: int row_offsets[] = {0x00, 0x40};
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2139  0641  0020               	movlb	0	; select bank0
  2140  0642  0858               	movf	LCD_SetCursor@F2889+3,w
  2141  0643  00B3               	movwf	LCD_SetCursor@row_offsets+3
  2142  0644  0857               	movf	LCD_SetCursor@F2889+2,w
  2143  0645  00B2               	movwf	LCD_SetCursor@row_offsets+2
  2144  0646  0856               	movf	LCD_SetCursor@F2889+1,w
  2145  0647  00B1               	movwf	LCD_SetCursor@row_offsets+1
  2146  0648  0855               	movf	LCD_SetCursor@F2889,w
  2147  0649  00B0               	movwf	LCD_SetCursor@row_offsets
  2148                           
  2149                           ;PIC16F1827-I2C02.c: 171: command(0x80 | (col + row_offsets[row]));
  2150  064A  352E               	lslf	LCD_SetCursor@row,w
  2151  064B  3E30               	addlw	LCD_SetCursor@row_offsets& (0+255)
  2152  064C  0086               	movwf	6
  2153  064D  0187               	clrf	7
  2154  064E  0801               	movf	1,w
  2155  064F  072C               	addwf	LCD_SetCursor@col,w
  2156  0650  3880               	iorlw	128
  2157  0651  3185  2564         	fcall	_command
  2158  0653  0008               	return
  2159  0654                     __end_of_LCD_SetCursor:	
  2160                           
  2161                           	psect	text8
  2162  0510                     __ptext8:	
  2163 ;; *************** function _LCD_Putc *****************
  2164 ;; Defined at:
  2165 ;;		line 174 in file "PIC16F1827-I2C02.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  c               1    wreg     unsigned char 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  c               1    9[BANK0 ] unsigned char 
  2170 ;;  ans             2   10[BANK0 ] int 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;		None               void
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, pclath, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2180 ;;      Params:         0       0       0       0       0       0
  2181 ;;      Locals:         0       3       0       0       0       0
  2182 ;;      Temps:          0       1       0       0       0       0
  2183 ;;      Totals:         0       4       0       0       0       0
  2184 ;;Total ram usage:        4 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    4
  2187 ;; This function calls:
  2188 ;;		_I2C_Send
  2189 ;;		_I2C_Start
  2190 ;;		_I2C_Stop
  2191 ;; This function is called by:
  2192 ;;		_timeset
  2193 ;;		_display
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _LCD_Putc
  2199  0510                     _LCD_Putc:	
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  2203                           ;LCD_Putc@c stored from wreg
  2204  0510  0020               	movlb	0	; select bank0
  2205  0511  00A9               	movwf	LCD_Putc@c
  2206                           
  2207                           ;PIC16F1827-I2C02.c: 175: int ans;
  2208                           ;PIC16F1827-I2C02.c: 177: ans = I2C_Start(0x3E, 0);
  2209  0512  303E               	movlw	62
  2210  0513  00A2               	movwf	I2C_Start@adrs
  2211  0514  3000               	movlw	0
  2212  0515  00A3               	movwf	I2C_Start@adrs+1
  2213  0516  3000               	movlw	0
  2214  0517  00A4               	movwf	I2C_Start@rw
  2215  0518  3000               	movlw	0
  2216  0519  00A5               	movwf	I2C_Start@rw+1
  2217  051A  3185  25B3  3185   	fcall	_I2C_Start
  2218  051D  0020               	movlb	0	; select bank0
  2219  051E  0823               	movf	?_I2C_Start+1,w
  2220  051F  01AB               	clrf	LCD_Putc@ans+1
  2221  0520  07AB               	addwf	LCD_Putc@ans+1,f
  2222  0521  0822               	movf	?_I2C_Start,w
  2223  0522  01AA               	clrf	LCD_Putc@ans
  2224  0523  07AA               	addwf	LCD_Putc@ans,f
  2225                           
  2226                           ;PIC16F1827-I2C02.c: 178: if (ans == 0) {
  2227  0524  082B               	movf	LCD_Putc@ans+1,w
  2228  0525  042A               	iorwf	LCD_Putc@ans,w
  2229  0526  1D03               	skipz
  2230  0527  2D31               	goto	l150
  2231                           
  2232                           ;PIC16F1827-I2C02.c: 180: I2C_Send(0b11000000);
  2233  0528  30C0               	movlw	192
  2234  0529  3186  262B  3185   	fcall	_I2C_Send
  2235                           
  2236                           ;PIC16F1827-I2C02.c: 181: I2C_Send(c);
  2237  052C  0020               	movlb	0	; select bank0
  2238  052D  0829               	movf	LCD_Putc@c,w
  2239  052E  3186  262B  3185   	fcall	_I2C_Send
  2240  0531                     l150:	
  2241                           
  2242                           ;PIC16F1827-I2C02.c: 182: }
  2243                           ;PIC16F1827-I2C02.c: 183: I2C_Stop();
  2244  0531  3186  269A  3185   	fcall	_I2C_Stop
  2245                           
  2246                           ;PIC16F1827-I2C02.c: 184: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2247  0534  3011               	movlw	17
  2248  0535  0020               	movlb	0	; select bank0
  2249  0536  00A8               	movwf	??_LCD_Putc
  2250  0537                     u1607:	
  2251  0537  0BA8               	decfsz	??_LCD_Putc,f
  2252  0538  2D37               	goto	u1607
  2253  0539  0008               	return
  2254  053A                     __end_of_LCD_Putc:	
  2255                           
  2256                           	psect	text9
  2257  0654                     __ptext9:	
  2258 ;; *************** function ___bmul *****************
  2259 ;; Defined at:
  2260 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  multiplier      1    wreg     unsigned char 
  2263 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  multiplier      1   12[BANK0 ] unsigned char 
  2266 ;;  product         1   11[BANK0 ] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      unsigned char 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2276 ;;      Params:         0       1       0       0       0       0
  2277 ;;      Locals:         0       2       0       0       0       0
  2278 ;;      Temps:          0       1       0       0       0       0
  2279 ;;      Totals:         0       4       0       0       0       0
  2280 ;;Total ram usage:        4 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_timeset
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function ___bmul
  2292  0654                     ___bmul:	
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2296                           ;___bmul@multiplier stored from wreg
  2297  0654  0020               	movlb	0	; select bank0
  2298  0655  00AC               	movwf	___bmul@multiplier
  2299  0656  01AB               	clrf	___bmul@product
  2300  0657                     l1364:	
  2301  0657  1C2C               	btfss	___bmul@multiplier,0
  2302  0658  2E5D               	goto	l1368
  2303  0659  0829               	movf	___bmul@multiplicand,w
  2304  065A  00AA               	movwf	??___bmul
  2305  065B  082A               	movf	??___bmul,w
  2306  065C  07AB               	addwf	___bmul@product,f
  2307  065D                     l1368:	
  2308  065D  1003               	clrc
  2309  065E  0DA9               	rlf	___bmul@multiplicand,f
  2310  065F  1003               	clrc
  2311  0660  0CAC               	rrf	___bmul@multiplier,f
  2312  0661  08AC               	movf	___bmul@multiplier,f
  2313  0662  1D03               	skipz
  2314  0663  2E57               	goto	l1364
  2315  0664  082B               	movf	___bmul@product,w
  2316  0665  0008               	return
  2317  0666                     __end_of___bmul:	
  2318                           
  2319                           	psect	text10
  2320  040A                     __ptext10:	
  2321 ;; *************** function ___awmod *****************
  2322 ;; Defined at:
  2323 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  divisor         2    0[BANK0 ] int 
  2326 ;;  dividend        2    2[BANK0 ] int 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  sign            1    6[BANK0 ] unsigned char 
  2329 ;;  counter         1    5[BANK0 ] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  2    0[BANK0 ] int 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2339 ;;      Params:         0       4       0       0       0       0
  2340 ;;      Locals:         0       2       0       0       0       0
  2341 ;;      Temps:          0       1       0       0       0       0
  2342 ;;      Totals:         0       7       0       0       0       0
  2343 ;;Total ram usage:        7 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    2
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_timeset
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function ___awmod
  2355  040A                     ___awmod:	
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2359  040A  0020               	movlb	0	; select bank0
  2360  040B  01A6               	clrf	___awmod@sign
  2361  040C  1FA3               	btfss	___awmod@dividend+1,7
  2362  040D  2C15               	goto	l1862
  2363  040E  09A2               	comf	___awmod@dividend,f
  2364  040F  09A3               	comf	___awmod@dividend+1,f
  2365  0410  0AA2               	incf	___awmod@dividend,f
  2366  0411  1903               	skipnz
  2367  0412  0AA3               	incf	___awmod@dividend+1,f
  2368  0413  01A6               	clrf	___awmod@sign
  2369  0414  0AA6               	incf	___awmod@sign,f
  2370  0415                     l1862:	
  2371  0415  1FA1               	btfss	___awmod@divisor+1,7
  2372  0416  2C1C               	goto	l1866
  2373  0417  09A0               	comf	___awmod@divisor,f
  2374  0418  09A1               	comf	___awmod@divisor+1,f
  2375  0419  0AA0               	incf	___awmod@divisor,f
  2376  041A  1903               	skipnz
  2377  041B  0AA1               	incf	___awmod@divisor+1,f
  2378  041C                     l1866:	
  2379  041C  0821               	movf	___awmod@divisor+1,w
  2380  041D  0420               	iorwf	___awmod@divisor,w
  2381  041E  1903               	skipnz
  2382  041F  2C43               	goto	l1884
  2383  0420  01A5               	clrf	___awmod@counter
  2384  0421  0AA5               	incf	___awmod@counter,f
  2385  0422                     l1874:	
  2386  0422  1BA1               	btfsc	___awmod@divisor+1,7
  2387  0423  2C2E               	goto	l1876
  2388  0424  3001               	movlw	1
  2389  0425                     u1395:	
  2390  0425  35A0               	lslf	___awmod@divisor,f
  2391  0426  0DA1               	rlf	___awmod@divisor+1,f
  2392  0427  0B89               	decfsz	9,f
  2393  0428  2C25               	goto	u1395
  2394  0429  3001               	movlw	1
  2395  042A  00A4               	movwf	??___awmod
  2396  042B  0824               	movf	??___awmod,w
  2397  042C  07A5               	addwf	___awmod@counter,f
  2398  042D  2C22               	goto	l1874
  2399  042E                     l1876:	
  2400  042E  0821               	movf	___awmod@divisor+1,w
  2401  042F  0223               	subwf	___awmod@dividend+1,w
  2402  0430  1D03               	skipz
  2403  0431  2C34               	goto	u1415
  2404  0432  0820               	movf	___awmod@divisor,w
  2405  0433  0222               	subwf	___awmod@dividend,w
  2406  0434                     u1415:	
  2407  0434  1C03               	skipc
  2408  0435  2C3A               	goto	l1880
  2409  0436  0820               	movf	___awmod@divisor,w
  2410  0437  02A2               	subwf	___awmod@dividend,f
  2411  0438  0821               	movf	___awmod@divisor+1,w
  2412  0439  3BA3               	subwfb	___awmod@dividend+1,f
  2413  043A                     l1880:	
  2414  043A  3001               	movlw	1
  2415  043B                     u1425:	
  2416  043B  36A1               	lsrf	___awmod@divisor+1,f
  2417  043C  0CA0               	rrf	___awmod@divisor,f
  2418  043D  0B89               	decfsz	9,f
  2419  043E  2C3B               	goto	u1425
  2420  043F  3001               	movlw	1
  2421  0440  02A5               	subwf	___awmod@counter,f
  2422  0441  1D03               	btfss	3,2
  2423  0442  2C2E               	goto	l1876
  2424  0443                     l1884:	
  2425  0443  0826               	movf	___awmod@sign,w
  2426  0444  1903               	btfsc	3,2
  2427  0445  2C4B               	goto	l1888
  2428  0446  09A2               	comf	___awmod@dividend,f
  2429  0447  09A3               	comf	___awmod@dividend+1,f
  2430  0448  0AA2               	incf	___awmod@dividend,f
  2431  0449  1903               	skipnz
  2432  044A  0AA3               	incf	___awmod@dividend+1,f
  2433  044B                     l1888:	
  2434  044B  0823               	movf	___awmod@dividend+1,w
  2435  044C  01A1               	clrf	?___awmod+1
  2436  044D  07A1               	addwf	?___awmod+1,f
  2437  044E  0822               	movf	___awmod@dividend,w
  2438  044F  01A0               	clrf	?___awmod
  2439  0450  07A0               	addwf	?___awmod,f
  2440  0451  0008               	return
  2441  0452                     __end_of___awmod:	
  2442                           
  2443                           	psect	text11
  2444  053A                     __ptext11:	
  2445 ;; *************** function _RTC_Write *****************
  2446 ;; Defined at:
  2447 ;;		line 235 in file "PIC16F1827-I2C02.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  Reg             1    wreg     unsigned char 
  2450 ;;  c               1    8[BANK0 ] unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  Reg             1   10[BANK0 ] unsigned char 
  2453 ;;  ans             2   11[BANK0 ] int 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;		None               void
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0, pclath, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2463 ;;      Params:         0       1       0       0       0       0
  2464 ;;      Locals:         0       3       0       0       0       0
  2465 ;;      Temps:          0       1       0       0       0       0
  2466 ;;      Totals:         0       5       0       0       0       0
  2467 ;;Total ram usage:        5 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    4
  2470 ;; This function calls:
  2471 ;;		_I2C_Send
  2472 ;;		_I2C_Start
  2473 ;;		_I2C_Stop
  2474 ;; This function is called by:
  2475 ;;		_timeset
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _RTC_Write
  2482  053A                     _RTC_Write:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _RTC_Write: [wreg+status,2+status,0+pclath+cstack]
  2486                           ;RTC_Write@Reg stored from wreg
  2487  053A  0020               	movlb	0	; select bank0
  2488  053B  00AA               	movwf	RTC_Write@Reg
  2489                           
  2490                           ;PIC16F1827-I2C02.c: 236: int ans;
  2491                           ;PIC16F1827-I2C02.c: 238: ans = I2C_Start(0x68, 0);
  2492  053C  3068               	movlw	104
  2493  053D  00A2               	movwf	I2C_Start@adrs
  2494  053E  3000               	movlw	0
  2495  053F  00A3               	movwf	I2C_Start@adrs+1
  2496  0540  3000               	movlw	0
  2497  0541  00A4               	movwf	I2C_Start@rw
  2498  0542  3000               	movlw	0
  2499  0543  00A5               	movwf	I2C_Start@rw+1
  2500  0544  3185  25B3  3185   	fcall	_I2C_Start
  2501  0547  0020               	movlb	0	; select bank0
  2502  0548  0823               	movf	?_I2C_Start+1,w
  2503  0549  01AC               	clrf	RTC_Write@ans+1
  2504  054A  07AC               	addwf	RTC_Write@ans+1,f
  2505  054B  0822               	movf	?_I2C_Start,w
  2506  054C  01AB               	clrf	RTC_Write@ans
  2507  054D  07AB               	addwf	RTC_Write@ans,f
  2508                           
  2509                           ;PIC16F1827-I2C02.c: 239: if (ans == 0) {
  2510  054E  082C               	movf	RTC_Write@ans+1,w
  2511  054F  042B               	iorwf	RTC_Write@ans,w
  2512  0550  1D03               	skipz
  2513  0551  2D5B               	goto	l170
  2514                           
  2515                           ;PIC16F1827-I2C02.c: 241: I2C_Send(Reg);
  2516  0552  082A               	movf	RTC_Write@Reg,w
  2517  0553  3186  262B  3185   	fcall	_I2C_Send
  2518                           
  2519                           ;PIC16F1827-I2C02.c: 242: I2C_Send(c);
  2520  0556  0020               	movlb	0	; select bank0
  2521  0557  0828               	movf	RTC_Write@c,w
  2522  0558  3186  262B  3185   	fcall	_I2C_Send
  2523  055B                     l170:	
  2524                           
  2525                           ;PIC16F1827-I2C02.c: 243: }
  2526                           ;PIC16F1827-I2C02.c: 244: I2C_Stop();
  2527  055B  3186  269A  3185   	fcall	_I2C_Stop
  2528                           
  2529                           ;PIC16F1827-I2C02.c: 245: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2530  055E  3011               	movlw	17
  2531  055F  0020               	movlb	0	; select bank0
  2532  0560  00A9               	movwf	??_RTC_Write
  2533  0561                     u1617:	
  2534  0561  0BA9               	decfsz	??_RTC_Write,f
  2535  0562  2D61               	goto	u1617
  2536  0563  0008               	return
  2537  0564                     __end_of_RTC_Write:	
  2538                           
  2539                           	psect	text12
  2540  04D6                     __ptext12:	
  2541 ;; *************** function _LCD_Puts *****************
  2542 ;; Defined at:
  2543 ;;		line 187 in file "PIC16F1827-I2C02.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2546 ;;		 -> STR_1(3), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  ans             2   11[BANK0 ] int 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2558 ;;      Params:         0       2       0       0       0       0
  2559 ;;      Locals:         0       2       0       0       0       0
  2560 ;;      Temps:          0       1       0       0       0       0
  2561 ;;      Totals:         0       5       0       0       0       0
  2562 ;;Total ram usage:        5 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    4
  2565 ;; This function calls:
  2566 ;;		_I2C_Send
  2567 ;;		_I2C_Start
  2568 ;;		_I2C_Stop
  2569 ;; This function is called by:
  2570 ;;		_timeset
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _LCD_Puts
  2576  04D6                     _LCD_Puts:	
  2577                           
  2578                           ;PIC16F1827-I2C02.c: 188: int ans;
  2579                           ;PIC16F1827-I2C02.c: 190: ans = I2C_Start(0x3E, 0);
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2583  04D6  303E               	movlw	62
  2584  04D7  0020               	movlb	0	; select bank0
  2585  04D8  00A2               	movwf	I2C_Start@adrs
  2586  04D9  3000               	movlw	0
  2587  04DA  00A3               	movwf	I2C_Start@adrs+1
  2588  04DB  3000               	movlw	0
  2589  04DC  00A4               	movwf	I2C_Start@rw
  2590  04DD  3000               	movlw	0
  2591  04DE  00A5               	movwf	I2C_Start@rw+1
  2592  04DF  3185  25B3  3184   	fcall	_I2C_Start
  2593  04E2  0020               	movlb	0	; select bank0
  2594  04E3  0823               	movf	?_I2C_Start+1,w
  2595  04E4  01AC               	clrf	LCD_Puts@ans+1
  2596  04E5  07AC               	addwf	LCD_Puts@ans+1,f
  2597  04E6  0822               	movf	?_I2C_Start,w
  2598  04E7  01AB               	clrf	LCD_Puts@ans
  2599  04E8  07AB               	addwf	LCD_Puts@ans,f
  2600                           
  2601                           ;PIC16F1827-I2C02.c: 191: if (ans == 0) {
  2602  04E9  082C               	movf	LCD_Puts@ans+1,w
  2603  04EA  042B               	iorwf	LCD_Puts@ans,w
  2604  04EB  1D03               	skipz
  2605  04EC  2D0D               	goto	l1822
  2606                           
  2607                           ;PIC16F1827-I2C02.c: 192: I2C_Send(0b01000000);
  2608  04ED  3040               	movlw	64
  2609  04EE  3186  262B  3184   	fcall	_I2C_Send
  2610  04F1                     l1820:	
  2611                           ;PIC16F1827-I2C02.c: 193: while (*s) {
  2612                           
  2613  04F1  0020               	movlb	0	; select bank0
  2614  04F2  0828               	movf	LCD_Puts@s,w
  2615  04F3  0084               	movwf	4
  2616  04F4  0829               	movf	LCD_Puts@s+1,w
  2617  04F5  0085               	movwf	5
  2618  04F6  0800               	movf	0,w	;code access
  2619  04F7  3800               	iorlw	0
  2620  04F8  1903               	btfsc	3,2
  2621  04F9  2D0D               	goto	l1822
  2622                           
  2623                           ;PIC16F1827-I2C02.c: 194: I2C_Send(*s++);
  2624  04FA  0020               	movlb	0	; select bank0
  2625  04FB  0828               	movf	LCD_Puts@s,w
  2626  04FC  0084               	movwf	4
  2627  04FD  0829               	movf	LCD_Puts@s+1,w
  2628  04FE  0085               	movwf	5
  2629  04FF  0800               	movf	0,w	;code access
  2630  0500  3186  262B  3184   	fcall	_I2C_Send
  2631  0503  3001               	movlw	1
  2632  0504  0020               	movlb	0	; select bank0
  2633  0505  07A8               	addwf	LCD_Puts@s,f
  2634  0506  3000               	movlw	0
  2635  0507  3DA9               	addwfc	LCD_Puts@s+1,f
  2636                           
  2637                           ;PIC16F1827-I2C02.c: 195: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2638  0508  3011               	movlw	17
  2639  0509  00AA               	movwf	??_LCD_Puts
  2640  050A                     u1627:	
  2641  050A  0BAA               	decfsz	??_LCD_Puts,f
  2642  050B  2D0A               	goto	u1627
  2643  050C  2CF1               	goto	l1820
  2644  050D                     l1822:	
  2645                           
  2646                           ;PIC16F1827-I2C02.c: 196: }
  2647                           ;PIC16F1827-I2C02.c: 197: }
  2648                           ;PIC16F1827-I2C02.c: 198: I2C_Stop();
  2649  050D  3186  269A         	fcall	_I2C_Stop
  2650  050F  0008               	return
  2651  0510                     __end_of_LCD_Puts:	
  2652                           
  2653                           	psect	text13
  2654  05F6                     __ptext13:	
  2655 ;; *************** function _month_length *****************
  2656 ;; Defined at:
  2657 ;;		line 267 in file "PIC16F1827-I2C02.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  year            1    wreg     unsigned char 
  2660 ;;  month           1    0[BANK0 ] unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  year            1    1[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      unsigned char 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2672 ;;      Params:         0       1       0       0       0       0
  2673 ;;      Locals:         0       1       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0
  2675 ;;      Totals:         0       2       0       0       0       0
  2676 ;;Total ram usage:        2 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    2
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _month_length
  2688  05F6                     _month_length:	
  2689                           
  2690                           ;incstack = 0
  2691                           ; Regs used in _month_length: [wreg-fsr0h+status,2+status,0]
  2692                           ;month_length@year stored from wreg
  2693  05F6  0020               	movlb	0	; select bank0
  2694  05F7  00A1               	movwf	month_length@year
  2695                           
  2696                           ;PIC16F1827-I2C02.c: 268: switch (month) {
  2697  05F8  2E05               	goto	l1950
  2698  05F9                     l1930:	
  2699                           ;PIC16F1827-I2C02.c: 269: case 1:
  2700                           
  2701                           
  2702                           ;PIC16F1827-I2C02.c: 270: case 3:
  2703                           ;PIC16F1827-I2C02.c: 271: case 5:
  2704                           ;PIC16F1827-I2C02.c: 272: case 7:
  2705                           ;PIC16F1827-I2C02.c: 273: case 8:
  2706                           ;PIC16F1827-I2C02.c: 274: case 10:
  2707                           ;PIC16F1827-I2C02.c: 275: case 12:
  2708                           ;PIC16F1827-I2C02.c: 276: return 31;
  2709  05F9  301F               	movlw	31
  2710  05FA  0008               	return
  2711  05FB                     l1934:	
  2712                           ;PIC16F1827-I2C02.c: 277: case 4:
  2713                           
  2714                           
  2715                           ;PIC16F1827-I2C02.c: 278: case 6:
  2716                           ;PIC16F1827-I2C02.c: 279: case 9:
  2717                           ;PIC16F1827-I2C02.c: 280: case 11:
  2718                           ;PIC16F1827-I2C02.c: 281: return 30;
  2719  05FB  301E               	movlw	30
  2720  05FC  0008               	return
  2721  05FD                     l1938:	
  2722                           ;PIC16F1827-I2C02.c: 282: case 2:
  2723                           
  2724                           
  2725                           ;PIC16F1827-I2C02.c: 283: if (year % 4 == 0) return 29;
  2726  05FD  0821               	movf	month_length@year,w
  2727  05FE  3903               	andlw	3
  2728  05FF  1D03               	btfss	3,2
  2729  0600  2E03               	goto	l1946
  2730  0601  301D               	movlw	29
  2731  0602  0008               	return
  2732  0603                     l1946:	
  2733                           
  2734                           ;PIC16F1827-I2C02.c: 284: else return 28;
  2735  0603  301C               	movlw	28
  2736                           
  2737                           ;PIC16F1827-I2C02.c: 285: }
  2738  0604  0008               	return
  2739  0605                     l1950:	
  2740  0605  0820               	movf	month_length@month,w
  2741                           
  2742                           ; Switch size 1, requested type "space"
  2743                           ; Number of cases is 12, Range of values is 1 to 12
  2744                           ; switch strategies available:
  2745                           ; Name         Instructions Cycles
  2746                           ; direct_byte           33     9 (fixed)
  2747                           ; simple_byte           37    19 (average)
  2748                           ; jumptable            263     9 (fixed)
  2749                           ;	Chosen strategy is direct_byte
  2750  0606  3EFF               	addlw	-1
  2751  0607  1C03               	skipc
  2752  0608  0008               	return
  2753  0609  0084               	movwf	4
  2754  060A  300C               	movlw	12
  2755  060B  0204               	subwf	4,w
  2756  060C  1803               	skipnc
  2757  060D  0008               	return
  2758  060E  3186               	movlp	high S2108
  2759  060F  3504               	lslf	4,w
  2760  0610  3E13               	addlw	low S2108
  2761  0611  0082               	movwf	2
  2762  0612  0008               	return
  2763  0613                     __end_of_month_length:	
  2764                           
  2765                           	psect	swtext1
  2766  0613                     __pswtext1:	
  2767  0613                     S2108:	
  2768  0613  3185  2DF9         	ljmp	l1930
  2769  0615  3185  2DFD         	ljmp	l1938
  2770  0617  3185  2DF9         	ljmp	l1930
  2771  0619  3185  2DFB         	ljmp	l1934
  2772  061B  3185  2DF9         	ljmp	l1930
  2773  061D  3185  2DFB         	ljmp	l1934
  2774  061F  3185  2DF9         	ljmp	l1930
  2775  0621  3185  2DF9         	ljmp	l1930
  2776  0623  3185  2DFB         	ljmp	l1934
  2777  0625  3185  2DF9         	ljmp	l1930
  2778  0627  3185  2DFB         	ljmp	l1934
  2779  0629  3185  2DF9         	ljmp	l1930
  2780                           
  2781                           	psect	text14
  2782  0498                     __ptext14:	
  2783 ;; *************** function _LCD_Init *****************
  2784 ;; Defined at:
  2785 ;;		line 220 in file "PIC16F1827-I2C02.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2799 ;;      Params:         0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0
  2801 ;;      Temps:          0       3       0       0       0       0
  2802 ;;      Totals:         0       3       0       0       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    6
  2806 ;; This function calls:
  2807 ;;		_LCD_Clear
  2808 ;;		_command
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _LCD_Init
  2816  0498                     _LCD_Init:	
  2817                           
  2818                           ;PIC16F1827-I2C02.c: 221: _delay((unsigned long)((40)*(8000000/4000.0)));
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2822  0498  3068               	movlw	104
  2823  0499  0020               	movlb	0	; select bank0
  2824  049A  00AF               	movwf	??_LCD_Init+1
  2825  049B  30E4               	movlw	228
  2826  049C  00AE               	movwf	??_LCD_Init
  2827  049D                     u1637:	
  2828  049D  0BAE               	decfsz	??_LCD_Init,f
  2829  049E  2C9D               	goto	u1637
  2830  049F  0BAF               	decfsz	??_LCD_Init+1,f
  2831  04A0  2C9D               	goto	u1637
  2832  04A1  0000               	nop
  2833                           
  2834                           ;PIC16F1827-I2C02.c: 222: command(0x38);
  2835  04A2  3038               	movlw	56
  2836  04A3  3185  2564  3184   	fcall	_command
  2837                           
  2838                           ;PIC16F1827-I2C02.c: 223: command(0x39);
  2839  04A6  3039               	movlw	57
  2840  04A7  3185  2564  3184   	fcall	_command
  2841                           
  2842                           ;PIC16F1827-I2C02.c: 224: command(0x14);
  2843  04AA  3014               	movlw	20
  2844  04AB  3185  2564  3184   	fcall	_command
  2845                           
  2846                           ;PIC16F1827-I2C02.c: 225: command(0x70);
  2847  04AE  3070               	movlw	112
  2848  04AF  3185  2564  3184   	fcall	_command
  2849                           
  2850                           ;PIC16F1827-I2C02.c: 226: command(0x56);
  2851  04B2  3056               	movlw	86
  2852  04B3  3185  2564  3184   	fcall	_command
  2853                           
  2854                           ;PIC16F1827-I2C02.c: 227: command(0x6C);
  2855  04B6  306C               	movlw	108
  2856  04B7  3185  2564  3184   	fcall	_command
  2857                           
  2858                           ;PIC16F1827-I2C02.c: 228: _delay((unsigned long)((200)*(8000000/4000.0)));
  2859  04BA  3003               	movlw	3
  2860  04BB  0020               	movlb	0	; select bank0
  2861  04BC  00B0               	movwf	??_LCD_Init+2
  2862  04BD  3008               	movlw	8
  2863  04BE  00AF               	movwf	??_LCD_Init+1
  2864  04BF  3078               	movlw	120
  2865  04C0  00AE               	movwf	??_LCD_Init
  2866  04C1                     u1647:	
  2867  04C1  0BAE               	decfsz	??_LCD_Init,f
  2868  04C2  2CC1               	goto	u1647
  2869  04C3  0BAF               	decfsz	??_LCD_Init+1,f
  2870  04C4  2CC1               	goto	u1647
  2871  04C5  0BB0               	decfsz	??_LCD_Init+2,f
  2872  04C6  2CC1               	goto	u1647
  2873                           
  2874                           ;PIC16F1827-I2C02.c: 229: command(0x38);
  2875  04C7  3038               	movlw	56
  2876  04C8  3185  2564  3184   	fcall	_command
  2877                           
  2878                           ;PIC16F1827-I2C02.c: 230: command(0x0C);
  2879  04CB  300C               	movlw	12
  2880  04CC  3185  2564  3184   	fcall	_command
  2881                           
  2882                           ;PIC16F1827-I2C02.c: 231: command(0x06);
  2883  04CF  3006               	movlw	6
  2884  04D0  3185  2564  3184   	fcall	_command
  2885                           
  2886                           ;PIC16F1827-I2C02.c: 232: LCD_Clear();
  2887  04D3  3186  2676         	fcall	_LCD_Clear
  2888  04D5  0008               	return
  2889  04D6                     __end_of_LCD_Init:	
  2890                           
  2891                           	psect	text15
  2892  0676                     __ptext15:	
  2893 ;; *************** function _LCD_Clear *****************
  2894 ;; Defined at:
  2895 ;;		line 163 in file "PIC16F1827-I2C02.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;		None               void
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2909 ;;      Params:         0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0
  2911 ;;      Temps:          0       2       0       0       0       0
  2912 ;;      Totals:         0       2       0       0       0       0
  2913 ;;Total ram usage:        2 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    5
  2916 ;; This function calls:
  2917 ;;		_command
  2918 ;; This function is called by:
  2919 ;;		_LCD_Init
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _LCD_Clear
  2925  0676                     _LCD_Clear:	
  2926                           
  2927                           ;PIC16F1827-I2C02.c: 164: command(0x01);
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2931  0676  3001               	movlw	1
  2932  0677  3185  2564  3186   	fcall	_command
  2933                           
  2934                           ;PIC16F1827-I2C02.c: 165: _delay((unsigned long)((1100)*(8000000/4000000.0)));
  2935  067A  3003               	movlw	3
  2936  067B  0020               	movlb	0	; select bank0
  2937  067C  00AD               	movwf	??_LCD_Clear+1
  2938  067D  30DA               	movlw	218
  2939  067E  00AC               	movwf	??_LCD_Clear
  2940  067F                     u1657:	
  2941  067F  0BAC               	decfsz	??_LCD_Clear,f
  2942  0680  2E7F               	goto	u1657
  2943  0681  0BAD               	decfsz	??_LCD_Clear+1,f
  2944  0682  2E7F               	goto	u1657
  2945  0683  0000               	nop
  2946  0684  0008               	return
  2947  0685                     __end_of_LCD_Clear:	
  2948                           
  2949                           	psect	text16
  2950  0564                     __ptext16:	
  2951 ;; *************** function _command *****************
  2952 ;; Defined at:
  2953 ;;		line 150 in file "PIC16F1827-I2C02.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  c               1    wreg     unsigned char 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  c               1    9[BANK0 ] unsigned char 
  2958 ;;  ans             2   10[BANK0 ] int 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2968 ;;      Params:         0       0       0       0       0       0
  2969 ;;      Locals:         0       3       0       0       0       0
  2970 ;;      Temps:          0       1       0       0       0       0
  2971 ;;      Totals:         0       4       0       0       0       0
  2972 ;;Total ram usage:        4 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    4
  2975 ;; This function calls:
  2976 ;;		_I2C_Send
  2977 ;;		_I2C_Start
  2978 ;;		_I2C_Stop
  2979 ;; This function is called by:
  2980 ;;		_LCD_Clear
  2981 ;;		_LCD_SetCursor
  2982 ;;		_LCD_Init
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _command
  2988  0564                     _command:	
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  2992                           ;command@c stored from wreg
  2993  0564  0020               	movlb	0	; select bank0
  2994  0565  00A9               	movwf	command@c
  2995                           
  2996                           ;PIC16F1827-I2C02.c: 151: int ans;
  2997                           ;PIC16F1827-I2C02.c: 153: ans = I2C_Start(0x3E, 0);
  2998  0566  303E               	movlw	62
  2999  0567  00A2               	movwf	I2C_Start@adrs
  3000  0568  3000               	movlw	0
  3001  0569  00A3               	movwf	I2C_Start@adrs+1
  3002  056A  3000               	movlw	0
  3003  056B  00A4               	movwf	I2C_Start@rw
  3004  056C  3000               	movlw	0
  3005  056D  00A5               	movwf	I2C_Start@rw+1
  3006  056E  3185  25B3  3185   	fcall	_I2C_Start
  3007  0571  0020               	movlb	0	; select bank0
  3008  0572  0823               	movf	?_I2C_Start+1,w
  3009  0573  01AB               	clrf	command@ans+1
  3010  0574  07AB               	addwf	command@ans+1,f
  3011  0575  0822               	movf	?_I2C_Start,w
  3012  0576  01AA               	clrf	command@ans
  3013  0577  07AA               	addwf	command@ans,f
  3014                           
  3015                           ;PIC16F1827-I2C02.c: 154: if (ans == 0) {
  3016  0578  082B               	movf	command@ans+1,w
  3017  0579  042A               	iorwf	command@ans,w
  3018  057A  1D03               	skipz
  3019  057B  2D85               	goto	l138
  3020                           
  3021                           ;PIC16F1827-I2C02.c: 156: I2C_Send(0b10000000);
  3022  057C  3080               	movlw	128
  3023  057D  3186  262B  3185   	fcall	_I2C_Send
  3024                           
  3025                           ;PIC16F1827-I2C02.c: 157: I2C_Send(c);
  3026  0580  0020               	movlb	0	; select bank0
  3027  0581  0829               	movf	command@c,w
  3028  0582  3186  262B  3185   	fcall	_I2C_Send
  3029  0585                     l138:	
  3030                           
  3031                           ;PIC16F1827-I2C02.c: 158: }
  3032                           ;PIC16F1827-I2C02.c: 159: I2C_Stop();
  3033  0585  3186  269A  3185   	fcall	_I2C_Stop
  3034                           
  3035                           ;PIC16F1827-I2C02.c: 160: _delay((unsigned long)((26)*(8000000/4000000.0)));
  3036  0588  3011               	movlw	17
  3037  0589  0020               	movlb	0	; select bank0
  3038  058A  00A8               	movwf	??_command
  3039  058B                     u1667:	
  3040  058B  0BA8               	decfsz	??_command,f
  3041  058C  2D8B               	goto	u1667
  3042  058D  0008               	return
  3043  058E                     __end_of_command:	
  3044                           
  3045                           	psect	text17
  3046  069A                     __ptext17:	
  3047 ;; *************** function _I2C_Stop *****************
  3048 ;; Defined at:
  3049 ;;		line 123 in file "PIC16F1827-I2C02.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3063 ;;      Params:         0       0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    3
  3070 ;; This function calls:
  3071 ;;		_I2C_IdleCheck
  3072 ;; This function is called by:
  3073 ;;		_command
  3074 ;;		_LCD_Putc
  3075 ;;		_LCD_Puts
  3076 ;;		_RTC_Write
  3077 ;;		_RTC_Read
  3078 ;;		_LCD_CreateChar
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _I2C_Stop
  3084  069A                     _I2C_Stop:	
  3085                           
  3086                           ;PIC16F1827-I2C02.c: 125: I2C_IdleCheck(0x5);
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3090  069A  3005               	movlw	5
  3091  069B  3186  2685         	fcall	_I2C_IdleCheck
  3092                           
  3093                           ;PIC16F1827-I2C02.c: 126: SSP1CON2bits.PEN = 1;
  3094  069D  0024               	movlb	4	; select bank4
  3095  069E  1516               	bsf	22,2	;volatile
  3096  069F  0008               	return
  3097  06A0                     __end_of_I2C_Stop:	
  3098                           
  3099                           	psect	text18
  3100  05B3                     __ptext18:	
  3101 ;; *************** function _I2C_Start *****************
  3102 ;; Defined at:
  3103 ;;		line 99 in file "PIC16F1827-I2C02.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  adrs            2    2[BANK0 ] int 
  3106 ;;  rw              2    4[BANK0 ] int 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  2    2[BANK0 ] int 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3118 ;;      Params:         0       4       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0
  3120 ;;      Temps:          0       2       0       0       0       0
  3121 ;;      Totals:         0       6       0       0       0       0
  3122 ;;Total ram usage:        6 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    3
  3125 ;; This function calls:
  3126 ;;		_I2C_IdleCheck
  3127 ;; This function is called by:
  3128 ;;		_command
  3129 ;;		_LCD_Putc
  3130 ;;		_LCD_Puts
  3131 ;;		_RTC_Write
  3132 ;;		_RTC_Read
  3133 ;;		_LCD_CreateChar
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _I2C_Start
  3139  05B3                     _I2C_Start:	
  3140                           
  3141                           ;PIC16F1827-I2C02.c: 101: I2C_IdleCheck(0x5);
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3145  05B3  3005               	movlw	5
  3146  05B4  3186  2685  3185   	fcall	_I2C_IdleCheck
  3147                           
  3148                           ;PIC16F1827-I2C02.c: 102: SSP1CON2bits.SEN = 1;
  3149  05B7  0024               	movlb	4	; select bank4
  3150  05B8  1416               	bsf	22,0	;volatile
  3151                           
  3152                           ;PIC16F1827-I2C02.c: 104: I2C_IdleCheck(0x5);
  3153  05B9  3005               	movlw	5
  3154  05BA  3186  2685  3185   	fcall	_I2C_IdleCheck
  3155                           
  3156                           ;PIC16F1827-I2C02.c: 105: AckCheck = 1;
  3157  05BD  3001               	movlw	1
  3158  05BE  0020               	movlb	0	; select bank0
  3159  05BF  00C8               	movwf	_AckCheck
  3160  05C0  3000               	movlw	0
  3161  05C1  00C9               	movwf	_AckCheck+1
  3162                           
  3163                           ;PIC16F1827-I2C02.c: 106: SSP1BUF = (char) ((adrs << 1) + rw);
  3164  05C2  3522               	lslf	I2C_Start@adrs,w
  3165  05C3  0724               	addwf	I2C_Start@rw,w
  3166  05C4  0024               	movlb	4	; select bank4
  3167  05C5  0091               	movwf	17	;volatile
  3168  05C6                     l1676:	
  3169                           ;PIC16F1827-I2C02.c: 107: while (AckCheck);
  3170                           
  3171  05C6  0020               	movlb	0	; select bank0
  3172  05C7  0849               	movf	_AckCheck+1,w
  3173  05C8  0448               	iorwf	_AckCheck,w
  3174  05C9  1D03               	skipz
  3175  05CA  2DC6               	goto	l1676
  3176                           
  3177                           ;PIC16F1827-I2C02.c: 108: return SSP1CON2bits.ACKSTAT;
  3178  05CB  0024               	movlb	4	; select bank4
  3179  05CC  0E16               	swapf	22,w	;volatile
  3180  05CD  0C89               	rrf	9,f
  3181  05CE  0C89               	rrf	9,f
  3182  05CF  3901               	andlw	1
  3183  05D0  0020               	movlb	0	; select bank0
  3184  05D1  00A6               	movwf	??_I2C_Start
  3185  05D2  01A7               	clrf	??_I2C_Start+1
  3186  05D3  0826               	movf	??_I2C_Start,w
  3187  05D4  00A2               	movwf	?_I2C_Start
  3188  05D5  0827               	movf	??_I2C_Start+1,w
  3189  05D6  00A3               	movwf	?_I2C_Start+1
  3190  05D7  0008               	return
  3191  05D8                     __end_of_I2C_Start:	
  3192                           
  3193                           	psect	text19
  3194  062B                     __ptext19:	
  3195 ;; *************** function _I2C_Send *****************
  3196 ;; Defined at:
  3197 ;;		line 129 in file "PIC16F1827-I2C02.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  dt              1    wreg     unsigned char 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  dt              1    2[BANK0 ] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2  128[COMMON] int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3211 ;;      Params:         0       0       0       0       0       0
  3212 ;;      Locals:         0       1       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0
  3214 ;;      Totals:         0       1       0       0       0       0
  3215 ;;Total ram usage:        1 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    3
  3218 ;; This function calls:
  3219 ;;		_I2C_IdleCheck
  3220 ;; This function is called by:
  3221 ;;		_command
  3222 ;;		_LCD_Putc
  3223 ;;		_LCD_Puts
  3224 ;;		_RTC_Write
  3225 ;;		_RTC_Read
  3226 ;;		_LCD_CreateChar
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _I2C_Send
  3232  062B                     _I2C_Send:	
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3236                           ;I2C_Send@dt stored from wreg
  3237  062B  0020               	movlb	0	; select bank0
  3238  062C  00A2               	movwf	I2C_Send@dt
  3239                           
  3240                           ;PIC16F1827-I2C02.c: 130: I2C_IdleCheck(0x5);
  3241  062D  3005               	movlw	5
  3242  062E  3186  2685  3186   	fcall	_I2C_IdleCheck
  3243                           
  3244                           ;PIC16F1827-I2C02.c: 131: AckCheck = 1;
  3245  0631  3001               	movlw	1
  3246  0632  0020               	movlb	0	; select bank0
  3247  0633  00C8               	movwf	_AckCheck
  3248  0634  3000               	movlw	0
  3249  0635  00C9               	movwf	_AckCheck+1
  3250                           
  3251                           ;PIC16F1827-I2C02.c: 132: SSP1BUF = dt;
  3252  0636  0822               	movf	I2C_Send@dt,w
  3253  0637  0024               	movlb	4	; select bank4
  3254  0638  0091               	movwf	17	;volatile
  3255  0639                     l1692:	
  3256                           ;PIC16F1827-I2C02.c: 133: while (AckCheck);
  3257                           
  3258  0639  0020               	movlb	0	; select bank0
  3259  063A  0849               	movf	_AckCheck+1,w
  3260  063B  0448               	iorwf	_AckCheck,w
  3261  063C  1D03               	skipz
  3262  063D  2E39               	goto	l1692
  3263                           
  3264                           ;PIC16F1827-I2C02.c: 134: return SSP1CON2bits.ACKSTAT;
  3265                           ;	Return value of _I2C_Send is never used
  3266  063E  0024               	movlb	4	; select bank4
  3267  063F  0816               	movf	22,w	;volatile
  3268  0640  0008               	return
  3269  0641                     __end_of_I2C_Send:	
  3270                           
  3271                           	psect	text20
  3272  0685                     __ptext20:	
  3273 ;; *************** function _I2C_IdleCheck *****************
  3274 ;; Defined at:
  3275 ;;		line 83 in file "PIC16F1827-I2C02.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  mask            1    wreg     unsigned char 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  mask            1    1[BANK0 ] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3289 ;;      Params:         0       0       0       0       0       0
  3290 ;;      Locals:         0       1       0       0       0       0
  3291 ;;      Temps:          0       1       0       0       0       0
  3292 ;;      Totals:         0       2       0       0       0       0
  3293 ;;Total ram usage:        2 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    2
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_I2C_Start
  3300 ;;		_I2C_rStart
  3301 ;;		_I2C_Stop
  3302 ;;		_I2C_Send
  3303 ;;		_I2C_Receive
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _I2C_IdleCheck
  3309  0685                     _I2C_IdleCheck:	
  3310                           
  3311                           ;incstack = 0
  3312                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3313                           ;I2C_IdleCheck@mask stored from wreg
  3314  0685  0020               	movlb	0	; select bank0
  3315  0686  00A1               	movwf	I2C_IdleCheck@mask
  3316  0687                     l1666:	
  3317                           ;PIC16F1827-I2C02.c: 84: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3318                           
  3319  0687  0821               	movf	I2C_IdleCheck@mask,w
  3320  0688  0024               	movlb	4	; select bank4
  3321  0689  0514               	andwf	20,w	;volatile
  3322  068A  0020               	movlb	0	; select bank0
  3323  068B  00A0               	movwf	??_I2C_IdleCheck
  3324  068C  0024               	movlb	4	; select bank4
  3325  068D  0816               	movf	22,w	;volatile
  3326  068E  391F               	andlw	31
  3327  068F  0020               	movlb	0	; select bank0
  3328  0690  0420               	iorwf	??_I2C_IdleCheck,w
  3329  0691  1903               	btfsc	3,2
  3330  0692  0008               	return
  3331  0693  2E87               	goto	l1666
  3332  0694                     __end_of_I2C_IdleCheck:	
  3333                           
  3334                           	psect	text21
  3335  0666                     __ptext21:	
  3336 ;; *************** function _InitI2C_Master *****************
  3337 ;; Defined at:
  3338 ;;		line 87 in file "PIC16F1827-I2C02.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3352 ;;      Params:         0       0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    2
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _InitI2C_Master
  3368  0666                     _InitI2C_Master:	
  3369                           
  3370                           ;PIC16F1827-I2C02.c: 88: SSP1STAT = 0b10000000;
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _InitI2C_Master: [wreg]
  3374  0666  3080               	movlw	128
  3375  0667  0024               	movlb	4	; select bank4
  3376  0668  0094               	movwf	20	;volatile
  3377                           
  3378                           ;PIC16F1827-I2C02.c: 89: SSP1CON1 = 0b00101000;
  3379  0669  3028               	movlw	40
  3380  066A  0095               	movwf	21	;volatile
  3381                           
  3382                           ;PIC16F1827-I2C02.c: 90: SSP1ADD = 0x13;
  3383  066B  3013               	movlw	19
  3384  066C  0092               	movwf	18	;volatile
  3385                           
  3386                           ;PIC16F1827-I2C02.c: 91: SSP1IE = 1;
  3387  066D  0021               	movlb	1	; select bank1
  3388  066E  1591               	bsf	17,3	;volatile
  3389                           
  3390                           ;PIC16F1827-I2C02.c: 92: BCL1IE = 1;
  3391  066F  1592               	bsf	18,3	;volatile
  3392                           
  3393                           ;PIC16F1827-I2C02.c: 93: PEIE = 1;
  3394  0670  170B               	bsf	11,6	;volatile
  3395                           
  3396                           ;PIC16F1827-I2C02.c: 94: GIE = 1;
  3397  0671  178B               	bsf	11,7	;volatile
  3398                           
  3399                           ;PIC16F1827-I2C02.c: 95: SSP1IF = 0;
  3400  0672  0020               	movlb	0	; select bank0
  3401  0673  1191               	bcf	17,3	;volatile
  3402                           
  3403                           ;PIC16F1827-I2C02.c: 96: BCL1IF = 0;
  3404  0674  1192               	bcf	18,3	;volatile
  3405  0675  0008               	return
  3406  0676                     __end_of_InitI2C_Master:	
  3407                           
  3408                           	psect	intentry
  3409  0004                     __pintentry:	
  3410 ;; *************** function _InterFunction *****************
  3411 ;; Defined at:
  3412 ;;		line 56 in file "PIC16F1827-I2C02.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;		None               void
  3419 ;; Registers used:
  3420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3426 ;;      Params:         0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0
  3428 ;;      Temps:          2       0       0       0       0       0
  3429 ;;      Totals:         2       0       0       0       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    1
  3433 ;; This function calls:
  3434 ;;		_button_timer
  3435 ;; This function is called by:
  3436 ;;		Interrupt level 1
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440  0004                     _InterFunction:	
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _InterFunction: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3444  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3445  0005  3180               	pagesel	$
  3446  0006  0020               	movlb	0	; select bank0
  3447  0007  087F               	movf	127,w
  3448  0008  00F9               	movwf	??_InterFunction+1
  3449                           
  3450                           ;PIC16F1827-I2C02.c: 57: if (SSP1IF == 1) {
  3451  0009  1D91               	btfss	17,3	;volatile
  3452  000A  2813               	goto	i1l1558
  3453                           
  3454                           ;PIC16F1827-I2C02.c: 58: if (AckCheck == 1) AckCheck = 0;
  3455  000B  3001               	movlw	1
  3456  000C  0648               	xorwf	_AckCheck,w
  3457  000D  0449               	iorwf	_AckCheck+1,w
  3458  000E  1D03               	skipz
  3459  000F  2812               	goto	i1l1556
  3460  0010  01C8               	clrf	_AckCheck
  3461  0011  01C9               	clrf	_AckCheck+1
  3462  0012                     i1l1556:	
  3463                           
  3464                           ;PIC16F1827-I2C02.c: 59: SSP1IF = 0;
  3465  0012  1191               	bcf	17,3	;volatile
  3466  0013                     i1l1558:	
  3467                           
  3468                           ;PIC16F1827-I2C02.c: 60: }
  3469                           ;PIC16F1827-I2C02.c: 61: if (BCL1IF == 1) {
  3470  0013  1992               	btfsc	18,3	;volatile
  3471                           
  3472                           ;PIC16F1827-I2C02.c: 62: BCL1IF = 0;
  3473  0014  1192               	bcf	18,3	;volatile
  3474                           
  3475                           ;PIC16F1827-I2C02.c: 63: }
  3476                           ;PIC16F1827-I2C02.c: 64: if (TMR1IF == 1) {
  3477  0015  1C11               	btfss	17,0	;volatile
  3478  0016  2832               	goto	i1l91
  3479                           
  3480                           ;PIC16F1827-I2C02.c: 65: TMR1IF = 0;
  3481  0017  1011               	bcf	17,0	;volatile
  3482                           
  3483                           ;PIC16F1827-I2C02.c: 66: cnt_t1++;
  3484  0018  3001               	movlw	1
  3485  0019  00F8               	movwf	??_InterFunction
  3486  001A  0878               	movf	??_InterFunction,w
  3487  001B  07CB               	addwf	_cnt_t1,f
  3488                           
  3489                           ;PIC16F1827-I2C02.c: 67: button_timer(&sw_RA0, !RA0);
  3490  001C  1003               	clrc
  3491  001D  1C0C               	btfss	12,0	;volatile
  3492  001E  1403               	setc
  3493  001F  3000               	movlw	0
  3494  0020  1803               	btfsc	3,0
  3495  0021  3001               	movlw	1
  3496  0022  00F5               	movwf	button_timer@sw_value
  3497  0023  304C               	movlw	_sw_RA0& (0+255)
  3498  0024  3184  2452  3180   	fcall	_button_timer
  3499                           
  3500                           ;PIC16F1827-I2C02.c: 68: button_timer(&sw_RA1, !RA1);
  3501  0027  1003               	clrc
  3502  0028  0020               	movlb	0	; select bank0
  3503  0029  1C8C               	btfss	12,1	;volatile
  3504  002A  1403               	setc
  3505  002B  3000               	movlw	0
  3506  002C  1803               	btfsc	3,0
  3507  002D  3001               	movlw	1
  3508  002E  00F5               	movwf	button_timer@sw_value
  3509  002F  3050               	movlw	_sw_RA1& (0+255)
  3510  0030  3184  2452         	fcall	_button_timer
  3511  0032                     i1l91:	
  3512  0032  0879               	movf	??_InterFunction+1,w
  3513  0033  0020               	movlb	0	; select bank0
  3514  0034  00FF               	movwf	127
  3515  0035  107E               	bcf	126,0	;clear compiler interrupt flag
  3516  0036  0009               	retfie
  3517  0037                     __end_of_InterFunction:	
  3518                           
  3519                           	psect	text23
  3520  0452                     __ptext23:	
  3521 ;; *************** function _button_timer *****************
  3522 ;; Defined at:
  3523 ;;		line 72 in file "PIC16F1827-I2C02.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  bt              1    wreg     PTR struct button
  3526 ;;		 -> sw_RA1(4), sw_RA0(4), 
  3527 ;;  sw_value        1    0[COMMON] unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  bt              1    2[COMMON] PTR struct button
  3530 ;;		 -> sw_RA1(4), sw_RA0(4), 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3540 ;;      Params:         1       0       0       0       0       0
  3541 ;;      Locals:         1       0       0       0       0       0
  3542 ;;      Temps:          1       0       0       0       0       0
  3543 ;;      Totals:         3       0       0       0       0       0
  3544 ;;Total ram usage:        3 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_InterFunction
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _button_timer
  3555  0452                     _button_timer:	
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in _button_timer: [wreg+fsr1l+fsr1h+status,2+status,0]
  3559                           ;button_timer@bt stored from wreg
  3560  0452  00F7               	movwf	button_timer@bt
  3561                           
  3562                           ;PIC16F1827-I2C02.c: 73: if (sw_value) {
  3563  0453  0875               	movf	button_timer@sw_value,w
  3564  0454  1903               	btfsc	3,2
  3565  0455  2C65               	goto	i1l1422
  3566                           
  3567                           ;PIC16F1827-I2C02.c: 74: if (bt->cnt_sw < 100 + 1) bt->cnt_sw++;
  3568  0456  0877               	movf	button_timer@bt,w
  3569  0457  0086               	movwf	6
  3570  0458  0187               	clrf	7
  3571  0459  3065               	movlw	101
  3572  045A  0201               	subwf	1,w
  3573  045B  1803               	skipnc
  3574  045C  0008               	return
  3575  045D  3001               	movlw	1
  3576  045E  00F6               	movwf	??_button_timer
  3577  045F  0877               	movf	button_timer@bt,w
  3578  0460  0086               	movwf	6
  3579  0461  0187               	clrf	7
  3580  0462  0876               	movf	??_button_timer,w
  3581  0463  0781               	addwf	1,f
  3582                           
  3583                           ;PIC16F1827-I2C02.c: 75: } else {
  3584  0464  0008               	return
  3585  0465                     i1l1422:	
  3586                           
  3587                           ;PIC16F1827-I2C02.c: 76: if (bt->cnt_sw >= 100)bt->long_hold_flag2 = 1;
  3588  0465  0877               	movf	button_timer@bt,w
  3589  0466  0086               	movwf	6
  3590  0467  0187               	clrf	7
  3591  0468  3064               	movlw	100
  3592  0469  0201               	subwf	1,w
  3593  046A  1C03               	skipc
  3594  046B  2C6F               	goto	i1l1426
  3595  046C  0877               	movf	button_timer@bt,w
  3596  046D  3E03               	addlw	3
  3597  046E  2C8F               	goto	L2
  3598  046F                     i1l1426:	
  3599                           
  3600                           ;PIC16F1827-I2C02.c: 77: else if (bt->cnt_sw >= 5 && bt->cnt_sw < 100)bt->long_hold_flag
      +                          1 = 1;
  3601  046F  0877               	movf	button_timer@bt,w
  3602  0470  0086               	movwf	6
  3603  0471  0187               	clrf	7
  3604  0472  3005               	movlw	5
  3605  0473  0201               	subwf	1,w
  3606  0474  1C03               	skipc
  3607  0475  2C80               	goto	i1l1432
  3608  0476  0877               	movf	button_timer@bt,w
  3609  0477  0086               	movwf	6
  3610  0478  0187               	clrf	7
  3611  0479  3064               	movlw	100
  3612  047A  0201               	subwf	1,w
  3613  047B  1803               	skipnc
  3614  047C  2C80               	goto	i1l1432
  3615  047D  0877               	movf	button_timer@bt,w
  3616  047E  3E02               	addlw	2
  3617  047F  2C8F               	goto	L2
  3618  0480                     i1l1432:	
  3619                           
  3620                           ;PIC16F1827-I2C02.c: 78: else if (bt->cnt_sw >= 1 && bt->cnt_sw < 5)bt->press_flag = 1;
  3621  0480  0877               	movf	button_timer@bt,w
  3622  0481  0086               	movwf	6
  3623  0482  0187               	clrf	7
  3624  0483  0801               	movf	1,w
  3625  0484  3A00               	xorlw	0
  3626  0485  1903               	skipnz
  3627  0486  2C93               	goto	i1l1438
  3628  0487  0877               	movf	button_timer@bt,w
  3629  0488  0086               	movwf	6
  3630  0489  0187               	clrf	7
  3631  048A  3005               	movlw	5
  3632  048B  0201               	subwf	1,w
  3633  048C  1803               	skipnc
  3634  048D  2C93               	goto	i1l1438
  3635  048E  0A77               	incf	button_timer@bt,w
  3636  048F                     L2:	
  3637  048F  0086               	movwf	6
  3638  0490  0187               	clrf	7
  3639  0491  0181               	clrf	1
  3640  0492  0A81               	incf	1,f
  3641  0493                     i1l1438:	
  3642                           
  3643                           ;PIC16F1827-I2C02.c: 79: bt->cnt_sw = 0;
  3644  0493  0877               	movf	button_timer@bt,w
  3645  0494  0086               	movwf	6
  3646  0495  0187               	clrf	7
  3647  0496  0181               	clrf	1
  3648  0497  0008               	return
  3649  0498                     __end_of_button_timer:	
  3650  007E                     btemp	set	126	;btemp
  3651  007E                     pic14e$flags	set	126
  3652  007E                     wtemp	set	126
  3653  007E                     wtemp0	set	126
  3654  0080                     wtemp1	set	128
  3655  0082                     wtemp2	set	130
  3656  0084                     wtemp3	set	132
  3657  0086                     wtemp4	set	134
  3658  0088                     wtemp5	set	136
  3659  007F                     wtemp6	set	127
  3660  007E                     ttemp	set	126
  3661  007E                     ttemp0	set	126
  3662  0081                     ttemp1	set	129
  3663  0084                     ttemp2	set	132
  3664  0087                     ttemp3	set	135
  3665  007F                     ttemp4	set	127
  3666  007E                     ltemp	set	126
  3667  007E                     ltemp0	set	126
  3668  0082                     ltemp1	set	130
  3669  0086                     ltemp2	set	134
  3670  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     40      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    timeset@value	PTR unsigned char  size(1) Largest target is 1
		 -> YY(COMMON[1]), MM(COMMON[1]), DD(BANK0[1]), hh(COMMON[1]), 
		 -> mm(COMMON[1]), ss(COMMON[1]), 

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    button_timer@bt	PTR struct button size(1) Largest target is 4
		 -> sw_RA1(BANK0[4]), sw_RA0(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterFunction in COMMON

    _InterFunction->_button_timer

Critical Paths under _main in BANK0

    _main->_timeset
    _timeset->_display
    _display->_LCD_SetCursor
    _RTC_Read->_I2C_Start
    _RTC_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck
    _LCD_SetCursor->_command
    _LCD_Putc->_I2C_Start
    ___bmul->___awdiv
    _RTC_Write->_I2C_Start
    _LCD_Puts->_I2C_Start
    _LCD_Init->_LCD_Clear
    _LCD_Clear->_command
    _command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _InterFunction in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterFunction in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterFunction in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterFunction in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterFunction in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   31813
                                             36 BANK0      4     4      0
                     _InitI2C_Master
                           _LCD_Init
                          _RTC_Write
                            _display
                       _month_length
                            _timeset
 ---------------------------------------------------------------------------------
 (1) _timeset                                             14     9      5   21020
                                             22 BANK0     14     9      5
                           _LCD_Putc
                           _LCD_Puts
                      _LCD_SetCursor
                           _RTC_Read
                          _RTC_Write
                            ___awdiv
                            ___awmod
                             ___bmul
                            _display
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (2) _display                                              2     2      0    6867
                                             20 BANK0      2     2      0
                           _LCD_Putc
                      _LCD_SetCursor
                           _RTC_Read
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2139
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _RTC_Read                                             5     5      0    1663
                                              8 BANK0      5     5      0
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (4) _I2C_rStart                                           6     2      4     247
                                              2 BANK0      6     2      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Receive                                          4     2      2     173
                                              2 BANK0      4     2      2
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _LCD_SetCursor                                        8     4      4    1890
                                             12 BANK0      8     4      4
                            _command
 ---------------------------------------------------------------------------------
 (3) _LCD_Putc                                             4     4      0    1175
                                              8 BANK0      4     4      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     220
                                              9 BANK0      4     3      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     895
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Write                                            5     4      1    1437
                                              8 BANK0      5     4      1
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _LCD_Puts                                             5     3      2    1286
                                              8 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _month_length                                         2     1      1     139
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0    2350
                                             14 BANK0      3     3      0
                          _LCD_Clear
                            _command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0    1175
                                             12 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (4) _command                                              4     4      0    1175
                                              8 BANK0      4     4      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            6     2      4    1017
                                              2 BANK0      6     2      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitI2C_Master                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterFunction                                        2     2      0     468
                                              3 COMMON     2     2      0
                       _button_timer
 ---------------------------------------------------------------------------------
 (8) _button_timer                                         3     2      1     468
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitI2C_Master
   _LCD_Init
     _LCD_Clear
       _command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTC_Write
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _display
     _LCD_Putc
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _LCD_SetCursor
       _command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _RTC_Read
       _I2C_Receive
         _I2C_IdleCheck
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
       _I2C_rStart
         _I2C_IdleCheck
     ___awdiv
   _month_length
   _timeset
     _LCD_Putc
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _LCD_SetCursor
       _command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _RTC_Read
       _I2C_Receive
         _I2C_IdleCheck
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
       _I2C_rStart
         _I2C_IdleCheck
     _RTC_Write
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     ___awdiv
     ___awmod
     ___bmul
       ___awdiv (ARG)
     _display
       _LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _LCD_SetCursor
         _command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _RTC_Read
         _I2C_Receive
           _I2C_IdleCheck
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
         _I2C_rStart
           _I2C_IdleCheck
       ___awdiv
     _month_length (ARG)

 _InterFunction (ROOT)
   _button_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      39       6       71.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      43      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jan 09 10:08:33 2015

                       pc 0002            ___bmul@product 002B        __size_of_I2C_Start 0025  
                      _DD 0054                        _EE 004A                        _MM 0070  
                      _YY 0071              ___awdiv@sign 0026                        _hh 0072  
                      _mm 0073                        _ss 0074              timeset@t_213 0042  
           _LCD_SetCursor 0641                       l150 0531                       l138 0585  
                     l170 055B                       l174 03DD                       l175 03FF  
                     _GIE 005F                       _RA0 0060                       _RA1 0061  
            timeset@value 0043              ___awmod@sign 0026       __size_of_I2C_rStart 0025  
    __size_of_I2C_Receive 001E              __CFG_BORV$HI 0000                       wreg 0009  
                    S2108 0613              __CFG_LVP$OFF 0000                      l2000 005E  
                    l2002 01C8                      l2060 02F0                      l1364 0657  
                    l1368 065D                      l1800 03BA                      l1706 05A1  
                    l1820 04F1                      l1822 050D                      l1666 0687  
                    l1930 05F9                      l1692 0639                      l1676 05C6  
                    l1934 05FB                      l1950 0605                      l1862 0415  
                    l1774 0383             timeset@column 0039                      l1880 043A  
                    l1792 03A9                      l1784 038B                      l1768 0378  
                    l1946 0603                      l1938 05FD                      l1874 0422  
                    l1866 041C                      l1786 0397                      l1876 042E  
                    l1884 0443                      l1796 03B2                      l1980 0101  
                    l1966 0087                      l1888 044B                      l1984 0139  
                    l1968 00CA                      l1994 018A                      l1978 00FD  
                    l1996 018F                      STR_1 0700                      u1305 03AA  
                    u1415 0434                      u1425 043B                      u1265 038E  
                    u1515 0173                      u1285 0398                      u1525 01A1  
                    u1607 0537                      u1295 03A2                      u1617 0561  
                    u1627 050A                      u1395 0425                      u1637 049D  
                    u1647 04C1                      u1495 0113                      u1657 067F  
                    u1667 058B                      u1597 0405                      _PEIE 005E  
                    i1l91 0032                      _WPUB 020D                      _main 02CC  
      __size_of_LCD_Clear 000F                      fsr0h 0005                      fsr1h 0007  
                    fsr0l 0004                      indf0 0000                      indf1 0001  
                    fsr1l 0006          __end_of_I2C_Send 0641                      btemp 007E  
        __end_of_I2C_Stop 06A0                      ltemp 007E                      start 0037  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
       ___bmul@multiplier 002C    __size_of_I2C_IdleCheck 000F          __end_of_LCD_Init 04D6  
        __end_of_LCD_Putc 053A          __end_of_LCD_Puts 0510            ?_LCD_SetCursor 002C  
                   ?_main 0075           __end_of___awdiv 03C1               LCD_Putc@ans 002A  
           __CFG_WDTE$OFF 0000           __end_of___awmod 0452           ___awdiv@divisor 0020  
                   _T1CON 0018            timeset@max_num 0037           ___awdiv@counter 0025  
          timeset@min_num 0036               LCD_Puts@ans 002B                     _TMR1H 0017  
                   _TMR1L 0016                     _PORTA 000C                     _PORTB 000D  
                   _TRISA 008C                     _TRISB 008D              RTC_Read@data 002A  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000           __end_of_command 058E  
         __end_of_display 02CC          __end_of_RTC_Read 040A         __end_of_I2C_Start 05D8  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080           __end_of_timeset 01CA                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003    __size_of_InterFunction 0033  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F        __size_of_RTC_Write 002A         month_length@month 0020  
        ??_InitI2C_Master 0020            __CFG_MCLRE$OFF 0000           __initialization 0039  
            __end_of_main 036D                    ??_main 0044         __end_of_LCD_Clear 0685  
          __CFG_PLLEN$OFF 0000              RTC_Write@Reg 002A              RTC_Write@ans 002B  
                  _BCL1IE 0493                    _BCL1IF 0093             _I2C_IdleCheck 0685  
        ___awdiv@dividend 0022                    _ANSELA 018C                    _ANSELB 018D  
                  i1l1422 0465                    i1l1432 0480                    i1l1426 046F  
                  i1l1438 0493                    i1l1556 0012                    i1l1558 0013  
                  _OSCCON 0099                    _TMR1IF 0088                    _SSP1IE 048B  
                  _SSP1IF 008B              ??_I2C_rStart 0026             ?_button_timer 0075  
                  ___bmul 0654                 ??___awdiv 0024                 ??___awmod 0024  
         ??_LCD_SetCursor 0030                    _cnt_t1 004B          ___awdiv@quotient 0027  
                  _sw_RA0 004C                    _sw_RA1 0050           ___awmod@divisor 0020  
         ___awmod@counter 0025             _InterFunction 0004                 ??_command 0028  
               ??_display 0034         __end_of_RTC_Write 0564                 ?_I2C_Send 0075  
               ?_I2C_Stop 0075        __end_of_I2C_rStart 05B3            ?_I2C_IdleCheck 0075  
               ??_timeset 003B   __end_of__initialization 0055                 ?_LCD_Init 0075  
               ?_LCD_Putc 0075                 ?_LCD_Puts 0028            ??_button_timer 0076  
     ___bmul@multiplicand 0029      button_timer@sw_value 0075            __pcstackCOMMON 0075  
               LCD_Putc@c 0029              __pidataBANK0 06A0                 LCD_Puts@s 0028  
          ?_InterFunction 0075                 ?_RTC_Read 0075                ??_I2C_Send 0022  
              ??_I2C_Stop 0022                __pbssBANK0 0048                ??_LCD_Init 002E  
              ??_LCD_Putc 0028                ??_LCD_Puts 002A                __pmaintext 02CC  
                 ?___bmul 0029                I2C_Send@dt 0022                __pintentry 0004  
              ??_RTC_Read 0028             ??_I2C_Receive 0024           ??_I2C_IdleCheck 0020  
                 _SSP1ADD 0212                   _SSP1BUF 0211             ?_month_length 0020  
               _I2C_Start 05B3            I2C_Receive@ack 0022           __size_of___bmul 0012  
                 ___awdiv 036D                   ___awmod 040A           ??_InterFunction 0078  
LCD_SetCursor@row_offsets 0030                   __ptext1 0059                   __ptext2 01CA  
                 __ptext3 036D                   __ptext4 03C1                   __ptext5 058E  
                 __ptext6 05D8                   __ptext7 0641                   __ptext8 0510  
                 __ptext9 0654                   _command 0564                   _display 01CA  
    __end_of_button_timer 0498          ___awmod@dividend 0022                 _LCD_Clear 0676  
     __end_of_I2C_Receive 05F6                   _timeset 0059                   clrloop0 0695  
    end_of_initialization 0055          LCD_SetCursor@col 002C          LCD_SetCursor@row 002E  
          ??_month_length 0021                ?_I2C_Start 0022              I2C_rStart@rw 0024  
            __pstringtext 0700          __CFG_FOSC$INTOSC 0000                ?_LCD_Clear 0075  
               _RTC_Write 053A         __size_of_I2C_Send 0016         __size_of_I2C_Stop 0006  
              command@ans 002A         __size_of_LCD_Init 003E         __size_of_LCD_Putc 002A  
       __size_of_LCD_Puts 003A            __end_of___bmul 0666               RTC_Read@Reg 0029  
             RTC_Read@ans 002B     __end_of_LCD_SetCursor 0654   __size_of_InitI2C_Master 0010  
             _I2C_Receive 05D8         __size_of_RTC_Read 0049       start_initialization 0039  
        month_length@year 0021                ?_RTC_Write 0028               ??_I2C_Start 0026  
                ??___bmul 002A               __pdataBANK0 0055     __size_of_button_timer 0046  
    __end_of_month_length 0613               __pbssCOMMON 0070                 ___latbits 0001  
           __pcstackBANK0 0020               ??_LCD_Clear 002C       __end_of__stringdata 0703  
            _button_timer 0452                  ?___awdiv 0020                  ?___awmod 0020  
               __pswtext1 0613                  ?_command 0075                  ?_display 0075  
             I2C_Start@rw 0024                  _I2C_Send 062B                  _I2C_Stop 069A  
           I2C_Receive@dt 0025     __end_of_I2C_IdleCheck 0694               ??_RTC_Write 0029  
                ?_timeset 0036                  _LCD_Init 0498                  _LCD_Putc 0510  
                _LCD_Puts 04D6                 clear_ram0 0694                  _PIE1bits 0091  
                _SSP1CON1 0215                  _SSP1CON2 0216                  _SSP1STAT 0214  
                _AckCheck 0048     __end_of_InterFunction 0037                  _RTC_Read 03C1  
          _InitI2C_Master 0666               __stringdata 0700                timeset@Reg 0038  
              timeset@row 003A             I2C_Start@adrs 0022        LCD_SetCursor@F2889 0055  
              RTC_Write@c 0028                _I2C_rStart 058E     __size_of_month_length 001D  
  __end_of_InitI2C_Master 0676          __size_of___awdiv 0054          __size_of___awmod 0048  
       I2C_IdleCheck@mask 0021              ?_I2C_Receive 0022          __size_of_command 002A  
        __size_of_display 0102                  __ptext10 040A                  __ptext11 053A  
                __ptext20 0685                  __ptext12 04D6                  __ptext21 0666  
                __ptext13 05F6                  __ptext14 0498                  __ptext23 0452  
                __ptext15 0676                  __ptext16 0564                  __ptext17 069A  
                __ptext18 05B3                  __ptext19 062B              _SSP1CON2bits 0216  
        __size_of_timeset 0171            button_timer@bt 0077            I2C_rStart@adrs 0022  
           __size_of_main 00A1              _month_length 05F6           ?_InitI2C_Master 0075  
                command@c 0029               pic14e$flags 007E                  intlevel1 0000  
  __size_of_LCD_SetCursor 0013               ?_I2C_rStart 0022                  timeset@t 0041  
              _OPTION_REG 0095  
