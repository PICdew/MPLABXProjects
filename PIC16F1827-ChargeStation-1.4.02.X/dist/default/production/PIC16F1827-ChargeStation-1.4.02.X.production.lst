

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:41:58 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0219                     	;# 
   166  021A                     	;# 
   167  021B                     	;# 
   168  021C                     	;# 
   169  021D                     	;# 
   170  021E                     	;# 
   171  021F                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0294                     	;# 
   177  0295                     	;# 
   178  0295                     	;# 
   179  0296                     	;# 
   180  0298                     	;# 
   181  0298                     	;# 
   182  0299                     	;# 
   183  029A                     	;# 
   184  029B                     	;# 
   185  029C                     	;# 
   186  029C                     	;# 
   187  029D                     	;# 
   188  029E                     	;# 
   189  029E                     	;# 
   190  0311                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223                           
   224                           	psect	idataBANK0
   225  0002                     __pidataBANK0:	
   226                           
   227                           ;initializer for LCD_SetCursor@F3069
   228  0002  3400               	retlw	0
   229  0003  3440               	retlw	64
   230  000B                     _INTCONbits	set	11
   231  0011                     _PIR1bits	set	17
   232  0018                     _T1CONbits	set	24
   233  0017                     _TMR1H	set	23
   234  0016                     _TMR1L	set	22
   235  0093                     _BCL1IF	set	147
   236  005F                     _GIE	set	95
   237  0063                     _RA3	set	99
   238  0064                     _RA4	set	100
   239  0065                     _RA5	set	101
   240  008B                     _SSP1IF	set	139
   241  008C                     _TXIF	set	140
   242  009B                     _ADRES	set	155
   243  009D                     _ADCON0bits	set	157
   244  009E                     _ADCON1bits	set	158
   245  0095                     _OPTION_REGbits	set	149
   246  0099                     _OSCCON	set	153
   247  0091                     _PIE1bits	set	145
   248  008C                     _TRISA	set	140
   249  008D                     _TRISB	set	141
   250  048C                     _TXIE	set	1164
   251  0117                     _FVRCON	set	279
   252  0866                     _LATA6	set	2150
   253  0867                     _LATA7	set	2151
   254  0868                     _LATB0	set	2152
   255  086B                     _LATB3	set	2155
   256  086D                     _LATB5	set	2157
   257  086E                     _LATB6	set	2158
   258  018C                     _ANSELA	set	396
   259  018D                     _ANSELB	set	397
   260  019D                     _RCSTA	set	413
   261  019C                     _SPBRGH	set	412
   262  019B                     _SPBRGL	set	411
   263  019A                     _TXREG	set	410
   264  019E                     _TXSTA	set	414
   265  0CFB                     _BRG16	set	3323
   266  0CEF                     _SPEN	set	3311
   267  0212                     _SSP1ADD	set	530
   268  0211                     _SSP1BUF	set	529
   269  0215                     _SSP1CON1	set	533
   270  0216                     _SSP1CON2	set	534
   271  0216                     _SSP1CON2bits	set	534
   272  0214                     _SSP1STAT	set	532
   273  020D                     _WPUB	set	525
   274                           
   275                           	psect	stringtext
   276  07F9                     __pstringtext:	
   277  07F9                     STR_13:	
   278  07F9  3452               	retlw	82	;'R'
   279  07FA  3465               	retlw	101	;'e'
   280  07FB  3473               	retlw	115	;'s'
   281  07FC  3465               	retlw	101	;'e'
   282  07FD  3474               	retlw	116	;'t'
   283  07FE  3465               	retlw	101	;'e'
   284  07FF  3464               	retlw	100	;'d'
   285  0800  3400               	retlw	0
   286  0801                     STR_2:	
   287  0801  3453               	retlw	83	;'S'
   288  0802  3474               	retlw	116	;'t'
   289  0803  3461               	retlw	97	;'a'
   290  0804  3474               	retlw	116	;'t'
   291  0805  3469               	retlw	105	;'i'
   292  0806  346F               	retlw	111	;'o'
   293  0807  346E               	retlw	110	;'n'
   294  0808  3400               	retlw	0
   295  0809                     STR_1:	
   296  0809  3443               	retlw	67	;'C'
   297  080A  3468               	retlw	104	;'h'
   298  080B  3461               	retlw	97	;'a'
   299  080C  3472               	retlw	114	;'r'
   300  080D  3467               	retlw	103	;'g'
   301  080E  3465               	retlw	101	;'e'
   302  080F  3400               	retlw	0
   303  0810                     STR_4:	
   304  0810  3443               	retlw	67	;'C'
   305  0811  3465               	retlw	101	;'e'
   306  0812  346E               	retlw	110	;'n'
   307  0813  3474               	retlw	116	;'t'
   308  0814  3465               	retlw	101	;'e'
   309  0815  3472               	retlw	114	;'r'
   310  0816  3400               	retlw	0
   311  0817                     STR_3:	
   312  0817  3452               	retlw	82	;'R'
   313  0818  3469               	retlw	105	;'i'
   314  0819  3467               	retlw	103	;'g'
   315  081A  3468               	retlw	104	;'h'
   316  081B  3474               	retlw	116	;'t'
   317  081C  3400               	retlw	0
   318  081D                     STR_5:	
   319  081D  344C               	retlw	76	;'L'
   320  081E  3465               	retlw	101	;'e'
   321  081F  3466               	retlw	102	;'f'
   322  0820  3474               	retlw	116	;'t'
   323  0821  3400               	retlw	0
   324  0822                     STR_9:	
   325  0822  346D               	retlw	109	;'m'
   326  0823  3441               	retlw	65	;'A'
   327  0824  3468               	retlw	104	;'h'
   328  0825  3400               	retlw	0
   329  0810                     
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  0169                     start_initialization:	
   334  0169                     __initialization:	
   335                           
   336                           ; Clear objects allocated to BANK0
   337  0169  3020               	movlw	low __pbssBANK0
   338  016A  0084               	movwf	4
   339  016B  3000               	movlw	high __pbssBANK0
   340  016C  0085               	movwf	5
   341  016D  301B               	movlw	27
   342  016E  318B  2362  3181   	fcall	clear_ram0
   343                           
   344                           ; Clear objects allocated to BANK1
   345  0171  30A0               	movlw	low __pbssBANK1
   346  0172  0084               	movwf	4
   347  0173  3000               	movlw	high __pbssBANK1
   348  0174  0085               	movwf	5
   349  0175  3019               	movlw	25
   350  0176  318B  2362  3181   	fcall	clear_ram0
   351                           
   352                           ; Clear objects allocated to BANK2
   353  0179  3053               	movlw	low __pbssBANK2
   354  017A  0084               	movwf	4
   355  017B  3001               	movlw	high __pbssBANK2
   356  017C  0085               	movwf	5
   357  017D  300C               	movlw	12
   358  017E  318B  2362  3181   	fcall	clear_ram0
   359                           
   360                           ; Initialize objects allocated to BANK0
   361  0181  3180  2002  3181   	fcall	__pidataBANK0	;fetch initializer
   362  0184  00D6               	movwf	__pdataBANK0& (0+127)
   363  0185  3180  2003         	fcall	__pidataBANK0+1	;fetch initializer
   364  0187  00D7               	movwf	(__pdataBANK0+1)& (0+127)
   365  0188                     end_of_initialization:	
   366                           ;End of C runtime variable initialization code
   367                           
   368  0188                     __end_of__initialization:	
   369  0188  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   370  0189  0020               	movlb	0
   371  018A  3183  2B72         	ljmp	_main	;jump to C main() function
   372                           
   373                           	psect	bssBANK0
   374  0020                     __pbssBANK0:	
   375  0020                     _s:	
   376  0020                     	ds	6
   377  0026                     _v:	
   378  0026                     	ds	6
   379  002C                     _cnt0:	
   380  002C                     	ds	2
   381  002E                     _cnt1s:	
   382  002E                     	ds	2
   383  0030                     _print_content:	
   384  0030                     	ds	1
   385  0031                     _print_port:	
   386  0031                     	ds	1
   387  0032                     _sw_RA3:	
   388  0032                     	ds	3
   389  0035                     _sw_RA4:	
   390  0035                     	ds	3
   391  0038                     _sw_RA5:	
   392  0038                     	ds	3
   393                           
   394                           	psect	dataBANK0
   395  0056                     __pdataBANK0:	
   396  0056                     LCD_SetCursor@F3069:	
   397  0056                     	ds	2
   398                           
   399                           	psect	bssBANK1
   400  00A0                     __pbssBANK1:	
   401  00A0                     _ss:	
   402  00A0                     	ds	12
   403  00AC                     _change_flag:	
   404  00AC                     	ds	3
   405  00AF                     _cnt:	
   406  00AF                     	ds	3
   407  00B2                     _cntf:	
   408  00B2                     	ds	3
   409  00B5                     _tx_buf:	
   410  00B5                     	ds	4
   411                           
   412                           	psect	bssBANK2
   413  0153                     __pbssBANK2:	
   414  0153                     _cut:	
   415  0153                     	ds	6
   416  0159                     _sp:	
   417  0159                     	ds	6
   418                           
   419                           	psect	clrtext
   420  0B62                     clear_ram0:	
   421                           ;	Called with FSR0 containing the base address, and
   422                           ;	WREG with the size to clear
   423                           
   424  0B62  0064               	clrwdt	;clear the watchdog before getting into this loop
   425  0B63                     clrloop0:	
   426  0B63  0180               	clrf	0	;clear RAM location pointed to by FSR
   427  0B64  3101               	addfsr 0,1
   428  0B65  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   429  0B66  2B63               	goto	clrloop0	;have we reached the end yet?
   430  0B67  3400               	retlw	0	;all done for this memory range, return
   431                           
   432                           	psect	cstackBANK2
   433  0120                     __pcstackBANK2:	
   434  0120                     main@ringbuf:	
   435                           
   436                           ; 50 bytes @ 0x0
   437  0120                     	ds	50
   438  0152                     main@i:	
   439                           
   440                           ; 1 bytes @ 0x32
   441  0152                     	ds	1
   442                           
   443                           	psect	cstackBANK1
   444  00B9                     __pcstackBANK1:	
   445  00B9                     ?_OUT:	
   446  00B9                     ?_LED:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  00B9                     ??_timer0_init:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  00B9                     ??_timer1_init:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  00B9                     ??_adc_init:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  00B9                     ?_ringbuf_init:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  00B9                     ??_I2C_IdleCheck:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  00B9                     ??_I2C_init:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  00B9                     ?_flag_clear:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  00B9                     ?_flag_read:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  00B9                     ?___lmul:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  00B9                     adc_init@p_ref:	
   477                           ; 4 bytes @ 0x0
   478                           
   479  00B9                     ringbuf_init@internal_buf:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  00B9                     OUT@value:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  00B9                     LED@value:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  00B9                     flag_read@bit_and:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  00B9                     flag_clear@bit_and:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  00B9                     ___lmul@multiplier:	
   495                           ; 1 bytes @ 0x0
   496                           
   497                           
   498                           ; 4 bytes @ 0x0
   499  00B9                     	ds	1
   500  00BA                     ??_OUT:	
   501  00BA                     ??_LED:	
   502                           ; 0 bytes @ 0x1
   503                           
   504  00BA                     ??_flag_read:	
   505                           ; 0 bytes @ 0x1
   506                           
   507  00BA                     ??_flag_clear:	
   508                           ; 0 bytes @ 0x1
   509                           
   510  00BA                     timer0_init@prescaler:	
   511                           ; 0 bytes @ 0x1
   512                           
   513  00BA                     timer1_init@prescaler:	
   514                           ; 1 bytes @ 0x1
   515                           
   516  00BA                     ringbuf_init@bufsize:	
   517                           ; 1 bytes @ 0x1
   518                           
   519  00BA                     I2C_IdleCheck@mask:	
   520                           ; 1 bytes @ 0x1
   521                           
   522  00BA                     OUT@b:	
   523                           ; 1 bytes @ 0x1
   524                           
   525  00BA                     LED@b:	
   526                           ; 1 bytes @ 0x1
   527                           
   528  00BA                     flag_read@port:	
   529                           ; 1 bytes @ 0x1
   530                           
   531                           
   532                           ; 1 bytes @ 0x1
   533  00BA                     	ds	1
   534  00BB                     ??_ringbuf_init:	
   535  00BB                     ??_I2C_Stop:	
   536                           ; 0 bytes @ 0x2
   537                           
   538  00BB                     ??_I2C_Send:	
   539                           ; 0 bytes @ 0x2
   540                           
   541  00BB                     ??_I2C_Receive:	
   542                           ; 0 bytes @ 0x2
   543                           
   544  00BB                     ?_I2C_Start:	
   545                           ; 0 bytes @ 0x2
   546                           
   547  00BB                     ?_I2C_rStart:	
   548                           ; 1 bytes @ 0x2
   549                           
   550  00BB                     I2C_Start@rw:	
   551                           ; 1 bytes @ 0x2
   552                           
   553  00BB                     I2C_Send@data:	
   554                           ; 1 bytes @ 0x2
   555                           
   556  00BB                     flag_clear@port:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  00BB                     I2C_rStart@adrs:	
   560                           ; 1 bytes @ 0x2
   561                           
   562                           
   563                           ; 2 bytes @ 0x2
   564  00BB                     	ds	1
   565  00BC                     ??_I2C_Start:	
   566  00BC                     ringbuf_init@rb:	
   567                           ; 0 bytes @ 0x3
   568                           
   569  00BC                     I2C_Start@adrs:	
   570                           ; 1 bytes @ 0x3
   571                           
   572  00BC                     I2C_Receive@ack:	
   573                           ; 1 bytes @ 0x3
   574                           
   575                           
   576                           ; 1 bytes @ 0x3
   577  00BC                     	ds	1
   578  00BD                     ??_LCD_Command:	
   579  00BD                     ?_EEP_Writes:	
   580                           ; 0 bytes @ 0x4
   581                           
   582  00BD                     I2C_Receive@data:	
   583                           ; 0 bytes @ 0x4
   584                           
   585  00BD                     EEP_Writes@Reg_l:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  00BD                     I2C_rStart@rw:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  00BD                     ___lmul@multiplicand:	
   592                           ; 2 bytes @ 0x4
   593                           
   594                           
   595                           ; 4 bytes @ 0x4
   596  00BD                     	ds	1
   597  00BE                     LCD_Command@c:	
   598  00BE                     EEP_Writes@data_0:	
   599                           ; 1 bytes @ 0x5
   600                           
   601                           
   602                           ; 1 bytes @ 0x5
   603  00BE                     	ds	1
   604  00BF                     ??_I2C_rStart:	
   605  00BF                     ?_EEP_Read:	
   606                           ; 0 bytes @ 0x6
   607                           
   608  00BF                     LCD_Command@ans:	
   609                           ; 1 bytes @ 0x6
   610                           
   611  00BF                     EEP_Read@Reg_l:	
   612                           ; 1 bytes @ 0x6
   613                           
   614  00BF                     EEP_Writes@data_1:	
   615                           ; 1 bytes @ 0x6
   616                           
   617                           
   618                           ; 1 bytes @ 0x6
   619  00BF                     	ds	1
   620  00C0                     ??_LCD_Clear:	
   621  00C0                     ??_EEP_Read:	
   622                           ; 0 bytes @ 0x7
   623                           
   624  00C0                     ??_EEP_Writes:	
   625                           ; 0 bytes @ 0x7
   626                           
   627                           
   628                           ; 0 bytes @ 0x7
   629  00C0                     	ds	1
   630  00C1                     ??___lmul:	
   631  00C1                     EEP_Read@Reg_h:	
   632                           ; 0 bytes @ 0x8
   633                           
   634  00C1                     EEP_Writes@Reg_h:	
   635                           ; 1 bytes @ 0x8
   636                           
   637  00C1                     ___lmul@product:	
   638                           ; 1 bytes @ 0x8
   639                           
   640                           
   641                           ; 4 bytes @ 0x8
   642  00C1                     	ds	1
   643  00C2                     ??_LCD_init:	
   644  00C2                     EEP_Read@data:	
   645                           ; 0 bytes @ 0x9
   646                           
   647  00C2                     EEP_Writes@ans:	
   648                           ; 1 bytes @ 0x9
   649                           
   650                           
   651                           ; 1 bytes @ 0x9
   652  00C2                     	ds	1
   653  00C3                     EEP_Read@ans:	
   654                           
   655                           ; 1 bytes @ 0xA
   656  00C3                     	ds	2
   657  00C5                     ??_main_init:	
   658  00C5                     ??_main:	
   659                           ; 0 bytes @ 0xC
   660                           
   661                           
   662                           ; 0 bytes @ 0xC
   663  00C5                     	ds	12
   664                           
   665                           	psect	cstackCOMMON
   666  0070                     __pcstackCOMMON:	
   667  0070                     ?_lchika:	
   668  0070                     ?_timer0_init:	
   669                           ; 0 bytes @ 0x0
   670                           
   671  0070                     ?_timer1_init:	
   672                           ; 0 bytes @ 0x0
   673                           
   674  0070                     ?_adc_init:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_button_timer_interrupt:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ??_ringbuf_pop:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ??_ringbuf_num:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ?_I2C_IdleCheck:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_I2C_init:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ?_I2C_Stop:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_LCD_Command:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?_LCD_Clear:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?_LCD_Putc:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_LCD_init:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?_isr:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_main_init:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?i1_I2C_IdleCheck:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ??i1_I2C_IdleCheck:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ?i1_I2C_Stop:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?i1_LCD_Command:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ?i1_LCD_Clear:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?i1_OUT:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?i1_LED:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ?_ringbuf_pop:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_ringbuf_num:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_I2C_Send:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_I2C_Receive:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?i1_I2C_Send:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_adc:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_main:	
   753                           ; 2 bytes @ 0x0
   754                           
   755  0070                     ?___awdiv:	
   756                           ; 2 bytes @ 0x0
   757                           
   758  0070                     ?___lwmod:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0070                     ?___almod:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  0070                     ?___lldiv:	
   765                           ; 4 bytes @ 0x0
   766                           
   767  0070                     button_timer_interrupt@sw_value:	
   768                           ; 4 bytes @ 0x0
   769                           
   770  0070                     i1OUT@value:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     i1LED@value:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ___awdiv@divisor:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ___lwmod@divisor:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     ___almod@divisor:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ___lldiv@divisor:	
   786                           ; 4 bytes @ 0x0
   787                           
   788                           
   789                           ; 4 bytes @ 0x0
   790  0070                     	ds	1
   791  0071                     ??_button_timer_interrupt:	
   792  0071                     ??i1_OUT:	
   793                           ; 0 bytes @ 0x1
   794                           
   795  0071                     ??i1_LED:	
   796                           ; 0 bytes @ 0x1
   797                           
   798  0071                     ringbuf_num@rb:	
   799                           ; 0 bytes @ 0x1
   800                           
   801  0071                     i1I2C_IdleCheck@mask:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  0071                     i1OUT@b:	
   805                           ; 1 bytes @ 0x1
   806                           
   807  0071                     i1LED@b:	
   808                           ; 1 bytes @ 0x1
   809                           
   810                           
   811                           ; 1 bytes @ 0x1
   812  0071                     	ds	1
   813  0072                     ??_adc:	
   814  0072                     ??i1_I2C_Stop:	
   815                           ; 0 bytes @ 0x2
   816                           
   817  0072                     ??i1_I2C_Send:	
   818                           ; 0 bytes @ 0x2
   819                           
   820  0072                     ?i1_I2C_Start:	
   821                           ; 0 bytes @ 0x2
   822                           
   823  0072                     ringbuf_pop@ret:	
   824                           ; 1 bytes @ 0x2
   825                           
   826  0072                     i1I2C_Start@rw:	
   827                           ; 1 bytes @ 0x2
   828                           
   829  0072                     i1I2C_Send@data:	
   830                           ; 1 bytes @ 0x2
   831                           
   832  0072                     ___awdiv@dividend:	
   833                           ; 1 bytes @ 0x2
   834                           
   835  0072                     ___lwmod@dividend:	
   836                           ; 2 bytes @ 0x2
   837                           
   838                           
   839                           ; 2 bytes @ 0x2
   840  0072                     	ds	1
   841  0073                     ??i1_I2C_Start:	
   842  0073                     adc@ch:	
   843                           ; 0 bytes @ 0x3
   844                           
   845  0073                     button_timer_interrupt@bt:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0073                     ringbuf_pop@rb:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0073                     i1I2C_Start@adrs:	
   852                           ; 1 bytes @ 0x3
   853                           
   854                           
   855                           ; 1 bytes @ 0x3
   856  0073                     	ds	1
   857  0074                     ??_LCD_Putc:	
   858  0074                     ?_LCD_Puts:	
   859                           ; 0 bytes @ 0x4
   860                           
   861  0074                     ??___awdiv:	
   862                           ; 0 bytes @ 0x4
   863                           
   864  0074                     ??___lwmod:	
   865                           ; 0 bytes @ 0x4
   866                           
   867  0074                     ??i1_LCD_Command:	
   868                           ; 0 bytes @ 0x4
   869                           
   870  0074                     ?___wmul:	
   871                           ; 0 bytes @ 0x4
   872                           
   873  0074                     LCD_Puts@s:	
   874                           ; 2 bytes @ 0x4
   875                           
   876  0074                     ___wmul@multiplier:	
   877                           ; 2 bytes @ 0x4
   878                           
   879  0074                     ___almod@dividend:	
   880                           ; 2 bytes @ 0x4
   881                           
   882  0074                     ___lldiv@dividend:	
   883                           ; 4 bytes @ 0x4
   884                           
   885                           
   886                           ; 4 bytes @ 0x4
   887  0074                     	ds	1
   888  0075                     LCD_Putc@c:	
   889  0075                     ___awdiv@counter:	
   890                           ; 1 bytes @ 0x5
   891                           
   892  0075                     ___lwmod@counter:	
   893                           ; 1 bytes @ 0x5
   894                           
   895  0075                     i1LCD_Command@c:	
   896                           ; 1 bytes @ 0x5
   897                           
   898                           
   899                           ; 1 bytes @ 0x5
   900  0075                     	ds	1
   901  0076                     ??_LCD_Puts:	
   902  0076                     ?___lwdiv:	
   903                           ; 0 bytes @ 0x6
   904                           
   905  0076                     LCD_Putc@ans:	
   906                           ; 2 bytes @ 0x6
   907                           
   908  0076                     ___awdiv@sign:	
   909                           ; 1 bytes @ 0x6
   910                           
   911  0076                     i1LCD_Command@ans:	
   912                           ; 1 bytes @ 0x6
   913                           
   914  0076                     ___wmul@multiplicand:	
   915                           ; 1 bytes @ 0x6
   916                           
   917  0076                     ___lwdiv@divisor:	
   918                           ; 2 bytes @ 0x6
   919                           
   920                           
   921                           ; 2 bytes @ 0x6
   922  0076                     	ds	1
   923  0077                     ?_LCD_SetCursor:	
   924  0077                     ??i1_LCD_Clear:	
   925                           ; 0 bytes @ 0x7
   926                           
   927  0077                     LCD_SetCursor@row:	
   928                           ; 0 bytes @ 0x7
   929                           
   930  0077                     ___awdiv@quotient:	
   931                           ; 1 bytes @ 0x7
   932                           
   933                           
   934                           ; 2 bytes @ 0x7
   935  0077                     	ds	1
   936  0078                     ??_LCD_SetCursor:	
   937  0078                     ??___wmul:	
   938                           ; 0 bytes @ 0x8
   939                           
   940  0078                     ??___almod:	
   941                           ; 0 bytes @ 0x8
   942                           
   943  0078                     ??___lldiv:	
   944                           ; 0 bytes @ 0x8
   945                           
   946  0078                     LCD_SetCursor@row_offsets:	
   947                           ; 0 bytes @ 0x8
   948                           
   949  0078                     LCD_Puts@ans:	
   950                           ; 2 bytes @ 0x8
   951                           
   952  0078                     ___wmul@product:	
   953                           ; 2 bytes @ 0x8
   954                           
   955  0078                     ___lwdiv@dividend:	
   956                           ; 2 bytes @ 0x8
   957                           
   958                           
   959                           ; 2 bytes @ 0x8
   960  0078                     	ds	1
   961  0079                     ___almod@counter:	
   962  0079                     ___lldiv@quotient:	
   963                           ; 1 bytes @ 0x9
   964                           
   965                           
   966                           ; 4 bytes @ 0x9
   967  0079                     	ds	1
   968  007A                     ??___lwdiv:	
   969  007A                     LCD_SetCursor@col:	
   970                           ; 0 bytes @ 0xA
   971                           
   972  007A                     ___almod@sign:	
   973                           ; 1 bytes @ 0xA
   974                           
   975                           
   976                           ; 1 bytes @ 0xA
   977  007A                     	ds	1
   978  007B                     ??___aldiv:	
   979  007B                     ___lwdiv@quotient:	
   980                           ; 0 bytes @ 0xB
   981                           
   982                           
   983                           ; 2 bytes @ 0xB
   984  007B                     	ds	2
   985  007D                     ___lldiv@counter:	
   986  007D                     ___lwdiv@counter:	
   987                           ; 1 bytes @ 0xD
   988                           
   989                           
   990                           ; 1 bytes @ 0xD
   991  007D                     	ds	1
   992                           
   993                           	psect	cstackBANK0
   994  003B                     __pcstackBANK0:	
   995  003B                     ??_lchika:	
   996  003B                     ?___aldiv:	
   997                           ; 0 bytes @ 0x0
   998                           
   999  003B                     ___aldiv@divisor:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x0
  1004  003B                     	ds	4
  1005  003F                     lchika@i:	
  1006  003F                     ___aldiv@dividend:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  003F                     	ds	4
  1012  0043                     ___aldiv@counter:	
  1013                           
  1014                           ; 1 bytes @ 0x8
  1015  0043                     	ds	1
  1016  0044                     ___aldiv@sign:	
  1017                           
  1018                           ; 1 bytes @ 0x9
  1019  0044                     	ds	1
  1020  0045                     ___aldiv@quotient:	
  1021                           
  1022                           ; 4 bytes @ 0xA
  1023  0045                     	ds	4
  1024  0049                     ?_display:	
  1025  0049                     display@co:	
  1026                           ; 0 bytes @ 0xE
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0xE
  1030  0049                     	ds	1
  1031  004A                     ??_display:	
  1032                           
  1033                           ; 0 bytes @ 0xF
  1034  004A                     	ds	2
  1035  004C                     display@i:	
  1036                           
  1037                           ; 1 bytes @ 0x11
  1038  004C                     	ds	1
  1039  004D                     ??_isr:	
  1040                           
  1041                           ; 0 bytes @ 0x12
  1042  004D                     	ds	8
  1043  0055                     isr@i:	
  1044                           
  1045                           ; 1 bytes @ 0x1A
  1046  0055                     	ds	1
  1047                           
  1048                           	psect	maintext
  1049  0372                     __pmaintext:	
  1050 ;;
  1051 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1052 ;;
  1053 ;; *************** function _main *****************
  1054 ;; Defined at:
  1055 ;;		line 303 in file "PIC16F1827-ChargeStation4-02.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  ringbuf        50    0[BANK2 ] unsigned char [50]
  1060 ;;  i               1   50[BANK2 ] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2  402[None  ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : B1F/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1070 ;;      Params:         0       0       0       0       0       0
  1071 ;;      Locals:         0       0       0      51       0       0
  1072 ;;      Temps:          0       0      12       0       0       0
  1073 ;;      Totals:         0       0      12      51       0       0
  1074 ;;Total ram usage:       63 bytes
  1075 ;; Hardware stack levels required when called:   12
  1076 ;; This function calls:
  1077 ;;		_EEP_Read
  1078 ;;		_EEP_Writes
  1079 ;;		_LED
  1080 ;;		_OUT
  1081 ;;		___lmul
  1082 ;;		_flag_clear
  1083 ;;		_flag_read
  1084 ;;		_main_init
  1085 ;;		_ringbuf_init
  1086 ;; This function is called by:
  1087 ;;		Startup code after reset
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _main
  1093  0372                     _main:	
  1094                           
  1095                           ;PIC16F1827-ChargeStation4-02.c: 304: main_init();
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1099  0372  318D  2555  3183   	fcall	_main_init
  1100                           
  1101                           ;PIC16F1827-ChargeStation4-02.c: 306: OUT(0, 1);
  1102  0375  0021               	movlb	1	; select bank1
  1103  0376  01B9               	clrf	OUT@value^(0+128)
  1104  0377  0AB9               	incf	OUT@value^(0+128),f
  1105  0378  3000               	movlw	0
  1106  0379  318E  26C1  3183   	fcall	_OUT
  1107                           
  1108                           ;PIC16F1827-ChargeStation4-02.c: 307: OUT(1, 1);
  1109  037C  0021               	movlb	1	; select bank1
  1110  037D  01B9               	clrf	OUT@value^(0+128)
  1111  037E  0AB9               	incf	OUT@value^(0+128),f
  1112  037F  3001               	movlw	1
  1113  0380  318E  26C1  3183   	fcall	_OUT
  1114                           
  1115                           ;PIC16F1827-ChargeStation4-02.c: 308: OUT(2, 1);
  1116  0383  0021               	movlb	1	; select bank1
  1117  0384  01B9               	clrf	OUT@value^(0+128)
  1118  0385  0AB9               	incf	OUT@value^(0+128),f
  1119  0386  3002               	movlw	2
  1120  0387  318E  26C1  3183   	fcall	_OUT
  1121                           
  1122                           ;PIC16F1827-ChargeStation4-02.c: 309: LED(0, 1);
  1123  038A  0021               	movlb	1	; select bank1
  1124  038B  01B9               	clrf	LED@value^(0+128)
  1125  038C  0AB9               	incf	LED@value^(0+128),f
  1126  038D  3000               	movlw	0
  1127  038E  318D  25C2  3183   	fcall	_LED
  1128                           
  1129                           ;PIC16F1827-ChargeStation4-02.c: 310: LED(1, 1);
  1130  0391  0021               	movlb	1	; select bank1
  1131  0392  01B9               	clrf	LED@value^(0+128)
  1132  0393  0AB9               	incf	LED@value^(0+128),f
  1133  0394  3001               	movlw	1
  1134  0395  318D  25C2  3183   	fcall	_LED
  1135                           
  1136                           ;PIC16F1827-ChargeStation4-02.c: 311: LED(2, 1);
  1137  0398  0021               	movlb	1	; select bank1
  1138  0399  01B9               	clrf	LED@value^(0+128)
  1139  039A  0AB9               	incf	LED@value^(0+128),f
  1140  039B  3002               	movlw	2
  1141  039C  318D  25C2  3183   	fcall	_LED
  1142                           
  1143                           ;PIC16F1827-ChargeStation4-02.c: 313: uint8_t ringbuf[50];
  1144                           ;PIC16F1827-ChargeStation4-02.c: 314: ringbuf_init(&tx_buf, ringbuf, sizeof (ringbuf));
  1145  039F  3020               	movlw	(low (main@ringbuf| (0+256)))& (0+255)
  1146  03A0  0021               	movlb	1	; select bank1
  1147  03A1  00C5               	movwf	??_main^(0+128)
  1148  03A2  0845               	movf	??_main^(0+128),w
  1149  03A3  00B9               	movwf	ringbuf_init@internal_buf^(0+128)
  1150  03A4  3032               	movlw	50
  1151  03A5  00C6               	movwf	(??_main+1)^(0+128)
  1152  03A6  0846               	movf	(??_main+1)^(0+128),w
  1153  03A7  00BA               	movwf	ringbuf_init@bufsize^(0+128)
  1154  03A8  30B5               	movlw	(low (_tx_buf| 0))& (0+255)
  1155  03A9  318C  2486  3183   	fcall	_ringbuf_init
  1156                           
  1157                           ;PIC16F1827-ChargeStation4-02.c: 315: _delay((unsigned long)((10)*(32000000/4000.0)));
  1158  03AC  3068               	movlw	104
  1159  03AD  0021               	movlb	1	; select bank1
  1160  03AE  00C6               	movwf	(??_main^(0+128)+1)
  1161  03AF  30E4               	movlw	228
  1162  03B0  00C5               	movwf	??_main^(0+128)
  1163  03B1                     u3887:	
  1164  03B1  0BC5               	decfsz	??_main^(0+128),f
  1165  03B2  2BB1               	goto	u3887
  1166  03B3  0BC6               	decfsz	(??_main^(0+128)+1),f
  1167  03B4  2BB1               	goto	u3887
  1168  03B5  0000               	nop
  1169                           
  1170                           ;PIC16F1827-ChargeStation4-02.c: 317: GIE = 0;
  1171  03B6  138B               	bcf	11,7	;volatile
  1172                           
  1173                           ;PIC16F1827-ChargeStation4-02.c: 318: uint8_t i;
  1174                           ;PIC16F1827-ChargeStation4-02.c: 319: for (i = 0; i < 3; i++) {
  1175  03B7  0022               	movlb	2	; select bank2
  1176  03B8  01D2               	clrf	main@i^(0+256)
  1177  03B9  3003               	movlw	3
  1178  03BA  0252               	subwf	main@i^(0+256),w
  1179  03BB  1803               	btfsc	3,0
  1180  03BC  2C37               	goto	l404
  1181  03BD                     l3344:	
  1182                           
  1183                           ;PIC16F1827-ChargeStation4-02.c: 320: ss[i] = (0xFF & EEP_Read(i, 1))+(0xFF00 & (EEP_Rea
      +                          d(i, 0) << 8));
  1184  03BD  0021               	movlb	1	; select bank1
  1185  03BE  01BF               	clrf	EEP_Read@Reg_l^(0+128)
  1186  03BF  0022               	movlb	2	; select bank2
  1187  03C0  0852               	movf	main@i^(0+256),w
  1188  03C1  318F  2780  3183   	fcall	_EEP_Read
  1189  03C4  0021               	movlb	1	; select bank1
  1190  03C5  00C5               	movwf	??_main^(0+128)
  1191  03C6  01C6               	clrf	(??_main^(0+128)+1)
  1192  03C7  0845               	movf	??_main^(0+128),w
  1193  03C8  00C6               	movwf	(??_main^(0+128)+1)
  1194  03C9  01C5               	clrf	??_main^(0+128)
  1195  03CA  3000               	movlw	0
  1196  03CB  0545               	andwf	??_main^(0+128),w
  1197  03CC  00C8               	movwf	(??_main+3)^(0+128)
  1198  03CD  30FF               	movlw	255
  1199  03CE  0546               	andwf	(??_main+1)^(0+128),w
  1200  03CF  00C9               	movwf	(??_main+4)^(0+128)
  1201  03D0  01BF               	clrf	EEP_Read@Reg_l^(0+128)
  1202  03D1  0ABF               	incf	EEP_Read@Reg_l^(0+128),f
  1203  03D2  0022               	movlb	2	; select bank2
  1204  03D3  0852               	movf	main@i^(0+256),w
  1205  03D4  318F  2780  3183   	fcall	_EEP_Read
  1206  03D7  0021               	movlb	1	; select bank1
  1207  03D8  0748               	addwf	(??_main+3)^(0+128),w
  1208  03D9  00CA               	movwf	(??_main+5)^(0+128)
  1209  03DA  0849               	movf	(??_main+4)^(0+128),w
  1210  03DB  1803               	skipnc
  1211  03DC  0A49               	incf	(??_main+4)^(0+128),w
  1212  03DD  00CB               	movwf	((??_main+5)^(0+128)+1)
  1213  03DE  084A               	movf	(??_main+5)^(0+128),w
  1214  03DF  00CC               	movwf	(??_main+7)^(0+128)
  1215  03E0  084B               	movf	(??_main+6)^(0+128),w
  1216  03E1  00CD               	movwf	((??_main+7)^(0+128)+1)
  1217  03E2  01CE               	clrf	((??_main+7)^(0+128)+2)
  1218  03E3  01CF               	clrf	((??_main+7)^(0+128)+3)
  1219  03E4  0022               	movlb	2	; select bank2
  1220  03E5  0852               	movf	main@i^(0+256),w
  1221  03E6  0021               	movlb	1	; select bank1
  1222  03E7  00D0               	movwf	(??_main+11)^(0+128)
  1223  03E8  3001               	movlw	1
  1224  03E9                     u3745:	
  1225  03E9  35D0               	lslf	(??_main+11)^(0+128),f
  1226  03EA  3EFF               	addlw	-1
  1227  03EB  1D03               	skipz
  1228  03EC  2BE9               	goto	u3745
  1229  03ED  3550               	lslf	(??_main+11)^(0+128),w
  1230  03EE  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1231  03EF  0086               	movwf	6
  1232  03F0  0187               	clrf	7
  1233  03F1  084C               	movf	(??_main+7)^(0+128),w
  1234  03F2  3FC0               	movwi [0]fsr1
  1235  03F3  084D               	movf	(??_main+8)^(0+128),w
  1236  03F4  3FC1               	movwi [1]fsr1
  1237  03F5  084E               	movf	(??_main+9)^(0+128),w
  1238  03F6  3FC2               	movwi [2]fsr1
  1239  03F7  084F               	movf	(??_main+10)^(0+128),w
  1240  03F8  3FC3               	movwi [3]fsr1
  1241                           
  1242                           ;PIC16F1827-ChargeStation4-02.c: 323: ss[i] *= 3600;
  1243  03F9  3000               	movlw	0
  1244  03FA  00BC               	movwf	(___lmul@multiplier+3)^(0+128)
  1245  03FB  3000               	movlw	0
  1246  03FC  00BB               	movwf	(___lmul@multiplier+2)^(0+128)
  1247  03FD  300E               	movlw	14
  1248  03FE  00BA               	movwf	(___lmul@multiplier+1)^(0+128)
  1249  03FF  3010               	movlw	16
  1250  0400  00B9               	movwf	___lmul@multiplier^(0+128)
  1251  0401  0022               	movlb	2	; select bank2
  1252  0402  0852               	movf	main@i^(0+256),w
  1253  0403  0021               	movlb	1	; select bank1
  1254  0404  00C5               	movwf	??_main^(0+128)
  1255  0405  3001               	movlw	1
  1256  0406                     u3755:	
  1257  0406  35C5               	lslf	??_main^(0+128),f
  1258  0407  3EFF               	addlw	-1
  1259  0408  1D03               	skipz
  1260  0409  2C06               	goto	u3755
  1261  040A  3545               	lslf	??_main^(0+128),w
  1262  040B  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1263  040C  0086               	movwf	6
  1264  040D  0187               	clrf	7
  1265  040E  3F40               	moviw [0]fsr1
  1266  040F  00BD               	movwf	___lmul@multiplicand^(0+128)
  1267  0410  3F41               	moviw [1]fsr1
  1268  0411  00BE               	movwf	(___lmul@multiplicand+1)^(0+128)
  1269  0412  3F42               	moviw [2]fsr1
  1270  0413  00BF               	movwf	(___lmul@multiplicand+2)^(0+128)
  1271  0414  3F43               	moviw [3]fsr1
  1272  0415  00C0               	movwf	(___lmul@multiplicand+3)^(0+128)
  1273  0416  318F  271C  3183   	fcall	___lmul
  1274  0419  0022               	movlb	2	; select bank2
  1275  041A  0852               	movf	main@i^(0+256),w
  1276  041B  0021               	movlb	1	; select bank1
  1277  041C  00C6               	movwf	(??_main+1)^(0+128)
  1278  041D  3001               	movlw	1
  1279  041E                     u3765:	
  1280  041E  35C6               	lslf	(??_main+1)^(0+128),f
  1281  041F  3EFF               	addlw	-1
  1282  0420  1D03               	skipz
  1283  0421  2C1E               	goto	u3765
  1284  0422  3546               	lslf	(??_main+1)^(0+128),w
  1285  0423  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1286  0424  0086               	movwf	6
  1287  0425  0187               	clrf	7
  1288  0426  0839               	movf	?___lmul^(0+128),w
  1289  0427  3FC0               	movwi [0]fsr1
  1290  0428  083A               	movf	(?___lmul+1)^(0+128),w
  1291  0429  3FC1               	movwi [1]fsr1
  1292  042A  083B               	movf	(?___lmul+2)^(0+128),w
  1293  042B  3FC2               	movwi [2]fsr1
  1294  042C  083C               	movf	(?___lmul+3)^(0+128),w
  1295  042D  3FC3               	movwi [3]fsr1
  1296  042E  3001               	movlw	1
  1297  042F  00C5               	movwf	??_main^(0+128)
  1298  0430  0845               	movf	??_main^(0+128),w
  1299  0431  0022               	movlb	2	; select bank2
  1300  0432  07D2               	addwf	main@i^(0+256),f
  1301  0433  3003               	movlw	3
  1302  0434  0252               	subwf	main@i^(0+256),w
  1303  0435  1C03               	skipc
  1304  0436  2BBD               	goto	l3344
  1305  0437                     l404:	
  1306                           
  1307                           ;PIC16F1827-ChargeStation4-02.c: 324: }
  1308                           ;PIC16F1827-ChargeStation4-02.c: 325: INTCONbits.GIE = 1;
  1309  0437  178B               	bsf	11,7	;volatile
  1310  0438                     l3350:	
  1311                           ;PIC16F1827-ChargeStation4-02.c: 326: while (1) {
  1312                           
  1313                           
  1314                           ;PIC16F1827-ChargeStation4-02.c: 327: for (i = 0; i < 3; i++) {
  1315  0438  01D2               	clrf	main@i^(0+256)
  1316  0439                     L1:	
  1317  0439  3003               	movlw	3
  1318  043A  0252               	subwf	main@i^(0+256),w
  1319  043B  1803               	btfsc	3,0
  1320  043C  2C38               	goto	l3350
  1321                           
  1322                           ;PIC16F1827-ChargeStation4-02.c: 328: if (flag_read(i, 0x10)) {
  1323  043D  3010               	movlw	16
  1324  043E  0021               	movlb	1	; select bank1
  1325  043F  00C5               	movwf	??_main^(0+128)
  1326  0440  0845               	movf	??_main^(0+128),w
  1327  0441  00B9               	movwf	flag_read@bit_and^(0+128)
  1328  0442  0022               	movlb	2	; select bank2
  1329  0443  0852               	movf	main@i^(0+256),w
  1330  0444  318D  2515  3183   	fcall	_flag_read
  1331  0447  3A00               	xorlw	0
  1332  0448  1903               	skipnz
  1333  0449  2C63               	goto	l3362
  1334                           
  1335                           ;PIC16F1827-ChargeStation4-02.c: 329: OUT(i, 1);
  1336  044A  0021               	movlb	1	; select bank1
  1337  044B  01B9               	clrf	OUT@value^(0+128)
  1338  044C  0AB9               	incf	OUT@value^(0+128),f
  1339  044D  0022               	movlb	2	; select bank2
  1340  044E  0852               	movf	main@i^(0+256),w
  1341  044F  318E  26C1  3183   	fcall	_OUT
  1342                           
  1343                           ;PIC16F1827-ChargeStation4-02.c: 330: LED(i, 1);
  1344  0452  0021               	movlb	1	; select bank1
  1345  0453  01B9               	clrf	LED@value^(0+128)
  1346  0454  0AB9               	incf	LED@value^(0+128),f
  1347  0455  0022               	movlb	2	; select bank2
  1348  0456  0852               	movf	main@i^(0+256),w
  1349  0457  318D  25C2  3183   	fcall	_LED
  1350                           
  1351                           ;PIC16F1827-ChargeStation4-02.c: 331: cut[i] = 0;
  1352  045A  0022               	movlb	2	; select bank2
  1353  045B  3552               	lslf	main@i^(0+256),w
  1354  045C  3E53               	addlw	(low (_cut| (0+256)))& (0+255)
  1355  045D  0086               	movwf	6
  1356  045E  3001               	movlw	1	; select bank2/3
  1357  045F  0087               	movwf	7
  1358  0460  3000               	movlw	0
  1359  0461  3FC0               	movwi [0]fsr1
  1360  0462  3FC1               	movwi [1]fsr1
  1361  0463                     l3362:	
  1362                           
  1363                           ;PIC16F1827-ChargeStation4-02.c: 332: }
  1364                           ;PIC16F1827-ChargeStation4-02.c: 333: if (flag_read(i, 0x01)) {
  1365  0463  0021               	movlb	1	; select bank1
  1366  0464  01B9               	clrf	flag_read@bit_and^(0+128)
  1367  0465  0AB9               	incf	flag_read@bit_and^(0+128),f
  1368  0466  0022               	movlb	2	; select bank2
  1369  0467  0852               	movf	main@i^(0+256),w
  1370  0468  318D  2515  3183   	fcall	_flag_read
  1371  046B  3A00               	xorlw	0
  1372  046C  1903               	skipnz
  1373  046D  2C91               	goto	l3376
  1374                           
  1375                           ;PIC16F1827-ChargeStation4-02.c: 334: print_port = i;
  1376  046E  0022               	movlb	2	; select bank2
  1377  046F  0852               	movf	main@i^(0+256),w
  1378  0470  0021               	movlb	1	; select bank1
  1379  0471  00C5               	movwf	??_main^(0+128)
  1380  0472  0845               	movf	??_main^(0+128),w
  1381  0473  0020               	movlb	0	; select bank0
  1382  0474  00B1               	movwf	_print_port
  1383                           
  1384                           ;PIC16F1827-ChargeStation4-02.c: 335: if (print_content == 2) print_content = 1;
  1385  0475  3002               	movlw	2
  1386  0476  0630               	xorwf	_print_content,w
  1387  0477  1D03               	btfss	3,2
  1388  0478  2C7C               	goto	l3370
  1389  0479  01B0               	clrf	_print_content
  1390  047A  0AB0               	incf	_print_content,f
  1391  047B  2C82               	goto	l3372
  1392  047C                     l3370:	
  1393                           
  1394                           ;PIC16F1827-ChargeStation4-02.c: 336: else print_content++;
  1395  047C  3001               	movlw	1
  1396  047D  0021               	movlb	1	; select bank1
  1397  047E  00C5               	movwf	??_main^(0+128)
  1398  047F  0845               	movf	??_main^(0+128),w
  1399  0480  0020               	movlb	0	; select bank0
  1400  0481  07B0               	addwf	_print_content,f
  1401  0482                     l3372:	
  1402                           
  1403                           ;PIC16F1827-ChargeStation4-02.c: 337: LED(i, 1);
  1404  0482  0021               	movlb	1	; select bank1
  1405  0483  01B9               	clrf	LED@value^(0+128)
  1406  0484  0AB9               	incf	LED@value^(0+128),f
  1407  0485  0022               	movlb	2	; select bank2
  1408  0486  0852               	movf	main@i^(0+256),w
  1409  0487  318D  25C2  3183   	fcall	_LED
  1410                           
  1411                           ;PIC16F1827-ChargeStation4-02.c: 338: flag_clear(i, 0x00);
  1412  048A  0021               	movlb	1	; select bank1
  1413  048B  01B9               	clrf	flag_clear@bit_and^(0+128)
  1414  048C  0022               	movlb	2	; select bank2
  1415  048D  0852               	movf	main@i^(0+256),w
  1416  048E  318D  2578  3183   	fcall	_flag_clear
  1417  0491                     l3376:	
  1418                           
  1419                           ;PIC16F1827-ChargeStation4-02.c: 339: }
  1420                           ;PIC16F1827-ChargeStation4-02.c: 340: if (flag_read(i, 0x40)) {
  1421  0491  3040               	movlw	64
  1422  0492  0021               	movlb	1	; select bank1
  1423  0493  00C5               	movwf	??_main^(0+128)
  1424  0494  0845               	movf	??_main^(0+128),w
  1425  0495  00B9               	movwf	flag_read@bit_and^(0+128)
  1426  0496  0022               	movlb	2	; select bank2
  1427  0497  0852               	movf	main@i^(0+256),w
  1428  0498  318D  2515  3183   	fcall	_flag_read
  1429  049B  3A00               	xorlw	0
  1430  049C  1903               	skipnz
  1431  049D  2CB5               	goto	l3386
  1432                           
  1433                           ;PIC16F1827-ChargeStation4-02.c: 341: print_port = i;
  1434  049E  0022               	movlb	2	; select bank2
  1435  049F  0852               	movf	main@i^(0+256),w
  1436  04A0  0021               	movlb	1	; select bank1
  1437  04A1  00C5               	movwf	??_main^(0+128)
  1438  04A2  0845               	movf	??_main^(0+128),w
  1439  04A3  0020               	movlb	0	; select bank0
  1440  04A4  00B1               	movwf	_print_port
  1441                           
  1442                           ;PIC16F1827-ChargeStation4-02.c: 342: print_content = 0;
  1443  04A5  01B0               	clrf	_print_content
  1444                           
  1445                           ;PIC16F1827-ChargeStation4-02.c: 343: LED(i, 1);
  1446  04A6  0021               	movlb	1	; select bank1
  1447  04A7  01B9               	clrf	LED@value^(0+128)
  1448  04A8  0AB9               	incf	LED@value^(0+128),f
  1449  04A9  0022               	movlb	2	; select bank2
  1450  04AA  0852               	movf	main@i^(0+256),w
  1451  04AB  318D  25C2  3183   	fcall	_LED
  1452                           
  1453                           ;PIC16F1827-ChargeStation4-02.c: 344: flag_clear(i, 0x00);
  1454  04AE  0021               	movlb	1	; select bank1
  1455  04AF  01B9               	clrf	flag_clear@bit_and^(0+128)
  1456  04B0  0022               	movlb	2	; select bank2
  1457  04B1  0852               	movf	main@i^(0+256),w
  1458  04B2  318D  2578  3183   	fcall	_flag_clear
  1459  04B5                     l3386:	
  1460                           
  1461                           ;PIC16F1827-ChargeStation4-02.c: 345: }
  1462                           ;PIC16F1827-ChargeStation4-02.c: 346: if (flag_read(i, 0x80)) {
  1463  04B5  3080               	movlw	128
  1464  04B6  0021               	movlb	1	; select bank1
  1465  04B7  00C5               	movwf	??_main^(0+128)
  1466  04B8  0845               	movf	??_main^(0+128),w
  1467  04B9  00B9               	movwf	flag_read@bit_and^(0+128)
  1468  04BA  0022               	movlb	2	; select bank2
  1469  04BB  0852               	movf	main@i^(0+256),w
  1470  04BC  318D  2515  3183   	fcall	_flag_read
  1471  04BF  3A00               	xorlw	0
  1472  04C0  1903               	skipnz
  1473  04C1  2CEC               	goto	l3396
  1474                           
  1475                           ;PIC16F1827-ChargeStation4-02.c: 347: ss[i] = 0;
  1476  04C2  0022               	movlb	2	; select bank2
  1477  04C3  0852               	movf	main@i^(0+256),w
  1478  04C4  0021               	movlb	1	; select bank1
  1479  04C5  00C5               	movwf	??_main^(0+128)
  1480  04C6  3001               	movlw	1
  1481  04C7                     u3845:	
  1482  04C7  35C5               	lslf	??_main^(0+128),f
  1483  04C8  3EFF               	addlw	-1
  1484  04C9  1D03               	skipz
  1485  04CA  2CC7               	goto	u3845
  1486  04CB  3545               	lslf	??_main^(0+128),w
  1487  04CC  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1488  04CD  0086               	movwf	6
  1489  04CE  0187               	clrf	7
  1490  04CF  3000               	movlw	0
  1491  04D0  3FC0               	movwi [0]fsr1
  1492  04D1  3000               	movlw	0
  1493  04D2  3FC1               	movwi [1]fsr1
  1494  04D3  3FC2               	movwi [2]fsr1
  1495  04D4  3FC3               	movwi [3]fsr1
  1496                           
  1497                           ;PIC16F1827-ChargeStation4-02.c: 348: print_content = 3;
  1498  04D5  3003               	movlw	3
  1499  04D6  00C5               	movwf	??_main^(0+128)
  1500  04D7  0845               	movf	??_main^(0+128),w
  1501  04D8  0020               	movlb	0	; select bank0
  1502  04D9  00B0               	movwf	_print_content
  1503                           
  1504                           ;PIC16F1827-ChargeStation4-02.c: 349: LED(i, 1);
  1505  04DA  0021               	movlb	1	; select bank1
  1506  04DB  01B9               	clrf	LED@value^(0+128)
  1507  04DC  0AB9               	incf	LED@value^(0+128),f
  1508  04DD  0022               	movlb	2	; select bank2
  1509  04DE  0852               	movf	main@i^(0+256),w
  1510  04DF  318D  25C2  3183   	fcall	_LED
  1511                           
  1512                           ;PIC16F1827-ChargeStation4-02.c: 350: flag_clear(i, 0x08);
  1513  04E2  3008               	movlw	8
  1514  04E3  0021               	movlb	1	; select bank1
  1515  04E4  00C5               	movwf	??_main^(0+128)
  1516  04E5  0845               	movf	??_main^(0+128),w
  1517  04E6  00B9               	movwf	flag_clear@bit_and^(0+128)
  1518  04E7  0022               	movlb	2	; select bank2
  1519  04E8  0852               	movf	main@i^(0+256),w
  1520  04E9  318D  2578  3183   	fcall	_flag_clear
  1521  04EC                     l3396:	
  1522                           
  1523                           ;PIC16F1827-ChargeStation4-02.c: 351: }
  1524                           ;PIC16F1827-ChargeStation4-02.c: 352: if (flag_read(i, 0x08)) {
  1525  04EC  3008               	movlw	8
  1526  04ED  0021               	movlb	1	; select bank1
  1527  04EE  00C5               	movwf	??_main^(0+128)
  1528  04EF  0845               	movf	??_main^(0+128),w
  1529  04F0  00B9               	movwf	flag_read@bit_and^(0+128)
  1530  04F1  0022               	movlb	2	; select bank2
  1531  04F2  0852               	movf	main@i^(0+256),w
  1532  04F3  318D  2515  3183   	fcall	_flag_read
  1533  04F6  3A00               	xorlw	0
  1534  04F7  1903               	skipnz
  1535  04F8  2D0A               	goto	l3404
  1536                           
  1537                           ;PIC16F1827-ChargeStation4-02.c: 353: print_content = 0;
  1538  04F9  0020               	movlb	0	; select bank0
  1539  04FA  01B0               	clrf	_print_content
  1540                           
  1541                           ;PIC16F1827-ChargeStation4-02.c: 354: LED(i, 1);
  1542  04FB  0021               	movlb	1	; select bank1
  1543  04FC  01B9               	clrf	LED@value^(0+128)
  1544  04FD  0AB9               	incf	LED@value^(0+128),f
  1545  04FE  0022               	movlb	2	; select bank2
  1546  04FF  0852               	movf	main@i^(0+256),w
  1547  0500  318D  25C2  3183   	fcall	_LED
  1548                           
  1549                           ;PIC16F1827-ChargeStation4-02.c: 355: flag_clear(i, 0x00);
  1550  0503  0021               	movlb	1	; select bank1
  1551  0504  01B9               	clrf	flag_clear@bit_and^(0+128)
  1552  0505  0022               	movlb	2	; select bank2
  1553  0506  0852               	movf	main@i^(0+256),w
  1554  0507  318D  2578  3183   	fcall	_flag_clear
  1555  050A                     l3404:	
  1556                           
  1557                           ;PIC16F1827-ChargeStation4-02.c: 356: }
  1558                           ;PIC16F1827-ChargeStation4-02.c: 357: if (change_flag[i]) {
  1559  050A  0022               	movlb	2	; select bank2
  1560  050B  0852               	movf	main@i^(0+256),w
  1561  050C  3EAC               	addlw	(low (_change_flag| 0))& (0+255)
  1562  050D  0086               	movwf	6
  1563  050E  0187               	clrf	7
  1564  050F  0801               	movf	1,w
  1565  0510  1903               	btfsc	3,2
  1566  0511  2D36               	goto	l3410
  1567                           
  1568                           ;PIC16F1827-ChargeStation4-02.c: 358: change_flag[i] = 0;
  1569  0512  0852               	movf	main@i^(0+256),w
  1570  0513  3EAC               	addlw	(low (_change_flag| 0))& (0+255)
  1571  0514  0086               	movwf	6
  1572  0515  0187               	clrf	7
  1573  0516  0181               	clrf	1
  1574                           
  1575                           ;PIC16F1827-ChargeStation4-02.c: 359: EEP_Writes(i, 0, s[i] >> 8, s[i]);
  1576  0517  0021               	movlb	1	; select bank1
  1577  0518  01BD               	clrf	EEP_Writes@Reg_l^(0+128)
  1578  0519  0022               	movlb	2	; select bank2
  1579  051A  3552               	lslf	main@i^(0+256),w
  1580  051B  3E20               	addlw	(low (_s| 0))& (0+255)
  1581  051C  0086               	movwf	6
  1582  051D  0187               	clrf	7
  1583  051E  3F40               	moviw [0]fsr1
  1584  051F  0021               	movlb	1	; select bank1
  1585  0520  00C5               	movwf	??_main^(0+128)
  1586  0521  3F41               	moviw [1]fsr1
  1587  0522  00C6               	movwf	(??_main^(0+128)+1)
  1588  0523  0846               	movf	(??_main+1)^(0+128),w
  1589  0524  00C7               	movwf	(??_main+2)^(0+128)
  1590  0525  0847               	movf	(??_main+2)^(0+128),w
  1591  0526  00BE               	movwf	EEP_Writes@data_0^(0+128)
  1592  0527  0022               	movlb	2	; select bank2
  1593  0528  3552               	lslf	main@i^(0+256),w
  1594  0529  3E20               	addlw	(low (_s| 0))& (0+255)
  1595  052A  0086               	movwf	6
  1596  052B  0187               	clrf	7
  1597  052C  0801               	movf	1,w
  1598  052D  0021               	movlb	1	; select bank1
  1599  052E  00C8               	movwf	(??_main+3)^(0+128)
  1600  052F  0848               	movf	(??_main+3)^(0+128),w
  1601  0530  00BF               	movwf	EEP_Writes@data_1^(0+128)
  1602  0531  0022               	movlb	2	; select bank2
  1603  0532  0852               	movf	main@i^(0+256),w
  1604  0533  318E  2613  3183   	fcall	_EEP_Writes
  1605  0536                     l3410:	
  1606  0536  3001               	movlw	1
  1607  0537  0021               	movlb	1	; select bank1
  1608  0538  00C5               	movwf	??_main^(0+128)
  1609  0539  0845               	movf	??_main^(0+128),w
  1610  053A  0022               	movlb	2	; select bank2
  1611  053B  07D2               	addwf	main@i^(0+256),f
  1612  053C  2C39               	goto	L1
  1613  053D                     __end_of_main:	
  1614                           ;PIC16F1827-ChargeStation4-02.c: 360: }
  1615                           ;PIC16F1827-ChargeStation4-02.c: 361: }
  1616                           ;PIC16F1827-ChargeStation4-02.c: 362: }
  1617                           ;PIC16F1827-ChargeStation4-02.c: 363: return 0;
  1618                           ;	Return value of _main is never used
  1619                           
  1620                           
  1621                           	psect	text1
  1622  0C86                     __ptext1:	
  1623 ;; *************** function _ringbuf_init *****************
  1624 ;; Defined at:
  1625 ;;		line 113 in file "My_header_16F.h"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  rb              1    wreg     PTR struct ringbuf
  1628 ;;		 -> tx_buf(4), 
  1629 ;;  internal_buf    1    0[BANK1 ] PTR unsigned char 
  1630 ;;		 -> main@ringbuf(50), 
  1631 ;;  bufsize         1    1[BANK1 ] unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  rb              1    3[BANK1 ] PTR struct ringbuf
  1634 ;;		 -> tx_buf(4), 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;		None               void
  1637 ;; Registers used:
  1638 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1644 ;;      Params:         0       0       2       0       0       0
  1645 ;;      Locals:         0       0       1       0       0       0
  1646 ;;      Temps:          0       0       1       0       0       0
  1647 ;;      Totals:         0       0       4       0       0       0
  1648 ;;Total ram usage:        4 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    6
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _ringbuf_init
  1660  0C86                     _ringbuf_init:	
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  1664                           ;ringbuf_init@rb stored from wreg
  1665  0C86  0021               	movlb	1	; select bank1
  1666  0C87  00BC               	movwf	ringbuf_init@rb^(0+128)
  1667                           
  1668                           ;My_header_16F.h: 114: rb->buf = internal_buf;
  1669  0C88  0839               	movf	ringbuf_init@internal_buf^(0+128),w
  1670  0C89  00BB               	movwf	??_ringbuf_init^(0+128)
  1671  0C8A  083C               	movf	ringbuf_init@rb^(0+128),w
  1672  0C8B  0086               	movwf	6
  1673  0C8C  0187               	clrf	7
  1674  0C8D  083B               	movf	??_ringbuf_init^(0+128),w
  1675  0C8E  0081               	movwf	1
  1676                           
  1677                           ;My_header_16F.h: 115: rb->size = bufsize;
  1678  0C8F  083A               	movf	ringbuf_init@bufsize^(0+128),w
  1679  0C90  00BB               	movwf	??_ringbuf_init^(0+128)
  1680  0C91  0A3C               	incf	ringbuf_init@rb^(0+128),w
  1681  0C92  0086               	movwf	6
  1682  0C93  0187               	clrf	7
  1683  0C94  083B               	movf	??_ringbuf_init^(0+128),w
  1684  0C95  0081               	movwf	1
  1685                           
  1686                           ;My_header_16F.h: 116: rb->head = 0;
  1687  0C96  083C               	movf	ringbuf_init@rb^(0+128),w
  1688  0C97  3E02               	addlw	2
  1689  0C98  0086               	movwf	6
  1690  0C99  0187               	clrf	7
  1691  0C9A  0181               	clrf	1
  1692                           
  1693                           ;My_header_16F.h: 117: rb->tail = 0;
  1694  0C9B  083C               	movf	ringbuf_init@rb^(0+128),w
  1695  0C9C  3E03               	addlw	3
  1696  0C9D  0086               	movwf	6
  1697  0C9E  0187               	clrf	7
  1698  0C9F  0181               	clrf	1
  1699  0CA0  0008               	return
  1700  0CA1                     __end_of_ringbuf_init:	
  1701                           
  1702                           	psect	text2
  1703  0D55                     __ptext2:	
  1704 ;; *************** function _main_init *****************
  1705 ;; Defined at:
  1706 ;;		line 284 in file "PIC16F1827-ChargeStation4-02.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;		None               void
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0, pclath, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1720 ;;      Params:         0       0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0
  1723 ;;      Totals:         0       0       0       0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:   11
  1727 ;; This function calls:
  1728 ;;		_I2C_init
  1729 ;;		_LCD_init
  1730 ;;		_adc_init
  1731 ;;		_timer0_init
  1732 ;;		_timer1_init
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _main_init
  1740  0D55                     _main_init:	
  1741                           
  1742                           ;PIC16F1827-ChargeStation4-02.c: 285: OSCCON = 0x70;
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
  1746  0D55  3070               	movlw	112
  1747  0D56  0021               	movlb	1	; select bank1
  1748  0D57  0099               	movwf	25	;volatile
  1749                           
  1750                           ;PIC16F1827-ChargeStation4-02.c: 286: TRISA = 0x3F;
  1751  0D58  303F               	movlw	63
  1752  0D59  008C               	movwf	12	;volatile
  1753                           
  1754                           ;PIC16F1827-ChargeStation4-02.c: 287: TRISB = 0x12;
  1755  0D5A  3012               	movlw	18
  1756  0D5B  008D               	movwf	13	;volatile
  1757                           
  1758                           ;PIC16F1827-ChargeStation4-02.c: 288: ANSELA = 0x07;
  1759  0D5C  3007               	movlw	7
  1760  0D5D  0023               	movlb	3	; select bank3
  1761  0D5E  008C               	movwf	12	;volatile
  1762                           
  1763                           ;PIC16F1827-ChargeStation4-02.c: 289: ANSELB = 0x00;
  1764  0D5F  018D               	clrf	13	;volatile
  1765                           
  1766                           ;PIC16F1827-ChargeStation4-02.c: 290: WPUB = 0b00010010;
  1767  0D60  3012               	movlw	18
  1768  0D61  0024               	movlb	4	; select bank4
  1769  0D62  008D               	movwf	13	;volatile
  1770                           
  1771                           ;PIC16F1827-ChargeStation4-02.c: 291: OPTION_REGbits.nWPUEN = 0;
  1772  0D63  0021               	movlb	1	; select bank1
  1773  0D64  1395               	bcf	21,7	;volatile
  1774                           
  1775                           ;PIC16F1827-ChargeStation4-02.c: 293: adc_init(3);
  1776  0D65  3003               	movlw	3
  1777  0D66  318B  23DC  318D   	fcall	_adc_init
  1778                           
  1779                           ;PIC16F1827-ChargeStation4-02.c: 294: timer0_init(4);
  1780  0D69  3004               	movlw	4
  1781  0D6A  318B  23F1  318D   	fcall	_timer0_init
  1782                           
  1783                           ;PIC16F1827-ChargeStation4-02.c: 295: timer1_init(2);
  1784  0D6D  3002               	movlw	2
  1785  0D6E  318C  2406  318D   	fcall	_timer1_init
  1786                           
  1787                           ;PIC16F1827-ChargeStation4-02.c: 297: I2C_init();
  1788  0D71  318B  2373  318D   	fcall	_I2C_init
  1789                           
  1790                           ;PIC16F1827-ChargeStation4-02.c: 298: LCD_init();
  1791  0D74  318F  27BD         	fcall	_LCD_init
  1792                           
  1793                           ;PIC16F1827-ChargeStation4-02.c: 300: INTCONbits.PEIE = 1;
  1794  0D76  170B               	bsf	11,6	;volatile
  1795  0D77  0008               	return
  1796  0D78                     __end_of_main_init:	
  1797                           
  1798                           	psect	text3
  1799  0C06                     __ptext3:	
  1800 ;; *************** function _timer1_init *****************
  1801 ;; Defined at:
  1802 ;;		line 29 in file "My_header_16F.h"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  prescaler       1    wreg     unsigned char 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1816 ;;      Params:         0       0       0       0       0       0
  1817 ;;      Locals:         0       0       1       0       0       0
  1818 ;;      Temps:          0       0       1       0       0       0
  1819 ;;      Totals:         0       0       2       0       0       0
  1820 ;;Total ram usage:        2 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    6
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main_init
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _timer1_init
  1832  0C06                     _timer1_init:	
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1836                           ;timer1_init@prescaler stored from wreg
  1837  0C06  0021               	movlb	1	; select bank1
  1838  0C07  00BA               	movwf	timer1_init@prescaler^(0+128)
  1839                           
  1840                           ;My_header_16F.h: 30: T1CONbits.TMR1ON = 1;
  1841  0C08  0020               	movlb	0	; select bank0
  1842  0C09  1418               	bsf	24,0	;volatile
  1843                           
  1844                           ;My_header_16F.h: 31: T1CONbits.TMR1CS = 0;
  1845  0C0A  303F               	movlw	-193
  1846  0C0B  0598               	andwf	24,f	;volatile
  1847                           
  1848                           ;My_header_16F.h: 32: T1CONbits.T1CKPS = prescaler;
  1849  0C0C  0021               	movlb	1	; select bank1
  1850  0C0D  083A               	movf	timer1_init@prescaler^(0+128),w
  1851  0C0E  00B9               	movwf	??_timer1_init^(0+128)
  1852  0C0F  0EB9               	swapf	??_timer1_init^(0+128),f
  1853  0C10  0020               	movlb	0	; select bank0
  1854  0C11  0818               	movf	24,w	;volatile
  1855  0C12  0021               	movlb	1	; select bank1
  1856  0C13  0639               	xorwf	??_timer1_init^(0+128),w
  1857  0C14  39CF               	andlw	-49
  1858  0C15  0639               	xorwf	??_timer1_init^(0+128),w
  1859  0C16  0020               	movlb	0	; select bank0
  1860  0C17  0098               	movwf	24	;volatile
  1861                           
  1862                           ;My_header_16F.h: 33: TMR1H = 0x00;
  1863  0C18  0197               	clrf	23	;volatile
  1864                           
  1865                           ;My_header_16F.h: 34: TMR1L = 0x00;
  1866  0C19  0196               	clrf	22	;volatile
  1867                           
  1868                           ;My_header_16F.h: 35: PIE1bits.TMR1IE = 1;
  1869  0C1A  0021               	movlb	1	; select bank1
  1870  0C1B  1411               	bsf	17,0	;volatile
  1871                           
  1872                           ;My_header_16F.h: 36: INTCONbits.PEIE = 1;
  1873  0C1C  170B               	bsf	11,6	;volatile
  1874  0C1D  0008               	return
  1875  0C1E                     __end_of_timer1_init:	
  1876                           
  1877                           	psect	text4
  1878  0BF1                     __ptext4:	
  1879 ;; *************** function _timer0_init *****************
  1880 ;; Defined at:
  1881 ;;		line 15 in file "My_header_16F.h"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  prescaler       1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1895 ;;      Params:         0       0       0       0       0       0
  1896 ;;      Locals:         0       0       1       0       0       0
  1897 ;;      Temps:          0       0       1       0       0       0
  1898 ;;      Totals:         0       0       2       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    6
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main_init
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _timer0_init
  1911  0BF1                     _timer0_init:	
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  1915                           ;timer0_init@prescaler stored from wreg
  1916  0BF1  0021               	movlb	1	; select bank1
  1917  0BF2  00BA               	movwf	timer0_init@prescaler^(0+128)
  1918                           
  1919                           ;My_header_16F.h: 16: if (prescaler == 0) {
  1920  0BF3  083A               	movf	timer0_init@prescaler^(0+128),w
  1921  0BF4  1D03               	btfss	3,2
  1922  0BF5  2BF8               	goto	l101
  1923                           
  1924                           ;My_header_16F.h: 17: OPTION_REGbits.PSA = 1;
  1925  0BF6  1595               	bsf	21,3	;volatile
  1926                           
  1927                           ;My_header_16F.h: 18: } else {
  1928  0BF7  2C01               	goto	l2924
  1929  0BF8                     l101:	
  1930                           
  1931                           ;My_header_16F.h: 19: OPTION_REGbits.PSA = 0;
  1932  0BF8  1195               	bcf	21,3	;volatile
  1933                           
  1934                           ;My_header_16F.h: 20: OPTION_REGbits.PS = prescaler - 1;
  1935  0BF9  30FF               	movlw	255
  1936  0BFA  073A               	addwf	timer0_init@prescaler^(0+128),w
  1937  0BFB  00B9               	movwf	??_timer0_init^(0+128)
  1938  0BFC  0815               	movf	21,w	;volatile
  1939  0BFD  0639               	xorwf	??_timer0_init^(0+128),w
  1940  0BFE  39F8               	andlw	-8
  1941  0BFF  0639               	xorwf	??_timer0_init^(0+128),w
  1942  0C00  0095               	movwf	21	;volatile
  1943  0C01                     l2924:	
  1944                           
  1945                           ;My_header_16F.h: 21: }
  1946                           ;My_header_16F.h: 22: OPTION_REGbits.TMR0CS = 0;
  1947  0C01  1295               	bcf	21,5	;volatile
  1948                           
  1949                           ;My_header_16F.h: 23: OPTION_REGbits.TMR0SE = 0;
  1950  0C02  1215               	bcf	21,4	;volatile
  1951                           
  1952                           ;My_header_16F.h: 24: INTCONbits.TMR0IE = 1;
  1953  0C03  168B               	bsf	11,5	;volatile
  1954                           
  1955                           ;My_header_16F.h: 25: INTCONbits.PEIE = 1;
  1956  0C04  170B               	bsf	11,6	;volatile
  1957  0C05  0008               	return
  1958  0C06                     __end_of_timer0_init:	
  1959                           
  1960                           	psect	text5
  1961  0BDC                     __ptext5:	
  1962 ;; *************** function _adc_init *****************
  1963 ;; Defined at:
  1964 ;;		line 43 in file "My_header_16F.h"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  p_ref           1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  p_ref           1    0[BANK1 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;		None               void
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1978 ;;      Params:         0       0       0       0       0       0
  1979 ;;      Locals:         0       0       1       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0
  1981 ;;      Totals:         0       0       1       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    6
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main_init
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _adc_init
  1994  0BDC                     _adc_init:	
  1995                           
  1996                           ;incstack = 0
  1997                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1998                           ;adc_init@p_ref stored from wreg
  1999  0BDC  0021               	movlb	1	; select bank1
  2000  0BDD  00B9               	movwf	adc_init@p_ref^(0+128)
  2001                           
  2002                           ;My_header_16F.h: 44: ADCON1bits.ADFM = 1;
  2003  0BDE  179E               	bsf	30,7	;volatile
  2004                           
  2005                           ;My_header_16F.h: 45: ADCON1bits.ADCS = 6;
  2006  0BDF  081E               	movf	30,w	;volatile
  2007  0BE0  398F               	andlw	-113
  2008  0BE1  3860               	iorlw	96
  2009  0BE2  009E               	movwf	30	;volatile
  2010                           
  2011                           ;My_header_16F.h: 46: ADCON1bits.ADNREF = 0;
  2012  0BE3  111E               	bcf	30,2	;volatile
  2013                           
  2014                           ;My_header_16F.h: 47: ADCON1bits.ADPREF = p_ref;
  2015  0BE4  081E               	movf	30,w	;volatile
  2016  0BE5  0639               	xorwf	adc_init@p_ref^(0+128),w
  2017  0BE6  39FC               	andlw	-4
  2018  0BE7  0639               	xorwf	adc_init@p_ref^(0+128),w
  2019  0BE8  009E               	movwf	30	;volatile
  2020                           
  2021                           ;My_header_16F.h: 48: if (p_ref == 3) FVRCON = 0x83;
  2022  0BE9  3003               	movlw	3
  2023  0BEA  0639               	xorwf	adc_init@p_ref^(0+128),w
  2024  0BEB  1D03               	btfss	3,2
  2025  0BEC  0008               	return
  2026  0BED  3083               	movlw	131
  2027  0BEE  0022               	movlb	2	; select bank2
  2028  0BEF  0097               	movwf	23	;volatile
  2029  0BF0  0008               	return
  2030  0BF1                     __end_of_adc_init:	
  2031                           
  2032                           	psect	text6
  2033  0FBD                     __ptext6:	
  2034 ;; *************** function _LCD_init *****************
  2035 ;; Defined at:
  2036 ;;		line 337 in file "My_header_16F.h"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2050 ;;      Params:         0       0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0
  2052 ;;      Temps:          0       0       3       0       0       0
  2053 ;;      Totals:         0       0       3       0       0       0
  2054 ;;Total ram usage:        3 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:   10
  2057 ;; This function calls:
  2058 ;;		_LCD_Clear
  2059 ;;		_LCD_Command
  2060 ;; This function is called by:
  2061 ;;		_main_init
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _LCD_init
  2067  0FBD                     _LCD_init:	
  2068                           
  2069                           ;My_header_16F.h: 338: _delay((unsigned long)((40)*(32000000/4000.0)));
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2073  0FBD  3002               	movlw	2
  2074  0FBE  0021               	movlb	1	; select bank1
  2075  0FBF  00C4               	movwf	(??_LCD_init^(0+128)+2)
  2076  0FC0  30A0               	movlw	160
  2077  0FC1  00C3               	movwf	(??_LCD_init^(0+128)+1)
  2078  0FC2  3092               	movlw	146
  2079  0FC3  00C2               	movwf	??_LCD_init^(0+128)
  2080  0FC4                     u3897:	
  2081  0FC4  0BC2               	decfsz	??_LCD_init^(0+128),f
  2082  0FC5  2FC4               	goto	u3897
  2083  0FC6  0BC3               	decfsz	(??_LCD_init^(0+128)+1),f
  2084  0FC7  2FC4               	goto	u3897
  2085  0FC8  0BC4               	decfsz	(??_LCD_init^(0+128)+2),f
  2086  0FC9  2FC4               	goto	u3897
  2087  0FCA  0000               	nop
  2088                           
  2089                           ;My_header_16F.h: 339: LCD_Command(0x38);
  2090  0FCB  3038               	movlw	56
  2091  0FCC  318D  2535  318F   	fcall	_LCD_Command
  2092                           
  2093                           ;My_header_16F.h: 340: LCD_Command(0x39);
  2094  0FCF  3039               	movlw	57
  2095  0FD0  318D  2535  318F   	fcall	_LCD_Command
  2096                           
  2097                           ;My_header_16F.h: 341: LCD_Command(0x14);
  2098  0FD3  3014               	movlw	20
  2099  0FD4  318D  2535  318F   	fcall	_LCD_Command
  2100                           
  2101                           ;My_header_16F.h: 342: LCD_Command(0x70);
  2102  0FD7  3070               	movlw	112
  2103  0FD8  318D  2535  318F   	fcall	_LCD_Command
  2104                           
  2105                           ;My_header_16F.h: 343: LCD_Command(0x56);
  2106  0FDB  3056               	movlw	86
  2107  0FDC  318D  2535  318F   	fcall	_LCD_Command
  2108                           
  2109                           ;My_header_16F.h: 344: LCD_Command(0x6C);
  2110  0FDF  306C               	movlw	108
  2111  0FE0  318D  2535  318F   	fcall	_LCD_Command
  2112                           
  2113                           ;My_header_16F.h: 345: _delay((unsigned long)((200)*(32000000/4000.0)));
  2114  0FE3  3009               	movlw	9
  2115  0FE4  0021               	movlb	1	; select bank1
  2116  0FE5  00C4               	movwf	(??_LCD_init^(0+128)+2)
  2117  0FE6  301E               	movlw	30
  2118  0FE7  00C3               	movwf	(??_LCD_init^(0+128)+1)
  2119  0FE8  30EB               	movlw	235
  2120  0FE9  00C2               	movwf	??_LCD_init^(0+128)
  2121  0FEA                     u3907:	
  2122  0FEA  0BC2               	decfsz	??_LCD_init^(0+128),f
  2123  0FEB  2FEA               	goto	u3907
  2124  0FEC  0BC3               	decfsz	(??_LCD_init^(0+128)+1),f
  2125  0FED  2FEA               	goto	u3907
  2126  0FEE  0BC4               	decfsz	(??_LCD_init^(0+128)+2),f
  2127  0FEF  2FEA               	goto	u3907
  2128  0FF0  0000               	nop
  2129                           
  2130                           ;My_header_16F.h: 346: LCD_Command(0x38);
  2131  0FF1  3038               	movlw	56
  2132  0FF2  318D  2535  318F   	fcall	_LCD_Command
  2133                           
  2134                           ;My_header_16F.h: 347: LCD_Command(0x0C);
  2135  0FF5  300C               	movlw	12
  2136  0FF6  318D  2535  318F   	fcall	_LCD_Command
  2137                           
  2138                           ;My_header_16F.h: 348: LCD_Command(0x06);
  2139  0FF9  3006               	movlw	6
  2140  0FFA  318D  2535  318F   	fcall	_LCD_Command
  2141                           
  2142                           ;My_header_16F.h: 349: LCD_Clear();
  2143  0FFD  318B  239B         	fcall	_LCD_Clear
  2144  0FFF  0008               	return
  2145  1000                     __end_of_LCD_init:	
  2146                           
  2147                           	psect	text7
  2148  0B9B                     __ptext7:	
  2149 ;; *************** function _LCD_Clear *****************
  2150 ;; Defined at:
  2151 ;;		line 280 in file "My_header_16F.h"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;		None               void
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2165 ;;      Params:         0       0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0
  2167 ;;      Temps:          0       0       2       0       0       0
  2168 ;;      Totals:         0       0       2       0       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    9
  2172 ;; This function calls:
  2173 ;;		_LCD_Command
  2174 ;; This function is called by:
  2175 ;;		_LCD_init
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _LCD_Clear
  2181  0B9B                     _LCD_Clear:	
  2182                           
  2183                           ;My_header_16F.h: 281: LCD_Command(0x01);
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2187  0B9B  3001               	movlw	1
  2188  0B9C  318D  2535  318B   	fcall	_LCD_Command
  2189                           
  2190                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  2191  0B9F  300C               	movlw	12
  2192  0BA0  0021               	movlb	1	; select bank1
  2193  0BA1  00C1               	movwf	(??_LCD_Clear^(0+128)+1)
  2194  0BA2  306C               	movlw	108
  2195  0BA3  00C0               	movwf	??_LCD_Clear^(0+128)
  2196  0BA4                     u3917:	
  2197  0BA4  0BC0               	decfsz	??_LCD_Clear^(0+128),f
  2198  0BA5  2BA4               	goto	u3917
  2199  0BA6  0BC1               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2200  0BA7  2BA4               	goto	u3917
  2201  0BA8  0000               	nop
  2202  0BA9  0008               	return
  2203  0BAA                     __end_of_LCD_Clear:	
  2204                           
  2205                           	psect	text8
  2206  0D35                     __ptext8:	
  2207 ;; *************** function _LCD_Command *****************
  2208 ;; Defined at:
  2209 ;;		line 267 in file "My_header_16F.h"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  c               1    wreg     unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  c               1    5[BANK1 ] unsigned char 
  2214 ;;  ans             1    6[BANK1 ] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2224 ;;      Params:         0       0       0       0       0       0
  2225 ;;      Locals:         0       0       2       0       0       0
  2226 ;;      Temps:          0       0       1       0       0       0
  2227 ;;      Totals:         0       0       3       0       0       0
  2228 ;;Total ram usage:        3 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    8
  2231 ;; This function calls:
  2232 ;;		_I2C_Send
  2233 ;;		_I2C_Start
  2234 ;;		_I2C_Stop
  2235 ;; This function is called by:
  2236 ;;		_LCD_Clear
  2237 ;;		_LCD_init
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _LCD_Command
  2243  0D35                     _LCD_Command:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2247                           ;LCD_Command@c stored from wreg
  2248  0D35  0021               	movlb	1	; select bank1
  2249  0D36  00BE               	movwf	LCD_Command@c^(0+128)
  2250                           
  2251                           ;My_header_16F.h: 268: uint8_t ans;
  2252                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  2253  0D37  01BB               	clrf	I2C_Start@rw^(0+128)
  2254  0D38  303E               	movlw	62
  2255  0D39  318C  24D9  318D   	fcall	_I2C_Start
  2256  0D3C  0021               	movlb	1	; select bank1
  2257  0D3D  00BD               	movwf	??_LCD_Command^(0+128)
  2258  0D3E  083D               	movf	??_LCD_Command^(0+128),w
  2259  0D3F  00BF               	movwf	LCD_Command@ans^(0+128)
  2260                           
  2261                           ;My_header_16F.h: 271: if (ans == 0) {
  2262  0D40  083F               	movf	LCD_Command@ans^(0+128),w
  2263  0D41  1D03               	btfss	3,2
  2264  0D42  2D4C               	goto	l212
  2265                           
  2266                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  2267  0D43  3080               	movlw	128
  2268  0D44  318B  23CA  318D   	fcall	_I2C_Send
  2269                           
  2270                           ;My_header_16F.h: 274: I2C_Send(c);
  2271  0D47  0021               	movlb	1	; select bank1
  2272  0D48  083E               	movf	LCD_Command@c^(0+128),w
  2273  0D49  318B  23CA  318D   	fcall	_I2C_Send
  2274  0D4C                     l212:	
  2275                           
  2276                           ;My_header_16F.h: 275: }
  2277                           ;My_header_16F.h: 276: I2C_Stop();
  2278  0D4C  318B  235C  318D   	fcall	_I2C_Stop
  2279                           
  2280                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2281  0D4F  3045               	movlw	69
  2282  0D50  0021               	movlb	1	; select bank1
  2283  0D51  00BD               	movwf	??_LCD_Command^(0+128)
  2284  0D52                     u3927:	
  2285  0D52  0BBD               	decfsz	??_LCD_Command^(0+128),f
  2286  0D53  2D52               	goto	u3927
  2287  0D54  0008               	return
  2288  0D55                     __end_of_LCD_Command:	
  2289                           
  2290                           	psect	text9
  2291  0B73                     __ptext9:	
  2292 ;; *************** function _I2C_init *****************
  2293 ;; Defined at:
  2294 ;;		line 203 in file "My_header_16F.h"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;		None               void
  2301 ;; Registers used:
  2302 ;;		wreg
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2308 ;;      Params:         0       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    6
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_main_init
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _I2C_init
  2324  0B73                     _I2C_init:	
  2325                           
  2326                           ;My_header_16F.h: 204: SSP1STAT = 0b10000000;
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _I2C_init: [wreg]
  2330  0B73  3080               	movlw	128
  2331  0B74  0024               	movlb	4	; select bank4
  2332  0B75  0094               	movwf	20	;volatile
  2333                           
  2334                           ;My_header_16F.h: 205: SSP1CON1 = 0b00101000;
  2335  0B76  3028               	movlw	40
  2336  0B77  0095               	movwf	21	;volatile
  2337                           
  2338                           ;My_header_16F.h: 206: SSP1ADD = 0x13;
  2339  0B78  3013               	movlw	19
  2340  0B79  0092               	movwf	18	;volatile
  2341                           
  2342                           ;My_header_16F.h: 209: SSP1IF = 0;
  2343  0B7A  0020               	movlb	0	; select bank0
  2344  0B7B  1191               	bcf	17,3	;volatile
  2345                           
  2346                           ;My_header_16F.h: 210: BCL1IF = 0;
  2347  0B7C  1192               	bcf	18,3	;volatile
  2348  0B7D  0008               	return
  2349  0B7E                     __end_of_I2C_init:	
  2350                           
  2351                           	psect	text10
  2352  0D15                     __ptext10:	
  2353 ;; *************** function _flag_read *****************
  2354 ;; Defined at:
  2355 ;;		line 255 in file "PIC16F1827-ChargeStation4-02.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  port            1    wreg     unsigned char 
  2358 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  port            1    1[BANK1 ] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      unsigned char 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2370 ;;      Params:         0       0       1       0       0       0
  2371 ;;      Locals:         0       0       1       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0
  2373 ;;      Totals:         0       0       2       0       0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    6
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _flag_read
  2386  0D15                     _flag_read:	
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _flag_read: [wreg-fsr0h+status,2+status,0]
  2390                           ;flag_read@port stored from wreg
  2391  0D15  0021               	movlb	1	; select bank1
  2392  0D16  00BA               	movwf	flag_read@port^(0+128)
  2393                           
  2394                           ;PIC16F1827-ChargeStation4-02.c: 256: switch (port) {
  2395  0D17  2D29               	goto	l3098
  2396  0D18                     l3080:	
  2397                           ;PIC16F1827-ChargeStation4-02.c: 257: case 2:
  2398                           
  2399                           
  2400                           ;PIC16F1827-ChargeStation4-02.c: 258: return (sw_RA3.flags) & bit_and;
  2401  0D18  0020               	movlb	0	; select bank0
  2402  0D19  0834               	movf	_sw_RA3+2,w
  2403  0D1A  0021               	movlb	1	; select bank1
  2404  0D1B  0539               	andwf	flag_read@bit_and^(0+128),w
  2405  0D1C  0008               	return
  2406  0D1D                     l3084:	
  2407                           ;PIC16F1827-ChargeStation4-02.c: 259: case 1:
  2408                           
  2409                           
  2410                           ;PIC16F1827-ChargeStation4-02.c: 260: return (sw_RA4.flags) & bit_and;
  2411  0D1D  0020               	movlb	0	; select bank0
  2412  0D1E  0837               	movf	_sw_RA4+2,w
  2413  0D1F  0021               	movlb	1	; select bank1
  2414  0D20  0539               	andwf	flag_read@bit_and^(0+128),w
  2415  0D21  0008               	return
  2416  0D22                     l3088:	
  2417                           ;PIC16F1827-ChargeStation4-02.c: 261: case 0:
  2418                           
  2419                           
  2420                           ;PIC16F1827-ChargeStation4-02.c: 262: return (sw_RA5.flags) & bit_and;
  2421  0D22  0020               	movlb	0	; select bank0
  2422  0D23  083A               	movf	_sw_RA5+2,w
  2423  0D24  0021               	movlb	1	; select bank1
  2424  0D25  0539               	andwf	flag_read@bit_and^(0+128),w
  2425  0D26  0008               	return
  2426  0D27                     l3092:	
  2427                           ;PIC16F1827-ChargeStation4-02.c: 263: default:
  2428                           
  2429                           
  2430                           ;PIC16F1827-ChargeStation4-02.c: 264: return 0;
  2431  0D27  3000               	movlw	0
  2432                           
  2433                           ;PIC16F1827-ChargeStation4-02.c: 265: }
  2434  0D28  0008               	return
  2435  0D29                     l3098:	
  2436  0D29  083A               	movf	flag_read@port^(0+128),w
  2437                           
  2438                           ; Switch size 1, requested type "space"
  2439                           ; Number of cases is 3, Range of values is 0 to 2
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte           10     6 (average)
  2443                           ; direct_byte           12     6 (fixed)
  2444                           ; jumptable            260     6 (fixed)
  2445                           ;	Chosen strategy is simple_byte
  2446  0D2A  3A00               	xorlw	0	; case 0
  2447  0D2B  1903               	skipnz
  2448  0D2C  2D22               	goto	l3088
  2449  0D2D  3A01               	xorlw	1	; case 1
  2450  0D2E  1903               	skipnz
  2451  0D2F  2D1D               	goto	l3084
  2452  0D30  3A03               	xorlw	3	; case 2
  2453  0D31  1903               	skipnz
  2454  0D32  2D18               	goto	l3080
  2455  0D33  2D27               	goto	l3092
  2456  0D34  0008               	return
  2457  0D35                     __end_of_flag_read:	
  2458                           
  2459                           	psect	text11
  2460  0D78                     __ptext11:	
  2461 ;; *************** function _flag_clear *****************
  2462 ;; Defined at:
  2463 ;;		line 268 in file "PIC16F1827-ChargeStation4-02.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  port            1    wreg     unsigned char 
  2466 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  port            1    2[BANK1 ] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2478 ;;      Params:         0       0       1       0       0       0
  2479 ;;      Locals:         0       0       1       0       0       0
  2480 ;;      Temps:          0       0       1       0       0       0
  2481 ;;      Totals:         0       0       3       0       0       0
  2482 ;;Total ram usage:        3 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    6
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           
  2493                           ;psect for function _flag_clear
  2494  0D78                     _flag_clear:	
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _flag_clear: [wreg-fsr0h+status,2+status,0]
  2498                           ;flag_clear@port stored from wreg
  2499  0D78  0021               	movlb	1	; select bank1
  2500  0D79  00BB               	movwf	flag_clear@port^(0+128)
  2501                           
  2502                           ;PIC16F1827-ChargeStation4-02.c: 269: switch (port) {
  2503  0D7A  2D8F               	goto	l3110
  2504  0D7B                     l3102:	
  2505                           ;PIC16F1827-ChargeStation4-02.c: 270: case 2:
  2506                           
  2507                           
  2508                           ;PIC16F1827-ChargeStation4-02.c: 271: sw_RA3.flags &= bit_and;
  2509  0D7B  0839               	movf	flag_clear@bit_and^(0+128),w
  2510  0D7C  00BA               	movwf	??_flag_clear^(0+128)
  2511  0D7D  083A               	movf	??_flag_clear^(0+128),w
  2512  0D7E  0020               	movlb	0	; select bank0
  2513  0D7F  05B4               	andwf	_sw_RA3+2,f
  2514                           
  2515                           ;PIC16F1827-ChargeStation4-02.c: 272: break;
  2516  0D80  0008               	return
  2517  0D81                     l3104:	
  2518                           ;PIC16F1827-ChargeStation4-02.c: 273: case 1:
  2519                           
  2520                           
  2521                           ;PIC16F1827-ChargeStation4-02.c: 274: sw_RA4.flags &= bit_and;
  2522  0D81  0021               	movlb	1	; select bank1
  2523  0D82  0839               	movf	flag_clear@bit_and^(0+128),w
  2524  0D83  00BA               	movwf	??_flag_clear^(0+128)
  2525  0D84  083A               	movf	??_flag_clear^(0+128),w
  2526  0D85  0020               	movlb	0	; select bank0
  2527  0D86  05B7               	andwf	_sw_RA4+2,f
  2528                           
  2529                           ;PIC16F1827-ChargeStation4-02.c: 275: break;
  2530  0D87  0008               	return
  2531  0D88                     l3106:	
  2532                           ;PIC16F1827-ChargeStation4-02.c: 276: case 0:
  2533                           
  2534                           
  2535                           ;PIC16F1827-ChargeStation4-02.c: 277: sw_RA5.flags &= bit_and;
  2536  0D88  0021               	movlb	1	; select bank1
  2537  0D89  0839               	movf	flag_clear@bit_and^(0+128),w
  2538  0D8A  00BA               	movwf	??_flag_clear^(0+128)
  2539  0D8B  083A               	movf	??_flag_clear^(0+128),w
  2540  0D8C  0020               	movlb	0	; select bank0
  2541  0D8D  05BA               	andwf	_sw_RA5+2,f
  2542                           
  2543                           ;PIC16F1827-ChargeStation4-02.c: 281: }
  2544                           
  2545                           ;PIC16F1827-ChargeStation4-02.c: 280: break;
  2546                           
  2547                           ;PIC16F1827-ChargeStation4-02.c: 279: default:
  2548                           
  2549                           ;PIC16F1827-ChargeStation4-02.c: 278: break;
  2550  0D8E  0008               	return
  2551  0D8F                     l3110:	
  2552  0D8F  0021               	movlb	1	; select bank1
  2553  0D90  083B               	movf	flag_clear@port^(0+128),w
  2554                           
  2555                           ; Switch size 1, requested type "space"
  2556                           ; Number of cases is 3, Range of values is 0 to 2
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte           10     6 (average)
  2560                           ; direct_byte           12     6 (fixed)
  2561                           ; jumptable            260     6 (fixed)
  2562                           ;	Chosen strategy is simple_byte
  2563  0D91  3A00               	xorlw	0	; case 0
  2564  0D92  1903               	skipnz
  2565  0D93  2D88               	goto	l3106
  2566  0D94  3A01               	xorlw	1	; case 1
  2567  0D95  1903               	skipnz
  2568  0D96  2D81               	goto	l3104
  2569  0D97  3A03               	xorlw	3	; case 2
  2570  0D98  1903               	skipnz
  2571  0D99  2D7B               	goto	l3102
  2572  0D9A  2D9B               	goto	l397
  2573  0D9B                     l397:	
  2574  0D9B  0008               	return
  2575  0D9C                     __end_of_flag_clear:	
  2576                           
  2577                           	psect	text12
  2578  0F1C                     __ptext12:	
  2579 ;; *************** function ___lmul *****************
  2580 ;; Defined at:
  2581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  multiplier      4    0[BANK1 ] unsigned long 
  2584 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  product         4    8[BANK1 ] unsigned long 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  4    0[BANK1 ] unsigned long 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2596 ;;      Params:         0       0       8       0       0       0
  2597 ;;      Locals:         0       0       4       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0
  2599 ;;      Totals:         0       0      12       0       0       0
  2600 ;;Total ram usage:       12 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    6
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function ___lmul
  2612  0F1C                     ___lmul:	
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2616  0F1C  3000               	movlw	0
  2617  0F1D  0021               	movlb	1	; select bank1
  2618  0F1E  00C4               	movwf	(___lmul@product+3)^(0+128)
  2619  0F1F  3000               	movlw	0
  2620  0F20  00C3               	movwf	(___lmul@product+2)^(0+128)
  2621  0F21  3000               	movlw	0
  2622  0F22  00C2               	movwf	(___lmul@product+1)^(0+128)
  2623  0F23  3000               	movlw	0
  2624  0F24  00C1               	movwf	___lmul@product^(0+128)
  2625  0F25                     l3134:	
  2626  0F25  1C39               	btfss	___lmul@multiplier^(0+128),0
  2627  0F26  2F2F               	goto	l3138
  2628  0F27  083D               	movf	___lmul@multiplicand^(0+128),w
  2629  0F28  07C1               	addwf	___lmul@product^(0+128),f
  2630  0F29  083E               	movf	(___lmul@multiplicand+1)^(0+128),w
  2631  0F2A  3DC2               	addwfc	(___lmul@product+1)^(0+128),f
  2632  0F2B  083F               	movf	(___lmul@multiplicand+2)^(0+128),w
  2633  0F2C  3DC3               	addwfc	(___lmul@product+2)^(0+128),f
  2634  0F2D  0840               	movf	(___lmul@multiplicand+3)^(0+128),w
  2635  0F2E  3DC4               	addwfc	(___lmul@product+3)^(0+128),f
  2636  0F2F                     l3138:	
  2637  0F2F  3001               	movlw	1
  2638  0F30                     u3395:	
  2639  0F30  35BD               	lslf	___lmul@multiplicand^(0+128),f
  2640  0F31  0DBE               	rlf	(___lmul@multiplicand+1)^(0+128),f
  2641  0F32  0DBF               	rlf	(___lmul@multiplicand+2)^(0+128),f
  2642  0F33  0DC0               	rlf	(___lmul@multiplicand+3)^(0+128),f
  2643  0F34  0B89               	decfsz	9,f
  2644  0F35  2F30               	goto	u3395
  2645  0F36  3001               	movlw	1
  2646  0F37                     u3405:	
  2647  0F37  36BC               	lsrf	(___lmul@multiplier+3)^(0+128),f
  2648  0F38  0CBB               	rrf	(___lmul@multiplier+2)^(0+128),f
  2649  0F39  0CBA               	rrf	(___lmul@multiplier+1)^(0+128),f
  2650  0F3A  0CB9               	rrf	___lmul@multiplier^(0+128),f
  2651  0F3B  0B89               	decfsz	9,f
  2652  0F3C  2F37               	goto	u3405
  2653  0F3D  083C               	movf	(___lmul@multiplier+3)^(0+128),w
  2654  0F3E  043B               	iorwf	(___lmul@multiplier+2)^(0+128),w
  2655  0F3F  043A               	iorwf	(___lmul@multiplier+1)^(0+128),w
  2656  0F40  0439               	iorwf	___lmul@multiplier^(0+128),w
  2657  0F41  1D03               	skipz
  2658  0F42  2F25               	goto	l3134
  2659  0F43  0844               	movf	(___lmul@product+3)^(0+128),w
  2660  0F44  00BC               	movwf	(?___lmul+3)^(0+128)
  2661  0F45  0843               	movf	(___lmul@product+2)^(0+128),w
  2662  0F46  00BB               	movwf	(?___lmul+2)^(0+128)
  2663  0F47  0842               	movf	(___lmul@product+1)^(0+128),w
  2664  0F48  00BA               	movwf	(?___lmul+1)^(0+128)
  2665  0F49  0841               	movf	___lmul@product^(0+128),w
  2666  0F4A  00B9               	movwf	?___lmul^(0+128)
  2667  0F4B  0008               	return
  2668  0F4C                     __end_of___lmul:	
  2669                           
  2670                           	psect	text13
  2671  0EC1                     __ptext13:	
  2672 ;; *************** function _OUT *****************
  2673 ;; Defined at:
  2674 ;;		line 211 in file "PIC16F1827-ChargeStation4-02.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  b               1    wreg     unsigned char 
  2677 ;;  value           1    0[BANK1 ] unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  b               1    1[BANK1 ] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2689 ;;      Params:         0       0       1       0       0       0
  2690 ;;      Locals:         0       0       1       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0
  2692 ;;      Totals:         0       0       2       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    6
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _OUT
  2705  0EC1                     _OUT:	
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _OUT: [wreg-fsr0h+status,2+status,0]
  2709                           ;OUT@b stored from wreg
  2710  0EC1  0021               	movlb	1	; select bank1
  2711  0EC2  00BA               	movwf	OUT@b^(0+128)
  2712                           
  2713                           ;PIC16F1827-ChargeStation4-02.c: 212: switch (b) {
  2714  0EC3  2EE1               	goto	l3070
  2715  0EC4                     l3056:	
  2716                           ;PIC16F1827-ChargeStation4-02.c: 213: case 0:
  2717                           
  2718                           
  2719                           ;PIC16F1827-ChargeStation4-02.c: 214: if (value) {
  2720  0EC4  0839               	movf	OUT@value^(0+128),w
  2721  0EC5  1903               	btfsc	3,2
  2722  0EC6  2ECA               	goto	l360
  2723                           
  2724                           ;PIC16F1827-ChargeStation4-02.c: 215: LATB0 = 0;
  2725  0EC7  0022               	movlb	2	; select bank2
  2726  0EC8  100D               	bcf	13,0	;volatile
  2727                           
  2728                           ;PIC16F1827-ChargeStation4-02.c: 216: } else {
  2729  0EC9  0008               	return
  2730  0ECA                     l360:	
  2731                           
  2732                           ;PIC16F1827-ChargeStation4-02.c: 217: LATB0 = 1;
  2733  0ECA  0022               	movlb	2	; select bank2
  2734  0ECB  140D               	bsf	13,0	;volatile
  2735                           
  2736                           ;PIC16F1827-ChargeStation4-02.c: 218: }
  2737                           ;PIC16F1827-ChargeStation4-02.c: 219: break;
  2738  0ECC  0008               	return
  2739  0ECD                     l3060:	
  2740                           ;PIC16F1827-ChargeStation4-02.c: 220: case 1:
  2741                           
  2742                           
  2743                           ;PIC16F1827-ChargeStation4-02.c: 221: if (value) {
  2744  0ECD  0021               	movlb	1	; select bank1
  2745  0ECE  0839               	movf	OUT@value^(0+128),w
  2746  0ECF  1903               	btfsc	3,2
  2747  0ED0  2ED4               	goto	l364
  2748                           
  2749                           ;PIC16F1827-ChargeStation4-02.c: 222: LATB3 = 0;
  2750  0ED1  0022               	movlb	2	; select bank2
  2751  0ED2  118D               	bcf	13,3	;volatile
  2752                           
  2753                           ;PIC16F1827-ChargeStation4-02.c: 223: } else {
  2754  0ED3  0008               	return
  2755  0ED4                     l364:	
  2756                           
  2757                           ;PIC16F1827-ChargeStation4-02.c: 224: LATB3 = 1;
  2758  0ED4  0022               	movlb	2	; select bank2
  2759  0ED5  158D               	bsf	13,3	;volatile
  2760                           
  2761                           ;PIC16F1827-ChargeStation4-02.c: 225: }
  2762                           ;PIC16F1827-ChargeStation4-02.c: 226: break;
  2763  0ED6  0008               	return
  2764  0ED7                     l3064:	
  2765                           ;PIC16F1827-ChargeStation4-02.c: 227: case 2:
  2766                           
  2767                           
  2768                           ;PIC16F1827-ChargeStation4-02.c: 228: if (value) {
  2769  0ED7  0021               	movlb	1	; select bank1
  2770  0ED8  0839               	movf	OUT@value^(0+128),w
  2771  0ED9  1903               	btfsc	3,2
  2772  0EDA  2EDE               	goto	l367
  2773                           
  2774                           ;PIC16F1827-ChargeStation4-02.c: 229: LATB6 = 0;
  2775  0EDB  0022               	movlb	2	; select bank2
  2776  0EDC  130D               	bcf	13,6	;volatile
  2777                           
  2778                           ;PIC16F1827-ChargeStation4-02.c: 230: } else {
  2779  0EDD  0008               	return
  2780  0EDE                     l367:	
  2781                           
  2782                           ;PIC16F1827-ChargeStation4-02.c: 231: LATB6 = 1;
  2783  0EDE  0022               	movlb	2	; select bank2
  2784  0EDF  170D               	bsf	13,6	;volatile
  2785                           
  2786                           ;PIC16F1827-ChargeStation4-02.c: 236: }
  2787                           
  2788                           ;PIC16F1827-ChargeStation4-02.c: 235: break;
  2789                           
  2790                           ;PIC16F1827-ChargeStation4-02.c: 234: default:
  2791                           
  2792                           ;PIC16F1827-ChargeStation4-02.c: 232: }
  2793                           ;PIC16F1827-ChargeStation4-02.c: 233: break;
  2794  0EE0  0008               	return
  2795  0EE1                     l3070:	
  2796  0EE1  0021               	movlb	1	; select bank1
  2797  0EE2  083A               	movf	OUT@b^(0+128),w
  2798                           
  2799                           ; Switch size 1, requested type "space"
  2800                           ; Number of cases is 3, Range of values is 0 to 2
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte           10     6 (average)
  2804                           ; direct_byte           12     6 (fixed)
  2805                           ; jumptable            260     6 (fixed)
  2806                           ;	Chosen strategy is simple_byte
  2807  0EE3  3A00               	xorlw	0	; case 0
  2808  0EE4  1903               	skipnz
  2809  0EE5  2EC4               	goto	l3056
  2810  0EE6  3A01               	xorlw	1	; case 1
  2811  0EE7  1903               	skipnz
  2812  0EE8  2ECD               	goto	l3060
  2813  0EE9  3A03               	xorlw	3	; case 2
  2814  0EEA  1903               	skipnz
  2815  0EEB  2ED7               	goto	l3064
  2816  0EEC  2EED               	goto	l370
  2817  0EED                     l370:	
  2818  0EED  0008               	return
  2819  0EEE                     __end_of_OUT:	
  2820                           
  2821                           	psect	text14
  2822  0DC2                     __ptext14:	
  2823 ;; *************** function _LED *****************
  2824 ;; Defined at:
  2825 ;;		line 239 in file "PIC16F1827-ChargeStation4-02.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  b               1    wreg     unsigned char 
  2828 ;;  value           1    0[BANK1 ] unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  b               1    1[BANK1 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;		None               void
  2833 ;; Registers used:
  2834 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2840 ;;      Params:         0       0       1       0       0       0
  2841 ;;      Locals:         0       0       1       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0
  2843 ;;      Totals:         0       0       2       0       0       0
  2844 ;;Total ram usage:        2 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    6
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _LED
  2856  0DC2                     _LED:	
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _LED: [wreg-fsr0h+status,2+status,0]
  2860                           ;LED@b stored from wreg
  2861  0DC2  0021               	movlb	1	; select bank1
  2862  0DC3  00BA               	movwf	LED@b^(0+128)
  2863                           
  2864                           ;PIC16F1827-ChargeStation4-02.c: 240: switch (b) {
  2865  0DC4  2DDD               	goto	l3076
  2866  0DC5                     l374:	
  2867                           ;PIC16F1827-ChargeStation4-02.c: 241: case 0:
  2868                           
  2869                           
  2870                           ;PIC16F1827-ChargeStation4-02.c: 242: LATB5 = value;
  2871  0DC5  1C39               	btfss	LED@value^(0+128),0
  2872  0DC6  2DCA               	goto	u3320
  2873  0DC7  0022               	movlb	2	; select bank2
  2874  0DC8  168D               	bsf	13,5	;volatile
  2875  0DC9  0008               	return
  2876  0DCA                     u3320:	
  2877  0DCA  0022               	movlb	2	; select bank2
  2878  0DCB  128D               	bcf	13,5	;volatile
  2879                           
  2880                           ;PIC16F1827-ChargeStation4-02.c: 243: break;
  2881  0DCC  0008               	return
  2882  0DCD                     l376:	
  2883                           ;PIC16F1827-ChargeStation4-02.c: 244: case 1:
  2884                           
  2885                           
  2886                           ;PIC16F1827-ChargeStation4-02.c: 245: LATA6 = value;
  2887  0DCD  1C39               	btfss	LED@value^(0+128),0
  2888  0DCE  2DD2               	goto	u3340
  2889  0DCF  0022               	movlb	2	; select bank2
  2890  0DD0  170C               	bsf	12,6	;volatile
  2891  0DD1  0008               	return
  2892  0DD2                     u3340:	
  2893  0DD2  0022               	movlb	2	; select bank2
  2894  0DD3  130C               	bcf	12,6	;volatile
  2895                           
  2896                           ;PIC16F1827-ChargeStation4-02.c: 246: break;
  2897  0DD4  0008               	return
  2898  0DD5                     l377:	
  2899                           ;PIC16F1827-ChargeStation4-02.c: 247: case 2:
  2900                           
  2901                           
  2902                           ;PIC16F1827-ChargeStation4-02.c: 248: LATA7 = value;
  2903  0DD5  1C39               	btfss	LED@value^(0+128),0
  2904  0DD6  2DDA               	goto	u3360
  2905  0DD7  0022               	movlb	2	; select bank2
  2906  0DD8  178C               	bsf	12,7	;volatile
  2907  0DD9  0008               	return
  2908  0DDA                     u3360:	
  2909  0DDA  0022               	movlb	2	; select bank2
  2910  0DDB  138C               	bcf	12,7	;volatile
  2911                           
  2912                           ;PIC16F1827-ChargeStation4-02.c: 252: }
  2913                           
  2914                           ;PIC16F1827-ChargeStation4-02.c: 251: break;
  2915                           
  2916                           ;PIC16F1827-ChargeStation4-02.c: 250: default:
  2917                           
  2918                           ;PIC16F1827-ChargeStation4-02.c: 249: break;
  2919  0DDC  0008               	return
  2920  0DDD                     l3076:	
  2921  0DDD  0021               	movlb	1	; select bank1
  2922  0DDE  083A               	movf	LED@b^(0+128),w
  2923                           
  2924                           ; Switch size 1, requested type "space"
  2925                           ; Number of cases is 3, Range of values is 0 to 2
  2926                           ; switch strategies available:
  2927                           ; Name         Instructions Cycles
  2928                           ; simple_byte           10     6 (average)
  2929                           ; direct_byte           12     6 (fixed)
  2930                           ; jumptable            260     6 (fixed)
  2931                           ;	Chosen strategy is simple_byte
  2932  0DDF  3A00               	xorlw	0	; case 0
  2933  0DE0  1903               	skipnz
  2934  0DE1  2DC5               	goto	l374
  2935  0DE2  3A01               	xorlw	1	; case 1
  2936  0DE3  1903               	skipnz
  2937  0DE4  2DCD               	goto	l376
  2938  0DE5  3A03               	xorlw	3	; case 2
  2939  0DE6  1903               	skipnz
  2940  0DE7  2DD5               	goto	l377
  2941  0DE8  2DE9               	goto	l379
  2942  0DE9                     l379:	
  2943  0DE9  0008               	return
  2944  0DEA                     __end_of_LED:	
  2945                           
  2946                           	psect	text15
  2947  0E13                     __ptext15:	
  2948 ;; *************** function _EEP_Writes *****************
  2949 ;; Defined at:
  2950 ;;		line 453 in file "My_header_16F.h"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  Reg_h           1    wreg     unsigned char 
  2953 ;;  Reg_l           1    4[BANK1 ] unsigned char 
  2954 ;;  data_0          1    5[BANK1 ] unsigned char 
  2955 ;;  data_1          1    6[BANK1 ] unsigned char 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  Reg_h           1    8[BANK1 ] unsigned char 
  2958 ;;  ans             1    9[BANK1 ] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2968 ;;      Params:         0       0       3       0       0       0
  2969 ;;      Locals:         0       0       2       0       0       0
  2970 ;;      Temps:          0       0       1       0       0       0
  2971 ;;      Totals:         0       0       6       0       0       0
  2972 ;;Total ram usage:        6 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    8
  2975 ;; This function calls:
  2976 ;;		_I2C_Send
  2977 ;;		_I2C_Start
  2978 ;;		_I2C_Stop
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _EEP_Writes
  2986  0E13                     _EEP_Writes:	
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _EEP_Writes: [wreg+status,2+status,0+pclath+cstack]
  2990                           ;EEP_Writes@Reg_h stored from wreg
  2991  0E13  0021               	movlb	1	; select bank1
  2992  0E14  00C1               	movwf	EEP_Writes@Reg_h^(0+128)
  2993                           
  2994                           ;My_header_16F.h: 454: uint8_t ans;
  2995                           ;My_header_16F.h: 455: ans = I2C_Start(0x50, 0);
  2996  0E15  01BB               	clrf	I2C_Start@rw^(0+128)
  2997  0E16  3050               	movlw	80
  2998  0E17  318C  24D9  318E   	fcall	_I2C_Start
  2999  0E1A  0021               	movlb	1	; select bank1
  3000  0E1B  00C0               	movwf	??_EEP_Writes^(0+128)
  3001  0E1C  0840               	movf	??_EEP_Writes^(0+128),w
  3002  0E1D  00C2               	movwf	EEP_Writes@ans^(0+128)
  3003                           
  3004                           ;My_header_16F.h: 456: if (ans == 0) {
  3005  0E1E  0842               	movf	EEP_Writes@ans^(0+128),w
  3006  0E1F  1D03               	btfss	3,2
  3007  0E20  2E34               	goto	l271
  3008                           
  3009                           ;My_header_16F.h: 458: I2C_Send(Reg_h);
  3010  0E21  0841               	movf	EEP_Writes@Reg_h^(0+128),w
  3011  0E22  318B  23CA  318E   	fcall	_I2C_Send
  3012                           
  3013                           ;My_header_16F.h: 459: I2C_Send(Reg_l);
  3014  0E25  0021               	movlb	1	; select bank1
  3015  0E26  083D               	movf	EEP_Writes@Reg_l^(0+128),w
  3016  0E27  318B  23CA  318E   	fcall	_I2C_Send
  3017                           
  3018                           ;My_header_16F.h: 460: I2C_Send(data_0);
  3019  0E2A  0021               	movlb	1	; select bank1
  3020  0E2B  083E               	movf	EEP_Writes@data_0^(0+128),w
  3021  0E2C  318B  23CA  318E   	fcall	_I2C_Send
  3022                           
  3023                           ;My_header_16F.h: 461: I2C_Send(data_1);
  3024  0E2F  0021               	movlb	1	; select bank1
  3025  0E30  083F               	movf	EEP_Writes@data_1^(0+128),w
  3026  0E31  318B  23CA  318E   	fcall	_I2C_Send
  3027  0E34                     l271:	
  3028                           
  3029                           ;My_header_16F.h: 462: }
  3030                           ;My_header_16F.h: 463: I2C_Stop();
  3031  0E34  318B  235C  318E   	fcall	_I2C_Stop
  3032                           
  3033                           ;My_header_16F.h: 464: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3034  0E37  3045               	movlw	69
  3035  0E38  0021               	movlb	1	; select bank1
  3036  0E39  00C0               	movwf	??_EEP_Writes^(0+128)
  3037  0E3A                     u3937:	
  3038  0E3A  0BC0               	decfsz	??_EEP_Writes^(0+128),f
  3039  0E3B  2E3A               	goto	u3937
  3040  0E3C  0008               	return
  3041  0E3D                     __end_of_EEP_Writes:	
  3042                           
  3043                           	psect	text16
  3044  0F80                     __ptext16:	
  3045 ;; *************** function _EEP_Read *****************
  3046 ;; Defined at:
  3047 ;;		line 435 in file "My_header_16F.h"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  Reg_h           1    wreg     unsigned char 
  3050 ;;  Reg_l           1    6[BANK1 ] unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  Reg_h           1    8[BANK1 ] unsigned char 
  3053 ;;  ans             1   10[BANK1 ] unsigned char 
  3054 ;;  data            1    9[BANK1 ] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      unsigned char 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3064 ;;      Params:         0       0       1       0       0       0
  3065 ;;      Locals:         0       0       3       0       0       0
  3066 ;;      Temps:          0       0       1       0       0       0
  3067 ;;      Totals:         0       0       5       0       0       0
  3068 ;;Total ram usage:        5 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    8
  3071 ;; This function calls:
  3072 ;;		_I2C_Receive
  3073 ;;		_I2C_Send
  3074 ;;		_I2C_Start
  3075 ;;		_I2C_Stop
  3076 ;;		_I2C_rStart
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _EEP_Read
  3084  0F80                     _EEP_Read:	
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _EEP_Read: [wreg+status,2+status,0+pclath+cstack]
  3088                           ;EEP_Read@Reg_h stored from wreg
  3089  0F80  0021               	movlb	1	; select bank1
  3090  0F81  00C1               	movwf	EEP_Read@Reg_h^(0+128)
  3091                           
  3092                           ;My_header_16F.h: 436: uint8_t ans;
  3093                           ;My_header_16F.h: 437: uint8_t data;
  3094                           ;My_header_16F.h: 439: ans = I2C_Start(0x50, 0);
  3095  0F82  01BB               	clrf	I2C_Start@rw^(0+128)
  3096  0F83  3050               	movlw	80
  3097  0F84  318C  24D9  318F   	fcall	_I2C_Start
  3098  0F87  0021               	movlb	1	; select bank1
  3099  0F88  00C0               	movwf	??_EEP_Read^(0+128)
  3100  0F89  0840               	movf	??_EEP_Read^(0+128),w
  3101  0F8A  00C3               	movwf	EEP_Read@ans^(0+128)
  3102                           
  3103                           ;My_header_16F.h: 440: if (ans == 0) {
  3104  0F8B  0843               	movf	EEP_Read@ans^(0+128),w
  3105  0F8C  1D03               	btfss	3,2
  3106  0F8D  2F97               	goto	l266
  3107                           
  3108                           ;My_header_16F.h: 441: I2C_Send(Reg_h);
  3109  0F8E  0841               	movf	EEP_Read@Reg_h^(0+128),w
  3110  0F8F  318B  23CA  318F   	fcall	_I2C_Send
  3111                           
  3112                           ;My_header_16F.h: 442: I2C_Send(Reg_l);
  3113  0F92  0021               	movlb	1	; select bank1
  3114  0F93  083F               	movf	EEP_Read@Reg_l^(0+128),w
  3115  0F94  318B  23CA  318F   	fcall	_I2C_Send
  3116  0F97                     l266:	
  3117                           
  3118                           ;My_header_16F.h: 443: }
  3119                           ;My_header_16F.h: 444: ans = I2C_rStart(0x50, 1);
  3120  0F97  3050               	movlw	80
  3121  0F98  0021               	movlb	1	; select bank1
  3122  0F99  00BB               	movwf	I2C_rStart@adrs^(0+128)
  3123  0F9A  3000               	movlw	0
  3124  0F9B  00BC               	movwf	(I2C_rStart@adrs^(0+128)+1)
  3125  0F9C  3001               	movlw	1
  3126  0F9D  00BD               	movwf	I2C_rStart@rw^(0+128)
  3127  0F9E  3000               	movlw	0
  3128  0F9F  00BE               	movwf	(I2C_rStart@rw^(0+128)+1)
  3129  0FA0  318C  2451  318F   	fcall	_I2C_rStart
  3130  0FA3  0021               	movlb	1	; select bank1
  3131  0FA4  00C0               	movwf	??_EEP_Read^(0+128)
  3132  0FA5  0840               	movf	??_EEP_Read^(0+128),w
  3133  0FA6  00C3               	movwf	EEP_Read@ans^(0+128)
  3134                           
  3135                           ;My_header_16F.h: 445: if (ans == 0) {
  3136  0FA7  0843               	movf	EEP_Read@ans^(0+128),w
  3137  0FA8  1D03               	btfss	3,2
  3138  0FA9  2FB2               	goto	l267
  3139                           
  3140                           ;My_header_16F.h: 446: data = I2C_Receive(1);
  3141  0FAA  3001               	movlw	1
  3142  0FAB  318C  24F5  318F   	fcall	_I2C_Receive
  3143  0FAE  0021               	movlb	1	; select bank1
  3144  0FAF  00C0               	movwf	??_EEP_Read^(0+128)
  3145  0FB0  0840               	movf	??_EEP_Read^(0+128),w
  3146  0FB1  00C2               	movwf	EEP_Read@data^(0+128)
  3147  0FB2                     l267:	
  3148                           
  3149                           ;My_header_16F.h: 447: }
  3150                           ;My_header_16F.h: 448: I2C_Stop();
  3151  0FB2  318B  235C  318F   	fcall	_I2C_Stop
  3152                           
  3153                           ;My_header_16F.h: 449: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3154  0FB5  3045               	movlw	69
  3155  0FB6  0021               	movlb	1	; select bank1
  3156  0FB7  00C0               	movwf	??_EEP_Read^(0+128)
  3157  0FB8                     u3947:	
  3158  0FB8  0BC0               	decfsz	??_EEP_Read^(0+128),f
  3159  0FB9  2FB8               	goto	u3947
  3160                           
  3161                           ;My_header_16F.h: 450: return data;
  3162  0FBA  0021               	movlb	1	; select bank1
  3163  0FBB  0842               	movf	EEP_Read@data^(0+128),w
  3164  0FBC  0008               	return
  3165  0FBD                     __end_of_EEP_Read:	
  3166                           
  3167                           	psect	text17
  3168  0C51                     __ptext17:	
  3169 ;; *************** function _I2C_rStart *****************
  3170 ;; Defined at:
  3171 ;;		line 225 in file "My_header_16F.h"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  adrs            2    2[BANK1 ] int 
  3174 ;;  rw              2    4[BANK1 ] int 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3186 ;;      Params:         0       0       4       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0
  3189 ;;      Totals:         0       0       4       0       0       0
  3190 ;;Total ram usage:        4 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    7
  3193 ;; This function calls:
  3194 ;;		_I2C_IdleCheck
  3195 ;; This function is called by:
  3196 ;;		_EEP_Read
  3197 ;;		_RTC_Read
  3198 ;;		_TM_Read
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _I2C_rStart
  3204  0C51                     _I2C_rStart:	
  3205                           
  3206                           ;My_header_16F.h: 227: I2C_IdleCheck(0x5);
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  3210  0C51  3005               	movlw	5
  3211  0C52  318B  238C  318C   	fcall	_I2C_IdleCheck
  3212                           
  3213                           ;My_header_16F.h: 228: SSP1CON2bits.RSEN = 1;
  3214  0C55  0024               	movlb	4	; select bank4
  3215  0C56  1496               	bsf	22,1	;volatile
  3216                           
  3217                           ;My_header_16F.h: 230: I2C_IdleCheck(0x5);
  3218  0C57  3005               	movlw	5
  3219  0C58  318B  238C  318C   	fcall	_I2C_IdleCheck
  3220                           
  3221                           ;My_header_16F.h: 231: SSP1IF = 0;
  3222  0C5B  0020               	movlb	0	; select bank0
  3223  0C5C  1191               	bcf	17,3	;volatile
  3224                           
  3225                           ;My_header_16F.h: 232: SSP1BUF = (char) ((adrs << 1) + rw);
  3226  0C5D  0021               	movlb	1	; select bank1
  3227  0C5E  353B               	lslf	I2C_rStart@adrs^(0+128),w
  3228  0C5F  073D               	addwf	I2C_rStart@rw^(0+128),w
  3229  0C60  0024               	movlb	4	; select bank4
  3230  0C61  0091               	movwf	17	;volatile
  3231  0C62                     l194:	
  3232                           ;My_header_16F.h: 233: while (!SSP1IF);
  3233                           
  3234  0C62  0020               	movlb	0	; select bank0
  3235  0C63  1D91               	btfss	17,3	;volatile
  3236  0C64  2C62               	goto	l194
  3237                           
  3238                           ;My_header_16F.h: 234: return SSP1CON2bits.ACKSTAT;
  3239  0C65  0024               	movlb	4	; select bank4
  3240  0C66  0E16               	swapf	22,w	;volatile
  3241  0C67  0C89               	rrf	9,f
  3242  0C68  0C89               	rrf	9,f
  3243  0C69  3901               	andlw	1
  3244  0C6A  0008               	return
  3245  0C6B                     __end_of_I2C_rStart:	
  3246                           
  3247                           	psect	text18
  3248  0B5C                     __ptext18:	
  3249 ;; *************** function _I2C_Stop *****************
  3250 ;; Defined at:
  3251 ;;		line 237 in file "My_header_16F.h"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0, pclath, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3265 ;;      Params:         0       0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0
  3268 ;;      Totals:         0       0       0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    7
  3272 ;; This function calls:
  3273 ;;		_I2C_IdleCheck
  3274 ;; This function is called by:
  3275 ;;		_LCD_Command
  3276 ;;		_EEP_Read
  3277 ;;		_EEP_Writes
  3278 ;;		_LCD_CreateChar
  3279 ;;		_RTC_Write
  3280 ;;		_RTC_Read
  3281 ;;		_TM_init
  3282 ;;		_TM_Read
  3283 ;;		_EEP_Write
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _I2C_Stop
  3289  0B5C                     _I2C_Stop:	
  3290                           
  3291                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3295  0B5C  3005               	movlw	5
  3296  0B5D  318B  238C         	fcall	_I2C_IdleCheck
  3297                           
  3298                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  3299  0B5F  0024               	movlb	4	; select bank4
  3300  0B60  1516               	bsf	22,2	;volatile
  3301  0B61  0008               	return
  3302  0B62                     __end_of_I2C_Stop:	
  3303                           
  3304                           	psect	text19
  3305  0CD9                     __ptext19:	
  3306 ;; *************** function _I2C_Start *****************
  3307 ;; Defined at:
  3308 ;;		line 213 in file "My_header_16F.h"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  adrs            1    wreg     unsigned char 
  3311 ;;  rw              1    2[BANK1 ] unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  adrs            1    3[BANK1 ] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, pclath, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3323 ;;      Params:         0       0       1       0       0       0
  3324 ;;      Locals:         0       0       1       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0
  3326 ;;      Totals:         0       0       2       0       0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    7
  3330 ;; This function calls:
  3331 ;;		_I2C_IdleCheck
  3332 ;; This function is called by:
  3333 ;;		_LCD_Command
  3334 ;;		_EEP_Read
  3335 ;;		_EEP_Writes
  3336 ;;		_LCD_CreateChar
  3337 ;;		_RTC_Write
  3338 ;;		_RTC_Read
  3339 ;;		_TM_init
  3340 ;;		_TM_Read
  3341 ;;		_EEP_Write
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           
  3346                           ;psect for function _I2C_Start
  3347  0CD9                     _I2C_Start:	
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3351                           ;I2C_Start@adrs stored from wreg
  3352  0CD9  0021               	movlb	1	; select bank1
  3353  0CDA  00BC               	movwf	I2C_Start@adrs^(0+128)
  3354                           
  3355                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  3356  0CDB  3005               	movlw	5
  3357  0CDC  318B  238C  318C   	fcall	_I2C_IdleCheck
  3358                           
  3359                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  3360  0CDF  0024               	movlb	4	; select bank4
  3361  0CE0  1416               	bsf	22,0	;volatile
  3362                           
  3363                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  3364  0CE1  3005               	movlw	5
  3365  0CE2  318B  238C  318C   	fcall	_I2C_IdleCheck
  3366                           
  3367                           ;My_header_16F.h: 219: SSP1IF = 0;
  3368  0CE5  0020               	movlb	0	; select bank0
  3369  0CE6  1191               	bcf	17,3	;volatile
  3370                           
  3371                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3372  0CE7  0021               	movlb	1	; select bank1
  3373  0CE8  353C               	lslf	I2C_Start@adrs^(0+128),w
  3374  0CE9  073B               	addwf	I2C_Start@rw^(0+128),w
  3375  0CEA  0024               	movlb	4	; select bank4
  3376  0CEB  0091               	movwf	17	;volatile
  3377  0CEC                     l188:	
  3378                           ;My_header_16F.h: 221: while (!SSP1IF);
  3379                           
  3380  0CEC  0020               	movlb	0	; select bank0
  3381  0CED  1D91               	btfss	17,3	;volatile
  3382  0CEE  2CEC               	goto	l188
  3383                           
  3384                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  3385  0CEF  0024               	movlb	4	; select bank4
  3386  0CF0  0E16               	swapf	22,w	;volatile
  3387  0CF1  0C89               	rrf	9,f
  3388  0CF2  0C89               	rrf	9,f
  3389  0CF3  3901               	andlw	1
  3390  0CF4  0008               	return
  3391  0CF5                     __end_of_I2C_Start:	
  3392                           
  3393                           	psect	text20
  3394  0BCA                     __ptext20:	
  3395 ;; *************** function _I2C_Send *****************
  3396 ;; Defined at:
  3397 ;;		line 243 in file "My_header_16F.h"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  data            1    wreg     unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  data            1    2[BANK1 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      unsigned char 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3411 ;;      Params:         0       0       0       0       0       0
  3412 ;;      Locals:         0       0       1       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0
  3414 ;;      Totals:         0       0       1       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    7
  3418 ;; This function calls:
  3419 ;;		_I2C_IdleCheck
  3420 ;; This function is called by:
  3421 ;;		_LCD_Command
  3422 ;;		_EEP_Read
  3423 ;;		_EEP_Writes
  3424 ;;		_LCD_CreateChar
  3425 ;;		_RTC_Write
  3426 ;;		_RTC_Read
  3427 ;;		_TM_init
  3428 ;;		_TM_Read
  3429 ;;		_EEP_Write
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _I2C_Send
  3435  0BCA                     _I2C_Send:	
  3436                           
  3437                           ;incstack = 0
  3438                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3439                           ;I2C_Send@data stored from wreg
  3440  0BCA  0021               	movlb	1	; select bank1
  3441  0BCB  00BB               	movwf	I2C_Send@data^(0+128)
  3442                           
  3443                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  3444  0BCC  3005               	movlw	5
  3445  0BCD  318B  238C  318B   	fcall	_I2C_IdleCheck
  3446                           
  3447                           ;My_header_16F.h: 245: SSP1IF = 0;
  3448  0BD0  0020               	movlb	0	; select bank0
  3449  0BD1  1191               	bcf	17,3	;volatile
  3450                           
  3451                           ;My_header_16F.h: 246: SSP1BUF = data;
  3452  0BD2  0021               	movlb	1	; select bank1
  3453  0BD3  083B               	movf	I2C_Send@data^(0+128),w
  3454  0BD4  0024               	movlb	4	; select bank4
  3455  0BD5  0091               	movwf	17	;volatile
  3456  0BD6                     l203:	
  3457                           ;My_header_16F.h: 247: while (!SSP1IF);
  3458                           
  3459  0BD6  0020               	movlb	0	; select bank0
  3460  0BD7  1D91               	btfss	17,3	;volatile
  3461  0BD8  2BD6               	goto	l203
  3462                           
  3463                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  3464                           ;	Return value of _I2C_Send is never used
  3465  0BD9  0024               	movlb	4	; select bank4
  3466  0BDA  0816               	movf	22,w	;volatile
  3467  0BDB  0008               	return
  3468  0BDC                     __end_of_I2C_Send:	
  3469                           
  3470                           	psect	text21
  3471  0CF5                     __ptext21:	
  3472 ;; *************** function _I2C_Receive *****************
  3473 ;; Defined at:
  3474 ;;		line 251 in file "My_header_16F.h"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  ack             1    wreg     unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  ack             1    3[BANK1 ] unsigned char 
  3479 ;;  data            1    4[BANK1 ] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      unsigned char 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3489 ;;      Params:         0       0       0       0       0       0
  3490 ;;      Locals:         0       0       2       0       0       0
  3491 ;;      Temps:          0       0       1       0       0       0
  3492 ;;      Totals:         0       0       3       0       0       0
  3493 ;;Total ram usage:        3 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    7
  3496 ;; This function calls:
  3497 ;;		_I2C_IdleCheck
  3498 ;; This function is called by:
  3499 ;;		_EEP_Read
  3500 ;;		_RTC_Read
  3501 ;;		_TM_Read
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _I2C_Receive
  3507  0CF5                     _I2C_Receive:	
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  3511                           ;I2C_Receive@ack stored from wreg
  3512  0CF5  0021               	movlb	1	; select bank1
  3513  0CF6  00BC               	movwf	I2C_Receive@ack^(0+128)
  3514                           
  3515                           ;My_header_16F.h: 252: uint8_t data;
  3516                           ;My_header_16F.h: 254: I2C_IdleCheck(0x5);
  3517  0CF7  3005               	movlw	5
  3518  0CF8  318B  238C  318C   	fcall	_I2C_IdleCheck
  3519                           
  3520                           ;My_header_16F.h: 255: SSP1CON2bits.RCEN = 1;
  3521  0CFB  0024               	movlb	4	; select bank4
  3522  0CFC  1596               	bsf	22,3	;volatile
  3523                           
  3524                           ;My_header_16F.h: 256: I2C_IdleCheck(0x4);
  3525  0CFD  3004               	movlw	4
  3526  0CFE  318B  238C  318C   	fcall	_I2C_IdleCheck
  3527                           
  3528                           ;My_header_16F.h: 257: data = SSP1BUF;
  3529  0D01  0024               	movlb	4	; select bank4
  3530  0D02  0811               	movf	17,w	;volatile
  3531  0D03  0021               	movlb	1	; select bank1
  3532  0D04  00BB               	movwf	??_I2C_Receive^(0+128)
  3533  0D05  083B               	movf	??_I2C_Receive^(0+128),w
  3534  0D06  00BD               	movwf	I2C_Receive@data^(0+128)
  3535                           
  3536                           ;My_header_16F.h: 258: I2C_IdleCheck(0x5);
  3537  0D07  3005               	movlw	5
  3538  0D08  318B  238C         	fcall	_I2C_IdleCheck
  3539                           
  3540                           ;My_header_16F.h: 259: SSP1CON2bits.ACKDT = ack;
  3541  0D0A  0021               	movlb	1	; select bank1
  3542  0D0B  083C               	movf	I2C_Receive@ack^(0+128),w
  3543  0D0C  0024               	movlb	4	; select bank4
  3544  0D0D  1D03               	skipz
  3545  0D0E  1696               	bsf	22,5	;volatile
  3546  0D0F  1903               	skipnz
  3547  0D10  1296               	bcf	22,5	;volatile
  3548                           
  3549                           ;My_header_16F.h: 260: SSP1CON2bits.ACKEN = 1;
  3550  0D11  1616               	bsf	22,4	;volatile
  3551                           
  3552                           ;My_header_16F.h: 261: return data;
  3553  0D12  0021               	movlb	1	; select bank1
  3554  0D13  083D               	movf	I2C_Receive@data^(0+128),w
  3555  0D14  0008               	return
  3556  0D15                     __end_of_I2C_Receive:	
  3557                           
  3558                           	psect	text22
  3559  0B8C                     __ptext22:	
  3560 ;; *************** function _I2C_IdleCheck *****************
  3561 ;; Defined at:
  3562 ;;		line 199 in file "My_header_16F.h"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  mask            1    wreg     unsigned char 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  mask            1    1[BANK1 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3576 ;;      Params:         0       0       0       0       0       0
  3577 ;;      Locals:         0       0       1       0       0       0
  3578 ;;      Temps:          0       0       1       0       0       0
  3579 ;;      Totals:         0       0       2       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    6
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_I2C_Start
  3587 ;;		_I2C_rStart
  3588 ;;		_I2C_Stop
  3589 ;;		_I2C_Send
  3590 ;;		_I2C_Receive
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _I2C_IdleCheck
  3596  0B8C                     _I2C_IdleCheck:	
  3597                           
  3598                           ;incstack = 0
  3599                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3600                           ;I2C_IdleCheck@mask stored from wreg
  3601  0B8C  0021               	movlb	1	; select bank1
  3602  0B8D  00BA               	movwf	I2C_IdleCheck@mask^(0+128)
  3603  0B8E                     l2878:	
  3604                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3605                           
  3606  0B8E  083A               	movf	I2C_IdleCheck@mask^(0+128),w
  3607  0B8F  0024               	movlb	4	; select bank4
  3608  0B90  0514               	andwf	20,w	;volatile
  3609  0B91  0021               	movlb	1	; select bank1
  3610  0B92  00B9               	movwf	??_I2C_IdleCheck^(0+128)
  3611  0B93  0024               	movlb	4	; select bank4
  3612  0B94  0816               	movf	22,w	;volatile
  3613  0B95  391F               	andlw	31
  3614  0B96  0021               	movlb	1	; select bank1
  3615  0B97  0439               	iorwf	??_I2C_IdleCheck^(0+128),w
  3616  0B98  1903               	btfsc	3,2
  3617  0B99  0008               	return
  3618  0B9A  2B8E               	goto	l2878
  3619  0B9B                     __end_of_I2C_IdleCheck:	
  3620                           
  3621                           	psect	intentry
  3622  0004                     __pintentry:	
  3623 ;; *************** function _isr *****************
  3624 ;; Defined at:
  3625 ;;		line 65 in file "PIC16F1827-ChargeStation4-02.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  i               1   26[BANK0 ] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;		None               void
  3632 ;; Registers used:
  3633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3639 ;;      Params:         0       0       0       0       0       0
  3640 ;;      Locals:         0       1       0       0       0       0
  3641 ;;      Temps:          0       8       0       0       0       0
  3642 ;;      Totals:         0       9       0       0       0       0
  3643 ;;Total ram usage:        9 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    5
  3646 ;; This function calls:
  3647 ;;		___lldiv
  3648 ;;		___wmul
  3649 ;;		_adc
  3650 ;;		_button_timer_interrupt
  3651 ;;		_display
  3652 ;;		_lchika
  3653 ;;		_ringbuf_num
  3654 ;;		_ringbuf_pop
  3655 ;;		i1_OUT
  3656 ;; This function is called by:
  3657 ;;		Interrupt level 1
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661  0004                     _isr:	
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3665  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3666  0005  3180               	pagesel	$
  3667  0006  0020               	movlb	0	; select bank0
  3668  0007  087F               	movf	127,w
  3669  0008  00D4               	movwf	??_isr+7
  3670                           
  3671                           ;PIC16F1827-ChargeStation4-02.c: 66: uint8_t i;
  3672                           ;PIC16F1827-ChargeStation4-02.c: 67: if (PIR1bits.RCIF == 1) {
  3673  0009  1A91               	btfsc	17,5	;volatile
  3674                           
  3675                           ;PIC16F1827-ChargeStation4-02.c: 68: PIR1bits.RCIF = 0;
  3676  000A  1291               	bcf	17,5	;volatile
  3677                           
  3678                           ;PIC16F1827-ChargeStation4-02.c: 69: }
  3679                           ;PIC16F1827-ChargeStation4-02.c: 70: if (PIR1bits.TXIF & PIE1bits.TXIE) {
  3680  000B  0021               	movlb	1	; select bank1
  3681  000C  0E11               	swapf	17,w	;volatile
  3682  000D  3901               	andlw	1
  3683  000E  0020               	movlb	0	; select bank0
  3684  000F  00CD               	movwf	??_isr
  3685  0010  0E11               	swapf	17,w	;volatile
  3686  0011  3901               	andlw	1
  3687  0012  054D               	andwf	??_isr,w
  3688  0013  1903               	btfsc	3,2
  3689  0014  2825               	goto	i1l306
  3690                           
  3691                           ;PIC16F1827-ChargeStation4-02.c: 71: if (ringbuf_num(&tx_buf)) {
  3692  0015  30B5               	movlw	(low (_tx_buf| 0))& (0+255)
  3693  0016  318E  263D  3180   	fcall	_ringbuf_num
  3694  0019  3A00               	xorlw	0
  3695  001A  1903               	skipnz
  3696  001B  2823               	goto	i1l307
  3697                           
  3698                           ;PIC16F1827-ChargeStation4-02.c: 72: TXREG = ringbuf_pop(&tx_buf);
  3699  001C  30B5               	movlw	(low (_tx_buf| 0))& (0+255)
  3700  001D  318E  2694  3180   	fcall	_ringbuf_pop
  3701  0020  0023               	movlb	3	; select bank3
  3702  0021  009A               	movwf	26	;volatile
  3703                           
  3704                           ;PIC16F1827-ChargeStation4-02.c: 73: } else {
  3705  0022  2825               	goto	i1l306
  3706  0023                     i1l307:	
  3707                           
  3708                           ;PIC16F1827-ChargeStation4-02.c: 74: PIE1bits.TXIE = 0;
  3709  0023  0021               	movlb	1	; select bank1
  3710  0024  1211               	bcf	17,4	;volatile
  3711  0025                     i1l306:	
  3712                           
  3713                           ;PIC16F1827-ChargeStation4-02.c: 75: }
  3714                           ;PIC16F1827-ChargeStation4-02.c: 76: }
  3715                           ;PIC16F1827-ChargeStation4-02.c: 77: if (PIR1bits.TMR1IF == 1) {
  3716  0025  0020               	movlb	0	; select bank0
  3717  0026  1C11               	btfss	17,0	;volatile
  3718  0027  28B5               	goto	i1l309
  3719                           
  3720                           ;PIC16F1827-ChargeStation4-02.c: 78: PIR1bits.TMR1IF = 0;
  3721  0028  1011               	bcf	17,0	;volatile
  3722                           
  3723                           ;PIC16F1827-ChargeStation4-02.c: 79: button_timer_interrupt(&sw_RA3, !RA3);
  3724  0029  1003               	clrc
  3725  002A  1D8C               	btfss	12,3	;volatile
  3726  002B  1403               	setc
  3727  002C  3000               	movlw	0
  3728  002D  1803               	btfsc	3,0
  3729  002E  3001               	movlw	1
  3730  002F  00F0               	movwf	button_timer_interrupt@sw_value
  3731  0030  3032               	movlw	(low (_sw_RA3| 0))& (0+255)
  3732  0031  3185  253D  3180   	fcall	_button_timer_interrupt
  3733                           
  3734                           ;PIC16F1827-ChargeStation4-02.c: 80: button_timer_interrupt(&sw_RA4, !RA4);
  3735  0034  1003               	clrc
  3736  0035  0020               	movlb	0	; select bank0
  3737  0036  1E0C               	btfss	12,4	;volatile
  3738  0037  1403               	setc
  3739  0038  3000               	movlw	0
  3740  0039  1803               	btfsc	3,0
  3741  003A  3001               	movlw	1
  3742  003B  00F0               	movwf	button_timer_interrupt@sw_value
  3743  003C  3035               	movlw	(low (_sw_RA4| 0))& (0+255)
  3744  003D  3185  253D  3180   	fcall	_button_timer_interrupt
  3745                           
  3746                           ;PIC16F1827-ChargeStation4-02.c: 81: button_timer_interrupt(&sw_RA5, !RA5);
  3747  0040  1003               	clrc
  3748  0041  0020               	movlb	0	; select bank0
  3749  0042  1E8C               	btfss	12,5	;volatile
  3750  0043  1403               	setc
  3751  0044  3000               	movlw	0
  3752  0045  1803               	btfsc	3,0
  3753  0046  3001               	movlw	1
  3754  0047  00F0               	movwf	button_timer_interrupt@sw_value
  3755  0048  3038               	movlw	(low (_sw_RA5| 0))& (0+255)
  3756  0049  3185  253D  3180   	fcall	_button_timer_interrupt
  3757                           
  3758                           ;PIC16F1827-ChargeStation4-02.c: 83: for (i = 0; i < 3; i++) {
  3759  004C  0020               	movlb	0	; select bank0
  3760  004D  01D5               	clrf	isr@i
  3761  004E  3003               	movlw	3
  3762  004F  0255               	subwf	isr@i,w
  3763  0050  1803               	btfsc	3,0
  3764  0051  28B5               	goto	i1l309
  3765  0052                     i1l3268:	
  3766                           
  3767                           ;PIC16F1827-ChargeStation4-02.c: 84: v[i] = 2 * adc(2 - i) * 3 / 4;
  3768  0052  0355               	decf	isr@i,w
  3769  0053  3AFF               	xorlw	255
  3770  0054  3E02               	addlw	2
  3771  0055  318C  241E  3180   	fcall	_adc
  3772  0058  3570               	lslf	?_adc,w
  3773  0059  00F4               	movwf	___wmul@multiplier
  3774  005A  0D71               	rlf	?_adc+1,w
  3775  005B  00F5               	movwf	___wmul@multiplier+1
  3776  005C  3003               	movlw	3
  3777  005D  00F6               	movwf	___wmul@multiplicand
  3778  005E  3000               	movlw	0
  3779  005F  00F7               	movwf	___wmul@multiplicand+1
  3780  0060  318C  246B  3180   	fcall	___wmul
  3781  0063  0874               	movf	?___wmul,w
  3782  0064  0020               	movlb	0	; select bank0
  3783  0065  00CD               	movwf	??_isr
  3784  0066  0875               	movf	?___wmul+1,w
  3785  0067  00CE               	movwf	??_isr+1
  3786  0068  36CE               	lsrf	??_isr+1,f
  3787  0069  0CCD               	rrf	??_isr,f
  3788  006A  36CE               	lsrf	??_isr+1,f
  3789  006B  0CCD               	rrf	??_isr,f
  3790  006C  3555               	lslf	isr@i,w
  3791  006D  3E26               	addlw	(low (_v| 0))& (0+255)
  3792  006E  0086               	movwf	6
  3793  006F  0187               	clrf	7
  3794  0070  084D               	movf	??_isr,w
  3795  0071  3FC0               	movwi [0]fsr1
  3796  0072  084E               	movf	??_isr+1,w
  3797  0073  3FC1               	movwi [1]fsr1
  3798                           
  3799                           ;PIC16F1827-ChargeStation4-02.c: 86: if (v[i] < 50) {
  3800  0074  3555               	lslf	isr@i,w
  3801  0075  3E26               	addlw	(low (_v| 0))& (0+255)
  3802  0076  0086               	movwf	6
  3803  0077  0187               	clrf	7
  3804  0078  3F40               	moviw [0]fsr1
  3805  0079  00CD               	movwf	??_isr
  3806  007A  3F41               	moviw [1]fsr1
  3807  007B  00CE               	movwf	??_isr+1
  3808  007C  3000               	movlw	0
  3809  007D  024E               	subwf	??_isr+1,w
  3810  007E  3032               	movlw	50
  3811  007F  1903               	skipnz
  3812  0080  024D               	subwf	??_isr,w
  3813  0081  1803               	skipnc
  3814  0082  28A3               	goto	i1l3276
  3815                           
  3816                           ;PIC16F1827-ChargeStation4-02.c: 87: cut[i]++;
  3817  0083  3555               	lslf	isr@i,w
  3818  0084  3E53               	addlw	(low (_cut| (0+256)))& (0+255)
  3819  0085  0086               	movwf	6
  3820  0086  3001               	movlw	1	; select bank2/3
  3821  0087  0087               	movwf	7
  3822  0088  3001               	movlw	1
  3823  0089  0781               	addwf	1,f
  3824  008A  3141               	addfsr 1,1
  3825  008B  1803               	skipnc
  3826  008C  0A81               	incf	1,f
  3827                           
  3828                           ;PIC16F1827-ChargeStation4-02.c: 88: if (cut[i] >= 30 * 6) {
  3829  008D  3555               	lslf	isr@i,w
  3830  008E  3E53               	addlw	(low (_cut| (0+256)))& (0+255)
  3831  008F  0086               	movwf	6
  3832  0090  3001               	movlw	1	; select bank2/3
  3833  0091  0087               	movwf	7
  3834  0092  3F40               	moviw [0]fsr1
  3835  0093  00CD               	movwf	??_isr
  3836  0094  3F41               	moviw [1]fsr1
  3837  0095  00CE               	movwf	??_isr+1
  3838  0096  3000               	movlw	0
  3839  0097  024E               	subwf	??_isr+1,w
  3840  0098  30B4               	movlw	180
  3841  0099  1903               	skipnz
  3842  009A  024D               	subwf	??_isr,w
  3843  009B  1C03               	skipc
  3844  009C  28AC               	goto	i1l3278
  3845                           
  3846                           ;PIC16F1827-ChargeStation4-02.c: 89: OUT(i, 0);
  3847  009D  01F0               	clrf	i1OUT@value
  3848  009E  0855               	movf	isr@i,w
  3849  009F  318D  25EA  3180   	fcall	i1_OUT
  3850                           
  3851                           ;PIC16F1827-ChargeStation4-02.c: 90: }
  3852                           ;PIC16F1827-ChargeStation4-02.c: 91: } else {
  3853  00A2  28AC               	goto	i1l3278
  3854  00A3                     i1l3276:	
  3855                           
  3856                           ;PIC16F1827-ChargeStation4-02.c: 92: cut[i] = 0;
  3857  00A3  0020               	movlb	0	; select bank0
  3858  00A4  3555               	lslf	isr@i,w
  3859  00A5  3E53               	addlw	(low (_cut| (0+256)))& (0+255)
  3860  00A6  0086               	movwf	6
  3861  00A7  3001               	movlw	1	; select bank2/3
  3862  00A8  0087               	movwf	7
  3863  00A9  3000               	movlw	0
  3864  00AA  3FC0               	movwi [0]fsr1
  3865  00AB  3FC1               	movwi [1]fsr1
  3866  00AC                     i1l3278:	
  3867  00AC  3001               	movlw	1
  3868  00AD  0020               	movlb	0	; select bank0
  3869  00AE  00CD               	movwf	??_isr
  3870  00AF  084D               	movf	??_isr,w
  3871  00B0  07D5               	addwf	isr@i,f
  3872  00B1  3003               	movlw	3
  3873  00B2  0255               	subwf	isr@i,w
  3874  00B3  1C03               	skipc
  3875  00B4  2852               	goto	i1l3268
  3876  00B5                     i1l309:	
  3877                           
  3878                           ;PIC16F1827-ChargeStation4-02.c: 93: }
  3879                           ;PIC16F1827-ChargeStation4-02.c: 94: }
  3880                           ;PIC16F1827-ChargeStation4-02.c: 95: }
  3881                           ;PIC16F1827-ChargeStation4-02.c: 96: if (INTCONbits.TMR0IF == 1) {
  3882  00B5  1D0B               	btfss	11,2	;volatile
  3883  00B6  2963               	goto	i1l321
  3884                           
  3885                           ;PIC16F1827-ChargeStation4-02.c: 97: INTCONbits.TMR0IF = 0;
  3886  00B7  110B               	bcf	11,2	;volatile
  3887                           
  3888                           ;PIC16F1827-ChargeStation4-02.c: 98: cnt0++;
  3889  00B8  3001               	movlw	1
  3890  00B9  07AC               	addwf	_cnt0,f
  3891  00BA  3000               	movlw	0
  3892  00BB  3DAD               	addwfc	_cnt0+1,f
  3893                           
  3894                           ;PIC16F1827-ChargeStation4-02.c: 99: if (cnt0 == 400) {
  3895  00BC  3090               	movlw	144
  3896  00BD  062C               	xorwf	_cnt0,w
  3897  00BE  1D03               	skipz
  3898  00BF  28D1               	goto	i1l3294
  3899  00C0  032D               	decf	_cnt0+1,w
  3900  00C1  1D03               	btfss	3,2
  3901  00C2  28D1               	goto	i1l3294
  3902                           
  3903                           ;PIC16F1827-ChargeStation4-02.c: 100: cnt0 = 0;
  3904  00C3  01AC               	clrf	_cnt0
  3905  00C4  01AD               	clrf	_cnt0+1
  3906                           
  3907                           ;PIC16F1827-ChargeStation4-02.c: 101: lchika();
  3908  00C5  3186  2674  3180   	fcall	_lchika
  3909                           
  3910                           ;PIC16F1827-ChargeStation4-02.c: 102: display(print_port, print_content);
  3911  00C8  0020               	movlb	0	; select bank0
  3912  00C9  0830               	movf	_print_content,w
  3913  00CA  00CD               	movwf	??_isr
  3914  00CB  084D               	movf	??_isr,w
  3915  00CC  00C9               	movwf	display@co
  3916  00CD  0831               	movf	_print_port,w
  3917  00CE  3181  218C  3180   	fcall	_display
  3918  00D1                     i1l3294:	
  3919                           
  3920                           ;PIC16F1827-ChargeStation4-02.c: 103: }
  3921                           ;PIC16F1827-ChargeStation4-02.c: 104: cnt1s++;
  3922  00D1  3001               	movlw	1
  3923  00D2  0020               	movlb	0	; select bank0
  3924  00D3  07AE               	addwf	_cnt1s,f
  3925  00D4  3000               	movlw	0
  3926  00D5  3DAF               	addwfc	_cnt1s+1,f
  3927                           
  3928                           ;PIC16F1827-ChargeStation4-02.c: 106: if (cnt1s == 1953) {
  3929  00D6  30A1               	movlw	161
  3930  00D7  062E               	xorwf	_cnt1s,w
  3931  00D8  3007               	movlw	7
  3932  00D9  1903               	skipnz
  3933  00DA  062F               	xorwf	_cnt1s+1,w
  3934  00DB  1D03               	btfss	3,2
  3935  00DC  2963               	goto	i1l321
  3936                           
  3937                           ;PIC16F1827-ChargeStation4-02.c: 107: cnt1s = 0;
  3938  00DD  01AE               	clrf	_cnt1s
  3939  00DE  01AF               	clrf	_cnt1s+1
  3940                           
  3941                           ;PIC16F1827-ChargeStation4-02.c: 108: for (i = 0; i < 3; i++) {
  3942  00DF  01D5               	clrf	isr@i
  3943  00E0  3003               	movlw	3
  3944  00E1  0255               	subwf	isr@i,w
  3945  00E2  1803               	btfsc	3,0
  3946  00E3  2963               	goto	i1l321
  3947  00E4                     i1l3304:	
  3948                           
  3949                           ;PIC16F1827-ChargeStation4-02.c: 109: ss[i] += v[i];
  3950  00E4  3555               	lslf	isr@i,w
  3951  00E5  3E26               	addlw	(low (_v| 0))& (0+255)
  3952  00E6  0086               	movwf	6
  3953  00E7  0187               	clrf	7
  3954  00E8  3F40               	moviw [0]fsr1
  3955  00E9  00CD               	movwf	??_isr
  3956  00EA  3F41               	moviw [1]fsr1
  3957  00EB  00CE               	movwf	??_isr+1
  3958  00EC  084D               	movf	??_isr,w
  3959  00ED  00CF               	movwf	??_isr+2
  3960  00EE  084E               	movf	??_isr+1,w
  3961  00EF  00D0               	movwf	??_isr+3
  3962  00F0  01D1               	clrf	??_isr+4
  3963  00F1  01D2               	clrf	??_isr+5
  3964  00F2  0855               	movf	isr@i,w
  3965  00F3  00D3               	movwf	??_isr+6
  3966  00F4  3001               	movlw	1
  3967  00F5                     u369_25:	
  3968  00F5  35D3               	lslf	??_isr+6,f
  3969  00F6  3EFF               	addlw	-1
  3970  00F7  1D03               	skipz
  3971  00F8  28F5               	goto	u369_25
  3972  00F9  3553               	lslf	??_isr+6,w
  3973  00FA  3EA0               	addlw	(low (_ss| 0))& (0+255)
  3974  00FB  0086               	movwf	6
  3975  00FC  0187               	clrf	7
  3976  00FD  084F               	movf	??_isr+2,w
  3977  00FE  0781               	addwf	1,f
  3978  00FF  3141               	addfsr 1,1
  3979  0100  0850               	movf	??_isr+3,w
  3980  0101  3D81               	addwfc	1,f
  3981  0102  3141               	addfsr 1,1
  3982  0103  0851               	movf	??_isr+4,w
  3983  0104  3D81               	addwfc	1,f
  3984  0105  3141               	addfsr 1,1
  3985  0106  0852               	movf	??_isr+5,w
  3986  0107  3D81               	addwfc	1,f
  3987                           
  3988                           ;PIC16F1827-ChargeStation4-02.c: 110: s[i] = ss[i] / 3600;
  3989  0108  3000               	movlw	0
  3990  0109  00F3               	movwf	___lldiv@divisor+3
  3991  010A  3000               	movlw	0
  3992  010B  00F2               	movwf	___lldiv@divisor+2
  3993  010C  300E               	movlw	14
  3994  010D  00F1               	movwf	___lldiv@divisor+1
  3995  010E  3010               	movlw	16
  3996  010F  00F0               	movwf	___lldiv@divisor
  3997  0110  0855               	movf	isr@i,w
  3998  0111  00CD               	movwf	??_isr
  3999  0112  3001               	movlw	1
  4000  0113                     u370_25:	
  4001  0113  35CD               	lslf	??_isr,f
  4002  0114  3EFF               	addlw	-1
  4003  0115  1D03               	skipz
  4004  0116  2913               	goto	u370_25
  4005  0117  354D               	lslf	??_isr,w
  4006  0118  3EA0               	addlw	(low (_ss| 0))& (0+255)
  4007  0119  0086               	movwf	6
  4008  011A  0187               	clrf	7
  4009  011B  3F40               	moviw [0]fsr1
  4010  011C  00F4               	movwf	___lldiv@dividend
  4011  011D  3F41               	moviw [1]fsr1
  4012  011E  00F5               	movwf	___lldiv@dividend+1
  4013  011F  3F42               	moviw [2]fsr1
  4014  0120  00F6               	movwf	___lldiv@dividend+2
  4015  0121  3F43               	moviw [3]fsr1
  4016  0122  00F7               	movwf	___lldiv@dividend+3
  4017  0123  3187  2756  3180   	fcall	___lldiv
  4018  0126  0020               	movlb	0	; select bank0
  4019  0127  3555               	lslf	isr@i,w
  4020  0128  3E20               	addlw	(low (_s| 0))& (0+255)
  4021  0129  0086               	movwf	6
  4022  012A  0187               	clrf	7
  4023  012B  0870               	movf	?___lldiv,w
  4024  012C  3FC0               	movwi [0]fsr1
  4025  012D  0871               	movf	?___lldiv+1,w
  4026  012E  3FC1               	movwi [1]fsr1
  4027                           
  4028                           ;PIC16F1827-ChargeStation4-02.c: 111: if (s[i] != sp[i]) {
  4029  012F  3555               	lslf	isr@i,w
  4030  0130  3E59               	addlw	(low (_sp| (0+256)))& (0+255)
  4031  0131  0086               	movwf	6
  4032  0132  3001               	movlw	1	; select bank2/3
  4033  0133  0087               	movwf	7
  4034  0134  3F40               	moviw [0]fsr1
  4035  0135  00CD               	movwf	??_isr
  4036  0136  3F41               	moviw [1]fsr1
  4037  0137  00CE               	movwf	??_isr+1
  4038  0138  3555               	lslf	isr@i,w
  4039  0139  3E20               	addlw	(low (_s| 0))& (0+255)
  4040  013A  0086               	movwf	6
  4041  013B  0187               	clrf	7
  4042  013C  3F40               	moviw [0]fsr1
  4043  013D  00CF               	movwf	??_isr+2
  4044  013E  3F41               	moviw [1]fsr1
  4045  013F  00D0               	movwf	??_isr+3
  4046  0140  084E               	movf	??_isr+1,w
  4047  0141  0650               	xorwf	??_isr+3,w
  4048  0142  1D03               	skipz
  4049  0143  2946               	goto	u371_25
  4050  0144  084D               	movf	??_isr,w
  4051  0145  064F               	xorwf	??_isr+2,w
  4052  0146                     u371_25:	
  4053  0146  1903               	skipnz
  4054  0147  295B               	goto	i1l3314
  4055                           
  4056                           ;PIC16F1827-ChargeStation4-02.c: 112: change_flag[i] = 1;
  4057  0148  0855               	movf	isr@i,w
  4058  0149  3EAC               	addlw	(low (_change_flag| 0))& (0+255)
  4059  014A  0086               	movwf	6
  4060  014B  0187               	clrf	7
  4061  014C  0181               	clrf	1
  4062  014D  0A81               	incf	1,f
  4063                           
  4064                           ;PIC16F1827-ChargeStation4-02.c: 113: sp[i] = s[i];
  4065  014E  3555               	lslf	isr@i,w
  4066  014F  3E20               	addlw	(low (_s| 0))& (0+255)
  4067  0150  0086               	movwf	6
  4068  0151  0187               	clrf	7
  4069  0152  3555               	lslf	isr@i,w
  4070  0153  3E59               	addlw	(low (_sp| (0+256)))& (0+255)
  4071  0154  0084               	movwf	4
  4072  0155  3001               	movlw	1	; select bank2/3
  4073  0156  0085               	movwf	5
  4074  0157  3F40               	moviw [0]fsr1
  4075  0158  3F80               	movwi [0]fsr0
  4076  0159  3F41               	moviw [1]fsr1
  4077  015A  3F81               	movwi [1]fsr0
  4078  015B                     i1l3314:	
  4079  015B  3001               	movlw	1
  4080  015C  00CD               	movwf	??_isr
  4081  015D  084D               	movf	??_isr,w
  4082  015E  07D5               	addwf	isr@i,f
  4083  015F  3003               	movlw	3
  4084  0160  0255               	subwf	isr@i,w
  4085  0161  1C03               	skipc
  4086  0162  28E4               	goto	i1l3304
  4087  0163                     i1l321:	
  4088  0163  0854               	movf	??_isr+7,w
  4089  0164  00FF               	movwf	127
  4090  0165  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4091  0166  0009               	retfie
  4092  0167                     __end_of_isr:	
  4093                           
  4094                           	psect	text24
  4095  0DEA                     __ptext24:	
  4096 ;; *************** function i1_OUT *****************
  4097 ;; Defined at:
  4098 ;;		line 211 in file "PIC16F1827-ChargeStation4-02.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  b               1    wreg     unsigned char 
  4101 ;;  value           1    0[COMMON] unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  b               1    1[COMMON] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4113 ;;      Params:         1       0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0
  4116 ;;      Totals:         2       0       0       0       0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_isr
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function i1_OUT
  4128  0DEA                     i1_OUT:	
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in i1_OUT: [wreg-fsr0h+status,2+status,0]
  4132                           ;i1OUT@b stored from wreg
  4133  0DEA  00F1               	movwf	i1OUT@b
  4134                           
  4135                           ;PIC16F1827-ChargeStation4-02.c: 212: switch (b) {
  4136  0DEB  2E07               	goto	i1l2606
  4137  0DEC                     i1l2592:	
  4138                           ;PIC16F1827-ChargeStation4-02.c: 213: case 0:
  4139                           
  4140                           
  4141                           ;PIC16F1827-ChargeStation4-02.c: 214: if (value) {
  4142  0DEC  0870               	movf	i1OUT@value,w
  4143  0DED  1903               	btfsc	3,2
  4144  0DEE  2DF2               	goto	i1l360
  4145                           
  4146                           ;PIC16F1827-ChargeStation4-02.c: 215: LATB0 = 0;
  4147  0DEF  0022               	movlb	2	; select bank2
  4148  0DF0  100D               	bcf	13,0	;volatile
  4149                           
  4150                           ;PIC16F1827-ChargeStation4-02.c: 216: } else {
  4151  0DF1  0008               	return
  4152  0DF2                     i1l360:	
  4153                           
  4154                           ;PIC16F1827-ChargeStation4-02.c: 217: LATB0 = 1;
  4155  0DF2  0022               	movlb	2	; select bank2
  4156  0DF3  140D               	bsf	13,0	;volatile
  4157                           
  4158                           ;PIC16F1827-ChargeStation4-02.c: 218: }
  4159                           ;PIC16F1827-ChargeStation4-02.c: 219: break;
  4160  0DF4  0008               	return
  4161  0DF5                     i1l2596:	
  4162                           ;PIC16F1827-ChargeStation4-02.c: 220: case 1:
  4163                           
  4164                           
  4165                           ;PIC16F1827-ChargeStation4-02.c: 221: if (value) {
  4166  0DF5  0870               	movf	i1OUT@value,w
  4167  0DF6  1903               	btfsc	3,2
  4168  0DF7  2DFB               	goto	i1l364
  4169                           
  4170                           ;PIC16F1827-ChargeStation4-02.c: 222: LATB3 = 0;
  4171  0DF8  0022               	movlb	2	; select bank2
  4172  0DF9  118D               	bcf	13,3	;volatile
  4173                           
  4174                           ;PIC16F1827-ChargeStation4-02.c: 223: } else {
  4175  0DFA  0008               	return
  4176  0DFB                     i1l364:	
  4177                           
  4178                           ;PIC16F1827-ChargeStation4-02.c: 224: LATB3 = 1;
  4179  0DFB  0022               	movlb	2	; select bank2
  4180  0DFC  158D               	bsf	13,3	;volatile
  4181                           
  4182                           ;PIC16F1827-ChargeStation4-02.c: 225: }
  4183                           ;PIC16F1827-ChargeStation4-02.c: 226: break;
  4184  0DFD  0008               	return
  4185  0DFE                     i1l2600:	
  4186                           ;PIC16F1827-ChargeStation4-02.c: 227: case 2:
  4187                           
  4188                           
  4189                           ;PIC16F1827-ChargeStation4-02.c: 228: if (value) {
  4190  0DFE  0870               	movf	i1OUT@value,w
  4191  0DFF  1903               	btfsc	3,2
  4192  0E00  2E04               	goto	i1l367
  4193                           
  4194                           ;PIC16F1827-ChargeStation4-02.c: 229: LATB6 = 0;
  4195  0E01  0022               	movlb	2	; select bank2
  4196  0E02  130D               	bcf	13,6	;volatile
  4197                           
  4198                           ;PIC16F1827-ChargeStation4-02.c: 230: } else {
  4199  0E03  0008               	return
  4200  0E04                     i1l367:	
  4201                           
  4202                           ;PIC16F1827-ChargeStation4-02.c: 231: LATB6 = 1;
  4203  0E04  0022               	movlb	2	; select bank2
  4204  0E05  170D               	bsf	13,6	;volatile
  4205                           
  4206                           ;PIC16F1827-ChargeStation4-02.c: 236: }
  4207                           
  4208                           ;PIC16F1827-ChargeStation4-02.c: 235: break;
  4209                           
  4210                           ;PIC16F1827-ChargeStation4-02.c: 234: default:
  4211                           
  4212                           ;PIC16F1827-ChargeStation4-02.c: 232: }
  4213                           ;PIC16F1827-ChargeStation4-02.c: 233: break;
  4214  0E06  0008               	return
  4215  0E07                     i1l2606:	
  4216  0E07  0871               	movf	i1OUT@b,w
  4217                           
  4218                           ; Switch size 1, requested type "space"
  4219                           ; Number of cases is 3, Range of values is 0 to 2
  4220                           ; switch strategies available:
  4221                           ; Name         Instructions Cycles
  4222                           ; simple_byte           10     6 (average)
  4223                           ; direct_byte           12     6 (fixed)
  4224                           ; jumptable            260     6 (fixed)
  4225                           ;	Chosen strategy is simple_byte
  4226  0E08  3A00               	xorlw	0	; case 0
  4227  0E09  1903               	skipnz
  4228  0E0A  2DEC               	goto	i1l2592
  4229  0E0B  3A01               	xorlw	1	; case 1
  4230  0E0C  1903               	skipnz
  4231  0E0D  2DF5               	goto	i1l2596
  4232  0E0E  3A03               	xorlw	3	; case 2
  4233  0E0F  1903               	skipnz
  4234  0E10  2DFE               	goto	i1l2600
  4235  0E11  2E12               	goto	i1l370
  4236  0E12                     i1l370:	
  4237  0E12  0008               	return
  4238  0E13                     __end_ofi1_OUT:	
  4239                           
  4240                           	psect	text25
  4241  0E94                     __ptext25:	
  4242 ;; *************** function _ringbuf_pop *****************
  4243 ;; Defined at:
  4244 ;;		line 128 in file "My_header_16F.h"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  rb              1    wreg     PTR struct ringbuf
  4247 ;;		 -> tx_buf(4), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  rb              1    3[COMMON] PTR struct ringbuf
  4250 ;;		 -> tx_buf(4), 
  4251 ;;  ret             1    2[COMMON] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      unsigned char 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4261 ;;      Params:         0       0       0       0       0       0
  4262 ;;      Locals:         2       0       0       0       0       0
  4263 ;;      Temps:          2       0       0       0       0       0
  4264 ;;      Totals:         4       0       0       0       0       0
  4265 ;;Total ram usage:        4 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_isr
  4271 ;;		_interrupt_TXIF
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function _ringbuf_pop
  4277  0E94                     _ringbuf_pop:	
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  4281                           ;ringbuf_pop@rb stored from wreg
  4282  0E94  00F3               	movwf	ringbuf_pop@rb
  4283                           
  4284                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  4285  0E95  0873               	movf	ringbuf_pop@rb,w
  4286  0E96  0086               	movwf	6
  4287  0E97  0187               	clrf	7
  4288  0E98  0873               	movf	ringbuf_pop@rb,w
  4289  0E99  3E03               	addlw	3
  4290  0E9A  0084               	movwf	4
  4291  0E9B  0185               	clrf	5
  4292  0E9C  0800               	movf	0,w
  4293  0E9D  0701               	addwf	1,w
  4294  0E9E  00F0               	movwf	??_ringbuf_pop
  4295  0E9F  0870               	movf	??_ringbuf_pop,w
  4296  0EA0  0086               	movwf	6
  4297  0EA1  3001               	movlw	1	; select bank2/3
  4298  0EA2  0087               	movwf	7
  4299  0EA3  0801               	movf	1,w
  4300  0EA4  00F1               	movwf	??_ringbuf_pop+1
  4301  0EA5  0871               	movf	??_ringbuf_pop+1,w
  4302  0EA6  00F2               	movwf	ringbuf_pop@ret
  4303                           
  4304                           ;My_header_16F.h: 130: rb->tail++;
  4305  0EA7  3001               	movlw	1
  4306  0EA8  00F0               	movwf	??_ringbuf_pop
  4307  0EA9  0873               	movf	ringbuf_pop@rb,w
  4308  0EAA  3E03               	addlw	3
  4309  0EAB  0086               	movwf	6
  4310  0EAC  0187               	clrf	7
  4311  0EAD  0870               	movf	??_ringbuf_pop,w
  4312  0EAE  0781               	addwf	1,f
  4313                           
  4314                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  4315  0EAF  0873               	movf	ringbuf_pop@rb,w
  4316  0EB0  3E03               	addlw	3
  4317  0EB1  0086               	movwf	6
  4318  0EB2  0187               	clrf	7
  4319  0EB3  0A73               	incf	ringbuf_pop@rb,w
  4320  0EB4  0084               	movwf	4
  4321  0EB5  0185               	clrf	5
  4322  0EB6  0800               	movf	0,w
  4323  0EB7  0201               	subwf	1,w
  4324  0EB8  1C03               	skipc
  4325  0EB9  2EBF               	goto	i1l3026
  4326                           
  4327                           ;My_header_16F.h: 132: rb->tail = 0;
  4328  0EBA  0873               	movf	ringbuf_pop@rb,w
  4329  0EBB  3E03               	addlw	3
  4330  0EBC  0086               	movwf	6
  4331  0EBD  0187               	clrf	7
  4332  0EBE  0181               	clrf	1
  4333  0EBF                     i1l3026:	
  4334                           
  4335                           ;My_header_16F.h: 133: }
  4336                           ;My_header_16F.h: 134: return ret;
  4337  0EBF  0872               	movf	ringbuf_pop@ret,w
  4338  0EC0  0008               	return
  4339  0EC1                     __end_of_ringbuf_pop:	
  4340                           
  4341                           	psect	text26
  4342  0E3D                     __ptext26:	
  4343 ;; *************** function _ringbuf_num *****************
  4344 ;; Defined at:
  4345 ;;		line 137 in file "My_header_16F.h"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  rb              1    wreg     PTR struct ringbuf
  4348 ;;		 -> tx_buf(4), 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  rb              1    1[COMMON] PTR struct ringbuf
  4351 ;;		 -> tx_buf(4), 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      unsigned char 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4361 ;;      Params:         0       0       0       0       0       0
  4362 ;;      Locals:         1       0       0       0       0       0
  4363 ;;      Temps:          1       0       0       0       0       0
  4364 ;;      Totals:         2       0       0       0       0       0
  4365 ;;Total ram usage:        2 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_isr
  4371 ;;		_interrupt_TXIF
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _ringbuf_num
  4377  0E3D                     _ringbuf_num:	
  4378                           
  4379                           ;incstack = 0
  4380                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  4381                           ;ringbuf_num@rb stored from wreg
  4382  0E3D  00F1               	movwf	ringbuf_num@rb
  4383                           
  4384                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  4385  0E3E  0871               	movf	ringbuf_num@rb,w
  4386  0E3F  3E02               	addlw	2
  4387  0E40  0086               	movwf	6
  4388  0E41  0187               	clrf	7
  4389  0E42  0871               	movf	ringbuf_num@rb,w
  4390  0E43  3E03               	addlw	3
  4391  0E44  0084               	movwf	4
  4392  0E45  0185               	clrf	5
  4393  0E46  0800               	movf	0,w
  4394  0E47  0201               	subwf	1,w
  4395  0E48  1C03               	skipc
  4396  0E49  2E56               	goto	i1l2342
  4397                           
  4398                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  4399  0E4A  0871               	movf	ringbuf_num@rb,w
  4400  0E4B  3E02               	addlw	2
  4401  0E4C  0086               	movwf	6
  4402  0E4D  0187               	clrf	7
  4403  0E4E  0871               	movf	ringbuf_num@rb,w
  4404  0E4F  3E03               	addlw	3
  4405  0E50  0084               	movwf	4
  4406  0E51  0185               	clrf	5
  4407  0E52  0300               	decf	0,w
  4408  0E53  3AFF               	xorlw	255
  4409  0E54  0701               	addwf	1,w
  4410                           
  4411                           ;My_header_16F.h: 140: } else {
  4412  0E55  0008               	return
  4413  0E56                     i1l2342:	
  4414                           
  4415                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  4416  0E56  0871               	movf	ringbuf_num@rb,w
  4417  0E57  3E02               	addlw	2
  4418  0E58  0086               	movwf	6
  4419  0E59  0187               	clrf	7
  4420  0E5A  0A71               	incf	ringbuf_num@rb,w
  4421  0E5B  0084               	movwf	4
  4422  0E5C  0185               	clrf	5
  4423  0E5D  0800               	movf	0,w
  4424  0E5E  00F0               	movwf	??_ringbuf_num
  4425  0E5F  0871               	movf	ringbuf_num@rb,w
  4426  0E60  3E03               	addlw	3
  4427  0E61  0084               	movwf	4
  4428  0E62  0185               	clrf	5
  4429  0E63  0300               	decf	0,w
  4430  0E64  3AFF               	xorlw	255
  4431  0E65  0770               	addwf	??_ringbuf_num,w
  4432  0E66  0701               	addwf	1,w
  4433  0E67  0008               	return
  4434  0E68                     __end_of_ringbuf_num:	
  4435                           
  4436                           	psect	text27
  4437  0674                     __ptext27:	
  4438 ;; *************** function _lchika *****************
  4439 ;; Defined at:
  4440 ;;		line 120 in file "PIC16F1827-ChargeStation4-02.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;		None
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  i               1    4[BANK0 ] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;		None               void
  4447 ;; Registers used:
  4448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4454 ;;      Params:         0       0       0       0       0       0
  4455 ;;      Locals:         0       1       0       0       0       0
  4456 ;;      Temps:          0       4       0       0       0       0
  4457 ;;      Totals:         0       5       0       0       0       0
  4458 ;;Total ram usage:        5 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    1
  4461 ;; This function calls:
  4462 ;;		___awdiv
  4463 ;;		___lwdiv
  4464 ;;		i1_LED
  4465 ;; This function is called by:
  4466 ;;		_isr
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           
  4471                           ;psect for function _lchika
  4472  0674                     _lchika:	
  4473                           
  4474                           ;PIC16F1827-ChargeStation4-02.c: 121: uint8_t i;
  4475                           ;PIC16F1827-ChargeStation4-02.c: 122: for (i = 0; i < 3; i++) {
  4476                           
  4477                           ;incstack = 0
  4478                           ; Regs used in _lchika: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4479  0674  0020               	movlb	0	; select bank0
  4480  0675  01BF               	clrf	lchika@i
  4481  0676                     L3:	
  4482  0676  3003               	movlw	3
  4483  0677  023F               	subwf	lchika@i,w
  4484  0678  1803               	btfsc	3,0
  4485  0679  0008               	return
  4486                           
  4487                           ;PIC16F1827-ChargeStation4-02.c: 123: cnt[i]++;
  4488  067A  3001               	movlw	1
  4489  067B  00BB               	movwf	??_lchika
  4490  067C  083F               	movf	lchika@i,w
  4491  067D  3EAF               	addlw	(low (_cnt| 0))& (0+255)
  4492  067E  0086               	movwf	6
  4493  067F  0187               	clrf	7
  4494  0680  083B               	movf	??_lchika,w
  4495  0681  0781               	addwf	1,f
  4496                           
  4497                           ;PIC16F1827-ChargeStation4-02.c: 125: if (cnt[i] % 2 == 1) {
  4498  0682  083F               	movf	lchika@i,w
  4499  0683  3EAF               	addlw	(low (_cnt| 0))& (0+255)
  4500  0684  0086               	movwf	6
  4501  0685  0187               	clrf	7
  4502  0686  1C01               	btfss	1,0
  4503  0687  2E8E               	goto	i1l2398
  4504                           
  4505                           ;PIC16F1827-ChargeStation4-02.c: 126: LED(i, 0);
  4506  0688  01F0               	clrf	i1LED@value
  4507  0689  083F               	movf	lchika@i,w
  4508  068A  318D  259C  3186   	fcall	i1_LED
  4509                           
  4510                           ;PIC16F1827-ChargeStation4-02.c: 127: } else {
  4511  068D  2EE3               	goto	i1l2412
  4512  068E                     i1l2398:	
  4513                           
  4514                           ;PIC16F1827-ChargeStation4-02.c: 128: if (cnt[i] / 2 <= v[i] / 100) {
  4515  068E  3064               	movlw	100
  4516  068F  00F6               	movwf	___lwdiv@divisor
  4517  0690  3000               	movlw	0
  4518  0691  00F7               	movwf	___lwdiv@divisor+1
  4519  0692  0020               	movlb	0	; select bank0
  4520  0693  353F               	lslf	lchika@i,w
  4521  0694  3E26               	addlw	(low (_v| 0))& (0+255)
  4522  0695  0086               	movwf	6
  4523  0696  0187               	clrf	7
  4524  0697  3F40               	moviw [0]fsr1
  4525  0698  00F8               	movwf	___lwdiv@dividend
  4526  0699  3F41               	moviw [1]fsr1
  4527  069A  00F9               	movwf	___lwdiv@dividend+1
  4528  069B  318F  274C  3186   	fcall	___lwdiv
  4529  069E  0876               	movf	?___lwdiv,w
  4530  069F  0020               	movlb	0	; select bank0
  4531  06A0  00BB               	movwf	??_lchika
  4532  06A1  0877               	movf	?___lwdiv+1,w
  4533  06A2  00BC               	movwf	??_lchika+1
  4534  06A3  3002               	movlw	2
  4535  06A4  00F0               	movwf	___awdiv@divisor
  4536  06A5  3000               	movlw	0
  4537  06A6  00F1               	movwf	___awdiv@divisor+1
  4538  06A7  083F               	movf	lchika@i,w
  4539  06A8  3EAF               	addlw	(low (_cnt| 0))& (0+255)
  4540  06A9  0086               	movwf	6
  4541  06AA  0187               	clrf	7
  4542  06AB  0801               	movf	1,w
  4543  06AC  00BD               	movwf	??_lchika+2
  4544  06AD  01BE               	clrf	??_lchika+3
  4545  06AE  083D               	movf	??_lchika+2,w
  4546  06AF  00F2               	movwf	___awdiv@dividend
  4547  06B0  083E               	movf	??_lchika+3,w
  4548  06B1  00F3               	movwf	___awdiv@dividend+1
  4549  06B2  3187  27A8  3186   	fcall	___awdiv
  4550  06B5  0871               	movf	?___awdiv+1,w
  4551  06B6  0020               	movlb	0	; select bank0
  4552  06B7  023C               	subwf	??_lchika+1,w
  4553  06B8  1D03               	skipz
  4554  06B9  2EBC               	goto	u244_25
  4555  06BA  0870               	movf	?___awdiv,w
  4556  06BB  023B               	subwf	??_lchika,w
  4557  06BC                     u244_25:	
  4558  06BC  1C03               	skipc
  4559  06BD  2EC8               	goto	i1l2404
  4560                           
  4561                           ;PIC16F1827-ChargeStation4-02.c: 129: LED(i, 1);
  4562  06BE  01F0               	clrf	i1LED@value
  4563  06BF  0AF0               	incf	i1LED@value,f
  4564  06C0  083F               	movf	lchika@i,w
  4565  06C1  318D  259C  3186   	fcall	i1_LED
  4566                           
  4567                           ;PIC16F1827-ChargeStation4-02.c: 130: cntf[i] = 0;
  4568  06C4  0020               	movlb	0	; select bank0
  4569  06C5  083F               	movf	lchika@i,w
  4570  06C6  3EB2               	addlw	(low (_cntf| 0))& (0+255)
  4571  06C7  2EE0               	goto	L2
  4572  06C8                     i1l2404:	
  4573                           ;PIC16F1827-ChargeStation4-02.c: 131: } else {
  4574                           
  4575                           
  4576                           ;PIC16F1827-ChargeStation4-02.c: 132: cntf[i]++;
  4577  06C8  3001               	movlw	1
  4578  06C9  00BB               	movwf	??_lchika
  4579  06CA  083F               	movf	lchika@i,w
  4580  06CB  3EB2               	addlw	(low (_cntf| 0))& (0+255)
  4581  06CC  0086               	movwf	6
  4582  06CD  0187               	clrf	7
  4583  06CE  083B               	movf	??_lchika,w
  4584  06CF  0781               	addwf	1,f
  4585                           
  4586                           ;PIC16F1827-ChargeStation4-02.c: 133: LED(i, 0);
  4587  06D0  01F0               	clrf	i1LED@value
  4588  06D1  083F               	movf	lchika@i,w
  4589  06D2  318D  259C  3186   	fcall	i1_LED
  4590                           
  4591                           ;PIC16F1827-ChargeStation4-02.c: 134: if (cntf[i] >= 2) {
  4592  06D5  0020               	movlb	0	; select bank0
  4593  06D6  083F               	movf	lchika@i,w
  4594  06D7  3EB2               	addlw	(low (_cntf| 0))& (0+255)
  4595  06D8  0086               	movwf	6
  4596  06D9  0187               	clrf	7
  4597  06DA  3002               	movlw	2
  4598  06DB  0201               	subwf	1,w
  4599  06DC  1C03               	skipc
  4600  06DD  2EE3               	goto	i1l2412
  4601                           
  4602                           ;PIC16F1827-ChargeStation4-02.c: 135: cnt[i] = 0;
  4603  06DE  083F               	movf	lchika@i,w
  4604  06DF  3EAF               	addlw	(low (_cnt| 0))& (0+255)
  4605  06E0                     L2:	
  4606  06E0  0086               	movwf	6
  4607  06E1  0187               	clrf	7
  4608  06E2  0181               	clrf	1
  4609  06E3                     i1l2412:	
  4610  06E3  3001               	movlw	1
  4611  06E4  0020               	movlb	0	; select bank0
  4612  06E5  00BB               	movwf	??_lchika
  4613  06E6  083B               	movf	??_lchika,w
  4614  06E7  07BF               	addwf	lchika@i,f
  4615  06E8  2E76               	goto	L3
  4616  06E9                     __end_of_lchika:	
  4617                           
  4618                           	psect	text28
  4619  0D9C                     __ptext28:	
  4620 ;; *************** function i1_LED *****************
  4621 ;; Defined at:
  4622 ;;		line 239 in file "PIC16F1827-ChargeStation4-02.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  b               1    wreg     unsigned char 
  4625 ;;  value           1    0[COMMON] unsigned char 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  b               1    1[COMMON] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;		None               void
  4630 ;; Registers used:
  4631 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4637 ;;      Params:         1       0       0       0       0       0
  4638 ;;      Locals:         1       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0
  4640 ;;      Totals:         2       0       0       0       0       0
  4641 ;;Total ram usage:        2 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_lchika
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function i1_LED
  4652  0D9C                     i1_LED:	
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in i1_LED: [wreg-fsr0h+status,2+status,0]
  4656                           ;i1LED@b stored from wreg
  4657  0D9C  00F1               	movwf	i1LED@b
  4658                           
  4659                           ;PIC16F1827-ChargeStation4-02.c: 240: switch (b) {
  4660  0D9D  2DB6               	goto	i1l2260
  4661  0D9E                     i1l374:	
  4662                           ;PIC16F1827-ChargeStation4-02.c: 241: case 0:
  4663                           
  4664                           
  4665                           ;PIC16F1827-ChargeStation4-02.c: 242: LATB5 = value;
  4666  0D9E  1C70               	btfss	i1LED@value,0
  4667  0D9F  2DA3               	goto	u216_20
  4668  0DA0  0022               	movlb	2	; select bank2
  4669  0DA1  168D               	bsf	13,5	;volatile
  4670  0DA2  0008               	return
  4671  0DA3                     u216_20:	
  4672  0DA3  0022               	movlb	2	; select bank2
  4673  0DA4  128D               	bcf	13,5	;volatile
  4674                           
  4675                           ;PIC16F1827-ChargeStation4-02.c: 243: break;
  4676  0DA5  0008               	return
  4677  0DA6                     i1l376:	
  4678                           ;PIC16F1827-ChargeStation4-02.c: 244: case 1:
  4679                           
  4680                           
  4681                           ;PIC16F1827-ChargeStation4-02.c: 245: LATA6 = value;
  4682  0DA6  1C70               	btfss	i1LED@value,0
  4683  0DA7  2DAB               	goto	u218_20
  4684  0DA8  0022               	movlb	2	; select bank2
  4685  0DA9  170C               	bsf	12,6	;volatile
  4686  0DAA  0008               	return
  4687  0DAB                     u218_20:	
  4688  0DAB  0022               	movlb	2	; select bank2
  4689  0DAC  130C               	bcf	12,6	;volatile
  4690                           
  4691                           ;PIC16F1827-ChargeStation4-02.c: 246: break;
  4692  0DAD  0008               	return
  4693  0DAE                     i1l377:	
  4694                           ;PIC16F1827-ChargeStation4-02.c: 247: case 2:
  4695                           
  4696                           
  4697                           ;PIC16F1827-ChargeStation4-02.c: 248: LATA7 = value;
  4698  0DAE  1C70               	btfss	i1LED@value,0
  4699  0DAF  2DB3               	goto	u220_20
  4700  0DB0  0022               	movlb	2	; select bank2
  4701  0DB1  178C               	bsf	12,7	;volatile
  4702  0DB2  0008               	return
  4703  0DB3                     u220_20:	
  4704  0DB3  0022               	movlb	2	; select bank2
  4705  0DB4  138C               	bcf	12,7	;volatile
  4706                           
  4707                           ;PIC16F1827-ChargeStation4-02.c: 252: }
  4708                           
  4709                           ;PIC16F1827-ChargeStation4-02.c: 251: break;
  4710                           
  4711                           ;PIC16F1827-ChargeStation4-02.c: 250: default:
  4712                           
  4713                           ;PIC16F1827-ChargeStation4-02.c: 249: break;
  4714  0DB5  0008               	return
  4715  0DB6                     i1l2260:	
  4716  0DB6  0871               	movf	i1LED@b,w
  4717                           
  4718                           ; Switch size 1, requested type "space"
  4719                           ; Number of cases is 3, Range of values is 0 to 2
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte           10     6 (average)
  4723                           ; direct_byte           12     6 (fixed)
  4724                           ; jumptable            260     6 (fixed)
  4725                           ;	Chosen strategy is simple_byte
  4726  0DB7  3A00               	xorlw	0	; case 0
  4727  0DB8  1903               	skipnz
  4728  0DB9  2D9E               	goto	i1l374
  4729  0DBA  3A01               	xorlw	1	; case 1
  4730  0DBB  1903               	skipnz
  4731  0DBC  2DA6               	goto	i1l376
  4732  0DBD  3A03               	xorlw	3	; case 2
  4733  0DBE  1903               	skipnz
  4734  0DBF  2DAE               	goto	i1l377
  4735  0DC0  2DC1               	goto	i1l379
  4736  0DC1                     i1l379:	
  4737  0DC1  0008               	return
  4738  0DC2                     __end_ofi1_LED:	
  4739                           
  4740                           	psect	text29
  4741  07A8                     __ptext29:	
  4742 ;; *************** function ___awdiv *****************
  4743 ;; Defined at:
  4744 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  divisor         2    0[COMMON] int 
  4747 ;;  dividend        2    2[COMMON] int 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  quotient        2    7[COMMON] int 
  4750 ;;  sign            1    6[COMMON] unsigned char 
  4751 ;;  counter         1    5[COMMON] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2    0[COMMON] int 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4761 ;;      Params:         4       0       0       0       0       0
  4762 ;;      Locals:         4       0       0       0       0       0
  4763 ;;      Temps:          1       0       0       0       0       0
  4764 ;;      Totals:         9       0       0       0       0       0
  4765 ;;Total ram usage:        9 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_lchika
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function ___awdiv
  4776  07A8                     ___awdiv:	
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4780  07A8  01F6               	clrf	___awdiv@sign
  4781  07A9  1FF1               	btfss	___awdiv@divisor+1,7
  4782  07AA  2FB2               	goto	i1l2168
  4783  07AB  09F0               	comf	___awdiv@divisor,f
  4784  07AC  09F1               	comf	___awdiv@divisor+1,f
  4785  07AD  0AF0               	incf	___awdiv@divisor,f
  4786  07AE  1903               	skipnz
  4787  07AF  0AF1               	incf	___awdiv@divisor+1,f
  4788  07B0  01F6               	clrf	___awdiv@sign
  4789  07B1  0AF6               	incf	___awdiv@sign,f
  4790  07B2                     i1l2168:	
  4791  07B2  1FF3               	btfss	___awdiv@dividend+1,7
  4792  07B3  2FBD               	goto	i1l2174
  4793  07B4  09F2               	comf	___awdiv@dividend,f
  4794  07B5  09F3               	comf	___awdiv@dividend+1,f
  4795  07B6  0AF2               	incf	___awdiv@dividend,f
  4796  07B7  1903               	skipnz
  4797  07B8  0AF3               	incf	___awdiv@dividend+1,f
  4798  07B9  3001               	movlw	1
  4799  07BA  00F4               	movwf	??___awdiv
  4800  07BB  0874               	movf	??___awdiv,w
  4801  07BC  06F6               	xorwf	___awdiv@sign,f
  4802  07BD                     i1l2174:	
  4803  07BD  01F7               	clrf	___awdiv@quotient
  4804  07BE  01F8               	clrf	___awdiv@quotient+1
  4805  07BF  0870               	movf	___awdiv@divisor,w
  4806  07C0  0471               	iorwf	___awdiv@divisor+1,w
  4807  07C1  1903               	btfsc	3,2
  4808  07C2  2FEC               	goto	i1l2196
  4809  07C3  01F5               	clrf	___awdiv@counter
  4810  07C4  0AF5               	incf	___awdiv@counter,f
  4811  07C5                     i1l2184:	
  4812  07C5  1BF1               	btfsc	___awdiv@divisor+1,7
  4813  07C6  2FD1               	goto	i1l2186
  4814  07C7  3001               	movlw	1
  4815  07C8                     u196_25:	
  4816  07C8  35F0               	lslf	___awdiv@divisor,f
  4817  07C9  0DF1               	rlf	___awdiv@divisor+1,f
  4818  07CA  0B89               	decfsz	9,f
  4819  07CB  2FC8               	goto	u196_25
  4820  07CC  3001               	movlw	1
  4821  07CD  00F4               	movwf	??___awdiv
  4822  07CE  0874               	movf	??___awdiv,w
  4823  07CF  07F5               	addwf	___awdiv@counter,f
  4824  07D0  2FC5               	goto	i1l2184
  4825  07D1                     i1l2186:	
  4826  07D1  3001               	movlw	1
  4827  07D2                     u198_25:	
  4828  07D2  35F7               	lslf	___awdiv@quotient,f
  4829  07D3  0DF8               	rlf	___awdiv@quotient+1,f
  4830  07D4  0B89               	decfsz	9,f
  4831  07D5  2FD2               	goto	u198_25
  4832  07D6  0871               	movf	___awdiv@divisor+1,w
  4833  07D7  0273               	subwf	___awdiv@dividend+1,w
  4834  07D8  1D03               	skipz
  4835  07D9  2FDC               	goto	u199_25
  4836  07DA  0870               	movf	___awdiv@divisor,w
  4837  07DB  0272               	subwf	___awdiv@dividend,w
  4838  07DC                     u199_25:	
  4839  07DC  1C03               	skipc
  4840  07DD  2FE3               	goto	i1l2192
  4841  07DE  0870               	movf	___awdiv@divisor,w
  4842  07DF  02F2               	subwf	___awdiv@dividend,f
  4843  07E0  0871               	movf	___awdiv@divisor+1,w
  4844  07E1  3BF3               	subwfb	___awdiv@dividend+1,f
  4845  07E2  1477               	bsf	___awdiv@quotient,0
  4846  07E3                     i1l2192:	
  4847  07E3  3001               	movlw	1
  4848  07E4                     u200_25:	
  4849  07E4  36F1               	lsrf	___awdiv@divisor+1,f
  4850  07E5  0CF0               	rrf	___awdiv@divisor,f
  4851  07E6  0B89               	decfsz	9,f
  4852  07E7  2FE4               	goto	u200_25
  4853  07E8  3001               	movlw	1
  4854  07E9  02F5               	subwf	___awdiv@counter,f
  4855  07EA  1D03               	btfss	3,2
  4856  07EB  2FD1               	goto	i1l2186
  4857  07EC                     i1l2196:	
  4858  07EC  0876               	movf	___awdiv@sign,w
  4859  07ED  1903               	btfsc	3,2
  4860  07EE  2FF4               	goto	i1l2200
  4861  07EF  09F7               	comf	___awdiv@quotient,f
  4862  07F0  09F8               	comf	___awdiv@quotient+1,f
  4863  07F1  0AF7               	incf	___awdiv@quotient,f
  4864  07F2  1903               	skipnz
  4865  07F3  0AF8               	incf	___awdiv@quotient+1,f
  4866  07F4                     i1l2200:	
  4867  07F4  0878               	movf	___awdiv@quotient+1,w
  4868  07F5  00F1               	movwf	?___awdiv+1
  4869  07F6  0877               	movf	___awdiv@quotient,w
  4870  07F7  00F0               	movwf	?___awdiv
  4871  07F8  0008               	return
  4872  07F9                     __end_of___awdiv:	
  4873                           
  4874                           	psect	text30
  4875  018C                     __ptext30:	
  4876 ;; *************** function _display *****************
  4877 ;; Defined at:
  4878 ;;		line 142 in file "PIC16F1827-ChargeStation4-02.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  i               1    wreg     unsigned char 
  4881 ;;  co              1   14[BANK0 ] unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  i               1   17[BANK0 ] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;		None               void
  4886 ;; Registers used:
  4887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4893 ;;      Params:         0       1       0       0       0       0
  4894 ;;      Locals:         0       1       0       0       0       0
  4895 ;;      Temps:          0       2       0       0       0       0
  4896 ;;      Totals:         0       4       0       0       0       0
  4897 ;;Total ram usage:        4 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    4
  4900 ;; This function calls:
  4901 ;;		_LCD_Putc
  4902 ;;		_LCD_Puts
  4903 ;;		_LCD_SetCursor
  4904 ;;		___aldiv
  4905 ;;		___almod
  4906 ;;		___lwdiv
  4907 ;;		___lwmod
  4908 ;;		i1_LCD_Clear
  4909 ;; This function is called by:
  4910 ;;		_isr
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function _display
  4916  018C                     _display:	
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4920                           ;display@i stored from wreg
  4921  018C  0020               	movlb	0	; select bank0
  4922  018D  00CC               	movwf	display@i
  4923                           
  4924                           ;PIC16F1827-ChargeStation4-02.c: 143: LCD_Clear();
  4925  018E  318B  237E  3181   	fcall	i1_LCD_Clear
  4926                           
  4927                           ;PIC16F1827-ChargeStation4-02.c: 144: LCD_SetCursor(0, 0);
  4928  0191  01F7               	clrf	LCD_SetCursor@row
  4929  0192  3000               	movlw	0
  4930  0193  318B  23BA  3181   	fcall	_LCD_SetCursor
  4931                           
  4932                           ;PIC16F1827-ChargeStation4-02.c: 145: switch (co) {
  4933  0196  2B62               	goto	i1l2476
  4934  0197                     i1l2420:	
  4935                           ;PIC16F1827-ChargeStation4-02.c: 146: case 0:
  4936                           
  4937                           
  4938                           ;PIC16F1827-ChargeStation4-02.c: 147: LCD_SetCursor(0, 0);
  4939  0197  01F7               	clrf	LCD_SetCursor@row
  4940  0198  3000               	movlw	0
  4941  0199  318B  23BA  3181   	fcall	_LCD_SetCursor
  4942                           
  4943                           ;PIC16F1827-ChargeStation4-02.c: 148: LCD_Puts("Charge");
  4944  019C  3009               	movlw	low (STR_1| (0+32768))
  4945  019D  00F4               	movwf	LCD_Puts@s
  4946  019E  3088               	movlw	high (STR_1| (0+32768))
  4947  019F  00F5               	movwf	LCD_Puts@s+1
  4948  01A0  318E  26EE  3181   	fcall	_LCD_Puts
  4949                           
  4950                           ;PIC16F1827-ChargeStation4-02.c: 149: LCD_SetCursor(0, 1);
  4951  01A3  01F7               	clrf	LCD_SetCursor@row
  4952  01A4  0AF7               	incf	LCD_SetCursor@row,f
  4953  01A5  3000               	movlw	0
  4954  01A6  318B  23BA  3181   	fcall	_LCD_SetCursor
  4955                           
  4956                           ;PIC16F1827-ChargeStation4-02.c: 150: LCD_Puts("Station");
  4957  01A9  3001               	movlw	low (STR_2| (0+32768))
  4958  01AA  00F4               	movwf	LCD_Puts@s
  4959  01AB  3088               	movlw	high (STR_2| (0+32768))
  4960  01AC  00F5               	movwf	LCD_Puts@s+1
  4961  01AD  318E  26EE         	fcall	_LCD_Puts
  4962                           
  4963                           ;PIC16F1827-ChargeStation4-02.c: 151: break;
  4964  01AF  0008               	return
  4965  01B0                     i1l2426:	
  4966                           ;PIC16F1827-ChargeStation4-02.c: 154: case 0:
  4967                           
  4968                           ;PIC16F1827-ChargeStation4-02.c: 153: switch (i) {
  4969                           
  4970                           ;PIC16F1827-ChargeStation4-02.c: 152: case 1:
  4971                           
  4972                           
  4973                           ;PIC16F1827-ChargeStation4-02.c: 155: LCD_Puts("Right");
  4974  01B0  3017               	movlw	low (STR_3| (0+32768))
  4975  01B1  00F4               	movwf	LCD_Puts@s
  4976  01B2  3088               	movlw	high (STR_3| (0+32768))
  4977  01B3  00F5               	movwf	LCD_Puts@s+1
  4978  01B4  318E  26EE  3181   	fcall	_LCD_Puts
  4979                           
  4980                           ;PIC16F1827-ChargeStation4-02.c: 156: break;
  4981  01B7  29D4               	goto	i1l2436
  4982  01B8                     i1l2428:	
  4983                           ;PIC16F1827-ChargeStation4-02.c: 157: case 1:
  4984                           
  4985                           
  4986                           ;PIC16F1827-ChargeStation4-02.c: 158: LCD_Puts("Center");
  4987  01B8  3010               	movlw	low (STR_4| (0+32768))
  4988  01B9  00F4               	movwf	LCD_Puts@s
  4989  01BA  3088               	movlw	high (STR_4| (0+32768))
  4990  01BB  00F5               	movwf	LCD_Puts@s+1
  4991  01BC  318E  26EE  3181   	fcall	_LCD_Puts
  4992                           
  4993                           ;PIC16F1827-ChargeStation4-02.c: 159: break;
  4994  01BF  29D4               	goto	i1l2436
  4995  01C0                     i1l2430:	
  4996                           ;PIC16F1827-ChargeStation4-02.c: 160: case 2:
  4997                           
  4998                           
  4999                           ;PIC16F1827-ChargeStation4-02.c: 161: LCD_Puts("Left");
  5000  01C0  301D               	movlw	low (STR_5| (0+32768))
  5001  01C1  00F4               	movwf	LCD_Puts@s
  5002  01C2  3088               	movlw	high (STR_5| (0+32768))
  5003  01C3  00F5               	movwf	LCD_Puts@s+1
  5004  01C4  318E  26EE  3181   	fcall	_LCD_Puts
  5005                           
  5006                           ;PIC16F1827-ChargeStation4-02.c: 163: }
  5007                           
  5008                           ;PIC16F1827-ChargeStation4-02.c: 162: break;
  5009  01C7  29D4               	goto	i1l2436
  5010  01C8                     i1l2434:	
  5011  01C8  0020               	movlb	0	; select bank0
  5012  01C9  084C               	movf	display@i,w
  5013                           
  5014                           ; Switch size 1, requested type "space"
  5015                           ; Number of cases is 3, Range of values is 0 to 2
  5016                           ; switch strategies available:
  5017                           ; Name         Instructions Cycles
  5018                           ; simple_byte           10     6 (average)
  5019                           ; direct_byte           12     6 (fixed)
  5020                           ; jumptable            260     6 (fixed)
  5021                           ;	Chosen strategy is simple_byte
  5022  01CA  3A00               	xorlw	0	; case 0
  5023  01CB  1903               	skipnz
  5024  01CC  29B0               	goto	i1l2426
  5025  01CD  3A01               	xorlw	1	; case 1
  5026  01CE  1903               	skipnz
  5027  01CF  29B8               	goto	i1l2428
  5028  01D0  3A03               	xorlw	3	; case 2
  5029  01D1  1903               	skipnz
  5030  01D2  29C0               	goto	i1l2430
  5031  01D3  29D4               	goto	i1l2436
  5032  01D4                     i1l2436:	
  5033                           
  5034                           ;PIC16F1827-ChargeStation4-02.c: 164: LCD_SetCursor(0, 1);
  5035  01D4  01F7               	clrf	LCD_SetCursor@row
  5036  01D5  0AF7               	incf	LCD_SetCursor@row,f
  5037  01D6  3000               	movlw	0
  5038  01D7  318B  23BA  3181   	fcall	_LCD_SetCursor
  5039                           
  5040                           ;PIC16F1827-ChargeStation4-02.c: 165: LCD_Putc((v[i] % 10000) / 1000 + '0');
  5041  01DA  30E8               	movlw	232
  5042  01DB  00F6               	movwf	___lwdiv@divisor
  5043  01DC  3003               	movlw	3
  5044  01DD  00F7               	movwf	___lwdiv@divisor+1
  5045  01DE  0020               	movlb	0	; select bank0
  5046  01DF  354C               	lslf	display@i,w
  5047  01E0  3E26               	addlw	(low (_v| 0))& (0+255)
  5048  01E1  0086               	movwf	6
  5049  01E2  0187               	clrf	7
  5050  01E3  3F40               	moviw [0]fsr1
  5051  01E4  00F2               	movwf	___lwmod@dividend
  5052  01E5  3F41               	moviw [1]fsr1
  5053  01E6  00F3               	movwf	___lwmod@dividend+1
  5054  01E7  3010               	movlw	16
  5055  01E8  00F0               	movwf	___lwmod@divisor
  5056  01E9  3027               	movlw	39
  5057  01EA  00F1               	movwf	___lwmod@divisor+1
  5058  01EB  318E  2668  3181   	fcall	___lwmod
  5059  01EE  0871               	movf	?___lwmod+1,w
  5060  01EF  00F9               	movwf	___lwdiv@dividend+1
  5061  01F0  0870               	movf	?___lwmod,w
  5062  01F1  00F8               	movwf	___lwdiv@dividend
  5063  01F2  318F  274C  3181   	fcall	___lwdiv
  5064  01F5  0876               	movf	?___lwdiv,w
  5065  01F6  3E30               	addlw	48
  5066  01F7  318C  24A1  3181   	fcall	_LCD_Putc
  5067                           
  5068                           ;PIC16F1827-ChargeStation4-02.c: 166: LCD_Putc('.');
  5069  01FA  302E               	movlw	46
  5070  01FB  318C  24A1  3181   	fcall	_LCD_Putc
  5071                           
  5072                           ;PIC16F1827-ChargeStation4-02.c: 167: LCD_Putc((v[i] % 1000) / 100 + '0');
  5073  01FE  3064               	movlw	100
  5074  01FF  00F6               	movwf	___lwdiv@divisor
  5075  0200  3000               	movlw	0
  5076  0201  00F7               	movwf	___lwdiv@divisor+1
  5077  0202  0020               	movlb	0	; select bank0
  5078  0203  354C               	lslf	display@i,w
  5079  0204  3E26               	addlw	(low (_v| 0))& (0+255)
  5080  0205  0086               	movwf	6
  5081  0206  0187               	clrf	7
  5082  0207  3F40               	moviw [0]fsr1
  5083  0208  00F2               	movwf	___lwmod@dividend
  5084  0209  3F41               	moviw [1]fsr1
  5085  020A  00F3               	movwf	___lwmod@dividend+1
  5086  020B  30E8               	movlw	232
  5087  020C  00F0               	movwf	___lwmod@divisor
  5088  020D  3003               	movlw	3
  5089  020E  00F1               	movwf	___lwmod@divisor+1
  5090  020F  318E  2668  3181   	fcall	___lwmod
  5091  0212  0871               	movf	?___lwmod+1,w
  5092  0213  00F9               	movwf	___lwdiv@dividend+1
  5093  0214  0870               	movf	?___lwmod,w
  5094  0215  00F8               	movwf	___lwdiv@dividend
  5095  0216  318F  274C  3181   	fcall	___lwdiv
  5096  0219  0876               	movf	?___lwdiv,w
  5097  021A  3E30               	addlw	48
  5098  021B  318C  24A1  3181   	fcall	_LCD_Putc
  5099                           
  5100                           ;PIC16F1827-ChargeStation4-02.c: 168: LCD_Putc((v[i] % 100) / 10 + '0');
  5101  021E  300A               	movlw	10
  5102  021F  00F6               	movwf	___lwdiv@divisor
  5103  0220  3000               	movlw	0
  5104  0221  00F7               	movwf	___lwdiv@divisor+1
  5105  0222  0020               	movlb	0	; select bank0
  5106  0223  354C               	lslf	display@i,w
  5107  0224  3E26               	addlw	(low (_v| 0))& (0+255)
  5108  0225  0086               	movwf	6
  5109  0226  0187               	clrf	7
  5110  0227  3F40               	moviw [0]fsr1
  5111  0228  00F2               	movwf	___lwmod@dividend
  5112  0229  3F41               	moviw [1]fsr1
  5113  022A  00F3               	movwf	___lwmod@dividend+1
  5114  022B  3064               	movlw	100
  5115  022C  00F0               	movwf	___lwmod@divisor
  5116  022D  3000               	movlw	0
  5117  022E  00F1               	movwf	___lwmod@divisor+1
  5118  022F  318E  2668  3181   	fcall	___lwmod
  5119  0232  0871               	movf	?___lwmod+1,w
  5120  0233  00F9               	movwf	___lwdiv@dividend+1
  5121  0234  0870               	movf	?___lwmod,w
  5122  0235  00F8               	movwf	___lwdiv@dividend
  5123  0236  318F  274C  3181   	fcall	___lwdiv
  5124  0239  0876               	movf	?___lwdiv,w
  5125  023A  3E30               	addlw	48
  5126  023B  318C  24A1  3181   	fcall	_LCD_Putc
  5127                           
  5128                           ;PIC16F1827-ChargeStation4-02.c: 169: LCD_Putc((v[i] % 10) / 1 + '0');
  5129  023E  300A               	movlw	10
  5130  023F  00F0               	movwf	___lwmod@divisor
  5131  0240  3000               	movlw	0
  5132  0241  00F1               	movwf	___lwmod@divisor+1
  5133  0242  0020               	movlb	0	; select bank0
  5134  0243  354C               	lslf	display@i,w
  5135  0244  3E26               	addlw	(low (_v| 0))& (0+255)
  5136  0245  0086               	movwf	6
  5137  0246  0187               	clrf	7
  5138  0247  3F40               	moviw [0]fsr1
  5139  0248  00F2               	movwf	___lwmod@dividend
  5140  0249  3F41               	moviw [1]fsr1
  5141  024A  00F3               	movwf	___lwmod@dividend+1
  5142  024B  318E  2668  3181   	fcall	___lwmod
  5143  024E  0870               	movf	?___lwmod,w
  5144  024F  3E30               	addlw	48
  5145  0250  318C  24A1  3181   	fcall	_LCD_Putc
  5146                           
  5147                           ;PIC16F1827-ChargeStation4-02.c: 170: LCD_Putc('A');
  5148  0253  3041               	movlw	65
  5149  0254  318C  24A1         	fcall	_LCD_Putc
  5150                           
  5151                           ;PIC16F1827-ChargeStation4-02.c: 171: break;
  5152  0256  0008               	return
  5153  0257                     i1l2446:	
  5154                           ;PIC16F1827-ChargeStation4-02.c: 174: case 0:
  5155                           
  5156                           ;PIC16F1827-ChargeStation4-02.c: 173: switch (i) {
  5157                           
  5158                           ;PIC16F1827-ChargeStation4-02.c: 172: case 2:
  5159                           
  5160                           
  5161                           ;PIC16F1827-ChargeStation4-02.c: 175: LCD_Puts("Right");
  5162  0257  3017               	movlw	low (STR_3| (0+32768))
  5163  0258  00F4               	movwf	LCD_Puts@s
  5164  0259  3088               	movlw	high (STR_3| (0+32768))
  5165  025A  00F5               	movwf	LCD_Puts@s+1
  5166  025B  318E  26EE  3181   	fcall	_LCD_Puts
  5167                           
  5168                           ;PIC16F1827-ChargeStation4-02.c: 176: break;
  5169  025E  2A7B               	goto	i1l2456
  5170  025F                     i1l2448:	
  5171                           ;PIC16F1827-ChargeStation4-02.c: 177: case 1:
  5172                           
  5173                           
  5174                           ;PIC16F1827-ChargeStation4-02.c: 178: LCD_Puts("Center");
  5175  025F  3010               	movlw	low (STR_4| (0+32768))
  5176  0260  00F4               	movwf	LCD_Puts@s
  5177  0261  3088               	movlw	high (STR_4| (0+32768))
  5178  0262  00F5               	movwf	LCD_Puts@s+1
  5179  0263  318E  26EE  3181   	fcall	_LCD_Puts
  5180                           
  5181                           ;PIC16F1827-ChargeStation4-02.c: 179: break;
  5182  0266  2A7B               	goto	i1l2456
  5183  0267                     i1l2450:	
  5184                           ;PIC16F1827-ChargeStation4-02.c: 180: case 2:
  5185                           
  5186                           
  5187                           ;PIC16F1827-ChargeStation4-02.c: 181: LCD_Puts("Left");
  5188  0267  301D               	movlw	low (STR_5| (0+32768))
  5189  0268  00F4               	movwf	LCD_Puts@s
  5190  0269  3088               	movlw	high (STR_5| (0+32768))
  5191  026A  00F5               	movwf	LCD_Puts@s+1
  5192  026B  318E  26EE  3181   	fcall	_LCD_Puts
  5193                           
  5194                           ;PIC16F1827-ChargeStation4-02.c: 183: }
  5195                           
  5196                           ;PIC16F1827-ChargeStation4-02.c: 182: break;
  5197  026E  2A7B               	goto	i1l2456
  5198  026F                     i1l2454:	
  5199  026F  0020               	movlb	0	; select bank0
  5200  0270  084C               	movf	display@i,w
  5201                           
  5202                           ; Switch size 1, requested type "space"
  5203                           ; Number of cases is 3, Range of values is 0 to 2
  5204                           ; switch strategies available:
  5205                           ; Name         Instructions Cycles
  5206                           ; simple_byte           10     6 (average)
  5207                           ; direct_byte           12     6 (fixed)
  5208                           ; jumptable            260     6 (fixed)
  5209                           ;	Chosen strategy is simple_byte
  5210  0271  3A00               	xorlw	0	; case 0
  5211  0272  1903               	skipnz
  5212  0273  2A57               	goto	i1l2446
  5213  0274  3A01               	xorlw	1	; case 1
  5214  0275  1903               	skipnz
  5215  0276  2A5F               	goto	i1l2448
  5216  0277  3A03               	xorlw	3	; case 2
  5217  0278  1903               	skipnz
  5218  0279  2A67               	goto	i1l2450
  5219  027A  2A7B               	goto	i1l2456
  5220  027B                     i1l2456:	
  5221                           
  5222                           ;PIC16F1827-ChargeStation4-02.c: 184: LCD_SetCursor(0, 1);
  5223  027B  01F7               	clrf	LCD_SetCursor@row
  5224  027C  0AF7               	incf	LCD_SetCursor@row,f
  5225  027D  3000               	movlw	0
  5226  027E  318B  23BA  3181   	fcall	_LCD_SetCursor
  5227                           
  5228                           ;PIC16F1827-ChargeStation4-02.c: 185: LCD_Putc((s[i] % 100000) / 10000 + '0');
  5229  0281  3000               	movlw	0
  5230  0282  0020               	movlb	0	; select bank0
  5231  0283  00BE               	movwf	___aldiv@divisor+3
  5232  0284  3000               	movlw	0
  5233  0285  00BD               	movwf	___aldiv@divisor+2
  5234  0286  3027               	movlw	39
  5235  0287  00BC               	movwf	___aldiv@divisor+1
  5236  0288  3010               	movlw	16
  5237  0289  00BB               	movwf	___aldiv@divisor
  5238  028A  354C               	lslf	display@i,w
  5239  028B  3E20               	addlw	(low (_s| 0))& (0+255)
  5240  028C  0086               	movwf	6
  5241  028D  0187               	clrf	7
  5242  028E  3F40               	moviw [0]fsr1
  5243  028F  00CA               	movwf	??_display
  5244  0290  3F41               	moviw [1]fsr1
  5245  0291  00CB               	movwf	??_display+1
  5246  0292  084A               	movf	??_display,w
  5247  0293  00F4               	movwf	___almod@dividend
  5248  0294  084B               	movf	??_display+1,w
  5249  0295  00F5               	movwf	___almod@dividend+1
  5250  0296  01F6               	clrf	___almod@dividend+2
  5251  0297  01F7               	clrf	___almod@dividend+3
  5252  0298  3000               	movlw	0
  5253  0299  00F3               	movwf	___almod@divisor+3
  5254  029A  3001               	movlw	1
  5255  029B  00F2               	movwf	___almod@divisor+2
  5256  029C  3086               	movlw	134
  5257  029D  00F1               	movwf	___almod@divisor+1
  5258  029E  30A0               	movlw	160
  5259  029F  00F0               	movwf	___almod@divisor
  5260  02A0  3186  26E9  3181   	fcall	___almod
  5261  02A3  0873               	movf	?___almod+3,w
  5262  02A4  0020               	movlb	0	; select bank0
  5263  02A5  00C2               	movwf	___aldiv@dividend+3
  5264  02A6  0872               	movf	?___almod+2,w
  5265  02A7  00C1               	movwf	___aldiv@dividend+2
  5266  02A8  0871               	movf	?___almod+1,w
  5267  02A9  00C0               	movwf	___aldiv@dividend+1
  5268  02AA  0870               	movf	?___almod,w
  5269  02AB  00BF               	movwf	___aldiv@dividend
  5270  02AC  3185  25F2  3181   	fcall	___aldiv
  5271  02AF  0020               	movlb	0	; select bank0
  5272  02B0  083B               	movf	?___aldiv,w
  5273  02B1  3E30               	addlw	48
  5274  02B2  318C  24A1  3181   	fcall	_LCD_Putc
  5275                           
  5276                           ;PIC16F1827-ChargeStation4-02.c: 186: LCD_Putc((s[i] % 10000) / 1000 + '0');
  5277  02B5  30E8               	movlw	232
  5278  02B6  00F6               	movwf	___lwdiv@divisor
  5279  02B7  3003               	movlw	3
  5280  02B8  00F7               	movwf	___lwdiv@divisor+1
  5281  02B9  0020               	movlb	0	; select bank0
  5282  02BA  354C               	lslf	display@i,w
  5283  02BB  3E20               	addlw	(low (_s| 0))& (0+255)
  5284  02BC  0086               	movwf	6
  5285  02BD  0187               	clrf	7
  5286  02BE  3F40               	moviw [0]fsr1
  5287  02BF  00F2               	movwf	___lwmod@dividend
  5288  02C0  3F41               	moviw [1]fsr1
  5289  02C1  00F3               	movwf	___lwmod@dividend+1
  5290  02C2  3010               	movlw	16
  5291  02C3  00F0               	movwf	___lwmod@divisor
  5292  02C4  3027               	movlw	39
  5293  02C5  00F1               	movwf	___lwmod@divisor+1
  5294  02C6  318E  2668  3181   	fcall	___lwmod
  5295  02C9  0871               	movf	?___lwmod+1,w
  5296  02CA  00F9               	movwf	___lwdiv@dividend+1
  5297  02CB  0870               	movf	?___lwmod,w
  5298  02CC  00F8               	movwf	___lwdiv@dividend
  5299  02CD  318F  274C  3181   	fcall	___lwdiv
  5300  02D0  0876               	movf	?___lwdiv,w
  5301  02D1  3E30               	addlw	48
  5302  02D2  318C  24A1  3181   	fcall	_LCD_Putc
  5303                           
  5304                           ;PIC16F1827-ChargeStation4-02.c: 187: LCD_Putc((s[i] % 1000) / 100 + '0');
  5305  02D5  3064               	movlw	100
  5306  02D6  00F6               	movwf	___lwdiv@divisor
  5307  02D7  3000               	movlw	0
  5308  02D8  00F7               	movwf	___lwdiv@divisor+1
  5309  02D9  0020               	movlb	0	; select bank0
  5310  02DA  354C               	lslf	display@i,w
  5311  02DB  3E20               	addlw	(low (_s| 0))& (0+255)
  5312  02DC  0086               	movwf	6
  5313  02DD  0187               	clrf	7
  5314  02DE  3F40               	moviw [0]fsr1
  5315  02DF  00F2               	movwf	___lwmod@dividend
  5316  02E0  3F41               	moviw [1]fsr1
  5317  02E1  00F3               	movwf	___lwmod@dividend+1
  5318  02E2  30E8               	movlw	232
  5319  02E3  00F0               	movwf	___lwmod@divisor
  5320  02E4  3003               	movlw	3
  5321  02E5  00F1               	movwf	___lwmod@divisor+1
  5322  02E6  318E  2668  3181   	fcall	___lwmod
  5323  02E9  0871               	movf	?___lwmod+1,w
  5324  02EA  00F9               	movwf	___lwdiv@dividend+1
  5325  02EB  0870               	movf	?___lwmod,w
  5326  02EC  00F8               	movwf	___lwdiv@dividend
  5327  02ED  318F  274C  3181   	fcall	___lwdiv
  5328  02F0  0876               	movf	?___lwdiv,w
  5329  02F1  3E30               	addlw	48
  5330  02F2  318C  24A1  3181   	fcall	_LCD_Putc
  5331                           
  5332                           ;PIC16F1827-ChargeStation4-02.c: 188: LCD_Putc((s[i] % 100) / 10 + '0');
  5333  02F5  300A               	movlw	10
  5334  02F6  00F6               	movwf	___lwdiv@divisor
  5335  02F7  3000               	movlw	0
  5336  02F8  00F7               	movwf	___lwdiv@divisor+1
  5337  02F9  0020               	movlb	0	; select bank0
  5338  02FA  354C               	lslf	display@i,w
  5339  02FB  3E20               	addlw	(low (_s| 0))& (0+255)
  5340  02FC  0086               	movwf	6
  5341  02FD  0187               	clrf	7
  5342  02FE  3F40               	moviw [0]fsr1
  5343  02FF  00F2               	movwf	___lwmod@dividend
  5344  0300  3F41               	moviw [1]fsr1
  5345  0301  00F3               	movwf	___lwmod@dividend+1
  5346  0302  3064               	movlw	100
  5347  0303  00F0               	movwf	___lwmod@divisor
  5348  0304  3000               	movlw	0
  5349  0305  00F1               	movwf	___lwmod@divisor+1
  5350  0306  318E  2668  3181   	fcall	___lwmod
  5351  0309  0871               	movf	?___lwmod+1,w
  5352  030A  00F9               	movwf	___lwdiv@dividend+1
  5353  030B  0870               	movf	?___lwmod,w
  5354  030C  00F8               	movwf	___lwdiv@dividend
  5355  030D  318F  274C  3181   	fcall	___lwdiv
  5356  0310  0876               	movf	?___lwdiv,w
  5357  0311  3E30               	addlw	48
  5358  0312  318C  24A1  3181   	fcall	_LCD_Putc
  5359                           
  5360                           ;PIC16F1827-ChargeStation4-02.c: 189: LCD_Putc((s[i] % 10) / 1 + '0');
  5361  0315  300A               	movlw	10
  5362  0316  00F0               	movwf	___lwmod@divisor
  5363  0317  3000               	movlw	0
  5364  0318  00F1               	movwf	___lwmod@divisor+1
  5365  0319  0020               	movlb	0	; select bank0
  5366  031A  354C               	lslf	display@i,w
  5367  031B  3E20               	addlw	(low (_s| 0))& (0+255)
  5368  031C  0086               	movwf	6
  5369  031D  0187               	clrf	7
  5370  031E  3F40               	moviw [0]fsr1
  5371  031F  00F2               	movwf	___lwmod@dividend
  5372  0320  3F41               	moviw [1]fsr1
  5373  0321  00F3               	movwf	___lwmod@dividend+1
  5374  0322  318E  2668  3181   	fcall	___lwmod
  5375  0325  0870               	movf	?___lwmod,w
  5376  0326  3E30               	addlw	48
  5377  0327  318C  24A1  3181   	fcall	_LCD_Putc
  5378                           
  5379                           ;PIC16F1827-ChargeStation4-02.c: 190: LCD_Puts("mAh");
  5380  032A  3022               	movlw	low (STR_9| (0+32768))
  5381  032B  00F4               	movwf	LCD_Puts@s
  5382  032C  3088               	movlw	high (STR_9| (0+32768))
  5383  032D  00F5               	movwf	LCD_Puts@s+1
  5384  032E  318E  26EE         	fcall	_LCD_Puts
  5385                           
  5386                           ;PIC16F1827-ChargeStation4-02.c: 191: break;
  5387  0330  0008               	return
  5388  0331                     i1l2460:	
  5389                           ;PIC16F1827-ChargeStation4-02.c: 194: case 0:
  5390                           
  5391                           ;PIC16F1827-ChargeStation4-02.c: 193: switch (i) {
  5392                           
  5393                           ;PIC16F1827-ChargeStation4-02.c: 192: case 3:
  5394                           
  5395                           
  5396                           ;PIC16F1827-ChargeStation4-02.c: 195: LCD_Puts("Right");
  5397  0331  3017               	movlw	low (STR_3| (0+32768))
  5398  0332  00F4               	movwf	LCD_Puts@s
  5399  0333  3088               	movlw	high (STR_3| (0+32768))
  5400  0334  00F5               	movwf	LCD_Puts@s+1
  5401  0335  318E  26EE  3181   	fcall	_LCD_Puts
  5402                           
  5403                           ;PIC16F1827-ChargeStation4-02.c: 196: break;
  5404  0338  2B55               	goto	i1l2470
  5405  0339                     i1l2462:	
  5406                           ;PIC16F1827-ChargeStation4-02.c: 197: case 1:
  5407                           
  5408                           
  5409                           ;PIC16F1827-ChargeStation4-02.c: 198: LCD_Puts("Center");
  5410  0339  3010               	movlw	low (STR_4| (0+32768))
  5411  033A  00F4               	movwf	LCD_Puts@s
  5412  033B  3088               	movlw	high (STR_4| (0+32768))
  5413  033C  00F5               	movwf	LCD_Puts@s+1
  5414  033D  318E  26EE  3181   	fcall	_LCD_Puts
  5415                           
  5416                           ;PIC16F1827-ChargeStation4-02.c: 199: break;
  5417  0340  2B55               	goto	i1l2470
  5418  0341                     i1l2464:	
  5419                           ;PIC16F1827-ChargeStation4-02.c: 200: case 2:
  5420                           
  5421                           
  5422                           ;PIC16F1827-ChargeStation4-02.c: 201: LCD_Puts("Left");
  5423  0341  301D               	movlw	low (STR_5| (0+32768))
  5424  0342  00F4               	movwf	LCD_Puts@s
  5425  0343  3088               	movlw	high (STR_5| (0+32768))
  5426  0344  00F5               	movwf	LCD_Puts@s+1
  5427  0345  318E  26EE  3181   	fcall	_LCD_Puts
  5428                           
  5429                           ;PIC16F1827-ChargeStation4-02.c: 203: }
  5430                           
  5431                           ;PIC16F1827-ChargeStation4-02.c: 202: break;
  5432  0348  2B55               	goto	i1l2470
  5433  0349                     i1l2468:	
  5434  0349  0020               	movlb	0	; select bank0
  5435  034A  084C               	movf	display@i,w
  5436                           
  5437                           ; Switch size 1, requested type "space"
  5438                           ; Number of cases is 3, Range of values is 0 to 2
  5439                           ; switch strategies available:
  5440                           ; Name         Instructions Cycles
  5441                           ; simple_byte           10     6 (average)
  5442                           ; direct_byte           12     6 (fixed)
  5443                           ; jumptable            260     6 (fixed)
  5444                           ;	Chosen strategy is simple_byte
  5445  034B  3A00               	xorlw	0	; case 0
  5446  034C  1903               	skipnz
  5447  034D  2B31               	goto	i1l2460
  5448  034E  3A01               	xorlw	1	; case 1
  5449  034F  1903               	skipnz
  5450  0350  2B39               	goto	i1l2462
  5451  0351  3A03               	xorlw	3	; case 2
  5452  0352  1903               	skipnz
  5453  0353  2B41               	goto	i1l2464
  5454  0354  2B55               	goto	i1l2470
  5455  0355                     i1l2470:	
  5456                           
  5457                           ;PIC16F1827-ChargeStation4-02.c: 204: LCD_SetCursor(0, 1);
  5458  0355  01F7               	clrf	LCD_SetCursor@row
  5459  0356  0AF7               	incf	LCD_SetCursor@row,f
  5460  0357  3000               	movlw	0
  5461  0358  318B  23BA  3181   	fcall	_LCD_SetCursor
  5462                           
  5463                           ;PIC16F1827-ChargeStation4-02.c: 205: LCD_Puts("Reseted");
  5464  035B  30F9               	movlw	low (STR_13| (0+32768))
  5465  035C  00F4               	movwf	LCD_Puts@s
  5466  035D  3087               	movlw	high (STR_13| (0+32768))
  5467  035E  00F5               	movwf	LCD_Puts@s+1
  5468  035F  318E  26EE         	fcall	_LCD_Puts
  5469                           
  5470                           ;PIC16F1827-ChargeStation4-02.c: 208: }
  5471                           
  5472                           ;PIC16F1827-ChargeStation4-02.c: 206: break;
  5473  0361  0008               	return
  5474  0362                     i1l2476:	
  5475  0362  0020               	movlb	0	; select bank0
  5476  0363  0849               	movf	display@co,w
  5477                           
  5478                           ; Switch size 1, requested type "space"
  5479                           ; Number of cases is 4, Range of values is 0 to 3
  5480                           ; switch strategies available:
  5481                           ; Name         Instructions Cycles
  5482                           ; simple_byte           13     7 (average)
  5483                           ; direct_byte           14     6 (fixed)
  5484                           ; jumptable            260     6 (fixed)
  5485                           ;	Chosen strategy is simple_byte
  5486  0364  3A00               	xorlw	0	; case 0
  5487  0365  1903               	skipnz
  5488  0366  2997               	goto	i1l2420
  5489  0367  3A01               	xorlw	1	; case 1
  5490  0368  1903               	skipnz
  5491  0369  29C8               	goto	i1l2434
  5492  036A  3A03               	xorlw	3	; case 2
  5493  036B  1903               	skipnz
  5494  036C  2A6F               	goto	i1l2454
  5495  036D  3A01               	xorlw	1	; case 3
  5496  036E  1903               	skipnz
  5497  036F  2B49               	goto	i1l2468
  5498  0370  2B71               	goto	i1l355
  5499  0371                     i1l355:	
  5500  0371  0008               	return
  5501  0372                     __end_of_display:	
  5502                           
  5503                           	psect	text31
  5504  0B7E                     __ptext31:	
  5505 ;; *************** function i1_LCD_Clear *****************
  5506 ;; Defined at:
  5507 ;;		line 280 in file "My_header_16F.h"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;		None               void
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, pclath, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5521 ;;      Params:         0       0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0
  5523 ;;      Temps:          2       0       0       0       0       0
  5524 ;;      Totals:         2       0       0       0       0       0
  5525 ;;Total ram usage:        2 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    3
  5528 ;; This function calls:
  5529 ;;		i1_LCD_Command
  5530 ;; This function is called by:
  5531 ;;		_display
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           
  5536                           ;psect for function i1_LCD_Clear
  5537  0B7E                     i1_LCD_Clear:	
  5538                           
  5539                           ;My_header_16F.h: 281: LCD_Command(0x01);
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5543  0B7E  3001               	movlw	1
  5544  0B7F  318C  24BD  318B   	fcall	i1_LCD_Command
  5545                           
  5546                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  5547  0B82  300C               	movlw	12
  5548  0B83  00F8               	movwf	??i1_LCD_Clear+1
  5549  0B84  306C               	movlw	108
  5550  0B85  00F7               	movwf	??i1_LCD_Clear
  5551  0B86                     u395_27:	
  5552  0B86  0BF7               	decfsz	??i1_LCD_Clear,f
  5553  0B87  2B86               	goto	u395_27
  5554  0B88  0BF8               	decfsz	??i1_LCD_Clear+1,f
  5555  0B89  2B86               	goto	u395_27
  5556  0B8A  0000               	nop
  5557  0B8B  0008               	return
  5558  0B8C                     __end_ofi1_LCD_Clear:	
  5559                           
  5560                           	psect	text32
  5561  0E68                     __ptext32:	
  5562 ;; *************** function ___lwmod *****************
  5563 ;; Defined at:
  5564 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  divisor         2    0[COMMON] unsigned int 
  5567 ;;  dividend        2    2[COMMON] unsigned int 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  counter         1    5[COMMON] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  2    0[COMMON] unsigned int 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5579 ;;      Params:         4       0       0       0       0       0
  5580 ;;      Locals:         1       0       0       0       0       0
  5581 ;;      Temps:          1       0       0       0       0       0
  5582 ;;      Totals:         6       0       0       0       0       0
  5583 ;;Total ram usage:        6 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_display
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           
  5593                           ;psect for function ___lwmod
  5594  0E68                     ___lwmod:	
  5595                           
  5596                           ;incstack = 0
  5597                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5598  0E68  0870               	movf	___lwmod@divisor,w
  5599  0E69  0471               	iorwf	___lwmod@divisor+1,w
  5600  0E6A  1903               	btfsc	3,2
  5601  0E6B  2E8F               	goto	i1l2248
  5602  0E6C  01F5               	clrf	___lwmod@counter
  5603  0E6D  0AF5               	incf	___lwmod@counter,f
  5604  0E6E                     i1l2238:	
  5605  0E6E  1BF1               	btfsc	___lwmod@divisor+1,7
  5606  0E6F  2E7A               	goto	i1l2240
  5607  0E70  3001               	movlw	1
  5608  0E71                     u211_25:	
  5609  0E71  35F0               	lslf	___lwmod@divisor,f
  5610  0E72  0DF1               	rlf	___lwmod@divisor+1,f
  5611  0E73  0B89               	decfsz	9,f
  5612  0E74  2E71               	goto	u211_25
  5613  0E75  3001               	movlw	1
  5614  0E76  00F4               	movwf	??___lwmod
  5615  0E77  0874               	movf	??___lwmod,w
  5616  0E78  07F5               	addwf	___lwmod@counter,f
  5617  0E79  2E6E               	goto	i1l2238
  5618  0E7A                     i1l2240:	
  5619  0E7A  0871               	movf	___lwmod@divisor+1,w
  5620  0E7B  0273               	subwf	___lwmod@dividend+1,w
  5621  0E7C  1D03               	skipz
  5622  0E7D  2E80               	goto	u213_25
  5623  0E7E  0870               	movf	___lwmod@divisor,w
  5624  0E7F  0272               	subwf	___lwmod@dividend,w
  5625  0E80                     u213_25:	
  5626  0E80  1C03               	skipc
  5627  0E81  2E86               	goto	i1l2244
  5628  0E82  0870               	movf	___lwmod@divisor,w
  5629  0E83  02F2               	subwf	___lwmod@dividend,f
  5630  0E84  0871               	movf	___lwmod@divisor+1,w
  5631  0E85  3BF3               	subwfb	___lwmod@dividend+1,f
  5632  0E86                     i1l2244:	
  5633  0E86  3001               	movlw	1
  5634  0E87                     u214_25:	
  5635  0E87  36F1               	lsrf	___lwmod@divisor+1,f
  5636  0E88  0CF0               	rrf	___lwmod@divisor,f
  5637  0E89  0B89               	decfsz	9,f
  5638  0E8A  2E87               	goto	u214_25
  5639  0E8B  3001               	movlw	1
  5640  0E8C  02F5               	subwf	___lwmod@counter,f
  5641  0E8D  1D03               	btfss	3,2
  5642  0E8E  2E7A               	goto	i1l2240
  5643  0E8F                     i1l2248:	
  5644  0E8F  0873               	movf	___lwmod@dividend+1,w
  5645  0E90  00F1               	movwf	?___lwmod+1
  5646  0E91  0872               	movf	___lwmod@dividend,w
  5647  0E92  00F0               	movwf	?___lwmod
  5648  0E93  0008               	return
  5649  0E94                     __end_of___lwmod:	
  5650                           
  5651                           	psect	text33
  5652  0F4C                     __ptext33:	
  5653 ;; *************** function ___lwdiv *****************
  5654 ;; Defined at:
  5655 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  divisor         2    6[COMMON] unsigned int 
  5658 ;;  dividend        2    8[COMMON] unsigned int 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  quotient        2   11[COMMON] unsigned int 
  5661 ;;  counter         1   13[COMMON] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  2    6[COMMON] unsigned int 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5671 ;;      Params:         4       0       0       0       0       0
  5672 ;;      Locals:         3       0       0       0       0       0
  5673 ;;      Temps:          1       0       0       0       0       0
  5674 ;;      Totals:         8       0       0       0       0       0
  5675 ;;Total ram usage:        8 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_lchika
  5681 ;;		_display
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           
  5686                           ;psect for function ___lwdiv
  5687  0F4C                     ___lwdiv:	
  5688                           
  5689                           ;incstack = 0
  5690                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5691  0F4C  01FB               	clrf	___lwdiv@quotient
  5692  0F4D  01FC               	clrf	___lwdiv@quotient+1
  5693  0F4E  0876               	movf	___lwdiv@divisor,w
  5694  0F4F  0477               	iorwf	___lwdiv@divisor+1,w
  5695  0F50  1903               	btfsc	3,2
  5696  0F51  2F7B               	goto	i1l2226
  5697  0F52  01FD               	clrf	___lwdiv@counter
  5698  0F53  0AFD               	incf	___lwdiv@counter,f
  5699  0F54                     i1l2214:	
  5700  0F54  1BF7               	btfsc	___lwdiv@divisor+1,7
  5701  0F55  2F60               	goto	i1l2216
  5702  0F56  3001               	movlw	1
  5703  0F57                     u204_25:	
  5704  0F57  35F6               	lslf	___lwdiv@divisor,f
  5705  0F58  0DF7               	rlf	___lwdiv@divisor+1,f
  5706  0F59  0B89               	decfsz	9,f
  5707  0F5A  2F57               	goto	u204_25
  5708  0F5B  3001               	movlw	1
  5709  0F5C  00FA               	movwf	??___lwdiv
  5710  0F5D  087A               	movf	??___lwdiv,w
  5711  0F5E  07FD               	addwf	___lwdiv@counter,f
  5712  0F5F  2F54               	goto	i1l2214
  5713  0F60                     i1l2216:	
  5714  0F60  3001               	movlw	1
  5715  0F61                     u206_25:	
  5716  0F61  35FB               	lslf	___lwdiv@quotient,f
  5717  0F62  0DFC               	rlf	___lwdiv@quotient+1,f
  5718  0F63  0B89               	decfsz	9,f
  5719  0F64  2F61               	goto	u206_25
  5720  0F65  0877               	movf	___lwdiv@divisor+1,w
  5721  0F66  0279               	subwf	___lwdiv@dividend+1,w
  5722  0F67  1D03               	skipz
  5723  0F68  2F6B               	goto	u207_25
  5724  0F69  0876               	movf	___lwdiv@divisor,w
  5725  0F6A  0278               	subwf	___lwdiv@dividend,w
  5726  0F6B                     u207_25:	
  5727  0F6B  1C03               	skipc
  5728  0F6C  2F72               	goto	i1l2222
  5729  0F6D  0876               	movf	___lwdiv@divisor,w
  5730  0F6E  02F8               	subwf	___lwdiv@dividend,f
  5731  0F6F  0877               	movf	___lwdiv@divisor+1,w
  5732  0F70  3BF9               	subwfb	___lwdiv@dividend+1,f
  5733  0F71  147B               	bsf	___lwdiv@quotient,0
  5734  0F72                     i1l2222:	
  5735  0F72  3001               	movlw	1
  5736  0F73                     u208_25:	
  5737  0F73  36F7               	lsrf	___lwdiv@divisor+1,f
  5738  0F74  0CF6               	rrf	___lwdiv@divisor,f
  5739  0F75  0B89               	decfsz	9,f
  5740  0F76  2F73               	goto	u208_25
  5741  0F77  3001               	movlw	1
  5742  0F78  02FD               	subwf	___lwdiv@counter,f
  5743  0F79  1D03               	btfss	3,2
  5744  0F7A  2F60               	goto	i1l2216
  5745  0F7B                     i1l2226:	
  5746  0F7B  087C               	movf	___lwdiv@quotient+1,w
  5747  0F7C  00F7               	movwf	?___lwdiv+1
  5748  0F7D  087B               	movf	___lwdiv@quotient,w
  5749  0F7E  00F6               	movwf	?___lwdiv
  5750  0F7F  0008               	return
  5751  0F80                     __end_of___lwdiv:	
  5752                           
  5753                           	psect	text34
  5754  06E9                     __ptext34:	
  5755 ;; *************** function ___almod *****************
  5756 ;; Defined at:
  5757 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  divisor         4    0[COMMON] long 
  5760 ;;  dividend        4    4[COMMON] long 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  sign            1   10[COMMON] unsigned char 
  5763 ;;  counter         1    9[COMMON] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4    0[COMMON] long 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5773 ;;      Params:         8       0       0       0       0       0
  5774 ;;      Locals:         2       0       0       0       0       0
  5775 ;;      Temps:          1       0       0       0       0       0
  5776 ;;      Totals:        11       0       0       0       0       0
  5777 ;;Total ram usage:       11 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_display
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           
  5787                           ;psect for function ___almod
  5788  06E9                     ___almod:	
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in ___almod: [wreg+status,2+status,0]
  5792  06E9  01FA               	clrf	___almod@sign
  5793  06EA  1FF7               	btfss	___almod@dividend+3,7
  5794  06EB  2EF9               	goto	i1l570
  5795  06EC  09F4               	comf	___almod@dividend,f
  5796  06ED  09F5               	comf	___almod@dividend+1,f
  5797  06EE  09F6               	comf	___almod@dividend+2,f
  5798  06EF  09F7               	comf	___almod@dividend+3,f
  5799  06F0  0AF4               	incf	___almod@dividend,f
  5800  06F1  1903               	skipnz
  5801  06F2  0AF5               	incf	___almod@dividend+1,f
  5802  06F3  1903               	skipnz
  5803  06F4  0AF6               	incf	___almod@dividend+2,f
  5804  06F5  1903               	skipnz
  5805  06F6  0AF7               	incf	___almod@dividend+3,f
  5806  06F7  01FA               	clrf	___almod@sign
  5807  06F8  0AFA               	incf	___almod@sign,f
  5808  06F9                     i1l570:	
  5809  06F9  1FF3               	btfss	___almod@divisor+3,7
  5810  06FA  2F06               	goto	i1l2136
  5811  06FB  09F0               	comf	___almod@divisor,f
  5812  06FC  09F1               	comf	___almod@divisor+1,f
  5813  06FD  09F2               	comf	___almod@divisor+2,f
  5814  06FE  09F3               	comf	___almod@divisor+3,f
  5815  06FF  0AF0               	incf	___almod@divisor,f
  5816  0700  1903               	skipnz
  5817  0701  0AF1               	incf	___almod@divisor+1,f
  5818  0702  1903               	skipnz
  5819  0703  0AF2               	incf	___almod@divisor+2,f
  5820  0704  1903               	skipnz
  5821  0705  0AF3               	incf	___almod@divisor+3,f
  5822  0706                     i1l2136:	
  5823  0706  0873               	movf	___almod@divisor+3,w
  5824  0707  0472               	iorwf	___almod@divisor+2,w
  5825  0708  0471               	iorwf	___almod@divisor+1,w
  5826  0709  0470               	iorwf	___almod@divisor,w
  5827  070A  1903               	skipnz
  5828  070B  2F3F               	goto	i1l2152
  5829  070C  01F9               	clrf	___almod@counter
  5830  070D  0AF9               	incf	___almod@counter,f
  5831  070E                     i1l2142:	
  5832  070E  1BF3               	btfsc	___almod@divisor+3,7
  5833  070F  2F1C               	goto	i1l2144
  5834  0710  3001               	movlw	1
  5835  0711                     u187_25:	
  5836  0711  35F0               	lslf	___almod@divisor,f
  5837  0712  0DF1               	rlf	___almod@divisor+1,f
  5838  0713  0DF2               	rlf	___almod@divisor+2,f
  5839  0714  0DF3               	rlf	___almod@divisor+3,f
  5840  0715  0B89               	decfsz	9,f
  5841  0716  2F11               	goto	u187_25
  5842  0717  3001               	movlw	1
  5843  0718  00F8               	movwf	??___almod
  5844  0719  0878               	movf	??___almod,w
  5845  071A  07F9               	addwf	___almod@counter,f
  5846  071B  2F0E               	goto	i1l2142
  5847  071C                     i1l2144:	
  5848  071C  0873               	movf	___almod@divisor+3,w
  5849  071D  0277               	subwf	___almod@dividend+3,w
  5850  071E  1D03               	skipz
  5851  071F  2F2A               	goto	u189_25
  5852  0720  0872               	movf	___almod@divisor+2,w
  5853  0721  0276               	subwf	___almod@dividend+2,w
  5854  0722  1D03               	skipz
  5855  0723  2F2A               	goto	u189_25
  5856  0724  0871               	movf	___almod@divisor+1,w
  5857  0725  0275               	subwf	___almod@dividend+1,w
  5858  0726  1D03               	skipz
  5859  0727  2F2A               	goto	u189_25
  5860  0728  0870               	movf	___almod@divisor,w
  5861  0729  0274               	subwf	___almod@dividend,w
  5862  072A                     u189_25:	
  5863  072A  1C03               	skipc
  5864  072B  2F34               	goto	i1l2148
  5865  072C  0870               	movf	___almod@divisor,w
  5866  072D  02F4               	subwf	___almod@dividend,f
  5867  072E  0871               	movf	___almod@divisor+1,w
  5868  072F  3BF5               	subwfb	___almod@dividend+1,f
  5869  0730  0872               	movf	___almod@divisor+2,w
  5870  0731  3BF6               	subwfb	___almod@dividend+2,f
  5871  0732  0873               	movf	___almod@divisor+3,w
  5872  0733  3BF7               	subwfb	___almod@dividend+3,f
  5873  0734                     i1l2148:	
  5874  0734  3001               	movlw	1
  5875  0735                     u190_25:	
  5876  0735  36F3               	lsrf	___almod@divisor+3,f
  5877  0736  0CF2               	rrf	___almod@divisor+2,f
  5878  0737  0CF1               	rrf	___almod@divisor+1,f
  5879  0738  0CF0               	rrf	___almod@divisor,f
  5880  0739  0B89               	decfsz	9,f
  5881  073A  2F35               	goto	u190_25
  5882  073B  3001               	movlw	1
  5883  073C  02F9               	subwf	___almod@counter,f
  5884  073D  1D03               	btfss	3,2
  5885  073E  2F1C               	goto	i1l2144
  5886  073F                     i1l2152:	
  5887  073F  087A               	movf	___almod@sign,w
  5888  0740  1903               	btfsc	3,2
  5889  0741  2F4D               	goto	i1l2156
  5890  0742  09F4               	comf	___almod@dividend,f
  5891  0743  09F5               	comf	___almod@dividend+1,f
  5892  0744  09F6               	comf	___almod@dividend+2,f
  5893  0745  09F7               	comf	___almod@dividend+3,f
  5894  0746  0AF4               	incf	___almod@dividend,f
  5895  0747  1903               	skipnz
  5896  0748  0AF5               	incf	___almod@dividend+1,f
  5897  0749  1903               	skipnz
  5898  074A  0AF6               	incf	___almod@dividend+2,f
  5899  074B  1903               	skipnz
  5900  074C  0AF7               	incf	___almod@dividend+3,f
  5901  074D                     i1l2156:	
  5902  074D  0877               	movf	___almod@dividend+3,w
  5903  074E  00F3               	movwf	?___almod+3
  5904  074F  0876               	movf	___almod@dividend+2,w
  5905  0750  00F2               	movwf	?___almod+2
  5906  0751  0875               	movf	___almod@dividend+1,w
  5907  0752  00F1               	movwf	?___almod+1
  5908  0753  0874               	movf	___almod@dividend,w
  5909  0754  00F0               	movwf	?___almod
  5910  0755  0008               	return
  5911  0756                     __end_of___almod:	
  5912                           
  5913                           	psect	text35
  5914  05F2                     __ptext35:	
  5915 ;; *************** function ___aldiv *****************
  5916 ;; Defined at:
  5917 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  divisor         4    0[BANK0 ] long 
  5920 ;;  dividend        4    4[BANK0 ] long 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  quotient        4   10[BANK0 ] long 
  5923 ;;  sign            1    9[BANK0 ] unsigned char 
  5924 ;;  counter         1    8[BANK0 ] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  4    0[BANK0 ] long 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5934 ;;      Params:         0       8       0       0       0       0
  5935 ;;      Locals:         0       6       0       0       0       0
  5936 ;;      Temps:          1       0       0       0       0       0
  5937 ;;      Totals:         1      14       0       0       0       0
  5938 ;;Total ram usage:       15 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_display
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           
  5948                           ;psect for function ___aldiv
  5949  05F2                     ___aldiv:	
  5950                           
  5951                           ;incstack = 0
  5952                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5953  05F2  0020               	movlb	0	; select bank0
  5954  05F3  01C4               	clrf	___aldiv@sign
  5955  05F4  1FBE               	btfss	___aldiv@divisor+3,7
  5956  05F5  2E03               	goto	i1l557
  5957  05F6  09BB               	comf	___aldiv@divisor,f
  5958  05F7  09BC               	comf	___aldiv@divisor+1,f
  5959  05F8  09BD               	comf	___aldiv@divisor+2,f
  5960  05F9  09BE               	comf	___aldiv@divisor+3,f
  5961  05FA  0ABB               	incf	___aldiv@divisor,f
  5962  05FB  1903               	skipnz
  5963  05FC  0ABC               	incf	___aldiv@divisor+1,f
  5964  05FD  1903               	skipnz
  5965  05FE  0ABD               	incf	___aldiv@divisor+2,f
  5966  05FF  1903               	skipnz
  5967  0600  0ABE               	incf	___aldiv@divisor+3,f
  5968  0601  01C4               	clrf	___aldiv@sign
  5969  0602  0AC4               	incf	___aldiv@sign,f
  5970  0603                     i1l557:	
  5971  0603  1FC2               	btfss	___aldiv@dividend+3,7
  5972  0604  2E14               	goto	i1l2098
  5973  0605  09BF               	comf	___aldiv@dividend,f
  5974  0606  09C0               	comf	___aldiv@dividend+1,f
  5975  0607  09C1               	comf	___aldiv@dividend+2,f
  5976  0608  09C2               	comf	___aldiv@dividend+3,f
  5977  0609  0ABF               	incf	___aldiv@dividend,f
  5978  060A  1903               	skipnz
  5979  060B  0AC0               	incf	___aldiv@dividend+1,f
  5980  060C  1903               	skipnz
  5981  060D  0AC1               	incf	___aldiv@dividend+2,f
  5982  060E  1903               	skipnz
  5983  060F  0AC2               	incf	___aldiv@dividend+3,f
  5984  0610  3001               	movlw	1
  5985  0611  00FB               	movwf	??___aldiv
  5986  0612  087B               	movf	??___aldiv,w
  5987  0613  06C4               	xorwf	___aldiv@sign,f
  5988  0614                     i1l2098:	
  5989  0614  3000               	movlw	0
  5990  0615  00C8               	movwf	___aldiv@quotient+3
  5991  0616  3000               	movlw	0
  5992  0617  00C7               	movwf	___aldiv@quotient+2
  5993  0618  3000               	movlw	0
  5994  0619  00C6               	movwf	___aldiv@quotient+1
  5995  061A  3000               	movlw	0
  5996  061B  00C5               	movwf	___aldiv@quotient
  5997  061C  083E               	movf	___aldiv@divisor+3,w
  5998  061D  043D               	iorwf	___aldiv@divisor+2,w
  5999  061E  043C               	iorwf	___aldiv@divisor+1,w
  6000  061F  043B               	iorwf	___aldiv@divisor,w
  6001  0620  1903               	skipnz
  6002  0621  2E5D               	goto	i1l2120
  6003  0622  01C3               	clrf	___aldiv@counter
  6004  0623  0AC3               	incf	___aldiv@counter,f
  6005  0624                     i1l2106:	
  6006  0624  1BBE               	btfsc	___aldiv@divisor+3,7
  6007  0625  2E32               	goto	i1l2108
  6008  0626  3001               	movlw	1
  6009  0627                     u177_25:	
  6010  0627  35BB               	lslf	___aldiv@divisor,f
  6011  0628  0DBC               	rlf	___aldiv@divisor+1,f
  6012  0629  0DBD               	rlf	___aldiv@divisor+2,f
  6013  062A  0DBE               	rlf	___aldiv@divisor+3,f
  6014  062B  0B89               	decfsz	9,f
  6015  062C  2E27               	goto	u177_25
  6016  062D  3001               	movlw	1
  6017  062E  00FB               	movwf	??___aldiv
  6018  062F  087B               	movf	??___aldiv,w
  6019  0630  07C3               	addwf	___aldiv@counter,f
  6020  0631  2E24               	goto	i1l2106
  6021  0632                     i1l2108:	
  6022  0632  3001               	movlw	1
  6023  0633                     u179_25:	
  6024  0633  35C5               	lslf	___aldiv@quotient,f
  6025  0634  0DC6               	rlf	___aldiv@quotient+1,f
  6026  0635  0DC7               	rlf	___aldiv@quotient+2,f
  6027  0636  0DC8               	rlf	___aldiv@quotient+3,f
  6028  0637  0B89               	decfsz	9,f
  6029  0638  2E33               	goto	u179_25
  6030  0639  083E               	movf	___aldiv@divisor+3,w
  6031  063A  0242               	subwf	___aldiv@dividend+3,w
  6032  063B  1D03               	skipz
  6033  063C  2E47               	goto	u180_25
  6034  063D  083D               	movf	___aldiv@divisor+2,w
  6035  063E  0241               	subwf	___aldiv@dividend+2,w
  6036  063F  1D03               	skipz
  6037  0640  2E47               	goto	u180_25
  6038  0641  083C               	movf	___aldiv@divisor+1,w
  6039  0642  0240               	subwf	___aldiv@dividend+1,w
  6040  0643  1D03               	skipz
  6041  0644  2E47               	goto	u180_25
  6042  0645  083B               	movf	___aldiv@divisor,w
  6043  0646  023F               	subwf	___aldiv@dividend,w
  6044  0647                     u180_25:	
  6045  0647  1C03               	skipc
  6046  0648  2E52               	goto	i1l2116
  6047  0649  083B               	movf	___aldiv@divisor,w
  6048  064A  02BF               	subwf	___aldiv@dividend,f
  6049  064B  083C               	movf	___aldiv@divisor+1,w
  6050  064C  3BC0               	subwfb	___aldiv@dividend+1,f
  6051  064D  083D               	movf	___aldiv@divisor+2,w
  6052  064E  3BC1               	subwfb	___aldiv@dividend+2,f
  6053  064F  083E               	movf	___aldiv@divisor+3,w
  6054  0650  3BC2               	subwfb	___aldiv@dividend+3,f
  6055  0651  1445               	bsf	___aldiv@quotient,0
  6056  0652                     i1l2116:	
  6057  0652  3001               	movlw	1
  6058  0653                     u181_25:	
  6059  0653  36BE               	lsrf	___aldiv@divisor+3,f
  6060  0654  0CBD               	rrf	___aldiv@divisor+2,f
  6061  0655  0CBC               	rrf	___aldiv@divisor+1,f
  6062  0656  0CBB               	rrf	___aldiv@divisor,f
  6063  0657  0B89               	decfsz	9,f
  6064  0658  2E53               	goto	u181_25
  6065  0659  3001               	movlw	1
  6066  065A  02C3               	subwf	___aldiv@counter,f
  6067  065B  1D03               	btfss	3,2
  6068  065C  2E32               	goto	i1l2108
  6069  065D                     i1l2120:	
  6070  065D  0844               	movf	___aldiv@sign,w
  6071  065E  1903               	btfsc	3,2
  6072  065F  2E6B               	goto	i1l2124
  6073  0660  09C5               	comf	___aldiv@quotient,f
  6074  0661  09C6               	comf	___aldiv@quotient+1,f
  6075  0662  09C7               	comf	___aldiv@quotient+2,f
  6076  0663  09C8               	comf	___aldiv@quotient+3,f
  6077  0664  0AC5               	incf	___aldiv@quotient,f
  6078  0665  1903               	skipnz
  6079  0666  0AC6               	incf	___aldiv@quotient+1,f
  6080  0667  1903               	skipnz
  6081  0668  0AC7               	incf	___aldiv@quotient+2,f
  6082  0669  1903               	skipnz
  6083  066A  0AC8               	incf	___aldiv@quotient+3,f
  6084  066B                     i1l2124:	
  6085  066B  0848               	movf	___aldiv@quotient+3,w
  6086  066C  00BE               	movwf	?___aldiv+3
  6087  066D  0847               	movf	___aldiv@quotient+2,w
  6088  066E  00BD               	movwf	?___aldiv+2
  6089  066F  0846               	movf	___aldiv@quotient+1,w
  6090  0670  00BC               	movwf	?___aldiv+1
  6091  0671  0845               	movf	___aldiv@quotient,w
  6092  0672  00BB               	movwf	?___aldiv
  6093  0673  0008               	return
  6094  0674                     __end_of___aldiv:	
  6095                           
  6096                           	psect	text36
  6097  0BBA                     __ptext36:	
  6098 ;; *************** function _LCD_SetCursor *****************
  6099 ;; Defined at:
  6100 ;;		line 285 in file "My_header_16F.h"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  col             1    wreg     unsigned char 
  6103 ;;  row             1    7[COMMON] unsigned char 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  col             1   10[COMMON] unsigned char 
  6106 ;;  row_offsets     2    8[COMMON] unsigned char [2]
  6107 ;; Return value:  Size  Location     Type
  6108 ;;		None               void
  6109 ;; Registers used:
  6110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6116 ;;      Params:         1       0       0       0       0       0
  6117 ;;      Locals:         3       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0
  6119 ;;      Totals:         4       0       0       0       0       0
  6120 ;;Total ram usage:        4 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    3
  6123 ;; This function calls:
  6124 ;;		i1_LCD_Command
  6125 ;; This function is called by:
  6126 ;;		_display
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           
  6131                           ;psect for function _LCD_SetCursor
  6132  0BBA                     _LCD_SetCursor:	
  6133                           
  6134                           ;incstack = 0
  6135                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6136                           ;LCD_SetCursor@col stored from wreg
  6137  0BBA  00FA               	movwf	LCD_SetCursor@col
  6138                           
  6139                           ;My_header_16F.h: 286: uint8_t row_offsets[] = {0x00, 0x40};
  6140  0BBB  0020               	movlb	0	; select bank0
  6141  0BBC  0857               	movf	LCD_SetCursor@F3069+1,w
  6142  0BBD  00F9               	movwf	LCD_SetCursor@row_offsets+1
  6143  0BBE  0856               	movf	LCD_SetCursor@F3069,w
  6144  0BBF  00F8               	movwf	LCD_SetCursor@row_offsets
  6145                           
  6146                           ;My_header_16F.h: 288: LCD_Command(0x80 | (col + row_offsets[row]));
  6147  0BC0  0877               	movf	LCD_SetCursor@row,w
  6148  0BC1  3E78               	addlw	(low (LCD_SetCursor@row_offsets| 0))& (0+255)
  6149  0BC2  0086               	movwf	6
  6150  0BC3  0187               	clrf	7
  6151  0BC4  0801               	movf	1,w
  6152  0BC5  077A               	addwf	LCD_SetCursor@col,w
  6153  0BC6  3880               	iorlw	128
  6154  0BC7  318C  24BD         	fcall	i1_LCD_Command
  6155  0BC9  0008               	return
  6156  0BCA                     __end_of_LCD_SetCursor:	
  6157                           
  6158                           	psect	text37
  6159  0CBD                     __ptext37:	
  6160 ;; *************** function i1_LCD_Command *****************
  6161 ;; Defined at:
  6162 ;;		line 267 in file "My_header_16F.h"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  c               1    wreg     unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  c               1    5[COMMON] unsigned char 
  6167 ;;  LCD_Command     1    6[COMMON] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;		None               void
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, pclath, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6177 ;;      Params:         0       0       0       0       0       0
  6178 ;;      Locals:         2       0       0       0       0       0
  6179 ;;      Temps:          1       0       0       0       0       0
  6180 ;;      Totals:         3       0       0       0       0       0
  6181 ;;Total ram usage:        3 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    2
  6184 ;; This function calls:
  6185 ;;		i1_I2C_Send
  6186 ;;		i1_I2C_Start
  6187 ;;		i1_I2C_Stop
  6188 ;; This function is called by:
  6189 ;;		_LCD_SetCursor
  6190 ;;		i1_LCD_Clear
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function i1_LCD_Command
  6196  0CBD                     i1_LCD_Command:	
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in i1_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  6200                           ;i1LCD_Command@c stored from wreg
  6201  0CBD  00F5               	movwf	i1LCD_Command@c
  6202                           
  6203                           ;My_header_16F.h: 268: uint8_t ans;
  6204                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  6205  0CBE  01F2               	clrf	i1I2C_Start@rw
  6206  0CBF  303E               	movlw	62
  6207  0CC0  318C  2437  318C   	fcall	i1_I2C_Start
  6208  0CC3  00F4               	movwf	??i1_LCD_Command
  6209  0CC4  0874               	movf	??i1_LCD_Command,w
  6210  0CC5  00F6               	movwf	i1LCD_Command@ans
  6211                           
  6212                           ;My_header_16F.h: 271: if (ans == 0) {
  6213  0CC6  0876               	movf	i1LCD_Command@ans,w
  6214  0CC7  1D03               	btfss	3,2
  6215  0CC8  2CD1               	goto	i1l212
  6216                           
  6217                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  6218  0CC9  3080               	movlw	128
  6219  0CCA  318B  23AA  318C   	fcall	i1_I2C_Send
  6220                           
  6221                           ;My_header_16F.h: 274: I2C_Send(c);
  6222  0CCD  0875               	movf	i1LCD_Command@c,w
  6223  0CCE  318B  23AA  318C   	fcall	i1_I2C_Send
  6224  0CD1                     i1l212:	
  6225                           
  6226                           ;My_header_16F.h: 275: }
  6227                           ;My_header_16F.h: 276: I2C_Stop();
  6228  0CD1  318B  2356  318C   	fcall	i1_I2C_Stop
  6229                           
  6230                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6231  0CD4  3045               	movlw	69
  6232  0CD5  00F4               	movwf	??i1_LCD_Command
  6233  0CD6                     u396_27:	
  6234  0CD6  0BF4               	decfsz	??i1_LCD_Command,f
  6235  0CD7  2CD6               	goto	u396_27
  6236  0CD8  0008               	return
  6237  0CD9                     __end_ofi1_LCD_Command:	
  6238                           
  6239                           	psect	text38
  6240  0EEE                     __ptext38:	
  6241 ;; *************** function _LCD_Puts *****************
  6242 ;; Defined at:
  6243 ;;		line 304 in file "My_header_16F.h"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  s               2    4[COMMON] PTR const unsigned char 
  6246 ;;		 -> STR_13(8), STR_12(5), STR_11(7), STR_10(6), 
  6247 ;;		 -> STR_9(4), STR_8(5), STR_7(7), STR_6(6), 
  6248 ;;		 -> STR_5(5), STR_4(7), STR_3(6), STR_2(8), 
  6249 ;;		 -> STR_1(7), 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  ans             2    8[COMMON] int 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;		None               void
  6254 ;; Registers used:
  6255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6261 ;;      Params:         2       0       0       0       0       0
  6262 ;;      Locals:         2       0       0       0       0       0
  6263 ;;      Temps:          2       0       0       0       0       0
  6264 ;;      Totals:         6       0       0       0       0       0
  6265 ;;Total ram usage:        6 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    2
  6268 ;; This function calls:
  6269 ;;		i1_I2C_Send
  6270 ;;		i1_I2C_Start
  6271 ;;		i1_I2C_Stop
  6272 ;; This function is called by:
  6273 ;;		_display
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _LCD_Puts
  6279  0EEE                     _LCD_Puts:	
  6280                           
  6281                           ;My_header_16F.h: 305: int ans;
  6282                           ;My_header_16F.h: 307: ans = I2C_Start(0x3E, 0);
  6283                           
  6284                           ;incstack = 0
  6285                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6286  0EEE  01F2               	clrf	i1I2C_Start@rw
  6287  0EEF  303E               	movlw	62
  6288  0EF0  318C  2437  318E   	fcall	i1_I2C_Start
  6289  0EF3  00F6               	movwf	??_LCD_Puts
  6290  0EF4  01F7               	clrf	??_LCD_Puts+1
  6291  0EF5  0876               	movf	??_LCD_Puts,w
  6292  0EF6  00F8               	movwf	LCD_Puts@ans
  6293  0EF7  0877               	movf	??_LCD_Puts+1,w
  6294  0EF8  00F9               	movwf	LCD_Puts@ans+1
  6295                           
  6296                           ;My_header_16F.h: 308: if (ans == 0) {
  6297  0EF9  0878               	movf	LCD_Puts@ans,w
  6298  0EFA  0479               	iorwf	LCD_Puts@ans+1,w
  6299  0EFB  1D03               	btfss	3,2
  6300  0EFC  2F19               	goto	i1l2064
  6301                           
  6302                           ;My_header_16F.h: 309: I2C_Send(0b01000000);
  6303  0EFD  3040               	movlw	64
  6304  0EFE  318B  23AA  318E   	fcall	i1_I2C_Send
  6305  0F01                     i1l2062:	
  6306                           ;My_header_16F.h: 310: while (*s) {
  6307                           
  6308  0F01  0874               	movf	LCD_Puts@s,w
  6309  0F02  0084               	movwf	4
  6310  0F03  0875               	movf	LCD_Puts@s+1,w
  6311  0F04  0085               	movwf	5
  6312  0F05  0012               	moviw fsr0++
  6313  0F06  1903               	btfsc	3,2
  6314  0F07  2F19               	goto	i1l2064
  6315                           
  6316                           ;My_header_16F.h: 311: I2C_Send(*s++);
  6317  0F08  0874               	movf	LCD_Puts@s,w
  6318  0F09  0084               	movwf	4
  6319  0F0A  0875               	movf	LCD_Puts@s+1,w
  6320  0F0B  0085               	movwf	5
  6321  0F0C  0800               	movf	0,w	;code access
  6322  0F0D  318B  23AA  318E   	fcall	i1_I2C_Send
  6323  0F10  3001               	movlw	1
  6324  0F11  07F4               	addwf	LCD_Puts@s,f
  6325  0F12  3000               	movlw	0
  6326  0F13  3DF5               	addwfc	LCD_Puts@s+1,f
  6327                           
  6328                           ;My_header_16F.h: 312: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6329  0F14  3045               	movlw	69
  6330  0F15  00F6               	movwf	??_LCD_Puts
  6331  0F16                     u397_27:	
  6332  0F16  0BF6               	decfsz	??_LCD_Puts,f
  6333  0F17  2F16               	goto	u397_27
  6334  0F18  2F01               	goto	i1l2062
  6335  0F19                     i1l2064:	
  6336                           
  6337                           ;My_header_16F.h: 313: }
  6338                           ;My_header_16F.h: 314: }
  6339                           ;My_header_16F.h: 315: I2C_Stop();
  6340  0F19  318B  2356         	fcall	i1_I2C_Stop
  6341  0F1B  0008               	return
  6342  0F1C                     __end_of_LCD_Puts:	
  6343                           
  6344                           	psect	text39
  6345  0CA1                     __ptext39:	
  6346 ;; *************** function _LCD_Putc *****************
  6347 ;; Defined at:
  6348 ;;		line 291 in file "My_header_16F.h"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  c               1    wreg     unsigned char 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  c               1    5[COMMON] unsigned char 
  6353 ;;  ans             1    6[COMMON] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, pclath, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6363 ;;      Params:         0       0       0       0       0       0
  6364 ;;      Locals:         2       0       0       0       0       0
  6365 ;;      Temps:          1       0       0       0       0       0
  6366 ;;      Totals:         3       0       0       0       0       0
  6367 ;;Total ram usage:        3 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    2
  6370 ;; This function calls:
  6371 ;;		i1_I2C_Send
  6372 ;;		i1_I2C_Start
  6373 ;;		i1_I2C_Stop
  6374 ;; This function is called by:
  6375 ;;		_display
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function _LCD_Putc
  6381  0CA1                     _LCD_Putc:	
  6382                           
  6383                           ;incstack = 0
  6384                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  6385                           ;LCD_Putc@c stored from wreg
  6386  0CA1  00F5               	movwf	LCD_Putc@c
  6387                           
  6388                           ;My_header_16F.h: 292: uint8_t ans;
  6389                           ;My_header_16F.h: 294: ans = I2C_Start(0x3E, 0);
  6390  0CA2  01F2               	clrf	i1I2C_Start@rw
  6391  0CA3  303E               	movlw	62
  6392  0CA4  318C  2437  318C   	fcall	i1_I2C_Start
  6393  0CA7  00F4               	movwf	??_LCD_Putc
  6394  0CA8  0874               	movf	??_LCD_Putc,w
  6395  0CA9  00F6               	movwf	LCD_Putc@ans
  6396                           
  6397                           ;My_header_16F.h: 295: if (ans == 0) {
  6398  0CAA  0876               	movf	LCD_Putc@ans,w
  6399  0CAB  1D03               	btfss	3,2
  6400  0CAC  2CB5               	goto	i1l224
  6401                           
  6402                           ;My_header_16F.h: 297: I2C_Send(0b11000000);
  6403  0CAD  30C0               	movlw	192
  6404  0CAE  318B  23AA  318C   	fcall	i1_I2C_Send
  6405                           
  6406                           ;My_header_16F.h: 298: I2C_Send(c);
  6407  0CB1  0875               	movf	LCD_Putc@c,w
  6408  0CB2  318B  23AA  318C   	fcall	i1_I2C_Send
  6409  0CB5                     i1l224:	
  6410                           
  6411                           ;My_header_16F.h: 299: }
  6412                           ;My_header_16F.h: 300: I2C_Stop();
  6413  0CB5  318B  2356  318C   	fcall	i1_I2C_Stop
  6414                           
  6415                           ;My_header_16F.h: 301: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6416  0CB8  3045               	movlw	69
  6417  0CB9  00F4               	movwf	??_LCD_Putc
  6418  0CBA                     u398_27:	
  6419  0CBA  0BF4               	decfsz	??_LCD_Putc,f
  6420  0CBB  2CBA               	goto	u398_27
  6421  0CBC  0008               	return
  6422  0CBD                     __end_of_LCD_Putc:	
  6423                           
  6424                           	psect	text40
  6425  0B56                     __ptext40:	
  6426 ;; *************** function i1_I2C_Stop *****************
  6427 ;; Defined at:
  6428 ;;		line 237 in file "My_header_16F.h"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;		None
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;		None               void
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0, pclath, cstack
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6442 ;;      Params:         0       0       0       0       0       0
  6443 ;;      Locals:         0       0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0
  6445 ;;      Totals:         0       0       0       0       0       0
  6446 ;;Total ram usage:        0 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    1
  6449 ;; This function calls:
  6450 ;;		i1_I2C_IdleCheck
  6451 ;; This function is called by:
  6452 ;;		_LCD_Putc
  6453 ;;		_LCD_Puts
  6454 ;;		i1_LCD_Command
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           
  6459                           ;psect for function i1_I2C_Stop
  6460  0B56                     i1_I2C_Stop:	
  6461                           
  6462                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in i1_I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  6466  0B56  3005               	movlw	5
  6467  0B57  318B  2368         	fcall	i1_I2C_IdleCheck
  6468                           
  6469                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  6470  0B59  0024               	movlb	4	; select bank4
  6471  0B5A  1516               	bsf	22,2	;volatile
  6472  0B5B  0008               	return
  6473  0B5C                     __end_ofi1_I2C_Stop:	
  6474                           
  6475                           	psect	text41
  6476  0C37                     __ptext41:	
  6477 ;; *************** function i1_I2C_Start *****************
  6478 ;; Defined at:
  6479 ;;		line 213 in file "My_header_16F.h"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  adrs            1    wreg     unsigned char 
  6482 ;;  rw              1    2[COMMON] unsigned char 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  adrs            1    3[COMMON] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      unsigned char 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, pclath, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6494 ;;      Params:         1       0       0       0       0       0
  6495 ;;      Locals:         1       0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0       0
  6497 ;;      Totals:         2       0       0       0       0       0
  6498 ;;Total ram usage:        2 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    1
  6501 ;; This function calls:
  6502 ;;		i1_I2C_IdleCheck
  6503 ;; This function is called by:
  6504 ;;		_LCD_Putc
  6505 ;;		_LCD_Puts
  6506 ;;		i1_LCD_Command
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           
  6511                           ;psect for function i1_I2C_Start
  6512  0C37                     i1_I2C_Start:	
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in i1_I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6516                           ;i1I2C_Start@adrs stored from wreg
  6517  0C37  00F3               	movwf	i1I2C_Start@adrs
  6518                           
  6519                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  6520  0C38  3005               	movlw	5
  6521  0C39  318B  2368  318C   	fcall	i1_I2C_IdleCheck
  6522                           
  6523                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  6524  0C3C  0024               	movlb	4	; select bank4
  6525  0C3D  1416               	bsf	22,0	;volatile
  6526                           
  6527                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  6528  0C3E  3005               	movlw	5
  6529  0C3F  318B  2368  318C   	fcall	i1_I2C_IdleCheck
  6530                           
  6531                           ;My_header_16F.h: 219: SSP1IF = 0;
  6532  0C42  0020               	movlb	0	; select bank0
  6533  0C43  1191               	bcf	17,3	;volatile
  6534                           
  6535                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6536  0C44  3573               	lslf	i1I2C_Start@adrs,w
  6537  0C45  0772               	addwf	i1I2C_Start@rw,w
  6538  0C46  0024               	movlb	4	; select bank4
  6539  0C47  0091               	movwf	17	;volatile
  6540  0C48                     i1l188:	
  6541                           ;My_header_16F.h: 221: while (!SSP1IF);
  6542                           
  6543  0C48  0020               	movlb	0	; select bank0
  6544  0C49  1D91               	btfss	17,3	;volatile
  6545  0C4A  2C48               	goto	i1l188
  6546                           
  6547                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  6548  0C4B  0024               	movlb	4	; select bank4
  6549  0C4C  0E16               	swapf	22,w	;volatile
  6550  0C4D  0C89               	rrf	9,f
  6551  0C4E  0C89               	rrf	9,f
  6552  0C4F  3901               	andlw	1
  6553  0C50  0008               	return
  6554  0C51                     __end_ofi1_I2C_Start:	
  6555                           
  6556                           	psect	text42
  6557  0BAA                     __ptext42:	
  6558 ;; *************** function i1_I2C_Send *****************
  6559 ;; Defined at:
  6560 ;;		line 243 in file "My_header_16F.h"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  data            1    wreg     unsigned char 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  data            1    2[COMMON] unsigned char 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      unsigned char 
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0, pclath, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6574 ;;      Params:         0       0       0       0       0       0
  6575 ;;      Locals:         1       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0
  6577 ;;      Totals:         1       0       0       0       0       0
  6578 ;;Total ram usage:        1 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    1
  6581 ;; This function calls:
  6582 ;;		i1_I2C_IdleCheck
  6583 ;; This function is called by:
  6584 ;;		_LCD_Putc
  6585 ;;		_LCD_Puts
  6586 ;;		i1_LCD_Command
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           
  6591                           ;psect for function i1_I2C_Send
  6592  0BAA                     i1_I2C_Send:	
  6593                           
  6594                           ;incstack = 0
  6595                           ; Regs used in i1_I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  6596                           ;i1I2C_Send@data stored from wreg
  6597  0BAA  00F2               	movwf	i1I2C_Send@data
  6598                           
  6599                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  6600  0BAB  3005               	movlw	5
  6601  0BAC  318B  2368  318B   	fcall	i1_I2C_IdleCheck
  6602                           
  6603                           ;My_header_16F.h: 245: SSP1IF = 0;
  6604  0BAF  0020               	movlb	0	; select bank0
  6605  0BB0  1191               	bcf	17,3	;volatile
  6606                           
  6607                           ;My_header_16F.h: 246: SSP1BUF = data;
  6608  0BB1  0872               	movf	i1I2C_Send@data,w
  6609  0BB2  0024               	movlb	4	; select bank4
  6610  0BB3  0091               	movwf	17	;volatile
  6611  0BB4                     i1l203:	
  6612                           ;My_header_16F.h: 247: while (!SSP1IF);
  6613                           
  6614  0BB4  0020               	movlb	0	; select bank0
  6615  0BB5  1D91               	btfss	17,3	;volatile
  6616  0BB6  2BB4               	goto	i1l203
  6617                           
  6618                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  6619                           ;	Return value of i1_I2C_Send is never used
  6620  0BB7  0024               	movlb	4	; select bank4
  6621  0BB8  0816               	movf	22,w	;volatile
  6622  0BB9  0008               	return
  6623  0BBA                     __end_ofi1_I2C_Send:	
  6624                           
  6625                           	psect	text43
  6626  0B68                     __ptext43:	
  6627 ;; *************** function i1_I2C_IdleCheck *****************
  6628 ;; Defined at:
  6629 ;;		line 199 in file "My_header_16F.h"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  mask            1    wreg     unsigned char 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  mask            1    1[COMMON] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;		None               void
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6643 ;;      Params:         0       0       0       0       0       0
  6644 ;;      Locals:         1       0       0       0       0       0
  6645 ;;      Temps:          1       0       0       0       0       0
  6646 ;;      Totals:         2       0       0       0       0       0
  6647 ;;Total ram usage:        2 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		i1_I2C_Start
  6653 ;;		i1_I2C_Stop
  6654 ;;		i1_I2C_Send
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           
  6659                           ;psect for function i1_I2C_IdleCheck
  6660  0B68                     i1_I2C_IdleCheck:	
  6661                           
  6662                           ;incstack = 0
  6663                           ; Regs used in i1_I2C_IdleCheck: [wreg+status,2+status,0]
  6664                           ;i1I2C_IdleCheck@mask stored from wreg
  6665  0B68  00F1               	movwf	i1I2C_IdleCheck@mask
  6666  0B69                     i1l1926:	
  6667                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  6668                           
  6669  0B69  0871               	movf	i1I2C_IdleCheck@mask,w
  6670  0B6A  0024               	movlb	4	; select bank4
  6671  0B6B  0514               	andwf	20,w	;volatile
  6672  0B6C  00F0               	movwf	??i1_I2C_IdleCheck
  6673  0B6D  0816               	movf	22,w	;volatile
  6674  0B6E  391F               	andlw	31
  6675  0B6F  0470               	iorwf	??i1_I2C_IdleCheck,w
  6676  0B70  1903               	btfsc	3,2
  6677  0B71  0008               	return
  6678  0B72  2B69               	goto	i1l1926
  6679  0B73                     __end_ofi1_I2C_IdleCheck:	
  6680                           
  6681                           	psect	text44
  6682  053D                     __ptext44:	
  6683 ;; *************** function _button_timer_interrupt *****************
  6684 ;; Defined at:
  6685 ;;		line 87 in file "My_header_16F.h"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  bt              1    wreg     PTR struct button
  6688 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6689 ;;  sw_value        1    0[COMMON] unsigned char 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  bt              1    3[COMMON] PTR struct button
  6692 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;		None               void
  6695 ;; Registers used:
  6696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6702 ;;      Params:         1       0       0       0       0       0
  6703 ;;      Locals:         1       0       0       0       0       0
  6704 ;;      Temps:          2       0       0       0       0       0
  6705 ;;      Totals:         4       0       0       0       0       0
  6706 ;;Total ram usage:        4 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_isr
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _button_timer_interrupt
  6717  053D                     _button_timer_interrupt:	
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6721                           ;button_timer_interrupt@bt stored from wreg
  6722  053D  00F3               	movwf	button_timer_interrupt@bt
  6723                           
  6724                           ;My_header_16F.h: 88: if (sw_value) {
  6725  053E  0870               	movf	button_timer_interrupt@sw_value,w
  6726  053F  1903               	btfsc	3,2
  6727  0540  2D94               	goto	i1l2288
  6728                           
  6729                           ;My_header_16F.h: 89: if (bt->cnt_sw < 150 + 1) bt->cnt_sw++;
  6730  0541  0873               	movf	button_timer_interrupt@bt,w
  6731  0542  0086               	movwf	6
  6732  0543  0187               	clrf	7
  6733  0544  3F40               	moviw [0]fsr1
  6734  0545  00F1               	movwf	??_button_timer_interrupt
  6735  0546  3F41               	moviw [1]fsr1
  6736  0547  00F2               	movwf	??_button_timer_interrupt+1
  6737  0548  3000               	movlw	0
  6738  0549  0272               	subwf	??_button_timer_interrupt+1,w
  6739  054A  3097               	movlw	151
  6740  054B  1903               	skipnz
  6741  054C  0271               	subwf	??_button_timer_interrupt,w
  6742  054D  1803               	skipnc
  6743  054E  2D57               	goto	i1l120
  6744  054F  0873               	movf	button_timer_interrupt@bt,w
  6745  0550  0086               	movwf	6
  6746  0551  0187               	clrf	7
  6747  0552  3001               	movlw	1
  6748  0553  0781               	addwf	1,f
  6749  0554  3141               	addfsr 1,1
  6750  0555  1803               	skipnc
  6751  0556  0A81               	incf	1,f
  6752  0557                     i1l120:	
  6753                           
  6754                           ;My_header_16F.h: 90: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  6755  0557  0873               	movf	button_timer_interrupt@bt,w
  6756  0558  0086               	movwf	6
  6757  0559  0187               	clrf	7
  6758  055A  0016               	moviw fsr1++
  6759  055B  3A96               	xorlw	150
  6760  055C  00F1               	movwf	??_button_timer_interrupt
  6761  055D  0016               	moviw fsr1++
  6762  055E  04F1               	iorwf	??_button_timer_interrupt,f
  6763  055F  1D03               	btfss	3,2
  6764  0560  2D66               	goto	i1l121
  6765  0561  0873               	movf	button_timer_interrupt@bt,w
  6766  0562  3E02               	addlw	2
  6767  0563  0086               	movwf	6
  6768  0564  0187               	clrf	7
  6769  0565  1781               	bsf	1,7
  6770  0566                     i1l121:	
  6771                           
  6772                           ;My_header_16F.h: 91: if (bt->cnt_sw == 75)bt->flag.long_holding_2 = 1;
  6773  0566  0873               	movf	button_timer_interrupt@bt,w
  6774  0567  0086               	movwf	6
  6775  0568  0187               	clrf	7
  6776  0569  0016               	moviw fsr1++
  6777  056A  3A4B               	xorlw	75
  6778  056B  00F1               	movwf	??_button_timer_interrupt
  6779  056C  0016               	moviw fsr1++
  6780  056D  04F1               	iorwf	??_button_timer_interrupt,f
  6781  056E  1D03               	btfss	3,2
  6782  056F  2D75               	goto	i1l122
  6783  0570  0873               	movf	button_timer_interrupt@bt,w
  6784  0571  3E02               	addlw	2
  6785  0572  0086               	movwf	6
  6786  0573  0187               	clrf	7
  6787  0574  1701               	bsf	1,6
  6788  0575                     i1l122:	
  6789                           
  6790                           ;My_header_16F.h: 92: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  6791  0575  0873               	movf	button_timer_interrupt@bt,w
  6792  0576  0086               	movwf	6
  6793  0577  0187               	clrf	7
  6794  0578  0016               	moviw fsr1++
  6795  0579  3A1E               	xorlw	30
  6796  057A  00F1               	movwf	??_button_timer_interrupt
  6797  057B  0016               	moviw fsr1++
  6798  057C  04F1               	iorwf	??_button_timer_interrupt,f
  6799  057D  1D03               	btfss	3,2
  6800  057E  2D84               	goto	i1l123
  6801  057F  0873               	movf	button_timer_interrupt@bt,w
  6802  0580  3E02               	addlw	2
  6803  0581  0086               	movwf	6
  6804  0582  0187               	clrf	7
  6805  0583  1681               	bsf	1,5
  6806  0584                     i1l123:	
  6807                           
  6808                           ;My_header_16F.h: 93: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  6809  0584  0873               	movf	button_timer_interrupt@bt,w
  6810  0585  0086               	movwf	6
  6811  0586  0187               	clrf	7
  6812  0587  0016               	moviw fsr1++
  6813  0588  3A02               	xorlw	2
  6814  0589  00F1               	movwf	??_button_timer_interrupt
  6815  058A  0016               	moviw fsr1++
  6816  058B  04F1               	iorwf	??_button_timer_interrupt,f
  6817  058C  1D03               	btfss	3,2
  6818  058D  0008               	return
  6819  058E  0873               	movf	button_timer_interrupt@bt,w
  6820  058F  3E02               	addlw	2
  6821  0590  0086               	movwf	6
  6822  0591  0187               	clrf	7
  6823  0592  1601               	bsf	1,4
  6824                           
  6825                           ;My_header_16F.h: 94: } else {
  6826  0593  0008               	return
  6827  0594                     i1l2288:	
  6828                           
  6829                           ;My_header_16F.h: 95: if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  6830  0594  0873               	movf	button_timer_interrupt@bt,w
  6831  0595  0086               	movwf	6
  6832  0596  0187               	clrf	7
  6833  0597  3F40               	moviw [0]fsr1
  6834  0598  00F1               	movwf	??_button_timer_interrupt
  6835  0599  3F41               	moviw [1]fsr1
  6836  059A  00F2               	movwf	??_button_timer_interrupt+1
  6837  059B  3000               	movlw	0
  6838  059C  0272               	subwf	??_button_timer_interrupt+1,w
  6839  059D  3096               	movlw	150
  6840  059E  1903               	skipnz
  6841  059F  0271               	subwf	??_button_timer_interrupt,w
  6842  05A0  1C03               	skipc
  6843  05A1  2DA8               	goto	i1l2292
  6844  05A2  0873               	movf	button_timer_interrupt@bt,w
  6845  05A3  3E02               	addlw	2
  6846  05A4  0086               	movwf	6
  6847  05A5  0187               	clrf	7
  6848  05A6  1581               	bsf	1,3
  6849  05A7  2DE3               	goto	i1l2304
  6850  05A8                     i1l2292:	
  6851                           
  6852                           ;My_header_16F.h: 96: else if (bt->cnt_sw >= 75)bt->flag.long_hold_2 = 1;
  6853  05A8  0873               	movf	button_timer_interrupt@bt,w
  6854  05A9  0086               	movwf	6
  6855  05AA  0187               	clrf	7
  6856  05AB  3F40               	moviw [0]fsr1
  6857  05AC  00F1               	movwf	??_button_timer_interrupt
  6858  05AD  3F41               	moviw [1]fsr1
  6859  05AE  00F2               	movwf	??_button_timer_interrupt+1
  6860  05AF  3000               	movlw	0
  6861  05B0  0272               	subwf	??_button_timer_interrupt+1,w
  6862  05B1  304B               	movlw	75
  6863  05B2  1903               	skipnz
  6864  05B3  0271               	subwf	??_button_timer_interrupt,w
  6865  05B4  1C03               	skipc
  6866  05B5  2DBC               	goto	i1l2296
  6867  05B6  0873               	movf	button_timer_interrupt@bt,w
  6868  05B7  3E02               	addlw	2
  6869  05B8  0086               	movwf	6
  6870  05B9  0187               	clrf	7
  6871  05BA  1501               	bsf	1,2
  6872  05BB  2DE3               	goto	i1l2304
  6873  05BC                     i1l2296:	
  6874                           
  6875                           ;My_header_16F.h: 97: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  6876  05BC  0873               	movf	button_timer_interrupt@bt,w
  6877  05BD  0086               	movwf	6
  6878  05BE  0187               	clrf	7
  6879  05BF  3F40               	moviw [0]fsr1
  6880  05C0  00F1               	movwf	??_button_timer_interrupt
  6881  05C1  3F41               	moviw [1]fsr1
  6882  05C2  00F2               	movwf	??_button_timer_interrupt+1
  6883  05C3  3000               	movlw	0
  6884  05C4  0272               	subwf	??_button_timer_interrupt+1,w
  6885  05C5  301E               	movlw	30
  6886  05C6  1903               	skipnz
  6887  05C7  0271               	subwf	??_button_timer_interrupt,w
  6888  05C8  1C03               	skipc
  6889  05C9  2DD0               	goto	i1l2300
  6890  05CA  0873               	movf	button_timer_interrupt@bt,w
  6891  05CB  3E02               	addlw	2
  6892  05CC  0086               	movwf	6
  6893  05CD  0187               	clrf	7
  6894  05CE  1481               	bsf	1,1
  6895  05CF  2DE3               	goto	i1l2304
  6896  05D0                     i1l2300:	
  6897                           
  6898                           ;My_header_16F.h: 98: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  6899  05D0  0873               	movf	button_timer_interrupt@bt,w
  6900  05D1  0086               	movwf	6
  6901  05D2  0187               	clrf	7
  6902  05D3  3F40               	moviw [0]fsr1
  6903  05D4  00F1               	movwf	??_button_timer_interrupt
  6904  05D5  3F41               	moviw [1]fsr1
  6905  05D6  00F2               	movwf	??_button_timer_interrupt+1
  6906  05D7  3000               	movlw	0
  6907  05D8  0272               	subwf	??_button_timer_interrupt+1,w
  6908  05D9  3002               	movlw	2
  6909  05DA  1903               	skipnz
  6910  05DB  0271               	subwf	??_button_timer_interrupt,w
  6911  05DC  1C03               	skipc
  6912  05DD  2DE3               	goto	i1l2304
  6913  05DE  0873               	movf	button_timer_interrupt@bt,w
  6914  05DF  3E02               	addlw	2
  6915  05E0  0086               	movwf	6
  6916  05E1  0187               	clrf	7
  6917  05E2  1401               	bsf	1,0
  6918  05E3                     i1l2304:	
  6919                           
  6920                           ;My_header_16F.h: 99: bt->cnt_sw = 0;
  6921  05E3  0873               	movf	button_timer_interrupt@bt,w
  6922  05E4  0086               	movwf	6
  6923  05E5  0187               	clrf	7
  6924  05E6  3000               	movlw	0
  6925  05E7  3FC0               	movwi [0]fsr1
  6926  05E8  3FC1               	movwi [1]fsr1
  6927                           
  6928                           ;My_header_16F.h: 100: bt->flags &= 0x0F;
  6929  05E9  300F               	movlw	15
  6930  05EA  00F1               	movwf	??_button_timer_interrupt
  6931  05EB  0873               	movf	button_timer_interrupt@bt,w
  6932  05EC  3E02               	addlw	2
  6933  05ED  0086               	movwf	6
  6934  05EE  0187               	clrf	7
  6935  05EF  0871               	movf	??_button_timer_interrupt,w
  6936  05F0  0581               	andwf	1,f
  6937  05F1  0008               	return
  6938  05F2                     __end_of_button_timer_interrupt:	
  6939                           
  6940                           	psect	text45
  6941  0C1E                     __ptext45:	
  6942 ;; *************** function _adc *****************
  6943 ;; Defined at:
  6944 ;;		line 51 in file "My_header_16F.h"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  ch              1    wreg     unsigned char 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  ch              1    3[COMMON] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2    0[COMMON] unsigned int 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6958 ;;      Params:         2       0       0       0       0       0
  6959 ;;      Locals:         1       0       0       0       0       0
  6960 ;;      Temps:          1       0       0       0       0       0
  6961 ;;      Totals:         4       0       0       0       0       0
  6962 ;;Total ram usage:        4 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_isr
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           
  6972                           ;psect for function _adc
  6973  0C1E                     _adc:	
  6974                           
  6975                           ;incstack = 0
  6976                           ; Regs used in _adc: [wreg+status,2+status,0]
  6977                           ;adc@ch stored from wreg
  6978  0C1E  00F3               	movwf	adc@ch
  6979                           
  6980                           ;My_header_16F.h: 52: ADCON0bits.ADON = 1;
  6981  0C1F  0021               	movlb	1	; select bank1
  6982  0C20  141D               	bsf	29,0	;volatile
  6983                           
  6984                           ;My_header_16F.h: 53: ADCON0bits.CHS = ch;
  6985  0C21  0873               	movf	adc@ch,w
  6986  0C22  00F2               	movwf	??_adc
  6987  0C23  0DF2               	rlf	??_adc,f
  6988  0C24  0DF2               	rlf	??_adc,f
  6989  0C25  081D               	movf	29,w	;volatile
  6990  0C26  0672               	xorwf	??_adc,w
  6991  0C27  3983               	andlw	-125
  6992  0C28  0672               	xorwf	??_adc,w
  6993  0C29  009D               	movwf	29	;volatile
  6994                           
  6995                           ;My_header_16F.h: 54: _delay((unsigned long)((20)*(32000000/4000000.0)));
  6996  0C2A  3035               	movlw	53
  6997  0C2B  00F2               	movwf	??_adc
  6998  0C2C                     u399_27:	
  6999  0C2C  0BF2               	decfsz	??_adc,f
  7000  0C2D  2C2C               	goto	u399_27
  7001                           
  7002                           ;My_header_16F.h: 55: ADCON0bits.GO_nDONE = 1;
  7003  0C2E  0021               	movlb	1	; select bank1
  7004  0C2F  149D               	bsf	29,1	;volatile
  7005  0C30                     i1l113:	
  7006                           ;My_header_16F.h: 56: while (ADCON0bits.GO_nDONE);
  7007                           
  7008  0C30  189D               	btfsc	29,1	;volatile
  7009  0C31  2C30               	goto	i1l113
  7010                           
  7011                           ;My_header_16F.h: 57: return ADRES;
  7012  0C32  081C               	movf	28,w	;volatile
  7013  0C33  00F1               	movwf	?_adc+1
  7014  0C34  081B               	movf	27,w	;volatile
  7015  0C35  00F0               	movwf	?_adc
  7016  0C36  0008               	return
  7017  0C37                     __end_of_adc:	
  7018                           
  7019                           	psect	text46
  7020  0C6B                     __ptext46:	
  7021 ;; *************** function ___wmul *****************
  7022 ;; Defined at:
  7023 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  multiplier      2    4[COMMON] unsigned int 
  7026 ;;  multiplicand    2    6[COMMON] unsigned int 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  product         2    8[COMMON] unsigned int 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  2    4[COMMON] unsigned int 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7038 ;;      Params:         4       0       0       0       0       0
  7039 ;;      Locals:         2       0       0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0
  7041 ;;      Totals:         6       0       0       0       0       0
  7042 ;;Total ram usage:        6 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_isr
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           
  7052                           ;psect for function ___wmul
  7053  0C6B                     ___wmul:	
  7054                           
  7055                           ;incstack = 0
  7056                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7057  0C6B  01F8               	clrf	___wmul@product
  7058  0C6C  01F9               	clrf	___wmul@product+1
  7059  0C6D                     i1l2540:	
  7060  0C6D  1C74               	btfss	___wmul@multiplier,0
  7061  0C6E  2C73               	goto	i1l502
  7062  0C6F  0876               	movf	___wmul@multiplicand,w
  7063  0C70  07F8               	addwf	___wmul@product,f
  7064  0C71  0877               	movf	___wmul@multiplicand+1,w
  7065  0C72  3DF9               	addwfc	___wmul@product+1,f
  7066  0C73                     i1l502:	
  7067  0C73  3001               	movlw	1
  7068  0C74                     u254_25:	
  7069  0C74  35F6               	lslf	___wmul@multiplicand,f
  7070  0C75  0DF7               	rlf	___wmul@multiplicand+1,f
  7071  0C76  0B89               	decfsz	9,f
  7072  0C77  2C74               	goto	u254_25
  7073  0C78  3001               	movlw	1
  7074  0C79                     u255_25:	
  7075  0C79  36F5               	lsrf	___wmul@multiplier+1,f
  7076  0C7A  0CF4               	rrf	___wmul@multiplier,f
  7077  0C7B  0B89               	decfsz	9,f
  7078  0C7C  2C79               	goto	u255_25
  7079  0C7D  0874               	movf	___wmul@multiplier,w
  7080  0C7E  0475               	iorwf	___wmul@multiplier+1,w
  7081  0C7F  1D03               	btfss	3,2
  7082  0C80  2C6D               	goto	i1l2540
  7083  0C81  0879               	movf	___wmul@product+1,w
  7084  0C82  00F5               	movwf	?___wmul+1
  7085  0C83  0878               	movf	___wmul@product,w
  7086  0C84  00F4               	movwf	?___wmul
  7087  0C85  0008               	return
  7088  0C86                     __end_of___wmul:	
  7089                           
  7090                           	psect	text47
  7091  0756                     __ptext47:	
  7092 ;; *************** function ___lldiv *****************
  7093 ;; Defined at:
  7094 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  divisor         4    0[COMMON] unsigned long 
  7097 ;;  dividend        4    4[COMMON] unsigned long 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  quotient        4    9[COMMON] unsigned long 
  7100 ;;  counter         1   13[COMMON] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  4    0[COMMON] unsigned long 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7110 ;;      Params:         8       0       0       0       0       0
  7111 ;;      Locals:         5       0       0       0       0       0
  7112 ;;      Temps:          1       0       0       0       0       0
  7113 ;;      Totals:        14       0       0       0       0       0
  7114 ;;Total ram usage:       14 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_isr
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function ___lldiv
  7125  0756                     ___lldiv:	
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7129  0756  3000               	movlw	0
  7130  0757  00FC               	movwf	___lldiv@quotient+3
  7131  0758  3000               	movlw	0
  7132  0759  00FB               	movwf	___lldiv@quotient+2
  7133  075A  3000               	movlw	0
  7134  075B  00FA               	movwf	___lldiv@quotient+1
  7135  075C  3000               	movlw	0
  7136  075D  00F9               	movwf	___lldiv@quotient
  7137  075E  0873               	movf	___lldiv@divisor+3,w
  7138  075F  0472               	iorwf	___lldiv@divisor+2,w
  7139  0760  0471               	iorwf	___lldiv@divisor+1,w
  7140  0761  0470               	iorwf	___lldiv@divisor,w
  7141  0762  1903               	skipnz
  7142  0763  2F9F               	goto	i1l2586
  7143  0764  01FD               	clrf	___lldiv@counter
  7144  0765  0AFD               	incf	___lldiv@counter,f
  7145  0766                     i1l2572:	
  7146  0766  1BF3               	btfsc	___lldiv@divisor+3,7
  7147  0767  2F74               	goto	i1l2574
  7148  0768  3001               	movlw	1
  7149  0769                     u262_25:	
  7150  0769  35F0               	lslf	___lldiv@divisor,f
  7151  076A  0DF1               	rlf	___lldiv@divisor+1,f
  7152  076B  0DF2               	rlf	___lldiv@divisor+2,f
  7153  076C  0DF3               	rlf	___lldiv@divisor+3,f
  7154  076D  0B89               	decfsz	9,f
  7155  076E  2F69               	goto	u262_25
  7156  076F  3001               	movlw	1
  7157  0770  00F8               	movwf	??___lldiv
  7158  0771  0878               	movf	??___lldiv,w
  7159  0772  07FD               	addwf	___lldiv@counter,f
  7160  0773  2F66               	goto	i1l2572
  7161  0774                     i1l2574:	
  7162  0774  3001               	movlw	1
  7163  0775                     u264_25:	
  7164  0775  35F9               	lslf	___lldiv@quotient,f
  7165  0776  0DFA               	rlf	___lldiv@quotient+1,f
  7166  0777  0DFB               	rlf	___lldiv@quotient+2,f
  7167  0778  0DFC               	rlf	___lldiv@quotient+3,f
  7168  0779  0B89               	decfsz	9,f
  7169  077A  2F75               	goto	u264_25
  7170  077B  0873               	movf	___lldiv@divisor+3,w
  7171  077C  0277               	subwf	___lldiv@dividend+3,w
  7172  077D  1D03               	skipz
  7173  077E  2F89               	goto	u265_25
  7174  077F  0872               	movf	___lldiv@divisor+2,w
  7175  0780  0276               	subwf	___lldiv@dividend+2,w
  7176  0781  1D03               	skipz
  7177  0782  2F89               	goto	u265_25
  7178  0783  0871               	movf	___lldiv@divisor+1,w
  7179  0784  0275               	subwf	___lldiv@dividend+1,w
  7180  0785  1D03               	skipz
  7181  0786  2F89               	goto	u265_25
  7182  0787  0870               	movf	___lldiv@divisor,w
  7183  0788  0274               	subwf	___lldiv@dividend,w
  7184  0789                     u265_25:	
  7185  0789  1C03               	skipc
  7186  078A  2F94               	goto	i1l2582
  7187  078B  0870               	movf	___lldiv@divisor,w
  7188  078C  02F4               	subwf	___lldiv@dividend,f
  7189  078D  0871               	movf	___lldiv@divisor+1,w
  7190  078E  3BF5               	subwfb	___lldiv@dividend+1,f
  7191  078F  0872               	movf	___lldiv@divisor+2,w
  7192  0790  3BF6               	subwfb	___lldiv@dividend+2,f
  7193  0791  0873               	movf	___lldiv@divisor+3,w
  7194  0792  3BF7               	subwfb	___lldiv@dividend+3,f
  7195  0793  1479               	bsf	___lldiv@quotient,0
  7196  0794                     i1l2582:	
  7197  0794  3001               	movlw	1
  7198  0795                     u266_25:	
  7199  0795  36F3               	lsrf	___lldiv@divisor+3,f
  7200  0796  0CF2               	rrf	___lldiv@divisor+2,f
  7201  0797  0CF1               	rrf	___lldiv@divisor+1,f
  7202  0798  0CF0               	rrf	___lldiv@divisor,f
  7203  0799  0B89               	decfsz	9,f
  7204  079A  2F95               	goto	u266_25
  7205  079B  3001               	movlw	1
  7206  079C  02FD               	subwf	___lldiv@counter,f
  7207  079D  1D03               	btfss	3,2
  7208  079E  2F74               	goto	i1l2574
  7209  079F                     i1l2586:	
  7210  079F  087C               	movf	___lldiv@quotient+3,w
  7211  07A0  00F3               	movwf	?___lldiv+3
  7212  07A1  087B               	movf	___lldiv@quotient+2,w
  7213  07A2  00F2               	movwf	?___lldiv+2
  7214  07A3  087A               	movf	___lldiv@quotient+1,w
  7215  07A4  00F1               	movwf	?___lldiv+1
  7216  07A5  0879               	movf	___lldiv@quotient,w
  7217  07A6  00F0               	movwf	?___lldiv
  7218  07A7  0008               	return
  7219  07A8                     __end_of___lldiv:	
  7220  007E                     btemp	set	126	;btemp
  7221  007E                     int$flags	set	126
  7222  007E                     wtemp	set	126
  7223  007E                     wtemp0	set	126
  7224  0080                     wtemp1	set	128
  7225  0082                     wtemp2	set	130
  7226  0084                     wtemp3	set	132
  7227  0086                     wtemp4	set	134
  7228  0088                     wtemp5	set	136
  7229  007F                     wtemp6	set	127
  7230  007E                     ttemp	set	126
  7231  007E                     ttemp0	set	126
  7232  0081                     ttemp1	set	129
  7233  0084                     ttemp2	set	132
  7234  0087                     ttemp3	set	135
  7235  007F                     ttemp4	set	127
  7236  007E                     ltemp	set	126
  7237  007E                     ltemp0	set	126
  7238  0082                     ltemp1	set	130
  7239  0086                     ltemp2	set	134
  7240  0080                     ltemp3	set	128


Data Sizes:
    Strings     45
    Constant    0
    Data        2
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      56
    BANK1            80     24      49
    BANK2            80     51      63
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[8]), 
		 -> STR_1(CODE[7]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_RA5(BANK0[3]), sw_RA4(BANK0[3]), sw_RA3(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lldiv
    _lchika->___lwdiv
    _display->___lwdiv
    i1_LCD_Clear->i1_LCD_Command
    ___lwdiv->___lwmod
    ___aldiv->___almod
    _LCD_SetCursor->i1_LCD_Command
    i1_LCD_Command->i1_I2C_Start
    _LCD_Puts->i1_I2C_Start
    _LCD_Putc->i1_I2C_Start
    i1_I2C_Stop->i1_I2C_IdleCheck
    i1_I2C_Start->i1_I2C_IdleCheck
    i1_I2C_Send->i1_I2C_IdleCheck
    ___wmul->_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_display
    _display->___aldiv

Critical Paths under _main in BANK1

    _main->___lmul
    _main_init->_LCD_init
    _LCD_init->_LCD_Clear
    _LCD_Clear->_LCD_Command
    _LCD_Command->_I2C_Start
    _EEP_Writes->_I2C_Start
    _EEP_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0   11788
                                             12 BANK1     12    12      0
                                              0 BANK2     51    51      0
                           _EEP_Read
                         _EEP_Writes
                                _LED
                                _OUT
                             ___lmul
                         _flag_clear
                          _flag_read
                          _main_init
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     433
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2805
                           _I2C_init
                           _LCD_init
                           _adc_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             3     3      0    2650
                                              9 BANK1      3     3      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            2     2      0    1325
                                              7 BANK1      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0    1325
                                              4 BANK1      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_read                                            2     1      1     644
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _flag_clear                                           3     2      1     540
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     344
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     609
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1    1163
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEP_Writes                                           6     3      3    1730
                                              4 BANK1      6     3      3
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _EEP_Read                                             5     4      1    2445
                                              6 BANK1      5     4      1
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     717
                                              2 BANK1      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1167
                                              2 BANK1      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK1      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      96
                                              2 BANK1      3     3      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  9     9      0   12199
                                             18 BANK0      9     9      0
                            ___lldiv
                             ___wmul
                                _adc
             _button_timer_interrupt
                            _display
                             _lchika
                        _ringbuf_num
                        _ringbuf_pop
                              i1_OUT
 ---------------------------------------------------------------------------------
 (8) i1_OUT                                                2     1      1     114
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          4     4      0     298
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          2     2      0     226
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _lchika                                               5     5      0    2340
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___lwdiv
                              i1_LED
 ---------------------------------------------------------------------------------
 (9) i1_LED                                                2     1      1     166
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     478
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) _display                                              4     3      1    7120
                                             14 BANK0      4     3      1
                           _LCD_Putc
                           _LCD_Puts
                      _LCD_SetCursor
                            ___aldiv
                            ___almod
                            ___lwdiv
                            ___lwmod
                        i1_LCD_Clear
 ---------------------------------------------------------------------------------
 (9) i1_LCD_Clear                                          2     2      0     255
                                              7 COMMON     2     2      0
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4    1583
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4    1408
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___almod                                             11     3      8     474
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (9) ___aldiv                                             15     7      8     478
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _LCD_SetCursor                                        4     3      1     857
                                              7 COMMON     4     3      1
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i1_LCD_Command                                       3     3      0     255
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Puts                                             6     4      2    1435
                                              4 COMMON     6     4      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Putc                                             3     3      0     255
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Stop                                          0     0      0      22
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Start                                         2     1      1     144
                                              2 COMMON     2     1      1
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Send                                          1     1      0      44
                                              2 COMMON     1     1      0
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i1_I2C_IdleCheck                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               4     3      1     837
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _adc                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     270
                                              4 COMMON     6     2      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     340
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _EEP_Writes
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _LED
   _OUT
   ___lmul
   _flag_clear
   _flag_read
   _main_init
     _I2C_init
     _LCD_init
       _LCD_Clear
         _LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _adc_init
     _timer0_init
     _timer1_init
   _ringbuf_init

 _isr (ROOT)
   ___lldiv
   ___wmul
     _adc (ARG)
   _adc
   _button_timer_interrupt
   _display
     _LCD_Putc
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_Puts
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_SetCursor
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
     ___aldiv
       ___almod (ARG)
     ___almod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     i1_LCD_Clear
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
   _lchika
     ___awdiv
     ___lwdiv
       ___lwmod (ARG)
     i1_LED
   _ringbuf_num
   _ringbuf_pop
   i1_OUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     18      31       8       61.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     33      3F      10       78.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      B6      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:41:58 2015

                  EEP_Writes@ans 00C2                  EEP_Writes@Reg_h 00C1                  EEP_Writes@Reg_l 00BD  
                              _s 0020                                _v 0026               __size_of_I2C_Start 001C  
                    __CFG_CP$OFF 0000                     ?_LCD_Command 0070                     ___awdiv@sign 0076  
                             _sp 0159                               _ss 00A0              ___wmul@multiplicand 0076  
               EEP_Writes@data_0 00BE                 EEP_Writes@data_1 00BF                    _LCD_SetCursor 0BBA  
                    ?i1_I2C_Send 0070                      ?i1_I2C_Stop 0070                              l101 0BF8  
                            l203 0BD6                              l212 0D4C                              l404 0437  
                            l271 0E34                              l360 0ECA                              l194 0C62  
                            l266 0F97                              l370 0EED                              l267 0FB2  
                            l188 0CEC                              l364 0ED4                              l374 0DC5  
                            l367 0EDE                              l376 0DCD                              l377 0DD5  
                            l379 0DE9                              l397 0D9B                              _GIE 005F  
                            _RA3 0063                              _RA4 0064                              _LED 0DC2  
                            _RA5 0065                     __CFG_CPD$OFF 0000                              _OUT 0EC1  
                            _adc 0C1E                              _cnt 00AF                              _cut 0153  
                            _isr 0004              __size_of_I2C_rStart 001A             __size_of_I2C_Receive 0020  
                   __CFG_BORV$LO 0000                              wreg 0009                flag_clear@bit_and 00B9  
                   __CFG_LVP$OFF 0000                             LED@b 00BA                             ?_LED 00B9  
                           ?_OUT 00B9                     ?i1_I2C_Start 0072                             ?_adc 0070  
                           l3102 0D7B                             l3110 0D8F                             l3104 0D81  
                           l3106 0D88                             l3060 0ECD                             l3070 0EE1  
                           l3134 0F25                             l3064 0ED7                             l3056 0EC4  
                           l3080 0D18                             l3138 0F2F                             l3410 0536  
                           l3076 0DDD                             l3092 0D27                             l3084 0D1D  
                           l3404 050A                             l3350 0438                             l3088 0D22  
                           l3344 03BD                             l3098 0D29                             l3370 047C  
                           l3362 0463                             l3372 0482                             l3376 0491  
                           l3386 04B5                             OUT@b 00BA                             l2924 0C01  
                           l3396 04EC                             l2878 0B8E                             ?_isr 0070  
                           STR_1 0809                             STR_2 0801                             STR_3 0817  
                           STR_4 0810                             STR_5 081D                             STR_6 0817  
                           STR_7 0810                             STR_8 081D                             STR_9 0822  
                           u3320 0DCA                             u3340 0DD2                             u3405 0F37  
                           u3360 0DDA                             u3395 0F30                             u3745 03E9  
                           u3907 0FEA                             u3755 0406                             u3917 0BA4  
                           u3845 04C7                             u3765 041E                             u3927 0D52  
                           u3937 0E3A                             u3947 0FB8                             u3887 03B1  
                           u3897 0FC4                             _SPEN 0CEF                             _TXIE 048C  
                           _TXIF 008C                             _WPUB 020D                     __CFG_WRT$OFF 0000  
                           _cnt0 002C                             _cntf 00B2                             _main 0372  
       button_timer_interrupt@bt 0073               __size_of_LCD_Clear 000F                      main@ringbuf 0120  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
               __end_of_I2C_Send 0BDC                             btemp 007E                             isr@i 0055  
               __end_of_I2C_Stop 0B62                             ltemp 007E                 __end_of_I2C_init 0B7E  
                           start 0167                             ttemp 007E                             wtemp 007E  
                  __CFG_IESO$OFF 0000                            ??_LED 00BA                 __end_of_EEP_Read 0FBD  
         __size_of_I2C_IdleCheck 000F                            ??_OUT 00BA                            ??_adc 0072  
              ??i1_I2C_IdleCheck 0070                            ??_isr 004D                    __CFG_PLLEN$ON 0000  
               __end_of_LCD_Putc 0CBD                 __end_of_LCD_Puts 0F1C                   ?_LCD_SetCursor 0077  
               __end_of_LCD_init 1000                     ?i1_LCD_Clear 0070                  __end_of___aldiv 0674  
                __end_of___almod 0756                            ?_main 0070                  __end_of___awdiv 07F9  
                          _ADRES 009B                            STR_10 0817                            STR_11 0810  
                          STR_12 081D                            STR_13 07F9                      LCD_Putc@ans 0076  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                  __end_of___lldiv 07A8  
                ___awdiv@divisor 0070                            _LATB0 0868                            _LATB3 086B  
                          _LATA6 0866                            _LATB5 086D                            _LATA7 0867  
                          _LATB6 086E                  __end_of___lwdiv 0F80                            i1l120 0557  
                          i1l113 0C30                            i1l121 0566                            i1l122 0575  
                          i1l123 0584                            i1l203 0BB4                            i1l212 0CD1  
                          i1l224 0CB5                            i1l321 0163                            i1l306 0025  
                          i1l307 0023                            i1l309 00B5                            i1l502 0C73  
                          i1l360 0DF2                  __end_of___lwmod 0E94                            i1l370 0E12  
                          i1l355 0371                            i1l188 0C48                            i1l364 0DFB  
                          i1l374 0D9E                            i1l367 0E04                            i1l376 0DA6  
                          i1l377 0DAE                            i1l570 06F9                            i1l379 0DC1  
                          i1l557 0603                  ___awdiv@counter 0075                            i1_LED 0D9C  
                    LCD_Puts@ans 0078                            _RCSTA 019D                            i1_OUT 0DEA  
                          _TMR1H 0017                            _TMR1L 0016                            _TRISA 008C  
                          _TRISB 008D                            _TXREG 019A                            _TXSTA 019E  
            __size_of_EEP_Writes 002A              ___lmul@multiplicand 00BD                   __CFG_FCMEN$OFF 0000  
                __end_of_display 0372                            adc@ch 0073                            _cnt1s 002E  
                          main@i 0152                __end_of_I2C_Start 0CF5                   __CFG_BOREN$OFF 0000  
                   LCD_Command@c 00BE                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
            __size_ofi1_I2C_Send 0010              __size_ofi1_I2C_Stop 0006                   __CFG_MCLRE$OFF 0000  
                __initialization 0169                     __end_of_main 053D              ringbuf_init@bufsize 00BA  
                         ??_main 00C5                __end_of_LCD_Clear 0BAA                           ?i1_LED 0070  
                         ?i1_OUT 0070                           _BCL1IF 0093                    _I2C_IdleCheck 0B8C  
               ___awdiv@dividend 0072                           i1LED@b 0071                           _ANSELA 018C  
                         _ANSELB 018D              i1I2C_IdleCheck@mask 0071                 __end_of_adc_init 0BF1  
                         i1l2120 065D                           i1l2200 07F4                           i1l2106 0624  
                         i1l2300 05D0                           i1l2124 066B                           i1l2116 0652  
                         i1l2108 0632                           i1l2062 0F01                           i1l2142 070E  
                         i1l2222 0F72                           i1l2214 0F54                           i1l2304 05E3  
                         i1l2064 0F19                           i1l2144 071C                           i1l2152 073F  
                         i1l2136 0706                           i1l2216 0F60                           i1l2240 0E7A  
                         i1l2226 0F7B                           i1l3026 0EBF                           i1l2156 074D  
                         i1l2148 0734                           i1l2244 0E86                           i1l2420 0197  
                         i1l2260 0DB6                           i1l2404 06C8                           i1l2412 06E3  
                         u200_25 07E4                           i1l2238 0E6E                           i1l2430 01C0  
                         i1l2174 07BD                           i1l2342 0E56                           i1l2248 0E8F  
                         i1l2192 07E3                           i1l2184 07C5                           i1l2168 07B2  
                         i1l2600 0DFE                           i1l3304 00E4                           i1l2098 0614  
                         i1l2450 0267                           i1l2426 01B0                           i1l2434 01C8  
                         i1l2186 07D1                           i1l3314 015B                           i1l2540 0C6D  
                         i1l2292 05A8                           i1l2460 0331                           i1l2428 01B8  
                         i1l2436 01D4                           i1l2196 07EC                           i1l2462 0339  
                         i1l2470 0355                           i1l2446 0257                           i1l2454 026F  
                         i1l2606 0E07                           i1l2296 05BC                           i1l2288 0594  
                         i1l2464 0341                           i1l2448 025F                           i1l2456 027B  
                         i1l2572 0766                           i1l2468 0349                           i1l2476 0362  
                         i1l3276 00A3                           i1l3268 0052                           i1l2582 0794  
                         i1l2574 0774                           i1l1926 0B69                           i1l2398 068E  
                         i1l3294 00D1                           i1l3278 00AC                           i1l2592 0DEC  
                         i1l2586 079F                           i1OUT@b 0071                           i1l2596 0DF5  
                         u211_25 0E71                           u220_20 0DB3                           u204_25 0F57  
                         u213_25 0E80                           u206_25 0F61                           u214_25 0E87  
                         u207_25 0F6B                           u216_20 0DA3                           u208_25 0F73  
                         u218_20 0DAB                           _FVRCON 0117                           u180_25 0647  
                         u244_25 06BC                           u181_25 0653                           u262_25 0769  
                         u254_25 0C74                           u190_25 0735                           u255_25 0C79  
                         u264_25 0775                           u265_25 0789                           u177_25 0627  
                         u266_25 0795                           u370_25 0113                           u179_25 0633  
                         u187_25 0711                           u371_25 0146                           u196_25 07C8  
                         u189_25 072A                           u198_25 07D2                           u199_25 07DC  
                         u369_25 00F5           __size_ofi1_LCD_Command 001C                           _OSCCON 0099  
                         u395_27 0B86                           u396_27 0CD6                           u397_27 0F16  
                         u398_27 0CBA                           u399_27 0C2C                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IF 008B                   i1LCD_Command@c 0075  
                   ??_I2C_rStart 00BF                   __CFG_PWRTE$OFF 0000                     ?_ringbuf_pop 0070  
                   ?_ringbuf_num 0070                           ___lmul 0F1C                        ??___aldiv 007B  
                      ??___almod 0078                           ___wmul 0C6B                        ??___awdiv 0074  
                ??_LCD_SetCursor 0078                        ??___lldiv 0078                     ?_timer0_init 0070  
                   ?_timer1_init 0070                        ??___lwdiv 007A                        ??___lwmod 0074  
                         _lchika 0674                 ___awdiv@quotient 0077                           _sw_RA3 0032  
                         _sw_RA4 0035                           _sw_RA5 0038                           _tx_buf 00B5  
           __size_of_LCD_Command 0020                        ??_display 004A                        ?_I2C_Send 0070  
                      ?_I2C_Stop 0070                    i1I2C_Start@rw 0072                        ?_I2C_init 0070  
             __end_of_I2C_rStart 0C6B                   ?_I2C_IdleCheck 0070                        ?_EEP_Read 00BF  
           __size_ofi1_I2C_Start 001A          __end_of__initialization 0188                        ?_LCD_Putc 0070  
                      ?_LCD_Puts 0074                        ?_LCD_init 0070                     ??_EEP_Writes 00C0  
                  __end_ofi1_LED 0DC2                    __end_ofi1_OUT 0E13                   __pcstackCOMMON 0070  
                      LCD_Putc@c 0075                     __pidataBANK0 0002                        LCD_Puts@s 0074  
                  i1_LCD_Command 0CBD                     ??i1_I2C_Send 0072                     ??i1_I2C_Stop 0072  
                        ??i1_LED 0071                          ??i1_OUT 0071               __size_of_flag_read 0020  
                 _OPTION_REGbits 0095                       ??_I2C_Send 00BB             __size_ofi1_LCD_Clear 000E  
                     ??_I2C_Stop 00BB                       ??_I2C_init 00B9               __end_of_EEP_Writes 0E3D  
             __size_of_main_init 0023                       __pbssBANK0 0020                       ??_EEP_Read 00C0  
                     __pbssBANK1 00A0                       __pbssBANK2 0153                  i1_I2C_IdleCheck 0B68  
                     ??_LCD_Putc 0074                       ??_LCD_Puts 0076                       ??_LCD_init 00C2  
             __end_ofi1_I2C_Send 0BBA               __end_ofi1_I2C_Stop 0B5C                       __pmaintext 0372  
                        ?___lmul 00B9                          ?___wmul 0074                       __pintentry 0004  
                        ?_lchika 0070                   ?i1_LCD_Command 0070                       _flag_clear 0D78  
                 ___lmul@product 00C1                    ??_I2C_Receive 00BB                     I2C_Send@data 00BB  
                      ?_adc_init 0070                  ??_I2C_IdleCheck 00B9                          _SSP1ADD 0212  
                        _SSP1BUF 0211             timer1_init@prescaler 00BA         ??_button_timer_interrupt 0071  
                      _I2C_Start 0CD9                   I2C_Receive@ack 00BC                __end_of_flag_read 0D35  
                        ___aldiv 05F2                          ___almod 06E9                    ?_ringbuf_init 00B9  
                        ___awdiv 07A8                  __size_of___lmul 0030                          ___lldiv 0756  
                __size_of___wmul 001B                          ___lwdiv 0F4C                          ___lwmod 0E68  
           __size_of_ringbuf_pop 002D             __size_of_ringbuf_num 002B                  __CFG_STVREN$OFF 0000  
       LCD_SetCursor@row_offsets 0078                  __size_of_lchika 0075                __end_of_main_init 0D78  
           __size_of_timer0_init 0015                       ??_adc_init 00B9             __size_of_timer1_init 0018  
                        __ptext1 0C86                          __ptext2 0D55                          __ptext3 0C06  
                        __ptext4 0BF1                          __ptext5 0BDC                          __ptext6 0FBD  
                        __ptext7 0B9B                          __ptext8 0D35                          __ptext9 0B73  
                        _display 018C                     __size_of_LED 0028                        _T1CONbits 0018  
                   __size_of_OUT 002D                   i1I2C_Send@data 0072                     __size_of_adc 0019  
                   __size_of_isr 0163                 ___aldiv@dividend 003F                        _LCD_Clear 0B9B  
            __end_of_I2C_Receive 0D15          __end_ofi1_I2C_IdleCheck 0B73                          clrloop0 0B63  
                        lchika@i 003F             end_of_initialization 0188                 LCD_SetCursor@col 007A  
               LCD_SetCursor@row 0077                   LCD_Command@ans 00BF                       ?_I2C_Start 00BB  
                ___lldiv@divisor 0070                     I2C_rStart@rw 00BD                  ___lldiv@counter 007D  
                 ??_ringbuf_init 00BB                 ___aldiv@quotient 0045                  ??i1_LCD_Command 0074  
                   __pstringtext 07F9                      ?_flag_clear 00B9                       _print_port 0031  
               __CFG_FOSC$INTOSC 0000                       ?_LCD_Clear 0070                __size_of_I2C_Send 0012  
              __size_of_I2C_Stop 0006                __size_of_I2C_init 000B  __size_of_button_timer_interrupt 00B5  
              __size_of_EEP_Read 003D                __size_of_LCD_Putc 001C                __size_of_LCD_Puts 002E  
              __size_of_LCD_init 0043                   ringbuf_init@rb 00BC                   ringbuf_pop@ret 0072  
                  ??_LCD_Command 00BD                   __end_of___lmul 0F4C                   __end_of___wmul 0C86  
          __end_of_LCD_SetCursor 0BCA                   __end_of_lchika 06E9                      _I2C_Receive 0CF5  
            start_initialization 0169                      __end_of_LED 0DEA                      __end_of_OUT 0EEE  
                    __end_of_adc 0C37                      __end_of_isr 0167                 ?i1_I2C_IdleCheck 0070  
                  ??i1_I2C_Start 0073              __size_of_flag_clear 0024                      ??_I2C_Start 00BC  
                       ??___lmul 00C1                         ??___wmul 0078                      __pdataBANK0 0056  
                       ??_lchika 003B           _button_timer_interrupt 053D                    ??i1_LCD_Clear 0077  
            __end_of_LCD_Command 0D55                __size_of_adc_init 0015                      _change_flag 00AC  
                      ___latbits 0001                         LED@value 00B9                    __pcstackBANK0 003B  
                  __pcstackBANK1 00B9                    __pcstackBANK2 0120                   flag_clear@port 00BB  
                    ??_LCD_Clear 00C0             __end_of_ringbuf_init 0CA1                    adc_init@p_ref 00B9  
            __end_ofi1_I2C_Start 0C51                 ___lwdiv@dividend 0078                         ?___aldiv 003B  
                       ?___almod 0070                         ?___awdiv 0070                        _flag_read 0D15  
                       ?___lldiv 0070                         ?___lwdiv 0076                         ?___lwmod 0070  
               ___almod@dividend 0074                         ?_display 0049                   __size_ofi1_LED 0026  
                      _main_init 0D55                   __size_ofi1_OUT 0029                      I2C_Start@rw 00BB  
                       _I2C_Send 0BCA                         OUT@value 00B9                         _I2C_Stop 0B5C  
                       _I2C_init 0B73            __end_of_I2C_IdleCheck 0B9B              __end_ofi1_LCD_Clear 0B8C  
               ___lwdiv@quotient 007B                         _EEP_Read 0F80                  ___aldiv@divisor 003B  
       ringbuf_init@internal_buf 00B9                  ___aldiv@counter 0043                   ___wmul@product 0078  
                       _LCD_Putc 0CA1                         _LCD_Puts 0EEE                         _LCD_init 0FBD  
                      clear_ram0 0B62                         _PIE1bits 0091                         _PIR1bits 0011  
                  ??_ringbuf_pop 0070                    ??_ringbuf_num 0070                         _SSP1CON1 0215  
                       _SSP1CON2 0216                    ??_timer0_init 00B9                    ??_timer1_init 00B9  
                     ?_flag_read 00B9                         _SSP1STAT 0214                      _LCD_Command 0D35  
                   ??_flag_clear 00BA                 i1LCD_Command@ans 0076                       _ADCON0bits 009D  
                     _ADCON1bits 009E                ___wmul@multiplier 0074   button_timer_interrupt@sw_value 0070  
                     ?_main_init 0070                        display@co 0049                    ringbuf_pop@rb 0073  
                  ringbuf_num@rb 0071                    I2C_Start@adrs 00BC                ___lmul@multiplier 00B9  
                    i1_I2C_Start 0C37               LCD_SetCursor@F3069 0056                  I2C_Receive@data 00BD  
             __end_of_flag_clear 0D9C                       _I2C_rStart 0C51                 __size_of___aldiv 0082  
               __size_of___almod 006D            __end_ofi1_LCD_Command 0CD9                 __size_of___awdiv 0051  
              I2C_IdleCheck@mask 00BA                 __size_of___lldiv 0052                 __size_of___lwdiv 0034  
               __size_of___lwmod 002C                         _adc_init 0BDC                      i1_LCD_Clear 0B7E  
                   ?_I2C_Receive 0070              __end_of_ringbuf_pop 0EC1              __end_of_ringbuf_num 0E68  
               flag_read@bit_and 00B9                       i1LED@value 0070              __end_of_timer0_init 0C06  
          __size_of_ringbuf_init 001B              __end_of_timer1_init 0C1E                 __size_of_display 01E6  
                ___lwdiv@divisor 0076                  ___lwdiv@counter 007D             timer0_init@prescaler 00BA  
                       __ptext10 0D15                         __ptext11 0D78                         __ptext20 0BCA  
                       __ptext12 0F1C                         __ptext21 0CF5                         __ptext13 0EC1  
                       __ptext30 018C                         __ptext22 0B8C                         __ptext14 0DC2  
                       __ptext31 0B7E                         __ptext15 0E13                         __ptext40 0B56  
                       __ptext32 0E68                         __ptext24 0DEA                         __ptext16 0F80  
                       __ptext41 0C37                         __ptext33 0F4C                         __ptext25 0E94  
                       __ptext17 0C51                         __ptext42 0BAA                         __ptext34 06E9  
                       __ptext26 0E3D                         __ptext18 0B5C                         __ptext43 0B68  
                       __ptext35 05F2                         __ptext27 0674                         __ptext19 0CD9  
                       __ptext44 053D                         __ptext36 0BBA                         __ptext28 0D9C  
                       __ptext45 0C1E                         __ptext37 0CBD                         __ptext29 07A8  
                       __ptext46 0C6B                         __ptext38 0EEE                         __ptext47 0756  
                       __ptext39 0CA1                     _SSP1CON2bits 0216                  ___almod@divisor 0070  
                ___almod@counter 0079                    EEP_Read@Reg_h 00C1                    EEP_Read@Reg_l 00BF  
                 I2C_rStart@adrs 00BB                    __size_of_main 01CB                    flag_read@port 00BA  
                     _EEP_Writes 0E13          ?_button_timer_interrupt 0070                         int$flags 007E  
                    ??_flag_read 00BA                     _ringbuf_init 0C86                         display@i 004C  
                     i1_I2C_Send 0BAA                       i1OUT@value 0070                       i1_I2C_Stop 0B56  
                    ??_main_init 00C5                       _INTCONbits 000B                         intlevel1 0000  
               ___lwmod@dividend 0072           __size_of_LCD_SetCursor 0010                 ___lldiv@dividend 0074  
                i1I2C_Start@adrs 0073                __CFG_CLKOUTEN$OFF 0000                      ?_I2C_rStart 00BB  
       __size_ofi1_I2C_IdleCheck 000B                     EEP_Read@data 00C2                    _print_content 0030  
 __end_of_button_timer_interrupt 05F2                      _ringbuf_pop 0E94                      _ringbuf_num 0E3D  
                    _timer0_init 0BF1                      _timer1_init 0C06                 ___lldiv@quotient 0079  
                ___lwmod@divisor 0070                  ___lwmod@counter 0075                      EEP_Read@ans 00C3  
                   ___aldiv@sign 0044                     ___almod@sign 007A                      ?_EEP_Writes 00BD  
