

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 12 20:01:17 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0219                     	;# 
   166  021A                     	;# 
   167  021B                     	;# 
   168  021C                     	;# 
   169  021D                     	;# 
   170  021E                     	;# 
   171  021F                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0294                     	;# 
   177  0295                     	;# 
   178  0295                     	;# 
   179  0296                     	;# 
   180  0298                     	;# 
   181  0298                     	;# 
   182  0299                     	;# 
   183  029A                     	;# 
   184  029B                     	;# 
   185  029C                     	;# 
   186  029C                     	;# 
   187  029D                     	;# 
   188  029E                     	;# 
   189  029E                     	;# 
   190  0311                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223                           
   224                           	psect	idataBANK0
   225  07FB                     __pidataBANK0:	
   226                           
   227                           ;initializer for LCD_SetCursor@F3069
   228  07FB  3400               	retlw	0
   229  07FC  3440               	retlw	64
   230  000B                     _INTCONbits	set	11
   231  0011                     _PIR1bits	set	17
   232  0018                     _T1CONbits	set	24
   233  0017                     _TMR1H	set	23
   234  0016                     _TMR1L	set	22
   235  0093                     _BCL1IF	set	147
   236  005F                     _GIE	set	95
   237  0063                     _RA3	set	99
   238  0064                     _RA4	set	100
   239  0065                     _RA5	set	101
   240  008B                     _SSP1IF	set	139
   241  008C                     _TXIF	set	140
   242  009B                     _ADRES	set	155
   243  009D                     _ADCON0bits	set	157
   244  009E                     _ADCON1bits	set	158
   245  0095                     _OPTION_REGbits	set	149
   246  0099                     _OSCCON	set	153
   247  0091                     _PIE1bits	set	145
   248  008C                     _TRISA	set	140
   249  008D                     _TRISB	set	141
   250  048C                     _TXIE	set	1164
   251  0117                     _FVRCON	set	279
   252  0866                     _LATA6	set	2150
   253  0867                     _LATA7	set	2151
   254  0868                     _LATB0	set	2152
   255  086B                     _LATB3	set	2155
   256  086D                     _LATB5	set	2157
   257  086E                     _LATB6	set	2158
   258  018C                     _ANSELA	set	396
   259  018D                     _ANSELB	set	397
   260  019D                     _RCSTA	set	413
   261  019C                     _SPBRGH	set	412
   262  019B                     _SPBRGL	set	411
   263  019A                     _TXREG	set	410
   264  019E                     _TXSTA	set	414
   265  0CFB                     _BRG16	set	3323
   266  0CEF                     _SPEN	set	3311
   267  0212                     _SSP1ADD	set	530
   268  0211                     _SSP1BUF	set	529
   269  0215                     _SSP1CON1	set	533
   270  0216                     _SSP1CON2	set	534
   271  0216                     _SSP1CON2bits	set	534
   272  0214                     _SSP1STAT	set	532
   273  020D                     _WPUB	set	525
   274                           
   275                           	psect	stringtext
   276  0800                     __pstringtext:	
   277  0800                     __stringdata:	
   278  0800                     STR_13:	
   279  0800  3452               	retlw	82	;'R'
   280  0801  3465               	retlw	101	;'e'
   281  0802  3473               	retlw	115	;'s'
   282  0803  3465               	retlw	101	;'e'
   283  0804  3474               	retlw	116	;'t'
   284  0805  3465               	retlw	101	;'e'
   285  0806  3464               	retlw	100	;'d'
   286  0807  3400               	retlw	0
   287  0808                     STR_2:	
   288  0808  3453               	retlw	83	;'S'
   289  0809  3474               	retlw	116	;'t'
   290  080A  3461               	retlw	97	;'a'
   291  080B  3474               	retlw	116	;'t'
   292  080C  3469               	retlw	105	;'i'
   293  080D  346F               	retlw	111	;'o'
   294  080E  346E               	retlw	110	;'n'
   295  080F  3400               	retlw	0
   296  0810                     STR_1:	
   297  0810  3443               	retlw	67	;'C'
   298  0811  3468               	retlw	104	;'h'
   299  0812  3461               	retlw	97	;'a'
   300  0813  3472               	retlw	114	;'r'
   301  0814  3467               	retlw	103	;'g'
   302  0815  3465               	retlw	101	;'e'
   303  0816  3400               	retlw	0
   304  0817                     STR_4:	
   305  0817  3443               	retlw	67	;'C'
   306  0818  3465               	retlw	101	;'e'
   307  0819  346E               	retlw	110	;'n'
   308  081A  3474               	retlw	116	;'t'
   309  081B  3465               	retlw	101	;'e'
   310  081C  3472               	retlw	114	;'r'
   311  081D  3400               	retlw	0
   312  081E                     STR_3:	
   313  081E  3452               	retlw	82	;'R'
   314  081F  3469               	retlw	105	;'i'
   315  0820  3467               	retlw	103	;'g'
   316  0821  3468               	retlw	104	;'h'
   317  0822  3474               	retlw	116	;'t'
   318  0823  3400               	retlw	0
   319  0824                     STR_5:	
   320  0824  344C               	retlw	76	;'L'
   321  0825  3465               	retlw	101	;'e'
   322  0826  3466               	retlw	102	;'f'
   323  0827  3474               	retlw	116	;'t'
   324  0828  3400               	retlw	0
   325  0829                     STR_9:	
   326  0829  346D               	retlw	109	;'m'
   327  082A  3441               	retlw	65	;'A'
   328  082B  3468               	retlw	104	;'h'
   329  082C  3400               	retlw	0
   330  082D                     __end_of__stringdata:	
   331                           
   332                           ; #config settings
   333  0000                     
   334                           	psect	cinit
   335  0167                     start_initialization:	
   336  0167                     __initialization:	
   337                           
   338                           ; Clear objects allocated to BANK0
   339  0167  3020               	movlw	low __pbssBANK0
   340  0168  0084               	movwf	4
   341  0169  3000               	movlw	high __pbssBANK0
   342  016A  0085               	movwf	5
   343  016B  301B               	movlw	27
   344  016C  318B  234A  3181   	fcall	clear_ram0
   345                           
   346                           ; Clear objects allocated to BANK1
   347  016F  30A0               	movlw	low __pbssBANK1
   348  0170  0084               	movwf	4
   349  0171  3000               	movlw	high __pbssBANK1
   350  0172  0085               	movwf	5
   351  0173  3019               	movlw	25
   352  0174  318B  234A  3181   	fcall	clear_ram0
   353                           
   354                           ; Clear objects allocated to BANK2
   355  0177  3053               	movlw	low __pbssBANK2
   356  0178  0084               	movwf	4
   357  0179  3001               	movlw	high __pbssBANK2
   358  017A  0085               	movwf	5
   359  017B  300C               	movlw	12
   360  017C  318B  234A  3181   	fcall	clear_ram0
   361                           
   362                           ; Initialize objects allocated to BANK0
   363  017F  3187  27FB  3181   	fcall	__pidataBANK0	;fetch initializer
   364  0182  00D6               	movwf	__pdataBANK0& (0+127)
   365  0183  3187  27FC         	fcall	__pidataBANK0+1	;fetch initializer
   366  0185  00D7               	movwf	(__pdataBANK0+1)& (0+127)
   367  0186                     end_of_initialization:	
   368                           ;End of C runtime variable initialization code
   369                           
   370  0186                     __end_of__initialization:	
   371  0186  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   372  0187  0020               	movlb	0
   373  0188  3183  2B7C         	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssBANK0
   376  0020                     __pbssBANK0:	
   377  0020                     _s:	
   378  0020                     	ds	6
   379  0026                     _v:	
   380  0026                     	ds	6
   381  002C                     _cnt0:	
   382  002C                     	ds	2
   383  002E                     _cnt1s:	
   384  002E                     	ds	2
   385  0030                     _print_content:	
   386  0030                     	ds	1
   387  0031                     _print_port:	
   388  0031                     	ds	1
   389  0032                     _sw_RA3:	
   390  0032                     	ds	3
   391  0035                     _sw_RA4:	
   392  0035                     	ds	3
   393  0038                     _sw_RA5:	
   394  0038                     	ds	3
   395                           
   396                           	psect	dataBANK0
   397  0056                     __pdataBANK0:	
   398  0056                     LCD_SetCursor@F3069:	
   399  0056                     	ds	2
   400                           
   401                           	psect	bssBANK1
   402  00A0                     __pbssBANK1:	
   403  00A0                     _ss:	
   404  00A0                     	ds	12
   405  00AC                     _change_flag:	
   406  00AC                     	ds	3
   407  00AF                     _cnt:	
   408  00AF                     	ds	3
   409  00B2                     _cntf:	
   410  00B2                     	ds	3
   411  00B5                     _tx_buf:	
   412  00B5                     	ds	4
   413                           
   414                           	psect	bssBANK2
   415  0153                     __pbssBANK2:	
   416  0153                     _cut:	
   417  0153                     	ds	6
   418  0159                     _sp:	
   419  0159                     	ds	6
   420                           
   421                           	psect	clrtext
   422  0B4A                     clear_ram0:	
   423                           ;	Called with FSR0 containing the base address, and
   424                           ;	WREG with the size to clear
   425                           
   426  0B4A  0064               	clrwdt	;clear the watchdog before getting into this loop
   427  0B4B                     clrloop0:	
   428  0B4B  0180               	clrf	0	;clear RAM location pointed to by FSR
   429  0B4C  3101               	addfsr 0,1
   430  0B4D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   431  0B4E  2B4B               	goto	clrloop0	;have we reached the end yet?
   432  0B4F  3400               	retlw	0	;all done for this memory range, return
   433                           
   434                           	psect	cstackBANK2
   435  0120                     __pcstackBANK2:	
   436  0120                     main@ringbuf:	
   437                           
   438                           ; 50 bytes @ 0x0
   439  0120                     	ds	50
   440  0152                     main@i:	
   441                           
   442                           ; 1 bytes @ 0x32
   443  0152                     	ds	1
   444                           
   445                           	psect	cstackBANK1
   446  00B9                     __pcstackBANK1:	
   447  00B9                     ?_OUT:	
   448  00B9                     ?_LED:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  00B9                     ??_timer0_init:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  00B9                     ??_timer1_init:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  00B9                     ??_adc_init:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  00B9                     ?_ringbuf_init:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  00B9                     ??_I2C_IdleCheck:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  00B9                     ??_I2C_init:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  00B9                     ?_flag_clear:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  00B9                     ?_flag_read:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  00B9                     ?___lmul:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  00B9                     adc_init@p_ref:	
   479                           ; 4 bytes @ 0x0
   480                           
   481  00B9                     ringbuf_init@internal_buf:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  00B9                     OUT@value:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  00B9                     LED@value:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  00B9                     flag_read@bit_and:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  00B9                     flag_clear@bit_and:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  00B9                     ___lmul@multiplier:	
   497                           ; 1 bytes @ 0x0
   498                           
   499                           
   500                           ; 4 bytes @ 0x0
   501  00B9                     	ds	1
   502  00BA                     ??_OUT:	
   503  00BA                     ??_LED:	
   504                           ; 0 bytes @ 0x1
   505                           
   506  00BA                     ??_flag_read:	
   507                           ; 0 bytes @ 0x1
   508                           
   509  00BA                     ??_flag_clear:	
   510                           ; 0 bytes @ 0x1
   511                           
   512  00BA                     timer0_init@prescaler:	
   513                           ; 0 bytes @ 0x1
   514                           
   515  00BA                     timer1_init@prescaler:	
   516                           ; 1 bytes @ 0x1
   517                           
   518  00BA                     ringbuf_init@bufsize:	
   519                           ; 1 bytes @ 0x1
   520                           
   521  00BA                     I2C_IdleCheck@mask:	
   522                           ; 1 bytes @ 0x1
   523                           
   524  00BA                     OUT@b:	
   525                           ; 1 bytes @ 0x1
   526                           
   527  00BA                     LED@b:	
   528                           ; 1 bytes @ 0x1
   529                           
   530  00BA                     flag_read@port:	
   531                           ; 1 bytes @ 0x1
   532                           
   533                           
   534                           ; 1 bytes @ 0x1
   535  00BA                     	ds	1
   536  00BB                     ??_ringbuf_init:	
   537  00BB                     ??_I2C_Stop:	
   538                           ; 0 bytes @ 0x2
   539                           
   540  00BB                     ??_I2C_Send:	
   541                           ; 0 bytes @ 0x2
   542                           
   543  00BB                     ??_I2C_Receive:	
   544                           ; 0 bytes @ 0x2
   545                           
   546  00BB                     ?_I2C_Start:	
   547                           ; 0 bytes @ 0x2
   548                           
   549  00BB                     ?_I2C_rStart:	
   550                           ; 1 bytes @ 0x2
   551                           
   552  00BB                     I2C_Start@rw:	
   553                           ; 1 bytes @ 0x2
   554                           
   555  00BB                     I2C_Send@data:	
   556                           ; 1 bytes @ 0x2
   557                           
   558  00BB                     flag_clear@port:	
   559                           ; 1 bytes @ 0x2
   560                           
   561  00BB                     I2C_rStart@adrs:	
   562                           ; 1 bytes @ 0x2
   563                           
   564                           
   565                           ; 2 bytes @ 0x2
   566  00BB                     	ds	1
   567  00BC                     ??_I2C_Start:	
   568  00BC                     ringbuf_init@rb:	
   569                           ; 0 bytes @ 0x3
   570                           
   571  00BC                     I2C_Start@adrs:	
   572                           ; 1 bytes @ 0x3
   573                           
   574  00BC                     I2C_Receive@ack:	
   575                           ; 1 bytes @ 0x3
   576                           
   577                           
   578                           ; 1 bytes @ 0x3
   579  00BC                     	ds	1
   580  00BD                     ??_LCD_Command:	
   581  00BD                     ?_EEP_Writes:	
   582                           ; 0 bytes @ 0x4
   583                           
   584  00BD                     I2C_Receive@data:	
   585                           ; 0 bytes @ 0x4
   586                           
   587  00BD                     EEP_Writes@Reg_l:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  00BD                     I2C_rStart@rw:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  00BD                     ___lmul@multiplicand:	
   594                           ; 2 bytes @ 0x4
   595                           
   596                           
   597                           ; 4 bytes @ 0x4
   598  00BD                     	ds	1
   599  00BE                     LCD_Command@c:	
   600  00BE                     EEP_Writes@data_0:	
   601                           ; 1 bytes @ 0x5
   602                           
   603                           
   604                           ; 1 bytes @ 0x5
   605  00BE                     	ds	1
   606  00BF                     ??_I2C_rStart:	
   607  00BF                     ?_EEP_Read:	
   608                           ; 0 bytes @ 0x6
   609                           
   610  00BF                     LCD_Command@ans:	
   611                           ; 1 bytes @ 0x6
   612                           
   613  00BF                     EEP_Read@Reg_l:	
   614                           ; 1 bytes @ 0x6
   615                           
   616  00BF                     EEP_Writes@data_1:	
   617                           ; 1 bytes @ 0x6
   618                           
   619                           
   620                           ; 1 bytes @ 0x6
   621  00BF                     	ds	1
   622  00C0                     ??_LCD_Clear:	
   623  00C0                     ??_EEP_Read:	
   624                           ; 0 bytes @ 0x7
   625                           
   626  00C0                     ??_EEP_Writes:	
   627                           ; 0 bytes @ 0x7
   628                           
   629                           
   630                           ; 0 bytes @ 0x7
   631  00C0                     	ds	1
   632  00C1                     ??___lmul:	
   633  00C1                     EEP_Read@Reg_h:	
   634                           ; 0 bytes @ 0x8
   635                           
   636  00C1                     EEP_Writes@Reg_h:	
   637                           ; 1 bytes @ 0x8
   638                           
   639  00C1                     ___lmul@product:	
   640                           ; 1 bytes @ 0x8
   641                           
   642                           
   643                           ; 4 bytes @ 0x8
   644  00C1                     	ds	1
   645  00C2                     ??_LCD_init:	
   646  00C2                     EEP_Read@data:	
   647                           ; 0 bytes @ 0x9
   648                           
   649  00C2                     EEP_Writes@ans:	
   650                           ; 1 bytes @ 0x9
   651                           
   652                           
   653                           ; 1 bytes @ 0x9
   654  00C2                     	ds	1
   655  00C3                     EEP_Read@ans:	
   656                           
   657                           ; 1 bytes @ 0xA
   658  00C3                     	ds	2
   659  00C5                     ??_main_init:	
   660  00C5                     ??_main:	
   661                           ; 0 bytes @ 0xC
   662                           
   663                           
   664                           ; 0 bytes @ 0xC
   665  00C5                     	ds	12
   666                           
   667                           	psect	cstackCOMMON
   668  0070                     __pcstackCOMMON:	
   669  0070                     ?_lchika:	
   670  0070                     ?_timer0_init:	
   671                           ; 0 bytes @ 0x0
   672                           
   673  0070                     ?_timer1_init:	
   674                           ; 0 bytes @ 0x0
   675                           
   676  0070                     ?_adc_init:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ?_button_timer_interrupt:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ??_ringbuf_pop:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ??_ringbuf_num:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_I2C_IdleCheck:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_init:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_I2C_Stop:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_LCD_Command:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_LCD_Clear:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_LCD_Putc:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_LCD_init:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_isr:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_main_init:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?i1_I2C_IdleCheck:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ??i1_I2C_IdleCheck:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?i1_I2C_Stop:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?i1_LCD_Command:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?i1_LCD_Clear:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?i1_OUT:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?i1_LED:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_ringbuf_pop:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ?_ringbuf_num:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_I2C_Send:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_I2C_Receive:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?i1_I2C_Send:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_adc:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_main:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ?___awdiv:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     ?___lwmod:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0070                     ?___almod:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     ?___lldiv:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0070                     button_timer_interrupt@sw_value:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0070                     i1OUT@value:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     i1LED@value:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ___awdiv@divisor:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ___lwmod@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ___almod@divisor:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     ___lldiv@divisor:	
   788                           ; 4 bytes @ 0x0
   789                           
   790                           
   791                           ; 4 bytes @ 0x0
   792  0070                     	ds	1
   793  0071                     ??_button_timer_interrupt:	
   794  0071                     ??i1_OUT:	
   795                           ; 0 bytes @ 0x1
   796                           
   797  0071                     ??i1_LED:	
   798                           ; 0 bytes @ 0x1
   799                           
   800  0071                     ringbuf_num@rb:	
   801                           ; 0 bytes @ 0x1
   802                           
   803  0071                     i1I2C_IdleCheck@mask:	
   804                           ; 1 bytes @ 0x1
   805                           
   806  0071                     i1OUT@b:	
   807                           ; 1 bytes @ 0x1
   808                           
   809  0071                     i1LED@b:	
   810                           ; 1 bytes @ 0x1
   811                           
   812                           
   813                           ; 1 bytes @ 0x1
   814  0071                     	ds	1
   815  0072                     ??_adc:	
   816  0072                     ??i1_I2C_Stop:	
   817                           ; 0 bytes @ 0x2
   818                           
   819  0072                     ??i1_I2C_Send:	
   820                           ; 0 bytes @ 0x2
   821                           
   822  0072                     ?i1_I2C_Start:	
   823                           ; 0 bytes @ 0x2
   824                           
   825  0072                     ringbuf_pop@ret:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0072                     i1I2C_Start@rw:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0072                     i1I2C_Send@data:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0072                     ___awdiv@dividend:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0072                     ___lwmod@dividend:	
   838                           ; 2 bytes @ 0x2
   839                           
   840                           
   841                           ; 2 bytes @ 0x2
   842  0072                     	ds	1
   843  0073                     ??i1_I2C_Start:	
   844  0073                     adc@ch:	
   845                           ; 0 bytes @ 0x3
   846                           
   847  0073                     button_timer_interrupt@bt:	
   848                           ; 1 bytes @ 0x3
   849                           
   850  0073                     ringbuf_pop@rb:	
   851                           ; 1 bytes @ 0x3
   852                           
   853  0073                     i1I2C_Start@adrs:	
   854                           ; 1 bytes @ 0x3
   855                           
   856                           
   857                           ; 1 bytes @ 0x3
   858  0073                     	ds	1
   859  0074                     ??_LCD_Putc:	
   860  0074                     ?_LCD_Puts:	
   861                           ; 0 bytes @ 0x4
   862                           
   863  0074                     ??___awdiv:	
   864                           ; 0 bytes @ 0x4
   865                           
   866  0074                     ??___lwmod:	
   867                           ; 0 bytes @ 0x4
   868                           
   869  0074                     ??i1_LCD_Command:	
   870                           ; 0 bytes @ 0x4
   871                           
   872  0074                     ?___wmul:	
   873                           ; 0 bytes @ 0x4
   874                           
   875  0074                     LCD_Puts@s:	
   876                           ; 2 bytes @ 0x4
   877                           
   878  0074                     ___wmul@multiplier:	
   879                           ; 2 bytes @ 0x4
   880                           
   881  0074                     ___almod@dividend:	
   882                           ; 2 bytes @ 0x4
   883                           
   884  0074                     ___lldiv@dividend:	
   885                           ; 4 bytes @ 0x4
   886                           
   887                           
   888                           ; 4 bytes @ 0x4
   889  0074                     	ds	1
   890  0075                     LCD_Putc@c:	
   891  0075                     ___awdiv@counter:	
   892                           ; 1 bytes @ 0x5
   893                           
   894  0075                     ___lwmod@counter:	
   895                           ; 1 bytes @ 0x5
   896                           
   897  0075                     i1LCD_Command@c:	
   898                           ; 1 bytes @ 0x5
   899                           
   900                           
   901                           ; 1 bytes @ 0x5
   902  0075                     	ds	1
   903  0076                     ??_LCD_Puts:	
   904  0076                     ?___lwdiv:	
   905                           ; 0 bytes @ 0x6
   906                           
   907  0076                     LCD_Putc@ans:	
   908                           ; 2 bytes @ 0x6
   909                           
   910  0076                     ___awdiv@sign:	
   911                           ; 1 bytes @ 0x6
   912                           
   913  0076                     i1LCD_Command@ans:	
   914                           ; 1 bytes @ 0x6
   915                           
   916  0076                     ___wmul@multiplicand:	
   917                           ; 1 bytes @ 0x6
   918                           
   919  0076                     ___lwdiv@divisor:	
   920                           ; 2 bytes @ 0x6
   921                           
   922                           
   923                           ; 2 bytes @ 0x6
   924  0076                     	ds	1
   925  0077                     ?_LCD_SetCursor:	
   926  0077                     ??i1_LCD_Clear:	
   927                           ; 0 bytes @ 0x7
   928                           
   929  0077                     LCD_SetCursor@row:	
   930                           ; 0 bytes @ 0x7
   931                           
   932  0077                     ___awdiv@quotient:	
   933                           ; 1 bytes @ 0x7
   934                           
   935                           
   936                           ; 2 bytes @ 0x7
   937  0077                     	ds	1
   938  0078                     ??_LCD_SetCursor:	
   939  0078                     ??___wmul:	
   940                           ; 0 bytes @ 0x8
   941                           
   942  0078                     ??___almod:	
   943                           ; 0 bytes @ 0x8
   944                           
   945  0078                     ??___lldiv:	
   946                           ; 0 bytes @ 0x8
   947                           
   948  0078                     LCD_SetCursor@row_offsets:	
   949                           ; 0 bytes @ 0x8
   950                           
   951  0078                     LCD_Puts@ans:	
   952                           ; 2 bytes @ 0x8
   953                           
   954  0078                     ___wmul@product:	
   955                           ; 2 bytes @ 0x8
   956                           
   957  0078                     ___lwdiv@dividend:	
   958                           ; 2 bytes @ 0x8
   959                           
   960                           
   961                           ; 2 bytes @ 0x8
   962  0078                     	ds	1
   963  0079                     ___almod@counter:	
   964  0079                     ___lldiv@quotient:	
   965                           ; 1 bytes @ 0x9
   966                           
   967                           
   968                           ; 4 bytes @ 0x9
   969  0079                     	ds	1
   970  007A                     ??___lwdiv:	
   971  007A                     LCD_SetCursor@col:	
   972                           ; 0 bytes @ 0xA
   973                           
   974  007A                     ___almod@sign:	
   975                           ; 1 bytes @ 0xA
   976                           
   977                           
   978                           ; 1 bytes @ 0xA
   979  007A                     	ds	1
   980  007B                     ??___aldiv:	
   981  007B                     ___lwdiv@quotient:	
   982                           ; 0 bytes @ 0xB
   983                           
   984                           
   985                           ; 2 bytes @ 0xB
   986  007B                     	ds	2
   987  007D                     ___lldiv@counter:	
   988  007D                     ___lwdiv@counter:	
   989                           ; 1 bytes @ 0xD
   990                           
   991                           
   992                           ; 1 bytes @ 0xD
   993  007D                     	ds	1
   994                           
   995                           	psect	cstackBANK0
   996  003B                     __pcstackBANK0:	
   997  003B                     ??_lchika:	
   998  003B                     ?___aldiv:	
   999                           ; 0 bytes @ 0x0
  1000                           
  1001  003B                     ___aldiv@divisor:	
  1002                           ; 4 bytes @ 0x0
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x0
  1006  003B                     	ds	4
  1007  003F                     lchika@i:	
  1008  003F                     ___aldiv@dividend:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x4
  1013  003F                     	ds	4
  1014  0043                     ___aldiv@counter:	
  1015                           
  1016                           ; 1 bytes @ 0x8
  1017  0043                     	ds	1
  1018  0044                     ___aldiv@sign:	
  1019                           
  1020                           ; 1 bytes @ 0x9
  1021  0044                     	ds	1
  1022  0045                     ___aldiv@quotient:	
  1023                           
  1024                           ; 4 bytes @ 0xA
  1025  0045                     	ds	4
  1026  0049                     ?_display:	
  1027  0049                     display@co:	
  1028                           ; 0 bytes @ 0xE
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0xE
  1032  0049                     	ds	1
  1033  004A                     ??_display:	
  1034                           
  1035                           ; 0 bytes @ 0xF
  1036  004A                     	ds	2
  1037  004C                     display@i:	
  1038                           
  1039                           ; 1 bytes @ 0x11
  1040  004C                     	ds	1
  1041  004D                     ??_isr:	
  1042                           
  1043                           ; 0 bytes @ 0x12
  1044  004D                     	ds	8
  1045  0055                     isr@i:	
  1046                           
  1047                           ; 1 bytes @ 0x1A
  1048  0055                     	ds	1
  1049                           
  1050                           	psect	maintext
  1051  037C                     __pmaintext:	
  1052 ;;
  1053 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1054 ;;
  1055 ;; *************** function _main *****************
  1056 ;; Defined at:
  1057 ;;		line 303 in file "PIC16F1827-ChargeStation4-02.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  ringbuf        50    0[BANK2 ] unsigned char [50]
  1062 ;;  i               1   50[BANK2 ] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2  402[COMMON] int 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 17F/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1072 ;;      Params:         0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0      51       0       0
  1074 ;;      Temps:          0       0      12       0       0       0
  1075 ;;      Totals:         0       0      12      51       0       0
  1076 ;;Total ram usage:       63 bytes
  1077 ;; Hardware stack levels required when called:   12
  1078 ;; This function calls:
  1079 ;;		_EEP_Read
  1080 ;;		_EEP_Writes
  1081 ;;		_LED
  1082 ;;		_OUT
  1083 ;;		___lmul
  1084 ;;		_flag_clear
  1085 ;;		_flag_read
  1086 ;;		_main_init
  1087 ;;		_ringbuf_init
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _main
  1095  037C                     _main:	
  1096                           
  1097                           ;PIC16F1827-ChargeStation4-02.c: 304: main_init();
  1098                           
  1099                           ;incstack = 0
  1100                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1101  037C  318D  2543  3183   	fcall	_main_init
  1102                           
  1103                           ;PIC16F1827-ChargeStation4-02.c: 306: OUT(0, 1);
  1104  037F  0021               	movlb	1	; select bank1
  1105  0380  01B9               	clrf	OUT@value^(0+128)
  1106  0381  0AB9               	incf	OUT@value^(0+128),f
  1107  0382  3000               	movlw	0
  1108  0383  318E  2656  3183   	fcall	_OUT
  1109                           
  1110                           ;PIC16F1827-ChargeStation4-02.c: 307: OUT(1, 1);
  1111  0386  0021               	movlb	1	; select bank1
  1112  0387  01B9               	clrf	OUT@value^(0+128)
  1113  0388  0AB9               	incf	OUT@value^(0+128),f
  1114  0389  3001               	movlw	1
  1115  038A  318E  2656  3183   	fcall	_OUT
  1116                           
  1117                           ;PIC16F1827-ChargeStation4-02.c: 308: OUT(2, 1);
  1118  038D  0021               	movlb	1	; select bank1
  1119  038E  01B9               	clrf	OUT@value^(0+128)
  1120  038F  0AB9               	incf	OUT@value^(0+128),f
  1121  0390  3002               	movlw	2
  1122  0391  318E  2656  3183   	fcall	_OUT
  1123                           
  1124                           ;PIC16F1827-ChargeStation4-02.c: 309: LED(0, 1);
  1125  0394  0021               	movlb	1	; select bank1
  1126  0395  01B9               	clrf	LED@value^(0+128)
  1127  0396  0AB9               	incf	LED@value^(0+128),f
  1128  0397  3000               	movlw	0
  1129  0398  318D  25B0  3183   	fcall	_LED
  1130                           
  1131                           ;PIC16F1827-ChargeStation4-02.c: 310: LED(1, 1);
  1132  039B  0021               	movlb	1	; select bank1
  1133  039C  01B9               	clrf	LED@value^(0+128)
  1134  039D  0AB9               	incf	LED@value^(0+128),f
  1135  039E  3001               	movlw	1
  1136  039F  318D  25B0  3183   	fcall	_LED
  1137                           
  1138                           ;PIC16F1827-ChargeStation4-02.c: 311: LED(2, 1);
  1139  03A2  0021               	movlb	1	; select bank1
  1140  03A3  01B9               	clrf	LED@value^(0+128)
  1141  03A4  0AB9               	incf	LED@value^(0+128),f
  1142  03A5  3002               	movlw	2
  1143  03A6  318D  25B0  3183   	fcall	_LED
  1144                           
  1145                           ;PIC16F1827-ChargeStation4-02.c: 313: uint8_t ringbuf[50];
  1146                           ;PIC16F1827-ChargeStation4-02.c: 314: ringbuf_init(&tx_buf, ringbuf, sizeof (ringbuf));
  1147  03A9  3020               	movlw	main@ringbuf& (0+255)
  1148  03AA  0021               	movlb	1	; select bank1
  1149  03AB  00C5               	movwf	??_main^(0+128)
  1150  03AC  0845               	movf	??_main^(0+128),w
  1151  03AD  00B9               	movwf	ringbuf_init@internal_buf^(0+128)
  1152  03AE  3032               	movlw	50
  1153  03AF  00C6               	movwf	(??_main+1)^(0+128)
  1154  03B0  0846               	movf	(??_main+1)^(0+128),w
  1155  03B1  00BA               	movwf	ringbuf_init@bufsize^(0+128)
  1156  03B2  30B5               	movlw	_tx_buf& (0+255)
  1157  03B3  318C  2457  3183   	fcall	_ringbuf_init
  1158                           
  1159                           ;PIC16F1827-ChargeStation4-02.c: 315: _delay((unsigned long)((10)*(32000000/4000.0)));
  1160  03B6  3068               	movlw	104
  1161  03B7  0021               	movlb	1	; select bank1
  1162  03B8  00C6               	movwf	(??_main^(0+128)+1)
  1163  03B9  30E4               	movlw	228
  1164  03BA  00C5               	movwf	??_main^(0+128)
  1165  03BB                     u3887:	
  1166  03BB  0BC5               	decfsz	??_main^(0+128),f
  1167  03BC  2BBB               	goto	u3887
  1168  03BD  0BC6               	decfsz	(??_main^(0+128)+1),f
  1169  03BE  2BBB               	goto	u3887
  1170  03BF  0000               	nop
  1171                           
  1172                           ;PIC16F1827-ChargeStation4-02.c: 317: GIE = 0;
  1173  03C0  138B               	bcf	11,7	;volatile
  1174                           
  1175                           ;PIC16F1827-ChargeStation4-02.c: 318: uint8_t i;
  1176                           ;PIC16F1827-ChargeStation4-02.c: 319: for (i = 0; i < 3; i++) {
  1177  03C1  0022               	movlb	2	; select bank2
  1178  03C2  01D2               	clrf	main@i^(0+256)
  1179  03C3  3003               	movlw	3
  1180  03C4  0252               	subwf	main@i^(0+256),w
  1181  03C5  1803               	btfsc	3,0
  1182  03C6  2C41               	goto	l404
  1183  03C7                     l3303:	
  1184                           
  1185                           ;PIC16F1827-ChargeStation4-02.c: 320: ss[i] = (0xFF & EEP_Read(i, 1))+(0xFF00 & (EEP_Rea
      +                          d(i, 0) << 8));
  1186  03C7  0021               	movlb	1	; select bank1
  1187  03C8  01BF               	clrf	EEP_Read@Reg_l^(0+128)
  1188  03C9  0022               	movlb	2	; select bank2
  1189  03CA  0852               	movf	main@i^(0+256),w
  1190  03CB  318F  2771  3183   	fcall	_EEP_Read
  1191  03CE  0021               	movlb	1	; select bank1
  1192  03CF  00C5               	movwf	??_main^(0+128)
  1193  03D0  01C6               	clrf	(??_main^(0+128)+1)
  1194  03D1  0845               	movf	??_main^(0+128),w
  1195  03D2  00C6               	movwf	(??_main^(0+128)+1)
  1196  03D3  01C5               	clrf	??_main^(0+128)
  1197  03D4  3000               	movlw	0
  1198  03D5  0545               	andwf	??_main^(0+128),w
  1199  03D6  00C8               	movwf	(??_main+3)^(0+128)
  1200  03D7  30FF               	movlw	255
  1201  03D8  0546               	andwf	(??_main+1)^(0+128),w
  1202  03D9  00C9               	movwf	(??_main+4)^(0+128)
  1203  03DA  01BF               	clrf	EEP_Read@Reg_l^(0+128)
  1204  03DB  0ABF               	incf	EEP_Read@Reg_l^(0+128),f
  1205  03DC  0022               	movlb	2	; select bank2
  1206  03DD  0852               	movf	main@i^(0+256),w
  1207  03DE  318F  2771  3183   	fcall	_EEP_Read
  1208  03E1  0021               	movlb	1	; select bank1
  1209  03E2  0748               	addwf	(??_main+3)^(0+128),w
  1210  03E3  00CA               	movwf	(??_main+5)^(0+128)
  1211  03E4  0849               	movf	(??_main+4)^(0+128),w
  1212  03E5  1803               	skipnc
  1213  03E6  0A49               	incf	(??_main+4)^(0+128),w
  1214  03E7  00CB               	movwf	((??_main+5)^(0+128)+1)
  1215  03E8  084A               	movf	(??_main+5)^(0+128),w
  1216  03E9  00CC               	movwf	(??_main+7)^(0+128)
  1217  03EA  084B               	movf	(??_main+6)^(0+128),w
  1218  03EB  00CD               	movwf	((??_main+7)^(0+128)+1)
  1219  03EC  01CE               	clrf	((??_main+7)^(0+128)+2)
  1220  03ED  01CF               	clrf	((??_main+7)^(0+128)+3)
  1221  03EE  0022               	movlb	2	; select bank2
  1222  03EF  0852               	movf	main@i^(0+256),w
  1223  03F0  0021               	movlb	1	; select bank1
  1224  03F1  00D0               	movwf	(??_main+11)^(0+128)
  1225  03F2  3001               	movlw	1
  1226  03F3                     u3745:	
  1227  03F3  35D0               	lslf	(??_main+11)^(0+128),f
  1228  03F4  3EFF               	addlw	-1
  1229  03F5  1D03               	skipz
  1230  03F6  2BF3               	goto	u3745
  1231  03F7  3550               	lslf	(??_main+11)^(0+128),w
  1232  03F8  3EA0               	addlw	_ss& (0+255)
  1233  03F9  0086               	movwf	6
  1234  03FA  0187               	clrf	7
  1235  03FB  084C               	movf	(??_main+7)^(0+128),w
  1236  03FC  3FC0               	movwi [0]fsr1
  1237  03FD  084D               	movf	(??_main+8)^(0+128),w
  1238  03FE  3FC1               	movwi [1]fsr1
  1239  03FF  084E               	movf	(??_main+9)^(0+128),w
  1240  0400  3FC2               	movwi [2]fsr1
  1241  0401  084F               	movf	(??_main+10)^(0+128),w
  1242  0402  3FC3               	movwi [3]fsr1
  1243                           
  1244                           ;PIC16F1827-ChargeStation4-02.c: 323: ss[i] *= 3600;
  1245  0403  3000               	movlw	0
  1246  0404  00BC               	movwf	(___lmul@multiplier+3)^(0+128)
  1247  0405  3000               	movlw	0
  1248  0406  00BB               	movwf	(___lmul@multiplier+2)^(0+128)
  1249  0407  300E               	movlw	14
  1250  0408  00BA               	movwf	(___lmul@multiplier+1)^(0+128)
  1251  0409  3010               	movlw	16
  1252  040A  00B9               	movwf	___lmul@multiplier^(0+128)
  1253  040B  0022               	movlb	2	; select bank2
  1254  040C  0852               	movf	main@i^(0+256),w
  1255  040D  0021               	movlb	1	; select bank1
  1256  040E  00C5               	movwf	??_main^(0+128)
  1257  040F  3001               	movlw	1
  1258  0410                     u3755:	
  1259  0410  35C5               	lslf	??_main^(0+128),f
  1260  0411  3EFF               	addlw	-1
  1261  0412  1D03               	skipz
  1262  0413  2C10               	goto	u3755
  1263  0414  3545               	lslf	??_main^(0+128),w
  1264  0415  3EA0               	addlw	_ss& (0+255)
  1265  0416  0086               	movwf	6
  1266  0417  0187               	clrf	7
  1267  0418  3F40               	moviw [0]fsr1
  1268  0419  00BD               	movwf	___lmul@multiplicand^(0+128)
  1269  041A  3F41               	moviw [1]fsr1
  1270  041B  00BE               	movwf	(___lmul@multiplicand+1)^(0+128)
  1271  041C  3F42               	moviw [2]fsr1
  1272  041D  00BF               	movwf	(___lmul@multiplicand+2)^(0+128)
  1273  041E  3F43               	moviw [3]fsr1
  1274  041F  00C0               	movwf	(___lmul@multiplicand+3)^(0+128)
  1275  0420  318F  270B  3183   	fcall	___lmul
  1276  0423  0022               	movlb	2	; select bank2
  1277  0424  0852               	movf	main@i^(0+256),w
  1278  0425  0021               	movlb	1	; select bank1
  1279  0426  00C6               	movwf	(??_main+1)^(0+128)
  1280  0427  3001               	movlw	1
  1281  0428                     u3765:	
  1282  0428  35C6               	lslf	(??_main+1)^(0+128),f
  1283  0429  3EFF               	addlw	-1
  1284  042A  1D03               	skipz
  1285  042B  2C28               	goto	u3765
  1286  042C  3546               	lslf	(??_main+1)^(0+128),w
  1287  042D  3EA0               	addlw	_ss& (0+255)
  1288  042E  0086               	movwf	6
  1289  042F  0187               	clrf	7
  1290  0430  0839               	movf	?___lmul^(0+128),w
  1291  0431  3FC0               	movwi [0]fsr1
  1292  0432  083A               	movf	(?___lmul+1)^(0+128),w
  1293  0433  3FC1               	movwi [1]fsr1
  1294  0434  083B               	movf	(?___lmul+2)^(0+128),w
  1295  0435  3FC2               	movwi [2]fsr1
  1296  0436  083C               	movf	(?___lmul+3)^(0+128),w
  1297  0437  3FC3               	movwi [3]fsr1
  1298  0438  3001               	movlw	1
  1299  0439  00C5               	movwf	??_main^(0+128)
  1300  043A  0845               	movf	??_main^(0+128),w
  1301  043B  0022               	movlb	2	; select bank2
  1302  043C  07D2               	addwf	main@i^(0+256),f
  1303  043D  3003               	movlw	3
  1304  043E  0252               	subwf	main@i^(0+256),w
  1305  043F  1C03               	skipc
  1306  0440  2BC7               	goto	l3303
  1307  0441                     l404:	
  1308                           
  1309                           ;PIC16F1827-ChargeStation4-02.c: 324: }
  1310                           ;PIC16F1827-ChargeStation4-02.c: 325: INTCONbits.GIE = 1;
  1311  0441  178B               	bsf	11,7	;volatile
  1312  0442                     l3309:	
  1313                           ;PIC16F1827-ChargeStation4-02.c: 326: while (1) {
  1314                           
  1315                           
  1316                           ;PIC16F1827-ChargeStation4-02.c: 327: for (i = 0; i < 3; i++) {
  1317  0442  01D2               	clrf	main@i^(0+256)
  1318  0443                     L1:	
  1319  0443  3003               	movlw	3
  1320  0444  0252               	subwf	main@i^(0+256),w
  1321  0445  1803               	btfsc	3,0
  1322  0446  2C42               	goto	l3309
  1323                           
  1324                           ;PIC16F1827-ChargeStation4-02.c: 328: if (flag_read(i, 0x10)) {
  1325  0447  3010               	movlw	16
  1326  0448  0021               	movlb	1	; select bank1
  1327  0449  00C5               	movwf	??_main^(0+128)
  1328  044A  0845               	movf	??_main^(0+128),w
  1329  044B  00B9               	movwf	flag_read@bit_and^(0+128)
  1330  044C  0022               	movlb	2	; select bank2
  1331  044D  0852               	movf	main@i^(0+256),w
  1332  044E  318D  2503  3183   	fcall	_flag_read
  1333  0451  3A00               	xorlw	0
  1334  0452  1903               	skipnz
  1335  0453  2C6D               	goto	l3321
  1336                           
  1337                           ;PIC16F1827-ChargeStation4-02.c: 329: OUT(i, 1);
  1338  0454  0021               	movlb	1	; select bank1
  1339  0455  01B9               	clrf	OUT@value^(0+128)
  1340  0456  0AB9               	incf	OUT@value^(0+128),f
  1341  0457  0022               	movlb	2	; select bank2
  1342  0458  0852               	movf	main@i^(0+256),w
  1343  0459  318E  2656  3183   	fcall	_OUT
  1344                           
  1345                           ;PIC16F1827-ChargeStation4-02.c: 330: LED(i, 1);
  1346  045C  0021               	movlb	1	; select bank1
  1347  045D  01B9               	clrf	LED@value^(0+128)
  1348  045E  0AB9               	incf	LED@value^(0+128),f
  1349  045F  0022               	movlb	2	; select bank2
  1350  0460  0852               	movf	main@i^(0+256),w
  1351  0461  318D  25B0  3183   	fcall	_LED
  1352                           
  1353                           ;PIC16F1827-ChargeStation4-02.c: 331: cut[i] = 0;
  1354  0464  0022               	movlb	2	; select bank2
  1355  0465  3552               	lslf	main@i^(0+256),w
  1356  0466  3E53               	addlw	_cut& (0+255)
  1357  0467  0086               	movwf	6
  1358  0468  3001               	movlw	1	; select bank2/3
  1359  0469  0087               	movwf	7
  1360  046A  3000               	movlw	0
  1361  046B  3FC0               	movwi [0]fsr1
  1362  046C  3FC1               	movwi [1]fsr1
  1363  046D                     l3321:	
  1364                           
  1365                           ;PIC16F1827-ChargeStation4-02.c: 332: }
  1366                           ;PIC16F1827-ChargeStation4-02.c: 333: if (flag_read(i, 0x01)) {
  1367  046D  0021               	movlb	1	; select bank1
  1368  046E  01B9               	clrf	flag_read@bit_and^(0+128)
  1369  046F  0AB9               	incf	flag_read@bit_and^(0+128),f
  1370  0470  0022               	movlb	2	; select bank2
  1371  0471  0852               	movf	main@i^(0+256),w
  1372  0472  318D  2503  3183   	fcall	_flag_read
  1373  0475  3A00               	xorlw	0
  1374  0476  1903               	skipnz
  1375  0477  2C9B               	goto	l3333
  1376                           
  1377                           ;PIC16F1827-ChargeStation4-02.c: 334: print_port = i;
  1378  0478  0022               	movlb	2	; select bank2
  1379  0479  0852               	movf	main@i^(0+256),w
  1380  047A  0021               	movlb	1	; select bank1
  1381  047B  00C5               	movwf	??_main^(0+128)
  1382  047C  0845               	movf	??_main^(0+128),w
  1383  047D  0020               	movlb	0	; select bank0
  1384  047E  00B1               	movwf	_print_port
  1385                           
  1386                           ;PIC16F1827-ChargeStation4-02.c: 335: if (print_content == 2) print_content = 1;
  1387  047F  0830               	movf	_print_content,w
  1388  0480  3A02               	xorlw	2
  1389  0481  1D03               	skipz
  1390  0482  2C86               	goto	l3327
  1391  0483  01B0               	clrf	_print_content
  1392  0484  0AB0               	incf	_print_content,f
  1393  0485  2C8C               	goto	l3329
  1394  0486                     l3327:	
  1395                           
  1396                           ;PIC16F1827-ChargeStation4-02.c: 336: else print_content++;
  1397  0486  3001               	movlw	1
  1398  0487  0021               	movlb	1	; select bank1
  1399  0488  00C5               	movwf	??_main^(0+128)
  1400  0489  0845               	movf	??_main^(0+128),w
  1401  048A  0020               	movlb	0	; select bank0
  1402  048B  07B0               	addwf	_print_content,f
  1403  048C                     l3329:	
  1404                           
  1405                           ;PIC16F1827-ChargeStation4-02.c: 337: LED(i, 1);
  1406  048C  0021               	movlb	1	; select bank1
  1407  048D  01B9               	clrf	LED@value^(0+128)
  1408  048E  0AB9               	incf	LED@value^(0+128),f
  1409  048F  0022               	movlb	2	; select bank2
  1410  0490  0852               	movf	main@i^(0+256),w
  1411  0491  318D  25B0  3183   	fcall	_LED
  1412                           
  1413                           ;PIC16F1827-ChargeStation4-02.c: 338: flag_clear(i, 0x00);
  1414  0494  0021               	movlb	1	; select bank1
  1415  0495  01B9               	clrf	flag_clear@bit_and^(0+128)
  1416  0496  0022               	movlb	2	; select bank2
  1417  0497  0852               	movf	main@i^(0+256),w
  1418  0498  318D  2566  3183   	fcall	_flag_clear
  1419  049B                     l3333:	
  1420                           
  1421                           ;PIC16F1827-ChargeStation4-02.c: 339: }
  1422                           ;PIC16F1827-ChargeStation4-02.c: 340: if (flag_read(i, 0x40)) {
  1423  049B  3040               	movlw	64
  1424  049C  0021               	movlb	1	; select bank1
  1425  049D  00C5               	movwf	??_main^(0+128)
  1426  049E  0845               	movf	??_main^(0+128),w
  1427  049F  00B9               	movwf	flag_read@bit_and^(0+128)
  1428  04A0  0022               	movlb	2	; select bank2
  1429  04A1  0852               	movf	main@i^(0+256),w
  1430  04A2  318D  2503  3183   	fcall	_flag_read
  1431  04A5  3A00               	xorlw	0
  1432  04A6  1903               	skipnz
  1433  04A7  2CBF               	goto	l3343
  1434                           
  1435                           ;PIC16F1827-ChargeStation4-02.c: 341: print_port = i;
  1436  04A8  0022               	movlb	2	; select bank2
  1437  04A9  0852               	movf	main@i^(0+256),w
  1438  04AA  0021               	movlb	1	; select bank1
  1439  04AB  00C5               	movwf	??_main^(0+128)
  1440  04AC  0845               	movf	??_main^(0+128),w
  1441  04AD  0020               	movlb	0	; select bank0
  1442  04AE  00B1               	movwf	_print_port
  1443                           
  1444                           ;PIC16F1827-ChargeStation4-02.c: 342: print_content = 0;
  1445  04AF  01B0               	clrf	_print_content
  1446                           
  1447                           ;PIC16F1827-ChargeStation4-02.c: 343: LED(i, 1);
  1448  04B0  0021               	movlb	1	; select bank1
  1449  04B1  01B9               	clrf	LED@value^(0+128)
  1450  04B2  0AB9               	incf	LED@value^(0+128),f
  1451  04B3  0022               	movlb	2	; select bank2
  1452  04B4  0852               	movf	main@i^(0+256),w
  1453  04B5  318D  25B0  3183   	fcall	_LED
  1454                           
  1455                           ;PIC16F1827-ChargeStation4-02.c: 344: flag_clear(i, 0x00);
  1456  04B8  0021               	movlb	1	; select bank1
  1457  04B9  01B9               	clrf	flag_clear@bit_and^(0+128)
  1458  04BA  0022               	movlb	2	; select bank2
  1459  04BB  0852               	movf	main@i^(0+256),w
  1460  04BC  318D  2566  3183   	fcall	_flag_clear
  1461  04BF                     l3343:	
  1462                           
  1463                           ;PIC16F1827-ChargeStation4-02.c: 345: }
  1464                           ;PIC16F1827-ChargeStation4-02.c: 346: if (flag_read(i, 0x80)) {
  1465  04BF  3080               	movlw	128
  1466  04C0  0021               	movlb	1	; select bank1
  1467  04C1  00C5               	movwf	??_main^(0+128)
  1468  04C2  0845               	movf	??_main^(0+128),w
  1469  04C3  00B9               	movwf	flag_read@bit_and^(0+128)
  1470  04C4  0022               	movlb	2	; select bank2
  1471  04C5  0852               	movf	main@i^(0+256),w
  1472  04C6  318D  2503  3183   	fcall	_flag_read
  1473  04C9  3A00               	xorlw	0
  1474  04CA  1903               	skipnz
  1475  04CB  2CF6               	goto	l3353
  1476                           
  1477                           ;PIC16F1827-ChargeStation4-02.c: 347: ss[i] = 0;
  1478  04CC  0022               	movlb	2	; select bank2
  1479  04CD  0852               	movf	main@i^(0+256),w
  1480  04CE  0021               	movlb	1	; select bank1
  1481  04CF  00C5               	movwf	??_main^(0+128)
  1482  04D0  3001               	movlw	1
  1483  04D1                     u3845:	
  1484  04D1  35C5               	lslf	??_main^(0+128),f
  1485  04D2  3EFF               	addlw	-1
  1486  04D3  1D03               	skipz
  1487  04D4  2CD1               	goto	u3845
  1488  04D5  3545               	lslf	??_main^(0+128),w
  1489  04D6  3EA0               	addlw	_ss& (0+255)
  1490  04D7  0086               	movwf	6
  1491  04D8  0187               	clrf	7
  1492  04D9  3000               	movlw	0
  1493  04DA  3FC0               	movwi [0]fsr1
  1494  04DB  3000               	movlw	0
  1495  04DC  3FC1               	movwi [1]fsr1
  1496  04DD  3FC2               	movwi [2]fsr1
  1497  04DE  3FC3               	movwi [3]fsr1
  1498                           
  1499                           ;PIC16F1827-ChargeStation4-02.c: 348: print_content = 3;
  1500  04DF  3003               	movlw	3
  1501  04E0  00C5               	movwf	??_main^(0+128)
  1502  04E1  0845               	movf	??_main^(0+128),w
  1503  04E2  0020               	movlb	0	; select bank0
  1504  04E3  00B0               	movwf	_print_content
  1505                           
  1506                           ;PIC16F1827-ChargeStation4-02.c: 349: LED(i, 1);
  1507  04E4  0021               	movlb	1	; select bank1
  1508  04E5  01B9               	clrf	LED@value^(0+128)
  1509  04E6  0AB9               	incf	LED@value^(0+128),f
  1510  04E7  0022               	movlb	2	; select bank2
  1511  04E8  0852               	movf	main@i^(0+256),w
  1512  04E9  318D  25B0  3183   	fcall	_LED
  1513                           
  1514                           ;PIC16F1827-ChargeStation4-02.c: 350: flag_clear(i, 0x08);
  1515  04EC  3008               	movlw	8
  1516  04ED  0021               	movlb	1	; select bank1
  1517  04EE  00C5               	movwf	??_main^(0+128)
  1518  04EF  0845               	movf	??_main^(0+128),w
  1519  04F0  00B9               	movwf	flag_clear@bit_and^(0+128)
  1520  04F1  0022               	movlb	2	; select bank2
  1521  04F2  0852               	movf	main@i^(0+256),w
  1522  04F3  318D  2566  3183   	fcall	_flag_clear
  1523  04F6                     l3353:	
  1524                           
  1525                           ;PIC16F1827-ChargeStation4-02.c: 351: }
  1526                           ;PIC16F1827-ChargeStation4-02.c: 352: if (flag_read(i, 0x08)) {
  1527  04F6  3008               	movlw	8
  1528  04F7  0021               	movlb	1	; select bank1
  1529  04F8  00C5               	movwf	??_main^(0+128)
  1530  04F9  0845               	movf	??_main^(0+128),w
  1531  04FA  00B9               	movwf	flag_read@bit_and^(0+128)
  1532  04FB  0022               	movlb	2	; select bank2
  1533  04FC  0852               	movf	main@i^(0+256),w
  1534  04FD  318D  2503  3183   	fcall	_flag_read
  1535  0500  3A00               	xorlw	0
  1536  0501  1903               	skipnz
  1537  0502  2D14               	goto	l3361
  1538                           
  1539                           ;PIC16F1827-ChargeStation4-02.c: 353: print_content = 0;
  1540  0503  0020               	movlb	0	; select bank0
  1541  0504  01B0               	clrf	_print_content
  1542                           
  1543                           ;PIC16F1827-ChargeStation4-02.c: 354: LED(i, 1);
  1544  0505  0021               	movlb	1	; select bank1
  1545  0506  01B9               	clrf	LED@value^(0+128)
  1546  0507  0AB9               	incf	LED@value^(0+128),f
  1547  0508  0022               	movlb	2	; select bank2
  1548  0509  0852               	movf	main@i^(0+256),w
  1549  050A  318D  25B0  3183   	fcall	_LED
  1550                           
  1551                           ;PIC16F1827-ChargeStation4-02.c: 355: flag_clear(i, 0x00);
  1552  050D  0021               	movlb	1	; select bank1
  1553  050E  01B9               	clrf	flag_clear@bit_and^(0+128)
  1554  050F  0022               	movlb	2	; select bank2
  1555  0510  0852               	movf	main@i^(0+256),w
  1556  0511  318D  2566  3183   	fcall	_flag_clear
  1557  0514                     l3361:	
  1558                           
  1559                           ;PIC16F1827-ChargeStation4-02.c: 356: }
  1560                           ;PIC16F1827-ChargeStation4-02.c: 357: if (change_flag[i]) {
  1561  0514  0022               	movlb	2	; select bank2
  1562  0515  0852               	movf	main@i^(0+256),w
  1563  0516  3EAC               	addlw	_change_flag& (0+255)
  1564  0517  0086               	movwf	6
  1565  0518  0187               	clrf	7
  1566  0519  0801               	movf	1,w
  1567  051A  3A00               	xorlw	0
  1568  051B  1903               	skipnz
  1569  051C  2D41               	goto	l3367
  1570                           
  1571                           ;PIC16F1827-ChargeStation4-02.c: 358: change_flag[i] = 0;
  1572  051D  0852               	movf	main@i^(0+256),w
  1573  051E  3EAC               	addlw	_change_flag& (0+255)
  1574  051F  0086               	movwf	6
  1575  0520  0187               	clrf	7
  1576  0521  0181               	clrf	1
  1577                           
  1578                           ;PIC16F1827-ChargeStation4-02.c: 359: EEP_Writes(i, 0, s[i] >> 8, s[i]);
  1579  0522  0021               	movlb	1	; select bank1
  1580  0523  01BD               	clrf	EEP_Writes@Reg_l^(0+128)
  1581  0524  0022               	movlb	2	; select bank2
  1582  0525  3552               	lslf	main@i^(0+256),w
  1583  0526  3E20               	addlw	_s& (0+255)
  1584  0527  0086               	movwf	6
  1585  0528  0187               	clrf	7
  1586  0529  3F40               	moviw [0]fsr1
  1587  052A  0021               	movlb	1	; select bank1
  1588  052B  00C5               	movwf	??_main^(0+128)
  1589  052C  3F41               	moviw [1]fsr1
  1590  052D  00C6               	movwf	(??_main^(0+128)+1)
  1591  052E  0846               	movf	(??_main+1)^(0+128),w
  1592  052F  00C7               	movwf	(??_main+2)^(0+128)
  1593  0530  0847               	movf	(??_main+2)^(0+128),w
  1594  0531  00BE               	movwf	EEP_Writes@data_0^(0+128)
  1595  0532  0022               	movlb	2	; select bank2
  1596  0533  3552               	lslf	main@i^(0+256),w
  1597  0534  3E20               	addlw	_s& (0+255)
  1598  0535  0086               	movwf	6
  1599  0536  0187               	clrf	7
  1600  0537  0801               	movf	1,w
  1601  0538  0021               	movlb	1	; select bank1
  1602  0539  00C8               	movwf	(??_main+3)^(0+128)
  1603  053A  0848               	movf	(??_main+3)^(0+128),w
  1604  053B  00BF               	movwf	EEP_Writes@data_1^(0+128)
  1605  053C  0022               	movlb	2	; select bank2
  1606  053D  0852               	movf	main@i^(0+256),w
  1607  053E  318E  2601  3183   	fcall	_EEP_Writes
  1608  0541                     l3367:	
  1609  0541  3001               	movlw	1
  1610  0542  0021               	movlb	1	; select bank1
  1611  0543  00C5               	movwf	??_main^(0+128)
  1612  0544  0845               	movf	??_main^(0+128),w
  1613  0545  0022               	movlb	2	; select bank2
  1614  0546  07D2               	addwf	main@i^(0+256),f
  1615  0547  2C43               	goto	L1
  1616  0548                     __end_of_main:	
  1617                           ;PIC16F1827-ChargeStation4-02.c: 360: }
  1618                           ;PIC16F1827-ChargeStation4-02.c: 361: }
  1619                           ;PIC16F1827-ChargeStation4-02.c: 362: }
  1620                           ;PIC16F1827-ChargeStation4-02.c: 363: return 0;
  1621                           ;	Return value of _main is never used
  1622                           
  1623                           
  1624                           	psect	text1
  1625  0C57                     __ptext1:	
  1626 ;; *************** function _ringbuf_init *****************
  1627 ;; Defined at:
  1628 ;;		line 113 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  rb              1    wreg     PTR struct ringbuf
  1631 ;;		 -> tx_buf(4), 
  1632 ;;  internal_buf    1    0[BANK1 ] PTR unsigned char 
  1633 ;;		 -> main@ringbuf(50), 
  1634 ;;  bufsize         1    1[BANK1 ] unsigned char 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  rb              1    3[BANK1 ] PTR struct ringbuf
  1637 ;;		 -> tx_buf(4), 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;		None               void
  1640 ;; Registers used:
  1641 ;;		wreg, fsr1l, fsr1h, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1647 ;;      Params:         0       0       2       0       0       0
  1648 ;;      Locals:         0       0       1       0       0       0
  1649 ;;      Temps:          0       0       1       0       0       0
  1650 ;;      Totals:         0       0       4       0       0       0
  1651 ;;Total ram usage:        4 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    6
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _ringbuf_init
  1663  0C57                     _ringbuf_init:	
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2]
  1667                           ;ringbuf_init@rb stored from wreg
  1668  0C57  0021               	movlb	1	; select bank1
  1669  0C58  00BC               	movwf	ringbuf_init@rb^(0+128)
  1670                           
  1671                           ;My_header_16F.h: 114: rb->buf = internal_buf;
  1672  0C59  0839               	movf	ringbuf_init@internal_buf^(0+128),w
  1673  0C5A  00BB               	movwf	??_ringbuf_init^(0+128)
  1674  0C5B  083C               	movf	ringbuf_init@rb^(0+128),w
  1675  0C5C  0086               	movwf	6
  1676  0C5D  0187               	clrf	7
  1677  0C5E  083B               	movf	??_ringbuf_init^(0+128),w
  1678  0C5F  0081               	movwf	1
  1679                           
  1680                           ;My_header_16F.h: 115: rb->size = bufsize;
  1681  0C60  083A               	movf	ringbuf_init@bufsize^(0+128),w
  1682  0C61  00BB               	movwf	??_ringbuf_init^(0+128)
  1683  0C62  0A3C               	incf	ringbuf_init@rb^(0+128),w
  1684  0C63  0086               	movwf	6
  1685  0C64  0187               	clrf	7
  1686  0C65  083B               	movf	??_ringbuf_init^(0+128),w
  1687  0C66  0081               	movwf	1
  1688                           
  1689                           ;My_header_16F.h: 116: rb->head = 0;
  1690  0C67  083C               	movf	ringbuf_init@rb^(0+128),w
  1691  0C68  3E02               	addlw	2
  1692  0C69  0086               	movwf	6
  1693  0C6A  0187               	clrf	7
  1694  0C6B  0181               	clrf	1
  1695                           
  1696                           ;My_header_16F.h: 117: rb->tail = 0;
  1697  0C6C  083C               	movf	ringbuf_init@rb^(0+128),w
  1698  0C6D  3E03               	addlw	3
  1699  0C6E  0086               	movwf	6
  1700  0C6F  0187               	clrf	7
  1701  0C70  0181               	clrf	1
  1702  0C71  0008               	return
  1703  0C72                     __end_of_ringbuf_init:	
  1704                           
  1705                           	psect	text2
  1706  0D43                     __ptext2:	
  1707 ;; *************** function _main_init *****************
  1708 ;; Defined at:
  1709 ;;		line 284 in file "PIC16F1827-ChargeStation4-02.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;		None               void
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1723 ;;      Params:         0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:   11
  1730 ;; This function calls:
  1731 ;;		_I2C_init
  1732 ;;		_LCD_init
  1733 ;;		_adc_init
  1734 ;;		_timer0_init
  1735 ;;		_timer1_init
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _main_init
  1743  0D43                     _main_init:	
  1744                           
  1745                           ;PIC16F1827-ChargeStation4-02.c: 285: OSCCON = 0x70;
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
  1749  0D43  3070               	movlw	112
  1750  0D44  0021               	movlb	1	; select bank1
  1751  0D45  0099               	movwf	25	;volatile
  1752                           
  1753                           ;PIC16F1827-ChargeStation4-02.c: 286: TRISA = 0x3F;
  1754  0D46  303F               	movlw	63
  1755  0D47  008C               	movwf	12	;volatile
  1756                           
  1757                           ;PIC16F1827-ChargeStation4-02.c: 287: TRISB = 0x12;
  1758  0D48  3012               	movlw	18
  1759  0D49  008D               	movwf	13	;volatile
  1760                           
  1761                           ;PIC16F1827-ChargeStation4-02.c: 288: ANSELA = 0x07;
  1762  0D4A  3007               	movlw	7
  1763  0D4B  0023               	movlb	3	; select bank3
  1764  0D4C  008C               	movwf	12	;volatile
  1765                           
  1766                           ;PIC16F1827-ChargeStation4-02.c: 289: ANSELB = 0x00;
  1767  0D4D  018D               	clrf	13	;volatile
  1768                           
  1769                           ;PIC16F1827-ChargeStation4-02.c: 290: WPUB = 0b00010010;
  1770  0D4E  3012               	movlw	18
  1771  0D4F  0024               	movlb	4	; select bank4
  1772  0D50  008D               	movwf	13	;volatile
  1773                           
  1774                           ;PIC16F1827-ChargeStation4-02.c: 291: OPTION_REGbits.nWPUEN = 0;
  1775  0D51  0021               	movlb	1	; select bank1
  1776  0D52  1395               	bcf	21,7	;volatile
  1777                           
  1778                           ;PIC16F1827-ChargeStation4-02.c: 293: adc_init(3);
  1779  0D53  3003               	movlw	3
  1780  0D54  318B  23C6  318D   	fcall	_adc_init
  1781                           
  1782                           ;PIC16F1827-ChargeStation4-02.c: 294: timer0_init(4);
  1783  0D57  3004               	movlw	4
  1784  0D58  318B  23DB  318D   	fcall	_timer0_init
  1785                           
  1786                           ;PIC16F1827-ChargeStation4-02.c: 295: timer1_init(2);
  1787  0D5B  3002               	movlw	2
  1788  0D5C  318B  23F0  318D   	fcall	_timer1_init
  1789                           
  1790                           ;PIC16F1827-ChargeStation4-02.c: 297: I2C_init();
  1791  0D5F  318B  235B  318D   	fcall	_I2C_init
  1792                           
  1793                           ;PIC16F1827-ChargeStation4-02.c: 298: LCD_init();
  1794  0D62  3187  27B8         	fcall	_LCD_init
  1795                           
  1796                           ;PIC16F1827-ChargeStation4-02.c: 300: INTCONbits.PEIE = 1;
  1797  0D64  170B               	bsf	11,6	;volatile
  1798  0D65  0008               	return
  1799  0D66                     __end_of_main_init:	
  1800                           
  1801                           	psect	text3
  1802  0BF0                     __ptext3:	
  1803 ;; *************** function _timer1_init *****************
  1804 ;; Defined at:
  1805 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  prescaler       1    wreg     unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;		None               void
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1819 ;;      Params:         0       0       0       0       0       0
  1820 ;;      Locals:         0       0       1       0       0       0
  1821 ;;      Temps:          0       0       1       0       0       0
  1822 ;;      Totals:         0       0       2       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    6
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main_init
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _timer1_init
  1835  0BF0                     _timer1_init:	
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1839                           ;timer1_init@prescaler stored from wreg
  1840  0BF0  0021               	movlb	1	; select bank1
  1841  0BF1  00BA               	movwf	timer1_init@prescaler^(0+128)
  1842                           
  1843                           ;My_header_16F.h: 30: T1CONbits.TMR1ON = 1;
  1844  0BF2  0020               	movlb	0	; select bank0
  1845  0BF3  1418               	bsf	24,0	;volatile
  1846                           
  1847                           ;My_header_16F.h: 31: T1CONbits.TMR1CS = 0;
  1848  0BF4  303F               	movlw	-193
  1849  0BF5  0598               	andwf	24,f	;volatile
  1850                           
  1851                           ;My_header_16F.h: 32: T1CONbits.T1CKPS = prescaler;
  1852  0BF6  0021               	movlb	1	; select bank1
  1853  0BF7  083A               	movf	timer1_init@prescaler^(0+128),w
  1854  0BF8  00B9               	movwf	??_timer1_init^(0+128)
  1855  0BF9  0EB9               	swapf	??_timer1_init^(0+128),f
  1856  0BFA  0020               	movlb	0	; select bank0
  1857  0BFB  0818               	movf	24,w	;volatile
  1858  0BFC  0021               	movlb	1	; select bank1
  1859  0BFD  0639               	xorwf	??_timer1_init^(0+128),w
  1860  0BFE  39CF               	andlw	-49
  1861  0BFF  0639               	xorwf	??_timer1_init^(0+128),w
  1862  0C00  0020               	movlb	0	; select bank0
  1863  0C01  0098               	movwf	24	;volatile
  1864                           
  1865                           ;My_header_16F.h: 33: TMR1H = 0x00;
  1866  0C02  0197               	clrf	23	;volatile
  1867                           
  1868                           ;My_header_16F.h: 34: TMR1L = 0x00;
  1869  0C03  0196               	clrf	22	;volatile
  1870                           
  1871                           ;My_header_16F.h: 35: PIE1bits.TMR1IE = 1;
  1872  0C04  0021               	movlb	1	; select bank1
  1873  0C05  1411               	bsf	17,0	;volatile
  1874                           
  1875                           ;My_header_16F.h: 36: INTCONbits.PEIE = 1;
  1876  0C06  170B               	bsf	11,6	;volatile
  1877  0C07  0008               	return
  1878  0C08                     __end_of_timer1_init:	
  1879                           
  1880                           	psect	text4
  1881  0BDB                     __ptext4:	
  1882 ;; *************** function _timer0_init *****************
  1883 ;; Defined at:
  1884 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  prescaler       1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  prescaler       1    1[BANK1 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1898 ;;      Params:         0       0       0       0       0       0
  1899 ;;      Locals:         0       0       1       0       0       0
  1900 ;;      Temps:          0       0       1       0       0       0
  1901 ;;      Totals:         0       0       2       0       0       0
  1902 ;;Total ram usage:        2 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    6
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_main_init
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _timer0_init
  1914  0BDB                     _timer0_init:	
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  1918                           ;timer0_init@prescaler stored from wreg
  1919  0BDB  0021               	movlb	1	; select bank1
  1920  0BDC  00BA               	movwf	timer0_init@prescaler^(0+128)
  1921                           
  1922                           ;My_header_16F.h: 16: if (prescaler == 0) {
  1923  0BDD  08BA               	movf	timer0_init@prescaler^(0+128),f
  1924  0BDE  1D03               	skipz
  1925  0BDF  2BE2               	goto	l101
  1926                           
  1927                           ;My_header_16F.h: 17: OPTION_REGbits.PSA = 1;
  1928  0BE0  1595               	bsf	21,3	;volatile
  1929                           
  1930                           ;My_header_16F.h: 18: } else {
  1931  0BE1  2BEB               	goto	l2889
  1932  0BE2                     l101:	
  1933                           
  1934                           ;My_header_16F.h: 19: OPTION_REGbits.PSA = 0;
  1935  0BE2  1195               	bcf	21,3	;volatile
  1936                           
  1937                           ;My_header_16F.h: 20: OPTION_REGbits.PS = prescaler - 1;
  1938  0BE3  30FF               	movlw	255
  1939  0BE4  073A               	addwf	timer0_init@prescaler^(0+128),w
  1940  0BE5  00B9               	movwf	??_timer0_init^(0+128)
  1941  0BE6  0815               	movf	21,w	;volatile
  1942  0BE7  0639               	xorwf	??_timer0_init^(0+128),w
  1943  0BE8  39F8               	andlw	-8
  1944  0BE9  0639               	xorwf	??_timer0_init^(0+128),w
  1945  0BEA  0095               	movwf	21	;volatile
  1946  0BEB                     l2889:	
  1947                           
  1948                           ;My_header_16F.h: 21: }
  1949                           ;My_header_16F.h: 22: OPTION_REGbits.TMR0CS = 0;
  1950  0BEB  1295               	bcf	21,5	;volatile
  1951                           
  1952                           ;My_header_16F.h: 23: OPTION_REGbits.TMR0SE = 0;
  1953  0BEC  1215               	bcf	21,4	;volatile
  1954                           
  1955                           ;My_header_16F.h: 24: INTCONbits.TMR0IE = 1;
  1956  0BED  168B               	bsf	11,5	;volatile
  1957                           
  1958                           ;My_header_16F.h: 25: INTCONbits.PEIE = 1;
  1959  0BEE  170B               	bsf	11,6	;volatile
  1960  0BEF  0008               	return
  1961  0BF0                     __end_of_timer0_init:	
  1962                           
  1963                           	psect	text5
  1964  0BC6                     __ptext5:	
  1965 ;; *************** function _adc_init *****************
  1966 ;; Defined at:
  1967 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  p_ref           1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  p_ref           1    0[BANK1 ] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1981 ;;      Params:         0       0       0       0       0       0
  1982 ;;      Locals:         0       0       1       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0
  1984 ;;      Totals:         0       0       1       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    6
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main_init
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _adc_init
  1997  0BC6                     _adc_init:	
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2001                           ;adc_init@p_ref stored from wreg
  2002  0BC6  0021               	movlb	1	; select bank1
  2003  0BC7  00B9               	movwf	adc_init@p_ref^(0+128)
  2004                           
  2005                           ;My_header_16F.h: 44: ADCON1bits.ADFM = 1;
  2006  0BC8  179E               	bsf	30,7	;volatile
  2007                           
  2008                           ;My_header_16F.h: 45: ADCON1bits.ADCS = 6;
  2009  0BC9  081E               	movf	30,w	;volatile
  2010  0BCA  398F               	andlw	-113
  2011  0BCB  3860               	iorlw	96
  2012  0BCC  009E               	movwf	30	;volatile
  2013                           
  2014                           ;My_header_16F.h: 46: ADCON1bits.ADNREF = 0;
  2015  0BCD  111E               	bcf	30,2	;volatile
  2016                           
  2017                           ;My_header_16F.h: 47: ADCON1bits.ADPREF = p_ref;
  2018  0BCE  081E               	movf	30,w	;volatile
  2019  0BCF  0639               	xorwf	adc_init@p_ref^(0+128),w
  2020  0BD0  39FC               	andlw	-4
  2021  0BD1  0639               	xorwf	adc_init@p_ref^(0+128),w
  2022  0BD2  009E               	movwf	30	;volatile
  2023                           
  2024                           ;My_header_16F.h: 48: if (p_ref == 3) FVRCON = 0x83;
  2025  0BD3  0839               	movf	adc_init@p_ref^(0+128),w
  2026  0BD4  3A03               	xorlw	3
  2027  0BD5  1D03               	skipz
  2028  0BD6  0008               	return
  2029  0BD7  3083               	movlw	131
  2030  0BD8  0022               	movlb	2	; select bank2
  2031  0BD9  0097               	movwf	23	;volatile
  2032  0BDA  0008               	return
  2033  0BDB                     __end_of_adc_init:	
  2034                           
  2035                           	psect	text6
  2036  07B8                     __ptext6:	
  2037 ;; *************** function _LCD_init *****************
  2038 ;; Defined at:
  2039 ;;		line 337 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2053 ;;      Params:         0       0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0
  2055 ;;      Temps:          0       0       3       0       0       0
  2056 ;;      Totals:         0       0       3       0       0       0
  2057 ;;Total ram usage:        3 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:   10
  2060 ;; This function calls:
  2061 ;;		_LCD_Clear
  2062 ;;		_LCD_Command
  2063 ;; This function is called by:
  2064 ;;		_main_init
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _LCD_init
  2070  07B8                     _LCD_init:	
  2071                           
  2072                           ;My_header_16F.h: 338: _delay((unsigned long)((40)*(32000000/4000.0)));
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2076  07B8  3002               	movlw	2
  2077  07B9  0021               	movlb	1	; select bank1
  2078  07BA  00C4               	movwf	(??_LCD_init^(0+128)+2)
  2079  07BB  30A0               	movlw	160
  2080  07BC  00C3               	movwf	(??_LCD_init^(0+128)+1)
  2081  07BD  3092               	movlw	146
  2082  07BE  00C2               	movwf	??_LCD_init^(0+128)
  2083  07BF                     u3897:	
  2084  07BF  0BC2               	decfsz	??_LCD_init^(0+128),f
  2085  07C0  2FBF               	goto	u3897
  2086  07C1  0BC3               	decfsz	(??_LCD_init^(0+128)+1),f
  2087  07C2  2FBF               	goto	u3897
  2088  07C3  0BC4               	decfsz	(??_LCD_init^(0+128)+2),f
  2089  07C4  2FBF               	goto	u3897
  2090  07C5  0000               	nop
  2091                           
  2092                           ;My_header_16F.h: 339: LCD_Command(0x38);
  2093  07C6  3038               	movlw	56
  2094  07C7  318D  2523  3187   	fcall	_LCD_Command
  2095                           
  2096                           ;My_header_16F.h: 340: LCD_Command(0x39);
  2097  07CA  3039               	movlw	57
  2098  07CB  318D  2523  3187   	fcall	_LCD_Command
  2099                           
  2100                           ;My_header_16F.h: 341: LCD_Command(0x14);
  2101  07CE  3014               	movlw	20
  2102  07CF  318D  2523  3187   	fcall	_LCD_Command
  2103                           
  2104                           ;My_header_16F.h: 342: LCD_Command(0x70);
  2105  07D2  3070               	movlw	112
  2106  07D3  318D  2523  3187   	fcall	_LCD_Command
  2107                           
  2108                           ;My_header_16F.h: 343: LCD_Command(0x56);
  2109  07D6  3056               	movlw	86
  2110  07D7  318D  2523  3187   	fcall	_LCD_Command
  2111                           
  2112                           ;My_header_16F.h: 344: LCD_Command(0x6C);
  2113  07DA  306C               	movlw	108
  2114  07DB  318D  2523  3187   	fcall	_LCD_Command
  2115                           
  2116                           ;My_header_16F.h: 345: _delay((unsigned long)((200)*(32000000/4000.0)));
  2117  07DE  3009               	movlw	9
  2118  07DF  0021               	movlb	1	; select bank1
  2119  07E0  00C4               	movwf	(??_LCD_init^(0+128)+2)
  2120  07E1  301E               	movlw	30
  2121  07E2  00C3               	movwf	(??_LCD_init^(0+128)+1)
  2122  07E3  30EB               	movlw	235
  2123  07E4  00C2               	movwf	??_LCD_init^(0+128)
  2124  07E5                     u3907:	
  2125  07E5  0BC2               	decfsz	??_LCD_init^(0+128),f
  2126  07E6  2FE5               	goto	u3907
  2127  07E7  0BC3               	decfsz	(??_LCD_init^(0+128)+1),f
  2128  07E8  2FE5               	goto	u3907
  2129  07E9  0BC4               	decfsz	(??_LCD_init^(0+128)+2),f
  2130  07EA  2FE5               	goto	u3907
  2131  07EB  0000               	nop
  2132                           
  2133                           ;My_header_16F.h: 346: LCD_Command(0x38);
  2134  07EC  3038               	movlw	56
  2135  07ED  318D  2523  3187   	fcall	_LCD_Command
  2136                           
  2137                           ;My_header_16F.h: 347: LCD_Command(0x0C);
  2138  07F0  300C               	movlw	12
  2139  07F1  318D  2523  3187   	fcall	_LCD_Command
  2140                           
  2141                           ;My_header_16F.h: 348: LCD_Command(0x06);
  2142  07F4  3006               	movlw	6
  2143  07F5  318D  2523  3187   	fcall	_LCD_Command
  2144                           
  2145                           ;My_header_16F.h: 349: LCD_Clear();
  2146  07F8  318B  2383         	fcall	_LCD_Clear
  2147  07FA  0008               	return
  2148  07FB                     __end_of_LCD_init:	
  2149                           
  2150                           	psect	text7
  2151  0B83                     __ptext7:	
  2152 ;; *************** function _LCD_Clear *****************
  2153 ;; Defined at:
  2154 ;;		line 280 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;		None               void
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2168 ;;      Params:         0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0
  2170 ;;      Temps:          0       0       2       0       0       0
  2171 ;;      Totals:         0       0       2       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    9
  2175 ;; This function calls:
  2176 ;;		_LCD_Command
  2177 ;; This function is called by:
  2178 ;;		_LCD_init
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _LCD_Clear
  2184  0B83                     _LCD_Clear:	
  2185                           
  2186                           ;My_header_16F.h: 281: LCD_Command(0x01);
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2190  0B83  3001               	movlw	1
  2191  0B84  318D  2523  318B   	fcall	_LCD_Command
  2192                           
  2193                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  2194  0B87  300C               	movlw	12
  2195  0B88  0021               	movlb	1	; select bank1
  2196  0B89  00C1               	movwf	(??_LCD_Clear^(0+128)+1)
  2197  0B8A  306C               	movlw	108
  2198  0B8B  00C0               	movwf	??_LCD_Clear^(0+128)
  2199  0B8C                     u3917:	
  2200  0B8C  0BC0               	decfsz	??_LCD_Clear^(0+128),f
  2201  0B8D  2B8C               	goto	u3917
  2202  0B8E  0BC1               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2203  0B8F  2B8C               	goto	u3917
  2204  0B90  0000               	nop
  2205  0B91  0008               	return
  2206  0B92                     __end_of_LCD_Clear:	
  2207                           
  2208                           	psect	text8
  2209  0D23                     __ptext8:	
  2210 ;; *************** function _LCD_Command *****************
  2211 ;; Defined at:
  2212 ;;		line 267 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  c               1    wreg     unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  c               1    5[BANK1 ] unsigned char 
  2217 ;;  ans             1    6[BANK1 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;		None               void
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2227 ;;      Params:         0       0       0       0       0       0
  2228 ;;      Locals:         0       0       2       0       0       0
  2229 ;;      Temps:          0       0       1       0       0       0
  2230 ;;      Totals:         0       0       3       0       0       0
  2231 ;;Total ram usage:        3 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    8
  2234 ;; This function calls:
  2235 ;;		_I2C_Send
  2236 ;;		_I2C_Start
  2237 ;;		_I2C_Stop
  2238 ;; This function is called by:
  2239 ;;		_LCD_Clear
  2240 ;;		_LCD_init
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _LCD_Command
  2246  0D23                     _LCD_Command:	
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2250                           ;LCD_Command@c stored from wreg
  2251  0D23  0021               	movlb	1	; select bank1
  2252  0D24  00BE               	movwf	LCD_Command@c^(0+128)
  2253                           
  2254                           ;My_header_16F.h: 268: uint8_t ans;
  2255                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  2256  0D25  01BB               	clrf	I2C_Start@rw^(0+128)
  2257  0D26  303E               	movlw	62
  2258  0D27  318C  24AA  318D   	fcall	_I2C_Start
  2259  0D2A  0021               	movlb	1	; select bank1
  2260  0D2B  00BD               	movwf	??_LCD_Command^(0+128)
  2261  0D2C  083D               	movf	??_LCD_Command^(0+128),w
  2262  0D2D  00BF               	movwf	LCD_Command@ans^(0+128)
  2263                           
  2264                           ;My_header_16F.h: 271: if (ans == 0) {
  2265  0D2E  08BF               	movf	LCD_Command@ans^(0+128),f
  2266  0D2F  1D03               	skipz
  2267  0D30  2D3A               	goto	l212
  2268                           
  2269                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  2270  0D31  3080               	movlw	128
  2271  0D32  318B  23B4  318D   	fcall	_I2C_Send
  2272                           
  2273                           ;My_header_16F.h: 274: I2C_Send(c);
  2274  0D35  0021               	movlb	1	; select bank1
  2275  0D36  083E               	movf	LCD_Command@c^(0+128),w
  2276  0D37  318B  23B4  318D   	fcall	_I2C_Send
  2277  0D3A                     l212:	
  2278                           
  2279                           ;My_header_16F.h: 275: }
  2280                           ;My_header_16F.h: 276: I2C_Stop();
  2281  0D3A  318B  2344  318D   	fcall	_I2C_Stop
  2282                           
  2283                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2284  0D3D  3045               	movlw	69
  2285  0D3E  0021               	movlb	1	; select bank1
  2286  0D3F  00BD               	movwf	??_LCD_Command^(0+128)
  2287  0D40                     u3927:	
  2288  0D40  0BBD               	decfsz	??_LCD_Command^(0+128),f
  2289  0D41  2D40               	goto	u3927
  2290  0D42  0008               	return
  2291  0D43                     __end_of_LCD_Command:	
  2292                           
  2293                           	psect	text9
  2294  0B5B                     __ptext9:	
  2295 ;; *************** function _I2C_init *****************
  2296 ;; Defined at:
  2297 ;;		line 203 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;		None               void
  2304 ;; Registers used:
  2305 ;;		wreg
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2311 ;;      Params:         0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    6
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_main_init
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _I2C_init
  2327  0B5B                     _I2C_init:	
  2328                           
  2329                           ;My_header_16F.h: 204: SSP1STAT = 0b10000000;
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _I2C_init: [wreg]
  2333  0B5B  3080               	movlw	128
  2334  0B5C  0024               	movlb	4	; select bank4
  2335  0B5D  0094               	movwf	20	;volatile
  2336                           
  2337                           ;My_header_16F.h: 205: SSP1CON1 = 0b00101000;
  2338  0B5E  3028               	movlw	40
  2339  0B5F  0095               	movwf	21	;volatile
  2340                           
  2341                           ;My_header_16F.h: 206: SSP1ADD = 0x13;
  2342  0B60  3013               	movlw	19
  2343  0B61  0092               	movwf	18	;volatile
  2344                           
  2345                           ;My_header_16F.h: 209: SSP1IF = 0;
  2346  0B62  0020               	movlb	0	; select bank0
  2347  0B63  1191               	bcf	17,3	;volatile
  2348                           
  2349                           ;My_header_16F.h: 210: BCL1IF = 0;
  2350  0B64  1192               	bcf	18,3	;volatile
  2351  0B65  0008               	return
  2352  0B66                     __end_of_I2C_init:	
  2353                           
  2354                           	psect	text10
  2355  0D03                     __ptext10:	
  2356 ;; *************** function _flag_read *****************
  2357 ;; Defined at:
  2358 ;;		line 255 in file "PIC16F1827-ChargeStation4-02.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  port            1    wreg     unsigned char 
  2361 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  port            1    1[BANK1 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      unsigned char 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2373 ;;      Params:         0       0       1       0       0       0
  2374 ;;      Locals:         0       0       1       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0
  2376 ;;      Totals:         0       0       2       0       0       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    6
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _flag_read
  2389  0D03                     _flag_read:	
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _flag_read: [wreg-fsr0h+status,2+status,0]
  2393                           ;flag_read@port stored from wreg
  2394  0D03  0021               	movlb	1	; select bank1
  2395  0D04  00BA               	movwf	flag_read@port^(0+128)
  2396                           
  2397                           ;PIC16F1827-ChargeStation4-02.c: 256: switch (port) {
  2398  0D05  2D17               	goto	l3059
  2399  0D06                     l3041:	
  2400                           ;PIC16F1827-ChargeStation4-02.c: 257: case 2:
  2401                           
  2402                           
  2403                           ;PIC16F1827-ChargeStation4-02.c: 258: return (sw_RA3.flags) & bit_and;
  2404  0D06  0020               	movlb	0	; select bank0
  2405  0D07  0834               	movf	_sw_RA3+2,w
  2406  0D08  0021               	movlb	1	; select bank1
  2407  0D09  0539               	andwf	flag_read@bit_and^(0+128),w
  2408  0D0A  0008               	return
  2409  0D0B                     l3045:	
  2410                           ;PIC16F1827-ChargeStation4-02.c: 259: case 1:
  2411                           
  2412                           
  2413                           ;PIC16F1827-ChargeStation4-02.c: 260: return (sw_RA4.flags) & bit_and;
  2414  0D0B  0020               	movlb	0	; select bank0
  2415  0D0C  0837               	movf	_sw_RA4+2,w
  2416  0D0D  0021               	movlb	1	; select bank1
  2417  0D0E  0539               	andwf	flag_read@bit_and^(0+128),w
  2418  0D0F  0008               	return
  2419  0D10                     l3049:	
  2420                           ;PIC16F1827-ChargeStation4-02.c: 261: case 0:
  2421                           
  2422                           
  2423                           ;PIC16F1827-ChargeStation4-02.c: 262: return (sw_RA5.flags) & bit_and;
  2424  0D10  0020               	movlb	0	; select bank0
  2425  0D11  083A               	movf	_sw_RA5+2,w
  2426  0D12  0021               	movlb	1	; select bank1
  2427  0D13  0539               	andwf	flag_read@bit_and^(0+128),w
  2428  0D14  0008               	return
  2429  0D15                     l3053:	
  2430                           ;PIC16F1827-ChargeStation4-02.c: 263: default:
  2431                           
  2432                           
  2433                           ;PIC16F1827-ChargeStation4-02.c: 264: return 0;
  2434  0D15  3000               	movlw	0
  2435                           
  2436                           ;PIC16F1827-ChargeStation4-02.c: 265: }
  2437  0D16  0008               	return
  2438  0D17                     l3059:	
  2439  0D17  083A               	movf	flag_read@port^(0+128),w
  2440                           
  2441                           ; Switch size 1, requested type "space"
  2442                           ; Number of cases is 3, Range of values is 0 to 2
  2443                           ; switch strategies available:
  2444                           ; Name         Instructions Cycles
  2445                           ; simple_byte           10     6 (average)
  2446                           ; direct_byte           12     6 (fixed)
  2447                           ; jumptable            260     6 (fixed)
  2448                           ;	Chosen strategy is simple_byte
  2449  0D18  3A00               	xorlw	0	; case 0
  2450  0D19  1903               	skipnz
  2451  0D1A  2D10               	goto	l3049
  2452  0D1B  3A01               	xorlw	1	; case 1
  2453  0D1C  1903               	skipnz
  2454  0D1D  2D0B               	goto	l3045
  2455  0D1E  3A03               	xorlw	3	; case 2
  2456  0D1F  1903               	skipnz
  2457  0D20  2D06               	goto	l3041
  2458  0D21  2D15               	goto	l3053
  2459  0D22  0008               	return
  2460  0D23                     __end_of_flag_read:	
  2461                           
  2462                           	psect	text11
  2463  0D66                     __ptext11:	
  2464 ;; *************** function _flag_clear *****************
  2465 ;; Defined at:
  2466 ;;		line 268 in file "PIC16F1827-ChargeStation4-02.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  port            1    wreg     unsigned char 
  2469 ;;  bit_and         1    0[BANK1 ] unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  port            1    2[BANK1 ] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2481 ;;      Params:         0       0       1       0       0       0
  2482 ;;      Locals:         0       0       1       0       0       0
  2483 ;;      Temps:          0       0       1       0       0       0
  2484 ;;      Totals:         0       0       3       0       0       0
  2485 ;;Total ram usage:        3 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    6
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _flag_clear
  2497  0D66                     _flag_clear:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _flag_clear: [wreg-fsr0h+status,2+status,0]
  2501                           ;flag_clear@port stored from wreg
  2502  0D66  0021               	movlb	1	; select bank1
  2503  0D67  00BB               	movwf	flag_clear@port^(0+128)
  2504                           
  2505                           ;PIC16F1827-ChargeStation4-02.c: 269: switch (port) {
  2506  0D68  2D7D               	goto	l3071
  2507  0D69                     l3063:	
  2508                           ;PIC16F1827-ChargeStation4-02.c: 270: case 2:
  2509                           
  2510                           
  2511                           ;PIC16F1827-ChargeStation4-02.c: 271: sw_RA3.flags &= bit_and;
  2512  0D69  0839               	movf	flag_clear@bit_and^(0+128),w
  2513  0D6A  00BA               	movwf	??_flag_clear^(0+128)
  2514  0D6B  083A               	movf	??_flag_clear^(0+128),w
  2515  0D6C  0020               	movlb	0	; select bank0
  2516  0D6D  05B4               	andwf	_sw_RA3+2,f
  2517                           
  2518                           ;PIC16F1827-ChargeStation4-02.c: 272: break;
  2519  0D6E  0008               	return
  2520  0D6F                     l3065:	
  2521                           ;PIC16F1827-ChargeStation4-02.c: 273: case 1:
  2522                           
  2523                           
  2524                           ;PIC16F1827-ChargeStation4-02.c: 274: sw_RA4.flags &= bit_and;
  2525  0D6F  0021               	movlb	1	; select bank1
  2526  0D70  0839               	movf	flag_clear@bit_and^(0+128),w
  2527  0D71  00BA               	movwf	??_flag_clear^(0+128)
  2528  0D72  083A               	movf	??_flag_clear^(0+128),w
  2529  0D73  0020               	movlb	0	; select bank0
  2530  0D74  05B7               	andwf	_sw_RA4+2,f
  2531                           
  2532                           ;PIC16F1827-ChargeStation4-02.c: 275: break;
  2533  0D75  0008               	return
  2534  0D76                     l3067:	
  2535                           ;PIC16F1827-ChargeStation4-02.c: 276: case 0:
  2536                           
  2537                           
  2538                           ;PIC16F1827-ChargeStation4-02.c: 277: sw_RA5.flags &= bit_and;
  2539  0D76  0021               	movlb	1	; select bank1
  2540  0D77  0839               	movf	flag_clear@bit_and^(0+128),w
  2541  0D78  00BA               	movwf	??_flag_clear^(0+128)
  2542  0D79  083A               	movf	??_flag_clear^(0+128),w
  2543  0D7A  0020               	movlb	0	; select bank0
  2544  0D7B  05BA               	andwf	_sw_RA5+2,f
  2545                           
  2546                           ;PIC16F1827-ChargeStation4-02.c: 281: }
  2547                           
  2548                           ;PIC16F1827-ChargeStation4-02.c: 280: break;
  2549                           
  2550                           ;PIC16F1827-ChargeStation4-02.c: 279: default:
  2551                           
  2552                           ;PIC16F1827-ChargeStation4-02.c: 278: break;
  2553  0D7C  0008               	return
  2554  0D7D                     l3071:	
  2555  0D7D  0021               	movlb	1	; select bank1
  2556  0D7E  083B               	movf	flag_clear@port^(0+128),w
  2557                           
  2558                           ; Switch size 1, requested type "space"
  2559                           ; Number of cases is 3, Range of values is 0 to 2
  2560                           ; switch strategies available:
  2561                           ; Name         Instructions Cycles
  2562                           ; simple_byte           10     6 (average)
  2563                           ; direct_byte           12     6 (fixed)
  2564                           ; jumptable            260     6 (fixed)
  2565                           ;	Chosen strategy is simple_byte
  2566  0D7F  3A00               	xorlw	0	; case 0
  2567  0D80  1903               	skipnz
  2568  0D81  2D76               	goto	l3067
  2569  0D82  3A01               	xorlw	1	; case 1
  2570  0D83  1903               	skipnz
  2571  0D84  2D6F               	goto	l3065
  2572  0D85  3A03               	xorlw	3	; case 2
  2573  0D86  1903               	skipnz
  2574  0D87  2D69               	goto	l3063
  2575  0D88  2D89               	goto	l397
  2576  0D89                     l397:	
  2577  0D89  0008               	return
  2578  0D8A                     __end_of_flag_clear:	
  2579                           
  2580                           	psect	text12
  2581  0F0B                     __ptext12:	
  2582 ;; *************** function ___lmul *****************
  2583 ;; Defined at:
  2584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  multiplier      4    0[BANK1 ] unsigned long 
  2587 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  product         4    8[BANK1 ] unsigned long 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  4    0[BANK1 ] unsigned long 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2599 ;;      Params:         0       0       8       0       0       0
  2600 ;;      Locals:         0       0       4       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0
  2602 ;;      Totals:         0       0      12       0       0       0
  2603 ;;Total ram usage:       12 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    6
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function ___lmul
  2615  0F0B                     ___lmul:	
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2619  0F0B  3000               	movlw	0
  2620  0F0C  0021               	movlb	1	; select bank1
  2621  0F0D  00C4               	movwf	(___lmul@product+3)^(0+128)
  2622  0F0E  3000               	movlw	0
  2623  0F0F  00C3               	movwf	(___lmul@product+2)^(0+128)
  2624  0F10  3000               	movlw	0
  2625  0F11  00C2               	movwf	(___lmul@product+1)^(0+128)
  2626  0F12  3000               	movlw	0
  2627  0F13  00C1               	movwf	___lmul@product^(0+128)
  2628  0F14                     l3095:	
  2629  0F14  1C39               	btfss	___lmul@multiplier^(0+128),0
  2630  0F15  2F1E               	goto	l3099
  2631  0F16  083D               	movf	___lmul@multiplicand^(0+128),w
  2632  0F17  07C1               	addwf	___lmul@product^(0+128),f
  2633  0F18  083E               	movf	(___lmul@multiplicand+1)^(0+128),w
  2634  0F19  3DC2               	addwfc	(___lmul@product+1)^(0+128),f
  2635  0F1A  083F               	movf	(___lmul@multiplicand+2)^(0+128),w
  2636  0F1B  3DC3               	addwfc	(___lmul@product+2)^(0+128),f
  2637  0F1C  0840               	movf	(___lmul@multiplicand+3)^(0+128),w
  2638  0F1D  3DC4               	addwfc	(___lmul@product+3)^(0+128),f
  2639  0F1E                     l3099:	
  2640  0F1E  3001               	movlw	1
  2641  0F1F                     u3395:	
  2642  0F1F  35BD               	lslf	___lmul@multiplicand^(0+128),f
  2643  0F20  0DBE               	rlf	(___lmul@multiplicand+1)^(0+128),f
  2644  0F21  0DBF               	rlf	(___lmul@multiplicand+2)^(0+128),f
  2645  0F22  0DC0               	rlf	(___lmul@multiplicand+3)^(0+128),f
  2646  0F23  0B89               	decfsz	9,f
  2647  0F24  2F1F               	goto	u3395
  2648  0F25  3001               	movlw	1
  2649  0F26                     u3405:	
  2650  0F26  36BC               	lsrf	(___lmul@multiplier+3)^(0+128),f
  2651  0F27  0CBB               	rrf	(___lmul@multiplier+2)^(0+128),f
  2652  0F28  0CBA               	rrf	(___lmul@multiplier+1)^(0+128),f
  2653  0F29  0CB9               	rrf	___lmul@multiplier^(0+128),f
  2654  0F2A  0B89               	decfsz	9,f
  2655  0F2B  2F26               	goto	u3405
  2656  0F2C  083C               	movf	(___lmul@multiplier+3)^(0+128),w
  2657  0F2D  043B               	iorwf	(___lmul@multiplier+2)^(0+128),w
  2658  0F2E  043A               	iorwf	(___lmul@multiplier+1)^(0+128),w
  2659  0F2F  0439               	iorwf	___lmul@multiplier^(0+128),w
  2660  0F30  1D03               	skipz
  2661  0F31  2F14               	goto	l3095
  2662  0F32  0844               	movf	(___lmul@product+3)^(0+128),w
  2663  0F33  00BC               	movwf	(?___lmul+3)^(0+128)
  2664  0F34  0843               	movf	(___lmul@product+2)^(0+128),w
  2665  0F35  00BB               	movwf	(?___lmul+2)^(0+128)
  2666  0F36  0842               	movf	(___lmul@product+1)^(0+128),w
  2667  0F37  00BA               	movwf	(?___lmul+1)^(0+128)
  2668  0F38  0841               	movf	___lmul@product^(0+128),w
  2669  0F39  00B9               	movwf	?___lmul^(0+128)
  2670  0F3A  0008               	return
  2671  0F3B                     __end_of___lmul:	
  2672                           
  2673                           	psect	text13
  2674  0E56                     __ptext13:	
  2675 ;; *************** function _OUT *****************
  2676 ;; Defined at:
  2677 ;;		line 211 in file "PIC16F1827-ChargeStation4-02.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  b               1    wreg     unsigned char 
  2680 ;;  value           1    0[BANK1 ] unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  b               1    1[BANK1 ] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;		None               void
  2685 ;; Registers used:
  2686 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2692 ;;      Params:         0       0       1       0       0       0
  2693 ;;      Locals:         0       0       1       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0
  2695 ;;      Totals:         0       0       2       0       0       0
  2696 ;;Total ram usage:        2 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    6
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _OUT
  2708  0E56                     _OUT:	
  2709                           
  2710                           ;incstack = 0
  2711                           ; Regs used in _OUT: [wreg-fsr0h+status,2+status,0]
  2712                           ;OUT@b stored from wreg
  2713  0E56  0021               	movlb	1	; select bank1
  2714  0E57  00BA               	movwf	OUT@b^(0+128)
  2715                           
  2716                           ;PIC16F1827-ChargeStation4-02.c: 212: switch (b) {
  2717  0E58  2E74               	goto	l3031
  2718  0E59                     l359:	
  2719                           ;PIC16F1827-ChargeStation4-02.c: 213: case 0:
  2720                           
  2721                           
  2722                           ;PIC16F1827-ChargeStation4-02.c: 214: if (value) {
  2723  0E59  0839               	movf	OUT@value^(0+128),w
  2724  0E5A  1903               	btfsc	3,2
  2725  0E5B  2E5F               	goto	l360
  2726                           
  2727                           ;PIC16F1827-ChargeStation4-02.c: 215: LATB0 = 0;
  2728  0E5C  0022               	movlb	2	; select bank2
  2729  0E5D  100D               	bcf	13,0	;volatile
  2730                           
  2731                           ;PIC16F1827-ChargeStation4-02.c: 216: } else {
  2732  0E5E  0008               	return
  2733  0E5F                     l360:	
  2734                           
  2735                           ;PIC16F1827-ChargeStation4-02.c: 217: LATB0 = 1;
  2736  0E5F  0022               	movlb	2	; select bank2
  2737  0E60  140D               	bsf	13,0	;volatile
  2738                           
  2739                           ;PIC16F1827-ChargeStation4-02.c: 218: }
  2740                           ;PIC16F1827-ChargeStation4-02.c: 219: break;
  2741  0E61  0008               	return
  2742  0E62                     l363:	
  2743                           ;PIC16F1827-ChargeStation4-02.c: 220: case 1:
  2744                           
  2745                           
  2746                           ;PIC16F1827-ChargeStation4-02.c: 221: if (value) {
  2747  0E62  0839               	movf	OUT@value^(0+128),w
  2748  0E63  1903               	btfsc	3,2
  2749  0E64  2E68               	goto	l364
  2750                           
  2751                           ;PIC16F1827-ChargeStation4-02.c: 222: LATB3 = 0;
  2752  0E65  0022               	movlb	2	; select bank2
  2753  0E66  118D               	bcf	13,3	;volatile
  2754                           
  2755                           ;PIC16F1827-ChargeStation4-02.c: 223: } else {
  2756  0E67  0008               	return
  2757  0E68                     l364:	
  2758                           
  2759                           ;PIC16F1827-ChargeStation4-02.c: 224: LATB3 = 1;
  2760  0E68  0022               	movlb	2	; select bank2
  2761  0E69  158D               	bsf	13,3	;volatile
  2762                           
  2763                           ;PIC16F1827-ChargeStation4-02.c: 225: }
  2764                           ;PIC16F1827-ChargeStation4-02.c: 226: break;
  2765  0E6A  0008               	return
  2766  0E6B                     l366:	
  2767                           ;PIC16F1827-ChargeStation4-02.c: 227: case 2:
  2768                           
  2769                           
  2770                           ;PIC16F1827-ChargeStation4-02.c: 228: if (value) {
  2771  0E6B  0839               	movf	OUT@value^(0+128),w
  2772  0E6C  1903               	btfsc	3,2
  2773  0E6D  2E71               	goto	l367
  2774                           
  2775                           ;PIC16F1827-ChargeStation4-02.c: 229: LATB6 = 0;
  2776  0E6E  0022               	movlb	2	; select bank2
  2777  0E6F  130D               	bcf	13,6	;volatile
  2778                           
  2779                           ;PIC16F1827-ChargeStation4-02.c: 230: } else {
  2780  0E70  0008               	return
  2781  0E71                     l367:	
  2782                           
  2783                           ;PIC16F1827-ChargeStation4-02.c: 231: LATB6 = 1;
  2784  0E71  0022               	movlb	2	; select bank2
  2785  0E72  170D               	bsf	13,6	;volatile
  2786                           
  2787                           ;PIC16F1827-ChargeStation4-02.c: 236: }
  2788                           
  2789                           ;PIC16F1827-ChargeStation4-02.c: 235: break;
  2790                           
  2791                           ;PIC16F1827-ChargeStation4-02.c: 234: default:
  2792                           
  2793                           ;PIC16F1827-ChargeStation4-02.c: 232: }
  2794                           ;PIC16F1827-ChargeStation4-02.c: 233: break;
  2795  0E73  0008               	return
  2796  0E74                     l3031:	
  2797  0E74  0021               	movlb	1	; select bank1
  2798  0E75  083A               	movf	OUT@b^(0+128),w
  2799                           
  2800                           ; Switch size 1, requested type "space"
  2801                           ; Number of cases is 3, Range of values is 0 to 2
  2802                           ; switch strategies available:
  2803                           ; Name         Instructions Cycles
  2804                           ; simple_byte           10     6 (average)
  2805                           ; direct_byte           12     6 (fixed)
  2806                           ; jumptable            260     6 (fixed)
  2807                           ;	Chosen strategy is simple_byte
  2808  0E76  3A00               	xorlw	0	; case 0
  2809  0E77  1903               	skipnz
  2810  0E78  2E59               	goto	l359
  2811  0E79  3A01               	xorlw	1	; case 1
  2812  0E7A  1903               	skipnz
  2813  0E7B  2E62               	goto	l363
  2814  0E7C  3A03               	xorlw	3	; case 2
  2815  0E7D  1903               	skipnz
  2816  0E7E  2E6B               	goto	l366
  2817  0E7F  2E80               	goto	l370
  2818  0E80                     l370:	
  2819  0E80  0008               	return
  2820  0E81                     __end_of_OUT:	
  2821                           
  2822                           	psect	text14
  2823  0DB0                     __ptext14:	
  2824 ;; *************** function _LED *****************
  2825 ;; Defined at:
  2826 ;;		line 239 in file "PIC16F1827-ChargeStation4-02.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  b               1    wreg     unsigned char 
  2829 ;;  value           1    0[BANK1 ] unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  b               1    1[BANK1 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;		None               void
  2834 ;; Registers used:
  2835 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2841 ;;      Params:         0       0       1       0       0       0
  2842 ;;      Locals:         0       0       1       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0
  2844 ;;      Totals:         0       0       2       0       0       0
  2845 ;;Total ram usage:        2 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    6
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _LED
  2857  0DB0                     _LED:	
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _LED: [wreg-fsr0h+status,2+status,0]
  2861                           ;LED@b stored from wreg
  2862  0DB0  0021               	movlb	1	; select bank1
  2863  0DB1  00BA               	movwf	LED@b^(0+128)
  2864                           
  2865                           ;PIC16F1827-ChargeStation4-02.c: 240: switch (b) {
  2866  0DB2  2DCB               	goto	l3037
  2867  0DB3                     l374:	
  2868                           ;PIC16F1827-ChargeStation4-02.c: 241: case 0:
  2869                           
  2870                           
  2871                           ;PIC16F1827-ChargeStation4-02.c: 242: LATB5 = value;
  2872  0DB3  1C39               	btfss	LED@value^(0+128),0
  2873  0DB4  2DB8               	goto	u3320
  2874  0DB5  0022               	movlb	2	; select bank2
  2875  0DB6  168D               	bsf	13,5	;volatile
  2876  0DB7  0008               	return
  2877  0DB8                     u3320:	
  2878  0DB8  0022               	movlb	2	; select bank2
  2879  0DB9  128D               	bcf	13,5	;volatile
  2880                           
  2881                           ;PIC16F1827-ChargeStation4-02.c: 243: break;
  2882  0DBA  0008               	return
  2883  0DBB                     l376:	
  2884                           ;PIC16F1827-ChargeStation4-02.c: 244: case 1:
  2885                           
  2886                           
  2887                           ;PIC16F1827-ChargeStation4-02.c: 245: LATA6 = value;
  2888  0DBB  1C39               	btfss	LED@value^(0+128),0
  2889  0DBC  2DC0               	goto	u3340
  2890  0DBD  0022               	movlb	2	; select bank2
  2891  0DBE  170C               	bsf	12,6	;volatile
  2892  0DBF  0008               	return
  2893  0DC0                     u3340:	
  2894  0DC0  0022               	movlb	2	; select bank2
  2895  0DC1  130C               	bcf	12,6	;volatile
  2896                           
  2897                           ;PIC16F1827-ChargeStation4-02.c: 246: break;
  2898  0DC2  0008               	return
  2899  0DC3                     l377:	
  2900                           ;PIC16F1827-ChargeStation4-02.c: 247: case 2:
  2901                           
  2902                           
  2903                           ;PIC16F1827-ChargeStation4-02.c: 248: LATA7 = value;
  2904  0DC3  1C39               	btfss	LED@value^(0+128),0
  2905  0DC4  2DC8               	goto	u3360
  2906  0DC5  0022               	movlb	2	; select bank2
  2907  0DC6  178C               	bsf	12,7	;volatile
  2908  0DC7  0008               	return
  2909  0DC8                     u3360:	
  2910  0DC8  0022               	movlb	2	; select bank2
  2911  0DC9  138C               	bcf	12,7	;volatile
  2912                           
  2913                           ;PIC16F1827-ChargeStation4-02.c: 252: }
  2914                           
  2915                           ;PIC16F1827-ChargeStation4-02.c: 251: break;
  2916                           
  2917                           ;PIC16F1827-ChargeStation4-02.c: 250: default:
  2918                           
  2919                           ;PIC16F1827-ChargeStation4-02.c: 249: break;
  2920  0DCA  0008               	return
  2921  0DCB                     l3037:	
  2922  0DCB  0021               	movlb	1	; select bank1
  2923  0DCC  083A               	movf	LED@b^(0+128),w
  2924                           
  2925                           ; Switch size 1, requested type "space"
  2926                           ; Number of cases is 3, Range of values is 0 to 2
  2927                           ; switch strategies available:
  2928                           ; Name         Instructions Cycles
  2929                           ; simple_byte           10     6 (average)
  2930                           ; direct_byte           12     6 (fixed)
  2931                           ; jumptable            260     6 (fixed)
  2932                           ;	Chosen strategy is simple_byte
  2933  0DCD  3A00               	xorlw	0	; case 0
  2934  0DCE  1903               	skipnz
  2935  0DCF  2DB3               	goto	l374
  2936  0DD0  3A01               	xorlw	1	; case 1
  2937  0DD1  1903               	skipnz
  2938  0DD2  2DBB               	goto	l376
  2939  0DD3  3A03               	xorlw	3	; case 2
  2940  0DD4  1903               	skipnz
  2941  0DD5  2DC3               	goto	l377
  2942  0DD6  2DD7               	goto	l379
  2943  0DD7                     l379:	
  2944  0DD7  0008               	return
  2945  0DD8                     __end_of_LED:	
  2946                           
  2947                           	psect	text15
  2948  0E01                     __ptext15:	
  2949 ;; *************** function _EEP_Writes *****************
  2950 ;; Defined at:
  2951 ;;		line 453 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  Reg_h           1    wreg     unsigned char 
  2954 ;;  Reg_l           1    4[BANK1 ] unsigned char 
  2955 ;;  data_0          1    5[BANK1 ] unsigned char 
  2956 ;;  data_1          1    6[BANK1 ] unsigned char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  Reg_h           1    8[BANK1 ] unsigned char 
  2959 ;;  ans             1    9[BANK1 ] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;		None               void
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2969 ;;      Params:         0       0       3       0       0       0
  2970 ;;      Locals:         0       0       2       0       0       0
  2971 ;;      Temps:          0       0       1       0       0       0
  2972 ;;      Totals:         0       0       6       0       0       0
  2973 ;;Total ram usage:        6 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    8
  2976 ;; This function calls:
  2977 ;;		_I2C_Send
  2978 ;;		_I2C_Start
  2979 ;;		_I2C_Stop
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _EEP_Writes
  2987  0E01                     _EEP_Writes:	
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _EEP_Writes: [wreg+status,2+status,0+pclath+cstack]
  2991                           ;EEP_Writes@Reg_h stored from wreg
  2992  0E01  0021               	movlb	1	; select bank1
  2993  0E02  00C1               	movwf	EEP_Writes@Reg_h^(0+128)
  2994                           
  2995                           ;My_header_16F.h: 454: uint8_t ans;
  2996                           ;My_header_16F.h: 455: ans = I2C_Start(0x50, 0);
  2997  0E03  01BB               	clrf	I2C_Start@rw^(0+128)
  2998  0E04  3050               	movlw	80
  2999  0E05  318C  24AA  318E   	fcall	_I2C_Start
  3000  0E08  0021               	movlb	1	; select bank1
  3001  0E09  00C0               	movwf	??_EEP_Writes^(0+128)
  3002  0E0A  0840               	movf	??_EEP_Writes^(0+128),w
  3003  0E0B  00C2               	movwf	EEP_Writes@ans^(0+128)
  3004                           
  3005                           ;My_header_16F.h: 456: if (ans == 0) {
  3006  0E0C  08C2               	movf	EEP_Writes@ans^(0+128),f
  3007  0E0D  1D03               	skipz
  3008  0E0E  2E22               	goto	l271
  3009                           
  3010                           ;My_header_16F.h: 458: I2C_Send(Reg_h);
  3011  0E0F  0841               	movf	EEP_Writes@Reg_h^(0+128),w
  3012  0E10  318B  23B4  318E   	fcall	_I2C_Send
  3013                           
  3014                           ;My_header_16F.h: 459: I2C_Send(Reg_l);
  3015  0E13  0021               	movlb	1	; select bank1
  3016  0E14  083D               	movf	EEP_Writes@Reg_l^(0+128),w
  3017  0E15  318B  23B4  318E   	fcall	_I2C_Send
  3018                           
  3019                           ;My_header_16F.h: 460: I2C_Send(data_0);
  3020  0E18  0021               	movlb	1	; select bank1
  3021  0E19  083E               	movf	EEP_Writes@data_0^(0+128),w
  3022  0E1A  318B  23B4  318E   	fcall	_I2C_Send
  3023                           
  3024                           ;My_header_16F.h: 461: I2C_Send(data_1);
  3025  0E1D  0021               	movlb	1	; select bank1
  3026  0E1E  083F               	movf	EEP_Writes@data_1^(0+128),w
  3027  0E1F  318B  23B4  318E   	fcall	_I2C_Send
  3028  0E22                     l271:	
  3029                           
  3030                           ;My_header_16F.h: 462: }
  3031                           ;My_header_16F.h: 463: I2C_Stop();
  3032  0E22  318B  2344  318E   	fcall	_I2C_Stop
  3033                           
  3034                           ;My_header_16F.h: 464: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3035  0E25  3045               	movlw	69
  3036  0E26  0021               	movlb	1	; select bank1
  3037  0E27  00C0               	movwf	??_EEP_Writes^(0+128)
  3038  0E28                     u3937:	
  3039  0E28  0BC0               	decfsz	??_EEP_Writes^(0+128),f
  3040  0E29  2E28               	goto	u3937
  3041  0E2A  0008               	return
  3042  0E2B                     __end_of_EEP_Writes:	
  3043                           
  3044                           	psect	text16
  3045  0F71                     __ptext16:	
  3046 ;; *************** function _EEP_Read *****************
  3047 ;; Defined at:
  3048 ;;		line 435 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  Reg_h           1    wreg     unsigned char 
  3051 ;;  Reg_l           1    6[BANK1 ] unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  Reg_h           1    8[BANK1 ] unsigned char 
  3054 ;;  ans             1   10[BANK1 ] unsigned char 
  3055 ;;  data            1    9[BANK1 ] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      unsigned char 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3065 ;;      Params:         0       0       1       0       0       0
  3066 ;;      Locals:         0       0       3       0       0       0
  3067 ;;      Temps:          0       0       1       0       0       0
  3068 ;;      Totals:         0       0       5       0       0       0
  3069 ;;Total ram usage:        5 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    8
  3072 ;; This function calls:
  3073 ;;		_I2C_Receive
  3074 ;;		_I2C_Send
  3075 ;;		_I2C_Start
  3076 ;;		_I2C_Stop
  3077 ;;		_I2C_rStart
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           
  3084                           ;psect for function _EEP_Read
  3085  0F71                     _EEP_Read:	
  3086                           
  3087                           ;incstack = 0
  3088                           ; Regs used in _EEP_Read: [wreg+status,2+status,0+pclath+cstack]
  3089                           ;EEP_Read@Reg_h stored from wreg
  3090  0F71  0021               	movlb	1	; select bank1
  3091  0F72  00C1               	movwf	EEP_Read@Reg_h^(0+128)
  3092                           
  3093                           ;My_header_16F.h: 436: uint8_t ans;
  3094                           ;My_header_16F.h: 437: uint8_t data;
  3095                           ;My_header_16F.h: 439: ans = I2C_Start(0x50, 0);
  3096  0F73  01BB               	clrf	I2C_Start@rw^(0+128)
  3097  0F74  3050               	movlw	80
  3098  0F75  318C  24AA  318F   	fcall	_I2C_Start
  3099  0F78  0021               	movlb	1	; select bank1
  3100  0F79  00C0               	movwf	??_EEP_Read^(0+128)
  3101  0F7A  0840               	movf	??_EEP_Read^(0+128),w
  3102  0F7B  00C3               	movwf	EEP_Read@ans^(0+128)
  3103                           
  3104                           ;My_header_16F.h: 440: if (ans == 0) {
  3105  0F7C  08C3               	movf	EEP_Read@ans^(0+128),f
  3106  0F7D  1D03               	skipz
  3107  0F7E  2F88               	goto	l266
  3108                           
  3109                           ;My_header_16F.h: 441: I2C_Send(Reg_h);
  3110  0F7F  0841               	movf	EEP_Read@Reg_h^(0+128),w
  3111  0F80  318B  23B4  318F   	fcall	_I2C_Send
  3112                           
  3113                           ;My_header_16F.h: 442: I2C_Send(Reg_l);
  3114  0F83  0021               	movlb	1	; select bank1
  3115  0F84  083F               	movf	EEP_Read@Reg_l^(0+128),w
  3116  0F85  318B  23B4  318F   	fcall	_I2C_Send
  3117  0F88                     l266:	
  3118                           
  3119                           ;My_header_16F.h: 443: }
  3120                           ;My_header_16F.h: 444: ans = I2C_rStart(0x50, 1);
  3121  0F88  3050               	movlw	80
  3122  0F89  0021               	movlb	1	; select bank1
  3123  0F8A  00BB               	movwf	I2C_rStart@adrs^(0+128)
  3124  0F8B  3000               	movlw	0
  3125  0F8C  00BC               	movwf	(I2C_rStart@adrs^(0+128)+1)
  3126  0F8D  3001               	movlw	1
  3127  0F8E  00BD               	movwf	I2C_rStart@rw^(0+128)
  3128  0F8F  3000               	movlw	0
  3129  0F90  00BE               	movwf	(I2C_rStart@rw^(0+128)+1)
  3130  0F91  318C  2422  318F   	fcall	_I2C_rStart
  3131  0F94  0021               	movlb	1	; select bank1
  3132  0F95  00C0               	movwf	??_EEP_Read^(0+128)
  3133  0F96  0840               	movf	??_EEP_Read^(0+128),w
  3134  0F97  00C3               	movwf	EEP_Read@ans^(0+128)
  3135                           
  3136                           ;My_header_16F.h: 445: if (ans == 0) {
  3137  0F98  08C3               	movf	EEP_Read@ans^(0+128),f
  3138  0F99  1D03               	skipz
  3139  0F9A  2FA3               	goto	l267
  3140                           
  3141                           ;My_header_16F.h: 446: data = I2C_Receive(1);
  3142  0F9B  3001               	movlw	1
  3143  0F9C  318C  24E3  318F   	fcall	_I2C_Receive
  3144  0F9F  0021               	movlb	1	; select bank1
  3145  0FA0  00C0               	movwf	??_EEP_Read^(0+128)
  3146  0FA1  0840               	movf	??_EEP_Read^(0+128),w
  3147  0FA2  00C2               	movwf	EEP_Read@data^(0+128)
  3148  0FA3                     l267:	
  3149                           
  3150                           ;My_header_16F.h: 447: }
  3151                           ;My_header_16F.h: 448: I2C_Stop();
  3152  0FA3  318B  2344  318F   	fcall	_I2C_Stop
  3153                           
  3154                           ;My_header_16F.h: 449: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3155  0FA6  3045               	movlw	69
  3156  0FA7  0021               	movlb	1	; select bank1
  3157  0FA8  00C0               	movwf	??_EEP_Read^(0+128)
  3158  0FA9                     u3947:	
  3159  0FA9  0BC0               	decfsz	??_EEP_Read^(0+128),f
  3160  0FAA  2FA9               	goto	u3947
  3161                           
  3162                           ;My_header_16F.h: 450: return data;
  3163  0FAB  0021               	movlb	1	; select bank1
  3164  0FAC  0842               	movf	EEP_Read@data^(0+128),w
  3165  0FAD  0008               	return
  3166  0FAE                     __end_of_EEP_Read:	
  3167                           
  3168                           	psect	text17
  3169  0C22                     __ptext17:	
  3170 ;; *************** function _I2C_rStart *****************
  3171 ;; Defined at:
  3172 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  adrs            2    2[BANK1 ] int 
  3175 ;;  rw              2    4[BANK1 ] int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      unsigned char 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0, pclath, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3187 ;;      Params:         0       0       4       0       0       0
  3188 ;;      Locals:         0       0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0
  3190 ;;      Totals:         0       0       4       0       0       0
  3191 ;;Total ram usage:        4 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    7
  3194 ;; This function calls:
  3195 ;;		_I2C_IdleCheck
  3196 ;; This function is called by:
  3197 ;;		_EEP_Read
  3198 ;;		_RTC_Read
  3199 ;;		_TM_Read
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function _I2C_rStart
  3205  0C22                     _I2C_rStart:	
  3206                           
  3207                           ;My_header_16F.h: 227: I2C_IdleCheck(0x5);
  3208                           
  3209                           ;incstack = 0
  3210                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  3211  0C22  3005               	movlw	5
  3212  0C23  318B  2374  318C   	fcall	_I2C_IdleCheck
  3213                           
  3214                           ;My_header_16F.h: 228: SSP1CON2bits.RSEN = 1;
  3215  0C26  0024               	movlb	4	; select bank4
  3216  0C27  1496               	bsf	22,1	;volatile
  3217                           
  3218                           ;My_header_16F.h: 230: I2C_IdleCheck(0x5);
  3219  0C28  3005               	movlw	5
  3220  0C29  318B  2374  318C   	fcall	_I2C_IdleCheck
  3221                           
  3222                           ;My_header_16F.h: 231: SSP1IF = 0;
  3223  0C2C  0020               	movlb	0	; select bank0
  3224  0C2D  1191               	bcf	17,3	;volatile
  3225                           
  3226                           ;My_header_16F.h: 232: SSP1BUF = (char) ((adrs << 1) + rw);
  3227  0C2E  0021               	movlb	1	; select bank1
  3228  0C2F  353B               	lslf	I2C_rStart@adrs^(0+128),w
  3229  0C30  073D               	addwf	I2C_rStart@rw^(0+128),w
  3230  0C31  0024               	movlb	4	; select bank4
  3231  0C32  0091               	movwf	17	;volatile
  3232  0C33                     l194:	
  3233                           ;My_header_16F.h: 233: while (!SSP1IF);
  3234                           
  3235  0C33  0020               	movlb	0	; select bank0
  3236  0C34  1D91               	btfss	17,3	;volatile
  3237  0C35  2C33               	goto	l194
  3238                           
  3239                           ;My_header_16F.h: 234: return SSP1CON2bits.ACKSTAT;
  3240  0C36  0024               	movlb	4	; select bank4
  3241  0C37  0E16               	swapf	22,w	;volatile
  3242  0C38  0C89               	rrf	9,f
  3243  0C39  0C89               	rrf	9,f
  3244  0C3A  3901               	andlw	1
  3245  0C3B  0008               	return
  3246  0C3C                     __end_of_I2C_rStart:	
  3247                           
  3248                           	psect	text18
  3249  0B44                     __ptext18:	
  3250 ;; *************** function _I2C_Stop *****************
  3251 ;; Defined at:
  3252 ;;		line 237 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;		None               void
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3266 ;;      Params:         0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    7
  3273 ;; This function calls:
  3274 ;;		_I2C_IdleCheck
  3275 ;; This function is called by:
  3276 ;;		_LCD_Command
  3277 ;;		_EEP_Read
  3278 ;;		_EEP_Writes
  3279 ;;		_LCD_CreateChar
  3280 ;;		_RTC_Write
  3281 ;;		_RTC_Read
  3282 ;;		_TM_init
  3283 ;;		_TM_Read
  3284 ;;		_EEP_Write
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _I2C_Stop
  3290  0B44                     _I2C_Stop:	
  3291                           
  3292                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3296  0B44  3005               	movlw	5
  3297  0B45  318B  2374         	fcall	_I2C_IdleCheck
  3298                           
  3299                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  3300  0B47  0024               	movlb	4	; select bank4
  3301  0B48  1516               	bsf	22,2	;volatile
  3302  0B49  0008               	return
  3303  0B4A                     __end_of_I2C_Stop:	
  3304                           
  3305                           	psect	text19
  3306  0CAA                     __ptext19:	
  3307 ;; *************** function _I2C_Start *****************
  3308 ;; Defined at:
  3309 ;;		line 213 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  adrs            1    wreg     unsigned char 
  3312 ;;  rw              1    2[BANK1 ] unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  adrs            1    3[BANK1 ] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3324 ;;      Params:         0       0       1       0       0       0
  3325 ;;      Locals:         0       0       1       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0
  3327 ;;      Totals:         0       0       2       0       0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    7
  3331 ;; This function calls:
  3332 ;;		_I2C_IdleCheck
  3333 ;; This function is called by:
  3334 ;;		_LCD_Command
  3335 ;;		_EEP_Read
  3336 ;;		_EEP_Writes
  3337 ;;		_LCD_CreateChar
  3338 ;;		_RTC_Write
  3339 ;;		_RTC_Read
  3340 ;;		_TM_init
  3341 ;;		_TM_Read
  3342 ;;		_EEP_Write
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _I2C_Start
  3348  0CAA                     _I2C_Start:	
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3352                           ;I2C_Start@adrs stored from wreg
  3353  0CAA  0021               	movlb	1	; select bank1
  3354  0CAB  00BC               	movwf	I2C_Start@adrs^(0+128)
  3355                           
  3356                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  3357  0CAC  3005               	movlw	5
  3358  0CAD  318B  2374  318C   	fcall	_I2C_IdleCheck
  3359                           
  3360                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  3361  0CB0  0024               	movlb	4	; select bank4
  3362  0CB1  1416               	bsf	22,0	;volatile
  3363                           
  3364                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  3365  0CB2  3005               	movlw	5
  3366  0CB3  318B  2374  318C   	fcall	_I2C_IdleCheck
  3367                           
  3368                           ;My_header_16F.h: 219: SSP1IF = 0;
  3369  0CB6  0020               	movlb	0	; select bank0
  3370  0CB7  1191               	bcf	17,3	;volatile
  3371                           
  3372                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3373  0CB8  0021               	movlb	1	; select bank1
  3374  0CB9  353C               	lslf	I2C_Start@adrs^(0+128),w
  3375  0CBA  073B               	addwf	I2C_Start@rw^(0+128),w
  3376  0CBB  0024               	movlb	4	; select bank4
  3377  0CBC  0091               	movwf	17	;volatile
  3378  0CBD                     l188:	
  3379                           ;My_header_16F.h: 221: while (!SSP1IF);
  3380                           
  3381  0CBD  0020               	movlb	0	; select bank0
  3382  0CBE  1D91               	btfss	17,3	;volatile
  3383  0CBF  2CBD               	goto	l188
  3384                           
  3385                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  3386  0CC0  0024               	movlb	4	; select bank4
  3387  0CC1  0E16               	swapf	22,w	;volatile
  3388  0CC2  0C89               	rrf	9,f
  3389  0CC3  0C89               	rrf	9,f
  3390  0CC4  3901               	andlw	1
  3391  0CC5  0008               	return
  3392  0CC6                     __end_of_I2C_Start:	
  3393                           
  3394                           	psect	text20
  3395  0BB4                     __ptext20:	
  3396 ;; *************** function _I2C_Send *****************
  3397 ;; Defined at:
  3398 ;;		line 243 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  data            1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  data            1    2[BANK1 ] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      unsigned char 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3412 ;;      Params:         0       0       0       0       0       0
  3413 ;;      Locals:         0       0       1       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0
  3415 ;;      Totals:         0       0       1       0       0       0
  3416 ;;Total ram usage:        1 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    7
  3419 ;; This function calls:
  3420 ;;		_I2C_IdleCheck
  3421 ;; This function is called by:
  3422 ;;		_LCD_Command
  3423 ;;		_EEP_Read
  3424 ;;		_EEP_Writes
  3425 ;;		_LCD_CreateChar
  3426 ;;		_RTC_Write
  3427 ;;		_RTC_Read
  3428 ;;		_TM_init
  3429 ;;		_TM_Read
  3430 ;;		_EEP_Write
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function _I2C_Send
  3436  0BB4                     _I2C_Send:	
  3437                           
  3438                           ;incstack = 0
  3439                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3440                           ;I2C_Send@data stored from wreg
  3441  0BB4  0021               	movlb	1	; select bank1
  3442  0BB5  00BB               	movwf	I2C_Send@data^(0+128)
  3443                           
  3444                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  3445  0BB6  3005               	movlw	5
  3446  0BB7  318B  2374  318B   	fcall	_I2C_IdleCheck
  3447                           
  3448                           ;My_header_16F.h: 245: SSP1IF = 0;
  3449  0BBA  0020               	movlb	0	; select bank0
  3450  0BBB  1191               	bcf	17,3	;volatile
  3451                           
  3452                           ;My_header_16F.h: 246: SSP1BUF = data;
  3453  0BBC  0021               	movlb	1	; select bank1
  3454  0BBD  083B               	movf	I2C_Send@data^(0+128),w
  3455  0BBE  0024               	movlb	4	; select bank4
  3456  0BBF  0091               	movwf	17	;volatile
  3457  0BC0                     l203:	
  3458                           ;My_header_16F.h: 247: while (!SSP1IF);
  3459                           
  3460  0BC0  0020               	movlb	0	; select bank0
  3461  0BC1  1D91               	btfss	17,3	;volatile
  3462  0BC2  2BC0               	goto	l203
  3463                           
  3464                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  3465                           ;	Return value of _I2C_Send is never used
  3466  0BC3  0024               	movlb	4	; select bank4
  3467  0BC4  0816               	movf	22,w	;volatile
  3468  0BC5  0008               	return
  3469  0BC6                     __end_of_I2C_Send:	
  3470                           
  3471                           	psect	text21
  3472  0CE3                     __ptext21:	
  3473 ;; *************** function _I2C_Receive *****************
  3474 ;; Defined at:
  3475 ;;		line 251 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  ack             1    wreg     unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  ack             1    3[BANK1 ] unsigned char 
  3480 ;;  data            1    4[BANK1 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      unsigned char 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3490 ;;      Params:         0       0       0       0       0       0
  3491 ;;      Locals:         0       0       2       0       0       0
  3492 ;;      Temps:          0       0       1       0       0       0
  3493 ;;      Totals:         0       0       3       0       0       0
  3494 ;;Total ram usage:        3 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    7
  3497 ;; This function calls:
  3498 ;;		_I2C_IdleCheck
  3499 ;; This function is called by:
  3500 ;;		_EEP_Read
  3501 ;;		_RTC_Read
  3502 ;;		_TM_Read
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _I2C_Receive
  3508  0CE3                     _I2C_Receive:	
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  3512                           ;I2C_Receive@ack stored from wreg
  3513  0CE3  0021               	movlb	1	; select bank1
  3514  0CE4  00BC               	movwf	I2C_Receive@ack^(0+128)
  3515                           
  3516                           ;My_header_16F.h: 252: uint8_t data;
  3517                           ;My_header_16F.h: 254: I2C_IdleCheck(0x5);
  3518  0CE5  3005               	movlw	5
  3519  0CE6  318B  2374  318C   	fcall	_I2C_IdleCheck
  3520                           
  3521                           ;My_header_16F.h: 255: SSP1CON2bits.RCEN = 1;
  3522  0CE9  0024               	movlb	4	; select bank4
  3523  0CEA  1596               	bsf	22,3	;volatile
  3524                           
  3525                           ;My_header_16F.h: 256: I2C_IdleCheck(0x4);
  3526  0CEB  3004               	movlw	4
  3527  0CEC  318B  2374  318C   	fcall	_I2C_IdleCheck
  3528                           
  3529                           ;My_header_16F.h: 257: data = SSP1BUF;
  3530  0CEF  0024               	movlb	4	; select bank4
  3531  0CF0  0811               	movf	17,w	;volatile
  3532  0CF1  0021               	movlb	1	; select bank1
  3533  0CF2  00BB               	movwf	??_I2C_Receive^(0+128)
  3534  0CF3  083B               	movf	??_I2C_Receive^(0+128),w
  3535  0CF4  00BD               	movwf	I2C_Receive@data^(0+128)
  3536                           
  3537                           ;My_header_16F.h: 258: I2C_IdleCheck(0x5);
  3538  0CF5  3005               	movlw	5
  3539  0CF6  318B  2374         	fcall	_I2C_IdleCheck
  3540                           
  3541                           ;My_header_16F.h: 259: SSP1CON2bits.ACKDT = ack;
  3542  0CF8  0021               	movlb	1	; select bank1
  3543  0CF9  083C               	movf	I2C_Receive@ack^(0+128),w
  3544  0CFA  0024               	movlb	4	; select bank4
  3545  0CFB  1D03               	skipz
  3546  0CFC  1696               	bsf	22,5	;volatile
  3547  0CFD  1903               	skipnz
  3548  0CFE  1296               	bcf	22,5	;volatile
  3549                           
  3550                           ;My_header_16F.h: 260: SSP1CON2bits.ACKEN = 1;
  3551  0CFF  1616               	bsf	22,4	;volatile
  3552                           
  3553                           ;My_header_16F.h: 261: return data;
  3554  0D00  0021               	movlb	1	; select bank1
  3555  0D01  083D               	movf	I2C_Receive@data^(0+128),w
  3556  0D02  0008               	return
  3557  0D03                     __end_of_I2C_Receive:	
  3558                           
  3559                           	psect	text22
  3560  0B74                     __ptext22:	
  3561 ;; *************** function _I2C_IdleCheck *****************
  3562 ;; Defined at:
  3563 ;;		line 199 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  mask            1    wreg     unsigned char 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  mask            1    1[BANK1 ] unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;		None               void
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3577 ;;      Params:         0       0       0       0       0       0
  3578 ;;      Locals:         0       0       1       0       0       0
  3579 ;;      Temps:          0       0       1       0       0       0
  3580 ;;      Totals:         0       0       2       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    6
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_I2C_Start
  3588 ;;		_I2C_rStart
  3589 ;;		_I2C_Stop
  3590 ;;		_I2C_Send
  3591 ;;		_I2C_Receive
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _I2C_IdleCheck
  3597  0B74                     _I2C_IdleCheck:	
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3601                           ;I2C_IdleCheck@mask stored from wreg
  3602  0B74  0021               	movlb	1	; select bank1
  3603  0B75  00BA               	movwf	I2C_IdleCheck@mask^(0+128)
  3604  0B76                     l2843:	
  3605                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3606                           
  3607  0B76  083A               	movf	I2C_IdleCheck@mask^(0+128),w
  3608  0B77  0024               	movlb	4	; select bank4
  3609  0B78  0514               	andwf	20,w	;volatile
  3610  0B79  0021               	movlb	1	; select bank1
  3611  0B7A  00B9               	movwf	??_I2C_IdleCheck^(0+128)
  3612  0B7B  0024               	movlb	4	; select bank4
  3613  0B7C  0816               	movf	22,w	;volatile
  3614  0B7D  391F               	andlw	31
  3615  0B7E  0021               	movlb	1	; select bank1
  3616  0B7F  0439               	iorwf	??_I2C_IdleCheck^(0+128),w
  3617  0B80  1903               	btfsc	3,2
  3618  0B81  0008               	return
  3619  0B82  2B76               	goto	l2843
  3620  0B83                     __end_of_I2C_IdleCheck:	
  3621                           
  3622                           	psect	intentry
  3623  0004                     __pintentry:	
  3624 ;; *************** function _isr *****************
  3625 ;; Defined at:
  3626 ;;		line 65 in file "PIC16F1827-ChargeStation4-02.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  i               1   26[BANK0 ] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3640 ;;      Params:         0       0       0       0       0       0
  3641 ;;      Locals:         0       1       0       0       0       0
  3642 ;;      Temps:          0       8       0       0       0       0
  3643 ;;      Totals:         0       9       0       0       0       0
  3644 ;;Total ram usage:        9 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    5
  3647 ;; This function calls:
  3648 ;;		___lldiv
  3649 ;;		___wmul
  3650 ;;		_adc
  3651 ;;		_button_timer_interrupt
  3652 ;;		_display
  3653 ;;		_lchika
  3654 ;;		_ringbuf_num
  3655 ;;		_ringbuf_pop
  3656 ;;		i1_OUT
  3657 ;; This function is called by:
  3658 ;;		Interrupt level 1
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662  0004                     _isr:	
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3666  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3667  0005  3180               	pagesel	$
  3668  0006  0020               	movlb	0	; select bank0
  3669  0007  087F               	movf	127,w
  3670  0008  00D4               	movwf	??_isr+7
  3671                           
  3672                           ;PIC16F1827-ChargeStation4-02.c: 66: uint8_t i;
  3673                           ;PIC16F1827-ChargeStation4-02.c: 67: if (PIR1bits.RCIF == 1) {
  3674  0009  1A91               	btfsc	17,5	;volatile
  3675                           
  3676                           ;PIC16F1827-ChargeStation4-02.c: 68: PIR1bits.RCIF = 0;
  3677  000A  1291               	bcf	17,5	;volatile
  3678                           
  3679                           ;PIC16F1827-ChargeStation4-02.c: 69: }
  3680                           ;PIC16F1827-ChargeStation4-02.c: 70: if (PIR1bits.TXIF & PIE1bits.TXIE) {
  3681  000B  0021               	movlb	1	; select bank1
  3682  000C  0E11               	swapf	17,w	;volatile
  3683  000D  3901               	andlw	1
  3684  000E  0020               	movlb	0	; select bank0
  3685  000F  00CD               	movwf	??_isr
  3686  0010  0E11               	swapf	17,w	;volatile
  3687  0011  3901               	andlw	1
  3688  0012  054D               	andwf	??_isr,w
  3689  0013  1903               	btfsc	3,2
  3690  0014  2825               	goto	i1l306
  3691                           
  3692                           ;PIC16F1827-ChargeStation4-02.c: 71: if (ringbuf_num(&tx_buf)) {
  3693  0015  30B5               	movlw	_tx_buf& (0+255)
  3694  0016  318E  262B  3180   	fcall	_ringbuf_num
  3695  0019  3A00               	xorlw	0
  3696  001A  1903               	skipnz
  3697  001B  2823               	goto	i1l307
  3698                           
  3699                           ;PIC16F1827-ChargeStation4-02.c: 72: TXREG = ringbuf_pop(&tx_buf);
  3700  001C  30B5               	movlw	_tx_buf& (0+255)
  3701  001D  318E  2681  3180   	fcall	_ringbuf_pop
  3702  0020  0023               	movlb	3	; select bank3
  3703  0021  009A               	movwf	26	;volatile
  3704                           
  3705                           ;PIC16F1827-ChargeStation4-02.c: 73: } else {
  3706  0022  2825               	goto	i1l306
  3707  0023                     i1l307:	
  3708                           
  3709                           ;PIC16F1827-ChargeStation4-02.c: 74: PIE1bits.TXIE = 0;
  3710  0023  0021               	movlb	1	; select bank1
  3711  0024  1211               	bcf	17,4	;volatile
  3712  0025                     i1l306:	
  3713                           
  3714                           ;PIC16F1827-ChargeStation4-02.c: 75: }
  3715                           ;PIC16F1827-ChargeStation4-02.c: 76: }
  3716                           ;PIC16F1827-ChargeStation4-02.c: 77: if (PIR1bits.TMR1IF == 1) {
  3717  0025  0020               	movlb	0	; select bank0
  3718  0026  1C11               	btfss	17,0	;volatile
  3719  0027  28B5               	goto	i1l309
  3720                           
  3721                           ;PIC16F1827-ChargeStation4-02.c: 78: PIR1bits.TMR1IF = 0;
  3722  0028  1011               	bcf	17,0	;volatile
  3723                           
  3724                           ;PIC16F1827-ChargeStation4-02.c: 79: button_timer_interrupt(&sw_RA3, !RA3);
  3725  0029  1003               	clrc
  3726  002A  1D8C               	btfss	12,3	;volatile
  3727  002B  1403               	setc
  3728  002C  3000               	movlw	0
  3729  002D  1803               	btfsc	3,0
  3730  002E  3001               	movlw	1
  3731  002F  00F0               	movwf	button_timer_interrupt@sw_value
  3732  0030  3032               	movlw	_sw_RA3& (0+255)
  3733  0031  3185  2548  3180   	fcall	_button_timer_interrupt
  3734                           
  3735                           ;PIC16F1827-ChargeStation4-02.c: 80: button_timer_interrupt(&sw_RA4, !RA4);
  3736  0034  1003               	clrc
  3737  0035  0020               	movlb	0	; select bank0
  3738  0036  1E0C               	btfss	12,4	;volatile
  3739  0037  1403               	setc
  3740  0038  3000               	movlw	0
  3741  0039  1803               	btfsc	3,0
  3742  003A  3001               	movlw	1
  3743  003B  00F0               	movwf	button_timer_interrupt@sw_value
  3744  003C  3035               	movlw	_sw_RA4& (0+255)
  3745  003D  3185  2548  3180   	fcall	_button_timer_interrupt
  3746                           
  3747                           ;PIC16F1827-ChargeStation4-02.c: 81: button_timer_interrupt(&sw_RA5, !RA5);
  3748  0040  1003               	clrc
  3749  0041  0020               	movlb	0	; select bank0
  3750  0042  1E8C               	btfss	12,5	;volatile
  3751  0043  1403               	setc
  3752  0044  3000               	movlw	0
  3753  0045  1803               	btfsc	3,0
  3754  0046  3001               	movlw	1
  3755  0047  00F0               	movwf	button_timer_interrupt@sw_value
  3756  0048  3038               	movlw	_sw_RA5& (0+255)
  3757  0049  3185  2548  3180   	fcall	_button_timer_interrupt
  3758                           
  3759                           ;PIC16F1827-ChargeStation4-02.c: 83: for (i = 0; i < 3; i++) {
  3760  004C  0020               	movlb	0	; select bank0
  3761  004D  01D5               	clrf	isr@i
  3762  004E  3003               	movlw	3
  3763  004F  0255               	subwf	isr@i,w
  3764  0050  1803               	btfsc	3,0
  3765  0051  28B5               	goto	i1l309
  3766  0052                     i1l3229:	
  3767                           
  3768                           ;PIC16F1827-ChargeStation4-02.c: 84: v[i] = 2 * adc(2 - i) * 3 / 4;
  3769  0052  0355               	decf	isr@i,w
  3770  0053  3AFF               	xorlw	255
  3771  0054  3E02               	addlw	2
  3772  0055  318C  243C  3180   	fcall	_adc
  3773  0058  3570               	lslf	?_adc,w
  3774  0059  00F4               	movwf	___wmul@multiplier
  3775  005A  0D71               	rlf	?_adc+1,w
  3776  005B  00F5               	movwf	___wmul@multiplier+1
  3777  005C  3003               	movlw	3
  3778  005D  00F6               	movwf	___wmul@multiplicand
  3779  005E  3000               	movlw	0
  3780  005F  00F7               	movwf	___wmul@multiplicand+1
  3781  0060  318C  24C6  3180   	fcall	___wmul
  3782  0063  0874               	movf	?___wmul,w
  3783  0064  0020               	movlb	0	; select bank0
  3784  0065  00CD               	movwf	??_isr
  3785  0066  0875               	movf	?___wmul+1,w
  3786  0067  00CE               	movwf	??_isr+1
  3787  0068  36CE               	lsrf	??_isr+1,f
  3788  0069  0CCD               	rrf	??_isr,f
  3789  006A  36CE               	lsrf	??_isr+1,f
  3790  006B  0CCD               	rrf	??_isr,f
  3791  006C  3555               	lslf	isr@i,w
  3792  006D  3E26               	addlw	_v& (0+255)
  3793  006E  0086               	movwf	6
  3794  006F  0187               	clrf	7
  3795  0070  084D               	movf	??_isr,w
  3796  0071  3FC0               	movwi [0]fsr1
  3797  0072  084E               	movf	??_isr+1,w
  3798  0073  3FC1               	movwi [1]fsr1
  3799                           
  3800                           ;PIC16F1827-ChargeStation4-02.c: 86: if (v[i] < 50) {
  3801  0074  3555               	lslf	isr@i,w
  3802  0075  3E26               	addlw	_v& (0+255)
  3803  0076  0086               	movwf	6
  3804  0077  0187               	clrf	7
  3805  0078  3F40               	moviw [0]fsr1
  3806  0079  00CD               	movwf	??_isr
  3807  007A  3F41               	moviw [1]fsr1
  3808  007B  00CE               	movwf	??_isr+1
  3809  007C  3000               	movlw	0
  3810  007D  024E               	subwf	??_isr+1,w
  3811  007E  3032               	movlw	50
  3812  007F  1903               	skipnz
  3813  0080  024D               	subwf	??_isr,w
  3814  0081  1803               	skipnc
  3815  0082  28A3               	goto	i1l3237
  3816                           
  3817                           ;PIC16F1827-ChargeStation4-02.c: 87: cut[i]++;
  3818  0083  3555               	lslf	isr@i,w
  3819  0084  3E53               	addlw	_cut& (0+255)
  3820  0085  0086               	movwf	6
  3821  0086  3001               	movlw	1	; select bank2/3
  3822  0087  0087               	movwf	7
  3823  0088  3001               	movlw	1
  3824  0089  0781               	addwf	1,f
  3825  008A  3141               	addfsr 1,1
  3826  008B  1803               	skipnc
  3827  008C  0A81               	incf	1,f
  3828                           
  3829                           ;PIC16F1827-ChargeStation4-02.c: 88: if (cut[i] >= 30 * 6) {
  3830  008D  3555               	lslf	isr@i,w
  3831  008E  3E53               	addlw	_cut& (0+255)
  3832  008F  0086               	movwf	6
  3833  0090  3001               	movlw	1	; select bank2/3
  3834  0091  0087               	movwf	7
  3835  0092  3F40               	moviw [0]fsr1
  3836  0093  00CD               	movwf	??_isr
  3837  0094  3F41               	moviw [1]fsr1
  3838  0095  00CE               	movwf	??_isr+1
  3839  0096  3000               	movlw	0
  3840  0097  024E               	subwf	??_isr+1,w
  3841  0098  30B4               	movlw	180
  3842  0099  1903               	skipnz
  3843  009A  024D               	subwf	??_isr,w
  3844  009B  1C03               	skipc
  3845  009C  28AC               	goto	i1l3239
  3846                           
  3847                           ;PIC16F1827-ChargeStation4-02.c: 89: OUT(i, 0);
  3848  009D  01F0               	clrf	i1OUT@value
  3849  009E  0855               	movf	isr@i,w
  3850  009F  318D  25D8  3180   	fcall	i1_OUT
  3851                           
  3852                           ;PIC16F1827-ChargeStation4-02.c: 90: }
  3853                           ;PIC16F1827-ChargeStation4-02.c: 91: } else {
  3854  00A2  28AC               	goto	i1l3239
  3855  00A3                     i1l3237:	
  3856                           
  3857                           ;PIC16F1827-ChargeStation4-02.c: 92: cut[i] = 0;
  3858  00A3  0020               	movlb	0	; select bank0
  3859  00A4  3555               	lslf	isr@i,w
  3860  00A5  3E53               	addlw	_cut& (0+255)
  3861  00A6  0086               	movwf	6
  3862  00A7  3001               	movlw	1	; select bank2/3
  3863  00A8  0087               	movwf	7
  3864  00A9  3000               	movlw	0
  3865  00AA  3FC0               	movwi [0]fsr1
  3866  00AB  3FC1               	movwi [1]fsr1
  3867  00AC                     i1l3239:	
  3868  00AC  3001               	movlw	1
  3869  00AD  0020               	movlb	0	; select bank0
  3870  00AE  00CD               	movwf	??_isr
  3871  00AF  084D               	movf	??_isr,w
  3872  00B0  07D5               	addwf	isr@i,f
  3873  00B1  3003               	movlw	3
  3874  00B2  0255               	subwf	isr@i,w
  3875  00B3  1C03               	skipc
  3876  00B4  2852               	goto	i1l3229
  3877  00B5                     i1l309:	
  3878                           
  3879                           ;PIC16F1827-ChargeStation4-02.c: 93: }
  3880                           ;PIC16F1827-ChargeStation4-02.c: 94: }
  3881                           ;PIC16F1827-ChargeStation4-02.c: 95: }
  3882                           ;PIC16F1827-ChargeStation4-02.c: 96: if (INTCONbits.TMR0IF == 1) {
  3883  00B5  1D0B               	btfss	11,2	;volatile
  3884  00B6  2961               	goto	i1l321
  3885                           
  3886                           ;PIC16F1827-ChargeStation4-02.c: 97: INTCONbits.TMR0IF = 0;
  3887  00B7  110B               	bcf	11,2	;volatile
  3888                           
  3889                           ;PIC16F1827-ChargeStation4-02.c: 98: cnt0++;
  3890  00B8  3001               	movlw	1
  3891  00B9  07AC               	addwf	_cnt0,f
  3892  00BA  3000               	movlw	0
  3893  00BB  3DAD               	addwfc	_cnt0+1,f
  3894                           
  3895                           ;PIC16F1827-ChargeStation4-02.c: 99: if (cnt0 == 400) {
  3896  00BC  3001               	movlw	1
  3897  00BD  062D               	xorwf	_cnt0+1,w
  3898  00BE  1D03               	skipz
  3899  00BF  28C2               	goto	u366_25
  3900  00C0  3090               	movlw	144
  3901  00C1  062C               	xorwf	_cnt0,w
  3902  00C2                     u366_25:	
  3903  00C2  1D03               	skipz
  3904  00C3  28D2               	goto	i1l3253
  3905                           
  3906                           ;PIC16F1827-ChargeStation4-02.c: 100: cnt0 = 0;
  3907  00C4  01AC               	clrf	_cnt0
  3908  00C5  01AD               	clrf	_cnt0+1
  3909                           
  3910                           ;PIC16F1827-ChargeStation4-02.c: 101: lchika();
  3911  00C6  3186  2683  3180   	fcall	_lchika
  3912                           
  3913                           ;PIC16F1827-ChargeStation4-02.c: 102: display(print_port, print_content);
  3914  00C9  0020               	movlb	0	; select bank0
  3915  00CA  0830               	movf	_print_content,w
  3916  00CB  00CD               	movwf	??_isr
  3917  00CC  084D               	movf	??_isr,w
  3918  00CD  00C9               	movwf	display@co
  3919  00CE  0831               	movf	_print_port,w
  3920  00CF  3181  218A  3180   	fcall	_display
  3921  00D2                     i1l3253:	
  3922                           
  3923                           ;PIC16F1827-ChargeStation4-02.c: 103: }
  3924                           ;PIC16F1827-ChargeStation4-02.c: 104: cnt1s++;
  3925  00D2  3001               	movlw	1
  3926  00D3  0020               	movlb	0	; select bank0
  3927  00D4  07AE               	addwf	_cnt1s,f
  3928  00D5  3000               	movlw	0
  3929  00D6  3DAF               	addwfc	_cnt1s+1,f
  3930                           
  3931                           ;PIC16F1827-ChargeStation4-02.c: 106: if (cnt1s == 1953) {
  3932  00D7  3007               	movlw	7
  3933  00D8  062F               	xorwf	_cnt1s+1,w
  3934  00D9  1D03               	skipz
  3935  00DA  28DD               	goto	u367_25
  3936  00DB  30A1               	movlw	161
  3937  00DC  062E               	xorwf	_cnt1s,w
  3938  00DD                     u367_25:	
  3939  00DD  1D03               	skipz
  3940  00DE  2961               	goto	i1l321
  3941                           
  3942                           ;PIC16F1827-ChargeStation4-02.c: 107: cnt1s = 0;
  3943  00DF  01AE               	clrf	_cnt1s
  3944  00E0  01AF               	clrf	_cnt1s+1
  3945                           
  3946                           ;PIC16F1827-ChargeStation4-02.c: 108: for (i = 0; i < 3; i++) {
  3947  00E1  01D5               	clrf	isr@i
  3948  00E2  3003               	movlw	3
  3949  00E3  0255               	subwf	isr@i,w
  3950  00E4  1803               	btfsc	3,0
  3951  00E5  2961               	goto	i1l321
  3952  00E6                     i1l3263:	
  3953                           
  3954                           ;PIC16F1827-ChargeStation4-02.c: 109: ss[i] += v[i];
  3955  00E6  3555               	lslf	isr@i,w
  3956  00E7  3E26               	addlw	_v& (0+255)
  3957  00E8  0086               	movwf	6
  3958  00E9  0187               	clrf	7
  3959  00EA  3F40               	moviw [0]fsr1
  3960  00EB  00CD               	movwf	??_isr
  3961  00EC  3F41               	moviw [1]fsr1
  3962  00ED  00CE               	movwf	??_isr+1
  3963  00EE  084D               	movf	??_isr,w
  3964  00EF  00CF               	movwf	??_isr+2
  3965  00F0  084E               	movf	??_isr+1,w
  3966  00F1  00D0               	movwf	??_isr+3
  3967  00F2  01D1               	clrf	??_isr+4
  3968  00F3  01D2               	clrf	??_isr+5
  3969  00F4  0855               	movf	isr@i,w
  3970  00F5  00D3               	movwf	??_isr+6
  3971  00F6  3001               	movlw	1
  3972  00F7                     u369_25:	
  3973  00F7  35D3               	lslf	??_isr+6,f
  3974  00F8  3EFF               	addlw	-1
  3975  00F9  1D03               	skipz
  3976  00FA  28F7               	goto	u369_25
  3977  00FB  3553               	lslf	??_isr+6,w
  3978  00FC  3EA0               	addlw	_ss& (0+255)
  3979  00FD  0086               	movwf	6
  3980  00FE  0187               	clrf	7
  3981  00FF  084F               	movf	??_isr+2,w
  3982  0100  0781               	addwf	1,f
  3983  0101  3141               	addfsr 1,1
  3984  0102  0850               	movf	??_isr+3,w
  3985  0103  3D81               	addwfc	1,f
  3986  0104  3141               	addfsr 1,1
  3987  0105  0851               	movf	??_isr+4,w
  3988  0106  3D81               	addwfc	1,f
  3989  0107  3141               	addfsr 1,1
  3990  0108  0852               	movf	??_isr+5,w
  3991  0109  3D81               	addwfc	1,f
  3992                           
  3993                           ;PIC16F1827-ChargeStation4-02.c: 110: s[i] = ss[i] / 3600;
  3994  010A  3000               	movlw	0
  3995  010B  00F3               	movwf	___lldiv@divisor+3
  3996  010C  3000               	movlw	0
  3997  010D  00F2               	movwf	___lldiv@divisor+2
  3998  010E  300E               	movlw	14
  3999  010F  00F1               	movwf	___lldiv@divisor+1
  4000  0110  3010               	movlw	16
  4001  0111  00F0               	movwf	___lldiv@divisor
  4002  0112  0855               	movf	isr@i,w
  4003  0113  00CD               	movwf	??_isr
  4004  0114  3001               	movlw	1
  4005  0115                     u370_25:	
  4006  0115  35CD               	lslf	??_isr,f
  4007  0116  3EFF               	addlw	-1
  4008  0117  1D03               	skipz
  4009  0118  2915               	goto	u370_25
  4010  0119  354D               	lslf	??_isr,w
  4011  011A  3EA0               	addlw	_ss& (0+255)
  4012  011B  0086               	movwf	6
  4013  011C  0187               	clrf	7
  4014  011D  3F40               	moviw [0]fsr1
  4015  011E  00F4               	movwf	___lldiv@dividend
  4016  011F  3F41               	moviw [1]fsr1
  4017  0120  00F5               	movwf	___lldiv@dividend+1
  4018  0121  3F42               	moviw [2]fsr1
  4019  0122  00F6               	movwf	___lldiv@dividend+2
  4020  0123  3F43               	moviw [3]fsr1
  4021  0124  00F7               	movwf	___lldiv@dividend+3
  4022  0125  318F  27AE  3180   	fcall	___lldiv
  4023  0128  0020               	movlb	0	; select bank0
  4024  0129  3555               	lslf	isr@i,w
  4025  012A  3E20               	addlw	_s& (0+255)
  4026  012B  0086               	movwf	6
  4027  012C  0187               	clrf	7
  4028  012D  0870               	movf	?___lldiv,w
  4029  012E  3FC0               	movwi [0]fsr1
  4030  012F  0871               	movf	?___lldiv+1,w
  4031  0130  3FC1               	movwi [1]fsr1
  4032                           
  4033                           ;PIC16F1827-ChargeStation4-02.c: 111: if (s[i] != sp[i]) {
  4034  0131  3555               	lslf	isr@i,w
  4035  0132  3E59               	addlw	_sp& (0+255)
  4036  0133  0086               	movwf	6
  4037  0134  3001               	movlw	1	; select bank2/3
  4038  0135  0087               	movwf	7
  4039  0136  3F40               	moviw [0]fsr1
  4040  0137  00CD               	movwf	??_isr
  4041  0138  3F41               	moviw [1]fsr1
  4042  0139  00CE               	movwf	??_isr+1
  4043  013A  3555               	lslf	isr@i,w
  4044  013B  3E20               	addlw	_s& (0+255)
  4045  013C  0086               	movwf	6
  4046  013D  0187               	clrf	7
  4047  013E  3F40               	moviw [0]fsr1
  4048  013F  064D               	xorwf	??_isr,w
  4049  0140  1D03               	skipz
  4050  0141  2944               	goto	u371_25
  4051  0142  3F41               	moviw [1]fsr1
  4052  0143  064E               	xorwf	??_isr+1,w
  4053  0144                     u371_25:	
  4054  0144  1903               	skipnz
  4055  0145  2959               	goto	i1l3273
  4056                           
  4057                           ;PIC16F1827-ChargeStation4-02.c: 112: change_flag[i] = 1;
  4058  0146  0855               	movf	isr@i,w
  4059  0147  3EAC               	addlw	_change_flag& (0+255)
  4060  0148  0086               	movwf	6
  4061  0149  0187               	clrf	7
  4062  014A  0181               	clrf	1
  4063  014B  0A81               	incf	1,f
  4064                           
  4065                           ;PIC16F1827-ChargeStation4-02.c: 113: sp[i] = s[i];
  4066  014C  3555               	lslf	isr@i,w
  4067  014D  3E20               	addlw	_s& (0+255)
  4068  014E  0086               	movwf	6
  4069  014F  0187               	clrf	7
  4070  0150  3555               	lslf	isr@i,w
  4071  0151  3E59               	addlw	_sp& (0+255)
  4072  0152  0084               	movwf	4
  4073  0153  3001               	movlw	1	; select bank2/3
  4074  0154  0085               	movwf	5
  4075  0155  3F40               	moviw [0]fsr1
  4076  0156  3F80               	movwi [0]fsr0
  4077  0157  3F41               	moviw [1]fsr1
  4078  0158  3F81               	movwi [1]fsr0
  4079  0159                     i1l3273:	
  4080  0159  3001               	movlw	1
  4081  015A  00CD               	movwf	??_isr
  4082  015B  084D               	movf	??_isr,w
  4083  015C  07D5               	addwf	isr@i,f
  4084  015D  3003               	movlw	3
  4085  015E  0255               	subwf	isr@i,w
  4086  015F  1C03               	skipc
  4087  0160  28E6               	goto	i1l3263
  4088  0161                     i1l321:	
  4089  0161  0854               	movf	??_isr+7,w
  4090  0162  00FF               	movwf	127
  4091  0163  107E               	bcf	126,0	;clear compiler interrupt flag
  4092  0164  0009               	retfie
  4093  0165                     __end_of_isr:	
  4094                           
  4095                           	psect	text24
  4096  0DD8                     __ptext24:	
  4097 ;; *************** function i1_OUT *****************
  4098 ;; Defined at:
  4099 ;;		line 211 in file "PIC16F1827-ChargeStation4-02.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  b               1    wreg     unsigned char 
  4102 ;;  value           1    0[COMMON] unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  b               1    1[COMMON] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;		None               void
  4107 ;; Registers used:
  4108 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4114 ;;      Params:         1       0       0       0       0       0
  4115 ;;      Locals:         1       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0
  4117 ;;      Totals:         2       0       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_isr
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function i1_OUT
  4129  0DD8                     i1_OUT:	
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in i1_OUT: [wreg-fsr0h+status,2+status,0]
  4133                           ;i1OUT@b stored from wreg
  4134  0DD8  00F1               	movwf	i1OUT@b
  4135                           
  4136                           ;PIC16F1827-ChargeStation4-02.c: 212: switch (b) {
  4137  0DD9  2DF5               	goto	i1l2575
  4138  0DDA                     i1l359:	
  4139                           ;PIC16F1827-ChargeStation4-02.c: 213: case 0:
  4140                           
  4141                           
  4142                           ;PIC16F1827-ChargeStation4-02.c: 214: if (value) {
  4143  0DDA  0870               	movf	i1OUT@value,w
  4144  0DDB  1903               	btfsc	3,2
  4145  0DDC  2DE0               	goto	i1l360
  4146                           
  4147                           ;PIC16F1827-ChargeStation4-02.c: 215: LATB0 = 0;
  4148  0DDD  0022               	movlb	2	; select bank2
  4149  0DDE  100D               	bcf	13,0	;volatile
  4150                           
  4151                           ;PIC16F1827-ChargeStation4-02.c: 216: } else {
  4152  0DDF  0008               	return
  4153  0DE0                     i1l360:	
  4154                           
  4155                           ;PIC16F1827-ChargeStation4-02.c: 217: LATB0 = 1;
  4156  0DE0  0022               	movlb	2	; select bank2
  4157  0DE1  140D               	bsf	13,0	;volatile
  4158                           
  4159                           ;PIC16F1827-ChargeStation4-02.c: 218: }
  4160                           ;PIC16F1827-ChargeStation4-02.c: 219: break;
  4161  0DE2  0008               	return
  4162  0DE3                     i1l363:	
  4163                           ;PIC16F1827-ChargeStation4-02.c: 220: case 1:
  4164                           
  4165                           
  4166                           ;PIC16F1827-ChargeStation4-02.c: 221: if (value) {
  4167  0DE3  0870               	movf	i1OUT@value,w
  4168  0DE4  1903               	btfsc	3,2
  4169  0DE5  2DE9               	goto	i1l364
  4170                           
  4171                           ;PIC16F1827-ChargeStation4-02.c: 222: LATB3 = 0;
  4172  0DE6  0022               	movlb	2	; select bank2
  4173  0DE7  118D               	bcf	13,3	;volatile
  4174                           
  4175                           ;PIC16F1827-ChargeStation4-02.c: 223: } else {
  4176  0DE8  0008               	return
  4177  0DE9                     i1l364:	
  4178                           
  4179                           ;PIC16F1827-ChargeStation4-02.c: 224: LATB3 = 1;
  4180  0DE9  0022               	movlb	2	; select bank2
  4181  0DEA  158D               	bsf	13,3	;volatile
  4182                           
  4183                           ;PIC16F1827-ChargeStation4-02.c: 225: }
  4184                           ;PIC16F1827-ChargeStation4-02.c: 226: break;
  4185  0DEB  0008               	return
  4186  0DEC                     i1l366:	
  4187                           ;PIC16F1827-ChargeStation4-02.c: 227: case 2:
  4188                           
  4189                           
  4190                           ;PIC16F1827-ChargeStation4-02.c: 228: if (value) {
  4191  0DEC  0870               	movf	i1OUT@value,w
  4192  0DED  1903               	btfsc	3,2
  4193  0DEE  2DF2               	goto	i1l367
  4194                           
  4195                           ;PIC16F1827-ChargeStation4-02.c: 229: LATB6 = 0;
  4196  0DEF  0022               	movlb	2	; select bank2
  4197  0DF0  130D               	bcf	13,6	;volatile
  4198                           
  4199                           ;PIC16F1827-ChargeStation4-02.c: 230: } else {
  4200  0DF1  0008               	return
  4201  0DF2                     i1l367:	
  4202                           
  4203                           ;PIC16F1827-ChargeStation4-02.c: 231: LATB6 = 1;
  4204  0DF2  0022               	movlb	2	; select bank2
  4205  0DF3  170D               	bsf	13,6	;volatile
  4206                           
  4207                           ;PIC16F1827-ChargeStation4-02.c: 236: }
  4208                           
  4209                           ;PIC16F1827-ChargeStation4-02.c: 235: break;
  4210                           
  4211                           ;PIC16F1827-ChargeStation4-02.c: 234: default:
  4212                           
  4213                           ;PIC16F1827-ChargeStation4-02.c: 232: }
  4214                           ;PIC16F1827-ChargeStation4-02.c: 233: break;
  4215  0DF4  0008               	return
  4216  0DF5                     i1l2575:	
  4217  0DF5  0871               	movf	i1OUT@b,w
  4218                           
  4219                           ; Switch size 1, requested type "space"
  4220                           ; Number of cases is 3, Range of values is 0 to 2
  4221                           ; switch strategies available:
  4222                           ; Name         Instructions Cycles
  4223                           ; simple_byte           10     6 (average)
  4224                           ; direct_byte           12     6 (fixed)
  4225                           ; jumptable            260     6 (fixed)
  4226                           ;	Chosen strategy is simple_byte
  4227  0DF6  3A00               	xorlw	0	; case 0
  4228  0DF7  1903               	skipnz
  4229  0DF8  2DDA               	goto	i1l359
  4230  0DF9  3A01               	xorlw	1	; case 1
  4231  0DFA  1903               	skipnz
  4232  0DFB  2DE3               	goto	i1l363
  4233  0DFC  3A03               	xorlw	3	; case 2
  4234  0DFD  1903               	skipnz
  4235  0DFE  2DEC               	goto	i1l366
  4236  0DFF  2E00               	goto	i1l370
  4237  0E00                     i1l370:	
  4238  0E00  0008               	return
  4239  0E01                     __end_ofi1_OUT:	
  4240                           
  4241                           	psect	text25
  4242  0E81                     __ptext25:	
  4243 ;; *************** function _ringbuf_pop *****************
  4244 ;; Defined at:
  4245 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  rb              1    wreg     PTR struct ringbuf
  4248 ;;		 -> tx_buf(4), 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  rb              1    3[COMMON] PTR struct ringbuf
  4251 ;;		 -> tx_buf(4), 
  4252 ;;  ret             1    2[COMMON] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      unsigned char 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4262 ;;      Params:         0       0       0       0       0       0
  4263 ;;      Locals:         2       0       0       0       0       0
  4264 ;;      Temps:          2       0       0       0       0       0
  4265 ;;      Totals:         4       0       0       0       0       0
  4266 ;;Total ram usage:        4 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_isr
  4272 ;;		_interrupt_TXIF
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _ringbuf_pop
  4278  0E81                     _ringbuf_pop:	
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  4282                           ;ringbuf_pop@rb stored from wreg
  4283  0E81  00F3               	movwf	ringbuf_pop@rb
  4284                           
  4285                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  4286  0E82  0873               	movf	ringbuf_pop@rb,w
  4287  0E83  0086               	movwf	6
  4288  0E84  0187               	clrf	7
  4289  0E85  0873               	movf	ringbuf_pop@rb,w
  4290  0E86  3E03               	addlw	3
  4291  0E87  0084               	movwf	4
  4292  0E88  0185               	clrf	5
  4293  0E89  0800               	movf	0,w
  4294  0E8A  0701               	addwf	1,w
  4295  0E8B  00F0               	movwf	??_ringbuf_pop
  4296  0E8C  0870               	movf	??_ringbuf_pop,w
  4297  0E8D  0086               	movwf	6
  4298  0E8E  3001               	movlw	1	; select bank2/3
  4299  0E8F  0087               	movwf	7
  4300  0E90  0801               	movf	1,w
  4301  0E91  00F1               	movwf	??_ringbuf_pop+1
  4302  0E92  0871               	movf	??_ringbuf_pop+1,w
  4303  0E93  00F2               	movwf	ringbuf_pop@ret
  4304                           
  4305                           ;My_header_16F.h: 130: rb->tail++;
  4306  0E94  3001               	movlw	1
  4307  0E95  00F0               	movwf	??_ringbuf_pop
  4308  0E96  0873               	movf	ringbuf_pop@rb,w
  4309  0E97  3E03               	addlw	3
  4310  0E98  0086               	movwf	6
  4311  0E99  0187               	clrf	7
  4312  0E9A  0870               	movf	??_ringbuf_pop,w
  4313  0E9B  0781               	addwf	1,f
  4314                           
  4315                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  4316  0E9C  0873               	movf	ringbuf_pop@rb,w
  4317  0E9D  3E03               	addlw	3
  4318  0E9E  0086               	movwf	6
  4319  0E9F  0187               	clrf	7
  4320  0EA0  0A73               	incf	ringbuf_pop@rb,w
  4321  0EA1  0084               	movwf	4
  4322  0EA2  0185               	clrf	5
  4323  0EA3  0800               	movf	0,w
  4324  0EA4  0201               	subwf	1,w
  4325  0EA5  1C03               	skipc
  4326  0EA6  2EAC               	goto	i1l2993
  4327                           
  4328                           ;My_header_16F.h: 132: rb->tail = 0;
  4329  0EA7  0873               	movf	ringbuf_pop@rb,w
  4330  0EA8  3E03               	addlw	3
  4331  0EA9  0086               	movwf	6
  4332  0EAA  0187               	clrf	7
  4333  0EAB  0181               	clrf	1
  4334  0EAC                     i1l2993:	
  4335                           
  4336                           ;My_header_16F.h: 133: }
  4337                           ;My_header_16F.h: 134: return ret;
  4338  0EAC  0872               	movf	ringbuf_pop@ret,w
  4339  0EAD  0008               	return
  4340  0EAE                     __end_of_ringbuf_pop:	
  4341                           
  4342                           	psect	text26
  4343  0E2B                     __ptext26:	
  4344 ;; *************** function _ringbuf_num *****************
  4345 ;; Defined at:
  4346 ;;		line 137 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  rb              1    wreg     PTR struct ringbuf
  4349 ;;		 -> tx_buf(4), 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  rb              1    1[COMMON] PTR struct ringbuf
  4352 ;;		 -> tx_buf(4), 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      unsigned char 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4362 ;;      Params:         0       0       0       0       0       0
  4363 ;;      Locals:         1       0       0       0       0       0
  4364 ;;      Temps:          1       0       0       0       0       0
  4365 ;;      Totals:         2       0       0       0       0       0
  4366 ;;Total ram usage:        2 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_isr
  4372 ;;		_interrupt_TXIF
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _ringbuf_num
  4378  0E2B                     _ringbuf_num:	
  4379                           
  4380                           ;incstack = 0
  4381                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  4382                           ;ringbuf_num@rb stored from wreg
  4383  0E2B  00F1               	movwf	ringbuf_num@rb
  4384                           
  4385                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  4386  0E2C  0871               	movf	ringbuf_num@rb,w
  4387  0E2D  3E02               	addlw	2
  4388  0E2E  0086               	movwf	6
  4389  0E2F  0187               	clrf	7
  4390  0E30  0871               	movf	ringbuf_num@rb,w
  4391  0E31  3E03               	addlw	3
  4392  0E32  0084               	movwf	4
  4393  0E33  0185               	clrf	5
  4394  0E34  0800               	movf	0,w
  4395  0E35  0201               	subwf	1,w
  4396  0E36  1C03               	skipc
  4397  0E37  2E44               	goto	i1l2325
  4398                           
  4399                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  4400  0E38  0871               	movf	ringbuf_num@rb,w
  4401  0E39  3E02               	addlw	2
  4402  0E3A  0086               	movwf	6
  4403  0E3B  0187               	clrf	7
  4404  0E3C  0871               	movf	ringbuf_num@rb,w
  4405  0E3D  3E03               	addlw	3
  4406  0E3E  0084               	movwf	4
  4407  0E3F  0185               	clrf	5
  4408  0E40  0300               	decf	0,w
  4409  0E41  3AFF               	xorlw	255
  4410  0E42  0701               	addwf	1,w
  4411                           
  4412                           ;My_header_16F.h: 140: } else {
  4413  0E43  0008               	return
  4414  0E44                     i1l2325:	
  4415                           
  4416                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  4417  0E44  0871               	movf	ringbuf_num@rb,w
  4418  0E45  3E02               	addlw	2
  4419  0E46  0086               	movwf	6
  4420  0E47  0187               	clrf	7
  4421  0E48  0A71               	incf	ringbuf_num@rb,w
  4422  0E49  0084               	movwf	4
  4423  0E4A  0185               	clrf	5
  4424  0E4B  0800               	movf	0,w
  4425  0E4C  00F0               	movwf	??_ringbuf_num
  4426  0E4D  0871               	movf	ringbuf_num@rb,w
  4427  0E4E  3E03               	addlw	3
  4428  0E4F  0084               	movwf	4
  4429  0E50  0185               	clrf	5
  4430  0E51  0300               	decf	0,w
  4431  0E52  3AFF               	xorlw	255
  4432  0E53  0770               	addwf	??_ringbuf_num,w
  4433  0E54  0701               	addwf	1,w
  4434  0E55  0008               	return
  4435  0E56                     __end_of_ringbuf_num:	
  4436                           
  4437                           	psect	text27
  4438  0683                     __ptext27:	
  4439 ;; *************** function _lchika *****************
  4440 ;; Defined at:
  4441 ;;		line 120 in file "PIC16F1827-ChargeStation4-02.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  i               1    4[BANK0 ] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;		None               void
  4448 ;; Registers used:
  4449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4455 ;;      Params:         0       0       0       0       0       0
  4456 ;;      Locals:         0       1       0       0       0       0
  4457 ;;      Temps:          0       4       0       0       0       0
  4458 ;;      Totals:         0       5       0       0       0       0
  4459 ;;Total ram usage:        5 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    1
  4462 ;; This function calls:
  4463 ;;		___awdiv
  4464 ;;		___lwdiv
  4465 ;;		i1_LED
  4466 ;; This function is called by:
  4467 ;;		_isr
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function _lchika
  4473  0683                     _lchika:	
  4474                           
  4475                           ;PIC16F1827-ChargeStation4-02.c: 121: uint8_t i;
  4476                           ;PIC16F1827-ChargeStation4-02.c: 122: for (i = 0; i < 3; i++) {
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _lchika: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4480  0683  0020               	movlb	0	; select bank0
  4481  0684  01BF               	clrf	lchika@i
  4482  0685                     L3:	
  4483  0685  3003               	movlw	3
  4484  0686  023F               	subwf	lchika@i,w
  4485  0687  1803               	btfsc	3,0
  4486  0688  0008               	return
  4487                           
  4488                           ;PIC16F1827-ChargeStation4-02.c: 123: cnt[i]++;
  4489  0689  3001               	movlw	1
  4490  068A  00BB               	movwf	??_lchika
  4491  068B  083F               	movf	lchika@i,w
  4492  068C  3EAF               	addlw	_cnt& (0+255)
  4493  068D  0086               	movwf	6
  4494  068E  0187               	clrf	7
  4495  068F  083B               	movf	??_lchika,w
  4496  0690  0781               	addwf	1,f
  4497                           
  4498                           ;PIC16F1827-ChargeStation4-02.c: 125: if (cnt[i] % 2 == 1) {
  4499  0691  083F               	movf	lchika@i,w
  4500  0692  3EAF               	addlw	_cnt& (0+255)
  4501  0693  0086               	movwf	6
  4502  0694  0187               	clrf	7
  4503  0695  1C01               	btfss	1,0
  4504  0696  2E9D               	goto	i1l2375
  4505                           
  4506                           ;PIC16F1827-ChargeStation4-02.c: 126: LED(i, 0);
  4507  0697  01F0               	clrf	i1LED@value
  4508  0698  083F               	movf	lchika@i,w
  4509  0699  318D  258A  3186   	fcall	i1_LED
  4510                           
  4511                           ;PIC16F1827-ChargeStation4-02.c: 127: } else {
  4512  069C  2EF2               	goto	i1l2389
  4513  069D                     i1l2375:	
  4514                           
  4515                           ;PIC16F1827-ChargeStation4-02.c: 128: if (cnt[i] / 2 <= v[i] / 100) {
  4516  069D  3064               	movlw	100
  4517  069E  00F6               	movwf	___lwdiv@divisor
  4518  069F  3000               	movlw	0
  4519  06A0  00F7               	movwf	___lwdiv@divisor+1
  4520  06A1  0020               	movlb	0	; select bank0
  4521  06A2  353F               	lslf	lchika@i,w
  4522  06A3  3E26               	addlw	_v& (0+255)
  4523  06A4  0086               	movwf	6
  4524  06A5  0187               	clrf	7
  4525  06A6  3F40               	moviw [0]fsr1
  4526  06A7  00F8               	movwf	___lwdiv@dividend
  4527  06A8  3F41               	moviw [1]fsr1
  4528  06A9  00F9               	movwf	___lwdiv@dividend+1
  4529  06AA  318F  273B  3186   	fcall	___lwdiv
  4530  06AD  0876               	movf	?___lwdiv,w
  4531  06AE  0020               	movlb	0	; select bank0
  4532  06AF  00BB               	movwf	??_lchika
  4533  06B0  0877               	movf	?___lwdiv+1,w
  4534  06B1  00BC               	movwf	??_lchika+1
  4535  06B2  3002               	movlw	2
  4536  06B3  00F0               	movwf	___awdiv@divisor
  4537  06B4  3000               	movlw	0
  4538  06B5  00F1               	movwf	___awdiv@divisor+1
  4539  06B6  083F               	movf	lchika@i,w
  4540  06B7  3EAF               	addlw	_cnt& (0+255)
  4541  06B8  0086               	movwf	6
  4542  06B9  0187               	clrf	7
  4543  06BA  0801               	movf	1,w
  4544  06BB  00BD               	movwf	??_lchika+2
  4545  06BC  01BE               	clrf	??_lchika+3
  4546  06BD  083D               	movf	??_lchika+2,w
  4547  06BE  00F2               	movwf	___awdiv@dividend
  4548  06BF  083E               	movf	??_lchika+3,w
  4549  06C0  00F3               	movwf	___awdiv@dividend+1
  4550  06C1  3187  2765  3186   	fcall	___awdiv
  4551  06C4  0871               	movf	?___awdiv+1,w
  4552  06C5  0020               	movlb	0	; select bank0
  4553  06C6  023C               	subwf	??_lchika+1,w
  4554  06C7  1D03               	skipz
  4555  06C8  2ECB               	goto	u244_25
  4556  06C9  0870               	movf	?___awdiv,w
  4557  06CA  023B               	subwf	??_lchika,w
  4558  06CB                     u244_25:	
  4559  06CB  1C03               	skipc
  4560  06CC  2ED7               	goto	i1l2381
  4561                           
  4562                           ;PIC16F1827-ChargeStation4-02.c: 129: LED(i, 1);
  4563  06CD  01F0               	clrf	i1LED@value
  4564  06CE  0AF0               	incf	i1LED@value,f
  4565  06CF  083F               	movf	lchika@i,w
  4566  06D0  318D  258A  3186   	fcall	i1_LED
  4567                           
  4568                           ;PIC16F1827-ChargeStation4-02.c: 130: cntf[i] = 0;
  4569  06D3  0020               	movlb	0	; select bank0
  4570  06D4  083F               	movf	lchika@i,w
  4571  06D5  3EB2               	addlw	_cntf& (0+255)
  4572  06D6  2EEF               	goto	L2
  4573  06D7                     i1l2381:	
  4574                           ;PIC16F1827-ChargeStation4-02.c: 131: } else {
  4575                           
  4576                           
  4577                           ;PIC16F1827-ChargeStation4-02.c: 132: cntf[i]++;
  4578  06D7  3001               	movlw	1
  4579  06D8  00BB               	movwf	??_lchika
  4580  06D9  083F               	movf	lchika@i,w
  4581  06DA  3EB2               	addlw	_cntf& (0+255)
  4582  06DB  0086               	movwf	6
  4583  06DC  0187               	clrf	7
  4584  06DD  083B               	movf	??_lchika,w
  4585  06DE  0781               	addwf	1,f
  4586                           
  4587                           ;PIC16F1827-ChargeStation4-02.c: 133: LED(i, 0);
  4588  06DF  01F0               	clrf	i1LED@value
  4589  06E0  083F               	movf	lchika@i,w
  4590  06E1  318D  258A  3186   	fcall	i1_LED
  4591                           
  4592                           ;PIC16F1827-ChargeStation4-02.c: 134: if (cntf[i] >= 2) {
  4593  06E4  0020               	movlb	0	; select bank0
  4594  06E5  083F               	movf	lchika@i,w
  4595  06E6  3EB2               	addlw	_cntf& (0+255)
  4596  06E7  0086               	movwf	6
  4597  06E8  0187               	clrf	7
  4598  06E9  3002               	movlw	2
  4599  06EA  0201               	subwf	1,w
  4600  06EB  1C03               	skipc
  4601  06EC  2EF2               	goto	i1l2389
  4602                           
  4603                           ;PIC16F1827-ChargeStation4-02.c: 135: cnt[i] = 0;
  4604  06ED  083F               	movf	lchika@i,w
  4605  06EE  3EAF               	addlw	_cnt& (0+255)
  4606  06EF                     L2:	
  4607  06EF  0086               	movwf	6
  4608  06F0  0187               	clrf	7
  4609  06F1  0181               	clrf	1
  4610  06F2                     i1l2389:	
  4611  06F2  3001               	movlw	1
  4612  06F3  0020               	movlb	0	; select bank0
  4613  06F4  00BB               	movwf	??_lchika
  4614  06F5  083B               	movf	??_lchika,w
  4615  06F6  07BF               	addwf	lchika@i,f
  4616  06F7  2E85               	goto	L3
  4617  06F8                     __end_of_lchika:	
  4618                           
  4619                           	psect	text28
  4620  0D8A                     __ptext28:	
  4621 ;; *************** function i1_LED *****************
  4622 ;; Defined at:
  4623 ;;		line 239 in file "PIC16F1827-ChargeStation4-02.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  b               1    wreg     unsigned char 
  4626 ;;  value           1    0[COMMON] unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  b               1    1[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4638 ;;      Params:         1       0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0
  4641 ;;      Totals:         2       0       0       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_lchika
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function i1_LED
  4653  0D8A                     i1_LED:	
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in i1_LED: [wreg-fsr0h+status,2+status,0]
  4657                           ;i1LED@b stored from wreg
  4658  0D8A  00F1               	movwf	i1LED@b
  4659                           
  4660                           ;PIC16F1827-ChargeStation4-02.c: 240: switch (b) {
  4661  0D8B  2DA4               	goto	i1l2243
  4662  0D8C                     i1l374:	
  4663                           ;PIC16F1827-ChargeStation4-02.c: 241: case 0:
  4664                           
  4665                           
  4666                           ;PIC16F1827-ChargeStation4-02.c: 242: LATB5 = value;
  4667  0D8C  1C70               	btfss	i1LED@value,0
  4668  0D8D  2D91               	goto	u216_20
  4669  0D8E  0022               	movlb	2	; select bank2
  4670  0D8F  168D               	bsf	13,5	;volatile
  4671  0D90  0008               	return
  4672  0D91                     u216_20:	
  4673  0D91  0022               	movlb	2	; select bank2
  4674  0D92  128D               	bcf	13,5	;volatile
  4675                           
  4676                           ;PIC16F1827-ChargeStation4-02.c: 243: break;
  4677  0D93  0008               	return
  4678  0D94                     i1l376:	
  4679                           ;PIC16F1827-ChargeStation4-02.c: 244: case 1:
  4680                           
  4681                           
  4682                           ;PIC16F1827-ChargeStation4-02.c: 245: LATA6 = value;
  4683  0D94  1C70               	btfss	i1LED@value,0
  4684  0D95  2D99               	goto	u218_20
  4685  0D96  0022               	movlb	2	; select bank2
  4686  0D97  170C               	bsf	12,6	;volatile
  4687  0D98  0008               	return
  4688  0D99                     u218_20:	
  4689  0D99  0022               	movlb	2	; select bank2
  4690  0D9A  130C               	bcf	12,6	;volatile
  4691                           
  4692                           ;PIC16F1827-ChargeStation4-02.c: 246: break;
  4693  0D9B  0008               	return
  4694  0D9C                     i1l377:	
  4695                           ;PIC16F1827-ChargeStation4-02.c: 247: case 2:
  4696                           
  4697                           
  4698                           ;PIC16F1827-ChargeStation4-02.c: 248: LATA7 = value;
  4699  0D9C  1C70               	btfss	i1LED@value,0
  4700  0D9D  2DA1               	goto	u220_20
  4701  0D9E  0022               	movlb	2	; select bank2
  4702  0D9F  178C               	bsf	12,7	;volatile
  4703  0DA0  0008               	return
  4704  0DA1                     u220_20:	
  4705  0DA1  0022               	movlb	2	; select bank2
  4706  0DA2  138C               	bcf	12,7	;volatile
  4707                           
  4708                           ;PIC16F1827-ChargeStation4-02.c: 252: }
  4709                           
  4710                           ;PIC16F1827-ChargeStation4-02.c: 251: break;
  4711                           
  4712                           ;PIC16F1827-ChargeStation4-02.c: 250: default:
  4713                           
  4714                           ;PIC16F1827-ChargeStation4-02.c: 249: break;
  4715  0DA3  0008               	return
  4716  0DA4                     i1l2243:	
  4717  0DA4  0871               	movf	i1LED@b,w
  4718                           
  4719                           ; Switch size 1, requested type "space"
  4720                           ; Number of cases is 3, Range of values is 0 to 2
  4721                           ; switch strategies available:
  4722                           ; Name         Instructions Cycles
  4723                           ; simple_byte           10     6 (average)
  4724                           ; direct_byte           12     6 (fixed)
  4725                           ; jumptable            260     6 (fixed)
  4726                           ;	Chosen strategy is simple_byte
  4727  0DA5  3A00               	xorlw	0	; case 0
  4728  0DA6  1903               	skipnz
  4729  0DA7  2D8C               	goto	i1l374
  4730  0DA8  3A01               	xorlw	1	; case 1
  4731  0DA9  1903               	skipnz
  4732  0DAA  2D94               	goto	i1l376
  4733  0DAB  3A03               	xorlw	3	; case 2
  4734  0DAC  1903               	skipnz
  4735  0DAD  2D9C               	goto	i1l377
  4736  0DAE  2DAF               	goto	i1l379
  4737  0DAF                     i1l379:	
  4738  0DAF  0008               	return
  4739  0DB0                     __end_ofi1_LED:	
  4740                           
  4741                           	psect	text29
  4742  0765                     __ptext29:	
  4743 ;; *************** function ___awdiv *****************
  4744 ;; Defined at:
  4745 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  divisor         2    0[COMMON] int 
  4748 ;;  dividend        2    2[COMMON] int 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  quotient        2    7[COMMON] int 
  4751 ;;  sign            1    6[COMMON] unsigned char 
  4752 ;;  counter         1    5[COMMON] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  2    0[COMMON] int 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4762 ;;      Params:         4       0       0       0       0       0
  4763 ;;      Locals:         4       0       0       0       0       0
  4764 ;;      Temps:          1       0       0       0       0       0
  4765 ;;      Totals:         9       0       0       0       0       0
  4766 ;;Total ram usage:        9 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_lchika
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function ___awdiv
  4777  0765                     ___awdiv:	
  4778                           
  4779                           ;incstack = 0
  4780                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4781  0765  01F6               	clrf	___awdiv@sign
  4782  0766  1FF1               	btfss	___awdiv@divisor+1,7
  4783  0767  2F6F               	goto	i1l2151
  4784  0768  09F0               	comf	___awdiv@divisor,f
  4785  0769  09F1               	comf	___awdiv@divisor+1,f
  4786  076A  0AF0               	incf	___awdiv@divisor,f
  4787  076B  1903               	skipnz
  4788  076C  0AF1               	incf	___awdiv@divisor+1,f
  4789  076D  01F6               	clrf	___awdiv@sign
  4790  076E  0AF6               	incf	___awdiv@sign,f
  4791  076F                     i1l2151:	
  4792  076F  1FF3               	btfss	___awdiv@dividend+1,7
  4793  0770  2F7A               	goto	i1l2157
  4794  0771  09F2               	comf	___awdiv@dividend,f
  4795  0772  09F3               	comf	___awdiv@dividend+1,f
  4796  0773  0AF2               	incf	___awdiv@dividend,f
  4797  0774  1903               	skipnz
  4798  0775  0AF3               	incf	___awdiv@dividend+1,f
  4799  0776  3001               	movlw	1
  4800  0777  00F4               	movwf	??___awdiv
  4801  0778  0874               	movf	??___awdiv,w
  4802  0779  06F6               	xorwf	___awdiv@sign,f
  4803  077A                     i1l2157:	
  4804  077A  01F7               	clrf	___awdiv@quotient
  4805  077B  01F8               	clrf	___awdiv@quotient+1
  4806  077C  0871               	movf	___awdiv@divisor+1,w
  4807  077D  0470               	iorwf	___awdiv@divisor,w
  4808  077E  1903               	skipnz
  4809  077F  2FA9               	goto	i1l2179
  4810  0780  01F5               	clrf	___awdiv@counter
  4811  0781  0AF5               	incf	___awdiv@counter,f
  4812  0782                     i1l2167:	
  4813  0782  1BF1               	btfsc	___awdiv@divisor+1,7
  4814  0783  2F8E               	goto	i1l2169
  4815  0784  3001               	movlw	1
  4816  0785                     u196_25:	
  4817  0785  35F0               	lslf	___awdiv@divisor,f
  4818  0786  0DF1               	rlf	___awdiv@divisor+1,f
  4819  0787  0B89               	decfsz	9,f
  4820  0788  2F85               	goto	u196_25
  4821  0789  3001               	movlw	1
  4822  078A  00F4               	movwf	??___awdiv
  4823  078B  0874               	movf	??___awdiv,w
  4824  078C  07F5               	addwf	___awdiv@counter,f
  4825  078D  2F82               	goto	i1l2167
  4826  078E                     i1l2169:	
  4827  078E  3001               	movlw	1
  4828  078F                     u198_25:	
  4829  078F  35F7               	lslf	___awdiv@quotient,f
  4830  0790  0DF8               	rlf	___awdiv@quotient+1,f
  4831  0791  0B89               	decfsz	9,f
  4832  0792  2F8F               	goto	u198_25
  4833  0793  0871               	movf	___awdiv@divisor+1,w
  4834  0794  0273               	subwf	___awdiv@dividend+1,w
  4835  0795  1D03               	skipz
  4836  0796  2F99               	goto	u199_25
  4837  0797  0870               	movf	___awdiv@divisor,w
  4838  0798  0272               	subwf	___awdiv@dividend,w
  4839  0799                     u199_25:	
  4840  0799  1C03               	skipc
  4841  079A  2FA0               	goto	i1l2175
  4842  079B  0870               	movf	___awdiv@divisor,w
  4843  079C  02F2               	subwf	___awdiv@dividend,f
  4844  079D  0871               	movf	___awdiv@divisor+1,w
  4845  079E  3BF3               	subwfb	___awdiv@dividend+1,f
  4846  079F  1477               	bsf	___awdiv@quotient,0
  4847  07A0                     i1l2175:	
  4848  07A0  3001               	movlw	1
  4849  07A1                     u200_25:	
  4850  07A1  36F1               	lsrf	___awdiv@divisor+1,f
  4851  07A2  0CF0               	rrf	___awdiv@divisor,f
  4852  07A3  0B89               	decfsz	9,f
  4853  07A4  2FA1               	goto	u200_25
  4854  07A5  3001               	movlw	1
  4855  07A6  02F5               	subwf	___awdiv@counter,f
  4856  07A7  1D03               	btfss	3,2
  4857  07A8  2F8E               	goto	i1l2169
  4858  07A9                     i1l2179:	
  4859  07A9  0876               	movf	___awdiv@sign,w
  4860  07AA  1903               	btfsc	3,2
  4861  07AB  2FB1               	goto	i1l2183
  4862  07AC  09F7               	comf	___awdiv@quotient,f
  4863  07AD  09F8               	comf	___awdiv@quotient+1,f
  4864  07AE  0AF7               	incf	___awdiv@quotient,f
  4865  07AF  1903               	skipnz
  4866  07B0  0AF8               	incf	___awdiv@quotient+1,f
  4867  07B1                     i1l2183:	
  4868  07B1  0878               	movf	___awdiv@quotient+1,w
  4869  07B2  01F1               	clrf	?___awdiv+1
  4870  07B3  07F1               	addwf	?___awdiv+1,f
  4871  07B4  0877               	movf	___awdiv@quotient,w
  4872  07B5  01F0               	clrf	?___awdiv
  4873  07B6  07F0               	addwf	?___awdiv,f
  4874  07B7  0008               	return
  4875  07B8                     __end_of___awdiv:	
  4876                           
  4877                           	psect	text30
  4878  018A                     __ptext30:	
  4879 ;; *************** function _display *****************
  4880 ;; Defined at:
  4881 ;;		line 142 in file "PIC16F1827-ChargeStation4-02.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  i               1    wreg     unsigned char 
  4884 ;;  co              1   14[BANK0 ] unsigned char 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  i               1   17[BANK0 ] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4896 ;;      Params:         0       1       0       0       0       0
  4897 ;;      Locals:         0       1       0       0       0       0
  4898 ;;      Temps:          0       2       0       0       0       0
  4899 ;;      Totals:         0       4       0       0       0       0
  4900 ;;Total ram usage:        4 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    4
  4903 ;; This function calls:
  4904 ;;		_LCD_Putc
  4905 ;;		_LCD_Puts
  4906 ;;		_LCD_SetCursor
  4907 ;;		___aldiv
  4908 ;;		___almod
  4909 ;;		___lwdiv
  4910 ;;		___lwmod
  4911 ;;		i1_LCD_Clear
  4912 ;; This function is called by:
  4913 ;;		_isr
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           
  4918                           ;psect for function _display
  4919  018A                     _display:	
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4923                           ;display@i stored from wreg
  4924  018A  0020               	movlb	0	; select bank0
  4925  018B  00CC               	movwf	display@i
  4926                           
  4927                           ;PIC16F1827-ChargeStation4-02.c: 143: LCD_Clear();
  4928  018C  318B  2366  3181   	fcall	i1_LCD_Clear
  4929                           
  4930                           ;PIC16F1827-ChargeStation4-02.c: 144: LCD_SetCursor(0, 0);
  4931  018F  01F7               	clrf	LCD_SetCursor@row
  4932  0190  3000               	movlw	0
  4933  0191  318B  23A2  3181   	fcall	_LCD_SetCursor
  4934                           
  4935                           ;PIC16F1827-ChargeStation4-02.c: 145: switch (co) {
  4936  0194  2B6C               	goto	i1l2453
  4937  0195                     i1l2397:	
  4938                           ;PIC16F1827-ChargeStation4-02.c: 146: case 0:
  4939                           
  4940                           
  4941                           ;PIC16F1827-ChargeStation4-02.c: 147: LCD_SetCursor(0, 0);
  4942  0195  01F7               	clrf	LCD_SetCursor@row
  4943  0196  3000               	movlw	0
  4944  0197  318B  23A2  3181   	fcall	_LCD_SetCursor
  4945                           
  4946                           ;PIC16F1827-ChargeStation4-02.c: 148: LCD_Puts("Charge");
  4947  019A  3010               	movlw	low (STR_1| (0+32768))
  4948  019B  00F4               	movwf	LCD_Puts@s
  4949  019C  3088               	movlw	high (STR_1| (0+32768))
  4950  019D  00F5               	movwf	LCD_Puts@s+1
  4951  019E  318E  26DC  3181   	fcall	_LCD_Puts
  4952                           
  4953                           ;PIC16F1827-ChargeStation4-02.c: 149: LCD_SetCursor(0, 1);
  4954  01A1  01F7               	clrf	LCD_SetCursor@row
  4955  01A2  0AF7               	incf	LCD_SetCursor@row,f
  4956  01A3  3000               	movlw	0
  4957  01A4  318B  23A2  3181   	fcall	_LCD_SetCursor
  4958                           
  4959                           ;PIC16F1827-ChargeStation4-02.c: 150: LCD_Puts("Station");
  4960  01A7  3008               	movlw	low (STR_2| (0+32768))
  4961  01A8  00F4               	movwf	LCD_Puts@s
  4962  01A9  3088               	movlw	high (STR_2| (0+32768))
  4963  01AA  00F5               	movwf	LCD_Puts@s+1
  4964  01AB  318E  26DC         	fcall	_LCD_Puts
  4965                           
  4966                           ;PIC16F1827-ChargeStation4-02.c: 151: break;
  4967  01AD  0008               	return
  4968  01AE                     i1l2403:	
  4969                           ;PIC16F1827-ChargeStation4-02.c: 154: case 0:
  4970                           
  4971                           ;PIC16F1827-ChargeStation4-02.c: 153: switch (i) {
  4972                           
  4973                           ;PIC16F1827-ChargeStation4-02.c: 152: case 1:
  4974                           
  4975                           
  4976                           ;PIC16F1827-ChargeStation4-02.c: 155: LCD_Puts("Right");
  4977  01AE  301E               	movlw	low (STR_3| (0+32768))
  4978  01AF  00F4               	movwf	LCD_Puts@s
  4979  01B0  3088               	movlw	high (STR_3| (0+32768))
  4980  01B1  00F5               	movwf	LCD_Puts@s+1
  4981  01B2  318E  26DC  3181   	fcall	_LCD_Puts
  4982                           
  4983                           ;PIC16F1827-ChargeStation4-02.c: 156: break;
  4984  01B5  29D2               	goto	i1l2413
  4985  01B6                     i1l2405:	
  4986                           ;PIC16F1827-ChargeStation4-02.c: 157: case 1:
  4987                           
  4988                           
  4989                           ;PIC16F1827-ChargeStation4-02.c: 158: LCD_Puts("Center");
  4990  01B6  3017               	movlw	low (STR_4| (0+32768))
  4991  01B7  00F4               	movwf	LCD_Puts@s
  4992  01B8  3088               	movlw	high (STR_4| (0+32768))
  4993  01B9  00F5               	movwf	LCD_Puts@s+1
  4994  01BA  318E  26DC  3181   	fcall	_LCD_Puts
  4995                           
  4996                           ;PIC16F1827-ChargeStation4-02.c: 159: break;
  4997  01BD  29D2               	goto	i1l2413
  4998  01BE                     i1l2407:	
  4999                           ;PIC16F1827-ChargeStation4-02.c: 160: case 2:
  5000                           
  5001                           
  5002                           ;PIC16F1827-ChargeStation4-02.c: 161: LCD_Puts("Left");
  5003  01BE  3024               	movlw	low (STR_5| (0+32768))
  5004  01BF  00F4               	movwf	LCD_Puts@s
  5005  01C0  3088               	movlw	high (STR_5| (0+32768))
  5006  01C1  00F5               	movwf	LCD_Puts@s+1
  5007  01C2  318E  26DC  3181   	fcall	_LCD_Puts
  5008                           
  5009                           ;PIC16F1827-ChargeStation4-02.c: 163: }
  5010                           
  5011                           ;PIC16F1827-ChargeStation4-02.c: 162: break;
  5012  01C5  29D2               	goto	i1l2413
  5013  01C6                     i1l2411:	
  5014  01C6  0020               	movlb	0	; select bank0
  5015  01C7  084C               	movf	display@i,w
  5016                           
  5017                           ; Switch size 1, requested type "space"
  5018                           ; Number of cases is 3, Range of values is 0 to 2
  5019                           ; switch strategies available:
  5020                           ; Name         Instructions Cycles
  5021                           ; simple_byte           10     6 (average)
  5022                           ; direct_byte           12     6 (fixed)
  5023                           ; jumptable            260     6 (fixed)
  5024                           ;	Chosen strategy is simple_byte
  5025  01C8  3A00               	xorlw	0	; case 0
  5026  01C9  1903               	skipnz
  5027  01CA  29AE               	goto	i1l2403
  5028  01CB  3A01               	xorlw	1	; case 1
  5029  01CC  1903               	skipnz
  5030  01CD  29B6               	goto	i1l2405
  5031  01CE  3A03               	xorlw	3	; case 2
  5032  01CF  1903               	skipnz
  5033  01D0  29BE               	goto	i1l2407
  5034  01D1  29D2               	goto	i1l2413
  5035  01D2                     i1l2413:	
  5036                           
  5037                           ;PIC16F1827-ChargeStation4-02.c: 164: LCD_SetCursor(0, 1);
  5038  01D2  01F7               	clrf	LCD_SetCursor@row
  5039  01D3  0AF7               	incf	LCD_SetCursor@row,f
  5040  01D4  3000               	movlw	0
  5041  01D5  318B  23A2  3181   	fcall	_LCD_SetCursor
  5042                           
  5043                           ;PIC16F1827-ChargeStation4-02.c: 165: LCD_Putc((v[i] % 10000) / 1000 + '0');
  5044  01D8  30E8               	movlw	232
  5045  01D9  00F6               	movwf	___lwdiv@divisor
  5046  01DA  3003               	movlw	3
  5047  01DB  00F7               	movwf	___lwdiv@divisor+1
  5048  01DC  0020               	movlb	0	; select bank0
  5049  01DD  354C               	lslf	display@i,w
  5050  01DE  3E26               	addlw	_v& (0+255)
  5051  01DF  0086               	movwf	6
  5052  01E0  0187               	clrf	7
  5053  01E1  3F40               	moviw [0]fsr1
  5054  01E2  00F2               	movwf	___lwmod@dividend
  5055  01E3  3F41               	moviw [1]fsr1
  5056  01E4  00F3               	movwf	___lwmod@dividend+1
  5057  01E5  3010               	movlw	16
  5058  01E6  00F0               	movwf	___lwmod@divisor
  5059  01E7  3027               	movlw	39
  5060  01E8  00F1               	movwf	___lwmod@divisor+1
  5061  01E9  318E  26AE  3181   	fcall	___lwmod
  5062  01EC  0871               	movf	?___lwmod+1,w
  5063  01ED  01F9               	clrf	___lwdiv@dividend+1
  5064  01EE  07F9               	addwf	___lwdiv@dividend+1,f
  5065  01EF  0870               	movf	?___lwmod,w
  5066  01F0  01F8               	clrf	___lwdiv@dividend
  5067  01F1  07F8               	addwf	___lwdiv@dividend,f
  5068  01F2  318F  273B  3181   	fcall	___lwdiv
  5069  01F5  0876               	movf	?___lwdiv,w
  5070  01F6  3E30               	addlw	48
  5071  01F7  318C  2472  3181   	fcall	_LCD_Putc
  5072                           
  5073                           ;PIC16F1827-ChargeStation4-02.c: 166: LCD_Putc('.');
  5074  01FA  302E               	movlw	46
  5075  01FB  318C  2472  3181   	fcall	_LCD_Putc
  5076                           
  5077                           ;PIC16F1827-ChargeStation4-02.c: 167: LCD_Putc((v[i] % 1000) / 100 + '0');
  5078  01FE  3064               	movlw	100
  5079  01FF  00F6               	movwf	___lwdiv@divisor
  5080  0200  3000               	movlw	0
  5081  0201  00F7               	movwf	___lwdiv@divisor+1
  5082  0202  0020               	movlb	0	; select bank0
  5083  0203  354C               	lslf	display@i,w
  5084  0204  3E26               	addlw	_v& (0+255)
  5085  0205  0086               	movwf	6
  5086  0206  0187               	clrf	7
  5087  0207  3F40               	moviw [0]fsr1
  5088  0208  00F2               	movwf	___lwmod@dividend
  5089  0209  3F41               	moviw [1]fsr1
  5090  020A  00F3               	movwf	___lwmod@dividend+1
  5091  020B  30E8               	movlw	232
  5092  020C  00F0               	movwf	___lwmod@divisor
  5093  020D  3003               	movlw	3
  5094  020E  00F1               	movwf	___lwmod@divisor+1
  5095  020F  318E  26AE  3181   	fcall	___lwmod
  5096  0212  0871               	movf	?___lwmod+1,w
  5097  0213  01F9               	clrf	___lwdiv@dividend+1
  5098  0214  07F9               	addwf	___lwdiv@dividend+1,f
  5099  0215  0870               	movf	?___lwmod,w
  5100  0216  01F8               	clrf	___lwdiv@dividend
  5101  0217  07F8               	addwf	___lwdiv@dividend,f
  5102  0218  318F  273B  3181   	fcall	___lwdiv
  5103  021B  0876               	movf	?___lwdiv,w
  5104  021C  3E30               	addlw	48
  5105  021D  318C  2472  3181   	fcall	_LCD_Putc
  5106                           
  5107                           ;PIC16F1827-ChargeStation4-02.c: 168: LCD_Putc((v[i] % 100) / 10 + '0');
  5108  0220  300A               	movlw	10
  5109  0221  00F6               	movwf	___lwdiv@divisor
  5110  0222  3000               	movlw	0
  5111  0223  00F7               	movwf	___lwdiv@divisor+1
  5112  0224  0020               	movlb	0	; select bank0
  5113  0225  354C               	lslf	display@i,w
  5114  0226  3E26               	addlw	_v& (0+255)
  5115  0227  0086               	movwf	6
  5116  0228  0187               	clrf	7
  5117  0229  3F40               	moviw [0]fsr1
  5118  022A  00F2               	movwf	___lwmod@dividend
  5119  022B  3F41               	moviw [1]fsr1
  5120  022C  00F3               	movwf	___lwmod@dividend+1
  5121  022D  3064               	movlw	100
  5122  022E  00F0               	movwf	___lwmod@divisor
  5123  022F  3000               	movlw	0
  5124  0230  00F1               	movwf	___lwmod@divisor+1
  5125  0231  318E  26AE  3181   	fcall	___lwmod
  5126  0234  0871               	movf	?___lwmod+1,w
  5127  0235  01F9               	clrf	___lwdiv@dividend+1
  5128  0236  07F9               	addwf	___lwdiv@dividend+1,f
  5129  0237  0870               	movf	?___lwmod,w
  5130  0238  01F8               	clrf	___lwdiv@dividend
  5131  0239  07F8               	addwf	___lwdiv@dividend,f
  5132  023A  318F  273B  3181   	fcall	___lwdiv
  5133  023D  0876               	movf	?___lwdiv,w
  5134  023E  3E30               	addlw	48
  5135  023F  318C  2472  3181   	fcall	_LCD_Putc
  5136                           
  5137                           ;PIC16F1827-ChargeStation4-02.c: 169: LCD_Putc((v[i] % 10) / 1 + '0');
  5138  0242  300A               	movlw	10
  5139  0243  00F0               	movwf	___lwmod@divisor
  5140  0244  3000               	movlw	0
  5141  0245  00F1               	movwf	___lwmod@divisor+1
  5142  0246  0020               	movlb	0	; select bank0
  5143  0247  354C               	lslf	display@i,w
  5144  0248  3E26               	addlw	_v& (0+255)
  5145  0249  0086               	movwf	6
  5146  024A  0187               	clrf	7
  5147  024B  3F40               	moviw [0]fsr1
  5148  024C  00F2               	movwf	___lwmod@dividend
  5149  024D  3F41               	moviw [1]fsr1
  5150  024E  00F3               	movwf	___lwmod@dividend+1
  5151  024F  318E  26AE  3181   	fcall	___lwmod
  5152  0252  0870               	movf	?___lwmod,w
  5153  0253  3E30               	addlw	48
  5154  0254  318C  2472  3181   	fcall	_LCD_Putc
  5155                           
  5156                           ;PIC16F1827-ChargeStation4-02.c: 170: LCD_Putc('A');
  5157  0257  3041               	movlw	65
  5158  0258  318C  2472         	fcall	_LCD_Putc
  5159                           
  5160                           ;PIC16F1827-ChargeStation4-02.c: 171: break;
  5161  025A  0008               	return
  5162  025B                     i1l2423:	
  5163                           ;PIC16F1827-ChargeStation4-02.c: 174: case 0:
  5164                           
  5165                           ;PIC16F1827-ChargeStation4-02.c: 173: switch (i) {
  5166                           
  5167                           ;PIC16F1827-ChargeStation4-02.c: 172: case 2:
  5168                           
  5169                           
  5170                           ;PIC16F1827-ChargeStation4-02.c: 175: LCD_Puts("Right");
  5171  025B  301E               	movlw	low (STR_3| (0+32768))
  5172  025C  00F4               	movwf	LCD_Puts@s
  5173  025D  3088               	movlw	high (STR_3| (0+32768))
  5174  025E  00F5               	movwf	LCD_Puts@s+1
  5175  025F  318E  26DC  3181   	fcall	_LCD_Puts
  5176                           
  5177                           ;PIC16F1827-ChargeStation4-02.c: 176: break;
  5178  0262  2A7F               	goto	i1l2433
  5179  0263                     i1l2425:	
  5180                           ;PIC16F1827-ChargeStation4-02.c: 177: case 1:
  5181                           
  5182                           
  5183                           ;PIC16F1827-ChargeStation4-02.c: 178: LCD_Puts("Center");
  5184  0263  3017               	movlw	low (STR_4| (0+32768))
  5185  0264  00F4               	movwf	LCD_Puts@s
  5186  0265  3088               	movlw	high (STR_4| (0+32768))
  5187  0266  00F5               	movwf	LCD_Puts@s+1
  5188  0267  318E  26DC  3181   	fcall	_LCD_Puts
  5189                           
  5190                           ;PIC16F1827-ChargeStation4-02.c: 179: break;
  5191  026A  2A7F               	goto	i1l2433
  5192  026B                     i1l2427:	
  5193                           ;PIC16F1827-ChargeStation4-02.c: 180: case 2:
  5194                           
  5195                           
  5196                           ;PIC16F1827-ChargeStation4-02.c: 181: LCD_Puts("Left");
  5197  026B  3024               	movlw	low (STR_5| (0+32768))
  5198  026C  00F4               	movwf	LCD_Puts@s
  5199  026D  3088               	movlw	high (STR_5| (0+32768))
  5200  026E  00F5               	movwf	LCD_Puts@s+1
  5201  026F  318E  26DC  3181   	fcall	_LCD_Puts
  5202                           
  5203                           ;PIC16F1827-ChargeStation4-02.c: 183: }
  5204                           
  5205                           ;PIC16F1827-ChargeStation4-02.c: 182: break;
  5206  0272  2A7F               	goto	i1l2433
  5207  0273                     i1l2431:	
  5208  0273  0020               	movlb	0	; select bank0
  5209  0274  084C               	movf	display@i,w
  5210                           
  5211                           ; Switch size 1, requested type "space"
  5212                           ; Number of cases is 3, Range of values is 0 to 2
  5213                           ; switch strategies available:
  5214                           ; Name         Instructions Cycles
  5215                           ; simple_byte           10     6 (average)
  5216                           ; direct_byte           12     6 (fixed)
  5217                           ; jumptable            260     6 (fixed)
  5218                           ;	Chosen strategy is simple_byte
  5219  0275  3A00               	xorlw	0	; case 0
  5220  0276  1903               	skipnz
  5221  0277  2A5B               	goto	i1l2423
  5222  0278  3A01               	xorlw	1	; case 1
  5223  0279  1903               	skipnz
  5224  027A  2A63               	goto	i1l2425
  5225  027B  3A03               	xorlw	3	; case 2
  5226  027C  1903               	skipnz
  5227  027D  2A6B               	goto	i1l2427
  5228  027E  2A7F               	goto	i1l2433
  5229  027F                     i1l2433:	
  5230                           
  5231                           ;PIC16F1827-ChargeStation4-02.c: 184: LCD_SetCursor(0, 1);
  5232  027F  01F7               	clrf	LCD_SetCursor@row
  5233  0280  0AF7               	incf	LCD_SetCursor@row,f
  5234  0281  3000               	movlw	0
  5235  0282  318B  23A2  3181   	fcall	_LCD_SetCursor
  5236                           
  5237                           ;PIC16F1827-ChargeStation4-02.c: 185: LCD_Putc((s[i] % 100000) / 10000 + '0');
  5238  0285  3000               	movlw	0
  5239  0286  0020               	movlb	0	; select bank0
  5240  0287  00BE               	movwf	___aldiv@divisor+3
  5241  0288  3000               	movlw	0
  5242  0289  00BD               	movwf	___aldiv@divisor+2
  5243  028A  3027               	movlw	39
  5244  028B  00BC               	movwf	___aldiv@divisor+1
  5245  028C  3010               	movlw	16
  5246  028D  00BB               	movwf	___aldiv@divisor
  5247  028E  354C               	lslf	display@i,w
  5248  028F  3E20               	addlw	_s& (0+255)
  5249  0290  0086               	movwf	6
  5250  0291  0187               	clrf	7
  5251  0292  3F40               	moviw [0]fsr1
  5252  0293  00CA               	movwf	??_display
  5253  0294  3F41               	moviw [1]fsr1
  5254  0295  00CB               	movwf	??_display+1
  5255  0296  084A               	movf	??_display,w
  5256  0297  00F4               	movwf	___almod@dividend
  5257  0298  084B               	movf	??_display+1,w
  5258  0299  00F5               	movwf	___almod@dividend+1
  5259  029A  01F6               	clrf	___almod@dividend+2
  5260  029B  01F7               	clrf	___almod@dividend+3
  5261  029C  3000               	movlw	0
  5262  029D  00F3               	movwf	___almod@divisor+3
  5263  029E  3001               	movlw	1
  5264  029F  00F2               	movwf	___almod@divisor+2
  5265  02A0  3086               	movlw	134
  5266  02A1  00F1               	movwf	___almod@divisor+1
  5267  02A2  30A0               	movlw	160
  5268  02A3  00F0               	movwf	___almod@divisor
  5269  02A4  3186  26F8  3181   	fcall	___almod
  5270  02A7  0873               	movf	?___almod+3,w
  5271  02A8  0020               	movlb	0	; select bank0
  5272  02A9  00C2               	movwf	___aldiv@dividend+3
  5273  02AA  0872               	movf	?___almod+2,w
  5274  02AB  00C1               	movwf	___aldiv@dividend+2
  5275  02AC  0871               	movf	?___almod+1,w
  5276  02AD  00C0               	movwf	___aldiv@dividend+1
  5277  02AE  0870               	movf	?___almod,w
  5278  02AF  00BF               	movwf	___aldiv@dividend
  5279  02B0  3186  2601  3181   	fcall	___aldiv
  5280  02B3  0020               	movlb	0	; select bank0
  5281  02B4  083B               	movf	?___aldiv,w
  5282  02B5  3E30               	addlw	48
  5283  02B6  318C  2472  3181   	fcall	_LCD_Putc
  5284                           
  5285                           ;PIC16F1827-ChargeStation4-02.c: 186: LCD_Putc((s[i] % 10000) / 1000 + '0');
  5286  02B9  30E8               	movlw	232
  5287  02BA  00F6               	movwf	___lwdiv@divisor
  5288  02BB  3003               	movlw	3
  5289  02BC  00F7               	movwf	___lwdiv@divisor+1
  5290  02BD  0020               	movlb	0	; select bank0
  5291  02BE  354C               	lslf	display@i,w
  5292  02BF  3E20               	addlw	_s& (0+255)
  5293  02C0  0086               	movwf	6
  5294  02C1  0187               	clrf	7
  5295  02C2  3F40               	moviw [0]fsr1
  5296  02C3  00F2               	movwf	___lwmod@dividend
  5297  02C4  3F41               	moviw [1]fsr1
  5298  02C5  00F3               	movwf	___lwmod@dividend+1
  5299  02C6  3010               	movlw	16
  5300  02C7  00F0               	movwf	___lwmod@divisor
  5301  02C8  3027               	movlw	39
  5302  02C9  00F1               	movwf	___lwmod@divisor+1
  5303  02CA  318E  26AE  3181   	fcall	___lwmod
  5304  02CD  0871               	movf	?___lwmod+1,w
  5305  02CE  01F9               	clrf	___lwdiv@dividend+1
  5306  02CF  07F9               	addwf	___lwdiv@dividend+1,f
  5307  02D0  0870               	movf	?___lwmod,w
  5308  02D1  01F8               	clrf	___lwdiv@dividend
  5309  02D2  07F8               	addwf	___lwdiv@dividend,f
  5310  02D3  318F  273B  3181   	fcall	___lwdiv
  5311  02D6  0876               	movf	?___lwdiv,w
  5312  02D7  3E30               	addlw	48
  5313  02D8  318C  2472  3181   	fcall	_LCD_Putc
  5314                           
  5315                           ;PIC16F1827-ChargeStation4-02.c: 187: LCD_Putc((s[i] % 1000) / 100 + '0');
  5316  02DB  3064               	movlw	100
  5317  02DC  00F6               	movwf	___lwdiv@divisor
  5318  02DD  3000               	movlw	0
  5319  02DE  00F7               	movwf	___lwdiv@divisor+1
  5320  02DF  0020               	movlb	0	; select bank0
  5321  02E0  354C               	lslf	display@i,w
  5322  02E1  3E20               	addlw	_s& (0+255)
  5323  02E2  0086               	movwf	6
  5324  02E3  0187               	clrf	7
  5325  02E4  3F40               	moviw [0]fsr1
  5326  02E5  00F2               	movwf	___lwmod@dividend
  5327  02E6  3F41               	moviw [1]fsr1
  5328  02E7  00F3               	movwf	___lwmod@dividend+1
  5329  02E8  30E8               	movlw	232
  5330  02E9  00F0               	movwf	___lwmod@divisor
  5331  02EA  3003               	movlw	3
  5332  02EB  00F1               	movwf	___lwmod@divisor+1
  5333  02EC  318E  26AE  3181   	fcall	___lwmod
  5334  02EF  0871               	movf	?___lwmod+1,w
  5335  02F0  01F9               	clrf	___lwdiv@dividend+1
  5336  02F1  07F9               	addwf	___lwdiv@dividend+1,f
  5337  02F2  0870               	movf	?___lwmod,w
  5338  02F3  01F8               	clrf	___lwdiv@dividend
  5339  02F4  07F8               	addwf	___lwdiv@dividend,f
  5340  02F5  318F  273B  3181   	fcall	___lwdiv
  5341  02F8  0876               	movf	?___lwdiv,w
  5342  02F9  3E30               	addlw	48
  5343  02FA  318C  2472  3181   	fcall	_LCD_Putc
  5344                           
  5345                           ;PIC16F1827-ChargeStation4-02.c: 188: LCD_Putc((s[i] % 100) / 10 + '0');
  5346  02FD  300A               	movlw	10
  5347  02FE  00F6               	movwf	___lwdiv@divisor
  5348  02FF  3000               	movlw	0
  5349  0300  00F7               	movwf	___lwdiv@divisor+1
  5350  0301  0020               	movlb	0	; select bank0
  5351  0302  354C               	lslf	display@i,w
  5352  0303  3E20               	addlw	_s& (0+255)
  5353  0304  0086               	movwf	6
  5354  0305  0187               	clrf	7
  5355  0306  3F40               	moviw [0]fsr1
  5356  0307  00F2               	movwf	___lwmod@dividend
  5357  0308  3F41               	moviw [1]fsr1
  5358  0309  00F3               	movwf	___lwmod@dividend+1
  5359  030A  3064               	movlw	100
  5360  030B  00F0               	movwf	___lwmod@divisor
  5361  030C  3000               	movlw	0
  5362  030D  00F1               	movwf	___lwmod@divisor+1
  5363  030E  318E  26AE  3181   	fcall	___lwmod
  5364  0311  0871               	movf	?___lwmod+1,w
  5365  0312  01F9               	clrf	___lwdiv@dividend+1
  5366  0313  07F9               	addwf	___lwdiv@dividend+1,f
  5367  0314  0870               	movf	?___lwmod,w
  5368  0315  01F8               	clrf	___lwdiv@dividend
  5369  0316  07F8               	addwf	___lwdiv@dividend,f
  5370  0317  318F  273B  3181   	fcall	___lwdiv
  5371  031A  0876               	movf	?___lwdiv,w
  5372  031B  3E30               	addlw	48
  5373  031C  318C  2472  3181   	fcall	_LCD_Putc
  5374                           
  5375                           ;PIC16F1827-ChargeStation4-02.c: 189: LCD_Putc((s[i] % 10) / 1 + '0');
  5376  031F  300A               	movlw	10
  5377  0320  00F0               	movwf	___lwmod@divisor
  5378  0321  3000               	movlw	0
  5379  0322  00F1               	movwf	___lwmod@divisor+1
  5380  0323  0020               	movlb	0	; select bank0
  5381  0324  354C               	lslf	display@i,w
  5382  0325  3E20               	addlw	_s& (0+255)
  5383  0326  0086               	movwf	6
  5384  0327  0187               	clrf	7
  5385  0328  3F40               	moviw [0]fsr1
  5386  0329  00F2               	movwf	___lwmod@dividend
  5387  032A  3F41               	moviw [1]fsr1
  5388  032B  00F3               	movwf	___lwmod@dividend+1
  5389  032C  318E  26AE  3181   	fcall	___lwmod
  5390  032F  0870               	movf	?___lwmod,w
  5391  0330  3E30               	addlw	48
  5392  0331  318C  2472  3181   	fcall	_LCD_Putc
  5393                           
  5394                           ;PIC16F1827-ChargeStation4-02.c: 190: LCD_Puts("mAh");
  5395  0334  3029               	movlw	low (STR_9| (0+32768))
  5396  0335  00F4               	movwf	LCD_Puts@s
  5397  0336  3088               	movlw	high (STR_9| (0+32768))
  5398  0337  00F5               	movwf	LCD_Puts@s+1
  5399  0338  318E  26DC         	fcall	_LCD_Puts
  5400                           
  5401                           ;PIC16F1827-ChargeStation4-02.c: 191: break;
  5402  033A  0008               	return
  5403  033B                     i1l2437:	
  5404                           ;PIC16F1827-ChargeStation4-02.c: 194: case 0:
  5405                           
  5406                           ;PIC16F1827-ChargeStation4-02.c: 193: switch (i) {
  5407                           
  5408                           ;PIC16F1827-ChargeStation4-02.c: 192: case 3:
  5409                           
  5410                           
  5411                           ;PIC16F1827-ChargeStation4-02.c: 195: LCD_Puts("Right");
  5412  033B  301E               	movlw	low (STR_3| (0+32768))
  5413  033C  00F4               	movwf	LCD_Puts@s
  5414  033D  3088               	movlw	high (STR_3| (0+32768))
  5415  033E  00F5               	movwf	LCD_Puts@s+1
  5416  033F  318E  26DC  3181   	fcall	_LCD_Puts
  5417                           
  5418                           ;PIC16F1827-ChargeStation4-02.c: 196: break;
  5419  0342  2B5F               	goto	i1l2447
  5420  0343                     i1l2439:	
  5421                           ;PIC16F1827-ChargeStation4-02.c: 197: case 1:
  5422                           
  5423                           
  5424                           ;PIC16F1827-ChargeStation4-02.c: 198: LCD_Puts("Center");
  5425  0343  3017               	movlw	low (STR_4| (0+32768))
  5426  0344  00F4               	movwf	LCD_Puts@s
  5427  0345  3088               	movlw	high (STR_4| (0+32768))
  5428  0346  00F5               	movwf	LCD_Puts@s+1
  5429  0347  318E  26DC  3181   	fcall	_LCD_Puts
  5430                           
  5431                           ;PIC16F1827-ChargeStation4-02.c: 199: break;
  5432  034A  2B5F               	goto	i1l2447
  5433  034B                     i1l2441:	
  5434                           ;PIC16F1827-ChargeStation4-02.c: 200: case 2:
  5435                           
  5436                           
  5437                           ;PIC16F1827-ChargeStation4-02.c: 201: LCD_Puts("Left");
  5438  034B  3024               	movlw	low (STR_5| (0+32768))
  5439  034C  00F4               	movwf	LCD_Puts@s
  5440  034D  3088               	movlw	high (STR_5| (0+32768))
  5441  034E  00F5               	movwf	LCD_Puts@s+1
  5442  034F  318E  26DC  3181   	fcall	_LCD_Puts
  5443                           
  5444                           ;PIC16F1827-ChargeStation4-02.c: 203: }
  5445                           
  5446                           ;PIC16F1827-ChargeStation4-02.c: 202: break;
  5447  0352  2B5F               	goto	i1l2447
  5448  0353                     i1l2445:	
  5449  0353  0020               	movlb	0	; select bank0
  5450  0354  084C               	movf	display@i,w
  5451                           
  5452                           ; Switch size 1, requested type "space"
  5453                           ; Number of cases is 3, Range of values is 0 to 2
  5454                           ; switch strategies available:
  5455                           ; Name         Instructions Cycles
  5456                           ; simple_byte           10     6 (average)
  5457                           ; direct_byte           12     6 (fixed)
  5458                           ; jumptable            260     6 (fixed)
  5459                           ;	Chosen strategy is simple_byte
  5460  0355  3A00               	xorlw	0	; case 0
  5461  0356  1903               	skipnz
  5462  0357  2B3B               	goto	i1l2437
  5463  0358  3A01               	xorlw	1	; case 1
  5464  0359  1903               	skipnz
  5465  035A  2B43               	goto	i1l2439
  5466  035B  3A03               	xorlw	3	; case 2
  5467  035C  1903               	skipnz
  5468  035D  2B4B               	goto	i1l2441
  5469  035E  2B5F               	goto	i1l2447
  5470  035F                     i1l2447:	
  5471                           
  5472                           ;PIC16F1827-ChargeStation4-02.c: 204: LCD_SetCursor(0, 1);
  5473  035F  01F7               	clrf	LCD_SetCursor@row
  5474  0360  0AF7               	incf	LCD_SetCursor@row,f
  5475  0361  3000               	movlw	0
  5476  0362  318B  23A2  3181   	fcall	_LCD_SetCursor
  5477                           
  5478                           ;PIC16F1827-ChargeStation4-02.c: 205: LCD_Puts("Reseted");
  5479  0365  3000               	movlw	low (STR_13| (0+32768))
  5480  0366  00F4               	movwf	LCD_Puts@s
  5481  0367  3088               	movlw	high (STR_13| (0+32768))
  5482  0368  00F5               	movwf	LCD_Puts@s+1
  5483  0369  318E  26DC         	fcall	_LCD_Puts
  5484                           
  5485                           ;PIC16F1827-ChargeStation4-02.c: 208: }
  5486                           
  5487                           ;PIC16F1827-ChargeStation4-02.c: 206: break;
  5488  036B  0008               	return
  5489  036C                     i1l2453:	
  5490  036C  0020               	movlb	0	; select bank0
  5491  036D  0849               	movf	display@co,w
  5492                           
  5493                           ; Switch size 1, requested type "space"
  5494                           ; Number of cases is 4, Range of values is 0 to 3
  5495                           ; switch strategies available:
  5496                           ; Name         Instructions Cycles
  5497                           ; simple_byte           13     7 (average)
  5498                           ; direct_byte           14     6 (fixed)
  5499                           ; jumptable            260     6 (fixed)
  5500                           ;	Chosen strategy is simple_byte
  5501  036E  3A00               	xorlw	0	; case 0
  5502  036F  1903               	skipnz
  5503  0370  2995               	goto	i1l2397
  5504  0371  3A01               	xorlw	1	; case 1
  5505  0372  1903               	skipnz
  5506  0373  29C6               	goto	i1l2411
  5507  0374  3A03               	xorlw	3	; case 2
  5508  0375  1903               	skipnz
  5509  0376  2A73               	goto	i1l2431
  5510  0377  3A01               	xorlw	1	; case 3
  5511  0378  1903               	skipnz
  5512  0379  2B53               	goto	i1l2445
  5513  037A  2B7B               	goto	i1l355
  5514  037B                     i1l355:	
  5515  037B  0008               	return
  5516  037C                     __end_of_display:	
  5517                           
  5518                           	psect	text31
  5519  0B66                     __ptext31:	
  5520 ;; *************** function i1_LCD_Clear *****************
  5521 ;; Defined at:
  5522 ;;		line 280 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;		None               void
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0, pclath, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5536 ;;      Params:         0       0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0
  5538 ;;      Temps:          2       0       0       0       0       0
  5539 ;;      Totals:         2       0       0       0       0       0
  5540 ;;Total ram usage:        2 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    3
  5543 ;; This function calls:
  5544 ;;		i1_LCD_Command
  5545 ;; This function is called by:
  5546 ;;		_display
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function i1_LCD_Clear
  5552  0B66                     i1_LCD_Clear:	
  5553                           
  5554                           ;My_header_16F.h: 281: LCD_Command(0x01);
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5558  0B66  3001               	movlw	1
  5559  0B67  318C  248E  318B   	fcall	i1_LCD_Command
  5560                           
  5561                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  5562  0B6A  300C               	movlw	12
  5563  0B6B  00F8               	movwf	??i1_LCD_Clear+1
  5564  0B6C  306C               	movlw	108
  5565  0B6D  00F7               	movwf	??i1_LCD_Clear
  5566  0B6E                     u395_27:	
  5567  0B6E  0BF7               	decfsz	??i1_LCD_Clear,f
  5568  0B6F  2B6E               	goto	u395_27
  5569  0B70  0BF8               	decfsz	??i1_LCD_Clear+1,f
  5570  0B71  2B6E               	goto	u395_27
  5571  0B72  0000               	nop
  5572  0B73  0008               	return
  5573  0B74                     __end_ofi1_LCD_Clear:	
  5574                           
  5575                           	psect	text32
  5576  0EAE                     __ptext32:	
  5577 ;; *************** function ___lwmod *****************
  5578 ;; Defined at:
  5579 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  divisor         2    0[COMMON] unsigned int 
  5582 ;;  dividend        2    2[COMMON] unsigned int 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  counter         1    5[COMMON] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  2    0[COMMON] unsigned int 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5594 ;;      Params:         4       0       0       0       0       0
  5595 ;;      Locals:         1       0       0       0       0       0
  5596 ;;      Temps:          1       0       0       0       0       0
  5597 ;;      Totals:         6       0       0       0       0       0
  5598 ;;Total ram usage:        6 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_display
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function ___lwmod
  5609  0EAE                     ___lwmod:	
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5613  0EAE  0871               	movf	___lwmod@divisor+1,w
  5614  0EAF  0470               	iorwf	___lwmod@divisor,w
  5615  0EB0  1903               	skipnz
  5616  0EB1  2ED5               	goto	i1l2231
  5617  0EB2  01F5               	clrf	___lwmod@counter
  5618  0EB3  0AF5               	incf	___lwmod@counter,f
  5619  0EB4                     i1l2221:	
  5620  0EB4  1BF1               	btfsc	___lwmod@divisor+1,7
  5621  0EB5  2EC0               	goto	i1l2223
  5622  0EB6  3001               	movlw	1
  5623  0EB7                     u211_25:	
  5624  0EB7  35F0               	lslf	___lwmod@divisor,f
  5625  0EB8  0DF1               	rlf	___lwmod@divisor+1,f
  5626  0EB9  0B89               	decfsz	9,f
  5627  0EBA  2EB7               	goto	u211_25
  5628  0EBB  3001               	movlw	1
  5629  0EBC  00F4               	movwf	??___lwmod
  5630  0EBD  0874               	movf	??___lwmod,w
  5631  0EBE  07F5               	addwf	___lwmod@counter,f
  5632  0EBF  2EB4               	goto	i1l2221
  5633  0EC0                     i1l2223:	
  5634  0EC0  0871               	movf	___lwmod@divisor+1,w
  5635  0EC1  0273               	subwf	___lwmod@dividend+1,w
  5636  0EC2  1D03               	skipz
  5637  0EC3  2EC6               	goto	u213_25
  5638  0EC4  0870               	movf	___lwmod@divisor,w
  5639  0EC5  0272               	subwf	___lwmod@dividend,w
  5640  0EC6                     u213_25:	
  5641  0EC6  1C03               	skipc
  5642  0EC7  2ECC               	goto	i1l2227
  5643  0EC8  0870               	movf	___lwmod@divisor,w
  5644  0EC9  02F2               	subwf	___lwmod@dividend,f
  5645  0ECA  0871               	movf	___lwmod@divisor+1,w
  5646  0ECB  3BF3               	subwfb	___lwmod@dividend+1,f
  5647  0ECC                     i1l2227:	
  5648  0ECC  3001               	movlw	1
  5649  0ECD                     u214_25:	
  5650  0ECD  36F1               	lsrf	___lwmod@divisor+1,f
  5651  0ECE  0CF0               	rrf	___lwmod@divisor,f
  5652  0ECF  0B89               	decfsz	9,f
  5653  0ED0  2ECD               	goto	u214_25
  5654  0ED1  3001               	movlw	1
  5655  0ED2  02F5               	subwf	___lwmod@counter,f
  5656  0ED3  1D03               	btfss	3,2
  5657  0ED4  2EC0               	goto	i1l2223
  5658  0ED5                     i1l2231:	
  5659  0ED5  0873               	movf	___lwmod@dividend+1,w
  5660  0ED6  01F1               	clrf	?___lwmod+1
  5661  0ED7  07F1               	addwf	?___lwmod+1,f
  5662  0ED8  0872               	movf	___lwmod@dividend,w
  5663  0ED9  01F0               	clrf	?___lwmod
  5664  0EDA  07F0               	addwf	?___lwmod,f
  5665  0EDB  0008               	return
  5666  0EDC                     __end_of___lwmod:	
  5667                           
  5668                           	psect	text33
  5669  0F3B                     __ptext33:	
  5670 ;; *************** function ___lwdiv *****************
  5671 ;; Defined at:
  5672 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  divisor         2    6[COMMON] unsigned int 
  5675 ;;  dividend        2    8[COMMON] unsigned int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  quotient        2   11[COMMON] unsigned int 
  5678 ;;  counter         1   13[COMMON] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  2    6[COMMON] unsigned int 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5688 ;;      Params:         4       0       0       0       0       0
  5689 ;;      Locals:         3       0       0       0       0       0
  5690 ;;      Temps:          1       0       0       0       0       0
  5691 ;;      Totals:         8       0       0       0       0       0
  5692 ;;Total ram usage:        8 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_lchika
  5698 ;;		_display
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           
  5703                           ;psect for function ___lwdiv
  5704  0F3B                     ___lwdiv:	
  5705                           
  5706                           ;incstack = 0
  5707                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5708  0F3B  01FB               	clrf	___lwdiv@quotient
  5709  0F3C  01FC               	clrf	___lwdiv@quotient+1
  5710  0F3D  0877               	movf	___lwdiv@divisor+1,w
  5711  0F3E  0476               	iorwf	___lwdiv@divisor,w
  5712  0F3F  1903               	skipnz
  5713  0F40  2F6A               	goto	i1l2209
  5714  0F41  01FD               	clrf	___lwdiv@counter
  5715  0F42  0AFD               	incf	___lwdiv@counter,f
  5716  0F43                     i1l2197:	
  5717  0F43  1BF7               	btfsc	___lwdiv@divisor+1,7
  5718  0F44  2F4F               	goto	i1l2199
  5719  0F45  3001               	movlw	1
  5720  0F46                     u204_25:	
  5721  0F46  35F6               	lslf	___lwdiv@divisor,f
  5722  0F47  0DF7               	rlf	___lwdiv@divisor+1,f
  5723  0F48  0B89               	decfsz	9,f
  5724  0F49  2F46               	goto	u204_25
  5725  0F4A  3001               	movlw	1
  5726  0F4B  00FA               	movwf	??___lwdiv
  5727  0F4C  087A               	movf	??___lwdiv,w
  5728  0F4D  07FD               	addwf	___lwdiv@counter,f
  5729  0F4E  2F43               	goto	i1l2197
  5730  0F4F                     i1l2199:	
  5731  0F4F  3001               	movlw	1
  5732  0F50                     u206_25:	
  5733  0F50  35FB               	lslf	___lwdiv@quotient,f
  5734  0F51  0DFC               	rlf	___lwdiv@quotient+1,f
  5735  0F52  0B89               	decfsz	9,f
  5736  0F53  2F50               	goto	u206_25
  5737  0F54  0877               	movf	___lwdiv@divisor+1,w
  5738  0F55  0279               	subwf	___lwdiv@dividend+1,w
  5739  0F56  1D03               	skipz
  5740  0F57  2F5A               	goto	u207_25
  5741  0F58  0876               	movf	___lwdiv@divisor,w
  5742  0F59  0278               	subwf	___lwdiv@dividend,w
  5743  0F5A                     u207_25:	
  5744  0F5A  1C03               	skipc
  5745  0F5B  2F61               	goto	i1l2205
  5746  0F5C  0876               	movf	___lwdiv@divisor,w
  5747  0F5D  02F8               	subwf	___lwdiv@dividend,f
  5748  0F5E  0877               	movf	___lwdiv@divisor+1,w
  5749  0F5F  3BF9               	subwfb	___lwdiv@dividend+1,f
  5750  0F60  147B               	bsf	___lwdiv@quotient,0
  5751  0F61                     i1l2205:	
  5752  0F61  3001               	movlw	1
  5753  0F62                     u208_25:	
  5754  0F62  36F7               	lsrf	___lwdiv@divisor+1,f
  5755  0F63  0CF6               	rrf	___lwdiv@divisor,f
  5756  0F64  0B89               	decfsz	9,f
  5757  0F65  2F62               	goto	u208_25
  5758  0F66  3001               	movlw	1
  5759  0F67  02FD               	subwf	___lwdiv@counter,f
  5760  0F68  1D03               	btfss	3,2
  5761  0F69  2F4F               	goto	i1l2199
  5762  0F6A                     i1l2209:	
  5763  0F6A  087C               	movf	___lwdiv@quotient+1,w
  5764  0F6B  01F7               	clrf	?___lwdiv+1
  5765  0F6C  07F7               	addwf	?___lwdiv+1,f
  5766  0F6D  087B               	movf	___lwdiv@quotient,w
  5767  0F6E  01F6               	clrf	?___lwdiv
  5768  0F6F  07F6               	addwf	?___lwdiv,f
  5769  0F70  0008               	return
  5770  0F71                     __end_of___lwdiv:	
  5771                           
  5772                           	psect	text34
  5773  06F8                     __ptext34:	
  5774 ;; *************** function ___almod *****************
  5775 ;; Defined at:
  5776 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\almod.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  divisor         4    0[COMMON] long 
  5779 ;;  dividend        4    4[COMMON] long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  sign            1   10[COMMON] unsigned char 
  5782 ;;  counter         1    9[COMMON] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  4    0[COMMON] long 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5792 ;;      Params:         8       0       0       0       0       0
  5793 ;;      Locals:         2       0       0       0       0       0
  5794 ;;      Temps:          1       0       0       0       0       0
  5795 ;;      Totals:        11       0       0       0       0       0
  5796 ;;Total ram usage:       11 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_display
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function ___almod
  5807  06F8                     ___almod:	
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in ___almod: [wreg+status,2+status,0]
  5811  06F8  01FA               	clrf	___almod@sign
  5812  06F9  1FF7               	btfss	___almod@dividend+3,7
  5813  06FA  2F08               	goto	i1l570
  5814  06FB  09F4               	comf	___almod@dividend,f
  5815  06FC  09F5               	comf	___almod@dividend+1,f
  5816  06FD  09F6               	comf	___almod@dividend+2,f
  5817  06FE  09F7               	comf	___almod@dividend+3,f
  5818  06FF  0AF4               	incf	___almod@dividend,f
  5819  0700  1903               	skipnz
  5820  0701  0AF5               	incf	___almod@dividend+1,f
  5821  0702  1903               	skipnz
  5822  0703  0AF6               	incf	___almod@dividend+2,f
  5823  0704  1903               	skipnz
  5824  0705  0AF7               	incf	___almod@dividend+3,f
  5825  0706  01FA               	clrf	___almod@sign
  5826  0707  0AFA               	incf	___almod@sign,f
  5827  0708                     i1l570:	
  5828  0708  1FF3               	btfss	___almod@divisor+3,7
  5829  0709  2F15               	goto	i1l2119
  5830  070A  09F0               	comf	___almod@divisor,f
  5831  070B  09F1               	comf	___almod@divisor+1,f
  5832  070C  09F2               	comf	___almod@divisor+2,f
  5833  070D  09F3               	comf	___almod@divisor+3,f
  5834  070E  0AF0               	incf	___almod@divisor,f
  5835  070F  1903               	skipnz
  5836  0710  0AF1               	incf	___almod@divisor+1,f
  5837  0711  1903               	skipnz
  5838  0712  0AF2               	incf	___almod@divisor+2,f
  5839  0713  1903               	skipnz
  5840  0714  0AF3               	incf	___almod@divisor+3,f
  5841  0715                     i1l2119:	
  5842  0715  0873               	movf	___almod@divisor+3,w
  5843  0716  0472               	iorwf	___almod@divisor+2,w
  5844  0717  0471               	iorwf	___almod@divisor+1,w
  5845  0718  0470               	iorwf	___almod@divisor,w
  5846  0719  1903               	skipnz
  5847  071A  2F4E               	goto	i1l2135
  5848  071B  01F9               	clrf	___almod@counter
  5849  071C  0AF9               	incf	___almod@counter,f
  5850  071D                     i1l2125:	
  5851  071D  1BF3               	btfsc	___almod@divisor+3,7
  5852  071E  2F2B               	goto	i1l2127
  5853  071F  3001               	movlw	1
  5854  0720                     u187_25:	
  5855  0720  35F0               	lslf	___almod@divisor,f
  5856  0721  0DF1               	rlf	___almod@divisor+1,f
  5857  0722  0DF2               	rlf	___almod@divisor+2,f
  5858  0723  0DF3               	rlf	___almod@divisor+3,f
  5859  0724  0B89               	decfsz	9,f
  5860  0725  2F20               	goto	u187_25
  5861  0726  3001               	movlw	1
  5862  0727  00F8               	movwf	??___almod
  5863  0728  0878               	movf	??___almod,w
  5864  0729  07F9               	addwf	___almod@counter,f
  5865  072A  2F1D               	goto	i1l2125
  5866  072B                     i1l2127:	
  5867  072B  0873               	movf	___almod@divisor+3,w
  5868  072C  0277               	subwf	___almod@dividend+3,w
  5869  072D  1D03               	skipz
  5870  072E  2F39               	goto	u189_25
  5871  072F  0872               	movf	___almod@divisor+2,w
  5872  0730  0276               	subwf	___almod@dividend+2,w
  5873  0731  1D03               	skipz
  5874  0732  2F39               	goto	u189_25
  5875  0733  0871               	movf	___almod@divisor+1,w
  5876  0734  0275               	subwf	___almod@dividend+1,w
  5877  0735  1D03               	skipz
  5878  0736  2F39               	goto	u189_25
  5879  0737  0870               	movf	___almod@divisor,w
  5880  0738  0274               	subwf	___almod@dividend,w
  5881  0739                     u189_25:	
  5882  0739  1C03               	skipc
  5883  073A  2F43               	goto	i1l2131
  5884  073B  0870               	movf	___almod@divisor,w
  5885  073C  02F4               	subwf	___almod@dividend,f
  5886  073D  0871               	movf	___almod@divisor+1,w
  5887  073E  3BF5               	subwfb	___almod@dividend+1,f
  5888  073F  0872               	movf	___almod@divisor+2,w
  5889  0740  3BF6               	subwfb	___almod@dividend+2,f
  5890  0741  0873               	movf	___almod@divisor+3,w
  5891  0742  3BF7               	subwfb	___almod@dividend+3,f
  5892  0743                     i1l2131:	
  5893  0743  3001               	movlw	1
  5894  0744                     u190_25:	
  5895  0744  36F3               	lsrf	___almod@divisor+3,f
  5896  0745  0CF2               	rrf	___almod@divisor+2,f
  5897  0746  0CF1               	rrf	___almod@divisor+1,f
  5898  0747  0CF0               	rrf	___almod@divisor,f
  5899  0748  0B89               	decfsz	9,f
  5900  0749  2F44               	goto	u190_25
  5901  074A  3001               	movlw	1
  5902  074B  02F9               	subwf	___almod@counter,f
  5903  074C  1D03               	btfss	3,2
  5904  074D  2F2B               	goto	i1l2127
  5905  074E                     i1l2135:	
  5906  074E  087A               	movf	___almod@sign,w
  5907  074F  1903               	btfsc	3,2
  5908  0750  2F5C               	goto	i1l2139
  5909  0751  09F4               	comf	___almod@dividend,f
  5910  0752  09F5               	comf	___almod@dividend+1,f
  5911  0753  09F6               	comf	___almod@dividend+2,f
  5912  0754  09F7               	comf	___almod@dividend+3,f
  5913  0755  0AF4               	incf	___almod@dividend,f
  5914  0756  1903               	skipnz
  5915  0757  0AF5               	incf	___almod@dividend+1,f
  5916  0758  1903               	skipnz
  5917  0759  0AF6               	incf	___almod@dividend+2,f
  5918  075A  1903               	skipnz
  5919  075B  0AF7               	incf	___almod@dividend+3,f
  5920  075C                     i1l2139:	
  5921  075C  0877               	movf	___almod@dividend+3,w
  5922  075D  00F3               	movwf	?___almod+3
  5923  075E  0876               	movf	___almod@dividend+2,w
  5924  075F  00F2               	movwf	?___almod+2
  5925  0760  0875               	movf	___almod@dividend+1,w
  5926  0761  00F1               	movwf	?___almod+1
  5927  0762  0874               	movf	___almod@dividend,w
  5928  0763  00F0               	movwf	?___almod
  5929  0764  0008               	return
  5930  0765                     __end_of___almod:	
  5931                           
  5932                           	psect	text35
  5933  0601                     __ptext35:	
  5934 ;; *************** function ___aldiv *****************
  5935 ;; Defined at:
  5936 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  divisor         4    0[BANK0 ] long 
  5939 ;;  dividend        4    4[BANK0 ] long 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  quotient        4   10[BANK0 ] long 
  5942 ;;  sign            1    9[BANK0 ] unsigned char 
  5943 ;;  counter         1    8[BANK0 ] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  4    0[BANK0 ] long 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5953 ;;      Params:         0       8       0       0       0       0
  5954 ;;      Locals:         0       6       0       0       0       0
  5955 ;;      Temps:          1       0       0       0       0       0
  5956 ;;      Totals:         1      14       0       0       0       0
  5957 ;;Total ram usage:       15 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_display
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function ___aldiv
  5968  0601                     ___aldiv:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5972  0601  0020               	movlb	0	; select bank0
  5973  0602  01C4               	clrf	___aldiv@sign
  5974  0603  1FBE               	btfss	___aldiv@divisor+3,7
  5975  0604  2E12               	goto	i1l557
  5976  0605  09BB               	comf	___aldiv@divisor,f
  5977  0606  09BC               	comf	___aldiv@divisor+1,f
  5978  0607  09BD               	comf	___aldiv@divisor+2,f
  5979  0608  09BE               	comf	___aldiv@divisor+3,f
  5980  0609  0ABB               	incf	___aldiv@divisor,f
  5981  060A  1903               	skipnz
  5982  060B  0ABC               	incf	___aldiv@divisor+1,f
  5983  060C  1903               	skipnz
  5984  060D  0ABD               	incf	___aldiv@divisor+2,f
  5985  060E  1903               	skipnz
  5986  060F  0ABE               	incf	___aldiv@divisor+3,f
  5987  0610  01C4               	clrf	___aldiv@sign
  5988  0611  0AC4               	incf	___aldiv@sign,f
  5989  0612                     i1l557:	
  5990  0612  1FC2               	btfss	___aldiv@dividend+3,7
  5991  0613  2E23               	goto	i1l2081
  5992  0614  09BF               	comf	___aldiv@dividend,f
  5993  0615  09C0               	comf	___aldiv@dividend+1,f
  5994  0616  09C1               	comf	___aldiv@dividend+2,f
  5995  0617  09C2               	comf	___aldiv@dividend+3,f
  5996  0618  0ABF               	incf	___aldiv@dividend,f
  5997  0619  1903               	skipnz
  5998  061A  0AC0               	incf	___aldiv@dividend+1,f
  5999  061B  1903               	skipnz
  6000  061C  0AC1               	incf	___aldiv@dividend+2,f
  6001  061D  1903               	skipnz
  6002  061E  0AC2               	incf	___aldiv@dividend+3,f
  6003  061F  3001               	movlw	1
  6004  0620  00FB               	movwf	??___aldiv
  6005  0621  087B               	movf	??___aldiv,w
  6006  0622  06C4               	xorwf	___aldiv@sign,f
  6007  0623                     i1l2081:	
  6008  0623  3000               	movlw	0
  6009  0624  00C8               	movwf	___aldiv@quotient+3
  6010  0625  3000               	movlw	0
  6011  0626  00C7               	movwf	___aldiv@quotient+2
  6012  0627  3000               	movlw	0
  6013  0628  00C6               	movwf	___aldiv@quotient+1
  6014  0629  3000               	movlw	0
  6015  062A  00C5               	movwf	___aldiv@quotient
  6016  062B  083E               	movf	___aldiv@divisor+3,w
  6017  062C  043D               	iorwf	___aldiv@divisor+2,w
  6018  062D  043C               	iorwf	___aldiv@divisor+1,w
  6019  062E  043B               	iorwf	___aldiv@divisor,w
  6020  062F  1903               	skipnz
  6021  0630  2E6C               	goto	i1l2103
  6022  0631  01C3               	clrf	___aldiv@counter
  6023  0632  0AC3               	incf	___aldiv@counter,f
  6024  0633                     i1l2089:	
  6025  0633  1BBE               	btfsc	___aldiv@divisor+3,7
  6026  0634  2E41               	goto	i1l2091
  6027  0635  3001               	movlw	1
  6028  0636                     u177_25:	
  6029  0636  35BB               	lslf	___aldiv@divisor,f
  6030  0637  0DBC               	rlf	___aldiv@divisor+1,f
  6031  0638  0DBD               	rlf	___aldiv@divisor+2,f
  6032  0639  0DBE               	rlf	___aldiv@divisor+3,f
  6033  063A  0B89               	decfsz	9,f
  6034  063B  2E36               	goto	u177_25
  6035  063C  3001               	movlw	1
  6036  063D  00FB               	movwf	??___aldiv
  6037  063E  087B               	movf	??___aldiv,w
  6038  063F  07C3               	addwf	___aldiv@counter,f
  6039  0640  2E33               	goto	i1l2089
  6040  0641                     i1l2091:	
  6041  0641  3001               	movlw	1
  6042  0642                     u179_25:	
  6043  0642  35C5               	lslf	___aldiv@quotient,f
  6044  0643  0DC6               	rlf	___aldiv@quotient+1,f
  6045  0644  0DC7               	rlf	___aldiv@quotient+2,f
  6046  0645  0DC8               	rlf	___aldiv@quotient+3,f
  6047  0646  0B89               	decfsz	9,f
  6048  0647  2E42               	goto	u179_25
  6049  0648  083E               	movf	___aldiv@divisor+3,w
  6050  0649  0242               	subwf	___aldiv@dividend+3,w
  6051  064A  1D03               	skipz
  6052  064B  2E56               	goto	u180_25
  6053  064C  083D               	movf	___aldiv@divisor+2,w
  6054  064D  0241               	subwf	___aldiv@dividend+2,w
  6055  064E  1D03               	skipz
  6056  064F  2E56               	goto	u180_25
  6057  0650  083C               	movf	___aldiv@divisor+1,w
  6058  0651  0240               	subwf	___aldiv@dividend+1,w
  6059  0652  1D03               	skipz
  6060  0653  2E56               	goto	u180_25
  6061  0654  083B               	movf	___aldiv@divisor,w
  6062  0655  023F               	subwf	___aldiv@dividend,w
  6063  0656                     u180_25:	
  6064  0656  1C03               	skipc
  6065  0657  2E61               	goto	i1l2099
  6066  0658  083B               	movf	___aldiv@divisor,w
  6067  0659  02BF               	subwf	___aldiv@dividend,f
  6068  065A  083C               	movf	___aldiv@divisor+1,w
  6069  065B  3BC0               	subwfb	___aldiv@dividend+1,f
  6070  065C  083D               	movf	___aldiv@divisor+2,w
  6071  065D  3BC1               	subwfb	___aldiv@dividend+2,f
  6072  065E  083E               	movf	___aldiv@divisor+3,w
  6073  065F  3BC2               	subwfb	___aldiv@dividend+3,f
  6074  0660  1445               	bsf	___aldiv@quotient,0
  6075  0661                     i1l2099:	
  6076  0661  3001               	movlw	1
  6077  0662                     u181_25:	
  6078  0662  36BE               	lsrf	___aldiv@divisor+3,f
  6079  0663  0CBD               	rrf	___aldiv@divisor+2,f
  6080  0664  0CBC               	rrf	___aldiv@divisor+1,f
  6081  0665  0CBB               	rrf	___aldiv@divisor,f
  6082  0666  0B89               	decfsz	9,f
  6083  0667  2E62               	goto	u181_25
  6084  0668  3001               	movlw	1
  6085  0669  02C3               	subwf	___aldiv@counter,f
  6086  066A  1D03               	btfss	3,2
  6087  066B  2E41               	goto	i1l2091
  6088  066C                     i1l2103:	
  6089  066C  0844               	movf	___aldiv@sign,w
  6090  066D  1903               	btfsc	3,2
  6091  066E  2E7A               	goto	i1l2107
  6092  066F  09C5               	comf	___aldiv@quotient,f
  6093  0670  09C6               	comf	___aldiv@quotient+1,f
  6094  0671  09C7               	comf	___aldiv@quotient+2,f
  6095  0672  09C8               	comf	___aldiv@quotient+3,f
  6096  0673  0AC5               	incf	___aldiv@quotient,f
  6097  0674  1903               	skipnz
  6098  0675  0AC6               	incf	___aldiv@quotient+1,f
  6099  0676  1903               	skipnz
  6100  0677  0AC7               	incf	___aldiv@quotient+2,f
  6101  0678  1903               	skipnz
  6102  0679  0AC8               	incf	___aldiv@quotient+3,f
  6103  067A                     i1l2107:	
  6104  067A  0848               	movf	___aldiv@quotient+3,w
  6105  067B  00BE               	movwf	?___aldiv+3
  6106  067C  0847               	movf	___aldiv@quotient+2,w
  6107  067D  00BD               	movwf	?___aldiv+2
  6108  067E  0846               	movf	___aldiv@quotient+1,w
  6109  067F  00BC               	movwf	?___aldiv+1
  6110  0680  0845               	movf	___aldiv@quotient,w
  6111  0681  00BB               	movwf	?___aldiv
  6112  0682  0008               	return
  6113  0683                     __end_of___aldiv:	
  6114                           
  6115                           	psect	text36
  6116  0BA2                     __ptext36:	
  6117 ;; *************** function _LCD_SetCursor *****************
  6118 ;; Defined at:
  6119 ;;		line 285 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  col             1    wreg     unsigned char 
  6122 ;;  row             1    7[COMMON] unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  col             1   10[COMMON] unsigned char 
  6125 ;;  row_offsets     2    8[COMMON] unsigned char [2]
  6126 ;; Return value:  Size  Location     Type
  6127 ;;		None               void
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6135 ;;      Params:         1       0       0       0       0       0
  6136 ;;      Locals:         3       0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0
  6138 ;;      Totals:         4       0       0       0       0       0
  6139 ;;Total ram usage:        4 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    3
  6142 ;; This function calls:
  6143 ;;		i1_LCD_Command
  6144 ;; This function is called by:
  6145 ;;		_display
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _LCD_SetCursor
  6151  0BA2                     _LCD_SetCursor:	
  6152                           
  6153                           ;incstack = 0
  6154                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6155                           ;LCD_SetCursor@col stored from wreg
  6156  0BA2  00FA               	movwf	LCD_SetCursor@col
  6157                           
  6158                           ;My_header_16F.h: 286: uint8_t row_offsets[] = {0x00, 0x40};
  6159  0BA3  0020               	movlb	0	; select bank0
  6160  0BA4  0857               	movf	LCD_SetCursor@F3069+1,w
  6161  0BA5  01F9               	clrf	LCD_SetCursor@row_offsets+1
  6162  0BA6  07F9               	addwf	LCD_SetCursor@row_offsets+1,f
  6163  0BA7  0856               	movf	LCD_SetCursor@F3069,w
  6164  0BA8  01F8               	clrf	LCD_SetCursor@row_offsets
  6165  0BA9  07F8               	addwf	LCD_SetCursor@row_offsets,f
  6166                           
  6167                           ;My_header_16F.h: 288: LCD_Command(0x80 | (col + row_offsets[row]));
  6168  0BAA  0877               	movf	LCD_SetCursor@row,w
  6169  0BAB  3E78               	addlw	LCD_SetCursor@row_offsets& (0+255)
  6170  0BAC  0086               	movwf	6
  6171  0BAD  0187               	clrf	7
  6172  0BAE  0801               	movf	1,w
  6173  0BAF  077A               	addwf	LCD_SetCursor@col,w
  6174  0BB0  3880               	iorlw	128
  6175  0BB1  318C  248E         	fcall	i1_LCD_Command
  6176  0BB3  0008               	return
  6177  0BB4                     __end_of_LCD_SetCursor:	
  6178                           
  6179                           	psect	text37
  6180  0C8E                     __ptext37:	
  6181 ;; *************** function i1_LCD_Command *****************
  6182 ;; Defined at:
  6183 ;;		line 267 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  c               1    wreg     unsigned char 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  c               1    5[COMMON] unsigned char 
  6188 ;;  LCD_Command     1    6[COMMON] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;		None               void
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0, pclath, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6198 ;;      Params:         0       0       0       0       0       0
  6199 ;;      Locals:         2       0       0       0       0       0
  6200 ;;      Temps:          1       0       0       0       0       0
  6201 ;;      Totals:         3       0       0       0       0       0
  6202 ;;Total ram usage:        3 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    2
  6205 ;; This function calls:
  6206 ;;		i1_I2C_Send
  6207 ;;		i1_I2C_Start
  6208 ;;		i1_I2C_Stop
  6209 ;; This function is called by:
  6210 ;;		_LCD_SetCursor
  6211 ;;		i1_LCD_Clear
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function i1_LCD_Command
  6217  0C8E                     i1_LCD_Command:	
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in i1_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  6221                           ;i1LCD_Command@c stored from wreg
  6222  0C8E  00F5               	movwf	i1LCD_Command@c
  6223                           
  6224                           ;My_header_16F.h: 268: uint8_t ans;
  6225                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  6226  0C8F  01F2               	clrf	i1I2C_Start@rw
  6227  0C90  303E               	movlw	62
  6228  0C91  318C  2408  318C   	fcall	i1_I2C_Start
  6229  0C94  00F4               	movwf	??i1_LCD_Command
  6230  0C95  0874               	movf	??i1_LCD_Command,w
  6231  0C96  00F6               	movwf	i1LCD_Command@ans
  6232                           
  6233                           ;My_header_16F.h: 271: if (ans == 0) {
  6234  0C97  08F6               	movf	i1LCD_Command@ans,f
  6235  0C98  1D03               	skipz
  6236  0C99  2CA2               	goto	i1l212
  6237                           
  6238                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  6239  0C9A  3080               	movlw	128
  6240  0C9B  318B  2392  318C   	fcall	i1_I2C_Send
  6241                           
  6242                           ;My_header_16F.h: 274: I2C_Send(c);
  6243  0C9E  0875               	movf	i1LCD_Command@c,w
  6244  0C9F  318B  2392  318C   	fcall	i1_I2C_Send
  6245  0CA2                     i1l212:	
  6246                           
  6247                           ;My_header_16F.h: 275: }
  6248                           ;My_header_16F.h: 276: I2C_Stop();
  6249  0CA2  318B  233E  318C   	fcall	i1_I2C_Stop
  6250                           
  6251                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6252  0CA5  3045               	movlw	69
  6253  0CA6  00F4               	movwf	??i1_LCD_Command
  6254  0CA7                     u396_27:	
  6255  0CA7  0BF4               	decfsz	??i1_LCD_Command,f
  6256  0CA8  2CA7               	goto	u396_27
  6257  0CA9  0008               	return
  6258  0CAA                     __end_ofi1_LCD_Command:	
  6259                           
  6260                           	psect	text38
  6261  0EDC                     __ptext38:	
  6262 ;; *************** function _LCD_Puts *****************
  6263 ;; Defined at:
  6264 ;;		line 304 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  s               2    4[COMMON] PTR const unsigned char 
  6267 ;;		 -> STR_13(8), STR_12(5), STR_11(7), STR_10(6), 
  6268 ;;		 -> STR_9(4), STR_8(5), STR_7(7), STR_6(6), 
  6269 ;;		 -> STR_5(5), STR_4(7), STR_3(6), STR_2(8), 
  6270 ;;		 -> STR_1(7), 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  ans             2    8[COMMON] int 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6282 ;;      Params:         2       0       0       0       0       0
  6283 ;;      Locals:         2       0       0       0       0       0
  6284 ;;      Temps:          2       0       0       0       0       0
  6285 ;;      Totals:         6       0       0       0       0       0
  6286 ;;Total ram usage:        6 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    2
  6289 ;; This function calls:
  6290 ;;		i1_I2C_Send
  6291 ;;		i1_I2C_Start
  6292 ;;		i1_I2C_Stop
  6293 ;; This function is called by:
  6294 ;;		_display
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _LCD_Puts
  6300  0EDC                     _LCD_Puts:	
  6301                           
  6302                           ;My_header_16F.h: 305: int ans;
  6303                           ;My_header_16F.h: 307: ans = I2C_Start(0x3E, 0);
  6304                           
  6305                           ;incstack = 0
  6306                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6307  0EDC  01F2               	clrf	i1I2C_Start@rw
  6308  0EDD  303E               	movlw	62
  6309  0EDE  318C  2408  318E   	fcall	i1_I2C_Start
  6310  0EE1  00F6               	movwf	??_LCD_Puts
  6311  0EE2  01F7               	clrf	??_LCD_Puts+1
  6312  0EE3  0876               	movf	??_LCD_Puts,w
  6313  0EE4  00F8               	movwf	LCD_Puts@ans
  6314  0EE5  0877               	movf	??_LCD_Puts+1,w
  6315  0EE6  00F9               	movwf	LCD_Puts@ans+1
  6316                           
  6317                           ;My_header_16F.h: 308: if (ans == 0) {
  6318  0EE7  0879               	movf	LCD_Puts@ans+1,w
  6319  0EE8  0478               	iorwf	LCD_Puts@ans,w
  6320  0EE9  1D03               	skipz
  6321  0EEA  2F08               	goto	i1l2047
  6322                           
  6323                           ;My_header_16F.h: 309: I2C_Send(0b01000000);
  6324  0EEB  3040               	movlw	64
  6325  0EEC  318B  2392  318E   	fcall	i1_I2C_Send
  6326  0EEF                     i1l2045:	
  6327                           ;My_header_16F.h: 310: while (*s) {
  6328                           
  6329  0EEF  0874               	movf	LCD_Puts@s,w
  6330  0EF0  0084               	movwf	4
  6331  0EF1  0875               	movf	LCD_Puts@s+1,w
  6332  0EF2  0085               	movwf	5
  6333  0EF3  0800               	movf	0,w	;code access
  6334  0EF4  3800               	iorlw	0
  6335  0EF5  1903               	btfsc	3,2
  6336  0EF6  2F08               	goto	i1l2047
  6337                           
  6338                           ;My_header_16F.h: 311: I2C_Send(*s++);
  6339  0EF7  0874               	movf	LCD_Puts@s,w
  6340  0EF8  0084               	movwf	4
  6341  0EF9  0875               	movf	LCD_Puts@s+1,w
  6342  0EFA  0085               	movwf	5
  6343  0EFB  0800               	movf	0,w	;code access
  6344  0EFC  318B  2392  318E   	fcall	i1_I2C_Send
  6345  0EFF  3001               	movlw	1
  6346  0F00  07F4               	addwf	LCD_Puts@s,f
  6347  0F01  3000               	movlw	0
  6348  0F02  3DF5               	addwfc	LCD_Puts@s+1,f
  6349                           
  6350                           ;My_header_16F.h: 312: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6351  0F03  3045               	movlw	69
  6352  0F04  00F6               	movwf	??_LCD_Puts
  6353  0F05                     u397_27:	
  6354  0F05  0BF6               	decfsz	??_LCD_Puts,f
  6355  0F06  2F05               	goto	u397_27
  6356  0F07  2EEF               	goto	i1l2045
  6357  0F08                     i1l2047:	
  6358                           
  6359                           ;My_header_16F.h: 313: }
  6360                           ;My_header_16F.h: 314: }
  6361                           ;My_header_16F.h: 315: I2C_Stop();
  6362  0F08  318B  233E         	fcall	i1_I2C_Stop
  6363  0F0A  0008               	return
  6364  0F0B                     __end_of_LCD_Puts:	
  6365                           
  6366                           	psect	text39
  6367  0C72                     __ptext39:	
  6368 ;; *************** function _LCD_Putc *****************
  6369 ;; Defined at:
  6370 ;;		line 291 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  c               1    wreg     unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  c               1    5[COMMON] unsigned char 
  6375 ;;  ans             1    6[COMMON] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;		None               void
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, status,0, pclath, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6385 ;;      Params:         0       0       0       0       0       0
  6386 ;;      Locals:         2       0       0       0       0       0
  6387 ;;      Temps:          1       0       0       0       0       0
  6388 ;;      Totals:         3       0       0       0       0       0
  6389 ;;Total ram usage:        3 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    2
  6392 ;; This function calls:
  6393 ;;		i1_I2C_Send
  6394 ;;		i1_I2C_Start
  6395 ;;		i1_I2C_Stop
  6396 ;; This function is called by:
  6397 ;;		_display
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function _LCD_Putc
  6403  0C72                     _LCD_Putc:	
  6404                           
  6405                           ;incstack = 0
  6406                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  6407                           ;LCD_Putc@c stored from wreg
  6408  0C72  00F5               	movwf	LCD_Putc@c
  6409                           
  6410                           ;My_header_16F.h: 292: uint8_t ans;
  6411                           ;My_header_16F.h: 294: ans = I2C_Start(0x3E, 0);
  6412  0C73  01F2               	clrf	i1I2C_Start@rw
  6413  0C74  303E               	movlw	62
  6414  0C75  318C  2408  318C   	fcall	i1_I2C_Start
  6415  0C78  00F4               	movwf	??_LCD_Putc
  6416  0C79  0874               	movf	??_LCD_Putc,w
  6417  0C7A  00F6               	movwf	LCD_Putc@ans
  6418                           
  6419                           ;My_header_16F.h: 295: if (ans == 0) {
  6420  0C7B  08F6               	movf	LCD_Putc@ans,f
  6421  0C7C  1D03               	skipz
  6422  0C7D  2C86               	goto	i1l224
  6423                           
  6424                           ;My_header_16F.h: 297: I2C_Send(0b11000000);
  6425  0C7E  30C0               	movlw	192
  6426  0C7F  318B  2392  318C   	fcall	i1_I2C_Send
  6427                           
  6428                           ;My_header_16F.h: 298: I2C_Send(c);
  6429  0C82  0875               	movf	LCD_Putc@c,w
  6430  0C83  318B  2392  318C   	fcall	i1_I2C_Send
  6431  0C86                     i1l224:	
  6432                           
  6433                           ;My_header_16F.h: 299: }
  6434                           ;My_header_16F.h: 300: I2C_Stop();
  6435  0C86  318B  233E  318C   	fcall	i1_I2C_Stop
  6436                           
  6437                           ;My_header_16F.h: 301: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6438  0C89  3045               	movlw	69
  6439  0C8A  00F4               	movwf	??_LCD_Putc
  6440  0C8B                     u398_27:	
  6441  0C8B  0BF4               	decfsz	??_LCD_Putc,f
  6442  0C8C  2C8B               	goto	u398_27
  6443  0C8D  0008               	return
  6444  0C8E                     __end_of_LCD_Putc:	
  6445                           
  6446                           	psect	text40
  6447  0B3E                     __ptext40:	
  6448 ;; *************** function i1_I2C_Stop *****************
  6449 ;; Defined at:
  6450 ;;		line 237 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;		None               void
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0, pclath, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6464 ;;      Params:         0       0       0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0
  6467 ;;      Totals:         0       0       0       0       0       0
  6468 ;;Total ram usage:        0 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    1
  6471 ;; This function calls:
  6472 ;;		i1_I2C_IdleCheck
  6473 ;; This function is called by:
  6474 ;;		_LCD_Putc
  6475 ;;		_LCD_Puts
  6476 ;;		i1_LCD_Command
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function i1_I2C_Stop
  6482  0B3E                     i1_I2C_Stop:	
  6483                           
  6484                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in i1_I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  6488  0B3E  3005               	movlw	5
  6489  0B3F  318B  2350         	fcall	i1_I2C_IdleCheck
  6490                           
  6491                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  6492  0B41  0024               	movlb	4	; select bank4
  6493  0B42  1516               	bsf	22,2	;volatile
  6494  0B43  0008               	return
  6495  0B44                     __end_ofi1_I2C_Stop:	
  6496                           
  6497                           	psect	text41
  6498  0C08                     __ptext41:	
  6499 ;; *************** function i1_I2C_Start *****************
  6500 ;; Defined at:
  6501 ;;		line 213 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  adrs            1    wreg     unsigned char 
  6504 ;;  rw              1    2[COMMON] unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  adrs            1    3[COMMON] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      unsigned char 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6516 ;;      Params:         1       0       0       0       0       0
  6517 ;;      Locals:         1       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0
  6519 ;;      Totals:         2       0       0       0       0       0
  6520 ;;Total ram usage:        2 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    1
  6523 ;; This function calls:
  6524 ;;		i1_I2C_IdleCheck
  6525 ;; This function is called by:
  6526 ;;		_LCD_Putc
  6527 ;;		_LCD_Puts
  6528 ;;		i1_LCD_Command
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function i1_I2C_Start
  6534  0C08                     i1_I2C_Start:	
  6535                           
  6536                           ;incstack = 0
  6537                           ; Regs used in i1_I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6538                           ;i1I2C_Start@adrs stored from wreg
  6539  0C08  00F3               	movwf	i1I2C_Start@adrs
  6540                           
  6541                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  6542  0C09  3005               	movlw	5
  6543  0C0A  318B  2350  318C   	fcall	i1_I2C_IdleCheck
  6544                           
  6545                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  6546  0C0D  0024               	movlb	4	; select bank4
  6547  0C0E  1416               	bsf	22,0	;volatile
  6548                           
  6549                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  6550  0C0F  3005               	movlw	5
  6551  0C10  318B  2350  318C   	fcall	i1_I2C_IdleCheck
  6552                           
  6553                           ;My_header_16F.h: 219: SSP1IF = 0;
  6554  0C13  0020               	movlb	0	; select bank0
  6555  0C14  1191               	bcf	17,3	;volatile
  6556                           
  6557                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6558  0C15  3573               	lslf	i1I2C_Start@adrs,w
  6559  0C16  0772               	addwf	i1I2C_Start@rw,w
  6560  0C17  0024               	movlb	4	; select bank4
  6561  0C18  0091               	movwf	17	;volatile
  6562  0C19                     i1l188:	
  6563                           ;My_header_16F.h: 221: while (!SSP1IF);
  6564                           
  6565  0C19  0020               	movlb	0	; select bank0
  6566  0C1A  1D91               	btfss	17,3	;volatile
  6567  0C1B  2C19               	goto	i1l188
  6568                           
  6569                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  6570  0C1C  0024               	movlb	4	; select bank4
  6571  0C1D  0E16               	swapf	22,w	;volatile
  6572  0C1E  0C89               	rrf	9,f
  6573  0C1F  0C89               	rrf	9,f
  6574  0C20  3901               	andlw	1
  6575  0C21  0008               	return
  6576  0C22                     __end_ofi1_I2C_Start:	
  6577                           
  6578                           	psect	text42
  6579  0B92                     __ptext42:	
  6580 ;; *************** function i1_I2C_Send *****************
  6581 ;; Defined at:
  6582 ;;		line 243 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  data            1    wreg     unsigned char 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  data            1    2[COMMON] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      unsigned char 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0, pclath, cstack
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6596 ;;      Params:         0       0       0       0       0       0
  6597 ;;      Locals:         1       0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0       0
  6599 ;;      Totals:         1       0       0       0       0       0
  6600 ;;Total ram usage:        1 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    1
  6603 ;; This function calls:
  6604 ;;		i1_I2C_IdleCheck
  6605 ;; This function is called by:
  6606 ;;		_LCD_Putc
  6607 ;;		_LCD_Puts
  6608 ;;		i1_LCD_Command
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function i1_I2C_Send
  6614  0B92                     i1_I2C_Send:	
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in i1_I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  6618                           ;i1I2C_Send@data stored from wreg
  6619  0B92  00F2               	movwf	i1I2C_Send@data
  6620                           
  6621                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  6622  0B93  3005               	movlw	5
  6623  0B94  318B  2350  318B   	fcall	i1_I2C_IdleCheck
  6624                           
  6625                           ;My_header_16F.h: 245: SSP1IF = 0;
  6626  0B97  0020               	movlb	0	; select bank0
  6627  0B98  1191               	bcf	17,3	;volatile
  6628                           
  6629                           ;My_header_16F.h: 246: SSP1BUF = data;
  6630  0B99  0872               	movf	i1I2C_Send@data,w
  6631  0B9A  0024               	movlb	4	; select bank4
  6632  0B9B  0091               	movwf	17	;volatile
  6633  0B9C                     i1l203:	
  6634                           ;My_header_16F.h: 247: while (!SSP1IF);
  6635                           
  6636  0B9C  0020               	movlb	0	; select bank0
  6637  0B9D  1D91               	btfss	17,3	;volatile
  6638  0B9E  2B9C               	goto	i1l203
  6639                           
  6640                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  6641                           ;	Return value of i1_I2C_Send is never used
  6642  0B9F  0024               	movlb	4	; select bank4
  6643  0BA0  0816               	movf	22,w	;volatile
  6644  0BA1  0008               	return
  6645  0BA2                     __end_ofi1_I2C_Send:	
  6646                           
  6647                           	psect	text43
  6648  0B50                     __ptext43:	
  6649 ;; *************** function i1_I2C_IdleCheck *****************
  6650 ;; Defined at:
  6651 ;;		line 199 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  mask            1    wreg     unsigned char 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  mask            1    1[COMMON] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;		None               void
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6665 ;;      Params:         0       0       0       0       0       0
  6666 ;;      Locals:         1       0       0       0       0       0
  6667 ;;      Temps:          1       0       0       0       0       0
  6668 ;;      Totals:         2       0       0       0       0       0
  6669 ;;Total ram usage:        2 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		i1_I2C_Start
  6675 ;;		i1_I2C_Stop
  6676 ;;		i1_I2C_Send
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           
  6681                           ;psect for function i1_I2C_IdleCheck
  6682  0B50                     i1_I2C_IdleCheck:	
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in i1_I2C_IdleCheck: [wreg+status,2+status,0]
  6686                           ;i1I2C_IdleCheck@mask stored from wreg
  6687  0B50  00F1               	movwf	i1I2C_IdleCheck@mask
  6688  0B51                     i1l1907:	
  6689                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  6690                           
  6691  0B51  0871               	movf	i1I2C_IdleCheck@mask,w
  6692  0B52  0024               	movlb	4	; select bank4
  6693  0B53  0514               	andwf	20,w	;volatile
  6694  0B54  00F0               	movwf	??i1_I2C_IdleCheck
  6695  0B55  0816               	movf	22,w	;volatile
  6696  0B56  391F               	andlw	31
  6697  0B57  0470               	iorwf	??i1_I2C_IdleCheck,w
  6698  0B58  1903               	btfsc	3,2
  6699  0B59  0008               	return
  6700  0B5A  2B51               	goto	i1l1907
  6701  0B5B                     __end_ofi1_I2C_IdleCheck:	
  6702                           
  6703                           	psect	text44
  6704  0548                     __ptext44:	
  6705 ;; *************** function _button_timer_interrupt *****************
  6706 ;; Defined at:
  6707 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  bt              1    wreg     PTR struct button
  6710 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6711 ;;  sw_value        1    0[COMMON] unsigned char 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  bt              1    3[COMMON] PTR struct button
  6714 ;;		 -> sw_RA5(3), sw_RA4(3), sw_RA3(3), 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6724 ;;      Params:         1       0       0       0       0       0
  6725 ;;      Locals:         1       0       0       0       0       0
  6726 ;;      Temps:          2       0       0       0       0       0
  6727 ;;      Totals:         4       0       0       0       0       0
  6728 ;;Total ram usage:        4 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_isr
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           
  6738                           ;psect for function _button_timer_interrupt
  6739  0548                     _button_timer_interrupt:	
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6743                           ;button_timer_interrupt@bt stored from wreg
  6744  0548  00F3               	movwf	button_timer_interrupt@bt
  6745                           
  6746                           ;My_header_16F.h: 88: if (sw_value) {
  6747  0549  0870               	movf	button_timer_interrupt@sw_value,w
  6748  054A  1903               	btfsc	3,2
  6749  054B  2DA3               	goto	i1l2273
  6750                           
  6751                           ;My_header_16F.h: 89: if (bt->cnt_sw < 150 + 1) bt->cnt_sw++;
  6752  054C  0873               	movf	button_timer_interrupt@bt,w
  6753  054D  0086               	movwf	6
  6754  054E  0187               	clrf	7
  6755  054F  3F40               	moviw [0]fsr1
  6756  0550  00F1               	movwf	??_button_timer_interrupt
  6757  0551  3F41               	moviw [1]fsr1
  6758  0552  00F2               	movwf	??_button_timer_interrupt+1
  6759  0553  3000               	movlw	0
  6760  0554  0272               	subwf	??_button_timer_interrupt+1,w
  6761  0555  3097               	movlw	151
  6762  0556  1903               	skipnz
  6763  0557  0271               	subwf	??_button_timer_interrupt,w
  6764  0558  1803               	skipnc
  6765  0559  2D62               	goto	i1l2263
  6766  055A  0873               	movf	button_timer_interrupt@bt,w
  6767  055B  0086               	movwf	6
  6768  055C  0187               	clrf	7
  6769  055D  3001               	movlw	1
  6770  055E  0781               	addwf	1,f
  6771  055F  3141               	addfsr 1,1
  6772  0560  1803               	skipnc
  6773  0561  0A81               	incf	1,f
  6774  0562                     i1l2263:	
  6775                           
  6776                           ;My_header_16F.h: 90: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  6777  0562  0873               	movf	button_timer_interrupt@bt,w
  6778  0563  0086               	movwf	6
  6779  0564  0187               	clrf	7
  6780  0565  3F40               	moviw [0]fsr1
  6781  0566  3A96               	xorlw	150
  6782  0567  1D03               	skipz
  6783  0568  2D6B               	goto	u225_25
  6784  0569  3F41               	moviw [1]fsr1
  6785  056A  3A00               	xorlw	0
  6786  056B                     u225_25:	
  6787  056B  1D03               	skipz
  6788  056C  2D72               	goto	i1l121
  6789  056D  0873               	movf	button_timer_interrupt@bt,w
  6790  056E  3E02               	addlw	2
  6791  056F  0086               	movwf	6
  6792  0570  0187               	clrf	7
  6793  0571  1781               	bsf	1,7
  6794  0572                     i1l121:	
  6795                           
  6796                           ;My_header_16F.h: 91: if (bt->cnt_sw == 75)bt->flag.long_holding_2 = 1;
  6797  0572  0873               	movf	button_timer_interrupt@bt,w
  6798  0573  0086               	movwf	6
  6799  0574  0187               	clrf	7
  6800  0575  3F40               	moviw [0]fsr1
  6801  0576  3A4B               	xorlw	75
  6802  0577  1D03               	skipz
  6803  0578  2D7B               	goto	u226_25
  6804  0579  3F41               	moviw [1]fsr1
  6805  057A  3A00               	xorlw	0
  6806  057B                     u226_25:	
  6807  057B  1D03               	skipz
  6808  057C  2D82               	goto	i1l122
  6809  057D  0873               	movf	button_timer_interrupt@bt,w
  6810  057E  3E02               	addlw	2
  6811  057F  0086               	movwf	6
  6812  0580  0187               	clrf	7
  6813  0581  1701               	bsf	1,6
  6814  0582                     i1l122:	
  6815                           
  6816                           ;My_header_16F.h: 92: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  6817  0582  0873               	movf	button_timer_interrupt@bt,w
  6818  0583  0086               	movwf	6
  6819  0584  0187               	clrf	7
  6820  0585  3F40               	moviw [0]fsr1
  6821  0586  3A1E               	xorlw	30
  6822  0587  1D03               	skipz
  6823  0588  2D8B               	goto	u227_25
  6824  0589  3F41               	moviw [1]fsr1
  6825  058A  3A00               	xorlw	0
  6826  058B                     u227_25:	
  6827  058B  1D03               	skipz
  6828  058C  2D92               	goto	i1l123
  6829  058D  0873               	movf	button_timer_interrupt@bt,w
  6830  058E  3E02               	addlw	2
  6831  058F  0086               	movwf	6
  6832  0590  0187               	clrf	7
  6833  0591  1681               	bsf	1,5
  6834  0592                     i1l123:	
  6835                           
  6836                           ;My_header_16F.h: 93: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  6837  0592  0873               	movf	button_timer_interrupt@bt,w
  6838  0593  0086               	movwf	6
  6839  0594  0187               	clrf	7
  6840  0595  3F40               	moviw [0]fsr1
  6841  0596  3A02               	xorlw	2
  6842  0597  1D03               	skipz
  6843  0598  2D9B               	goto	u228_25
  6844  0599  3F41               	moviw [1]fsr1
  6845  059A  3A00               	xorlw	0
  6846  059B                     u228_25:	
  6847  059B  1D03               	skipz
  6848  059C  0008               	return
  6849  059D  0873               	movf	button_timer_interrupt@bt,w
  6850  059E  3E02               	addlw	2
  6851  059F  0086               	movwf	6
  6852  05A0  0187               	clrf	7
  6853  05A1  1601               	bsf	1,4
  6854                           
  6855                           ;My_header_16F.h: 94: } else {
  6856  05A2  0008               	return
  6857  05A3                     i1l2273:	
  6858                           
  6859                           ;My_header_16F.h: 95: if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  6860  05A3  0873               	movf	button_timer_interrupt@bt,w
  6861  05A4  0086               	movwf	6
  6862  05A5  0187               	clrf	7
  6863  05A6  3F40               	moviw [0]fsr1
  6864  05A7  00F1               	movwf	??_button_timer_interrupt
  6865  05A8  3F41               	moviw [1]fsr1
  6866  05A9  00F2               	movwf	??_button_timer_interrupt+1
  6867  05AA  3000               	movlw	0
  6868  05AB  0272               	subwf	??_button_timer_interrupt+1,w
  6869  05AC  3096               	movlw	150
  6870  05AD  1903               	skipnz
  6871  05AE  0271               	subwf	??_button_timer_interrupt,w
  6872  05AF  1C03               	skipc
  6873  05B0  2DB7               	goto	i1l2277
  6874  05B1  0873               	movf	button_timer_interrupt@bt,w
  6875  05B2  3E02               	addlw	2
  6876  05B3  0086               	movwf	6
  6877  05B4  0187               	clrf	7
  6878  05B5  1581               	bsf	1,3
  6879  05B6  2DF2               	goto	i1l127
  6880  05B7                     i1l2277:	
  6881                           
  6882                           ;My_header_16F.h: 96: else if (bt->cnt_sw >= 75)bt->flag.long_hold_2 = 1;
  6883  05B7  0873               	movf	button_timer_interrupt@bt,w
  6884  05B8  0086               	movwf	6
  6885  05B9  0187               	clrf	7
  6886  05BA  3F40               	moviw [0]fsr1
  6887  05BB  00F1               	movwf	??_button_timer_interrupt
  6888  05BC  3F41               	moviw [1]fsr1
  6889  05BD  00F2               	movwf	??_button_timer_interrupt+1
  6890  05BE  3000               	movlw	0
  6891  05BF  0272               	subwf	??_button_timer_interrupt+1,w
  6892  05C0  304B               	movlw	75
  6893  05C1  1903               	skipnz
  6894  05C2  0271               	subwf	??_button_timer_interrupt,w
  6895  05C3  1C03               	skipc
  6896  05C4  2DCB               	goto	i1l2281
  6897  05C5  0873               	movf	button_timer_interrupt@bt,w
  6898  05C6  3E02               	addlw	2
  6899  05C7  0086               	movwf	6
  6900  05C8  0187               	clrf	7
  6901  05C9  1501               	bsf	1,2
  6902  05CA  2DF2               	goto	i1l127
  6903  05CB                     i1l2281:	
  6904                           
  6905                           ;My_header_16F.h: 97: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  6906  05CB  0873               	movf	button_timer_interrupt@bt,w
  6907  05CC  0086               	movwf	6
  6908  05CD  0187               	clrf	7
  6909  05CE  3F40               	moviw [0]fsr1
  6910  05CF  00F1               	movwf	??_button_timer_interrupt
  6911  05D0  3F41               	moviw [1]fsr1
  6912  05D1  00F2               	movwf	??_button_timer_interrupt+1
  6913  05D2  3000               	movlw	0
  6914  05D3  0272               	subwf	??_button_timer_interrupt+1,w
  6915  05D4  301E               	movlw	30
  6916  05D5  1903               	skipnz
  6917  05D6  0271               	subwf	??_button_timer_interrupt,w
  6918  05D7  1C03               	skipc
  6919  05D8  2DDF               	goto	i1l2285
  6920  05D9  0873               	movf	button_timer_interrupt@bt,w
  6921  05DA  3E02               	addlw	2
  6922  05DB  0086               	movwf	6
  6923  05DC  0187               	clrf	7
  6924  05DD  1481               	bsf	1,1
  6925  05DE  2DF2               	goto	i1l127
  6926  05DF                     i1l2285:	
  6927                           
  6928                           ;My_header_16F.h: 98: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  6929  05DF  0873               	movf	button_timer_interrupt@bt,w
  6930  05E0  0086               	movwf	6
  6931  05E1  0187               	clrf	7
  6932  05E2  3F40               	moviw [0]fsr1
  6933  05E3  00F1               	movwf	??_button_timer_interrupt
  6934  05E4  3F41               	moviw [1]fsr1
  6935  05E5  00F2               	movwf	??_button_timer_interrupt+1
  6936  05E6  3000               	movlw	0
  6937  05E7  0272               	subwf	??_button_timer_interrupt+1,w
  6938  05E8  3002               	movlw	2
  6939  05E9  1903               	skipnz
  6940  05EA  0271               	subwf	??_button_timer_interrupt,w
  6941  05EB  1C03               	skipc
  6942  05EC  2DF2               	goto	i1l127
  6943  05ED  0873               	movf	button_timer_interrupt@bt,w
  6944  05EE  3E02               	addlw	2
  6945  05EF  0086               	movwf	6
  6946  05F0  0187               	clrf	7
  6947  05F1  1401               	bsf	1,0
  6948  05F2                     i1l127:	
  6949                           
  6950                           ;My_header_16F.h: 99: bt->cnt_sw = 0;
  6951  05F2  0873               	movf	button_timer_interrupt@bt,w
  6952  05F3  0086               	movwf	6
  6953  05F4  0187               	clrf	7
  6954  05F5  3000               	movlw	0
  6955  05F6  3FC0               	movwi [0]fsr1
  6956  05F7  3FC1               	movwi [1]fsr1
  6957                           
  6958                           ;My_header_16F.h: 100: bt->flags &= 0x0F;
  6959  05F8  300F               	movlw	15
  6960  05F9  00F1               	movwf	??_button_timer_interrupt
  6961  05FA  0873               	movf	button_timer_interrupt@bt,w
  6962  05FB  3E02               	addlw	2
  6963  05FC  0086               	movwf	6
  6964  05FD  0187               	clrf	7
  6965  05FE  0871               	movf	??_button_timer_interrupt,w
  6966  05FF  0581               	andwf	1,f
  6967  0600  0008               	return
  6968  0601                     __end_of_button_timer_interrupt:	
  6969                           
  6970                           	psect	text45
  6971  0C3C                     __ptext45:	
  6972 ;; *************** function _adc *****************
  6973 ;; Defined at:
  6974 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  ch              1    wreg     unsigned char 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  ch              1    3[COMMON] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  2    0[COMMON] unsigned int 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6988 ;;      Params:         2       0       0       0       0       0
  6989 ;;      Locals:         1       0       0       0       0       0
  6990 ;;      Temps:          1       0       0       0       0       0
  6991 ;;      Totals:         4       0       0       0       0       0
  6992 ;;Total ram usage:        4 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_isr
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           
  7002                           ;psect for function _adc
  7003  0C3C                     _adc:	
  7004                           
  7005                           ;incstack = 0
  7006                           ; Regs used in _adc: [wreg+status,2+status,0]
  7007                           ;adc@ch stored from wreg
  7008  0C3C  00F3               	movwf	adc@ch
  7009                           
  7010                           ;My_header_16F.h: 52: ADCON0bits.ADON = 1;
  7011  0C3D  0021               	movlb	1	; select bank1
  7012  0C3E  141D               	bsf	29,0	;volatile
  7013                           
  7014                           ;My_header_16F.h: 53: ADCON0bits.CHS = ch;
  7015  0C3F  0873               	movf	adc@ch,w
  7016  0C40  00F2               	movwf	??_adc
  7017  0C41  0DF2               	rlf	??_adc,f
  7018  0C42  0DF2               	rlf	??_adc,f
  7019  0C43  081D               	movf	29,w	;volatile
  7020  0C44  0672               	xorwf	??_adc,w
  7021  0C45  3983               	andlw	-125
  7022  0C46  0672               	xorwf	??_adc,w
  7023  0C47  009D               	movwf	29	;volatile
  7024                           
  7025                           ;My_header_16F.h: 54: _delay((unsigned long)((20)*(32000000/4000000.0)));
  7026  0C48  3035               	movlw	53
  7027  0C49  00F2               	movwf	??_adc
  7028  0C4A                     u399_27:	
  7029  0C4A  0BF2               	decfsz	??_adc,f
  7030  0C4B  2C4A               	goto	u399_27
  7031                           
  7032                           ;My_header_16F.h: 55: ADCON0bits.GO_nDONE = 1;
  7033  0C4C  0021               	movlb	1	; select bank1
  7034  0C4D  149D               	bsf	29,1	;volatile
  7035  0C4E                     i1l113:	
  7036                           ;My_header_16F.h: 56: while (ADCON0bits.GO_nDONE);
  7037                           
  7038  0C4E  189D               	btfsc	29,1	;volatile
  7039  0C4F  2C4E               	goto	i1l113
  7040                           
  7041                           ;My_header_16F.h: 57: return ADRES;
  7042  0C50  081C               	movf	28,w	;volatile
  7043  0C51  01F1               	clrf	?_adc+1
  7044  0C52  07F1               	addwf	?_adc+1,f
  7045  0C53  081B               	movf	27,w	;volatile
  7046  0C54  01F0               	clrf	?_adc
  7047  0C55  07F0               	addwf	?_adc,f
  7048  0C56  0008               	return
  7049  0C57                     __end_of_adc:	
  7050                           
  7051                           	psect	text46
  7052  0CC6                     __ptext46:	
  7053 ;; *************** function ___wmul *****************
  7054 ;; Defined at:
  7055 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  multiplier      2    4[COMMON] unsigned int 
  7058 ;;  multiplicand    2    6[COMMON] unsigned int 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  product         2    8[COMMON] unsigned int 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  2    4[COMMON] unsigned int 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7070 ;;      Params:         4       0       0       0       0       0
  7071 ;;      Locals:         2       0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0
  7073 ;;      Totals:         6       0       0       0       0       0
  7074 ;;Total ram usage:        6 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_isr
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           
  7084                           ;psect for function ___wmul
  7085  0CC6                     ___wmul:	
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7089  0CC6  01F8               	clrf	___wmul@product
  7090  0CC7  01F9               	clrf	___wmul@product+1
  7091  0CC8                     i1l2517:	
  7092  0CC8  1C74               	btfss	___wmul@multiplier,0
  7093  0CC9  2CCE               	goto	i1l502
  7094  0CCA  0876               	movf	___wmul@multiplicand,w
  7095  0CCB  07F8               	addwf	___wmul@product,f
  7096  0CCC  0877               	movf	___wmul@multiplicand+1,w
  7097  0CCD  3DF9               	addwfc	___wmul@product+1,f
  7098  0CCE                     i1l502:	
  7099  0CCE  3001               	movlw	1
  7100  0CCF                     u254_25:	
  7101  0CCF  35F6               	lslf	___wmul@multiplicand,f
  7102  0CD0  0DF7               	rlf	___wmul@multiplicand+1,f
  7103  0CD1  0B89               	decfsz	9,f
  7104  0CD2  2CCF               	goto	u254_25
  7105  0CD3  3001               	movlw	1
  7106  0CD4                     u255_25:	
  7107  0CD4  36F5               	lsrf	___wmul@multiplier+1,f
  7108  0CD5  0CF4               	rrf	___wmul@multiplier,f
  7109  0CD6  0B89               	decfsz	9,f
  7110  0CD7  2CD4               	goto	u255_25
  7111  0CD8  0875               	movf	___wmul@multiplier+1,w
  7112  0CD9  0474               	iorwf	___wmul@multiplier,w
  7113  0CDA  1D03               	skipz
  7114  0CDB  2CC8               	goto	i1l2517
  7115  0CDC  0879               	movf	___wmul@product+1,w
  7116  0CDD  01F5               	clrf	?___wmul+1
  7117  0CDE  07F5               	addwf	?___wmul+1,f
  7118  0CDF  0878               	movf	___wmul@product,w
  7119  0CE0  01F4               	clrf	?___wmul
  7120  0CE1  07F4               	addwf	?___wmul,f
  7121  0CE2  0008               	return
  7122  0CE3                     __end_of___wmul:	
  7123                           
  7124                           	psect	text47
  7125  0FAE                     __ptext47:	
  7126 ;; *************** function ___lldiv *****************
  7127 ;; Defined at:
  7128 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  divisor         4    0[COMMON] unsigned long 
  7131 ;;  dividend        4    4[COMMON] unsigned long 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  quotient        4    9[COMMON] unsigned long 
  7134 ;;  counter         1   13[COMMON] unsigned char 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  4    0[COMMON] unsigned long 
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7144 ;;      Params:         8       0       0       0       0       0
  7145 ;;      Locals:         5       0       0       0       0       0
  7146 ;;      Temps:          1       0       0       0       0       0
  7147 ;;      Totals:        14       0       0       0       0       0
  7148 ;;Total ram usage:       14 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_isr
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function ___lldiv
  7159  0FAE                     ___lldiv:	
  7160                           
  7161                           ;incstack = 0
  7162                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7163  0FAE  3000               	movlw	0
  7164  0FAF  00FC               	movwf	___lldiv@quotient+3
  7165  0FB0  3000               	movlw	0
  7166  0FB1  00FB               	movwf	___lldiv@quotient+2
  7167  0FB2  3000               	movlw	0
  7168  0FB3  00FA               	movwf	___lldiv@quotient+1
  7169  0FB4  3000               	movlw	0
  7170  0FB5  00F9               	movwf	___lldiv@quotient
  7171  0FB6  0873               	movf	___lldiv@divisor+3,w
  7172  0FB7  0472               	iorwf	___lldiv@divisor+2,w
  7173  0FB8  0471               	iorwf	___lldiv@divisor+1,w
  7174  0FB9  0470               	iorwf	___lldiv@divisor,w
  7175  0FBA  1903               	skipnz
  7176  0FBB  2FF7               	goto	i1l2561
  7177  0FBC  01FD               	clrf	___lldiv@counter
  7178  0FBD  0AFD               	incf	___lldiv@counter,f
  7179  0FBE                     i1l2547:	
  7180  0FBE  1BF3               	btfsc	___lldiv@divisor+3,7
  7181  0FBF  2FCC               	goto	i1l2549
  7182  0FC0  3001               	movlw	1
  7183  0FC1                     u262_25:	
  7184  0FC1  35F0               	lslf	___lldiv@divisor,f
  7185  0FC2  0DF1               	rlf	___lldiv@divisor+1,f
  7186  0FC3  0DF2               	rlf	___lldiv@divisor+2,f
  7187  0FC4  0DF3               	rlf	___lldiv@divisor+3,f
  7188  0FC5  0B89               	decfsz	9,f
  7189  0FC6  2FC1               	goto	u262_25
  7190  0FC7  3001               	movlw	1
  7191  0FC8  00F8               	movwf	??___lldiv
  7192  0FC9  0878               	movf	??___lldiv,w
  7193  0FCA  07FD               	addwf	___lldiv@counter,f
  7194  0FCB  2FBE               	goto	i1l2547
  7195  0FCC                     i1l2549:	
  7196  0FCC  3001               	movlw	1
  7197  0FCD                     u264_25:	
  7198  0FCD  35F9               	lslf	___lldiv@quotient,f
  7199  0FCE  0DFA               	rlf	___lldiv@quotient+1,f
  7200  0FCF  0DFB               	rlf	___lldiv@quotient+2,f
  7201  0FD0  0DFC               	rlf	___lldiv@quotient+3,f
  7202  0FD1  0B89               	decfsz	9,f
  7203  0FD2  2FCD               	goto	u264_25
  7204  0FD3  0873               	movf	___lldiv@divisor+3,w
  7205  0FD4  0277               	subwf	___lldiv@dividend+3,w
  7206  0FD5  1D03               	skipz
  7207  0FD6  2FE1               	goto	u265_25
  7208  0FD7  0872               	movf	___lldiv@divisor+2,w
  7209  0FD8  0276               	subwf	___lldiv@dividend+2,w
  7210  0FD9  1D03               	skipz
  7211  0FDA  2FE1               	goto	u265_25
  7212  0FDB  0871               	movf	___lldiv@divisor+1,w
  7213  0FDC  0275               	subwf	___lldiv@dividend+1,w
  7214  0FDD  1D03               	skipz
  7215  0FDE  2FE1               	goto	u265_25
  7216  0FDF  0870               	movf	___lldiv@divisor,w
  7217  0FE0  0274               	subwf	___lldiv@dividend,w
  7218  0FE1                     u265_25:	
  7219  0FE1  1C03               	skipc
  7220  0FE2  2FEC               	goto	i1l2557
  7221  0FE3  0870               	movf	___lldiv@divisor,w
  7222  0FE4  02F4               	subwf	___lldiv@dividend,f
  7223  0FE5  0871               	movf	___lldiv@divisor+1,w
  7224  0FE6  3BF5               	subwfb	___lldiv@dividend+1,f
  7225  0FE7  0872               	movf	___lldiv@divisor+2,w
  7226  0FE8  3BF6               	subwfb	___lldiv@dividend+2,f
  7227  0FE9  0873               	movf	___lldiv@divisor+3,w
  7228  0FEA  3BF7               	subwfb	___lldiv@dividend+3,f
  7229  0FEB  1479               	bsf	___lldiv@quotient,0
  7230  0FEC                     i1l2557:	
  7231  0FEC  3001               	movlw	1
  7232  0FED                     u266_25:	
  7233  0FED  36F3               	lsrf	___lldiv@divisor+3,f
  7234  0FEE  0CF2               	rrf	___lldiv@divisor+2,f
  7235  0FEF  0CF1               	rrf	___lldiv@divisor+1,f
  7236  0FF0  0CF0               	rrf	___lldiv@divisor,f
  7237  0FF1  0B89               	decfsz	9,f
  7238  0FF2  2FED               	goto	u266_25
  7239  0FF3  3001               	movlw	1
  7240  0FF4  02FD               	subwf	___lldiv@counter,f
  7241  0FF5  1D03               	btfss	3,2
  7242  0FF6  2FCC               	goto	i1l2549
  7243  0FF7                     i1l2561:	
  7244  0FF7  087C               	movf	___lldiv@quotient+3,w
  7245  0FF8  00F3               	movwf	?___lldiv+3
  7246  0FF9  087B               	movf	___lldiv@quotient+2,w
  7247  0FFA  00F2               	movwf	?___lldiv+2
  7248  0FFB  087A               	movf	___lldiv@quotient+1,w
  7249  0FFC  00F1               	movwf	?___lldiv+1
  7250  0FFD  0879               	movf	___lldiv@quotient,w
  7251  0FFE  00F0               	movwf	?___lldiv
  7252  0FFF  0008               	return
  7253  1000                     __end_of___lldiv:	
  7254  007E                     btemp	set	126	;btemp
  7255  007E                     pic14e$flags	set	126
  7256  007E                     wtemp	set	126
  7257  007E                     wtemp0	set	126
  7258  0080                     wtemp1	set	128
  7259  0082                     wtemp2	set	130
  7260  0084                     wtemp3	set	132
  7261  0086                     wtemp4	set	134
  7262  0088                     wtemp5	set	136
  7263  007F                     wtemp6	set	127
  7264  007E                     ttemp	set	126
  7265  007E                     ttemp0	set	126
  7266  0081                     ttemp1	set	129
  7267  0084                     ttemp2	set	132
  7268  0087                     ttemp3	set	135
  7269  007F                     ttemp4	set	127
  7270  007E                     ltemp	set	126
  7271  007E                     ltemp0	set	126
  7272  0082                     ltemp1	set	130
  7273  0086                     ltemp2	set	134
  7274  0080                     ltemp3	set	128


Data Sizes:
    Strings     45
    Constant    0
    Data        2
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      56
    BANK1            80     24      49
    BANK2            80     51      63
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[8]), 
		 -> STR_1(CODE[7]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@ringbuf(BANK2[50]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK1[4]), 

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_RA5(BANK0[3]), sw_RA4(BANK0[3]), sw_RA3(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lldiv
    _lchika->___lwdiv
    _display->___lwdiv
    i1_LCD_Clear->i1_LCD_Command
    ___lwdiv->___lwmod
    ___aldiv->___almod
    _LCD_SetCursor->i1_LCD_Command
    i1_LCD_Command->i1_I2C_Start
    _LCD_Puts->i1_I2C_Start
    _LCD_Putc->i1_I2C_Start
    i1_I2C_Stop->i1_I2C_IdleCheck
    i1_I2C_Start->i1_I2C_IdleCheck
    i1_I2C_Send->i1_I2C_IdleCheck
    ___wmul->_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_display
    _display->___aldiv

Critical Paths under _main in BANK1

    _main->___lmul
    _main_init->_LCD_init
    _LCD_init->_LCD_Clear
    _LCD_Clear->_LCD_Command
    _LCD_Command->_I2C_Start
    _EEP_Writes->_I2C_Start
    _EEP_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0   11818
                                             12 BANK1     12    12      0
                                              0 BANK2     51    51      0
                           _EEP_Read
                         _EEP_Writes
                                _LED
                                _OUT
                             ___lmul
                         _flag_clear
                          _flag_read
                          _main_init
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     463
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2805
                           _I2C_init
                           _LCD_init
                           _adc_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             3     3      0    2650
                                              9 BANK1      3     3      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            2     2      0    1325
                                              7 BANK1      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0    1325
                                              4 BANK1      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_read                                            2     1      1     644
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _flag_clear                                           3     2      1     540
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     344
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     609
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1    1163
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEP_Writes                                           6     3      3    1730
                                              4 BANK1      6     3      3
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _EEP_Read                                             5     4      1    2445
                                              6 BANK1      5     4      1
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     717
                                              2 BANK1      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1167
                                              2 BANK1      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK1      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      96
                                              2 BANK1      3     3      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  9     9      0   12394
                                             18 BANK0      9     9      0
                            ___lldiv
                             ___wmul
                                _adc
             _button_timer_interrupt
                            _display
                             _lchika
                        _ringbuf_num
                        _ringbuf_pop
                              i1_OUT
 ---------------------------------------------------------------------------------
 (8) i1_OUT                                                2     1      1     114
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          4     4      0     358
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          2     2      0     280
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _lchika                                               5     5      0    2340
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___lwdiv
                              i1_LED
 ---------------------------------------------------------------------------------
 (9) i1_LED                                                2     1      1     166
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     478
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) _display                                              4     3      1    7120
                                             14 BANK0      4     3      1
                           _LCD_Putc
                           _LCD_Puts
                      _LCD_SetCursor
                            ___aldiv
                            ___almod
                            ___lwdiv
                            ___lwmod
                        i1_LCD_Clear
 ---------------------------------------------------------------------------------
 (9) i1_LCD_Clear                                          2     2      0     255
                                              7 COMMON     2     2      0
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4    1583
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4    1408
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___almod                                             11     3      8     474
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (9) ___aldiv                                             15     7      8     478
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _LCD_SetCursor                                        4     3      1     857
                                              7 COMMON     4     3      1
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i1_LCD_Command                                       3     3      0     255
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Puts                                             6     4      2    1435
                                              4 COMMON     6     4      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _LCD_Putc                                             3     3      0     255
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Stop                                          0     0      0      22
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Start                                         2     1      1     144
                                              2 COMMON     2     1      1
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Send                                          1     1      0      44
                                              2 COMMON     1     1      0
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i1_I2C_IdleCheck                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               4     3      1     918
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _adc                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     270
                                              4 COMMON     6     2      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     340
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _EEP_Writes
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _LED
   _OUT
   ___lmul
   _flag_clear
   _flag_read
   _main_init
     _I2C_init
     _LCD_init
       _LCD_Clear
         _LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _adc_init
     _timer0_init
     _timer1_init
   _ringbuf_init

 _isr (ROOT)
   ___lldiv
   ___wmul
     _adc (ARG)
   _adc
   _button_timer_interrupt
   _display
     _LCD_Putc
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_Puts
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _LCD_SetCursor
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
     ___aldiv
       ___almod (ARG)
     ___almod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     i1_LCD_Clear
       i1_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
   _lchika
     ___awdiv
     ___lwdiv
       ___lwmod (ARG)
     i1_LED
   _ringbuf_num
   _ringbuf_pop
   i1_OUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     18      31       8       61.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     33      3F      10       78.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      B6      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 12 20:01:17 2015

                  EEP_Writes@ans 00C2                  EEP_Writes@Reg_h 00C1                  EEP_Writes@Reg_l 00BD  
                              _s 0020                                _v 0026               __size_of_I2C_Start 001C  
                    __CFG_CP$OFF 0000                     ?_LCD_Command 0070                     ___awdiv@sign 0076  
                             _sp 0159                               _ss 00A0              ___wmul@multiplicand 0076  
               EEP_Writes@data_0 00BE                 EEP_Writes@data_1 00BF                    _LCD_SetCursor 0BA2  
                    ?i1_I2C_Send 0070                      ?i1_I2C_Stop 0070                              l101 0BE2  
                            l203 0BC0                              l212 0D3A                              l404 0441  
                            l271 0E22                              l360 0E5F                              l194 0C33  
                            l266 0F88                              l370 0E80                              l267 0FA3  
                            l363 0E62                              l188 0CBD                              l364 0E68  
                            l374 0DB3                              l366 0E6B                              l367 0E71  
                            l359 0E59                              l376 0DBB                              l377 0DC3  
                            l379 0DD7                              l397 0D89                              _GIE 005F  
                            _RA3 0063                              _RA4 0064                              _LED 0DB0  
                            _RA5 0065                     __CFG_CPD$OFF 0000                              _OUT 0E56  
                            _adc 0C3C                              _cnt 00AF                              _cut 0153  
                            _isr 0004              __size_of_I2C_rStart 001A             __size_of_I2C_Receive 0020  
                   __CFG_BORV$LO 0000                              wreg 0009                flag_clear@bit_and 00B9  
                   __CFG_LVP$OFF 0000                             LED@b 00BA                             ?_LED 00B9  
                           ?_OUT 00B9                     ?i1_I2C_Start 0072                             ?_adc 0070  
                           l3031 0E74                             l3041 0D06                             l3037 0DCB  
                           l3053 0D15                             l3045 0D0B                             l3063 0D69  
                           l3071 0D7D                             l3303 03C7                             l3065 0D6F  
                           l3049 0D10                             l3321 046D                             l3067 0D76  
                           l3059 0D17                             l3333 049B                             l3309 0442  
                           l3095 0F14                             l3343 04BF                             l3327 0486  
                           l3361 0514                             l3353 04F6                             l3329 048C  
                           l3099 0F1E                             l3367 0541                             OUT@b 00BA  
                           l2843 0B76                             l2889 0BEB                             ?_isr 0070  
                           STR_1 0810                             STR_2 0808                             STR_3 081E  
                           STR_4 0817                             STR_5 0824                             STR_6 081E  
                           STR_7 0817                             STR_8 0824                             STR_9 0829  
                           u3320 0DB8                             u3340 0DC0                             u3405 0F26  
                           u3360 0DC8                             u3395 0F1F                             u3745 03F3  
                           u3907 07E5                             u3755 0410                             u3917 0B8C  
                           u3845 04D1                             u3765 0428                             u3927 0D40  
                           u3937 0E28                             u3947 0FA9                             u3887 03BB  
                           u3897 07BF                             _SPEN 0CEF                             _TXIE 048C  
                           _TXIF 008C                             _WPUB 020D                     __CFG_WRT$OFF 0000  
                           _cnt0 002C                             _cntf 00B2                             _main 037C  
       button_timer_interrupt@bt 0073               __size_of_LCD_Clear 000F                      main@ringbuf 0120  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
               __end_of_I2C_Send 0BC6                             btemp 007E                             isr@i 0055  
               __end_of_I2C_Stop 0B4A                             ltemp 007E                 __end_of_I2C_init 0B66  
                           start 0165                             ttemp 007E                             wtemp 007E  
                  __CFG_IESO$OFF 0000                            ??_LED 00BA                 __end_of_EEP_Read 0FAE  
         __size_of_I2C_IdleCheck 000F                            ??_OUT 00BA                            ??_adc 0072  
              ??i1_I2C_IdleCheck 0070                            ??_isr 004D                    __CFG_PLLEN$ON 0000  
               __end_of_LCD_Putc 0C8E                 __end_of_LCD_Puts 0F0B                   ?_LCD_SetCursor 0077  
               __end_of_LCD_init 07FB                     ?i1_LCD_Clear 0070                  __end_of___aldiv 0683  
                __end_of___almod 0765                            ?_main 0070                  __end_of___awdiv 07B8  
                          _ADRES 009B                            STR_10 081E                            STR_11 0817  
                          STR_12 0824                            STR_13 0800                      LCD_Putc@ans 0076  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                  __end_of___lldiv 1000  
                ___awdiv@divisor 0070                            _LATB0 0868                            _LATB3 086B  
                          _LATA6 0866                            _LATB5 086D                            _LATA7 0867  
                          _LATB6 086E                  __end_of___lwdiv 0F71                            i1l113 0C4E  
                          i1l121 0572                            i1l122 0582                            i1l123 0592  
                          i1l203 0B9C                            i1l212 0CA2                            i1l127 05F2  
                          i1l224 0C86                            i1l321 0161                            i1l306 0025  
                          i1l307 0023                            i1l309 00B5                            i1l502 0CCE  
                          i1l360 0DE0                  __end_of___lwmod 0EDC                            i1l370 0E00  
                          i1l355 037B                            i1l363 0DE3                            i1l188 0C19  
                          i1l364 0DE9                            i1l374 0D8C                            i1l366 0DEC  
                          i1l367 0DF2                            i1l359 0DDA                            i1l376 0D94  
                          i1l377 0D9C                            i1l570 0708                            i1l379 0DAF  
                          i1l557 0612                  ___awdiv@counter 0075                            i1_LED 0D8A  
                    LCD_Puts@ans 0078                            _RCSTA 019D                            i1_OUT 0DD8  
                          _TMR1H 0017                            _TMR1L 0016                            _TRISA 008C  
                          _TRISB 008D                            _TXREG 019A                            _TXSTA 019E  
            __size_of_EEP_Writes 002A              ___lmul@multiplicand 00BD                   __CFG_FCMEN$OFF 0000  
                __end_of_display 037C                            adc@ch 0073                            _cnt1s 002E  
                          main@i 0152                __end_of_I2C_Start 0CC6                   __CFG_BOREN$OFF 0000  
                   LCD_Command@c 00BE                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
            __size_ofi1_I2C_Send 0010              __size_ofi1_I2C_Stop 0006                   __CFG_MCLRE$OFF 0000  
                __initialization 0167                     __end_of_main 0548              ringbuf_init@bufsize 00BA  
                         ??_main 00C5                __end_of_LCD_Clear 0B92                           ?i1_LED 0070  
                         ?i1_OUT 0070                           _BCL1IF 0093                    _I2C_IdleCheck 0B74  
               ___awdiv@dividend 0072                           i1LED@b 0071                           _ANSELA 018C  
                         _ANSELB 018D              i1I2C_IdleCheck@mask 0071                 __end_of_adc_init 0BDB  
                         i1l2103 066C                           i1l2107 067A                           i1l2131 0743  
                         i1l2045 0EEF                           i1l2125 071D                           i1l2205 0F61  
                         i1l2221 0EB4                           i1l2047 0F08                           i1l2127 072B  
                         i1l2135 074E                           i1l2119 0715                           i1l2223 0EC0  
                         i1l2231 0ED5                           i1l2151 076F                           i1l2081 0623  
                         i1l2209 0F6A                           i1l2091 0641                           i1l2139 075C  
                         i1l2227 0ECC                           i1l2403 01AE                           i1l2411 01C6  
                         i1l2243 0DA4                           i1l2405 01B6                           i1l2413 01D2  
                         u200_25 07A1                           i1l2157 077A                           i1l2325 0E44  
                         i1l2263 0562                           i1l2423 025B                           i1l2431 0273  
                         i1l2407 01BE                           i1l2183 07B1                           i1l2175 07A0  
                         i1l2167 0782                           i1l2281 05CB                           i1l2273 05A3  
                         i1l2089 0633                           i1l2441 034B                           i1l2425 0263  
                         i1l2433 027F                           i1l2169 078E                           i1l2099 0661  
                         i1l2427 026B                           i1l2179 07A9                           i1l2517 0CC8  
                         i1l2285 05DF                           i1l2277 05B7                           i1l2197 0F43  
                         i1l2437 033B                           i1l2445 0353                           i1l2453 036C  
                         i1l2381 06D7                           i1l3253 00D2                           i1l3237 00A3  
                         i1l3229 0052                           i1l2199 0F4F                           i1l2439 0343  
                         i1l2447 035F                           i1l2375 069D                           i1l3263 00E6  
                         i1l3239 00AC                           i1l2561 0FF7                           i1l3273 0159  
                         i1l2547 0FBE                           i1l1907 0B51                           i1l2557 0FEC  
                         i1l2549 0FCC                           i1l2397 0195                           i1l2389 06F2  
                         i1l2575 0DF5                           i1OUT@b 0071                           u211_25 0EB7  
                         u220_20 0DA1                           u204_25 0F46                           i1l2993 0EAC  
                         u213_25 0EC6                           u206_25 0F50                           u214_25 0ECD  
                         u207_25 0F5A                           u216_20 0D91                           u208_25 0F62  
                         u225_25 056B                           u218_20 0D99                           u226_25 057B  
                         _FVRCON 0117                           u227_25 058B                           u228_25 059B  
                         u180_25 0656                           u244_25 06CB                           u181_25 0662  
                         u262_25 0FC1                           u254_25 0CCF                           u190_25 0744  
                         u255_25 0CD4                           u264_25 0FCD                           u265_25 0FE1  
                         u177_25 0636                           u266_25 0FED                           u370_25 0115  
                         u179_25 0642                           u187_25 0720                           u371_25 0144  
                         u196_25 0785                           u189_25 0739                           u198_25 078F  
                         u366_25 00C2                           u199_25 0799                           u367_25 00DD  
                         u369_25 00F7           __size_ofi1_LCD_Command 001C                           _OSCCON 0099  
                         u395_27 0B6E                           u396_27 0CA7                           u397_27 0F05  
                         u398_27 0C8B                           u399_27 0C4A                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IF 008B                   i1LCD_Command@c 0075  
                   ??_I2C_rStart 00BF                   __CFG_PWRTE$OFF 0000                     ?_ringbuf_pop 0070  
                   ?_ringbuf_num 0070                           ___lmul 0F0B                        ??___aldiv 007B  
                      ??___almod 0078                           ___wmul 0CC6                        ??___awdiv 0074  
                ??_LCD_SetCursor 0078                        ??___lldiv 0078                     ?_timer0_init 0070  
                   ?_timer1_init 0070                        ??___lwdiv 007A                        ??___lwmod 0074  
                         _lchika 0683                 ___awdiv@quotient 0077                           _sw_RA3 0032  
                         _sw_RA4 0035                           _sw_RA5 0038                           _tx_buf 00B5  
           __size_of_LCD_Command 0020                        ??_display 004A                        ?_I2C_Send 0070  
                      ?_I2C_Stop 0070                    i1I2C_Start@rw 0072                        ?_I2C_init 0070  
             __end_of_I2C_rStart 0C3C                   ?_I2C_IdleCheck 0070                        ?_EEP_Read 00BF  
           __size_ofi1_I2C_Start 001A          __end_of__initialization 0186                        ?_LCD_Putc 0070  
                      ?_LCD_Puts 0074                        ?_LCD_init 0070                     ??_EEP_Writes 00C0  
                  __end_ofi1_LED 0DB0                    __end_ofi1_OUT 0E01                   __pcstackCOMMON 0070  
                      LCD_Putc@c 0075                     __pidataBANK0 07FB                        LCD_Puts@s 0074  
                  i1_LCD_Command 0C8E                     ??i1_I2C_Send 0072                     ??i1_I2C_Stop 0072  
                        ??i1_LED 0071                          ??i1_OUT 0071               __size_of_flag_read 0020  
                 _OPTION_REGbits 0095                       ??_I2C_Send 00BB             __size_ofi1_LCD_Clear 000E  
                     ??_I2C_Stop 00BB                       ??_I2C_init 00B9               __end_of_EEP_Writes 0E2B  
             __size_of_main_init 0023                       __pbssBANK0 0020                       ??_EEP_Read 00C0  
                     __pbssBANK1 00A0                       __pbssBANK2 0153                  i1_I2C_IdleCheck 0B50  
                     ??_LCD_Putc 0074                       ??_LCD_Puts 0076                       ??_LCD_init 00C2  
             __end_ofi1_I2C_Send 0BA2               __end_ofi1_I2C_Stop 0B44                       __pmaintext 037C  
                        ?___lmul 00B9                          ?___wmul 0074                       __pintentry 0004  
                        ?_lchika 0070                   ?i1_LCD_Command 0070                       _flag_clear 0D66  
                 ___lmul@product 00C1                    ??_I2C_Receive 00BB                     I2C_Send@data 00BB  
                      ?_adc_init 0070                  ??_I2C_IdleCheck 00B9                          _SSP1ADD 0212  
                        _SSP1BUF 0211             timer1_init@prescaler 00BA         ??_button_timer_interrupt 0071  
                      _I2C_Start 0CAA                   I2C_Receive@ack 00BC                __end_of_flag_read 0D23  
                        ___aldiv 0601                          ___almod 06F8                    ?_ringbuf_init 00B9  
                        ___awdiv 0765                  __size_of___lmul 0030                          ___lldiv 0FAE  
                __size_of___wmul 001D                          ___lwdiv 0F3B                          ___lwmod 0EAE  
           __size_of_ringbuf_pop 002D             __size_of_ringbuf_num 002B                  __CFG_STVREN$OFF 0000  
       LCD_SetCursor@row_offsets 0078                  __size_of_lchika 0075                __end_of_main_init 0D66  
           __size_of_timer0_init 0015                       ??_adc_init 00B9             __size_of_timer1_init 0018  
                        __ptext1 0C57                          __ptext2 0D43                          __ptext3 0BF0  
                        __ptext4 0BDB                          __ptext5 0BC6                          __ptext6 07B8  
                        __ptext7 0B83                          __ptext8 0D23                          __ptext9 0B5B  
                        _display 018A                     __size_of_LED 0028                        _T1CONbits 0018  
                   __size_of_OUT 002B                   i1I2C_Send@data 0072                     __size_of_adc 001B  
                   __size_of_isr 0161                 ___aldiv@dividend 003F                        _LCD_Clear 0B83  
            __end_of_I2C_Receive 0D03          __end_ofi1_I2C_IdleCheck 0B5B                          clrloop0 0B4B  
                        lchika@i 003F             end_of_initialization 0186                 LCD_SetCursor@col 007A  
               LCD_SetCursor@row 0077                   LCD_Command@ans 00BF                       ?_I2C_Start 00BB  
                ___lldiv@divisor 0070                     I2C_rStart@rw 00BD                  ___lldiv@counter 007D  
                 ??_ringbuf_init 00BB                 ___aldiv@quotient 0045                  ??i1_LCD_Command 0074  
                   __pstringtext 0800                      ?_flag_clear 00B9                       _print_port 0031  
               __CFG_FOSC$INTOSC 0000                       ?_LCD_Clear 0070                __size_of_I2C_Send 0012  
              __size_of_I2C_Stop 0006                __size_of_I2C_init 000B  __size_of_button_timer_interrupt 00B9  
              __size_of_EEP_Read 003D                __size_of_LCD_Putc 001C                __size_of_LCD_Puts 002F  
              __size_of_LCD_init 0043                   ringbuf_init@rb 00BC                   ringbuf_pop@ret 0072  
                  ??_LCD_Command 00BD                   __end_of___lmul 0F3B                   __end_of___wmul 0CE3  
          __end_of_LCD_SetCursor 0BB4                   __end_of_lchika 06F8                      _I2C_Receive 0CE3  
            start_initialization 0167                      __end_of_LED 0DD8                      __end_of_OUT 0E81  
                    __end_of_adc 0C57                      __end_of_isr 0165                 ?i1_I2C_IdleCheck 0070  
                  ??i1_I2C_Start 0073              __size_of_flag_clear 0024                      ??_I2C_Start 00BC  
                       ??___lmul 00C1                         ??___wmul 0078                      __pdataBANK0 0056  
                       ??_lchika 003B           _button_timer_interrupt 0548                    ??i1_LCD_Clear 0077  
            __end_of_LCD_Command 0D43                __size_of_adc_init 0015                      _change_flag 00AC  
                      ___latbits 0001                         LED@value 00B9                    __pcstackBANK0 003B  
                  __pcstackBANK1 00B9                    __pcstackBANK2 0120                   flag_clear@port 00BB  
                    ??_LCD_Clear 00C0              __end_of__stringdata 082D             __end_of_ringbuf_init 0C72  
                  adc_init@p_ref 00B9              __end_ofi1_I2C_Start 0C22                 ___lwdiv@dividend 0078  
                       ?___aldiv 003B                         ?___almod 0070                         ?___awdiv 0070  
                      _flag_read 0D03                         ?___lldiv 0070                         ?___lwdiv 0076  
                       ?___lwmod 0070                 ___almod@dividend 0074                         ?_display 0049  
                 __size_ofi1_LED 0026                        _main_init 0D43                   __size_ofi1_OUT 0029  
                    I2C_Start@rw 00BB                         _I2C_Send 0BB4                         OUT@value 00B9  
                       _I2C_Stop 0B44                         _I2C_init 0B5B            __end_of_I2C_IdleCheck 0B83  
            __end_ofi1_LCD_Clear 0B74                 ___lwdiv@quotient 007B                         _EEP_Read 0F71  
                ___aldiv@divisor 003B         ringbuf_init@internal_buf 00B9                  ___aldiv@counter 0043  
                 ___wmul@product 0078                         _LCD_Putc 0C72                         _LCD_Puts 0EDC  
                       _LCD_init 07B8                        clear_ram0 0B4A                         _PIE1bits 0091  
                       _PIR1bits 0011                    ??_ringbuf_pop 0070                    ??_ringbuf_num 0070  
                       _SSP1CON1 0215                         _SSP1CON2 0216                    ??_timer0_init 00B9  
                  ??_timer1_init 00B9                       ?_flag_read 00B9                         _SSP1STAT 0214  
                    _LCD_Command 0D23                     ??_flag_clear 00BA                 i1LCD_Command@ans 0076  
                     _ADCON0bits 009D                       _ADCON1bits 009E                      __stringdata 0800  
              ___wmul@multiplier 0074   button_timer_interrupt@sw_value 0070                       ?_main_init 0070  
                      display@co 0049                    ringbuf_pop@rb 0073                    ringbuf_num@rb 0071  
                  I2C_Start@adrs 00BC                ___lmul@multiplier 00B9                      i1_I2C_Start 0C08  
             LCD_SetCursor@F3069 0056                  I2C_Receive@data 00BD               __end_of_flag_clear 0D8A  
                     _I2C_rStart 0C22                 __size_of___aldiv 0082                 __size_of___almod 006D  
          __end_ofi1_LCD_Command 0CAA                 __size_of___awdiv 0053                I2C_IdleCheck@mask 00BA  
               __size_of___lldiv 0052                 __size_of___lwdiv 0036                 __size_of___lwmod 002E  
                       _adc_init 0BC6                      i1_LCD_Clear 0B66                     ?_I2C_Receive 0070  
            __end_of_ringbuf_pop 0EAE              __end_of_ringbuf_num 0E56                 flag_read@bit_and 00B9  
                     i1LED@value 0070              __end_of_timer0_init 0BF0            __size_of_ringbuf_init 001B  
            __end_of_timer1_init 0C08                 __size_of_display 01F2                  ___lwdiv@divisor 0076  
                ___lwdiv@counter 007D             timer0_init@prescaler 00BA                         __ptext10 0D03  
                       __ptext11 0D66                         __ptext20 0BB4                         __ptext12 0F0B  
                       __ptext21 0CE3                         __ptext13 0E56                         __ptext30 018A  
                       __ptext22 0B74                         __ptext14 0DB0                         __ptext31 0B66  
                       __ptext15 0E01                         __ptext40 0B3E                         __ptext32 0EAE  
                       __ptext24 0DD8                         __ptext16 0F71                         __ptext41 0C08  
                       __ptext33 0F3B                         __ptext25 0E81                         __ptext17 0C22  
                       __ptext42 0B92                         __ptext34 06F8                         __ptext26 0E2B  
                       __ptext18 0B44                         __ptext43 0B50                         __ptext35 0601  
                       __ptext27 0683                         __ptext19 0CAA                         __ptext44 0548  
                       __ptext36 0BA2                         __ptext28 0D8A                         __ptext45 0C3C  
                       __ptext37 0C8E                         __ptext29 0765                         __ptext46 0CC6  
                       __ptext38 0EDC                         __ptext47 0FAE                         __ptext39 0C72  
                   _SSP1CON2bits 0216                  ___almod@divisor 0070                  ___almod@counter 0079  
                  EEP_Read@Reg_h 00C1                    EEP_Read@Reg_l 00BF                   I2C_rStart@adrs 00BB  
                  __size_of_main 01CC                    flag_read@port 00BA                       _EEP_Writes 0E01  
        ?_button_timer_interrupt 0070                      ??_flag_read 00BA                     _ringbuf_init 0C57  
                       display@i 004C                       i1_I2C_Send 0B92                       i1OUT@value 0070  
                     i1_I2C_Stop 0B3E                      ??_main_init 00C5                       _INTCONbits 000B  
                    pic14e$flags 007E                         intlevel1 0000                 ___lwmod@dividend 0072  
         __size_of_LCD_SetCursor 0012                 ___lldiv@dividend 0074                  i1I2C_Start@adrs 0073  
              __CFG_CLKOUTEN$OFF 0000                      ?_I2C_rStart 00BB         __size_ofi1_I2C_IdleCheck 000B  
                   EEP_Read@data 00C2                    _print_content 0030   __end_of_button_timer_interrupt 0601  
                    _ringbuf_pop 0E81                      _ringbuf_num 0E2B                      _timer0_init 0BDB  
                    _timer1_init 0BF0                 ___lldiv@quotient 0079                  ___lwmod@divisor 0070  
                ___lwmod@counter 0075                      EEP_Read@ans 00C3                     ___aldiv@sign 0044  
                   ___almod@sign 007A                      ?_EEP_Writes 00BD  
