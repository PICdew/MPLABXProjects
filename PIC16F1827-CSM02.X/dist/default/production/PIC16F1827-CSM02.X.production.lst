

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Feb 18 21:48:14 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0113                     	;# 
    72  0114                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0199                     	;# 
    94  019A                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019C                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020C                     	;# 
   105  020D                     	;# 
   106  0211                     	;# 
   107  0211                     	;# 
   108  0212                     	;# 
   109  0212                     	;# 
   110  0213                     	;# 
   111  0213                     	;# 
   112  0214                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0216                     	;# 
   118  0216                     	;# 
   119  0217                     	;# 
   120  0217                     	;# 
   121  0219                     	;# 
   122  021A                     	;# 
   123  021B                     	;# 
   124  021C                     	;# 
   125  021D                     	;# 
   126  021E                     	;# 
   127  021F                     	;# 
   128  0291                     	;# 
   129  0291                     	;# 
   130  0292                     	;# 
   131  0293                     	;# 
   132  0294                     	;# 
   133  0295                     	;# 
   134  0295                     	;# 
   135  0296                     	;# 
   136  0298                     	;# 
   137  0298                     	;# 
   138  0299                     	;# 
   139  029A                     	;# 
   140  029B                     	;# 
   141  029C                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  029E                     	;# 
   146  0311                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0318                     	;# 
   151  0318                     	;# 
   152  0319                     	;# 
   153  031A                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0415                     	;# 
   163  0416                     	;# 
   164  0417                     	;# 
   165  041C                     	;# 
   166  041D                     	;# 
   167  041E                     	;# 
   168  0FE4                     	;# 
   169  0FE5                     	;# 
   170  0FE6                     	;# 
   171  0FE7                     	;# 
   172  0FE8                     	;# 
   173  0FE9                     	;# 
   174  0FEA                     	;# 
   175  0FEB                     	;# 
   176  0FED                     	;# 
   177  0FEE                     	;# 
   178  0FEF                     	;# 
   179                           
   180                           	psect	idataCOMMON
   181  0197                     __pidataCOMMON:	
   182                           
   183                           ;initializer for LCD_SetCursor@F2883
   184  0197  3400               	retlw	0
   185  0198  3440               	retlw	64
   186  001E                     _CPSCON0	set	30
   187  001E                     _CPSCON0bits	set	30
   188  001F                     _CPSCON1	set	31
   189  000B                     _INTCON	set	11
   190  000B                     _INTCONbits	set	11
   191  0018                     _T1CON	set	24
   192  0018                     _T1CONbits	set	24
   193  0019                     _T1GCONbits	set	25
   194  0015                     _TMR0	set	21
   195  0017                     _TMR1H	set	23
   196  0016                     _TMR1L	set	22
   197  0093                     _BCL1IF	set	147
   198  008D                     _RCIF	set	141
   199  008B                     _SSP1IF	set	139
   200  005A                     _TMR0IF	set	90
   201  008C                     _TXIF	set	140
   202  009B                     _ADRES	set	155
   203  009D                     _ADCON0bits	set	157
   204  009E                     _ADCON1bits	set	158
   205  0095                     _OPTION_REG	set	149
   206  0095                     _OPTION_REGbits	set	149
   207  0099                     _OSCCON	set	153
   208  0091                     _PIE1bits	set	145
   209  008C                     _TRISA	set	140
   210  008D                     _TRISB	set	141
   211  048C                     _TXIE	set	1164
   212  0117                     _FVRCON	set	279
   213  0861                     _LATA1	set	2145
   214  018C                     _ANSELA	set	396
   215  018D                     _ANSELB	set	397
   216  0199                     _RCREG	set	409
   217  019D                     _RCSTA	set	413
   218  019C                     _SPBRGH	set	412
   219  019B                     _SPBRGL	set	411
   220  019A                     _TXREG	set	410
   221  019E                     _TXSTA	set	414
   222  0CFB                     _BRG16	set	3323
   223  0CEF                     _SPEN	set	3311
   224  0212                     _SSP1ADD	set	530
   225  0211                     _SSP1BUF	set	529
   226  0215                     _SSP1CON1	set	533
   227  0216                     _SSP1CON2	set	534
   228  0216                     _SSP1CON2bits	set	534
   229  0214                     _SSP1STAT	set	532
   230                           
   231                           ; #config settings
   232  0000                     
   233                           	psect	cinit
   234  0028                     start_initialization:	
   235  0028                     __initialization:	
   236                           
   237                           ; Clear objects allocated to COMMON
   238  0028  01F9               	clrf	__pbssCOMMON& (0+127)
   239                           
   240                           ; Clear objects allocated to BANK0
   241  0029  01C7               	clrf	__pbssBANK0& (0+127)
   242  002A  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   243  002B  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   244  002C  01CA               	clrf	(__pbssBANK0+3)& (0+127)
   245  002D  01CB               	clrf	(__pbssBANK0+4)& (0+127)
   246  002E  01CC               	clrf	(__pbssBANK0+5)& (0+127)
   247  002F  01CD               	clrf	(__pbssBANK0+6)& (0+127)
   248  0030  01CE               	clrf	(__pbssBANK0+7)& (0+127)
   249  0031  01CF               	clrf	(__pbssBANK0+8)& (0+127)
   250  0032  01D0               	clrf	(__pbssBANK0+9)& (0+127)
   251                           
   252                           ; Initialize objects allocated to COMMON
   253  0033  3181  2197  3180   	fcall	__pidataCOMMON	;fetch initializer
   254  0036  00F7               	movwf	__pdataCOMMON& (0+127)
   255  0037  3181  2198         	fcall	__pidataCOMMON+1	;fetch initializer
   256  0039  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   257  003A                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  003A                     __end_of__initialization:	
   261  003A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   262  003B  0020               	movlb	0
   263  003C  3180  283E         	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMMON
   266  0079                     __pbssCOMMON:	
   267  0079                     _dec_t0:	
   268  0079                     	ds	1
   269                           
   270                           	psect	dataCOMMON
   271  0077                     __pdataCOMMON:	
   272  0077                     LCD_SetCursor@F2883:	
   273  0077                     	ds	2
   274                           
   275                           	psect	bssBANK0
   276  0047                     __pbssBANK0:	
   277  0047                     _cap:	
   278  0047                     	ds	2
   279  0049                     _pre:	
   280  0049                     	ds	2
   281  004B                     _cnt:	
   282  004B                     	ds	1
   283  004C                     _intFlag:	
   284  004C                     	ds	1
   285  004D                     _tx_buf:	
   286  004D                     	ds	4
   287                           
   288                           	psect	cstackCOMMON
   289  0070                     __pcstackCOMMON:	
   290  0070                     ??_ringbuf_pop:	
   291  0070                     ??_ringbuf_num:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_UART_init:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_tx_send:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_interrupt_TXIF:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_isr:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_ringbuf_pop:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_ringbuf_num:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0070                     	ds	1
   318  0071                     ringbuf_num@rb:	
   319                           
   320                           ; 1 bytes @ 0x1
   321  0071                     	ds	1
   322  0072                     ringbuf_pop@ret:	
   323                           
   324                           ; 1 bytes @ 0x2
   325  0072                     	ds	1
   326  0073                     ringbuf_pop@rb:	
   327                           
   328                           ; 1 bytes @ 0x3
   329  0073                     	ds	1
   330  0074                     ??_interrupt_TXIF:	
   331  0074                     ??_isr:	
   332                           ; 0 bytes @ 0x4
   333                           
   334                           
   335                           ; 0 bytes @ 0x4
   336  0074                     	ds	2
   337  0076                     isr@ascii:	
   338                           
   339                           ; 1 bytes @ 0x6
   340  0076                     	ds	1
   341                           
   342                           	psect	cstackBANK0
   343  0020                     __pcstackBANK0:	
   344  0020                     ?_ringbuf_init:	
   345  0020                     ?_ringbuf_push:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0020                     ??_UART_init:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0020                     ringbuf_init@internal_buf:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0020                     ringbuf_push@asciicode:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0020                     UART_init@device:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0020                     	ds	1
   363  0021                     ??_ringbuf_push:	
   364  0021                     ringbuf_init@bufsize:	
   365                           ; 0 bytes @ 0x1
   366                           
   367                           
   368                           ; 1 bytes @ 0x1
   369  0021                     	ds	1
   370  0022                     ??_ringbuf_init:	
   371                           
   372                           ; 0 bytes @ 0x2
   373  0022                     	ds	1
   374  0023                     ringbuf_init@rb:	
   375  0023                     ringbuf_push@rb:	
   376                           ; 1 bytes @ 0x3
   377                           
   378                           
   379                           ; 1 bytes @ 0x3
   380  0023                     	ds	1
   381  0024                     ??_tx_send:	
   382                           
   383                           ; 0 bytes @ 0x4
   384  0024                     	ds	1
   385  0025                     tx_send@asciicode:	
   386                           
   387                           ; 1 bytes @ 0x5
   388  0025                     	ds	1
   389  0026                     ??_main:	
   390                           
   391                           ; 0 bytes @ 0x6
   392  0026                     	ds	3
   393  0029                     main@buf:	
   394                           
   395                           ; 30 bytes @ 0x9
   396  0029                     	ds	30
   397                           
   398                           	psect	maintext
   399  003E                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 49 in file "PIC16F1827-CSM02.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  buf            30    9[BANK0 ] unsigned char [30]
   410 ;; Return value:  Size  Location     Type
   411 ;;		None               void
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 17F/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   419 ;;      Params:         0       0       0       0       0       0
   420 ;;      Locals:         0      30       0       0       0       0
   421 ;;      Temps:          0       3       0       0       0       0
   422 ;;      Totals:         0      33       0       0       0       0
   423 ;;Total ram usage:       33 bytes
   424 ;; Hardware stack levels required when called:    5
   425 ;; This function calls:
   426 ;;		_UART_init
   427 ;;		_ringbuf_init
   428 ;;		_tx_send
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _main
   436  003E                     _main:	
   437                           
   438                           ;PIC16F1827-CSM02.c: 50: cap = 0;
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   442  003E  0020               	movlb	0	; select bank0
   443  003F  01C7               	clrf	_cap
   444  0040  01C8               	clrf	_cap+1
   445                           
   446                           ;PIC16F1827-CSM02.c: 51: intFlag = 0;
   447  0041  01CC               	clrf	_intFlag
   448                           
   449                           ;PIC16F1827-CSM02.c: 53: OSCCON = 0x70;
   450  0042  3070               	movlw	112
   451  0043  0021               	movlb	1	; select bank1
   452  0044  0099               	movwf	25	;volatile
   453                           
   454                           ;PIC16F1827-CSM02.c: 54: ANSELA = 0x01;
   455  0045  3001               	movlw	1
   456  0046  0023               	movlb	3	; select bank3
   457  0047  008C               	movwf	12	;volatile
   458                           
   459                           ;PIC16F1827-CSM02.c: 55: ANSELB = 0x00;
   460  0048  018D               	clrf	13	;volatile
   461                           
   462                           ;PIC16F1827-CSM02.c: 56: TRISA = 0x01;
   463  0049  3001               	movlw	1
   464  004A  0021               	movlb	1	; select bank1
   465  004B  008C               	movwf	12	;volatile
   466                           
   467                           ;PIC16F1827-CSM02.c: 57: TRISB = 0x02;
   468  004C  3002               	movlw	2
   469  004D  008D               	movwf	13	;volatile
   470                           
   471                           ;PIC16F1827-CSM02.c: 59: UART_init(0);
   472  004E  3000               	movlw	0
   473  004F  3181  2178  3180   	fcall	_UART_init
   474                           
   475                           ;PIC16F1827-CSM02.c: 61: char buf[30];
   476                           ;PIC16F1827-CSM02.c: 62: ringbuf_init(&tx_buf, buf, sizeof (buf));
   477  0052  3029               	movlw	main@buf& (0+255)
   478  0053  0020               	movlb	0	; select bank0
   479  0054  00A6               	movwf	??_main
   480  0055  0826               	movf	??_main,w
   481  0056  00A0               	movwf	ringbuf_init@internal_buf
   482  0057  301E               	movlw	30
   483  0058  00A7               	movwf	??_main+1
   484  0059  0827               	movf	??_main+1,w
   485  005A  00A1               	movwf	ringbuf_init@bufsize
   486  005B  304D               	movlw	_tx_buf& (0+255)
   487  005C  3181  2146  3180   	fcall	_ringbuf_init
   488                           
   489                           ;PIC16F1827-CSM02.c: 64: _delay((unsigned long)((100)*(32000000/4000.0)));
   490  005F  3005               	movlw	5
   491  0060  0020               	movlb	0	; select bank0
   492  0061  00A8               	movwf	??_main+2
   493  0062  300F               	movlw	15
   494  0063  00A7               	movwf	??_main+1
   495  0064  30F4               	movlw	244
   496  0065  00A6               	movwf	??_main
   497  0066                     u717:	
   498  0066  0BA6               	decfsz	??_main,f
   499  0067  2866               	goto	u717
   500  0068  0BA7               	decfsz	??_main+1,f
   501  0069  2866               	goto	u717
   502  006A  0BA8               	decfsz	??_main+2,f
   503  006B  2866               	goto	u717
   504                           
   505                           ;PIC16F1827-CSM02.c: 66: CPSCON0 = 0b00001100;
   506  006C  300C               	movlw	12
   507  006D  0020               	movlb	0	; select bank0
   508  006E  009E               	movwf	30	;volatile
   509                           
   510                           ;PIC16F1827-CSM02.c: 67: CPSCON1 = 0x00;
   511  006F  019F               	clrf	31	;volatile
   512                           
   513                           ;PIC16F1827-CSM02.c: 68: T1CON = 0b11000001;
   514  0070  30C1               	movlw	193
   515  0071  0098               	movwf	24	;volatile
   516                           
   517                           ;PIC16F1827-CSM02.c: 69: T1GCONbits.TMR1GE = 0;
   518  0072  1399               	bcf	25,7	;volatile
   519                           
   520                           ;PIC16F1827-CSM02.c: 70: TMR0 = 0;
   521  0073  0195               	clrf	21	;volatile
   522                           
   523                           ;PIC16F1827-CSM02.c: 71: OPTION_REG = 0b00000110;
   524  0074  3006               	movlw	6
   525  0075  0021               	movlb	1	; select bank1
   526  0076  0095               	movwf	21	;volatile
   527                           
   528                           ;PIC16F1827-CSM02.c: 72: OPTION_REGbits.PS = 7;
   529  0077  3007               	movlw	7
   530  0078  0495               	iorwf	21,f	;volatile
   531                           
   532                           ;PIC16F1827-CSM02.c: 73: INTCON = 0b01100000;
   533  0079  3060               	movlw	96
   534  007A  008B               	movwf	11	;volatile
   535                           
   536                           ;PIC16F1827-CSM02.c: 75: TMR1L = 0;
   537  007B  0020               	movlb	0	; select bank0
   538  007C  0196               	clrf	22	;volatile
   539                           
   540                           ;PIC16F1827-CSM02.c: 76: TMR1H = 0;
   541  007D  0197               	clrf	23	;volatile
   542                           
   543                           ;PIC16F1827-CSM02.c: 78: INTCONbits.GIE = 1;
   544  007E  178B               	bsf	11,7	;volatile
   545  007F                     l1449:	
   546                           ;PIC16F1827-CSM02.c: 80: while (1) {
   547                           
   548                           
   549                           ;PIC16F1827-CSM02.c: 81: if (intFlag) {
   550  007F  084C               	movf	_intFlag,w
   551  0080  1903               	btfsc	3,2
   552  0081  287F               	goto	l1449
   553                           
   554                           ;PIC16F1827-CSM02.c: 82: intFlag = 0;
   555  0082  01CC               	clrf	_intFlag
   556                           
   557                           ;PIC16F1827-CSM02.c: 84: CPSCON0bits.CPSON = 0;
   558  0083  139E               	bcf	30,7	;volatile
   559                           
   560                           ;PIC16F1827-CSM02.c: 86: cap = (TMR1H << 8) + TMR1L;
   561  0084  0817               	movf	23,w	;volatile
   562  0085  01C8               	clrf	_cap+1
   563  0086  07C8               	addwf	_cap+1,f
   564  0087  0816               	movf	22,w	;volatile
   565  0088  01C7               	clrf	_cap
   566  0089  07C7               	addwf	_cap,f
   567                           
   568                           ;PIC16F1827-CSM02.c: 88: if (dec_t0)LATA1 = 1;
   569  008A  0879               	movf	_dec_t0,w
   570  008B  1903               	btfsc	3,2
   571  008C  2890               	goto	l288
   572  008D  0022               	movlb	2	; select bank2
   573  008E  148C               	bsf	12,1	;volatile
   574  008F  2892               	goto	l1461
   575  0090                     l288:	
   576                           
   577                           ;PIC16F1827-CSM02.c: 89: else LATA1 = 0;
   578  0090  0022               	movlb	2	; select bank2
   579  0091  108C               	bcf	12,1	;volatile
   580  0092                     l1461:	
   581                           
   582                           ;PIC16F1827-CSM02.c: 91: if ((cap >> 8) < pre) {
   583  0092  0020               	movlb	0	; select bank0
   584  0093  0848               	movf	_cap+1,w
   585  0094  00A7               	movwf	??_main+1
   586  0095  0847               	movf	_cap,w
   587  0096  00A6               	movwf	??_main
   588  0097  0827               	movf	??_main+1,w
   589  0098  00A6               	movwf	??_main
   590  0099  01A7               	clrf	??_main+1
   591  009A  084A               	movf	_pre+1,w
   592  009B  0227               	subwf	??_main+1,w
   593  009C  1D03               	skipz
   594  009D  28A0               	goto	u695
   595  009E  0849               	movf	_pre,w
   596  009F  0226               	subwf	??_main,w
   597  00A0                     u695:	
   598  00A0  1803               	skipnc
   599  00A1  28A6               	goto	l1465
   600                           
   601                           ;PIC16F1827-CSM02.c: 92: dec_t0 = 32;
   602  00A2  3020               	movlw	32
   603  00A3  00A6               	movwf	??_main
   604  00A4  0826               	movf	??_main,w
   605  00A5  00F9               	movwf	_dec_t0
   606  00A6                     l1465:	
   607                           
   608                           ;PIC16F1827-CSM02.c: 93: }
   609                           ;PIC16F1827-CSM02.c: 94: pre = (cap >> 8);
   610  00A6  0848               	movf	_cap+1,w
   611  00A7  00A7               	movwf	??_main+1
   612  00A8  0847               	movf	_cap,w
   613  00A9  00A6               	movwf	??_main
   614  00AA  0827               	movf	??_main+1,w
   615  00AB  00A6               	movwf	??_main
   616  00AC  01A7               	clrf	??_main+1
   617  00AD  0826               	movf	??_main,w
   618  00AE  00C9               	movwf	_pre
   619  00AF  0827               	movf	??_main+1,w
   620  00B0  00CA               	movwf	_pre+1
   621                           
   622                           ;PIC16F1827-CSM02.c: 96: TMR1L = 0;
   623  00B1  0196               	clrf	22	;volatile
   624                           
   625                           ;PIC16F1827-CSM02.c: 97: TMR1H = 0;
   626  00B2  0197               	clrf	23	;volatile
   627                           
   628                           ;PIC16F1827-CSM02.c: 98: CPSCON0bits.CPSON = 1;
   629  00B3  179E               	bsf	30,7	;volatile
   630                           
   631                           ;PIC16F1827-CSM02.c: 100: if (cnt++ >= 10) {
   632  00B4  3001               	movlw	1
   633  00B5  00A6               	movwf	??_main
   634  00B6  0826               	movf	??_main,w
   635  00B7  07CB               	addwf	_cnt,f
   636  00B8  300B               	movlw	11
   637  00B9  024B               	subwf	_cnt,w
   638  00BA  1C03               	skipc
   639  00BB  287F               	goto	l1449
   640                           
   641                           ;PIC16F1827-CSM02.c: 101: tx_send(cap >> 8);
   642  00BC  0848               	movf	_cap+1,w
   643  00BD  3181  218B  3180   	fcall	_tx_send
   644                           
   645                           ;PIC16F1827-CSM02.c: 102: cnt = 0;
   646  00C0  0020               	movlb	0	; select bank0
   647  00C1  01CB               	clrf	_cnt
   648  00C2  287F               	goto	l1449
   649  00C3                     __end_of_main:	
   650                           
   651                           	psect	text1
   652  018B                     __ptext1:	
   653 ;; *************** function _tx_send *****************
   654 ;; Defined at:
   655 ;;		line 161 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  asciicode       1    wreg     unsigned char 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  asciicode       1    5[BANK0 ] unsigned char 
   660 ;; Return value:  Size  Location     Type
   661 ;;		None               void
   662 ;; Registers used:
   663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   669 ;;      Params:         0       0       0       0       0       0
   670 ;;      Locals:         0       1       0       0       0       0
   671 ;;      Temps:          0       1       0       0       0       0
   672 ;;      Totals:         0       2       0       0       0       0
   673 ;;Total ram usage:        2 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    4
   676 ;; This function calls:
   677 ;;		_ringbuf_push
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _tx_send
   685  018B                     _tx_send:	
   686                           
   687                           ;incstack = 0
   688                           ; Regs used in _tx_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   689                           ;tx_send@asciicode stored from wreg
   690  018B  0020               	movlb	0	; select bank0
   691  018C  00A5               	movwf	tx_send@asciicode
   692                           
   693                           ;My_header_16F.h: 162: ringbuf_push(&tx_buf, asciicode);
   694  018D  0825               	movf	tx_send@asciicode,w
   695  018E  00A4               	movwf	??_tx_send
   696  018F  0824               	movf	??_tx_send,w
   697  0190  00A0               	movwf	ringbuf_push@asciicode
   698  0191  304D               	movlw	_tx_buf& (0+255)
   699  0192  3180  20C3         	fcall	_ringbuf_push
   700                           
   701                           ;My_header_16F.h: 163: PIE1bits.TXIE = 1;
   702  0194  0021               	movlb	1	; select bank1
   703  0195  1611               	bsf	17,4	;volatile
   704  0196  0008               	return
   705  0197                     __end_of_tx_send:	
   706                           
   707                           	psect	text2
   708  00C3                     __ptext2:	
   709 ;; *************** function _ringbuf_push *****************
   710 ;; Defined at:
   711 ;;		line 120 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  rb              1    wreg     PTR struct ringbuf
   714 ;;		 -> tx_buf(4), 
   715 ;;  asciicode       1    0[BANK0 ] unsigned char 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  rb              1    3[BANK0 ] PTR struct ringbuf
   718 ;;		 -> tx_buf(4), 
   719 ;; Return value:  Size  Location     Type
   720 ;;		None               void
   721 ;; Registers used:
   722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   728 ;;      Params:         0       1       0       0       0       0
   729 ;;      Locals:         0       1       0       0       0       0
   730 ;;      Temps:          0       2       0       0       0       0
   731 ;;      Totals:         0       4       0       0       0       0
   732 ;;Total ram usage:        4 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    3
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_tx_send
   739 ;;		_tx_sends
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _ringbuf_push
   745  00C3                     _ringbuf_push:	
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _ringbuf_push: [wreg-fsr1h+status,2+status,0]
   749                           ;ringbuf_push@rb stored from wreg
   750  00C3  0020               	movlb	0	; select bank0
   751  00C4  00A3               	movwf	ringbuf_push@rb
   752                           
   753                           ;My_header_16F.h: 121: rb->buf[rb->head] = asciicode;
   754  00C5  0820               	movf	ringbuf_push@asciicode,w
   755  00C6  00A1               	movwf	??_ringbuf_push
   756  00C7  0823               	movf	ringbuf_push@rb,w
   757  00C8  0086               	movwf	6
   758  00C9  0187               	clrf	7
   759  00CA  0823               	movf	ringbuf_push@rb,w
   760  00CB  3E02               	addlw	2
   761  00CC  0084               	movwf	4
   762  00CD  0185               	clrf	5
   763  00CE  0800               	movf	0,w
   764  00CF  0701               	addwf	1,w
   765  00D0  00A2               	movwf	??_ringbuf_push+1
   766  00D1  0822               	movf	??_ringbuf_push+1,w
   767  00D2  0086               	movwf	6
   768  00D3  0187               	clrf	7
   769  00D4  0821               	movf	??_ringbuf_push,w
   770  00D5  0081               	movwf	1
   771                           
   772                           ;My_header_16F.h: 122: rb->head++;
   773  00D6  3001               	movlw	1
   774  00D7  00A1               	movwf	??_ringbuf_push
   775  00D8  0823               	movf	ringbuf_push@rb,w
   776  00D9  3E02               	addlw	2
   777  00DA  0086               	movwf	6
   778  00DB  0187               	clrf	7
   779  00DC  0821               	movf	??_ringbuf_push,w
   780  00DD  0781               	addwf	1,f
   781                           
   782                           ;My_header_16F.h: 123: if (rb->head >= rb->size) {
   783  00DE  0823               	movf	ringbuf_push@rb,w
   784  00DF  3E02               	addlw	2
   785  00E0  0086               	movwf	6
   786  00E1  0187               	clrf	7
   787  00E2  0A23               	incf	ringbuf_push@rb,w
   788  00E3  0084               	movwf	4
   789  00E4  0185               	clrf	5
   790  00E5  0800               	movf	0,w
   791  00E6  0201               	subwf	1,w
   792  00E7  1C03               	skipc
   793  00E8  0008               	return
   794                           
   795                           ;My_header_16F.h: 124: rb->head = 0;
   796  00E9  0823               	movf	ringbuf_push@rb,w
   797  00EA  3E02               	addlw	2
   798  00EB  0086               	movwf	6
   799  00EC  0187               	clrf	7
   800  00ED  0181               	clrf	1
   801  00EE  0008               	return
   802  00EF                     __end_of_ringbuf_push:	
   803                           
   804                           	psect	text3
   805  0146                     __ptext3:	
   806 ;; *************** function _ringbuf_init *****************
   807 ;; Defined at:
   808 ;;		line 113 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  rb              1    wreg     PTR struct ringbuf
   811 ;;		 -> tx_buf(4), 
   812 ;;  internal_buf    1    0[BANK0 ] PTR unsigned char 
   813 ;;		 -> main@buf(30), 
   814 ;;  bufsize         1    1[BANK0 ] unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  rb              1    3[BANK0 ] PTR struct ringbuf
   817 ;;		 -> tx_buf(4), 
   818 ;; Return value:  Size  Location     Type
   819 ;;		None               void
   820 ;; Registers used:
   821 ;;		wreg, fsr1l, fsr1h, status,2
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   827 ;;      Params:         0       2       0       0       0       0
   828 ;;      Locals:         0       1       0       0       0       0
   829 ;;      Temps:          0       1       0       0       0       0
   830 ;;      Totals:         0       4       0       0       0       0
   831 ;;Total ram usage:        4 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    3
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _ringbuf_init
   843  0146                     _ringbuf_init:	
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2]
   847                           ;ringbuf_init@rb stored from wreg
   848  0146  0020               	movlb	0	; select bank0
   849  0147  00A3               	movwf	ringbuf_init@rb
   850                           
   851                           ;My_header_16F.h: 114: rb->buf = internal_buf;
   852  0148  0820               	movf	ringbuf_init@internal_buf,w
   853  0149  00A2               	movwf	??_ringbuf_init
   854  014A  0823               	movf	ringbuf_init@rb,w
   855  014B  0086               	movwf	6
   856  014C  0187               	clrf	7
   857  014D  0822               	movf	??_ringbuf_init,w
   858  014E  0081               	movwf	1
   859                           
   860                           ;My_header_16F.h: 115: rb->size = bufsize;
   861  014F  0821               	movf	ringbuf_init@bufsize,w
   862  0150  00A2               	movwf	??_ringbuf_init
   863  0151  0A23               	incf	ringbuf_init@rb,w
   864  0152  0086               	movwf	6
   865  0153  0187               	clrf	7
   866  0154  0822               	movf	??_ringbuf_init,w
   867  0155  0081               	movwf	1
   868                           
   869                           ;My_header_16F.h: 116: rb->head = 0;
   870  0156  0823               	movf	ringbuf_init@rb,w
   871  0157  3E02               	addlw	2
   872  0158  0086               	movwf	6
   873  0159  0187               	clrf	7
   874  015A  0181               	clrf	1
   875                           
   876                           ;My_header_16F.h: 117: rb->tail = 0;
   877  015B  0823               	movf	ringbuf_init@rb,w
   878  015C  3E03               	addlw	3
   879  015D  0086               	movwf	6
   880  015E  0187               	clrf	7
   881  015F  0181               	clrf	1
   882  0160  0008               	return
   883  0161                     __end_of_ringbuf_init:	
   884                           
   885                           	psect	text4
   886  0178                     __ptext4:	
   887 ;; *************** function _UART_init *****************
   888 ;; Defined at:
   889 ;;		line 148 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  device          1    wreg     unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  device          1    0[BANK0 ] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;		None               void
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   903 ;;      Params:         0       0       0       0       0       0
   904 ;;      Locals:         0       1       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0
   906 ;;      Totals:         0       1       0       0       0       0
   907 ;;Total ram usage:        1 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    3
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _UART_init
   919  0178                     _UART_init:	
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _UART_init: [wreg+status,2+status,0]
   923                           ;UART_init@device stored from wreg
   924  0178  0020               	movlb	0	; select bank0
   925  0179  00A0               	movwf	UART_init@device
   926                           
   927                           ;My_header_16F.h: 149: if (device == 0) {
   928  017A  08A0               	movf	UART_init@device,f
   929  017B  1D03               	skipz
   930  017C  0008               	return
   931                           
   932                           ;My_header_16F.h: 150: SPEN = 1;
   933  017D  0023               	movlb	3	; select bank3
   934  017E  179D               	bsf	29,7	;volatile
   935                           
   936                           ;My_header_16F.h: 151: RCSTA = 0x90;
   937  017F  3090               	movlw	144
   938  0180  009D               	movwf	29	;volatile
   939                           
   940                           ;My_header_16F.h: 152: BRG16 = 0;
   941  0181  119F               	bcf	31,3	;volatile
   942                           
   943                           ;My_header_16F.h: 153: SPBRGH = 0;
   944  0182  019C               	clrf	28	;volatile
   945                           
   946                           ;My_header_16F.h: 154: SPBRGL = 207;
   947  0183  30CF               	movlw	207
   948  0184  009B               	movwf	27	;volatile
   949                           
   950                           ;My_header_16F.h: 155: TXSTA = 0x24;
   951  0185  3024               	movlw	36
   952  0186  009E               	movwf	30	;volatile
   953                           
   954                           ;My_header_16F.h: 156: PIE1bits.RCIE = 1;
   955  0187  0021               	movlb	1	; select bank1
   956  0188  1691               	bsf	17,5	;volatile
   957                           
   958                           ;My_header_16F.h: 157: INTCONbits.PEIE = 1;
   959  0189  170B               	bsf	11,6	;volatile
   960  018A  0008               	return
   961  018B                     __end_of_UART_init:	
   962                           
   963                           	psect	intentry
   964  0004                     __pintentry:	
   965 ;; *************** function _isr *****************
   966 ;; Defined at:
   967 ;;		line 32 in file "PIC16F1827-CSM02.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  ascii           1    6[COMMON] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   981 ;;      Params:         0       0       0       0       0       0
   982 ;;      Locals:         1       0       0       0       0       0
   983 ;;      Temps:          2       0       0       0       0       0
   984 ;;      Totals:         3       0       0       0       0       0
   985 ;;Total ram usage:        3 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    2
   988 ;; This function calls:
   989 ;;		_interrupt_TXIF
   990 ;; This function is called by:
   991 ;;		Interrupt level 1
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995  0004                     _isr:	
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   999  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1000  0005  3180               	pagesel	$
  1001  0006  0020               	movlb	0	; select bank0
  1002  0007  087F               	movf	127,w
  1003  0008  00F5               	movwf	??_isr+1
  1004                           
  1005                           ;PIC16F1827-CSM02.c: 33: interrupt_TXIF();
  1006  0009  3181  2161  3180   	fcall	_interrupt_TXIF
  1007                           
  1008                           ;PIC16F1827-CSM02.c: 34: if (TMR0IF) {
  1009  000C  1D0B               	btfss	11,2	;volatile
  1010  000D  2818               	goto	i1l1319
  1011                           
  1012                           ;PIC16F1827-CSM02.c: 35: TMR0 = 0;
  1013  000E  0020               	movlb	0	; select bank0
  1014  000F  0195               	clrf	21	;volatile
  1015                           
  1016                           ;PIC16F1827-CSM02.c: 36: INTCONbits.TMR0IF = 0;
  1017  0010  110B               	bcf	11,2	;volatile
  1018                           
  1019                           ;PIC16F1827-CSM02.c: 37: intFlag = 1;
  1020  0011  01CC               	clrf	_intFlag
  1021  0012  0ACC               	incf	_intFlag,f
  1022                           
  1023                           ;PIC16F1827-CSM02.c: 38: if (dec_t0)dec_t0--;
  1024  0013  0879               	movf	_dec_t0,w
  1025  0014  1903               	btfsc	3,2
  1026  0015  2818               	goto	i1l1319
  1027  0016  3001               	movlw	1
  1028  0017  02F9               	subwf	_dec_t0,f
  1029  0018                     i1l1319:	
  1030                           
  1031                           ;PIC16F1827-CSM02.c: 39: }
  1032                           ;PIC16F1827-CSM02.c: 40: if (RCIF) {
  1033  0018  0020               	movlb	0	; select bank0
  1034  0019  1E91               	btfss	17,5	;volatile
  1035  001A  2821               	goto	i1l280
  1036                           
  1037                           ;PIC16F1827-CSM02.c: 41: RCIF = 0;
  1038  001B  1291               	bcf	17,5	;volatile
  1039                           
  1040                           ;PIC16F1827-CSM02.c: 42: char ascii = RCREG;
  1041  001C  0023               	movlb	3	; select bank3
  1042  001D  0819               	movf	25,w	;volatile
  1043  001E  00F4               	movwf	??_isr
  1044  001F  0874               	movf	??_isr,w
  1045  0020  00F6               	movwf	isr@ascii
  1046  0021                     i1l280:	
  1047  0021  0875               	movf	??_isr+1,w
  1048  0022  0020               	movlb	0	; select bank0
  1049  0023  00FF               	movwf	127
  1050  0024  107E               	bcf	126,0	;clear compiler interrupt flag
  1051  0025  0009               	retfie
  1052  0026                     __end_of_isr:	
  1053                           
  1054                           	psect	text6
  1055  0161                     __ptext6:	
  1056 ;; *************** function _interrupt_TXIF *****************
  1057 ;; Defined at:
  1058 ;;		line 174 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;		None               void
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1072 ;;      Params:         0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    1
  1079 ;; This function calls:
  1080 ;;		_ringbuf_num
  1081 ;;		_ringbuf_pop
  1082 ;; This function is called by:
  1083 ;;		_isr
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _interrupt_TXIF
  1089  0161                     _interrupt_TXIF:	
  1090                           
  1091                           ;My_header_16F.h: 175: if (TXIE && TXIF) {
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _interrupt_TXIF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1095  0161  0021               	movlb	1	; select bank1
  1096  0162  1E11               	btfss	17,4	;volatile
  1097  0163  0008               	return
  1098  0164  0020               	movlb	0	; select bank0
  1099  0165  1E11               	btfss	17,4	;volatile
  1100  0166  0008               	return
  1101                           
  1102                           ;My_header_16F.h: 176: TXIF = 0;
  1103  0167  1211               	bcf	17,4	;volatile
  1104                           
  1105                           ;My_header_16F.h: 177: if (ringbuf_num(&tx_buf) > 0) {
  1106  0168  304D               	movlw	_tx_buf& (0+255)
  1107  0169  3181  211B  3181   	fcall	_ringbuf_num
  1108  016C  3A00               	xorlw	0
  1109  016D  1903               	skipnz
  1110  016E  2975               	goto	i1l160
  1111                           
  1112                           ;My_header_16F.h: 178: TXREG = ringbuf_pop(&tx_buf);
  1113  016F  304D               	movlw	_tx_buf& (0+255)
  1114  0170  3180  20EF         	fcall	_ringbuf_pop
  1115  0172  0023               	movlb	3	; select bank3
  1116  0173  009A               	movwf	26	;volatile
  1117                           
  1118                           ;My_header_16F.h: 179: } else {
  1119  0174  0008               	return
  1120  0175                     i1l160:	
  1121                           
  1122                           ;My_header_16F.h: 180: PIE1bits.TXIE = 0;
  1123  0175  0021               	movlb	1	; select bank1
  1124  0176  1211               	bcf	17,4	;volatile
  1125  0177  0008               	return
  1126  0178                     __end_of_interrupt_TXIF:	
  1127                           
  1128                           	psect	text7
  1129  00EF                     __ptext7:	
  1130 ;; *************** function _ringbuf_pop *****************
  1131 ;; Defined at:
  1132 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  rb              1    wreg     PTR struct ringbuf
  1135 ;;		 -> tx_buf(4), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  rb              1    3[COMMON] PTR struct ringbuf
  1138 ;;		 -> tx_buf(4), 
  1139 ;;  ret             1    2[COMMON] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      unsigned char 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1149 ;;      Params:         0       0       0       0       0       0
  1150 ;;      Locals:         2       0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0       0
  1152 ;;      Totals:         4       0       0       0       0       0
  1153 ;;Total ram usage:        4 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_interrupt_TXIF
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _ringbuf_pop
  1164  00EF                     _ringbuf_pop:	
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  1168                           ;ringbuf_pop@rb stored from wreg
  1169  00EF  00F3               	movwf	ringbuf_pop@rb
  1170                           
  1171                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  1172  00F0  0873               	movf	ringbuf_pop@rb,w
  1173  00F1  0086               	movwf	6
  1174  00F2  0187               	clrf	7
  1175  00F3  0873               	movf	ringbuf_pop@rb,w
  1176  00F4  3E03               	addlw	3
  1177  00F5  0084               	movwf	4
  1178  00F6  0185               	clrf	5
  1179  00F7  0800               	movf	0,w
  1180  00F8  0701               	addwf	1,w
  1181  00F9  00F0               	movwf	??_ringbuf_pop
  1182  00FA  0870               	movf	??_ringbuf_pop,w
  1183  00FB  0086               	movwf	6
  1184  00FC  0187               	clrf	7
  1185  00FD  0801               	movf	1,w
  1186  00FE  00F1               	movwf	??_ringbuf_pop+1
  1187  00FF  0871               	movf	??_ringbuf_pop+1,w
  1188  0100  00F2               	movwf	ringbuf_pop@ret
  1189                           
  1190                           ;My_header_16F.h: 130: rb->tail++;
  1191  0101  3001               	movlw	1
  1192  0102  00F0               	movwf	??_ringbuf_pop
  1193  0103  0873               	movf	ringbuf_pop@rb,w
  1194  0104  3E03               	addlw	3
  1195  0105  0086               	movwf	6
  1196  0106  0187               	clrf	7
  1197  0107  0870               	movf	??_ringbuf_pop,w
  1198  0108  0781               	addwf	1,f
  1199                           
  1200                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  1201  0109  0873               	movf	ringbuf_pop@rb,w
  1202  010A  3E03               	addlw	3
  1203  010B  0086               	movwf	6
  1204  010C  0187               	clrf	7
  1205  010D  0A73               	incf	ringbuf_pop@rb,w
  1206  010E  0084               	movwf	4
  1207  010F  0185               	clrf	5
  1208  0110  0800               	movf	0,w
  1209  0111  0201               	subwf	1,w
  1210  0112  1C03               	skipc
  1211  0113  2919               	goto	i1l1243
  1212                           
  1213                           ;My_header_16F.h: 132: rb->tail = 0;
  1214  0114  0873               	movf	ringbuf_pop@rb,w
  1215  0115  3E03               	addlw	3
  1216  0116  0086               	movwf	6
  1217  0117  0187               	clrf	7
  1218  0118  0181               	clrf	1
  1219  0119                     i1l1243:	
  1220                           
  1221                           ;My_header_16F.h: 133: }
  1222                           ;My_header_16F.h: 134: return ret;
  1223  0119  0872               	movf	ringbuf_pop@ret,w
  1224  011A  0008               	return
  1225  011B                     __end_of_ringbuf_pop:	
  1226                           
  1227                           	psect	text8
  1228  011B                     __ptext8:	
  1229 ;; *************** function _ringbuf_num *****************
  1230 ;; Defined at:
  1231 ;;		line 137 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  rb              1    wreg     PTR struct ringbuf
  1234 ;;		 -> tx_buf(4), 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  rb              1    1[COMMON] PTR struct ringbuf
  1237 ;;		 -> tx_buf(4), 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      unsigned char 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1247 ;;      Params:         0       0       0       0       0       0
  1248 ;;      Locals:         1       0       0       0       0       0
  1249 ;;      Temps:          1       0       0       0       0       0
  1250 ;;      Totals:         2       0       0       0       0       0
  1251 ;;Total ram usage:        2 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_interrupt_TXIF
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function _ringbuf_num
  1262  011B                     _ringbuf_num:	
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  1266                           ;ringbuf_num@rb stored from wreg
  1267  011B  00F1               	movwf	ringbuf_num@rb
  1268                           
  1269                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  1270  011C  0871               	movf	ringbuf_num@rb,w
  1271  011D  3E02               	addlw	2
  1272  011E  0086               	movwf	6
  1273  011F  0187               	clrf	7
  1274  0120  0871               	movf	ringbuf_num@rb,w
  1275  0121  3E03               	addlw	3
  1276  0122  0084               	movwf	4
  1277  0123  0185               	clrf	5
  1278  0124  0800               	movf	0,w
  1279  0125  0201               	subwf	1,w
  1280  0126  1C03               	skipc
  1281  0127  2934               	goto	i1l1255
  1282                           
  1283                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  1284  0128  0871               	movf	ringbuf_num@rb,w
  1285  0129  3E02               	addlw	2
  1286  012A  0086               	movwf	6
  1287  012B  0187               	clrf	7
  1288  012C  0871               	movf	ringbuf_num@rb,w
  1289  012D  3E03               	addlw	3
  1290  012E  0084               	movwf	4
  1291  012F  0185               	clrf	5
  1292  0130  0300               	decf	0,w
  1293  0131  3AFF               	xorlw	255
  1294  0132  0701               	addwf	1,w
  1295                           
  1296                           ;My_header_16F.h: 140: } else {
  1297  0133  0008               	return
  1298  0134                     i1l1255:	
  1299                           
  1300                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  1301  0134  0871               	movf	ringbuf_num@rb,w
  1302  0135  3E02               	addlw	2
  1303  0136  0086               	movwf	6
  1304  0137  0187               	clrf	7
  1305  0138  0A71               	incf	ringbuf_num@rb,w
  1306  0139  0084               	movwf	4
  1307  013A  0185               	clrf	5
  1308  013B  0800               	movf	0,w
  1309  013C  00F0               	movwf	??_ringbuf_num
  1310  013D  0871               	movf	ringbuf_num@rb,w
  1311  013E  3E03               	addlw	3
  1312  013F  0084               	movwf	4
  1313  0140  0185               	clrf	5
  1314  0141  0300               	decf	0,w
  1315  0142  3AFF               	xorlw	255
  1316  0143  0770               	addwf	??_ringbuf_num,w
  1317  0144  0701               	addwf	1,w
  1318  0145  0008               	return
  1319  0146                     __end_of_ringbuf_num:	
  1320  007E                     btemp	set	126	;btemp
  1321  007E                     pic14e$flags	set	126
  1322  007E                     wtemp	set	126
  1323  007E                     wtemp0	set	126
  1324  0080                     wtemp1	set	128
  1325  0082                     wtemp2	set	130
  1326  0084                     wtemp3	set	132
  1327  0086                     wtemp4	set	134
  1328  0088                     wtemp5	set	136
  1329  007F                     wtemp6	set	127
  1330  007E                     ttemp	set	126
  1331  007E                     ttemp0	set	126
  1332  0081                     ttemp1	set	129
  1333  0084                     ttemp2	set	132
  1334  0087                     ttemp3	set	135
  1335  007F                     ttemp4	set	127
  1336  007E                     ltemp	set	126
  1337  007E                     ltemp0	set	126
  1338  0082                     ltemp1	set	130
  1339  0086                     ltemp2	set	134
  1340  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     39      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK0[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK0[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_push@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK0[4]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK0

    _main->_tx_send
    _tx_send->_ringbuf_push

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0     749
                                              6 BANK0     33    33      0
                          _UART_init
                       _ringbuf_init
                            _tx_send
 ---------------------------------------------------------------------------------
 (1) _tx_send                                              2     2      0     380
                                              4 BANK0      2     2      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (2) _ringbuf_push                                         4     3      1     358
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     298
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     386
                                              4 COMMON     3     3      0
                     _interrupt_TXIF
 ---------------------------------------------------------------------------------
 (4) _interrupt_TXIF                                       0     0      0     385
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (5) _ringbuf_pop                                          4     4      0     193
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          2     2      0     192
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _ringbuf_init
   _tx_send
     _ringbuf_push

 _isr (ROOT)
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     27      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Feb 18 21:48:14 2015

             __CFG_CP$OFF 0000    __end_of_interrupt_TXIF 0178                       l288 0090  
            __CFG_CPD$OFF 0000                       u717 0066                       u695 00A0  
                     _cap 0047                       _cnt 004B                       _isr 0004  
                     _pre 0049              __CFG_BORV$LO 0000              __CFG_LVP$OFF 0000  
                    l1461 0092                      l1465 00A6                      l1449 007F  
                    ?_isr 0070                      _RCIF 008D                      _TMR0 0015  
                    _SPEN 0CEF                      _TXIE 048C                      _TXIF 008C  
            __CFG_WRT$OFF 0000                      _main 003E                      fsr0h 0005  
                    fsr1h 0007                      fsr0l 0004                      indf0 0000  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
                    ltemp 007E                      start 0026                      ttemp 007E  
                    wtemp 007E             __CFG_IESO$OFF 0000                     ??_isr 0074  
           __CFG_PLLEN$ON 0000           ?_interrupt_TXIF 0070                     ?_main 0070  
                   _ADRES 009B                     _BRG16 0CFB             __CFG_WDTE$OFF 0000  
                   _T1CON 0018                     _LATA1 0861                     i1l160 0175  
                   i1l280 0021                     _RCREG 0199                     _RCSTA 019D  
                   _TMR1H 0017                     _TMR1L 0016                     _TRISA 008C  
                   _TRISB 008D                     _TXREG 019A                     _TXSTA 019E  
          __CFG_FCMEN$OFF 0000        __size_of_UART_init 0013     ringbuf_push@asciicode 0020  
          __CFG_BOREN$OFF 0000                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __end_of_tx_send 0197  
          __CFG_MCLRE$OFF 0000           __initialization 0028              __end_of_main 00C3  
     ringbuf_init@bufsize 0021                    ??_main 0026                    _BCL1IF 0093  
                  _ANSELA 018C                    _ANSELB 018D                    i1l1243 0119  
                  i1l1255 0134                    i1l1319 0018                    _INTCON 000B  
                  _FVRCON 0117                    _OSCCON 0099                    _TMR0IF 005A  
                  _SPBRGH 019C                    _SPBRGL 019B                    _SSP1IF 008B  
          __CFG_PWRTE$OFF 0000              ?_ringbuf_pop 0070              ?_ringbuf_num 0070  
                  _dec_t0 0079         __end_of_UART_init 018B                    _tx_buf 004D  
            __pdataCOMMON 0077           UART_init@device 0020                 ??_tx_send 0024  
 __end_of__initialization 003A            __pcstackCOMMON 0070            _OPTION_REGbits 0095  
              __pbssBANK0 0047                __pmaintext 003E          ??_interrupt_TXIF 0074  
              __pintentry 0004                   _CPSCON0 001E                   _CPSCON1 001F  
                 _SSP1ADD 0212                   _SSP1BUF 0211             ?_ringbuf_init 0020  
           ?_ringbuf_push 0020      __size_of_ringbuf_pop 002C      __size_of_ringbuf_num 002B  
         __CFG_STVREN$OFF 0000                   __ptext1 018B                   __ptext2 00C3  
                 __ptext3 0146                   __ptext4 0178                   __ptext6 0161  
                 __ptext7 00EF                   __ptext8 011B                 _T1CONbits 0018  
                 _intFlag 004C              __size_of_isr 0022                   main@buf 0029  
                 _tx_send 018B      end_of_initialization 003A            ??_ringbuf_init 0022  
          ??_ringbuf_push 0021                 _UART_init 0178          __CFG_FOSC$INTOSC 0000  
          ringbuf_init@rb 0023            ringbuf_pop@ret 0072            ringbuf_push@rb 0023  
           __pidataCOMMON 0197                ?_UART_init 0070       start_initialization 0028  
             __end_of_isr 0026               __pbssCOMMON 0079                 ___latbits 0001  
           __pcstackBANK0 0020      __end_of_ringbuf_init 0161      __end_of_ringbuf_push 00EF  
        tx_send@asciicode 0025               ??_UART_init 0020               _CPSCON0bits 001E  
                ?_tx_send 0070  ringbuf_init@internal_buf 0020                  _PIE1bits 0091  
           ??_ringbuf_pop 0070             ??_ringbuf_num 0070                  _SSP1CON1 0215  
                _SSP1CON2 0216                  _SSP1STAT 0214                _ADCON0bits 009D  
              _ADCON1bits 009E   __size_of_interrupt_TXIF 0017             ringbuf_pop@rb 0073  
           ringbuf_num@rb 0071        LCD_SetCursor@F2883 0077       __end_of_ringbuf_pop 011B  
     __end_of_ringbuf_num 0146     __size_of_ringbuf_init 001B     __size_of_ringbuf_push 002C  
              _T1GCONbits 0019              _SSP1CON2bits 0216          __size_of_tx_send 000C  
           __size_of_main 0085              _ringbuf_init 0146              _ringbuf_push 00C3  
              _INTCONbits 000B                  isr@ascii 0076               pic14e$flags 007E  
                intlevel1 0000         __CFG_CLKOUTEN$OFF 0000               _ringbuf_pop 00EF  
             _ringbuf_num 011B                _OPTION_REG 0095            _interrupt_TXIF 0161  
