

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 15:55:49 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0113                     	;# 
    72  0114                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0199                     	;# 
    94  019A                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019C                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020C                     	;# 
   105  020D                     	;# 
   106  0211                     	;# 
   107  0211                     	;# 
   108  0212                     	;# 
   109  0212                     	;# 
   110  0213                     	;# 
   111  0213                     	;# 
   112  0214                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0216                     	;# 
   118  0216                     	;# 
   119  0217                     	;# 
   120  0217                     	;# 
   121  0219                     	;# 
   122  021A                     	;# 
   123  021B                     	;# 
   124  021C                     	;# 
   125  021D                     	;# 
   126  021E                     	;# 
   127  021F                     	;# 
   128  0291                     	;# 
   129  0291                     	;# 
   130  0292                     	;# 
   131  0293                     	;# 
   132  0294                     	;# 
   133  0295                     	;# 
   134  0295                     	;# 
   135  0296                     	;# 
   136  0298                     	;# 
   137  0298                     	;# 
   138  0299                     	;# 
   139  029A                     	;# 
   140  029B                     	;# 
   141  029C                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  029E                     	;# 
   146  0311                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0318                     	;# 
   151  0318                     	;# 
   152  0319                     	;# 
   153  031A                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0415                     	;# 
   163  0416                     	;# 
   164  0417                     	;# 
   165  041C                     	;# 
   166  041D                     	;# 
   167  041E                     	;# 
   168  0FE4                     	;# 
   169  0FE5                     	;# 
   170  0FE6                     	;# 
   171  0FE7                     	;# 
   172  0FE8                     	;# 
   173  0FE9                     	;# 
   174  0FEA                     	;# 
   175  0FEB                     	;# 
   176  0FED                     	;# 
   177  0FEE                     	;# 
   178  0FEF                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  0111                     	;# 
   228  0112                     	;# 
   229  0113                     	;# 
   230  0114                     	;# 
   231  0115                     	;# 
   232  0116                     	;# 
   233  0117                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011D                     	;# 
   239  011E                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0191                     	;# 
   243  0191                     	;# 
   244  0192                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0193                     	;# 
   248  0194                     	;# 
   249  0195                     	;# 
   250  0196                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019C                     	;# 
   258  019C                     	;# 
   259  019D                     	;# 
   260  019E                     	;# 
   261  019F                     	;# 
   262  020C                     	;# 
   263  020D                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0216                     	;# 
   276  0216                     	;# 
   277  0217                     	;# 
   278  0217                     	;# 
   279  0219                     	;# 
   280  021A                     	;# 
   281  021B                     	;# 
   282  021C                     	;# 
   283  021D                     	;# 
   284  021E                     	;# 
   285  021F                     	;# 
   286  0291                     	;# 
   287  0291                     	;# 
   288  0292                     	;# 
   289  0293                     	;# 
   290  0294                     	;# 
   291  0295                     	;# 
   292  0295                     	;# 
   293  0296                     	;# 
   294  0298                     	;# 
   295  0298                     	;# 
   296  0299                     	;# 
   297  029A                     	;# 
   298  029B                     	;# 
   299  029C                     	;# 
   300  029C                     	;# 
   301  029D                     	;# 
   302  029E                     	;# 
   303  029E                     	;# 
   304  0311                     	;# 
   305  0311                     	;# 
   306  0312                     	;# 
   307  0313                     	;# 
   308  0318                     	;# 
   309  0318                     	;# 
   310  0319                     	;# 
   311  031A                     	;# 
   312  0394                     	;# 
   313  0395                     	;# 
   314  0396                     	;# 
   315  039A                     	;# 
   316  039C                     	;# 
   317  039D                     	;# 
   318  039E                     	;# 
   319  039F                     	;# 
   320  0415                     	;# 
   321  0416                     	;# 
   322  0417                     	;# 
   323  041C                     	;# 
   324  041D                     	;# 
   325  041E                     	;# 
   326  0FE4                     	;# 
   327  0FE5                     	;# 
   328  0FE6                     	;# 
   329  0FE7                     	;# 
   330  0FE8                     	;# 
   331  0FE9                     	;# 
   332  0FEA                     	;# 
   333  0FEB                     	;# 
   334  0FED                     	;# 
   335  0FEE                     	;# 
   336  0FEF                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0008                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  0011                     	;# 
   352  0012                     	;# 
   353  0013                     	;# 
   354  0014                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  001E                     	;# 
   365  001F                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  0111                     	;# 
   386  0112                     	;# 
   387  0113                     	;# 
   388  0114                     	;# 
   389  0115                     	;# 
   390  0116                     	;# 
   391  0117                     	;# 
   392  0118                     	;# 
   393  0119                     	;# 
   394  011A                     	;# 
   395  011B                     	;# 
   396  011D                     	;# 
   397  011E                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0191                     	;# 
   401  0191                     	;# 
   402  0192                     	;# 
   403  0193                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0194                     	;# 
   407  0195                     	;# 
   408  0196                     	;# 
   409  0199                     	;# 
   410  019A                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019C                     	;# 
   416  019C                     	;# 
   417  019D                     	;# 
   418  019E                     	;# 
   419  019F                     	;# 
   420  020C                     	;# 
   421  020D                     	;# 
   422  0211                     	;# 
   423  0211                     	;# 
   424  0212                     	;# 
   425  0212                     	;# 
   426  0213                     	;# 
   427  0213                     	;# 
   428  0214                     	;# 
   429  0214                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0216                     	;# 
   434  0216                     	;# 
   435  0217                     	;# 
   436  0217                     	;# 
   437  0219                     	;# 
   438  021A                     	;# 
   439  021B                     	;# 
   440  021C                     	;# 
   441  021D                     	;# 
   442  021E                     	;# 
   443  021F                     	;# 
   444  0291                     	;# 
   445  0291                     	;# 
   446  0292                     	;# 
   447  0293                     	;# 
   448  0294                     	;# 
   449  0295                     	;# 
   450  0295                     	;# 
   451  0296                     	;# 
   452  0298                     	;# 
   453  0298                     	;# 
   454  0299                     	;# 
   455  029A                     	;# 
   456  029B                     	;# 
   457  029C                     	;# 
   458  029C                     	;# 
   459  029D                     	;# 
   460  029E                     	;# 
   461  029E                     	;# 
   462  0311                     	;# 
   463  0311                     	;# 
   464  0312                     	;# 
   465  0313                     	;# 
   466  0318                     	;# 
   467  0318                     	;# 
   468  0319                     	;# 
   469  031A                     	;# 
   470  0394                     	;# 
   471  0395                     	;# 
   472  0396                     	;# 
   473  039A                     	;# 
   474  039C                     	;# 
   475  039D                     	;# 
   476  039E                     	;# 
   477  039F                     	;# 
   478  0415                     	;# 
   479  0416                     	;# 
   480  0417                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  0FE4                     	;# 
   485  0FE5                     	;# 
   486  0FE6                     	;# 
   487  0FE7                     	;# 
   488  0FE8                     	;# 
   489  0FE9                     	;# 
   490  0FEA                     	;# 
   491  0FEB                     	;# 
   492  0FED                     	;# 
   493  0FEE                     	;# 
   494  0FEF                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0008                     	;# 
   504  0009                     	;# 
   505  000A                     	;# 
   506  000B                     	;# 
   507  000C                     	;# 
   508  000D                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0014                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0016                     	;# 
   516  0017                     	;# 
   517  0018                     	;# 
   518  0019                     	;# 
   519  001A                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0095                     	;# 
   531  0096                     	;# 
   532  0097                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009A                     	;# 
   536  009B                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  010C                     	;# 
   542  010D                     	;# 
   543  0111                     	;# 
   544  0112                     	;# 
   545  0113                     	;# 
   546  0114                     	;# 
   547  0115                     	;# 
   548  0116                     	;# 
   549  0117                     	;# 
   550  0118                     	;# 
   551  0119                     	;# 
   552  011A                     	;# 
   553  011B                     	;# 
   554  011D                     	;# 
   555  011E                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  0191                     	;# 
   559  0191                     	;# 
   560  0192                     	;# 
   561  0193                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0194                     	;# 
   565  0195                     	;# 
   566  0196                     	;# 
   567  0199                     	;# 
   568  019A                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019C                     	;# 
   574  019C                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  019F                     	;# 
   578  020C                     	;# 
   579  020D                     	;# 
   580  0211                     	;# 
   581  0211                     	;# 
   582  0212                     	;# 
   583  0212                     	;# 
   584  0213                     	;# 
   585  0213                     	;# 
   586  0214                     	;# 
   587  0214                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  0219                     	;# 
   596  021A                     	;# 
   597  021B                     	;# 
   598  021C                     	;# 
   599  021D                     	;# 
   600  021E                     	;# 
   601  021F                     	;# 
   602  0291                     	;# 
   603  0291                     	;# 
   604  0292                     	;# 
   605  0293                     	;# 
   606  0294                     	;# 
   607  0295                     	;# 
   608  0295                     	;# 
   609  0296                     	;# 
   610  0298                     	;# 
   611  0298                     	;# 
   612  0299                     	;# 
   613  029A                     	;# 
   614  029B                     	;# 
   615  029C                     	;# 
   616  029C                     	;# 
   617  029D                     	;# 
   618  029E                     	;# 
   619  029E                     	;# 
   620  0311                     	;# 
   621  0311                     	;# 
   622  0312                     	;# 
   623  0313                     	;# 
   624  0318                     	;# 
   625  0318                     	;# 
   626  0319                     	;# 
   627  031A                     	;# 
   628  0394                     	;# 
   629  0395                     	;# 
   630  0396                     	;# 
   631  039A                     	;# 
   632  039C                     	;# 
   633  039D                     	;# 
   634  039E                     	;# 
   635  039F                     	;# 
   636  0415                     	;# 
   637  0416                     	;# 
   638  0417                     	;# 
   639  041C                     	;# 
   640  041D                     	;# 
   641  041E                     	;# 
   642  0FE4                     	;# 
   643  0FE5                     	;# 
   644  0FE6                     	;# 
   645  0FE7                     	;# 
   646  0FE8                     	;# 
   647  0FE9                     	;# 
   648  0FEA                     	;# 
   649  0FEB                     	;# 
   650  0FED                     	;# 
   651  0FEE                     	;# 
   652  0FEF                     	;# 
   653  000B                     _INTCONbits	set	11
   654  0011                     _PIR1bits	set	17
   655  0018                     _T1CONbits	set	24
   656  0017                     _TMR1H	set	23
   657  0016                     _TMR1L	set	22
   658  0093                     _BCL1IF	set	147
   659  008B                     _SSP1IF	set	139
   660  009B                     _ADRES	set	155
   661  009D                     _ADCON0bits	set	157
   662  009E                     _ADCON1bits	set	158
   663  0095                     _OPTION_REGbits	set	149
   664  0099                     _OSCCON	set	153
   665  0091                     _PIE1bits	set	145
   666  008C                     _TRISA	set	140
   667  008D                     _TRISB	set	141
   668  0117                     _FVRCON	set	279
   669  018C                     _ANSELA	set	396
   670  018D                     _ANSELB	set	397
   671  019F                     _BAUDCONbits	set	415
   672  0199                     _RCREG	set	409
   673  019D                     _RCSTAbits	set	413
   674  019B                     _SPBRG	set	411
   675  019C                     _SPBRGH	set	412
   676  019A                     _TXREG	set	410
   677  019E                     _TXSTAbits	set	414
   678  0212                     _SSP1ADD	set	530
   679  0211                     _SSP1BUF	set	529
   680  0215                     _SSP1CON1	set	533
   681  0216                     _SSP1CON2	set	534
   682  0216                     _SSP1CON2bits	set	534
   683  0214                     _SSP1STAT	set	532
   684  020C                     _WPUA	set	524
   685  020D                     _WPUB	set	525
   686                           
   687                           ; #config settings
   688  0000                     
   689                           	psect	cinit
   690  0016                     start_initialization:	
   691  0016                     __initialization:	
   692                           
   693                           ; Clear objects allocated to BANK0
   694  0016  3020               	movlw	low __pbssBANK0
   695  0017  0084               	movwf	4
   696  0018  3000               	movlw	high __pbssBANK0
   697  0019  0085               	movwf	5
   698  001A  3016               	movlw	22
   699  001B  3181  21D5         	fcall	clear_ram0
   700  001D                     end_of_initialization:	
   701                           ;End of C runtime variable initialization code
   702                           
   703  001D                     __end_of__initialization:	
   704  001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   705  001E  0020               	movlb	0
   706  001F  3181  29CD         	ljmp	_main	;jump to C main() function
   707                           
   708                           	psect	bssBANK0
   709  0020                     __pbssBANK0:	
   710  0020                     _ms:	
   711  0020                     	ds	4
   712  0024                     millis_timer@cnt:	
   713  0024                     	ds	2
   714  0026                     _uart_rx:	
   715  0026                     	ds	8
   716  002E                     _uart_tx:	
   717  002E                     	ds	8
   718                           
   719                           	psect	clrtext
   720  01D5                     clear_ram0:	
   721                           ;	Called with FSR0 containing the base address, and
   722                           ;	WREG with the size to clear
   723                           
   724  01D5  0064               	clrwdt	;clear the watchdog before getting into this loop
   725  01D6                     clrloop0:	
   726  01D6  0180               	clrf	0	;clear RAM location pointed to by FSR
   727  01D7  3101               	addfsr 0,1
   728  01D8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   729  01D9  29D6               	goto	clrloop0	;have we reached the end yet?
   730  01DA  3400               	retlw	0	;all done for this memory range, return
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:	
   734  0070                     ?_UART_ISR:	
   735  0070                     ?_I2C_init:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ?_UART_init:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ?_UART_task:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ?_isr:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ?_main_init:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ?_ringbuf_pop:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ?_main:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?i1_ringbuf_num:	
   757                           ; 2 bytes @ 0x0
   758                           
   759                           
   760                           ; 2 bytes @ 0x0
   761  0070                     	ds	2
   762  0072                     ??i1_ringbuf_num:	
   763                           
   764                           ; 0 bytes @ 0x2
   765  0072                     	ds	4
   766  0076                     i1ringbuf_num@rb:	
   767                           
   768                           ; 1 bytes @ 0x6
   769  0076                     	ds	1
   770  0077                     ??_ringbuf_pop:	
   771  0077                     ?_ringbuf_put:	
   772                           ; 0 bytes @ 0x7
   773                           
   774  0077                     ringbuf_put@asciicode:	
   775                           ; 0 bytes @ 0x7
   776                           
   777                           
   778                           ; 1 bytes @ 0x7
   779  0077                     	ds	1
   780  0078                     ??_ringbuf_put:	
   781                           
   782                           ; 0 bytes @ 0x8
   783  0078                     	ds	6
   784                           
   785                           	psect	cstackBANK0
   786  0036                     __pcstackBANK0:	
   787  0036                     ringbuf_put@rb:	
   788  0036                     ringbuf_pop@ret:	
   789                           ; 1 bytes @ 0x0
   790                           
   791                           
   792                           ; 1 bytes @ 0x0
   793  0036                     	ds	1
   794  0037                     ringbuf_pop@rb:	
   795                           
   796                           ; 1 bytes @ 0x1
   797  0037                     	ds	1
   798  0038                     ??_UART_ISR:	
   799                           
   800                           ; 0 bytes @ 0x2
   801  0038                     	ds	1
   802  0039                     UART_ISR@ascii:	
   803                           
   804                           ; 1 bytes @ 0x3
   805  0039                     	ds	1
   806  003A                     ??_isr:	
   807                           
   808                           ; 0 bytes @ 0x4
   809  003A                     	ds	1
   810  003B                     ??_I2C_init:	
   811  003B                     ??_UART_init:	
   812                           ; 0 bytes @ 0x5
   813                           
   814  003B                     ??_main_init:	
   815                           ; 0 bytes @ 0x5
   816                           
   817  003B                     ?_ringbuf_num:	
   818                           ; 0 bytes @ 0x5
   819                           
   820                           
   821                           ; 2 bytes @ 0x5
   822  003B                     	ds	2
   823  003D                     ??_ringbuf_num:	
   824                           
   825                           ; 0 bytes @ 0x7
   826  003D                     	ds	4
   827  0041                     ringbuf_num@rb:	
   828                           
   829                           ; 1 bytes @ 0xB
   830  0041                     	ds	1
   831  0042                     ??_UART_task:	
   832  0042                     ??_main:	
   833                           ; 0 bytes @ 0xC
   834                           
   835                           
   836                           	psect	maintext
   837  01CD                     __pmaintext:	
   838                           ; 0 bytes @ 0xC
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 52 in file "main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  2   38[None  ] int 
   851 ;; Registers used:
   852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : B1F/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   858 ;;      Params:         0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels required when called:    6
   864 ;; This function calls:
   865 ;;		_UART_task
   866 ;;		_main_init
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _main
   874  01CD                     _main:	
   875                           
   876                           ;main.c: 53: main_init();
   877                           
   878                           ;incstack = 0
   879                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   880  01CD  3181  2189  3181   	fcall	_main_init
   881                           
   882                           ;main.c: 55: INTCONbits.GIE = 1;
   883  01D0  178B               	bsf	11,7	;volatile
   884  01D1                     l1159:	
   885                           ;main.c: 57: while (1) {
   886                           
   887                           
   888                           ;main.c: 58: UART_task();
   889  01D1  3181  21B3  3181   	fcall	_UART_task
   890  01D4  29D1               	goto	l1159
   891  01D5                     __end_of_main:	
   892                           ;main.c: 59: }
   893                           ;main.c: 61: return 0;
   894                           ;	Return value of _main is never used
   895                           
   896                           
   897                           	psect	text1
   898  0189                     __ptext1:	
   899 ;; *************** function _main_init *****************
   900 ;; Defined at:
   901 ;;		line 37 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;		None               void
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   915 ;;      Params:         0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    5
   922 ;; This function calls:
   923 ;;		_I2C_init
   924 ;;		_UART_init
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _main_init
   932  0189                     _main_init:	
   933                           
   934                           ;main.c: 38: OSCCON = 0x70;
   935                           
   936                           ;incstack = 0
   937                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
   938  0189  3070               	movlw	112
   939  018A  0021               	movlb	1	; select bank1
   940  018B  0099               	movwf	25	;volatile
   941                           
   942                           ;main.c: 39: TRISA = 0x37;
   943  018C  3037               	movlw	55
   944  018D  008C               	movwf	12	;volatile
   945                           
   946                           ;main.c: 40: TRISB = 0x5B;
   947  018E  305B               	movlw	91
   948  018F  008D               	movwf	13	;volatile
   949                           
   950                           ;main.c: 41: ANSELA = 0x00;
   951  0190  0023               	movlb	3	; select bank3
   952  0191  018C               	clrf	12	;volatile
   953                           
   954                           ;main.c: 42: ANSELB = 0x00;
   955  0192  018D               	clrf	13	;volatile
   956                           
   957                           ;main.c: 43: WPUA = TRISA;
   958  0193  0021               	movlb	1	; select bank1
   959  0194  080C               	movf	12,w	;volatile
   960  0195  0024               	movlb	4	; select bank4
   961  0196  008C               	movwf	12	;volatile
   962                           
   963                           ;main.c: 44: WPUB = TRISB;
   964  0197  0021               	movlb	1	; select bank1
   965  0198  080D               	movf	13,w	;volatile
   966  0199  0024               	movlb	4	; select bank4
   967  019A  008D               	movwf	13	;volatile
   968                           
   969                           ;main.c: 45: OPTION_REGbits.nWPUEN = 0;
   970  019B  0021               	movlb	1	; select bank1
   971  019C  1395               	bcf	21,7	;volatile
   972                           
   973                           ;main.c: 47: I2C_init();
   974  019D  3181  21C2  3181   	fcall	_I2C_init
   975                           
   976                           ;main.c: 48: UART_init();
   977  01A0  3181  21A3         	fcall	_UART_init
   978  01A2  0008               	return
   979  01A3                     __end_of_main_init:	
   980                           
   981                           	psect	text2
   982  01A3                     __ptext2:	
   983 ;; *************** function _UART_init *****************
   984 ;; Defined at:
   985 ;;		line 10 in file "../My_library/My_UART.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;		None               void
   992 ;; Registers used:
   993 ;;		wreg, status,2
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   999 ;;      Params:         0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    4
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_main_init
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _UART_init
  1015  01A3                     _UART_init:	
  1016                           
  1017                           ;My_UART.c: 11: TXSTAbits.TX9 = 0;
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _UART_init: [wreg+status,2]
  1021  01A3  0023               	movlb	3	; select bank3
  1022  01A4  131E               	bcf	30,6	;volatile
  1023                           
  1024                           ;My_UART.c: 12: TXSTAbits.TXEN = 1;
  1025  01A5  169E               	bsf	30,5	;volatile
  1026                           
  1027                           ;My_UART.c: 13: TXSTAbits.SYNC = 0;
  1028  01A6  121E               	bcf	30,4	;volatile
  1029                           
  1030                           ;My_UART.c: 14: TXSTAbits.BRGH = 0;
  1031  01A7  111E               	bcf	30,2	;volatile
  1032                           
  1033                           ;My_UART.c: 15: RCSTAbits.SPEN = 1;
  1034  01A8  179D               	bsf	29,7	;volatile
  1035                           
  1036                           ;My_UART.c: 16: RCSTAbits.RX9 = 0;
  1037  01A9  131D               	bcf	29,6	;volatile
  1038                           
  1039                           ;My_UART.c: 17: RCSTAbits.CREN = 1;
  1040  01AA  161D               	bsf	29,4	;volatile
  1041                           
  1042                           ;My_UART.c: 18: BAUDCONbits.BRG16 = 1;
  1043  01AB  159F               	bsf	31,3	;volatile
  1044                           
  1045                           ;My_UART.c: 19: SPBRG = 32000000 / 16 / 115200 - 1;
  1046  01AC  3010               	movlw	16
  1047  01AD  009B               	movwf	27	;volatile
  1048                           
  1049                           ;My_UART.c: 20: SPBRGH = (32000000 / 16 / 115200 - 1) >> 8;
  1050  01AE  019C               	clrf	28	;volatile
  1051                           
  1052                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  1053  01AF  0021               	movlb	1	; select bank1
  1054  01B0  1691               	bsf	17,5	;volatile
  1055                           
  1056                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  1057  01B1  170B               	bsf	11,6	;volatile
  1058  01B2  0008               	return
  1059  01B3                     __end_of_UART_init:	
  1060                           
  1061                           	psect	text3
  1062  01C2                     __ptext3:	
  1063 ;; *************** function _I2C_init *****************
  1064 ;; Defined at:
  1065 ;;		line 11 in file "../My_library/My_I2C.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1079 ;;      Params:         0       0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    4
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_main_init
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _I2C_init
  1095  01C2                     _I2C_init:	
  1096                           
  1097                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
  1098                           
  1099                           ;incstack = 0
  1100                           ; Regs used in _I2C_init: [wreg]
  1101  01C2  3080               	movlw	128
  1102  01C3  0024               	movlb	4	; select bank4
  1103  01C4  0094               	movwf	20	;volatile
  1104                           
  1105                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
  1106  01C5  3028               	movlw	40
  1107  01C6  0095               	movwf	21	;volatile
  1108                           
  1109                           ;My_I2C.c: 14: SSP1ADD = 0x13;
  1110  01C7  3013               	movlw	19
  1111  01C8  0092               	movwf	18	;volatile
  1112                           
  1113                           ;My_I2C.c: 17: SSP1IF = 0;
  1114  01C9  0020               	movlb	0	; select bank0
  1115  01CA  1191               	bcf	17,3	;volatile
  1116                           
  1117                           ;My_I2C.c: 18: BCL1IF = 0;
  1118  01CB  1192               	bcf	18,3	;volatile
  1119  01CC  0008               	return
  1120  01CD                     __end_of_I2C_init:	
  1121                           
  1122                           	psect	text4
  1123  01B3                     __ptext4:	
  1124 ;; *************** function _UART_task *****************
  1125 ;; Defined at:
  1126 ;;		line 43 in file "../My_library/My_UART.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1140 ;;      Params:         0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    5
  1147 ;; This function calls:
  1148 ;;		_ringbuf_num
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _UART_task
  1156  01B3                     _UART_task:	
  1157                           
  1158                           ;My_UART.c: 44: if (!PIE1bits.TXIE && ringbuf_num(&uart_tx)) {
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in _UART_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1162  01B3  0021               	movlb	1	; select bank1
  1163  01B4  1A11               	btfsc	17,4	;volatile
  1164  01B5  0008               	return
  1165  01B6  302E               	movlw	(low (_uart_tx| 0))& (0+255)
  1166  01B7  3180  2021  3181   	fcall	_ringbuf_num
  1167  01BA  0020               	movlb	0	; select bank0
  1168  01BB  083B               	movf	?_ringbuf_num,w
  1169  01BC  043C               	iorwf	?_ringbuf_num+1,w
  1170  01BD  1903               	btfsc	3,2
  1171  01BE  0008               	return
  1172                           
  1173                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
  1174  01BF  0021               	movlb	1	; select bank1
  1175  01C0  1611               	bsf	17,4	;volatile
  1176  01C1  0008               	return
  1177  01C2                     __end_of_UART_task:	
  1178                           
  1179                           	psect	text5
  1180  0021                     __ptext5:	
  1181 ;; *************** function _ringbuf_num *****************
  1182 ;; Defined at:
  1183 ;;		line 12 in file "../My_library/My_ringbuf.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  rb              1    wreg     PTR struct ringbuf
  1186 ;;		 -> uart_rx(8), uart_tx(8), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  rb              1   11[BANK0 ] PTR struct ringbuf
  1189 ;;		 -> uart_rx(8), uart_tx(8), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2    5[BANK0 ] unsigned int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1199 ;;      Params:         0       2       0       0       0       0
  1200 ;;      Locals:         0       1       0       0       0       0
  1201 ;;      Temps:          0       4       0       0       0       0
  1202 ;;      Totals:         0       7       0       0       0       0
  1203 ;;Total ram usage:        7 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    4
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_UART_task
  1210 ;;		_ringbuf_backspace
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           
  1215                           ;psect for function _ringbuf_num
  1216  0021                     _ringbuf_num:	
  1217                           
  1218                           ;incstack = 0
  1219                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  1220                           ;ringbuf_num@rb stored from wreg
  1221  0021  0020               	movlb	0	; select bank0
  1222  0022  00C1               	movwf	ringbuf_num@rb
  1223                           
  1224                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  1225  0023  0841               	movf	ringbuf_num@rb,w
  1226  0024  3E06               	addlw	6
  1227  0025  0086               	movwf	6
  1228  0026  0187               	clrf	7
  1229  0027  3F40               	moviw [0]fsr1
  1230  0028  00BD               	movwf	??_ringbuf_num
  1231  0029  3F41               	moviw [1]fsr1
  1232  002A  00BE               	movwf	??_ringbuf_num+1
  1233  002B  0841               	movf	ringbuf_num@rb,w
  1234  002C  3E04               	addlw	4
  1235  002D  0086               	movwf	6
  1236  002E  0187               	clrf	7
  1237  002F  3F40               	moviw [0]fsr1
  1238  0030  00BF               	movwf	??_ringbuf_num+2
  1239  0031  3F41               	moviw [1]fsr1
  1240  0032  00C0               	movwf	??_ringbuf_num+3
  1241  0033  083E               	movf	??_ringbuf_num+1,w
  1242  0034  0240               	subwf	??_ringbuf_num+3,w
  1243  0035  1D03               	skipz
  1244  0036  2839               	goto	u465
  1245  0037  083D               	movf	??_ringbuf_num,w
  1246  0038  023F               	subwf	??_ringbuf_num+2,w
  1247  0039                     u465:	
  1248  0039  1C03               	skipc
  1249  003A  2853               	goto	l1083
  1250                           
  1251                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  1252  003B  0841               	movf	ringbuf_num@rb,w
  1253  003C  3E04               	addlw	4
  1254  003D  0086               	movwf	6
  1255  003E  0187               	clrf	7
  1256  003F  0841               	movf	ringbuf_num@rb,w
  1257  0040  3E06               	addlw	6
  1258  0041  0084               	movwf	4
  1259  0042  0185               	clrf	5
  1260  0043  3F00               	moviw [0]fsr0
  1261  0044  00BD               	movwf	??_ringbuf_num
  1262  0045  3F01               	moviw [1]fsr0
  1263  0046  00BE               	movwf	??_ringbuf_num+1
  1264  0047  09BD               	comf	??_ringbuf_num,f
  1265  0048  09BE               	comf	??_ringbuf_num+1,f
  1266  0049  0ABD               	incf	??_ringbuf_num,f
  1267  004A  1903               	skipnz
  1268  004B  0ABE               	incf	??_ringbuf_num+1,f
  1269  004C  3F40               	moviw [0]fsr1
  1270  004D  073D               	addwf	??_ringbuf_num,w
  1271  004E  00BB               	movwf	?_ringbuf_num
  1272  004F  3F41               	moviw [1]fsr1
  1273  0050  3D3E               	addwfc	??_ringbuf_num+1,w
  1274  0051  00BC               	movwf	?_ringbuf_num+1
  1275                           
  1276                           ;My_ringbuf.c: 15: } else {
  1277  0052  0008               	return
  1278  0053                     l1083:	
  1279                           
  1280                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  1281  0053  0841               	movf	ringbuf_num@rb,w
  1282  0054  3E04               	addlw	4
  1283  0055  0086               	movwf	6
  1284  0056  0187               	clrf	7
  1285  0057  0841               	movf	ringbuf_num@rb,w
  1286  0058  3E06               	addlw	6
  1287  0059  0084               	movwf	4
  1288  005A  0185               	clrf	5
  1289  005B  3F00               	moviw [0]fsr0
  1290  005C  00BD               	movwf	??_ringbuf_num
  1291  005D  3F01               	moviw [1]fsr0
  1292  005E  00BE               	movwf	??_ringbuf_num+1
  1293  005F  09BD               	comf	??_ringbuf_num,f
  1294  0060  09BE               	comf	??_ringbuf_num+1,f
  1295  0061  0ABD               	incf	??_ringbuf_num,f
  1296  0062  1903               	skipnz
  1297  0063  0ABE               	incf	??_ringbuf_num+1,f
  1298  0064  0841               	movf	ringbuf_num@rb,w
  1299  0065  3E02               	addlw	2
  1300  0066  0084               	movwf	4
  1301  0067  0185               	clrf	5
  1302  0068  3F00               	moviw [0]fsr0
  1303  0069  073D               	addwf	??_ringbuf_num,w
  1304  006A  00BF               	movwf	??_ringbuf_num+2
  1305  006B  3F01               	moviw [1]fsr0
  1306  006C  3D3E               	addwfc	??_ringbuf_num+1,w
  1307  006D  00C0               	movwf	??_ringbuf_num+3
  1308  006E  3F40               	moviw [0]fsr1
  1309  006F  073F               	addwf	??_ringbuf_num+2,w
  1310  0070  00BB               	movwf	?_ringbuf_num
  1311  0071  3F41               	moviw [1]fsr1
  1312  0072  3D40               	addwfc	??_ringbuf_num+3,w
  1313  0073  00BC               	movwf	?_ringbuf_num+1
  1314  0074  0008               	return
  1315  0075                     __end_of_ringbuf_num:	
  1316                           
  1317                           	psect	intentry
  1318  0004                     __pintentry:	
  1319 ;; *************** function _isr *****************
  1320 ;; Defined at:
  1321 ;;		line 27 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1335 ;;      Params:         0       0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0
  1337 ;;      Temps:          0       1       0       0       0       0
  1338 ;;      Totals:         0       1       0       0       0       0
  1339 ;;Total ram usage:        1 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    3
  1342 ;; This function calls:
  1343 ;;		_UART_ISR
  1344 ;; This function is called by:
  1345 ;;		Interrupt level 1
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349  0004                     _isr:	
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1353  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1354  0005  3180               	pagesel	$
  1355  0006  0020               	movlb	0	; select bank0
  1356  0007  087F               	movf	127,w
  1357  0008  00BA               	movwf	??_isr
  1358                           
  1359                           ;main.c: 28: UART_ISR();
  1360  0009  3181  215E         	fcall	_UART_ISR
  1361                           
  1362                           ;main.c: 29: if (PIR1bits.TMR1IF) {
  1363  000B  0020               	movlb	0	; select bank0
  1364  000C  1811               	btfsc	17,0	;volatile
  1365                           
  1366                           ;main.c: 30: PIR1bits.TMR1IF = 0;
  1367  000D  1011               	bcf	17,0	;volatile
  1368                           
  1369                           ;main.c: 31: }
  1370                           ;main.c: 32: if (INTCONbits.TMR0IF) {
  1371  000E  190B               	btfsc	11,2	;volatile
  1372                           
  1373                           ;main.c: 33: INTCONbits.TMR0IF = 0;
  1374  000F  110B               	bcf	11,2	;volatile
  1375  0010  083A               	movf	??_isr,w
  1376  0011  00FF               	movwf	127
  1377  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1378  0013  0009               	retfie
  1379  0014                     __end_of_isr:	
  1380                           
  1381                           	psect	text7
  1382  015E                     __ptext7:	
  1383 ;; *************** function _UART_ISR *****************
  1384 ;; Defined at:
  1385 ;;		line 29 in file "../My_library/My_UART.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  ascii           1    3[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1399 ;;      Params:         0       0       0       0       0       0
  1400 ;;      Locals:         0       1       0       0       0       0
  1401 ;;      Temps:          0       1       0       0       0       0
  1402 ;;      Totals:         0       2       0       0       0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		_ringbuf_pop
  1408 ;;		_ringbuf_put
  1409 ;;		i1_ringbuf_num
  1410 ;; This function is called by:
  1411 ;;		_isr
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _UART_ISR
  1417  015E                     _UART_ISR:	
  1418                           
  1419                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _UART_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1423  015E  0021               	movlb	1	; select bank1
  1424  015F  1E11               	btfss	17,4	;volatile
  1425  0160  2975               	goto	i1l138
  1426  0161  0020               	movlb	0	; select bank0
  1427  0162  1E11               	btfss	17,4	;volatile
  1428  0163  2975               	goto	i1l138
  1429                           
  1430                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
  1431  0164  302E               	movlw	(low (_uart_tx| 0))& (0+255)
  1432  0165  3180  2075  3181   	fcall	i1_ringbuf_num
  1433  0168  0870               	movf	?i1_ringbuf_num,w
  1434  0169  0471               	iorwf	?i1_ringbuf_num+1,w
  1435  016A  1903               	btfsc	3,2
  1436  016B  2973               	goto	i1l139
  1437                           
  1438                           ;My_UART.c: 32: TXREG = ringbuf_pop(&uart_tx);
  1439  016C  302E               	movlw	(low (_uart_tx| 0))& (0+255)
  1440  016D  3180  20C8  3181   	fcall	_ringbuf_pop
  1441  0170  0023               	movlb	3	; select bank3
  1442  0171  009A               	movwf	26	;volatile
  1443                           
  1444                           ;My_UART.c: 33: } else {
  1445  0172  2975               	goto	i1l138
  1446  0173                     i1l139:	
  1447                           
  1448                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
  1449  0173  0021               	movlb	1	; select bank1
  1450  0174  1211               	bcf	17,4	;volatile
  1451  0175                     i1l138:	
  1452                           
  1453                           ;My_UART.c: 35: }
  1454                           ;My_UART.c: 36: }
  1455                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
  1456  0175  0021               	movlb	1	; select bank1
  1457  0176  1E91               	btfss	17,5	;volatile
  1458  0177  0008               	return
  1459  0178  0020               	movlb	0	; select bank0
  1460  0179  1E91               	btfss	17,5	;volatile
  1461  017A  0008               	return
  1462                           
  1463                           ;My_UART.c: 38: char ascii = RCREG;
  1464  017B  0023               	movlb	3	; select bank3
  1465  017C  0819               	movf	25,w	;volatile
  1466  017D  0020               	movlb	0	; select bank0
  1467  017E  00B8               	movwf	??_UART_ISR
  1468  017F  0838               	movf	??_UART_ISR,w
  1469  0180  00B9               	movwf	UART_ISR@ascii
  1470                           
  1471                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
  1472  0181  0839               	movf	UART_ISR@ascii,w
  1473  0182  00B8               	movwf	??_UART_ISR
  1474  0183  0838               	movf	??_UART_ISR,w
  1475  0184  00F7               	movwf	ringbuf_put@asciicode
  1476  0185  3026               	movlw	(low (_uart_rx| 0))& (0+255)
  1477  0186  3181  2117         	fcall	_ringbuf_put
  1478  0188  0008               	return
  1479  0189                     __end_of_UART_ISR:	
  1480                           
  1481                           	psect	text8
  1482  0117                     __ptext8:	
  1483 ;; *************** function _ringbuf_put *****************
  1484 ;; Defined at:
  1485 ;;		line 20 in file "../My_library/My_ringbuf.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  rb              1    wreg     PTR struct ringbuf
  1488 ;;		 -> uart_rx(8), 
  1489 ;;  asciicode       1    7[COMMON] unsigned char 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  rb              1    0[BANK0 ] PTR struct ringbuf
  1492 ;;		 -> uart_rx(8), 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1502 ;;      Params:         1       0       0       0       0       0
  1503 ;;      Locals:         0       1       0       0       0       0
  1504 ;;      Temps:          6       0       0       0       0       0
  1505 ;;      Totals:         7       1       0       0       0       0
  1506 ;;Total ram usage:        8 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    1
  1509 ;; This function calls:
  1510 ;;		i1_ringbuf_num
  1511 ;; This function is called by:
  1512 ;;		_UART_ISR
  1513 ;;		_ringbuf_put_num
  1514 ;;		_ringbuf_put_str
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _ringbuf_put
  1520  0117                     _ringbuf_put:	
  1521                           
  1522                           ;incstack = 0
  1523                           ; Regs used in _ringbuf_put: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1524                           ;ringbuf_put@rb stored from wreg
  1525  0117  0020               	movlb	0	; select bank0
  1526  0118  00B6               	movwf	ringbuf_put@rb
  1527                           
  1528                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  1529  0119  0836               	movf	ringbuf_put@rb,w
  1530  011A  3E02               	addlw	2
  1531  011B  0086               	movwf	6
  1532  011C  0187               	clrf	7
  1533  011D  3F40               	moviw [0]fsr1
  1534  011E  00F8               	movwf	??_ringbuf_put
  1535  011F  3F41               	moviw [1]fsr1
  1536  0120  00F9               	movwf	??_ringbuf_put+1
  1537  0121  0836               	movf	ringbuf_put@rb,w
  1538  0122  3180  2075  3181   	fcall	i1_ringbuf_num
  1539  0125  0879               	movf	??_ringbuf_put+1,w
  1540  0126  0271               	subwf	?i1_ringbuf_num+1,w
  1541  0127  1D03               	skipz
  1542  0128  292B               	goto	u49_25
  1543  0129  0878               	movf	??_ringbuf_put,w
  1544  012A  0270               	subwf	?i1_ringbuf_num,w
  1545  012B                     u49_25:	
  1546  012B  1803               	skipnc
  1547  012C  0008               	return
  1548                           
  1549                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  1550  012D  0020               	movlb	0	; select bank0
  1551  012E  0836               	movf	ringbuf_put@rb,w
  1552  012F  3E02               	addlw	2
  1553  0130  0086               	movwf	6
  1554  0131  0187               	clrf	7
  1555  0132  3F40               	moviw [0]fsr1
  1556  0133  00F8               	movwf	??_ringbuf_put
  1557  0134  3F41               	moviw [1]fsr1
  1558  0135  00F9               	movwf	??_ringbuf_put+1
  1559  0136  0836               	movf	ringbuf_put@rb,w
  1560  0137  3E04               	addlw	4
  1561  0138  0086               	movwf	6
  1562  0139  0187               	clrf	7
  1563  013A  3F40               	moviw [0]fsr1
  1564  013B  00FA               	movwf	??_ringbuf_put+2
  1565  013C  3F41               	moviw [1]fsr1
  1566  013D  00FB               	movwf	??_ringbuf_put+3
  1567  013E  087A               	movf	??_ringbuf_put+2,w
  1568  013F  3E01               	addlw	1
  1569  0140  00FC               	movwf	??_ringbuf_put+4
  1570  0141  3000               	movlw	0
  1571  0142  3D7B               	addwfc	??_ringbuf_put+3,w
  1572  0143  00FD               	movwf	??_ringbuf_put+5
  1573  0144  0879               	movf	??_ringbuf_put+1,w
  1574  0145  027D               	subwf	??_ringbuf_put+5,w
  1575  0146  1D03               	skipz
  1576  0147  294A               	goto	u50_25
  1577  0148  0878               	movf	??_ringbuf_put,w
  1578  0149  027C               	subwf	??_ringbuf_put+4,w
  1579  014A                     u50_25:	
  1580  014A  1803               	skipnc
  1581  014B  2956               	goto	i1l1113
  1582  014C  0836               	movf	ringbuf_put@rb,w
  1583  014D  3E04               	addlw	4
  1584  014E  0086               	movwf	6
  1585  014F  0187               	clrf	7
  1586  0150  3001               	movlw	1
  1587  0151  0781               	addwf	1,f
  1588  0152  3141               	addfsr 1,1
  1589  0153  1803               	skipnc
  1590  0154  0A81               	incf	1,f
  1591  0155  0008               	return
  1592  0156                     i1l1113:	
  1593                           
  1594                           ;My_ringbuf.c: 24: else rb->head = 0;
  1595  0156  0836               	movf	ringbuf_put@rb,w
  1596  0157  3E04               	addlw	4
  1597  0158  0086               	movwf	6
  1598  0159  0187               	clrf	7
  1599  015A  3000               	movlw	0
  1600  015B  3FC0               	movwi [0]fsr1
  1601  015C  3FC1               	movwi [1]fsr1
  1602  015D  0008               	return
  1603  015E                     __end_of_ringbuf_put:	
  1604                           
  1605                           	psect	text9
  1606  00C8                     __ptext9:	
  1607 ;; *************** function _ringbuf_pop *****************
  1608 ;; Defined at:
  1609 ;;		line 45 in file "../My_library/My_ringbuf.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  rb              1    wreg     PTR struct ringbuf
  1612 ;;		 -> uart_tx(8), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  rb              1    1[BANK0 ] PTR struct ringbuf
  1615 ;;		 -> uart_tx(8), 
  1616 ;;  ret             1    0[BANK0 ] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      unsigned char 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1626 ;;      Params:         0       0       0       0       0       0
  1627 ;;      Locals:         0       2       0       0       0       0
  1628 ;;      Temps:          6       0       0       0       0       0
  1629 ;;      Totals:         6       2       0       0       0       0
  1630 ;;Total ram usage:        8 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    1
  1633 ;; This function calls:
  1634 ;;		i1_ringbuf_num
  1635 ;; This function is called by:
  1636 ;;		_UART_ISR
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _ringbuf_pop
  1642  00C8                     _ringbuf_pop:	
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1646                           ;ringbuf_pop@rb stored from wreg
  1647  00C8  0020               	movlb	0	; select bank0
  1648  00C9  00B7               	movwf	ringbuf_pop@rb
  1649                           
  1650                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  1651  00CA  0837               	movf	ringbuf_pop@rb,w
  1652  00CB  3180  2075  3180   	fcall	i1_ringbuf_num
  1653  00CE  0870               	movf	?i1_ringbuf_num,w
  1654  00CF  0471               	iorwf	?i1_ringbuf_num+1,w
  1655  00D0  1903               	btfsc	3,2
  1656  00D1  2915               	goto	i1l1103
  1657                           
  1658                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  1659  00D2  0020               	movlb	0	; select bank0
  1660  00D3  0837               	movf	ringbuf_pop@rb,w
  1661  00D4  0086               	movwf	6
  1662  00D5  0187               	clrf	7
  1663  00D6  0837               	movf	ringbuf_pop@rb,w
  1664  00D7  3E06               	addlw	6
  1665  00D8  0084               	movwf	4
  1666  00D9  0185               	clrf	5
  1667  00DA  0800               	movf	0,w
  1668  00DB  0701               	addwf	1,w
  1669  00DC  00F7               	movwf	??_ringbuf_pop
  1670  00DD  0877               	movf	??_ringbuf_pop,w
  1671  00DE  0086               	movwf	6
  1672  00DF  0187               	clrf	7
  1673  00E0  0801               	movf	1,w
  1674  00E1  00F8               	movwf	??_ringbuf_pop+1
  1675  00E2  0878               	movf	??_ringbuf_pop+1,w
  1676  00E3  00B6               	movwf	ringbuf_pop@ret
  1677                           
  1678                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  1679  00E4  0837               	movf	ringbuf_pop@rb,w
  1680  00E5  3E02               	addlw	2
  1681  00E6  0086               	movwf	6
  1682  00E7  0187               	clrf	7
  1683  00E8  3F40               	moviw [0]fsr1
  1684  00E9  00F7               	movwf	??_ringbuf_pop
  1685  00EA  3F41               	moviw [1]fsr1
  1686  00EB  00F8               	movwf	??_ringbuf_pop+1
  1687  00EC  0837               	movf	ringbuf_pop@rb,w
  1688  00ED  3E06               	addlw	6
  1689  00EE  0086               	movwf	6
  1690  00EF  0187               	clrf	7
  1691  00F0  3F40               	moviw [0]fsr1
  1692  00F1  00F9               	movwf	??_ringbuf_pop+2
  1693  00F2  3F41               	moviw [1]fsr1
  1694  00F3  00FA               	movwf	??_ringbuf_pop+3
  1695  00F4  0879               	movf	??_ringbuf_pop+2,w
  1696  00F5  3E01               	addlw	1
  1697  00F6  00FB               	movwf	??_ringbuf_pop+4
  1698  00F7  3000               	movlw	0
  1699  00F8  3D7A               	addwfc	??_ringbuf_pop+3,w
  1700  00F9  00FC               	movwf	??_ringbuf_pop+5
  1701  00FA  0878               	movf	??_ringbuf_pop+1,w
  1702  00FB  027C               	subwf	??_ringbuf_pop+5,w
  1703  00FC  1D03               	skipz
  1704  00FD  2900               	goto	u48_25
  1705  00FE  0877               	movf	??_ringbuf_pop,w
  1706  00FF  027B               	subwf	??_ringbuf_pop+4,w
  1707  0100                     u48_25:	
  1708  0100  1803               	skipnc
  1709  0101  290C               	goto	i1l1095
  1710                           
  1711                           ;My_ringbuf.c: 49: rb->tail++;
  1712  0102  0837               	movf	ringbuf_pop@rb,w
  1713  0103  3E06               	addlw	6
  1714  0104  0086               	movwf	6
  1715  0105  0187               	clrf	7
  1716  0106  3001               	movlw	1
  1717  0107  0781               	addwf	1,f
  1718  0108  3141               	addfsr 1,1
  1719  0109  1803               	skipnc
  1720  010A  0A81               	incf	1,f
  1721                           
  1722                           ;My_ringbuf.c: 50: } else {
  1723  010B  2913               	goto	i1l1097
  1724  010C                     i1l1095:	
  1725                           
  1726                           ;My_ringbuf.c: 51: rb->tail = 0;
  1727  010C  0837               	movf	ringbuf_pop@rb,w
  1728  010D  3E06               	addlw	6
  1729  010E  0086               	movwf	6
  1730  010F  0187               	clrf	7
  1731  0110  3000               	movlw	0
  1732  0111  3FC0               	movwi [0]fsr1
  1733  0112  3FC1               	movwi [1]fsr1
  1734  0113                     i1l1097:	
  1735                           
  1736                           ;My_ringbuf.c: 52: }
  1737                           ;My_ringbuf.c: 53: return ret;
  1738  0113  0836               	movf	ringbuf_pop@ret,w
  1739                           
  1740                           ;My_ringbuf.c: 54: } else {
  1741  0114  0008               	return
  1742  0115                     i1l1103:	
  1743                           
  1744                           ;My_ringbuf.c: 55: return 0;
  1745  0115  3000               	movlw	0
  1746  0116  0008               	return
  1747  0117                     __end_of_ringbuf_pop:	
  1748                           
  1749                           	psect	text10
  1750  0075                     __ptext10:	
  1751 ;; *************** function i1_ringbuf_num *****************
  1752 ;; Defined at:
  1753 ;;		line 12 in file "../My_library/My_ringbuf.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  rb              1    wreg     PTR struct ringbuf
  1756 ;;		 -> uart_rx(8), uart_tx(8), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  rb              1    6[COMMON] PTR struct ringbuf
  1759 ;;		 -> uart_rx(8), uart_tx(8), 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2    0[COMMON] unsigned int 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1769 ;;      Params:         2       0       0       0       0       0
  1770 ;;      Locals:         1       0       0       0       0       0
  1771 ;;      Temps:          4       0       0       0       0       0
  1772 ;;      Totals:         7       0       0       0       0       0
  1773 ;;Total ram usage:        7 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_UART_ISR
  1779 ;;		_ringbuf_put
  1780 ;;		_ringbuf_pop
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function i1_ringbuf_num
  1786  0075                     i1_ringbuf_num:	
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in i1_ringbuf_num: [wreg-fsr1h+status,2+status,0]
  1790                           ;i1ringbuf_num@rb stored from wreg
  1791  0075  00F6               	movwf	i1ringbuf_num@rb
  1792                           
  1793                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  1794  0076  0876               	movf	i1ringbuf_num@rb,w
  1795  0077  3E06               	addlw	6
  1796  0078  0086               	movwf	6
  1797  0079  0187               	clrf	7
  1798  007A  3F40               	moviw [0]fsr1
  1799  007B  00F2               	movwf	??i1_ringbuf_num
  1800  007C  3F41               	moviw [1]fsr1
  1801  007D  00F3               	movwf	??i1_ringbuf_num+1
  1802  007E  0876               	movf	i1ringbuf_num@rb,w
  1803  007F  3E04               	addlw	4
  1804  0080  0086               	movwf	6
  1805  0081  0187               	clrf	7
  1806  0082  3F40               	moviw [0]fsr1
  1807  0083  00F4               	movwf	??i1_ringbuf_num+2
  1808  0084  3F41               	moviw [1]fsr1
  1809  0085  00F5               	movwf	??i1_ringbuf_num+3
  1810  0086  0873               	movf	??i1_ringbuf_num+1,w
  1811  0087  0275               	subwf	??i1_ringbuf_num+3,w
  1812  0088  1D03               	skipz
  1813  0089  288C               	goto	u45_25
  1814  008A  0872               	movf	??i1_ringbuf_num,w
  1815  008B  0274               	subwf	??i1_ringbuf_num+2,w
  1816  008C                     u45_25:	
  1817  008C  1C03               	skipc
  1818  008D  28A6               	goto	i1l1055
  1819                           
  1820                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  1821  008E  0876               	movf	i1ringbuf_num@rb,w
  1822  008F  3E04               	addlw	4
  1823  0090  0086               	movwf	6
  1824  0091  0187               	clrf	7
  1825  0092  0876               	movf	i1ringbuf_num@rb,w
  1826  0093  3E06               	addlw	6
  1827  0094  0084               	movwf	4
  1828  0095  0185               	clrf	5
  1829  0096  3F00               	moviw [0]fsr0
  1830  0097  00F2               	movwf	??i1_ringbuf_num
  1831  0098  3F01               	moviw [1]fsr0
  1832  0099  00F3               	movwf	??i1_ringbuf_num+1
  1833  009A  09F2               	comf	??i1_ringbuf_num,f
  1834  009B  09F3               	comf	??i1_ringbuf_num+1,f
  1835  009C  0AF2               	incf	??i1_ringbuf_num,f
  1836  009D  1903               	skipnz
  1837  009E  0AF3               	incf	??i1_ringbuf_num+1,f
  1838  009F  3F40               	moviw [0]fsr1
  1839  00A0  0772               	addwf	??i1_ringbuf_num,w
  1840  00A1  00F0               	movwf	?i1_ringbuf_num
  1841  00A2  3F41               	moviw [1]fsr1
  1842  00A3  3D73               	addwfc	??i1_ringbuf_num+1,w
  1843  00A4  00F1               	movwf	?i1_ringbuf_num+1
  1844                           
  1845                           ;My_ringbuf.c: 15: } else {
  1846  00A5  0008               	return
  1847  00A6                     i1l1055:	
  1848                           
  1849                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  1850  00A6  0876               	movf	i1ringbuf_num@rb,w
  1851  00A7  3E04               	addlw	4
  1852  00A8  0086               	movwf	6
  1853  00A9  0187               	clrf	7
  1854  00AA  0876               	movf	i1ringbuf_num@rb,w
  1855  00AB  3E06               	addlw	6
  1856  00AC  0084               	movwf	4
  1857  00AD  0185               	clrf	5
  1858  00AE  3F00               	moviw [0]fsr0
  1859  00AF  00F2               	movwf	??i1_ringbuf_num
  1860  00B0  3F01               	moviw [1]fsr0
  1861  00B1  00F3               	movwf	??i1_ringbuf_num+1
  1862  00B2  09F2               	comf	??i1_ringbuf_num,f
  1863  00B3  09F3               	comf	??i1_ringbuf_num+1,f
  1864  00B4  0AF2               	incf	??i1_ringbuf_num,f
  1865  00B5  1903               	skipnz
  1866  00B6  0AF3               	incf	??i1_ringbuf_num+1,f
  1867  00B7  0876               	movf	i1ringbuf_num@rb,w
  1868  00B8  3E02               	addlw	2
  1869  00B9  0084               	movwf	4
  1870  00BA  0185               	clrf	5
  1871  00BB  3F00               	moviw [0]fsr0
  1872  00BC  0772               	addwf	??i1_ringbuf_num,w
  1873  00BD  00F4               	movwf	??i1_ringbuf_num+2
  1874  00BE  3F01               	moviw [1]fsr0
  1875  00BF  3D73               	addwfc	??i1_ringbuf_num+1,w
  1876  00C0  00F5               	movwf	??i1_ringbuf_num+3
  1877  00C1  3F40               	moviw [0]fsr1
  1878  00C2  0774               	addwf	??i1_ringbuf_num+2,w
  1879  00C3  00F0               	movwf	?i1_ringbuf_num
  1880  00C4  3F41               	moviw [1]fsr1
  1881  00C5  3D75               	addwfc	??i1_ringbuf_num+3,w
  1882  00C6  00F1               	movwf	?i1_ringbuf_num+1
  1883  00C7  0008               	return
  1884  00C8                     __end_ofi1_ringbuf_num:	
  1885  007E                     btemp	set	126	;btemp
  1886  007E                     int$flags	set	126
  1887  007E                     wtemp	set	126
  1888  007E                     wtemp0	set	126
  1889  0080                     wtemp1	set	128
  1890  0082                     wtemp2	set	130
  1891  0084                     wtemp3	set	132
  1892  0086                     wtemp4	set	134
  1893  0088                     wtemp5	set	136
  1894  007F                     wtemp6	set	127
  1895  007E                     ttemp	set	126
  1896  007E                     ttemp0	set	126
  1897  0081                     ttemp1	set	129
  1898  0084                     ttemp2	set	132
  1899  0087                     ttemp3	set	135
  1900  007F                     ttemp4	set	127
  1901  007E                     ltemp	set	126
  1902  007E                     ltemp0	set	126
  1903  0082                     ltemp1	set	130
  1904  0086                     ltemp2	set	134
  1905  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      34
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ringbuf_put_str@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_put_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_backspace@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> uart_tx(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_put@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> uart_rx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> uart_rx(BANK0[8]), uart_tx(BANK0[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 0

    uart_rx.buf	PTR unsigned char  size(1) Largest target is 0

    S388ringbuf$buf	PTR unsigned char  size(1) Largest target is 0

    uart_tx.buf	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _UART_ISR->_ringbuf_put
    _ringbuf_put->i1_ringbuf_num
    _ringbuf_pop->i1_ringbuf_num

Critical Paths under _main in BANK0

    _UART_task->_ringbuf_num

Critical Paths under _isr in BANK0

    _isr->_UART_ISR
    _UART_ISR->_ringbuf_pop

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     304
                          _UART_task
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0       0
                           _I2C_init
                          _UART_init
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0     304
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_num                                          7     5      2     304
                                              5 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0    1106
                                              4 BANK0      1     1      0
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (4) _UART_ISR                                             2     2      0    1106
                                              2 BANK0      2     2      0
                        _ringbuf_pop
                        _ringbuf_put
                      i1_ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put                                          8     7      1     568
                                              7 COMMON     7     6      1
                                              0 BANK0      1     1      0
                      i1_ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_pop                                          8     8      0     361
                                              7 COMMON     6     6      0
                                              0 BANK0      2     2      0
                      i1_ringbuf_num
 ---------------------------------------------------------------------------------
 (5) i1_ringbuf_num                                        7     5      2     154
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_task
     _ringbuf_num
   _main_init
     _I2C_init
     _UART_init

 _isr (ROOT)
   _UART_ISR
     _ringbuf_pop
       i1_ringbuf_num
     _ringbuf_put
       i1_ringbuf_num
     i1_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      30       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C      22       6       42.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      30      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 15:55:49 2015

  __end_ofi1_ringbuf_num 00C8              __CFG_CP$OFF 0000                       _ms 0020  
           __CFG_CPD$OFF 0000                      u465 0039                      _isr 0004  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   l1083 0053                     l1159 01D1                     ?_isr 0070  
                   _WPUA 020C                     _WPUB 020D             __CFG_WRT$OFF 0000  
                   _main 01CD                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     ltemp 007E  
       __end_of_I2C_init 01CD                     start 0014                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ??_isr 003A  
          __CFG_PLLEN$ON 0000                    ?_main 0070                    _ADRES 009B  
          __CFG_WDTE$OFF 0000                    i1l138 0175                    i1l139 0173  
                  _RCREG 0199                    _TMR1H 0017                    _TMR1L 0016  
                  _SPBRG 019B                    u50_25 014A                    u45_25 008C  
                  u48_25 0100                    _TRISA 008C                    _TRISB 008D  
                  u49_25 012B                    _TXREG 019A           __CFG_FCMEN$OFF 0000  
       __end_of_UART_ISR 0189       __size_of_UART_init 0010       __size_of_UART_task 000F  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 0016             __end_of_main 01D5  
                 ??_main 0042                   _BCL1IF 0093                   _ANSELA 018C  
                 _ANSELB 018D                   i1l1103 0115                   i1l1113 0156  
                 i1l1055 00A6                   i1l1095 010C                   i1l1097 0113  
                 _FVRCON 0117                   _OSCCON 0099                   _SPBRGH 019C  
                 _SSP1IF 008B           __CFG_PWRTE$OFF 0000             ?_ringbuf_pop 0070  
           ?_ringbuf_num 003B             ?_ringbuf_put 0077        __end_of_UART_init 01B3  
      __end_of_UART_task 01C2                ?_I2C_init 0070  __end_of__initialization 001D  
         __pcstackCOMMON 0070                ?_UART_ISR 0070           _OPTION_REGbits 0095  
             ??_I2C_init 003B       __size_of_main_init 001A               __pbssBANK0 0020  
             __pmaintext 01CD               ??_UART_ISR 0038               __pintentry 0004  
                _SSP1ADD 0212                  _SSP1BUF 0211   __size_ofi1_ringbuf_num 0053  
   __size_of_ringbuf_pop 004F     __size_of_ringbuf_num 0054     __size_of_ringbuf_put 0047  
        __CFG_STVREN$OFF 0000        __end_of_main_init 01A3                  __ptext1 0189  
                __ptext2 01A3                  __ptext3 01C2                  __ptext4 01B3  
                __ptext5 0021                  __ptext7 015E                  __ptext8 0117  
                __ptext9 00C8                _T1CONbits 0018             __size_of_isr 0010  
                _uart_rx 0026                  _uart_tx 002E                  clrloop0 01D6  
   end_of_initialization 001D                _RCSTAbits 019D            i1_ringbuf_num 0075  
              _UART_init 01A3                _UART_task 01B3         __CFG_FOSC$INTOSC 0000  
      __size_of_I2C_init 000B                _TXSTAbits 019E           ?i1_ringbuf_num 0070  
         ringbuf_pop@ret 0036              _BAUDCONbits 019F        __size_of_UART_ISR 002B  
             ?_UART_init 0070               ?_UART_task 0070      start_initialization 0016  
            __end_of_isr 0014            UART_ISR@ascii 0039                ___latbits 0001  
          __pcstackBANK0 0036          millis_timer@cnt 0024          ??i1_ringbuf_num 0072  
            ??_UART_init 003B              ??_UART_task 0042                _main_init 0189  
               _I2C_init 01C2                clear_ram0 01D5                 _PIE1bits 0091  
               _PIR1bits 0011            ??_ringbuf_pop 0077            ??_ringbuf_num 003D  
          ??_ringbuf_put 0078                 _UART_ISR 015E                 _SSP1CON1 0215  
               _SSP1CON2 0216                 _SSP1STAT 0214               _ADCON0bits 009D  
             _ADCON1bits 009E               ?_main_init 0070            ringbuf_pop@rb 0037  
          ringbuf_num@rb 0041            ringbuf_put@rb 0036      __end_of_ringbuf_pop 0117  
    __end_of_ringbuf_num 0075      __end_of_ringbuf_put 015E                 __ptext10 0075  
           _SSP1CON2bits 0216            __size_of_main 0008                 int$flags 007E  
            ??_main_init 003B               _INTCONbits 000B     ringbuf_put@asciicode 0077  
               intlevel1 0000          i1ringbuf_num@rb 0076        __CFG_CLKOUTEN$OFF 0000  
            _ringbuf_pop 00C8              _ringbuf_num 0021              _ringbuf_put 0117  
