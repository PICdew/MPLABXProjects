

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jun 02 10:54:52 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     _ANCON0	set	3912
    30  0000                     _ANCON1	set	3913
    31  0000                     _T5CONbits	set	3874
    32  0000                     _ADRES	set	4035
    33  0000                     _ADCON0	set	4034
    34  0000                     _ADCON0bits	set	4034
    35  0000                     _ADCON1	set	4033
    36  0000                     _ADCON1bits	set	4033
    37  0000                     _BAUDCON1bits	set	3966
    38  0000                     _CTMUCONH	set	4019
    39  0000                     _CTMUCONHbits	set	4019
    40  0000                     _CTMUCONL	set	4018
    41  0000                     _CTMUCONLbits	set	4018
    42  0000                     _CTMUICON	set	4017
    43  0000                     _INTCON2bits	set	4081
    44  0000                     _INTCONbits	set	4082
    45  0000                     _IPR1bits	set	3999
    46  0000                     _IPR2bits	set	4002
    47  0000                     _IPR5bits	set	3993
    48  0000                     _OSCCONbits	set	4051
    49  0000                     _OSCTUNEbits	set	3995
    50  0000                     _PIE1bits	set	3997
    51  0000                     _PIE2bits	set	4000
    52  0000                     _PIE5bits	set	3985
    53  0000                     _PIR1bits	set	3998
    54  0000                     _PIR2bits	set	4001
    55  0000                     _PIR5bits	set	3992
    56  0000                     _PORTBbits	set	3969
    57  0000                     _RCREG1	set	4015
    58  0000                     _RCSTA1bits	set	4012
    59  0000                     _SPBRG1	set	4016
    60  0000                     _SPBRGH1	set	3967
    61  0000                     _T0CONbits	set	4053
    62  0000                     _T1CONbits	set	4045
    63  0000                     _T3CONbits	set	3961
    64  0000                     _TRISA	set	3986
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISC	set	3988
    67  0000                     _TXREG1	set	4014
    68  0000                     _TXSTA1bits	set	4013
    69  0000                     _LATB7	set	31831
    70                           
    71 ;;
    72 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    73 ;;
    74 ;; *************** function _main *****************
    75 ;; Defined at:
    76 ;;		line 79 in file "PIC18F27J53-encoder01.c"
    77 ;; Parameters:    Size  Location     Type
    78 ;;		None
    79 ;; Auto vars:     Size  Location     Type
    80 ;;  txbuf         100    0[BANK0 ] unsigned char [100]
    81 ;; Return value:  Size  Location     Type
    82 ;;                  2  249[None  ] int 
    83 ;; Registers used:
    84 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    85 ;; Tracked objects:
    86 ;;		On entry : 0/0
    87 ;;		On exit  : 0/0
    88 ;;		Unchanged: 0/0
    89 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    90 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    91 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    92 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    93 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    94 ;;Total ram usage:      102 bytes
    95 ;; Hardware stack levels required when called:    8
    96 ;; This function calls:
    97 ;;		_OSC_init
    98 ;;		_UART_init
    99 ;;		_ringbuf_init
   100 ;;		_timer0_init
   101 ;;		_tx_send
   102 ;;		_tx_sendn
   103 ;; This function is called by:
   104 ;;		Startup code after reset
   105 ;; This function uses a non-reentrant model
   106 ;;
   107                           
   108                           	psect	text0
   109  000268                     __ptext0:
   110                           	opt stack 0
   111  000268                     _main:
   112                           	opt stack 23
   113                           
   114                           ;PIC18F27J53-encoder01.c: 80: OSC_init();
   115                           
   116                           ;incstack = 0
   117  000268  EC5F  F003         	call	_OSC_init	;wreg free
   118                           
   119                           ;PIC18F27J53-encoder01.c: 81: TRISA = 0b00000000;
   120  00026C  0E00               	movlw	0
   121  00026E  6E92               	movwf	3986,c	;volatile
   122                           
   123                           ;PIC18F27J53-encoder01.c: 82: TRISB = 0b00000011;
   124  000270  0E03               	movlw	3
   125  000272  6E93               	movwf	3987,c	;volatile
   126                           
   127                           ;PIC18F27J53-encoder01.c: 83: TRISC = 0b10000000;
   128  000274  0E80               	movlw	128
   129  000276  6E94               	movwf	3988,c	;volatile
   130                           
   131                           ;PIC18F27J53-encoder01.c: 84: ANCON0 = 0b11111111;
   132  000278  010F               	movlb	15	; () banked
   133  00027A  6948               	setf	72,b	;volatile
   134                           
   135                           ; BSR set to: 15
   136                           ;PIC18F27J53-encoder01.c: 85: ANCON1 = 0b00011111;
   137  00027C  0E1F               	movlw	31
   138  00027E  010F               	movlb	15	; () banked
   139  000280  6F49               	movwf	73,b	;volatile
   140                           
   141                           ; BSR set to: 15
   142                           ;PIC18F27J53-encoder01.c: 86: INTCON2bits.RBPU = 0;
   143  000282  9EF1               	bcf	intcon2,7,c	;volatile
   144                           
   145                           ; BSR set to: 15
   146                           ;PIC18F27J53-encoder01.c: 88: timer0_init(3);
   147  000284  0E03               	movlw	3
   148  000286  ECF9  F002         	call	_timer0_init
   149                           
   150                           ;PIC18F27J53-encoder01.c: 90: UART_init();
   151  00028A  EC2B  F003         	call	_UART_init	;wreg free
   152                           
   153                           ;PIC18F27J53-encoder01.c: 91: uint8_t txbuf[100];
   154                           ;PIC18F27J53-encoder01.c: 92: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
   155  00028E  0E37               	movlw	low _tx_buf
   156  000290  6E1D               	movwf	ringbuf_init@rb,c
   157  000292  0E00               	movlw	high _tx_buf
   158  000294  6E1E               	movwf	ringbuf_init@rb+1,c
   159  000296  0E60               	movlw	low main@txbuf
   160  000298  6E1F               	movwf	ringbuf_init@internal_buf,c
   161  00029A  0E00               	movlw	high main@txbuf
   162  00029C  6E20               	movwf	ringbuf_init@internal_buf+1,c
   163  00029E  0E64               	movlw	100
   164  0002A0  6E21               	movwf	ringbuf_init@bufsize,c
   165  0002A2  ECD8  F002         	call	_ringbuf_init	;wreg free
   166                           
   167                           ;PIC18F27J53-encoder01.c: 94: INTCONbits.GIE = 1;
   168  0002A6  8EF2               	bsf	intcon,7,c	;volatile
   169  0002A8  D000               	goto	l1544
   170  0002AA                     l1544:
   171                           
   172                           ;PIC18F27J53-encoder01.c: 97: static int16_t prev_e;
   173                           ;PIC18F27J53-encoder01.c: 98: if (encoder != prev_e) {
   174  0002AA  0100               	movlb	0	; () banked
   175  0002AC  51C6               	movf	main@prev_e& (0+255),w,b
   176  0002AE  0100               	movlb	0	; () banked
   177  0002B0  19C4               	xorwf	_encoder& (0+255),w,b
   178  0002B2  E106               	bnz	u800
   179  0002B4  0100               	movlb	0	; () banked
   180  0002B6  51C7               	movf	(main@prev_e+1)& (0+255),w,b
   181  0002B8  0100               	movlb	0	; () banked
   182  0002BA  19C5               	xorwf	(_encoder+1)& (0+255),w,b
   183  0002BC  B4D8               	btfsc	status,2,c
   184  0002BE  D7F5               	goto	l1544
   185  0002C0                     u800:
   186                           
   187                           ; BSR set to: 0
   188                           ;PIC18F27J53-encoder01.c: 99: prev_e = encoder;
   189  0002C0  C0C4  F0C6         	movff	_encoder,main@prev_e
   190  0002C4  C0C5  F0C7         	movff	_encoder+1,main@prev_e+1
   191                           
   192                           ; BSR set to: 0
   193                           ;PIC18F27J53-encoder01.c: 100: if (encoder < 0) {
   194  0002C8  0100               	movlb	0	; () banked
   195  0002CA  AFC5               	btfss	(_encoder+1)& (0+255),7,b
   196  0002CC  D017               	goto	l1552
   197                           
   198                           ; BSR set to: 0
   199                           ;PIC18F27J53-encoder01.c: 101: tx_send('-');
   200  0002CE  0E2D               	movlw	45
   201  0002D0  EC49  F003         	call	_tx_send
   202                           
   203                           ;PIC18F27J53-encoder01.c: 102: tx_sendn(-encoder, 5);
   204  0002D4  C0C4  F030         	movff	_encoder,??_main
   205  0002D8  C0C5  F031         	movff	_encoder+1,??_main+1
   206  0002DC  1E30               	comf	??_main,f,c
   207  0002DE  1E31               	comf	??_main+1,f,c
   208  0002E0  4A30               	infsnz	??_main,f,c
   209  0002E2  2A31               	incf	??_main+1,f,c
   210  0002E4  C030  F02A         	movff	??_main,tx_sendn@value
   211  0002E8  C031  F02B         	movff	??_main+1,tx_sendn@value+1
   212  0002EC  0E05               	movlw	5
   213  0002EE  6E2C               	movwf	tx_sendn@digits,c
   214  0002F0  EC50  F002         	call	_tx_sendn	;wreg free
   215                           
   216                           ;PIC18F27J53-encoder01.c: 103: tx_send('\n');
   217  0002F4  0E0A               	movlw	10
   218  0002F6  EC49  F003         	call	_tx_send
   219                           
   220                           ;PIC18F27J53-encoder01.c: 104: } else {
   221  0002FA  D7D7               	goto	l1544
   222  0002FC                     l1552:
   223                           
   224                           ;PIC18F27J53-encoder01.c: 105: tx_sendn(encoder, 5);
   225  0002FC  C0C4  F02A         	movff	_encoder,tx_sendn@value
   226  000300  C0C5  F02B         	movff	_encoder+1,tx_sendn@value+1
   227  000304  0E05               	movlw	5
   228  000306  6E2C               	movwf	tx_sendn@digits,c
   229  000308  EC50  F002         	call	_tx_sendn	;wreg free
   230                           
   231                           ;PIC18F27J53-encoder01.c: 106: tx_send('\n');
   232  00030C  0E0A               	movlw	10
   233  00030E  EC49  F003         	call	_tx_send
   234  000312  D7CB               	goto	l1544
   235                           
   236                           ;PIC18F27J53-encoder01.c: 107: }
   237                           ;PIC18F27J53-encoder01.c: 108: }
   238                           ;PIC18F27J53-encoder01.c: 109: }
   239                           ;PIC18F27J53-encoder01.c: 110: return 0;
   240                           ;	Return value of _main is never used
   241  000314  EF78  F000         	goto	start
   242  000318                     __end_of_main:
   243                           	opt stack 0
   244                           intcon	equ	0xFF2
   245                           intcon2	equ	0xFF1
   246                           status	equ	0xFD8
   247                           
   248                           	psect	cinit
   249  000676                     __pcinit:
   250                           	opt stack 0
   251  000676                     start_initialization:
   252                           	opt stack 0
   253  000676                     __initialization:
   254                           	opt stack 0
   255                           
   256                           ; Clear objects allocated to BANK0 (4 bytes)
   257  000676  0100               	movlb	0
   258  000678  6BC7               	clrf	(__pbssBANK0+3)& (0+255),b
   259  00067A  6BC6               	clrf	(__pbssBANK0+2)& (0+255),b
   260  00067C  6BC5               	clrf	(__pbssBANK0+1)& (0+255),b
   261  00067E  6BC4               	clrf	__pbssBANK0& (0+255),b
   262                           
   263                           ; Clear objects allocated to COMRAM (10 bytes)
   264  000680  EE00  F032         	lfsr	0,__pbssCOMRAM
   265  000684  0E0A               	movlw	10
   266  000686                     clear_0:
   267  000686  6AEE               	clrf	postinc0,c
   268  000688  06E8               	decf	wreg,f,c
   269  00068A  E1FD               	bnz	clear_0
   270  00068C                     end_of_initialization:
   271                           	opt stack 0
   272  00068C                     __end_of__initialization:
   273                           	opt stack 0
   274  00068C  0100               	movlb	0
   275  00068E  EF34  F001         	goto	_main	;jump to C main() function
   276                           intcon	equ	0xFF2
   277                           intcon2	equ	0xFF1
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           status	equ	0xFD8
   281                           
   282                           	psect	bssCOMRAM
   283  000032                     __pbssCOMRAM:
   284                           	opt stack 0
   285  000032                     _d1:
   286                           	opt stack 0
   287  000032                     	ds	3
   288  000035                     ISR@prev_A:
   289                           	opt stack 0
   290  000035                     	ds	1
   291  000036                     ISR@prev_B:
   292                           	opt stack 0
   293  000036                     	ds	1
   294  000037                     _tx_buf:
   295                           	opt stack 0
   296  000037                     	ds	5
   297                           intcon	equ	0xFF2
   298                           intcon2	equ	0xFF1
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           status	equ	0xFD8
   302                           
   303                           	psect	bssBANK0
   304  0000C4                     __pbssBANK0:
   305                           	opt stack 0
   306  0000C4                     _encoder:
   307                           	opt stack 0
   308  0000C4                     	ds	2
   309  0000C6                     main@prev_e:
   310                           	opt stack 0
   311  0000C6                     	ds	2
   312                           intcon	equ	0xFF2
   313                           intcon2	equ	0xFF1
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           status	equ	0xFD8
   317                           
   318                           	psect	cstackBANK0
   319  000060                     __pcstackBANK0:
   320                           	opt stack 0
   321  000060                     main@txbuf:
   322                           	opt stack 0
   323                           
   324                           ; 100 bytes @ 0x0
   325  000060                     	ds	100
   326                           intcon	equ	0xFF2
   327                           intcon2	equ	0xFF1
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           status	equ	0xFD8
   331                           
   332                           	psect	cstackCOMRAM
   333  000001                     __pcstackCOMRAM:
   334                           	opt stack 0
   335  000001                     i2ringbuf_num@rb:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x0
   339  000001                     	ds	2
   340  000003                     ??i2_ringbuf_num:
   341                           
   342                           ; 0 bytes @ 0x2
   343  000003                     	ds	2
   344  000005                     ringbuf_pop@rb:
   345                           	opt stack 0
   346  000005                     i2ringbuf_push@rb:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350  000005                     	ds	2
   351  000007                     ??_ringbuf_pop:
   352  000007                     i2ringbuf_push@asciicode:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x6
   356  000007                     	ds	1
   357  000008                     ??i2_ringbuf_push:
   358                           
   359                           ; 0 bytes @ 0x7
   360  000008                     	ds	2
   361  00000A                     ringbuf_pop@ret:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x9
   365  00000A                     	ds	1
   366  00000B                     
   367                           ; 0 bytes @ 0xA
   368  00000B                     	ds	2
   369  00000D                     i2tx_send@asciicode:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  00000D                     	ds	1
   374  00000E                     ??_ISR:
   375                           
   376                           ; 0 bytes @ 0xD
   377  00000E                     	ds	14
   378  00001C                     ISR@ascii:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x1B
   382  00001C                     	ds	1
   383  00001D                     ??_timer0_init:
   384  00001D                     ?___lwdiv:
   385                           	opt stack 0
   386  00001D                     ?___lwmod:
   387                           	opt stack 0
   388  00001D                     ringbuf_init@rb:
   389                           	opt stack 0
   390  00001D                     ringbuf_num@rb:
   391                           	opt stack 0
   392  00001D                     ___lwdiv@dividend:
   393                           	opt stack 0
   394  00001D                     ___lwmod@dividend:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x1C
   398  00001D                     	ds	1
   399  00001E                     timer0_init@prescaler:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x1D
   403  00001E                     	ds	1
   404  00001F                     ??_ringbuf_num:
   405  00001F                     ringbuf_init@internal_buf:
   406                           	opt stack 0
   407  00001F                     ___lwdiv@divisor:
   408                           	opt stack 0
   409  00001F                     ___lwmod@divisor:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x1E
   413  00001F                     	ds	2
   414  000021                     ringbuf_init@bufsize:
   415                           	opt stack 0
   416  000021                     ___lwmod@counter:
   417                           	opt stack 0
   418  000021                     ringbuf_push@rb:
   419                           	opt stack 0
   420  000021                     ___lwdiv@quotient:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x20
   424  000021                     	ds	1
   425  000022                     
   426                           ; 0 bytes @ 0x21
   427  000022                     	ds	1
   428  000023                     ringbuf_push@asciicode:
   429                           	opt stack 0
   430  000023                     ___lwdiv@counter:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x22
   434  000023                     	ds	1
   435  000024                     ??_ringbuf_push:
   436                           
   437                           ; 0 bytes @ 0x23
   438  000024                     	ds	5
   439  000029                     tx_send@asciicode:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x28
   443  000029                     	ds	1
   444  00002A                     tx_sendn@value:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x29
   448  00002A                     	ds	2
   449  00002C                     tx_sendn@digits:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x2B
   453  00002C                     	ds	1
   454  00002D                     tx_sendn@i:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x2C
   458  00002D                     	ds	1
   459  00002E                     tx_sendn@temp:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x2D
   463  00002E                     	ds	2
   464  000030                     ??_main:
   465                           
   466                           ; 0 bytes @ 0x2F
   467  000030                     	ds	2
   468                           intcon	equ	0xFF2
   469                           intcon2	equ	0xFF1
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           status	equ	0xFD8
   473                           
   474 ;; *************** function _tx_sendn *****************
   475 ;; Defined at:
   476 ;;		line 284 in file "../My_header\My_header.h"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  value           2   41[COMRAM] const unsigned int 
   479 ;;  digits          1   43[COMRAM] unsigned char 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  i               1   44[COMRAM] unsigned char 
   482 ;;  temp            2   45[COMRAM] unsigned int 
   483 ;; Return value:  Size  Location     Type
   484 ;;		None               void
   485 ;; Registers used:
   486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   492 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   493 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   495 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   496 ;;Total ram usage:        6 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; Hardware stack levels required when called:    7
   499 ;; This function calls:
   500 ;;		___lwdiv
   501 ;;		___lwmod
   502 ;;		_tx_send
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text1
   509  0004A0                     __ptext1:
   510                           	opt stack 0
   511  0004A0                     _tx_sendn:
   512                           	opt stack 23
   513                           
   514                           ;My_header\My_header.h: 285: while (digits--) {
   515                           
   516                           ;incstack = 0
   517  0004A0  D02E               	goto	l1452
   518  0004A2                     l165:
   519                           
   520                           ;My_header\My_header.h: 286: uint16_t temp = value;
   521  0004A2  C02A  F02E         	movff	tx_sendn@value,tx_sendn@temp
   522  0004A6  C02B  F02F         	movff	tx_sendn@value+1,tx_sendn@temp+1
   523                           
   524                           ;My_header\My_header.h: 287: for (uint8_t i = 0; i < digits; i++) {
   525  0004AA  0E00               	movlw	0
   526  0004AC  6E2D               	movwf	tx_sendn@i,c
   527  0004AE  D010               	goto	l1446
   528  0004B0                     l1442:
   529                           
   530                           ;My_header\My_header.h: 288: temp /= 10;
   531  0004B0  C02E  F01D         	movff	tx_sendn@temp,___lwdiv@dividend
   532  0004B4  C02F  F01E         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
   533  0004B8  0E00               	movlw	0
   534  0004BA  6E20               	movwf	___lwdiv@divisor+1,c
   535  0004BC  0E0A               	movlw	10
   536  0004BE  6E1F               	movwf	___lwdiv@divisor,c
   537  0004C0  EC84  F002         	call	___lwdiv	;wreg free
   538  0004C4  C01D  F02E         	movff	?___lwdiv,tx_sendn@temp
   539  0004C8  C01E  F02F         	movff	?___lwdiv+1,tx_sendn@temp+1
   540  0004CC  2A2D               	incf	tx_sendn@i,f,c
   541  0004CE  D000               	goto	l1446
   542  0004D0                     l1446:
   543  0004D0  502C               	movf	tx_sendn@digits,w,c
   544  0004D2  5C2D               	subwf	tx_sendn@i,w,c
   545  0004D4  A0D8               	btfss	status,0,c
   546  0004D6  D7EC               	goto	l1442
   547                           
   548                           ;My_header\My_header.h: 289: }
   549                           ;My_header\My_header.h: 290: temp %= 10;
   550  0004D8  C02E  F01D         	movff	tx_sendn@temp,___lwmod@dividend
   551  0004DC  C02F  F01E         	movff	tx_sendn@temp+1,___lwmod@dividend+1
   552  0004E0  0E00               	movlw	0
   553  0004E2  6E20               	movwf	___lwmod@divisor+1,c
   554  0004E4  0E0A               	movlw	10
   555  0004E6  6E1F               	movwf	___lwmod@divisor,c
   556  0004E8  ECB2  F002         	call	___lwmod	;wreg free
   557  0004EC  C01D  F02E         	movff	?___lwmod,tx_sendn@temp
   558  0004F0  C01E  F02F         	movff	?___lwmod+1,tx_sendn@temp+1
   559                           
   560                           ;My_header\My_header.h: 291: tx_send('0' + temp);
   561  0004F4  502E               	movf	tx_sendn@temp,w,c
   562  0004F6  0F30               	addlw	48
   563  0004F8  EC49  F003         	call	_tx_send
   564  0004FC  D000               	goto	l1452
   565  0004FE                     l1452:
   566  0004FE  062C               	decf	tx_sendn@digits,f,c
   567  000500  282C               	incf	tx_sendn@digits,w,c
   568  000502  A4D8               	btfss	status,2,c
   569  000504  D7CE               	goto	l165
   570  000506  0012               	return		;funcret
   571  000508                     __end_of_tx_sendn:
   572                           	opt stack 0
   573                           intcon	equ	0xFF2
   574                           intcon2	equ	0xFF1
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           status	equ	0xFD8
   578                           
   579 ;; *************** function _tx_send *****************
   580 ;; Defined at:
   581 ;;		line 234 in file "../My_header\My_header.h"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  asciicode       1    wreg     const unsigned char 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  asciicode       1   40[COMRAM] const unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;		None               void
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    6
   602 ;; This function calls:
   603 ;;		_ringbuf_push
   604 ;; This function is called by:
   605 ;;		_tx_sendn
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text2
   611  000692                     __ptext2:
   612                           	opt stack 0
   613  000692                     _tx_send:
   614                           	opt stack 23
   615                           
   616                           ;incstack = 0
   617                           ;tx_send@asciicode stored from wreg
   618  000692  6E29               	movwf	tx_send@asciicode,c
   619                           
   620                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
   621  000694  0E37               	movlw	low _tx_buf
   622  000696  6E21               	movwf	ringbuf_push@rb,c
   623  000698  0E00               	movlw	high _tx_buf
   624  00069A  6E22               	movwf	ringbuf_push@rb+1,c
   625  00069C  C029  F023         	movff	tx_send@asciicode,ringbuf_push@asciicode
   626  0006A0  EC7A  F000         	call	_ringbuf_push	;wreg free
   627                           
   628                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
   629  0006A4  889D               	bsf	3997,4,c	;volatile
   630  0006A6  0012               	return		;funcret
   631  0006A8                     __end_of_tx_send:
   632                           	opt stack 0
   633                           intcon	equ	0xFF2
   634                           intcon2	equ	0xFF1
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           status	equ	0xFD8
   638                           
   639 ;; *************** function _ringbuf_push *****************
   640 ;; Defined at:
   641 ;;		line 37 in file "../My_header\My_ringbuf.h"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  rb              2   32[COMRAM] PTR struct ringbuf
   644 ;;		 -> tx_buf(5), 
   645 ;;  asciicode       1   34[COMRAM] unsigned char 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;		None               void
   650 ;; Registers used:
   651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   657 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   659 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;Total ram usage:        8 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    5
   664 ;; This function calls:
   665 ;;		_ringbuf_num
   666 ;; This function is called by:
   667 ;;		_tx_send
   668 ;;		_tx_sends
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text3
   673  0000F4                     __ptext3:
   674                           	opt stack 0
   675  0000F4                     _ringbuf_push:
   676                           	opt stack 23
   677                           
   678                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
   679                           
   680                           ;incstack = 0
   681  0000F4  C021  F01D         	movff	ringbuf_push@rb,ringbuf_num@rb
   682  0000F8  C022  F01E         	movff	ringbuf_push@rb+1,ringbuf_num@rb+1
   683  0000FC  ECD4  F001         	call	_ringbuf_num	;wreg free
   684  000100  6E24               	movwf	??_ringbuf_push& (0+255),c
   685  000102  EE20 F002          	lfsr	2,2
   686  000106  5021               	movf	ringbuf_push@rb,w,c
   687  000108  26D9               	addwf	fsr2l,f,c
   688  00010A  5022               	movf	ringbuf_push@rb+1,w,c
   689  00010C  22DA               	addwfc	fsr2h,f,c
   690  00010E  50DE               	movf	postinc2,w,c
   691  000110  5C24               	subwf	??_ringbuf_push,w,c
   692  000112  B0D8               	btfsc	status,0,c
   693  000114  0012               	return	
   694                           
   695                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
   696  000116  EE20 F003          	lfsr	2,3
   697  00011A  5021               	movf	ringbuf_push@rb,w,c
   698  00011C  26D9               	addwf	fsr2l,f,c
   699  00011E  5022               	movf	ringbuf_push@rb+1,w,c
   700  000120  22DA               	addwfc	fsr2h,f,c
   701  000122  50DF               	movf	indf2,w,c
   702  000124  6E24               	movwf	??_ringbuf_push& (0+255),c
   703  000126  5024               	movf	??_ringbuf_push,w,c
   704  000128  0D01               	mullw	1
   705  00012A  C021  FFD9         	movff	ringbuf_push@rb,fsr2l
   706  00012E  C022  FFDA         	movff	ringbuf_push@rb+1,fsr2h
   707  000132  CFDE F025          	movff	postinc2,??_ringbuf_push+1
   708  000136  CFDD F026          	movff	postdec2,??_ringbuf_push+2
   709  00013A  50F3               	movf	prodl,w,c
   710  00013C  2425               	addwf	??_ringbuf_push+1,w,c
   711  00013E  6ED9               	movwf	fsr2l,c
   712  000140  50F4               	movf	prodh,w,c
   713  000142  2026               	addwfc	??_ringbuf_push+2,w,c
   714  000144  6EDA               	movwf	fsr2h,c
   715  000146  C023  FFDF         	movff	ringbuf_push@asciicode,indf2
   716                           
   717                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
   718  00014A  EE20 F002          	lfsr	2,2
   719  00014E  5021               	movf	ringbuf_push@rb,w,c
   720  000150  26D9               	addwf	fsr2l,f,c
   721  000152  5022               	movf	ringbuf_push@rb+1,w,c
   722  000154  22DA               	addwfc	fsr2h,f,c
   723  000156  50DF               	movf	indf2,w,c
   724  000158  6E24               	movwf	??_ringbuf_push& (0+255),c
   725  00015A  6A25               	clrf	(??_ringbuf_push+1)& (0+255),c
   726  00015C  EE20 F003          	lfsr	2,3
   727  000160  5021               	movf	ringbuf_push@rb,w,c
   728  000162  26D9               	addwf	fsr2l,f,c
   729  000164  5022               	movf	ringbuf_push@rb+1,w,c
   730  000166  22DA               	addwfc	fsr2h,f,c
   731  000168  50DF               	movf	indf2,w,c
   732  00016A  6E26               	movwf	(??_ringbuf_push+2)& (0+255),c
   733  00016C  6A27               	clrf	(??_ringbuf_push+3)& (0+255),c
   734  00016E  0E01               	movlw	1
   735  000170  2626               	addwf	??_ringbuf_push+2,f,c
   736  000172  0E00               	movlw	0
   737  000174  2227               	addwfc	??_ringbuf_push+3,f,c
   738  000176  5024               	movf	??_ringbuf_push,w,c
   739  000178  5C26               	subwf	??_ringbuf_push+2,w,c
   740  00017A  5027               	movf	??_ringbuf_push+3,w,c
   741  00017C  0A80               	xorlw	128
   742  00017E  6E28               	movwf	(??_ringbuf_push+4)& (0+255),c
   743  000180  5025               	movf	??_ringbuf_push+1,w,c
   744  000182  0A80               	xorlw	128
   745  000184  5828               	subwfb	(??_ringbuf_push+4)& (0+255),w,c
   746  000186  B0D8               	btfsc	status,0,c
   747  000188  D008               	goto	l1304
   748  00018A  EE20 F003          	lfsr	2,3
   749  00018E  5021               	movf	ringbuf_push@rb,w,c
   750  000190  26D9               	addwf	fsr2l,f,c
   751  000192  5022               	movf	ringbuf_push@rb+1,w,c
   752  000194  22DA               	addwfc	fsr2h,f,c
   753  000196  2ADF               	incf	indf2,f,c
   754  000198  0012               	return	
   755  00019A                     l1304:
   756                           
   757                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
   758  00019A  EE20 F003          	lfsr	2,3
   759  00019E  5021               	movf	ringbuf_push@rb,w,c
   760  0001A0  26D9               	addwf	fsr2l,f,c
   761  0001A2  5022               	movf	ringbuf_push@rb+1,w,c
   762  0001A4  22DA               	addwfc	fsr2h,f,c
   763  0001A6  0E00               	movlw	0
   764  0001A8  6EDF               	movwf	indf2,c
   765  0001AA  0012               	return	
   766  0001AC  0012               	return		;funcret
   767  0001AE                     __end_of_ringbuf_push:
   768                           	opt stack 0
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           intcon	equ	0xFF2
   772                           intcon2	equ	0xFF1
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           indf2	equ	0xFDF
   776                           postinc2	equ	0xFDE
   777                           postdec2	equ	0xFDD
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function _ringbuf_num *****************
   783 ;; Defined at:
   784 ;;		line 29 in file "../My_header\My_ringbuf.h"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  rb              2   28[COMRAM] PTR struct ringbuf
   787 ;;		 -> tx_buf(5), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      unsigned char 
   792 ;; Registers used:
   793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;Total ram usage:        4 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    4
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_ringbuf_push
   810 ;;		_ringbuf_backspace
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text4
   815  0003A8                     __ptext4:
   816                           	opt stack 0
   817  0003A8                     _ringbuf_num:
   818                           	opt stack 23
   819                           
   820                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
   821                           
   822                           ;incstack = 0
   823  0003A8  EE20 F004          	lfsr	2,4
   824  0003AC  501D               	movf	ringbuf_num@rb,w,c
   825  0003AE  26D9               	addwf	fsr2l,f,c
   826  0003B0  501E               	movf	ringbuf_num@rb+1,w,c
   827  0003B2  22DA               	addwfc	fsr2h,f,c
   828  0003B4  EE10 F003          	lfsr	1,3
   829  0003B8  501D               	movf	ringbuf_num@rb,w,c
   830  0003BA  26E1               	addwf	fsr1l,f,c
   831  0003BC  501E               	movf	ringbuf_num@rb+1,w,c
   832  0003BE  22E2               	addwfc	fsr1h,f,c
   833  0003C0  50DE               	movf	postinc2,w,c
   834  0003C2  5CE6               	subwf	postinc1,w,c
   835  0003C4  A0D8               	btfss	status,0,c
   836  0003C6  D012               	goto	l1292
   837                           
   838                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
   839  0003C8  EE20 F003          	lfsr	2,3
   840  0003CC  501D               	movf	ringbuf_num@rb,w,c
   841  0003CE  26D9               	addwf	fsr2l,f,c
   842  0003D0  501E               	movf	ringbuf_num@rb+1,w,c
   843  0003D2  22DA               	addwfc	fsr2h,f,c
   844  0003D4  50DF               	movf	indf2,w,c
   845  0003D6  6E1F               	movwf	??_ringbuf_num& (0+255),c
   846  0003D8  EE20 F004          	lfsr	2,4
   847  0003DC  501D               	movf	ringbuf_num@rb,w,c
   848  0003DE  26D9               	addwf	fsr2l,f,c
   849  0003E0  501E               	movf	ringbuf_num@rb+1,w,c
   850  0003E2  22DA               	addwfc	fsr2h,f,c
   851  0003E4  50DF               	movf	indf2,w,c
   852  0003E6  0800               	sublw	0
   853  0003E8  241F               	addwf	??_ringbuf_num,w,c
   854                           
   855                           ;My_header\My_ringbuf.h: 32: } else {
   856  0003EA  0012               	return	
   857  0003EC                     l1292:
   858                           
   859                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
   860  0003EC  EE20 F003          	lfsr	2,3
   861  0003F0  501D               	movf	ringbuf_num@rb,w,c
   862  0003F2  26D9               	addwf	fsr2l,f,c
   863  0003F4  501E               	movf	ringbuf_num@rb+1,w,c
   864  0003F6  22DA               	addwfc	fsr2h,f,c
   865  0003F8  50DF               	movf	indf2,w,c
   866  0003FA  6E1F               	movwf	??_ringbuf_num& (0+255),c
   867  0003FC  EE20 F002          	lfsr	2,2
   868  000400  501D               	movf	ringbuf_num@rb,w,c
   869  000402  26D9               	addwf	fsr2l,f,c
   870  000404  501E               	movf	ringbuf_num@rb+1,w,c
   871  000406  22DA               	addwfc	fsr2h,f,c
   872  000408  50DF               	movf	indf2,w,c
   873  00040A  6E20               	movwf	(??_ringbuf_num+1)& (0+255),c
   874  00040C  EE20 F004          	lfsr	2,4
   875  000410  501D               	movf	ringbuf_num@rb,w,c
   876  000412  26D9               	addwf	fsr2l,f,c
   877  000414  501E               	movf	ringbuf_num@rb+1,w,c
   878  000416  22DA               	addwfc	fsr2h,f,c
   879  000418  50DF               	movf	indf2,w,c
   880  00041A  0800               	sublw	0
   881  00041C  2420               	addwf	??_ringbuf_num+1,w,c
   882  00041E  241F               	addwf	??_ringbuf_num,w,c
   883  000420  0012               	return	
   884  000422  0012               	return		;funcret
   885  000424                     __end_of_ringbuf_num:
   886                           	opt stack 0
   887                           prodh	equ	0xFF4
   888                           prodl	equ	0xFF3
   889                           intcon	equ	0xFF2
   890                           intcon2	equ	0xFF1
   891                           postinc0	equ	0xFEE
   892                           wreg	equ	0xFE8
   893                           postinc1	equ	0xFE6
   894                           fsr1h	equ	0xFE2
   895                           fsr1l	equ	0xFE1
   896                           indf2	equ	0xFDF
   897                           postinc2	equ	0xFDE
   898                           postdec2	equ	0xFDD
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function ___lwmod *****************
   904 ;; Defined at:
   905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  dividend        2   28[COMRAM] unsigned int 
   908 ;;  divisor         2   30[COMRAM] unsigned int 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  counter         1   32[COMRAM] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  2   28[COMRAM] unsigned int 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;Total ram usage:        5 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    4
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_tx_sendn
   931 ;;		_utoa
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text5
   936  000564                     __ptext5:
   937                           	opt stack 0
   938  000564                     ___lwmod:
   939                           	opt stack 25
   940                           
   941                           ;incstack = 0
   942  000564  501F               	movf	___lwmod@divisor,w,c
   943  000566  1020               	iorwf	___lwmod@divisor+1,w,c
   944  000568  B4D8               	btfsc	status,2,c
   945  00056A  D01D               	goto	l789
   946  00056C  0E01               	movlw	1
   947  00056E  6E21               	movwf	___lwmod@counter,c
   948  000570  D005               	goto	l1370
   949  000572                     l1368:
   950  000572  90D8               	bcf	status,0,c
   951  000574  361F               	rlcf	___lwmod@divisor,f,c
   952  000576  3620               	rlcf	___lwmod@divisor+1,f,c
   953  000578  2A21               	incf	___lwmod@counter,f,c
   954  00057A  D000               	goto	l1370
   955  00057C                     l1370:
   956  00057C  BE20               	btfsc	___lwmod@divisor+1,7,c
   957  00057E  D002               	goto	l1372
   958  000580  D7F8               	goto	l1368
   959  000582  D000               	goto	l1372
   960  000584                     l1372:
   961  000584  501F               	movf	___lwmod@divisor,w,c
   962  000586  5C1D               	subwf	___lwmod@dividend,w,c
   963  000588  5020               	movf	___lwmod@divisor+1,w,c
   964  00058A  581E               	subwfb	___lwmod@dividend+1,w,c
   965  00058C  A0D8               	btfss	status,0,c
   966  00058E  D005               	goto	l1376
   967  000590  501F               	movf	___lwmod@divisor,w,c
   968  000592  5E1D               	subwf	___lwmod@dividend,f,c
   969  000594  5020               	movf	___lwmod@divisor+1,w,c
   970  000596  5A1E               	subwfb	___lwmod@dividend+1,f,c
   971  000598  D000               	goto	l1376
   972  00059A                     l1376:
   973  00059A  90D8               	bcf	status,0,c
   974  00059C  3220               	rrcf	___lwmod@divisor+1,f,c
   975  00059E  321F               	rrcf	___lwmod@divisor,f,c
   976  0005A0  2E21               	decfsz	___lwmod@counter,f,c
   977  0005A2  D7F0               	goto	l1372
   978  0005A4  D000               	goto	l789
   979  0005A6                     l789:
   980  0005A6  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
   981  0005AA  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
   982  0005AE  0012               	return		;funcret
   983  0005B0                     __end_of___lwmod:
   984                           	opt stack 0
   985                           prodh	equ	0xFF4
   986                           prodl	equ	0xFF3
   987                           intcon	equ	0xFF2
   988                           intcon2	equ	0xFF1
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postinc1	equ	0xFE6
   992                           fsr1h	equ	0xFE2
   993                           fsr1l	equ	0xFE1
   994                           indf2	equ	0xFDF
   995                           postinc2	equ	0xFDE
   996                           postdec2	equ	0xFDD
   997                           fsr2h	equ	0xFDA
   998                           fsr2l	equ	0xFD9
   999                           status	equ	0xFD8
  1000                           
  1001 ;; *************** function ___lwdiv *****************
  1002 ;; Defined at:
  1003 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  dividend        2   28[COMRAM] unsigned int 
  1006 ;;  divisor         2   30[COMRAM] unsigned int 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  quotient        2   32[COMRAM] unsigned int 
  1009 ;;  counter         1   34[COMRAM] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  2   28[COMRAM] unsigned int 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1022 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1023 ;;Total ram usage:        7 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    4
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_tx_sendn
  1030 ;;		_utoa
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text6
  1035  000508                     __ptext6:
  1036                           	opt stack 0
  1037  000508                     ___lwdiv:
  1038                           	opt stack 25
  1039                           
  1040                           ;incstack = 0
  1041  000508  0E00               	movlw	0
  1042  00050A  6E22               	movwf	___lwdiv@quotient+1,c
  1043  00050C  0E00               	movlw	0
  1044  00050E  6E21               	movwf	___lwdiv@quotient,c
  1045  000510  501F               	movf	___lwdiv@divisor,w,c
  1046  000512  1020               	iorwf	___lwdiv@divisor+1,w,c
  1047  000514  B4D8               	btfsc	status,2,c
  1048  000516  D021               	goto	l779
  1049  000518  0E01               	movlw	1
  1050  00051A  6E23               	movwf	___lwdiv@counter,c
  1051  00051C  D005               	goto	l1350
  1052  00051E                     l1348:
  1053  00051E  90D8               	bcf	status,0,c
  1054  000520  361F               	rlcf	___lwdiv@divisor,f,c
  1055  000522  3620               	rlcf	___lwdiv@divisor+1,f,c
  1056  000524  2A23               	incf	___lwdiv@counter,f,c
  1057  000526  D000               	goto	l1350
  1058  000528                     l1350:
  1059  000528  BE20               	btfsc	___lwdiv@divisor+1,7,c
  1060  00052A  D002               	goto	l1352
  1061  00052C  D7F8               	goto	l1348
  1062  00052E  D000               	goto	l1352
  1063  000530                     l1352:
  1064  000530  90D8               	bcf	status,0,c
  1065  000532  3621               	rlcf	___lwdiv@quotient,f,c
  1066  000534  3622               	rlcf	___lwdiv@quotient+1,f,c
  1067  000536  501F               	movf	___lwdiv@divisor,w,c
  1068  000538  5C1D               	subwf	___lwdiv@dividend,w,c
  1069  00053A  5020               	movf	___lwdiv@divisor+1,w,c
  1070  00053C  581E               	subwfb	___lwdiv@dividend+1,w,c
  1071  00053E  A0D8               	btfss	status,0,c
  1072  000540  D006               	goto	l1360
  1073  000542  501F               	movf	___lwdiv@divisor,w,c
  1074  000544  5E1D               	subwf	___lwdiv@dividend,f,c
  1075  000546  5020               	movf	___lwdiv@divisor+1,w,c
  1076  000548  5A1E               	subwfb	___lwdiv@dividend+1,f,c
  1077  00054A  8021               	bsf	___lwdiv@quotient,0,c
  1078  00054C  D000               	goto	l1360
  1079  00054E                     l1360:
  1080  00054E  90D8               	bcf	status,0,c
  1081  000550  3220               	rrcf	___lwdiv@divisor+1,f,c
  1082  000552  321F               	rrcf	___lwdiv@divisor,f,c
  1083  000554  2E23               	decfsz	___lwdiv@counter,f,c
  1084  000556  D7EC               	goto	l1352
  1085  000558  D000               	goto	l779
  1086  00055A                     l779:
  1087  00055A  C021  F01D         	movff	___lwdiv@quotient,?___lwdiv
  1088  00055E  C022  F01E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1089  000562  0012               	return		;funcret
  1090  000564                     __end_of___lwdiv:
  1091                           	opt stack 0
  1092                           prodh	equ	0xFF4
  1093                           prodl	equ	0xFF3
  1094                           intcon	equ	0xFF2
  1095                           intcon2	equ	0xFF1
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           postinc1	equ	0xFE6
  1099                           fsr1h	equ	0xFE2
  1100                           fsr1l	equ	0xFE1
  1101                           indf2	equ	0xFDF
  1102                           postinc2	equ	0xFDE
  1103                           postdec2	equ	0xFDD
  1104                           fsr2h	equ	0xFDA
  1105                           fsr2l	equ	0xFD9
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _timer0_init *****************
  1109 ;; Defined at:
  1110 ;;		line 16 in file "../My_header\My_header.h"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  prescaler       1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  prescaler       1   29[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    4
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text7
  1139  0005F2                     __ptext7:
  1140                           	opt stack 0
  1141  0005F2                     _timer0_init:
  1142                           	opt stack 26
  1143                           
  1144                           ;incstack = 0
  1145                           ;timer0_init@prescaler stored from wreg
  1146  0005F2  6E1E               	movwf	timer0_init@prescaler,c
  1147                           
  1148                           ;My_header\My_header.h: 17: T0CONbits.TMR0ON = 1;
  1149  0005F4  8ED5               	bsf	4053,7,c	;volatile
  1150                           
  1151                           ;My_header\My_header.h: 18: T0CONbits.T08BIT = 1;
  1152  0005F6  8CD5               	bsf	4053,6,c	;volatile
  1153                           
  1154                           ;My_header\My_header.h: 19: T0CONbits.T0CS = 0;
  1155  0005F8  9AD5               	bcf	4053,5,c	;volatile
  1156                           
  1157                           ;My_header\My_header.h: 20: if (prescaler == 0) {
  1158  0005FA  501E               	movf	timer0_init@prescaler,w,c
  1159  0005FC  A4D8               	btfss	status,2,c
  1160  0005FE  D002               	goto	l87
  1161                           
  1162                           ;My_header\My_header.h: 21: T0CONbits.PSA = 1;
  1163  000600  86D5               	bsf	4053,3,c	;volatile
  1164                           
  1165                           ;My_header\My_header.h: 22: } else {
  1166  000602  D00B               	goto	l1398
  1167  000604                     l87:
  1168                           
  1169                           ;My_header\My_header.h: 23: T0CONbits.PSA = 0;
  1170  000604  96D5               	bcf	4053,3,c	;volatile
  1171                           
  1172                           ;My_header\My_header.h: 24: T0CONbits.T0PS = prescaler - 1;
  1173  000606  C01E  F01D         	movff	timer0_init@prescaler,??_timer0_init
  1174  00060A  0EFF               	movlw	255
  1175  00060C  261D               	addwf	??_timer0_init,f,c
  1176  00060E  50D5               	movf	4053,w,c	;volatile
  1177  000610  181D               	xorwf	??_timer0_init,w,c
  1178  000612  0BF8               	andlw	-8
  1179  000614  181D               	xorwf	??_timer0_init,w,c
  1180  000616  6ED5               	movwf	4053,c	;volatile
  1181  000618  D000               	goto	l1398
  1182  00061A                     l1398:
  1183                           
  1184                           ;My_header\My_header.h: 25: }
  1185                           ;My_header\My_header.h: 26: INTCONbits.T0IE = 1;
  1186  00061A  8AF2               	bsf	intcon,5,c	;volatile
  1187                           
  1188                           ;My_header\My_header.h: 27: INTCONbits.TMR0IF = 0;
  1189  00061C  94F2               	bcf	intcon,2,c	;volatile
  1190                           
  1191                           ;My_header\My_header.h: 28: INTCON2bits.TMR0IP = 0;
  1192  00061E  94F1               	bcf	intcon2,2,c	;volatile
  1193                           
  1194                           ;My_header\My_header.h: 29: INTCONbits.PEIE = 1;
  1195  000620  8CF2               	bsf	intcon,6,c	;volatile
  1196  000622  0012               	return		;funcret
  1197  000624                     __end_of_timer0_init:
  1198                           	opt stack 0
  1199                           prodh	equ	0xFF4
  1200                           prodl	equ	0xFF3
  1201                           intcon	equ	0xFF2
  1202                           intcon2	equ	0xFF1
  1203                           postinc0	equ	0xFEE
  1204                           wreg	equ	0xFE8
  1205                           postinc1	equ	0xFE6
  1206                           fsr1h	equ	0xFE2
  1207                           fsr1l	equ	0xFE1
  1208                           indf2	equ	0xFDF
  1209                           postinc2	equ	0xFDE
  1210                           postdec2	equ	0xFDD
  1211                           fsr2h	equ	0xFDA
  1212                           fsr2l	equ	0xFD9
  1213                           status	equ	0xFD8
  1214                           
  1215 ;; *************** function _ringbuf_init *****************
  1216 ;; Defined at:
  1217 ;;		line 22 in file "../My_header\My_ringbuf.h"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  rb              2   28[COMRAM] PTR struct ringbuf
  1220 ;;		 -> tx_buf(5), 
  1221 ;;  internal_buf    2   30[COMRAM] PTR unsigned char 
  1222 ;;		 -> main@txbuf(100), 
  1223 ;;  bufsize         1   32[COMRAM] unsigned char 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1235 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;Total ram usage:        5 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    4
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text8
  1250  0005B0                     __ptext8:
  1251                           	opt stack 0
  1252  0005B0                     _ringbuf_init:
  1253                           	opt stack 26
  1254                           
  1255                           ;My_header\My_ringbuf.h: 23: rb->buf = internal_buf;
  1256                           
  1257                           ;incstack = 0
  1258  0005B0  C01D  FFD9         	movff	ringbuf_init@rb,fsr2l
  1259  0005B4  C01E  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1260  0005B8  C01F  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1261  0005BC  C020  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1262                           
  1263                           ;My_header\My_ringbuf.h: 24: rb->size = bufsize;
  1264  0005C0  EE20 F002          	lfsr	2,2
  1265  0005C4  501D               	movf	ringbuf_init@rb,w,c
  1266  0005C6  26D9               	addwf	fsr2l,f,c
  1267  0005C8  501E               	movf	ringbuf_init@rb+1,w,c
  1268  0005CA  22DA               	addwfc	fsr2h,f,c
  1269  0005CC  C021  FFDF         	movff	ringbuf_init@bufsize,indf2
  1270                           
  1271                           ;My_header\My_ringbuf.h: 25: rb->head = 0;
  1272  0005D0  EE20 F003          	lfsr	2,3
  1273  0005D4  501D               	movf	ringbuf_init@rb,w,c
  1274  0005D6  26D9               	addwf	fsr2l,f,c
  1275  0005D8  501E               	movf	ringbuf_init@rb+1,w,c
  1276  0005DA  22DA               	addwfc	fsr2h,f,c
  1277  0005DC  0E00               	movlw	0
  1278  0005DE  6EDF               	movwf	indf2,c
  1279                           
  1280                           ;My_header\My_ringbuf.h: 26: rb->tail = 0;
  1281  0005E0  EE20 F004          	lfsr	2,4
  1282  0005E4  501D               	movf	ringbuf_init@rb,w,c
  1283  0005E6  26D9               	addwf	fsr2l,f,c
  1284  0005E8  501E               	movf	ringbuf_init@rb+1,w,c
  1285  0005EA  22DA               	addwfc	fsr2h,f,c
  1286  0005EC  0E00               	movlw	0
  1287  0005EE  6EDF               	movwf	indf2,c
  1288  0005F0  0012               	return		;funcret
  1289  0005F2                     __end_of_ringbuf_init:
  1290                           	opt stack 0
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           intcon	equ	0xFF2
  1294                           intcon2	equ	0xFF1
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           postinc1	equ	0xFE6
  1298                           fsr1h	equ	0xFE2
  1299                           fsr1l	equ	0xFE1
  1300                           indf2	equ	0xFDF
  1301                           postinc2	equ	0xFDE
  1302                           postdec2	equ	0xFDD
  1303                           fsr2h	equ	0xFDA
  1304                           fsr2l	equ	0xFD9
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _UART_init *****************
  1308 ;; Defined at:
  1309 ;;		line 189 in file "../My_header\My_header.h"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, status,2
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    4
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text9
  1338  000656                     __ptext9:
  1339                           	opt stack 0
  1340  000656                     _UART_init:
  1341                           	opt stack 26
  1342                           
  1343                           ;My_header\My_header.h: 190: TXSTA1bits.TX9 = 0;
  1344                           
  1345                           ;incstack = 0
  1346  000656  9CAD               	bcf	4013,6,c	;volatile
  1347                           
  1348                           ;My_header\My_header.h: 191: TXSTA1bits.TXEN = 1;
  1349  000658  8AAD               	bsf	4013,5,c	;volatile
  1350                           
  1351                           ;My_header\My_header.h: 192: TXSTA1bits.SYNC = 0;
  1352  00065A  98AD               	bcf	4013,4,c	;volatile
  1353                           
  1354                           ;My_header\My_header.h: 193: TXSTA1bits.BRGH = 0;
  1355  00065C  94AD               	bcf	4013,2,c	;volatile
  1356                           
  1357                           ;My_header\My_header.h: 194: RCSTA1bits.SPEN = 1;
  1358  00065E  8EAC               	bsf	4012,7,c	;volatile
  1359                           
  1360                           ;My_header\My_header.h: 195: RCSTA1bits.RX9 = 0;
  1361  000660  9CAC               	bcf	4012,6,c	;volatile
  1362                           
  1363                           ;My_header\My_header.h: 196: RCSTA1bits.CREN = 1;
  1364  000662  88AC               	bsf	4012,4,c	;volatile
  1365                           
  1366                           ;My_header\My_header.h: 197: BAUDCON1bits.BRG16 = 0;
  1367  000664  967E               	bcf	3966,3,c	;volatile
  1368                           
  1369                           ;My_header\My_header.h: 198: SPBRG1 = 48000000 / 64 / 9600 - 1;
  1370  000666  0E4D               	movlw	77
  1371  000668  6EB0               	movwf	4016,c	;volatile
  1372                           
  1373                           ;My_header\My_header.h: 199: SPBRGH1 = 0;
  1374  00066A  0E00               	movlw	0
  1375  00066C  6E7F               	movwf	3967,c	;volatile
  1376                           
  1377                           ;My_header\My_header.h: 200: IPR1bits.RC1IP = 0;
  1378  00066E  9A9F               	bcf	3999,5,c	;volatile
  1379                           
  1380                           ;My_header\My_header.h: 201: PIE1bits.RC1IE = 1;
  1381  000670  8A9D               	bsf	3997,5,c	;volatile
  1382                           
  1383                           ;My_header\My_header.h: 202: INTCONbits.PEIE = 1;
  1384  000672  8CF2               	bsf	intcon,6,c	;volatile
  1385  000674  0012               	return		;funcret
  1386  000676                     __end_of_UART_init:
  1387                           	opt stack 0
  1388                           prodh	equ	0xFF4
  1389                           prodl	equ	0xFF3
  1390                           intcon	equ	0xFF2
  1391                           intcon2	equ	0xFF1
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postinc1	equ	0xFE6
  1395                           fsr1h	equ	0xFE2
  1396                           fsr1l	equ	0xFE1
  1397                           indf2	equ	0xFDF
  1398                           postinc2	equ	0xFDE
  1399                           postdec2	equ	0xFDD
  1400                           fsr2h	equ	0xFDA
  1401                           fsr2l	equ	0xFD9
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _OSC_init *****************
  1405 ;; Defined at:
  1406 ;;		line 135 in file "../My_header\My_header.h"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;		None               void
  1413 ;; Registers used:
  1414 ;;		wreg, status,2
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    4
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text10
  1435  0006BE                     __ptext10:
  1436                           	opt stack 0
  1437  0006BE                     _OSC_init:
  1438                           	opt stack 26
  1439                           
  1440                           ;My_header\My_header.h: 136: OSCCONbits.IRCF = 7;
  1441                           
  1442                           ;incstack = 0
  1443  0006BE  88D3               	bsf	4051,4,c	;volatile
  1444  0006C0  8AD3               	bsf	4051,5,c	;volatile
  1445  0006C2  8CD3               	bsf	4051,6,c	;volatile
  1446                           
  1447                           ;My_header\My_header.h: 137: OSCTUNEbits.PLLEN = 1;
  1448  0006C4  8C9B               	bsf	3995,6,c	;volatile
  1449                           
  1450                           ;My_header\My_header.h: 138: OSCCONbits.SCS = 0;
  1451  0006C6  0EFC               	movlw	-4
  1452  0006C8  16D3               	andwf	4051,f,c	;volatile
  1453  0006CA  0012               	return		;funcret
  1454  0006CC                     __end_of_OSC_init:
  1455                           	opt stack 0
  1456                           prodh	equ	0xFF4
  1457                           prodl	equ	0xFF3
  1458                           intcon	equ	0xFF2
  1459                           intcon2	equ	0xFF1
  1460                           postinc0	equ	0xFEE
  1461                           wreg	equ	0xFE8
  1462                           postinc1	equ	0xFE6
  1463                           fsr1h	equ	0xFE2
  1464                           fsr1l	equ	0xFE1
  1465                           indf2	equ	0xFDF
  1466                           postinc2	equ	0xFDE
  1467                           postdec2	equ	0xFDD
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _ISR *****************
  1473 ;; Defined at:
  1474 ;;		line 33 in file "PIC18F27J53-encoder01.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  ascii           1   27[COMRAM] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;Total ram usage:       15 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    3
  1495 ;; This function calls:
  1496 ;;		_interrupt_TXIF
  1497 ;;		i2_tx_send
  1498 ;; This function is called by:
  1499 ;;		Interrupt level 2
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	intcode
  1504  000008                     __pintcode:
  1505                           	opt stack 0
  1506  000008                     _ISR:
  1507                           	opt stack 23
  1508                           
  1509                           ;incstack = 0
  1510  000008  CFFA F00E          	movff	pclath,??_ISR
  1511  00000C  CFFB F00F          	movff	pclatu,??_ISR+1
  1512  000010  CFE9 F010          	movff	fsr0l,??_ISR+2
  1513  000014  CFEA F011          	movff	fsr0h,??_ISR+3
  1514  000018  CFE1 F012          	movff	fsr1l,??_ISR+4
  1515  00001C  CFE2 F013          	movff	fsr1h,??_ISR+5
  1516  000020  CFD9 F014          	movff	fsr2l,??_ISR+6
  1517  000024  CFDA F015          	movff	fsr2h,??_ISR+7
  1518  000028  CFF3 F016          	movff	prodl,??_ISR+8
  1519  00002C  CFF4 F017          	movff	prodh,??_ISR+9
  1520  000030  CFF6 F018          	movff	tblptrl,??_ISR+10
  1521  000034  CFF7 F019          	movff	tblptrh,??_ISR+11
  1522  000038  CFF8 F01A          	movff	tblptru,??_ISR+12
  1523  00003C  CFF5 F01B          	movff	tablat,??_ISR+13
  1524                           
  1525                           ;PIC18F27J53-encoder01.c: 34: interrupt_TXIF();
  1526  000040  EC12  F003         	call	_interrupt_TXIF	;wreg free
  1527                           
  1528                           ;PIC18F27J53-encoder01.c: 35: if (PIR1bits.RC1IF) {
  1529  000044  AA9E               	btfss	3998,5,c	;volatile
  1530  000046  D006               	goto	i2l1492
  1531                           
  1532                           ;PIC18F27J53-encoder01.c: 36: char ascii = RCREG1;
  1533  000048  CFAF F01C          	movff	4015,ISR@ascii	;volatile
  1534                           
  1535                           ;PIC18F27J53-encoder01.c: 37: tx_send(ascii);
  1536  00004C  501C               	movf	ISR@ascii,w,c
  1537  00004E  EC54  F003         	call	i2_tx_send
  1538  000052  D000               	goto	i2l1492
  1539  000054                     i2l1492:
  1540                           
  1541                           ;PIC18F27J53-encoder01.c: 38: }
  1542                           ;PIC18F27J53-encoder01.c: 39: if(INTCONbits.TMR0IF) {
  1543  000054  A4F2               	btfss	intcon,2,c	;volatile
  1544  000056  D02F               	goto	i2l247
  1545                           
  1546                           ;PIC18F27J53-encoder01.c: 40: INTCONbits.TMR0IF = 0;
  1547  000058  94F2               	bcf	intcon,2,c	;volatile
  1548                           
  1549                           ;PIC18F27J53-encoder01.c: 41: static uint8_t prev_A;
  1550                           ;PIC18F27J53-encoder01.c: 42: static uint8_t prev_B;
  1551                           ;PIC18F27J53-encoder01.c: 43: LATB7 = !LATB7;
  1552  00005A  7E8A               	btg	3978,7,c	;volatile
  1553                           
  1554                           ;PIC18F27J53-encoder01.c: 44: if (PORTBbits.RB0 != prev_A) {
  1555  00005C  A081               	btfss	3969,0,c	;volatile
  1556  00005E  D002               	goto	i2u73_40
  1557  000060  0E01               	movlw	1
  1558  000062  D001               	goto	i2u73_46
  1559  000064                     i2u73_40:
  1560  000064  0E00               	movlw	0
  1561  000066                     i2u73_46:
  1562  000066  1835               	xorwf	ISR@prev_A,w,c
  1563  000068  B4D8               	btfsc	status,2,c
  1564  00006A  D013               	goto	i2l1510
  1565                           
  1566                           ;PIC18F27J53-encoder01.c: 45: prev_A = PORTBbits.RB0;
  1567  00006C  0E00               	movlw	0
  1568  00006E  B081               	btfsc	3969,0,c	;volatile
  1569  000070  0E01               	movlw	1
  1570  000072  6E35               	movwf	ISR@prev_A,c
  1571                           
  1572                           ;PIC18F27J53-encoder01.c: 46: if (PORTBbits.RB0) {
  1573  000074  A081               	btfss	3969,0,c	;volatile
  1574  000076  D00B               	goto	i2l234
  1575                           
  1576                           ;PIC18F27J53-encoder01.c: 47: if (PORTBbits.RB1) {
  1577  000078  A281               	btfss	3969,1,c	;volatile
  1578  00007A  D005               	goto	i2l1506
  1579                           
  1580                           ;PIC18F27J53-encoder01.c: 48: encoder--;
  1581  00007C  0100               	movlb	0	; () banked
  1582  00007E  07C4               	decf	_encoder& (0+255),f,b
  1583  000080  A0D8               	btfss	status,0,c
  1584  000082  07C5               	decf	(_encoder+1)& (0+255),f,b
  1585                           
  1586                           ;PIC18F27J53-encoder01.c: 49: } else {
  1587  000084  D006               	goto	i2l1510
  1588  000086                     i2l1506:
  1589                           
  1590                           ;PIC18F27J53-encoder01.c: 50: encoder++;
  1591  000086  0100               	movlb	0	; () banked
  1592  000088  4BC4               	infsnz	_encoder& (0+255),f,b
  1593  00008A  2BC5               	incf	(_encoder+1)& (0+255),f,b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;PIC18F27J53-encoder01.c: 51: }
  1597                           ;PIC18F27J53-encoder01.c: 52: } else {
  1598  00008C  D002               	goto	i2l1510
  1599  00008E                     i2l234:
  1600                           
  1601                           ;PIC18F27J53-encoder01.c: 53: if (PORTBbits.RB1) {
  1602  00008E  5081               	movf	3969,w,c	;volatile
  1603                           
  1604                           ;PIC18F27J53-encoder01.c: 55: } else {
  1605  000090  D000               	goto	i2l1510
  1606  000092                     i2l1510:
  1607                           
  1608                           ;PIC18F27J53-encoder01.c: 57: }
  1609                           ;PIC18F27J53-encoder01.c: 58: }
  1610                           ;PIC18F27J53-encoder01.c: 59: }
  1611                           ;PIC18F27J53-encoder01.c: 60: if (PORTBbits.RB1 != prev_B) {
  1612  000092  A281               	btfss	3969,1,c	;volatile
  1613  000094  D002               	goto	i2u77_40
  1614  000096  0E01               	movlw	1
  1615  000098  D001               	goto	i2u77_46
  1616  00009A                     i2u77_40:
  1617  00009A  0E00               	movlw	0
  1618  00009C                     i2u77_46:
  1619  00009C  1836               	xorwf	ISR@prev_B,w,c
  1620  00009E  B4D8               	btfsc	status,2,c
  1621  0000A0  D00A               	goto	i2l247
  1622                           
  1623                           ;PIC18F27J53-encoder01.c: 61: prev_B = PORTBbits.RB1;
  1624  0000A2  0E00               	movlw	0
  1625  0000A4  B281               	btfsc	3969,1,c	;volatile
  1626  0000A6  0E01               	movlw	1
  1627  0000A8  6E36               	movwf	ISR@prev_B,c
  1628                           
  1629                           ;PIC18F27J53-encoder01.c: 62: if (PORTBbits.RB1) {
  1630  0000AA  A281               	btfss	3969,1,c	;volatile
  1631  0000AC  D002               	goto	i2l241
  1632  0000AE  D001               	goto	i2l241
  1633                           
  1634                           ;PIC18F27J53-encoder01.c: 67: }
  1635                           ;PIC18F27J53-encoder01.c: 68: } else {
  1636                           
  1637                           ;PIC18F27J53-encoder01.c: 65: } else {
  1638                           
  1639                           ;PIC18F27J53-encoder01.c: 63: if (PORTBbits.RB0) {
  1640  0000B0  D002               	goto	i2l247
  1641  0000B2                     i2l241:
  1642                           
  1643                           ;PIC18F27J53-encoder01.c: 69: if (PORTBbits.RB0) {
  1644  0000B2  5081               	movf	3969,w,c	;volatile
  1645                           
  1646                           ;PIC18F27J53-encoder01.c: 71: } else {
  1647  0000B4  D000               	goto	i2l247
  1648  0000B6                     i2l247:
  1649  0000B6  C01B  FFF5         	movff	??_ISR+13,tablat
  1650  0000BA  C01A  FFF8         	movff	??_ISR+12,tblptru
  1651  0000BE  C019  FFF7         	movff	??_ISR+11,tblptrh
  1652  0000C2  C018  FFF6         	movff	??_ISR+10,tblptrl
  1653  0000C6  C017  FFF4         	movff	??_ISR+9,prodh
  1654  0000CA  C016  FFF3         	movff	??_ISR+8,prodl
  1655  0000CE  C015  FFDA         	movff	??_ISR+7,fsr2h
  1656  0000D2  C014  FFD9         	movff	??_ISR+6,fsr2l
  1657  0000D6  C013  FFE2         	movff	??_ISR+5,fsr1h
  1658  0000DA  C012  FFE1         	movff	??_ISR+4,fsr1l
  1659  0000DE  C011  FFEA         	movff	??_ISR+3,fsr0h
  1660  0000E2  C010  FFE9         	movff	??_ISR+2,fsr0l
  1661  0000E6  C00F  FFFB         	movff	??_ISR+1,pclatu
  1662  0000EA  C00E  FFFA         	movff	??_ISR,pclath
  1663  0000EE  0011               	retfie		f
  1664  0000F0                     __end_of_ISR:
  1665                           	opt stack 0
  1666                           pclatu	equ	0xFFB
  1667                           pclath	equ	0xFFA
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           prodh	equ	0xFF4
  1673                           prodl	equ	0xFF3
  1674                           intcon	equ	0xFF2
  1675                           intcon2	equ	0xFF1
  1676                           postinc0	equ	0xFEE
  1677                           fsr0h	equ	0xFEA
  1678                           fsr0l	equ	0xFE9
  1679                           wreg	equ	0xFE8
  1680                           postinc1	equ	0xFE6
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           postdec2	equ	0xFDD
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function i2_tx_send *****************
  1691 ;; Defined at:
  1692 ;;		line 234 in file "../My_header\My_header.h"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  asciicode       1    wreg     const unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  asciicode       1   12[COMRAM] const unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;		None               void
  1699 ;; Registers used:
  1700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    2
  1713 ;; This function calls:
  1714 ;;		i2_ringbuf_push
  1715 ;; This function is called by:
  1716 ;;		_ISR
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text12
  1721  0006A8                     __ptext12:
  1722                           	opt stack 0
  1723  0006A8                     i2_tx_send:
  1724                           	opt stack 23
  1725                           
  1726                           ;incstack = 0
  1727                           ;i2tx_send@asciicode stored from wreg
  1728  0006A8  6E0D               	movwf	i2tx_send@asciicode,c
  1729                           
  1730                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
  1731  0006AA  0E37               	movlw	low _tx_buf
  1732  0006AC  6E05               	movwf	i2ringbuf_push@rb,c
  1733  0006AE  0E00               	movlw	high _tx_buf
  1734  0006B0  6E06               	movwf	i2ringbuf_push@rb+1,c
  1735  0006B2  C00D  F007         	movff	i2tx_send@asciicode,i2ringbuf_push@asciicode
  1736  0006B6  ECD7  F000         	call	i2_ringbuf_push	;wreg free
  1737                           
  1738                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
  1739  0006BA  889D               	bsf	3997,4,c	;volatile
  1740  0006BC  0012               	return		;funcret
  1741  0006BE                     __end_ofi2_tx_send:
  1742                           	opt stack 0
  1743                           pclatu	equ	0xFFB
  1744                           pclath	equ	0xFFA
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           prodh	equ	0xFF4
  1750                           prodl	equ	0xFF3
  1751                           intcon	equ	0xFF2
  1752                           intcon2	equ	0xFF1
  1753                           postinc0	equ	0xFEE
  1754                           fsr0h	equ	0xFEA
  1755                           fsr0l	equ	0xFE9
  1756                           wreg	equ	0xFE8
  1757                           postinc1	equ	0xFE6
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           indf2	equ	0xFDF
  1761                           postinc2	equ	0xFDE
  1762                           postdec2	equ	0xFDD
  1763                           fsr2h	equ	0xFDA
  1764                           fsr2l	equ	0xFD9
  1765                           status	equ	0xFD8
  1766                           
  1767 ;; *************** function i2_ringbuf_push *****************
  1768 ;; Defined at:
  1769 ;;		line 37 in file "../My_header\My_ringbuf.h"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  rb              2    4[COMRAM] PTR struct ringbuf
  1772 ;;		 -> tx_buf(5), 
  1773 ;;  asciicode       1    6[COMRAM] unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;		None               void
  1778 ;; Registers used:
  1779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1785 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;Total ram usage:        8 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    1
  1792 ;; This function calls:
  1793 ;;		i2_ringbuf_num
  1794 ;; This function is called by:
  1795 ;;		i2_tx_send
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text13
  1800  0001AE                     __ptext13:
  1801                           	opt stack 0
  1802  0001AE                     i2_ringbuf_push:
  1803                           	opt stack 23
  1804                           
  1805                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
  1806                           
  1807                           ;incstack = 0
  1808  0001AE  C005  F001         	movff	i2ringbuf_push@rb,i2ringbuf_num@rb
  1809  0001B2  C006  F002         	movff	i2ringbuf_push@rb+1,i2ringbuf_num@rb+1
  1810  0001B6  EC12  F002         	call	i2_ringbuf_num	;wreg free
  1811  0001BA  6E08               	movwf	??i2_ringbuf_push& (0+255),c
  1812  0001BC  EE20 F002          	lfsr	2,2
  1813  0001C0  5005               	movf	i2ringbuf_push@rb,w,c
  1814  0001C2  26D9               	addwf	fsr2l,f,c
  1815  0001C4  5006               	movf	i2ringbuf_push@rb+1,w,c
  1816  0001C6  22DA               	addwfc	fsr2h,f,c
  1817  0001C8  50DE               	movf	postinc2,w,c
  1818  0001CA  5C08               	subwf	??i2_ringbuf_push,w,c
  1819  0001CC  B0D8               	btfsc	status,0,c
  1820  0001CE  0012               	return	
  1821                           
  1822                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
  1823  0001D0  EE20 F003          	lfsr	2,3
  1824  0001D4  5005               	movf	i2ringbuf_push@rb,w,c
  1825  0001D6  26D9               	addwf	fsr2l,f,c
  1826  0001D8  5006               	movf	i2ringbuf_push@rb+1,w,c
  1827  0001DA  22DA               	addwfc	fsr2h,f,c
  1828  0001DC  50DF               	movf	indf2,w,c
  1829  0001DE  6E08               	movwf	??i2_ringbuf_push& (0+255),c
  1830  0001E0  5008               	movf	??i2_ringbuf_push,w,c
  1831  0001E2  0D01               	mullw	1
  1832  0001E4  C005  FFD9         	movff	i2ringbuf_push@rb,fsr2l
  1833  0001E8  C006  FFDA         	movff	i2ringbuf_push@rb+1,fsr2h
  1834  0001EC  CFDE F009          	movff	postinc2,??i2_ringbuf_push+1
  1835  0001F0  CFDD F00A          	movff	postdec2,??i2_ringbuf_push+2
  1836  0001F4  50F3               	movf	prodl,w,c
  1837  0001F6  2409               	addwf	??i2_ringbuf_push+1,w,c
  1838  0001F8  6ED9               	movwf	fsr2l,c
  1839  0001FA  50F4               	movf	prodh,w,c
  1840  0001FC  200A               	addwfc	??i2_ringbuf_push+2,w,c
  1841  0001FE  6EDA               	movwf	fsr2h,c
  1842  000200  C007  FFDF         	movff	i2ringbuf_push@asciicode,indf2
  1843                           
  1844                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
  1845  000204  EE20 F002          	lfsr	2,2
  1846  000208  5005               	movf	i2ringbuf_push@rb,w,c
  1847  00020A  26D9               	addwf	fsr2l,f,c
  1848  00020C  5006               	movf	i2ringbuf_push@rb+1,w,c
  1849  00020E  22DA               	addwfc	fsr2h,f,c
  1850  000210  50DF               	movf	indf2,w,c
  1851  000212  6E08               	movwf	??i2_ringbuf_push& (0+255),c
  1852  000214  6A09               	clrf	(??i2_ringbuf_push+1)& (0+255),c
  1853  000216  EE20 F003          	lfsr	2,3
  1854  00021A  5005               	movf	i2ringbuf_push@rb,w,c
  1855  00021C  26D9               	addwf	fsr2l,f,c
  1856  00021E  5006               	movf	i2ringbuf_push@rb+1,w,c
  1857  000220  22DA               	addwfc	fsr2h,f,c
  1858  000222  50DF               	movf	indf2,w,c
  1859  000224  6E0A               	movwf	(??i2_ringbuf_push+2)& (0+255),c
  1860  000226  6A0B               	clrf	(??i2_ringbuf_push+3)& (0+255),c
  1861  000228  0E01               	movlw	1
  1862  00022A  260A               	addwf	??i2_ringbuf_push+2,f,c
  1863  00022C  0E00               	movlw	0
  1864  00022E  220B               	addwfc	??i2_ringbuf_push+3,f,c
  1865  000230  5008               	movf	??i2_ringbuf_push,w,c
  1866  000232  5C0A               	subwf	??i2_ringbuf_push+2,w,c
  1867  000234  500B               	movf	??i2_ringbuf_push+3,w,c
  1868  000236  0A80               	xorlw	128
  1869  000238  6E0C               	movwf	(??i2_ringbuf_push+4)& (0+255),c
  1870  00023A  5009               	movf	??i2_ringbuf_push+1,w,c
  1871  00023C  0A80               	xorlw	128
  1872  00023E  580C               	subwfb	(??i2_ringbuf_push+4)& (0+255),w,c
  1873  000240  B0D8               	btfsc	status,0,c
  1874  000242  D008               	goto	i2l1388
  1875  000244  EE20 F003          	lfsr	2,3
  1876  000248  5005               	movf	i2ringbuf_push@rb,w,c
  1877  00024A  26D9               	addwf	fsr2l,f,c
  1878  00024C  5006               	movf	i2ringbuf_push@rb+1,w,c
  1879  00024E  22DA               	addwfc	fsr2h,f,c
  1880  000250  2ADF               	incf	indf2,f,c
  1881  000252  0012               	return	
  1882  000254                     i2l1388:
  1883                           
  1884                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
  1885  000254  EE20 F003          	lfsr	2,3
  1886  000258  5005               	movf	i2ringbuf_push@rb,w,c
  1887  00025A  26D9               	addwf	fsr2l,f,c
  1888  00025C  5006               	movf	i2ringbuf_push@rb+1,w,c
  1889  00025E  22DA               	addwfc	fsr2h,f,c
  1890  000260  0E00               	movlw	0
  1891  000262  6EDF               	movwf	indf2,c
  1892  000264  0012               	return	
  1893  000266  0012               	return		;funcret
  1894  000268                     __end_ofi2_ringbuf_push:
  1895                           	opt stack 0
  1896                           pclatu	equ	0xFFB
  1897                           pclath	equ	0xFFA
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           prodh	equ	0xFF4
  1903                           prodl	equ	0xFF3
  1904                           intcon	equ	0xFF2
  1905                           intcon2	equ	0xFF1
  1906                           postinc0	equ	0xFEE
  1907                           fsr0h	equ	0xFEA
  1908                           fsr0l	equ	0xFE9
  1909                           wreg	equ	0xFE8
  1910                           postinc1	equ	0xFE6
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           indf2	equ	0xFDF
  1914                           postinc2	equ	0xFDE
  1915                           postdec2	equ	0xFDD
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _interrupt_TXIF *****************
  1921 ;; Defined at:
  1922 ;;		line 223 in file "../My_header\My_header.h"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    2
  1943 ;; This function calls:
  1944 ;;		_ringbuf_pop
  1945 ;;		i2_ringbuf_num
  1946 ;; This function is called by:
  1947 ;;		_ISR
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text14
  1952  000624                     __ptext14:
  1953                           	opt stack 0
  1954  000624                     _interrupt_TXIF:
  1955                           	opt stack 23
  1956                           
  1957                           ;My_header\My_header.h: 224: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
  1958                           
  1959                           ;incstack = 0
  1960  000624  A89D               	btfss	3997,4,c	;volatile
  1961  000626  0012               	return	
  1962  000628  A89E               	btfss	3998,4,c	;volatile
  1963  00062A  0012               	return	
  1964                           
  1965                           ;My_header\My_header.h: 225: PIR1bits.TX1IF = 0;
  1966  00062C  989E               	bcf	3998,4,c	;volatile
  1967                           
  1968                           ;My_header\My_header.h: 226: if (ringbuf_num(&tx_buf) > 0) {
  1969  00062E  0E37               	movlw	low _tx_buf
  1970  000630  6E01               	movwf	i2ringbuf_num@rb,c
  1971  000632  0E00               	movlw	high _tx_buf
  1972  000634  6E02               	movwf	i2ringbuf_num@rb+1,c
  1973  000636  EC12  F002         	call	i2_ringbuf_num	;wreg free
  1974  00063A  0900               	iorlw	0
  1975  00063C  B4D8               	btfsc	status,2,c
  1976  00063E  D008               	goto	i2l150
  1977                           
  1978                           ;My_header\My_header.h: 227: TXREG1 = ringbuf_pop(&tx_buf);
  1979  000640  0E37               	movlw	low _tx_buf
  1980  000642  6E05               	movwf	ringbuf_pop@rb,c
  1981  000644  0E00               	movlw	high _tx_buf
  1982  000646  6E06               	movwf	ringbuf_pop@rb+1,c
  1983  000648  EC8C  F001         	call	_ringbuf_pop	;wreg free
  1984  00064C  6EAE               	movwf	4014,c	;volatile
  1985                           
  1986                           ;My_header\My_header.h: 228: } else {
  1987  00064E  0012               	return	
  1988  000650                     i2l150:
  1989                           
  1990                           ;My_header\My_header.h: 229: PIE1bits.TX1IE = 0;
  1991  000650  989D               	bcf	3997,4,c	;volatile
  1992  000652  0012               	return	
  1993  000654  0012               	return		;funcret
  1994  000656                     __end_of_interrupt_TXIF:
  1995                           	opt stack 0
  1996                           pclatu	equ	0xFFB
  1997                           pclath	equ	0xFFA
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           intcon2	equ	0xFF1
  2006                           postinc0	equ	0xFEE
  2007                           fsr0h	equ	0xFEA
  2008                           fsr0l	equ	0xFE9
  2009                           wreg	equ	0xFE8
  2010                           postinc1	equ	0xFE6
  2011                           fsr1h	equ	0xFE2
  2012                           fsr1l	equ	0xFE1
  2013                           indf2	equ	0xFDF
  2014                           postinc2	equ	0xFDE
  2015                           postdec2	equ	0xFDD
  2016                           fsr2h	equ	0xFDA
  2017                           fsr2l	equ	0xFD9
  2018                           status	equ	0xFD8
  2019                           
  2020 ;; *************** function _ringbuf_pop *****************
  2021 ;; Defined at:
  2022 ;;		line 45 in file "../My_header\My_ringbuf.h"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  rb              2    4[COMRAM] PTR struct ringbuf
  2025 ;;		 -> tx_buf(5), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  ret             1    9[COMRAM] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      unsigned char 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;Total ram usage:        6 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    1
  2044 ;; This function calls:
  2045 ;;		i2_ringbuf_num
  2046 ;; This function is called by:
  2047 ;;		_interrupt_TXIF
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text15
  2052  000318                     __ptext15:
  2053                           	opt stack 0
  2054  000318                     _ringbuf_pop:
  2055                           	opt stack 23
  2056                           
  2057                           ;My_header\My_ringbuf.h: 46: if (ringbuf_num(rb)) {
  2058                           
  2059                           ;incstack = 0
  2060  000318  C005  F001         	movff	ringbuf_pop@rb,i2ringbuf_num@rb
  2061  00031C  C006  F002         	movff	ringbuf_pop@rb+1,i2ringbuf_num@rb+1
  2062  000320  EC12  F002         	call	i2_ringbuf_num	;wreg free
  2063  000324  0900               	iorlw	0
  2064  000326  B4D8               	btfsc	status,2,c
  2065  000328  D03C               	goto	i2l1334
  2066                           
  2067                           ;My_header\My_ringbuf.h: 47: uint8_t ret = rb->buf[rb->tail];
  2068  00032A  EE20 F004          	lfsr	2,4
  2069  00032E  5005               	movf	ringbuf_pop@rb,w,c
  2070  000330  26D9               	addwf	fsr2l,f,c
  2071  000332  5006               	movf	ringbuf_pop@rb+1,w,c
  2072  000334  22DA               	addwfc	fsr2h,f,c
  2073  000336  50DF               	movf	indf2,w,c
  2074  000338  6E07               	movwf	??_ringbuf_pop& (0+255),c
  2075  00033A  5007               	movf	??_ringbuf_pop,w,c
  2076  00033C  0D01               	mullw	1
  2077  00033E  C005  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2078  000342  C006  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2079  000346  CFDE F008          	movff	postinc2,??_ringbuf_pop+1
  2080  00034A  CFDD F009          	movff	postdec2,??_ringbuf_pop+2
  2081  00034E  50F3               	movf	prodl,w,c
  2082  000350  2408               	addwf	??_ringbuf_pop+1,w,c
  2083  000352  6ED9               	movwf	fsr2l,c
  2084  000354  50F4               	movf	prodh,w,c
  2085  000356  2009               	addwfc	??_ringbuf_pop+2,w,c
  2086  000358  6EDA               	movwf	fsr2h,c
  2087  00035A  50DF               	movf	indf2,w,c
  2088  00035C  6E0A               	movwf	ringbuf_pop@ret,c
  2089                           
  2090                           ;My_header\My_ringbuf.h: 48: rb->tail++;
  2091  00035E  EE20 F004          	lfsr	2,4
  2092  000362  5005               	movf	ringbuf_pop@rb,w,c
  2093  000364  26D9               	addwf	fsr2l,f,c
  2094  000366  5006               	movf	ringbuf_pop@rb+1,w,c
  2095  000368  22DA               	addwfc	fsr2h,f,c
  2096  00036A  2ADF               	incf	indf2,f,c
  2097                           
  2098                           ;My_header\My_ringbuf.h: 49: if (rb->tail >= rb->size) {
  2099  00036C  EE20 F002          	lfsr	2,2
  2100  000370  5005               	movf	ringbuf_pop@rb,w,c
  2101  000372  26D9               	addwf	fsr2l,f,c
  2102  000374  5006               	movf	ringbuf_pop@rb+1,w,c
  2103  000376  22DA               	addwfc	fsr2h,f,c
  2104  000378  EE10 F004          	lfsr	1,4
  2105  00037C  5005               	movf	ringbuf_pop@rb,w,c
  2106  00037E  26E1               	addwf	fsr1l,f,c
  2107  000380  5006               	movf	ringbuf_pop@rb+1,w,c
  2108  000382  22E2               	addwfc	fsr1h,f,c
  2109  000384  50DE               	movf	postinc2,w,c
  2110  000386  5CE6               	subwf	postinc1,w,c
  2111  000388  A0D8               	btfss	status,0,c
  2112  00038A  D009               	goto	i2l1328
  2113                           
  2114                           ;My_header\My_ringbuf.h: 50: rb->tail = 0;
  2115  00038C  EE20 F004          	lfsr	2,4
  2116  000390  5005               	movf	ringbuf_pop@rb,w,c
  2117  000392  26D9               	addwf	fsr2l,f,c
  2118  000394  5006               	movf	ringbuf_pop@rb+1,w,c
  2119  000396  22DA               	addwfc	fsr2h,f,c
  2120  000398  0E00               	movlw	0
  2121  00039A  6EDF               	movwf	indf2,c
  2122  00039C  D000               	goto	i2l1328
  2123  00039E                     i2l1328:
  2124                           
  2125                           ;My_header\My_ringbuf.h: 51: }
  2126                           ;My_header\My_ringbuf.h: 52: return ret;
  2127  00039E  500A               	movf	ringbuf_pop@ret,w,c
  2128                           
  2129                           ;My_header\My_ringbuf.h: 53: } else {
  2130  0003A0  0012               	return	
  2131  0003A2                     i2l1334:
  2132                           
  2133                           ;My_header\My_ringbuf.h: 54: return 0;
  2134  0003A2  0E00               	movlw	0
  2135  0003A4  0012               	return	
  2136  0003A6  0012               	return		;funcret
  2137  0003A8                     __end_of_ringbuf_pop:
  2138                           	opt stack 0
  2139                           pclatu	equ	0xFFB
  2140                           pclath	equ	0xFFA
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           intcon	equ	0xFF2
  2148                           intcon2	equ	0xFF1
  2149                           postinc0	equ	0xFEE
  2150                           fsr0h	equ	0xFEA
  2151                           fsr0l	equ	0xFE9
  2152                           wreg	equ	0xFE8
  2153                           postinc1	equ	0xFE6
  2154                           fsr1h	equ	0xFE2
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           postinc2	equ	0xFDE
  2158                           postdec2	equ	0xFDD
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function i2_ringbuf_num *****************
  2164 ;; Defined at:
  2165 ;;		line 29 in file "../My_header\My_ringbuf.h"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  2168 ;;		 -> tx_buf(5), 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      unsigned char 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;Total ram usage:        4 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_ringbuf_pop
  2190 ;;		_interrupt_TXIF
  2191 ;;		i2_ringbuf_push
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text16
  2196  000424                     __ptext16:
  2197                           	opt stack 0
  2198  000424                     i2_ringbuf_num:
  2199                           	opt stack 23
  2200                           
  2201                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
  2202                           
  2203                           ;incstack = 0
  2204  000424  EE20 F004          	lfsr	2,4
  2205  000428  5001               	movf	i2ringbuf_num@rb,w,c
  2206  00042A  26D9               	addwf	fsr2l,f,c
  2207  00042C  5002               	movf	i2ringbuf_num@rb+1,w,c
  2208  00042E  22DA               	addwfc	fsr2h,f,c
  2209  000430  EE10 F003          	lfsr	1,3
  2210  000434  5001               	movf	i2ringbuf_num@rb,w,c
  2211  000436  26E1               	addwf	fsr1l,f,c
  2212  000438  5002               	movf	i2ringbuf_num@rb+1,w,c
  2213  00043A  22E2               	addwfc	fsr1h,f,c
  2214  00043C  50DE               	movf	postinc2,w,c
  2215  00043E  5CE6               	subwf	postinc1,w,c
  2216  000440  A0D8               	btfss	status,0,c
  2217  000442  D012               	goto	i2l1314
  2218                           
  2219                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
  2220  000444  EE20 F003          	lfsr	2,3
  2221  000448  5001               	movf	i2ringbuf_num@rb,w,c
  2222  00044A  26D9               	addwf	fsr2l,f,c
  2223  00044C  5002               	movf	i2ringbuf_num@rb+1,w,c
  2224  00044E  22DA               	addwfc	fsr2h,f,c
  2225  000450  50DF               	movf	indf2,w,c
  2226  000452  6E03               	movwf	??i2_ringbuf_num& (0+255),c
  2227  000454  EE20 F004          	lfsr	2,4
  2228  000458  5001               	movf	i2ringbuf_num@rb,w,c
  2229  00045A  26D9               	addwf	fsr2l,f,c
  2230  00045C  5002               	movf	i2ringbuf_num@rb+1,w,c
  2231  00045E  22DA               	addwfc	fsr2h,f,c
  2232  000460  50DF               	movf	indf2,w,c
  2233  000462  0800               	sublw	0
  2234  000464  2403               	addwf	??i2_ringbuf_num,w,c
  2235                           
  2236                           ;My_header\My_ringbuf.h: 32: } else {
  2237  000466  0012               	return	
  2238  000468                     i2l1314:
  2239                           
  2240                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
  2241  000468  EE20 F003          	lfsr	2,3
  2242  00046C  5001               	movf	i2ringbuf_num@rb,w,c
  2243  00046E  26D9               	addwf	fsr2l,f,c
  2244  000470  5002               	movf	i2ringbuf_num@rb+1,w,c
  2245  000472  22DA               	addwfc	fsr2h,f,c
  2246  000474  50DF               	movf	indf2,w,c
  2247  000476  6E03               	movwf	??i2_ringbuf_num& (0+255),c
  2248  000478  EE20 F002          	lfsr	2,2
  2249  00047C  5001               	movf	i2ringbuf_num@rb,w,c
  2250  00047E  26D9               	addwf	fsr2l,f,c
  2251  000480  5002               	movf	i2ringbuf_num@rb+1,w,c
  2252  000482  22DA               	addwfc	fsr2h,f,c
  2253  000484  50DF               	movf	indf2,w,c
  2254  000486  6E04               	movwf	(??i2_ringbuf_num+1)& (0+255),c
  2255  000488  EE20 F004          	lfsr	2,4
  2256  00048C  5001               	movf	i2ringbuf_num@rb,w,c
  2257  00048E  26D9               	addwf	fsr2l,f,c
  2258  000490  5002               	movf	i2ringbuf_num@rb+1,w,c
  2259  000492  22DA               	addwfc	fsr2h,f,c
  2260  000494  50DF               	movf	indf2,w,c
  2261  000496  0800               	sublw	0
  2262  000498  2404               	addwf	??i2_ringbuf_num+1,w,c
  2263  00049A  2403               	addwf	??i2_ringbuf_num,w,c
  2264  00049C  0012               	return	
  2265  00049E  0012               	return		;funcret
  2266  0004A0                     __end_ofi2_ringbuf_num:
  2267                           	opt stack 0
  2268  0000                     pclatu	equ	0xFFB
  2269                           pclath	equ	0xFFA
  2270                           tblptru	equ	0xFF8
  2271                           tblptrh	equ	0xFF7
  2272                           tblptrl	equ	0xFF6
  2273                           tablat	equ	0xFF5
  2274                           prodh	equ	0xFF4
  2275                           prodl	equ	0xFF3
  2276                           intcon	equ	0xFF2
  2277                           intcon2	equ	0xFF1
  2278                           postinc0	equ	0xFEE
  2279                           fsr0h	equ	0xFEA
  2280                           fsr0l	equ	0xFE9
  2281                           wreg	equ	0xFE8
  2282                           postinc1	equ	0xFE6
  2283                           fsr1h	equ	0xFE2
  2284                           fsr1l	equ	0xFE1
  2285                           indf2	equ	0xFDF
  2286                           postinc2	equ	0xFDE
  2287                           postdec2	equ	0xFDD
  2288                           fsr2h	equ	0xFDA
  2289                           fsr2l	equ	0xFD9
  2290                           status	equ	0xFD8
  2291                           pclatu	equ	0xFFB
  2292                           pclath	equ	0xFFA
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           prodh	equ	0xFF4
  2298                           prodl	equ	0xFF3
  2299                           intcon	equ	0xFF2
  2300                           intcon2	equ	0xFF1
  2301                           postinc0	equ	0xFEE
  2302                           fsr0h	equ	0xFEA
  2303                           fsr0l	equ	0xFE9
  2304                           wreg	equ	0xFE8
  2305                           postinc1	equ	0xFE6
  2306                           fsr1h	equ	0xFE2
  2307                           fsr1l	equ	0xFE1
  2308                           indf2	equ	0xFDF
  2309                           postinc2	equ	0xFDE
  2310                           postdec2	equ	0xFDD
  2311                           fsr2h	equ	0xFDA
  2312                           fsr2l	equ	0xFD9
  2313                           status	equ	0xFD8
  2314                           
  2315                           	psect	rparam
  2316  0000                     pclatu	equ	0xFFB
  2317                           pclath	equ	0xFFA
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           intcon	equ	0xFF2
  2325                           intcon2	equ	0xFF1
  2326                           postinc0	equ	0xFEE
  2327                           fsr0h	equ	0xFEA
  2328                           fsr0l	equ	0xFE9
  2329                           wreg	equ	0xFE8
  2330                           postinc1	equ	0xFE6
  2331                           fsr1h	equ	0xFE2
  2332                           fsr1l	equ	0xFE1
  2333                           indf2	equ	0xFDF
  2334                           postinc2	equ	0xFDE
  2335                           postdec2	equ	0xFDD
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      59
    BANK0           160    100     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@txbuf(BANK0[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_tx_sendn
    _tx_sendn->_tx_send
    _tx_send->_ringbuf_push
    _ringbuf_push->_ringbuf_num

Critical Paths under _ISR in COMRAM

    _ISR->i2_tx_send
    i2_tx_send->i2_ringbuf_push
    i2_ringbuf_push->i2_ringbuf_num
    _interrupt_TXIF->_ringbuf_pop
    _ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               102   102      0    3311
                                             47 COMRAM     2     2      0
                                              0 BANK0    100   100      0
                           _OSC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                            _tx_send
                           _tx_sendn
 ---------------------------------------------------------------------------------
 (1) _tx_sendn                                             6     3      3    2082
                                             41 COMRAM     6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (2) _tx_send                                              1     1      0     834
                                             40 COMRAM     1     1      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (3) _ringbuf_push                                         8     5      3     812
                                             32 COMRAM     8     5      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          4     2      2     358
                                             28 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     415
                                             28 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      44
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     0      5     324
                                             28 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 15    15      0    1232
                                             13 COMRAM    15    15      0
                     _interrupt_TXIF
                          i2_tx_send
 ---------------------------------------------------------------------------------
 (6) i2_tx_send                                            1     1      0     504
                                             12 COMRAM     1     1      0
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (7) i2_ringbuf_push                                       8     5      3     482
                                              4 COMRAM     8     5      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (6) _interrupt_TXIF                                       0     0      0     705
                        _ringbuf_pop
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_pop                                          6     4      2     473
                                              4 COMRAM     6     4      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (8) i2_ringbuf_num                                        4     2      2     232
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSC_init
   _UART_init
   _ringbuf_init
   _timer0_init
   _tx_send
     _ringbuf_push
       _ringbuf_num
   _tx_sendn
     ___lwdiv
     ___lwmod
     _tx_send
       _ringbuf_push
         _ringbuf_num

 _ISR (ROOT)
   _interrupt_TXIF
     _ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_num
   i2_tx_send
     i2_ringbuf_push
       i2_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      68       5       65.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      3B       1       62.1%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3       6        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jun 02 10:54:52 2015

                      l87 0604                        _d1 0032    __end_of_interrupt_TXIF 0656  
            __CFG_CP0$OFF 000000                       l165 04A2                       l779 055A  
                     l789 05A6                       _ISR 0008                       u800 02C0  
                     wreg 000FE8                _TXSTA1bits 000FAD                      ?_ISR 0001  
                    l1304 019A                      l1350 0528                      l1360 054E  
                    l1352 0530                      l1370 057C                      l1442 04B0  
                    l1348 051E                      l1372 0584                      l1292 03EC  
                    l1452 04FE                      l1446 04D0                      l1376 059A  
                    l1368 0572                      l1552 02FC                      l1544 02AA  
                    l1398 061A        __CFG_WPFP$PAGE_127 000000                      _main 0268  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr0l 000FE9  
                    fsr2h 000FDA                      fsr1l 000FE1                      indf2 000FDF  
                    fsr2l 000FD9    __CFG_DSWDTOSC$T1OSCREF 000000                      pclat 000FFA  
                    prodh 000FF4                      prodl 000FF3                      start 00F0  
           __CFG_IESO$OFF 000000              ___param_bank 000010     __end_ofi2_ringbuf_num 04A0  
                   ??_ISR 000E             __CFG_PLLDIV$2 000000              _BAUDCON1bits 000F7E  
         ?_interrupt_TXIF 0001            i2_ringbuf_push 01AE                     ?_main 0001  
                   _ADRES 000FC3                     _LATB7 007C57           __end_of___lwdiv 0564  
         __end_of___lwmod 05B0                     i2l150 0650                     i2l241 00B2  
                   i2l234 008E                     i2l247 00B6                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94            __CFG_FCMEN$OFF 000000  
      __size_of_UART_init 0020     ringbuf_push@asciicode 0023          __end_of_OSC_init 06CC  
                   tablat 000FF5                     status 000FD8           __end_of_tx_send 06A8  
         __initialization 0676              __end_of_main 0318       ringbuf_init@bufsize 0021  
  __end_ofi2_ringbuf_push 0268                    ??_main 0030             __activetblptr 000000  
      __size_ofi2_tx_send 0016                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ANCON0 000F48                    _ANCON1 000F49                    i2l1314 0468  
                  i2l1334 03A2                    i2l1510 0092                    i2l1328 039E  
                  i2l1506 0086                    i2l1388 0254                    i2l1492 0054  
          __CFG_WDTEN$OFF 000000                    _RCREG1 000FAF                    _SPBRG1 000FB0  
          __CFG_WPCFG$OFF 000000                    _TXREG1 000FAE           i2ringbuf_num@rb 0001  
          __CFG_WPDIS$OFF 000000            __CFG_XINST$OFF 000000              ?_ringbuf_pop 0005  
            ?_ringbuf_num 001D         __end_of_UART_init 0676              ?_timer0_init 0001  
               ??___lwdiv 0021                 ??___lwmod 0021           ?i2_ringbuf_push 0005  
                  clear_0 0686           __CFG_CLKOEC$OFF 000000                    _tx_buf 0037  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_tx_send 0029          __end_of_tx_sendn 0508      __CFG_LS48MHZ$SYS48X8 000000  
              __accesstop 0060   __end_of__initialization 068C             ___rparam_used 000001  
       __end_ofi2_tx_send 06BE      __CFG_WPEND$PAGE_WPFP 000000            __pcstackCOMRAM 0001  
               ?_OSC_init 0001           __CFG_DSWDTPS$G2 000000   i2ringbuf_push@asciicode 0007  
              __pbssBANK0 00C4                 ISR@prev_A 0035                 ISR@prev_B 0036  
        ??_interrupt_TXIF 000B                ??_OSC_init 001D        __CFG_OSC$INTOSCPLL 000000  
         __CFG_WDTPS$1024 000000              tx_sendn@temp 002E                   i2u73_40 0064  
                 i2u73_46 0066                   _SPBRGH1 000F7F                   i2u77_40 009A  
                 i2u77_46 009C          __CFG_CFGPLLEN$ON 000000          i2ringbuf_push@rb 0005  
                 __Hparam 0000                   __Lparam 0000             ?_ringbuf_init 001D  
           ?_ringbuf_push 0021                   ___lwdiv 0508                   ___lwmod 0564  
    __size_of_ringbuf_pop 0090      __size_of_ringbuf_num 007C           __CFG_STVREN$OFF 000000  
                 __pcinit 0676                 ?_tx_sendn 002A                   __ramtop 0F00  
    __size_of_timer0_init 0032                   __ptext0 0268                   __ptext1 04A0  
                 __ptext2 0692                   __ptext3 00F4                   __ptext4 03A8  
                 __ptext5 0564                   __ptext6 0508                   __ptext7 05F2  
                 __ptext8 05B0                   __ptext9 0656                   _encoder 00C4  
               _T0CONbits 000FD5              __size_of_ISR 00E8                 _T1CONbits 000FCD  
               _T3CONbits 000F79                 _T5CONbits 000F22                   _tx_send 0692  
    end_of_initialization 068C    __size_ofi2_ringbuf_num 007C              _CTMUCONHbits 000FB3  
            _CTMUCONLbits 000FB2          ??i2_ringbuf_push 0008            tx_sendn@digits 002C  
          ??_ringbuf_init 0022            ??_ringbuf_push 0024                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
              ??_tx_sendn 002D                 _PORTBbits 000F81                 _UART_init 0656  
        __CFG_DSBOREN$OFF 000000          __CFG_CPUDIV$OSC1 000000          __CFG_IOL1WAY$OFF 000000  
              main@prev_e 00C6       __CFG_MSSP7B_EN$MSK7 000000            ringbuf_init@rb 001D  
               i2_tx_send 06A8            ringbuf_pop@ret 000A             i2_ringbuf_num 0424  
          ringbuf_push@rb 0021                ?_UART_init 0001         __size_of_OSC_init 000E  
        __CFG_DSWDTEN$OFF 000000       start_initialization 0676               __end_of_ISR 00F0  
          ?i2_ringbuf_num 0001                ?i2_tx_send 0001         __CFG_ADCSEL$BIT12 000000  
             __pbssCOMRAM 0032             __pcstackBANK0 0060      __end_of_ringbuf_init 05F2  
    __end_of_ringbuf_push 01AE          tx_send@asciicode 0029                  ISR@ascii 001C  
        ___lwdiv@dividend 001D                 __pintcode 0008                  ?___lwdiv 001D  
                ?___lwmod 001D               ??_UART_init 001D         __size_of_tx_sendn 0068  
    __CFG_RTCOSC$T1OSCREF 000000          ___lwdiv@quotient 0021                  ?_tx_send 0001  
                _CTMUCONH 000FB3                  _CTMUCONL 000FB2                  _CTMUICON 000FB1  
ringbuf_init@internal_buf 001F                  _IPR1bits 000F9F                  _IPR2bits 000FA2  
                _PIE1bits 000F9D                  _PIE2bits 000FA0                  _IPR5bits 000F99  
                _PIE5bits 000F91           ??i2_ringbuf_num 0003                  _PIR1bits 000F9E  
                _PIR2bits 000FA1                  _PIR5bits 000F98             ??_ringbuf_pop 0007  
           ??_ringbuf_num 001F             tx_sendn@value 002A             ??_timer0_init 001D  
             ??i2_tx_send 000D                  _OSC_init 06BE                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1          __CFG_SOSCSEL$LOW 000000   __size_of_interrupt_TXIF 0032  
               main@txbuf 0060             ringbuf_pop@rb 0005             ringbuf_num@rb 001D  
             _INTCON2bits 000FF1                  __Hrparam 0000                  __Lrparam 0000  
        __size_of___lwdiv 005C          __size_of___lwmod 004C       __end_of_ringbuf_pop 03A8  
     __end_of_ringbuf_num 0424       __end_of_timer0_init 0624     __size_of_ringbuf_init 0042  
   __size_of_ringbuf_push 00BA           ___lwdiv@divisor 001F           ___lwdiv@counter 0023  
    timer0_init@prescaler 001E                  __ptext10 06BE                  __ptext12 06A8  
                __ptext13 01AE                  __ptext14 0624                  __ptext15 0318  
                __ptext16 0424          __size_of_tx_send 0016             __size_of_main 00B0  
            _ringbuf_init 05B0              _ringbuf_push 00F4                  _tx_sendn 04A0  
 __size_ofi2_ringbuf_push 00BA               _OSCTUNEbits 000F9B                _INTCONbits 000FF2  
                intlevel2 0000          ___lwmod@dividend 001D                 tx_sendn@i 002D  
              _RCSTA1bits 000FAC                _OSCCONbits 000FD3               _ringbuf_pop 0318  
             _ringbuf_num 03A8               _timer0_init 05F2            _interrupt_TXIF 0624  
         ___lwmod@divisor 001F           ___lwmod@counter 0021        i2tx_send@asciicode 000D  
