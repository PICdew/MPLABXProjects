

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Feb 09 17:54:06 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  011E                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019C                     	;# 
   104  019D                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  020C                     	;# 
   108  020D                     	;# 
   109  0211                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0212                     	;# 
   113  0213                     	;# 
   114  0213                     	;# 
   115  0214                     	;# 
   116  0214                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0215                     	;# 
   120  0216                     	;# 
   121  0216                     	;# 
   122  0217                     	;# 
   123  0217                     	;# 
   124  0219                     	;# 
   125  021A                     	;# 
   126  021B                     	;# 
   127  021C                     	;# 
   128  021D                     	;# 
   129  021E                     	;# 
   130  021F                     	;# 
   131  0291                     	;# 
   132  0291                     	;# 
   133  0292                     	;# 
   134  0293                     	;# 
   135  0294                     	;# 
   136  0295                     	;# 
   137  0295                     	;# 
   138  0296                     	;# 
   139  0298                     	;# 
   140  0298                     	;# 
   141  0299                     	;# 
   142  029A                     	;# 
   143  029B                     	;# 
   144  029C                     	;# 
   145  029C                     	;# 
   146  029D                     	;# 
   147  029E                     	;# 
   148  029E                     	;# 
   149  0311                     	;# 
   150  0311                     	;# 
   151  0312                     	;# 
   152  0313                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  0394                     	;# 
   158  0395                     	;# 
   159  0396                     	;# 
   160  039A                     	;# 
   161  039C                     	;# 
   162  039D                     	;# 
   163  039E                     	;# 
   164  039F                     	;# 
   165  0415                     	;# 
   166  0416                     	;# 
   167  0417                     	;# 
   168  041C                     	;# 
   169  041D                     	;# 
   170  041E                     	;# 
   171  0FE4                     	;# 
   172  0FE5                     	;# 
   173  0FE6                     	;# 
   174  0FE7                     	;# 
   175  0FE8                     	;# 
   176  0FE9                     	;# 
   177  0FEA                     	;# 
   178  0FEB                     	;# 
   179  0FED                     	;# 
   180  0FEE                     	;# 
   181  0FEF                     	;# 
   182                           
   183                           	psect	idataBANK0
   184  0301                     __pidataBANK0:	
   185                           
   186                           ;initializer for LCD_SetCursor@F2883
   187  0301  3400               	retlw	0
   188  0302  3440               	retlw	64
   189  000B                     _INTCONbits	set	11
   190  0011                     _PIR1bits	set	17
   191  0018                     _T1CONbits	set	24
   192  0017                     _TMR1H	set	23
   193  0016                     _TMR1L	set	22
   194  0093                     _BCL1IF	set	147
   195  0061                     _RA1	set	97
   196  0062                     _RA2	set	98
   197  008B                     _SSP1IF	set	139
   198  008C                     _TXIF	set	140
   199  009B                     _ADRES	set	155
   200  009D                     _ADCON0bits	set	157
   201  009E                     _ADCON1bits	set	158
   202  0095                     _OPTION_REGbits	set	149
   203  0099                     _OSCCON	set	153
   204  0091                     _PIE1bits	set	145
   205  008C                     _TRISA	set	140
   206  008D                     _TRISB	set	141
   207  048C                     _TXIE	set	1164
   208  0117                     _FVRCON	set	279
   209  0868                     _LATB0	set	2152
   210  0869                     _LATB1	set	2153
   211  086B                     _LATB3	set	2155
   212  086C                     _LATB4	set	2156
   213  086D                     _LATB5	set	2157
   214  018C                     _ANSELA	set	396
   215  018D                     _ANSELB	set	397
   216  019D                     _RCSTA	set	413
   217  019C                     _SPBRGH	set	412
   218  019B                     _SPBRGL	set	411
   219  019A                     _TXREG	set	410
   220  019E                     _TXSTA	set	414
   221  0CFB                     _BRG16	set	3323
   222  0CEF                     _SPEN	set	3311
   223  0212                     _SSP1ADD	set	530
   224  0211                     _SSP1BUF	set	529
   225  0215                     _SSP1CON1	set	533
   226  0216                     _SSP1CON2	set	534
   227  0216                     _SSP1CON2bits	set	534
   228  0214                     _SSP1STAT	set	532
   229  020C                     _WPUA	set	524
   230  020D                     _WPUB	set	525
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  004C                     start_initialization:	
   236  004C                     __initialization:	
   237                           
   238                           ; Clear objects allocated to COMMON
   239  004C  01FD               	clrf	__pbssCOMMON& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242  004D  3020               	movlw	low __pbssBANK0
   243  004E  0084               	movwf	4
   244  004F  3000               	movlw	high __pbssBANK0
   245  0050  0085               	movwf	5
   246  0051  3010               	movlw	16
   247  0052  3182  22FB  3180   	fcall	clear_ram0
   248                           
   249                           ; Initialize objects allocated to BANK0
   250  0055  3183  2301  3180   	fcall	__pidataBANK0	;fetch initializer
   251  0058  00B5               	movwf	__pdataBANK0& (0+127)
   252  0059  3183  2302         	fcall	__pidataBANK0+1	;fetch initializer
   253  005B  00B6               	movwf	(__pdataBANK0+1)& (0+127)
   254  005C                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  005C                     __end_of__initialization:	
   258  005C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   259  005D  0020               	movlb	0
   260  005E  3182  2A9A         	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  007D                     __pbssCOMMON:	
   264  007D                     _cnt_clk:	
   265  007D                     	ds	1
   266                           
   267                           	psect	bssBANK0
   268  0020                     __pbssBANK0:	
   269  0020                     _serial_data1:	
   270  0020                     	ds	2
   271  0022                     _serial_data2:	
   272  0022                     	ds	2
   273  0024                     _cnt_t1:	
   274  0024                     	ds	1
   275  0025                     _tx_buf:	
   276  0025                     	ds	5
   277  002A                     _sw_m:	
   278  002A                     	ds	3
   279  002D                     _sw_p:	
   280  002D                     	ds	3
   281                           
   282                           	psect	dataBANK0
   283  0035                     __pdataBANK0:	
   284  0035                     LCD_SetCursor@F2883:	
   285  0035                     	ds	2
   286                           
   287                           	psect	clrtext
   288  02FB                     clear_ram0:	
   289                           ;	Called with FSR0 containing the base address, and
   290                           ;	WREG with the size to clear
   291                           
   292  02FB  0064               	clrwdt	;clear the watchdog before getting into this loop
   293  02FC                     clrloop0:	
   294  02FC  0180               	clrf	0	;clear RAM location pointed to by FSR
   295  02FD  3101               	addfsr 0,1
   296  02FE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   297  02FF  2AFC               	goto	clrloop0	;have we reached the end yet?
   298  0300  3400               	retlw	0	;all done for this memory range, return
   299                           
   300                           	psect	cstackCOMMON
   301  0070                     __pcstackCOMMON:	
   302  0070                     ?_send_timer_interrupt:	
   303  0070                     ?_timer0_init:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_timer1_init:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_button_timer_interrupt:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ??_ringbuf_pop:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ??_ringbuf_num:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_ISR:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_data_set:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_main_init:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_ringbuf_pop:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_ringbuf_num:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?___awdiv:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0070                     button_timer_interrupt@sw_value:	
   340                           ; 2 bytes @ 0x0
   341                           
   342  0070                     ___awdiv@divisor:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 2 bytes @ 0x0
   347  0070                     	ds	1
   348  0071                     ??_button_timer_interrupt:	
   349  0071                     ringbuf_num@rb:	
   350                           ; 0 bytes @ 0x1
   351                           
   352                           
   353                           ; 1 bytes @ 0x1
   354  0071                     	ds	1
   355  0072                     ringbuf_pop@ret:	
   356  0072                     ___awdiv@dividend:	
   357                           ; 1 bytes @ 0x2
   358                           
   359                           
   360                           ; 2 bytes @ 0x2
   361  0072                     	ds	1
   362  0073                     button_timer_interrupt@bt:	
   363  0073                     ringbuf_pop@rb:	
   364                           ; 1 bytes @ 0x3
   365                           
   366                           
   367                           ; 1 bytes @ 0x3
   368  0073                     	ds	1
   369  0074                     ??___awdiv:	
   370                           
   371                           ; 0 bytes @ 0x4
   372  0074                     	ds	1
   373  0075                     ___awdiv@counter:	
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     ___awdiv@sign:	
   378                           
   379                           ; 1 bytes @ 0x6
   380  0076                     	ds	1
   381  0077                     ___awdiv@quotient:	
   382                           
   383                           ; 2 bytes @ 0x7
   384  0077                     	ds	2
   385  0079                     ??_send_timer_interrupt:	
   386                           
   387                           ; 0 bytes @ 0x9
   388  0079                     	ds	4
   389                           
   390                           	psect	cstackBANK0
   391  0030                     __pcstackBANK0:	
   392  0030                     ??_ISR:	
   393                           
   394                           ; 0 bytes @ 0x0
   395  0030                     	ds	2
   396  0032                     ??_timer0_init:	
   397  0032                     ??_timer1_init:	
   398                           ; 0 bytes @ 0x2
   399                           
   400  0032                     ??_data_set:	
   401                           ; 0 bytes @ 0x2
   402                           
   403                           
   404                           ; 0 bytes @ 0x2
   405  0032                     	ds	1
   406  0033                     timer0_init@prescaler:	
   407  0033                     timer1_init@prescaler:	
   408                           ; 1 bytes @ 0x3
   409                           
   410                           
   411                           ; 1 bytes @ 0x3
   412  0033                     	ds	1
   413  0034                     ??_main_init:	
   414  0034                     data_set@value:	
   415                           ; 0 bytes @ 0x4
   416                           
   417                           
   418                           ; 1 bytes @ 0x4
   419  0034                     	ds	1
   420  0035                     ??_main:	
   421                           
   422                           	psect	maintext
   423  029A                     __pmaintext:	
   424                           ; 0 bytes @ 0x5
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 125 in file "PIC16F1827-EV01.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  i               1    0        unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  2  301[COMMON] int 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 17F/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   444 ;;      Params:         0       0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels required when called:    5
   450 ;; This function calls:
   451 ;;		_data_set
   452 ;;		_main_init
   453 ;; This function is called by:
   454 ;;		Startup code after reset
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _main
   460  029A                     _main:	
   461                           
   462                           ;PIC16F1827-EV01.c: 126: main_init();
   463                           
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   466  029A  3182  22D0  3182   	fcall	_main_init
   467                           
   468                           ;PIC16F1827-EV01.c: 127: uint8_t i;
   469                           ;PIC16F1827-EV01.c: 128: INTCONbits.GIE = 1;
   470  029D  178B               	bsf	11,7	;volatile
   471  029E                     l1718:	
   472                           ;PIC16F1827-EV01.c: 130: while (1) {
   473                           
   474                           
   475                           ;PIC16F1827-EV01.c: 131: if (sw_p.flag.press == 1) {
   476  029E  0020               	movlb	0	; select bank0
   477  029F  1C2F               	btfss	_sw_p+2,0
   478  02A0  2AA9               	goto	l1726
   479                           
   480                           ;PIC16F1827-EV01.c: 132: sw_p.flag.press = 0;
   481  02A1  102F               	bcf	_sw_p+2,0
   482                           
   483                           ;PIC16F1827-EV01.c: 133: data_set(0);
   484  02A2  3000               	movlw	0
   485  02A3  3182  227C  3182   	fcall	_data_set
   486                           
   487                           ;PIC16F1827-EV01.c: 134: LATB0 = ~LATB0;
   488  02A6  3001               	movlw	1
   489  02A7  0022               	movlb	2	; select bank2
   490  02A8  068D               	xorwf	13,f
   491  02A9                     l1726:	
   492                           
   493                           ;PIC16F1827-EV01.c: 135: }
   494                           ;PIC16F1827-EV01.c: 136: if (sw_m.flag.press == 1) {
   495  02A9  0020               	movlb	0	; select bank0
   496  02AA  1C2C               	btfss	_sw_m+2,0
   497  02AB  2A9E               	goto	l1718
   498                           
   499                           ;PIC16F1827-EV01.c: 137: sw_m.flag.press = 0;
   500  02AC  102C               	bcf	_sw_m+2,0
   501                           
   502                           ;PIC16F1827-EV01.c: 138: data_set(48);
   503  02AD  3030               	movlw	48
   504  02AE  3182  227C  3182   	fcall	_data_set
   505                           
   506                           ;PIC16F1827-EV01.c: 139: LATB1 = ~LATB1;
   507  02B1  3002               	movlw	2
   508  02B2  0022               	movlb	2	; select bank2
   509  02B3  068D               	xorwf	13,f
   510  02B4  2A9E               	goto	l1718
   511  02B5                     __end_of_main:	
   512                           ;PIC16F1827-EV01.c: 140: }
   513                           ;PIC16F1827-EV01.c: 141: }
   514                           ;PIC16F1827-EV01.c: 142: return 0;
   515                           ;	Return value of _main is never used
   516                           
   517                           
   518                           	psect	text1
   519  02D0                     __ptext1:	
   520 ;; *************** function _main_init *****************
   521 ;; Defined at:
   522 ;;		line 108 in file "PIC16F1827-EV01.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;		None               void
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   536 ;;      Params:         0       0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    4
   543 ;; This function calls:
   544 ;;		_timer0_init
   545 ;;		_timer1_init
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _main_init
   553  02D0                     _main_init:	
   554                           
   555                           ;PIC16F1827-EV01.c: 109: OSCCON = 0x70;
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
   559  02D0  3070               	movlw	112
   560  02D1  0021               	movlb	1	; select bank1
   561  02D2  0099               	movwf	25	;volatile
   562                           
   563                           ;PIC16F1827-EV01.c: 110: TRISA = 0xFF;
   564  02D3  30FF               	movlw	255
   565  02D4  008C               	movwf	12	;volatile
   566                           
   567                           ;PIC16F1827-EV01.c: 111: TRISB = 0x00;
   568  02D5  018D               	clrf	13	;volatile
   569                           
   570                           ;PIC16F1827-EV01.c: 112: ANSELA = 0x00;
   571  02D6  0023               	movlb	3	; select bank3
   572  02D7  018C               	clrf	12	;volatile
   573                           
   574                           ;PIC16F1827-EV01.c: 113: ANSELB = 0x00;
   575  02D8  018D               	clrf	13	;volatile
   576                           
   577                           ;PIC16F1827-EV01.c: 114: WPUA = 0xFF;
   578  02D9  30FF               	movlw	255
   579  02DA  0024               	movlb	4	; select bank4
   580  02DB  008C               	movwf	12	;volatile
   581                           
   582                           ;PIC16F1827-EV01.c: 115: WPUB = 0x00;
   583  02DC  018D               	clrf	13	;volatile
   584                           
   585                           ;PIC16F1827-EV01.c: 116: OPTION_REGbits.nWPUEN = 0;
   586  02DD  0021               	movlb	1	; select bank1
   587  02DE  1395               	bcf	21,7	;volatile
   588                           
   589                           ;PIC16F1827-EV01.c: 118: timer0_init(8);
   590  02DF  3008               	movlw	8
   591  02E0  3182  22B5  3182   	fcall	_timer0_init
   592                           
   593                           ;PIC16F1827-EV01.c: 119: timer1_init(2);
   594  02E3  3002               	movlw	2
   595  02E4  3182  22E8         	fcall	_timer1_init
   596                           
   597                           ;PIC16F1827-EV01.c: 122: INTCONbits.PEIE = 1;
   598  02E6  170B               	bsf	11,6	;volatile
   599  02E7  0008               	return
   600  02E8                     __end_of_main_init:	
   601                           
   602                           	psect	text2
   603  02E8                     __ptext2:	
   604 ;; *************** function _timer1_init *****************
   605 ;; Defined at:
   606 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  prescaler       1    wreg     unsigned char 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  prescaler       1    3[BANK0 ] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;		None               void
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   620 ;;      Params:         0       0       0       0       0       0
   621 ;;      Locals:         0       1       0       0       0       0
   622 ;;      Temps:          0       1       0       0       0       0
   623 ;;      Totals:         0       2       0       0       0       0
   624 ;;Total ram usage:        2 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    3
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_main_init
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _timer1_init
   636  02E8                     _timer1_init:	
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
   640                           ;timer1_init@prescaler stored from wreg
   641  02E8  0020               	movlb	0	; select bank0
   642  02E9  00B3               	movwf	timer1_init@prescaler
   643                           
   644                           ;My_header_16F.h: 30: T1CONbits.TMR1ON = 1;
   645  02EA  1418               	bsf	24,0	;volatile
   646                           
   647                           ;My_header_16F.h: 31: T1CONbits.TMR1CS = 0;
   648  02EB  303F               	movlw	-193
   649  02EC  0598               	andwf	24,f	;volatile
   650                           
   651                           ;My_header_16F.h: 32: T1CONbits.T1CKPS = prescaler;
   652  02ED  0833               	movf	timer1_init@prescaler,w
   653  02EE  00B2               	movwf	??_timer1_init
   654  02EF  0EB2               	swapf	??_timer1_init,f
   655  02F0  0818               	movf	24,w	;volatile
   656  02F1  0632               	xorwf	??_timer1_init,w
   657  02F2  39CF               	andlw	-49
   658  02F3  0632               	xorwf	??_timer1_init,w
   659  02F4  0098               	movwf	24	;volatile
   660                           
   661                           ;My_header_16F.h: 33: TMR1H = 0x00;
   662  02F5  0197               	clrf	23	;volatile
   663                           
   664                           ;My_header_16F.h: 34: TMR1L = 0x00;
   665  02F6  0196               	clrf	22	;volatile
   666                           
   667                           ;My_header_16F.h: 35: PIE1bits.TMR1IE = 1;
   668  02F7  0021               	movlb	1	; select bank1
   669  02F8  1411               	bsf	17,0	;volatile
   670                           
   671                           ;My_header_16F.h: 36: INTCONbits.PEIE = 1;
   672  02F9  170B               	bsf	11,6	;volatile
   673  02FA  0008               	return
   674  02FB                     __end_of_timer1_init:	
   675                           
   676                           	psect	text3
   677  02B5                     __ptext3:	
   678 ;; *************** function _timer0_init *****************
   679 ;; Defined at:
   680 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  prescaler       1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  prescaler       1    3[BANK0 ] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   694 ;;      Params:         0       0       0       0       0       0
   695 ;;      Locals:         0       1       0       0       0       0
   696 ;;      Temps:          0       1       0       0       0       0
   697 ;;      Totals:         0       2       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    3
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main_init
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _timer0_init
   710  02B5                     _timer0_init:	
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
   714                           ;timer0_init@prescaler stored from wreg
   715  02B5  0020               	movlb	0	; select bank0
   716  02B6  00B3               	movwf	timer0_init@prescaler
   717                           
   718                           ;My_header_16F.h: 16: if (prescaler == 0) {
   719  02B7  08B3               	movf	timer0_init@prescaler,f
   720  02B8  1D03               	skipz
   721  02B9  2ABD               	goto	l91
   722                           
   723                           ;My_header_16F.h: 17: OPTION_REGbits.PSA = 1;
   724  02BA  0021               	movlb	1	; select bank1
   725  02BB  1595               	bsf	21,3	;volatile
   726                           
   727                           ;My_header_16F.h: 18: } else {
   728  02BC  2ACB               	goto	l1286
   729  02BD                     l91:	
   730                           
   731                           ;My_header_16F.h: 19: OPTION_REGbits.PSA = 0;
   732  02BD  0021               	movlb	1	; select bank1
   733  02BE  1195               	bcf	21,3	;volatile
   734                           
   735                           ;My_header_16F.h: 20: OPTION_REGbits.PS = prescaler - 1;
   736  02BF  30FF               	movlw	255
   737  02C0  0020               	movlb	0	; select bank0
   738  02C1  0733               	addwf	timer0_init@prescaler,w
   739  02C2  00B2               	movwf	??_timer0_init
   740  02C3  0021               	movlb	1	; select bank1
   741  02C4  0815               	movf	21,w	;volatile
   742  02C5  0020               	movlb	0	; select bank0
   743  02C6  0632               	xorwf	??_timer0_init,w
   744  02C7  39F8               	andlw	-8
   745  02C8  0632               	xorwf	??_timer0_init,w
   746  02C9  0021               	movlb	1	; select bank1
   747  02CA  0095               	movwf	21	;volatile
   748  02CB                     l1286:	
   749                           
   750                           ;My_header_16F.h: 21: }
   751                           ;My_header_16F.h: 22: OPTION_REGbits.TMR0CS = 0;
   752  02CB  1295               	bcf	21,5	;volatile
   753                           
   754                           ;My_header_16F.h: 23: OPTION_REGbits.TMR0SE = 0;
   755  02CC  1215               	bcf	21,4	;volatile
   756                           
   757                           ;My_header_16F.h: 24: INTCONbits.TMR0IE = 1;
   758  02CD  168B               	bsf	11,5	;volatile
   759                           
   760                           ;My_header_16F.h: 25: INTCONbits.PEIE = 1;
   761  02CE  170B               	bsf	11,6	;volatile
   762  02CF  0008               	return
   763  02D0                     __end_of_timer0_init:	
   764                           
   765                           	psect	text4
   766  027C                     __ptext4:	
   767 ;; *************** function _data_set *****************
   768 ;; Defined at:
   769 ;;		line 102 in file "PIC16F1827-EV01.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  value           1    wreg     unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  value           1    4[BANK0 ] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   783 ;;      Params:         0       0       0       0       0       0
   784 ;;      Locals:         0       1       0       0       0       0
   785 ;;      Temps:          0       2       0       0       0       0
   786 ;;      Totals:         0       3       0       0       0       0
   787 ;;Total ram usage:        3 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _data_set
   799  027C                     _data_set:	
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _data_set: [wreg+status,2+status,0]
   803                           ;data_set@value stored from wreg
   804  027C  0020               	movlb	0	; select bank0
   805  027D  00B4               	movwf	data_set@value
   806                           
   807                           ;PIC16F1827-EV01.c: 103: serial_data1 = (value << 9) + 0x00;
   808  027E  0834               	movf	data_set@value,w
   809  027F  00B2               	movwf	??_data_set
   810  0280  01B3               	clrf	??_data_set+1
   811  0281  3009               	movlw	9
   812  0282                     u1235:	
   813  0282  35B2               	lslf	??_data_set,f
   814  0283  0DB3               	rlf	??_data_set+1,f
   815  0284  0B89               	decfsz	9,f
   816  0285  2A82               	goto	u1235
   817  0286  0832               	movf	??_data_set,w
   818  0287  00A0               	movwf	_serial_data1
   819  0288  0833               	movf	??_data_set+1,w
   820  0289  00A1               	movwf	_serial_data1+1
   821                           
   822                           ;PIC16F1827-EV01.c: 104: serial_data1 = (value << 9) + 0x10;
   823  028A  0834               	movf	data_set@value,w
   824  028B  00B2               	movwf	??_data_set
   825  028C  01B3               	clrf	??_data_set+1
   826  028D  3009               	movlw	9
   827  028E                     u1245:	
   828  028E  35B2               	lslf	??_data_set,f
   829  028F  0DB3               	rlf	??_data_set+1,f
   830  0290  0B89               	decfsz	9,f
   831  0291  2A8E               	goto	u1245
   832  0292  0832               	movf	??_data_set,w
   833  0293  3E10               	addlw	16
   834  0294  00A0               	movwf	_serial_data1
   835  0295  3000               	movlw	0
   836  0296  3D33               	addwfc	??_data_set+1,w
   837  0297  00A1               	movwf	_serial_data1+1
   838                           
   839                           ;PIC16F1827-EV01.c: 105: cnt_clk = 0;
   840  0298  01FD               	clrf	_cnt_clk
   841  0299  0008               	return
   842  029A                     __end_of_data_set:	
   843                           
   844                           	psect	intentry
   845  0004                     __pintentry:	
   846 ;; *************** function _ISR *****************
   847 ;; Defined at:
   848 ;;		line 46 in file "PIC16F1827-EV01.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  i               1    0        unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;		None               void
   855 ;; Registers used:
   856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   862 ;;      Params:         0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0
   864 ;;      Temps:          0       2       0       0       0       0
   865 ;;      Totals:         0       2       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    2
   869 ;; This function calls:
   870 ;;		_button_timer_interrupt
   871 ;;		_ringbuf_num
   872 ;;		_ringbuf_pop
   873 ;;		_send_timer_interrupt
   874 ;; This function is called by:
   875 ;;		Interrupt level 1
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879  0004                     _ISR:	
   880                           
   881                           ;incstack = 0
   882                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   883  0004  147E               	bsf	126,0	;set compiler interrupt flag
   884  0005  3180               	pagesel	$
   885  0006  0020               	movlb	0	; select bank0
   886  0007  087F               	movf	127,w
   887  0008  00B1               	movwf	??_ISR+1
   888                           
   889                           ;PIC16F1827-EV01.c: 47: uint8_t i;
   890                           ;PIC16F1827-EV01.c: 48: if (PIR1bits.RCIF == 1) {
   891  0009  1A91               	btfsc	17,5	;volatile
   892                           
   893                           ;PIC16F1827-EV01.c: 49: PIR1bits.RCIF = 0;
   894  000A  1291               	bcf	17,5	;volatile
   895                           
   896                           ;PIC16F1827-EV01.c: 50: }
   897                           ;PIC16F1827-EV01.c: 51: if (PIR1bits.TXIF & PIE1bits.TXIE) {
   898  000B  0021               	movlb	1	; select bank1
   899  000C  0E11               	swapf	17,w	;volatile
   900  000D  3901               	andlw	1
   901  000E  0020               	movlb	0	; select bank0
   902  000F  00B0               	movwf	??_ISR
   903  0010  0E11               	swapf	17,w	;volatile
   904  0011  3901               	andlw	1
   905  0012  0530               	andwf	??_ISR,w
   906  0013  1903               	btfsc	3,2
   907  0014  2825               	goto	i1l265
   908                           
   909                           ;PIC16F1827-EV01.c: 52: if (ringbuf_num(&tx_buf)) {
   910  0015  3025               	movlw	_tx_buf& (0+255)
   911  0016  3182  2250  3180   	fcall	_ringbuf_num
   912  0019  3A00               	xorlw	0
   913  001A  1903               	skipnz
   914  001B  2823               	goto	i1l266
   915                           
   916                           ;PIC16F1827-EV01.c: 53: TXREG = ringbuf_pop(&tx_buf);
   917  001C  3025               	movlw	_tx_buf& (0+255)
   918  001D  3182  2223  3180   	fcall	_ringbuf_pop
   919  0020  0023               	movlb	3	; select bank3
   920  0021  009A               	movwf	26	;volatile
   921                           
   922                           ;PIC16F1827-EV01.c: 54: } else {
   923  0022  2825               	goto	i1l265
   924  0023                     i1l266:	
   925                           
   926                           ;PIC16F1827-EV01.c: 55: PIE1bits.TXIE = 0;
   927  0023  0021               	movlb	1	; select bank1
   928  0024  1211               	bcf	17,4	;volatile
   929  0025                     i1l265:	
   930                           
   931                           ;PIC16F1827-EV01.c: 56: }
   932                           ;PIC16F1827-EV01.c: 57: }
   933                           ;PIC16F1827-EV01.c: 58: if (PIR1bits.TMR1IF == 1) {
   934  0025  0020               	movlb	0	; select bank0
   935  0026  1C11               	btfss	17,0	;volatile
   936  0027  2840               	goto	i1l1708
   937                           
   938                           ;PIC16F1827-EV01.c: 59: PIR1bits.TMR1IF = 0;
   939  0028  1011               	bcf	17,0	;volatile
   940                           
   941                           ;PIC16F1827-EV01.c: 60: button_timer_interrupt(&sw_p, !RA1);
   942  0029  1003               	clrc
   943  002A  1C8C               	btfss	12,1	;volatile
   944  002B  1403               	setc
   945  002C  3000               	movlw	0
   946  002D  1803               	btfsc	3,0
   947  002E  3001               	movlw	1
   948  002F  00F0               	movwf	button_timer_interrupt@sw_value
   949  0030  302D               	movlw	_sw_p& (0+255)
   950  0031  3180  2060  3180   	fcall	_button_timer_interrupt
   951                           
   952                           ;PIC16F1827-EV01.c: 61: button_timer_interrupt(&sw_m, !RA2);
   953  0034  1003               	clrc
   954  0035  0020               	movlb	0	; select bank0
   955  0036  1D0C               	btfss	12,2	;volatile
   956  0037  1403               	setc
   957  0038  3000               	movlw	0
   958  0039  1803               	btfsc	3,0
   959  003A  3001               	movlw	1
   960  003B  00F0               	movwf	button_timer_interrupt@sw_value
   961  003C  302A               	movlw	_sw_m& (0+255)
   962  003D  3180  2060  3180   	fcall	_button_timer_interrupt
   963  0040                     i1l1708:	
   964                           
   965                           ;PIC16F1827-EV01.c: 62: }
   966                           ;PIC16F1827-EV01.c: 63: if (INTCONbits.TMR0IF == 1) {
   967  0040  1D0B               	btfss	11,2	;volatile
   968  0041  2845               	goto	i1l270
   969                           
   970                           ;PIC16F1827-EV01.c: 64: INTCONbits.TMR0IF = 0;
   971  0042  110B               	bcf	11,2	;volatile
   972                           
   973                           ;PIC16F1827-EV01.c: 65: send_timer_interrupt();
   974  0043  3181  2119         	fcall	_send_timer_interrupt
   975  0045                     i1l270:	
   976  0045  0020               	movlb	0	; select bank0
   977  0046  0831               	movf	??_ISR+1,w
   978  0047  00FF               	movwf	127
   979  0048  107E               	bcf	126,0	;clear compiler interrupt flag
   980  0049  0009               	retfie
   981  004A                     __end_of_ISR:	
   982                           
   983                           	psect	text6
   984  0119                     __ptext6:	
   985 ;; *************** function _send_timer_interrupt *****************
   986 ;; Defined at:
   987 ;;		line 69 in file "PIC16F1827-EV01.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1001 ;;      Params:         0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0
  1003 ;;      Temps:          4       0       0       0       0       0
  1004 ;;      Totals:         4       0       0       0       0       0
  1005 ;;Total ram usage:        4 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    1
  1008 ;; This function calls:
  1009 ;;		___awdiv
  1010 ;; This function is called by:
  1011 ;;		_ISR
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _send_timer_interrupt
  1017  0119                     _send_timer_interrupt:	
  1018                           
  1019                           ;PIC16F1827-EV01.c: 70: if (cnt_clk < 32) {
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _send_timer_interrupt: [wreg+status,2+status,0+pclath+cstack]
  1023  0119  3020               	movlw	32
  1024  011A  027D               	subwf	_cnt_clk,w
  1025  011B  1803               	skipnc
  1026  011C  2940               	goto	i1l1488
  1027                           
  1028                           ;PIC16F1827-EV01.c: 71: LATB4 = 0;
  1029  011D  0022               	movlb	2	; select bank2
  1030  011E  120D               	bcf	13,4	;volatile
  1031                           
  1032                           ;PIC16F1827-EV01.c: 72: if (cnt_clk % 2 == 0) {
  1033  011F  187D               	btfsc	_cnt_clk,0
  1034  0120  298B               	goto	i1l284
  1035                           
  1036                           ;PIC16F1827-EV01.c: 73: LATB3 = 1;
  1037  0121  158D               	bsf	13,3	;volatile
  1038                           
  1039                           ;PIC16F1827-EV01.c: 74: LATB5 = (serial_data1 >> (15 - cnt_clk / 2));
  1040  0122  0020               	movlb	0	; select bank0
  1041  0123  0821               	movf	_serial_data1+1,w
  1042  0124  00FA               	movwf	??_send_timer_interrupt+1
  1043  0125  0820               	movf	_serial_data1,w
  1044  0126  00F9               	movwf	??_send_timer_interrupt
  1045  0127  3002               	movlw	2
  1046  0128  00F0               	movwf	___awdiv@divisor
  1047  0129  3000               	movlw	0
  1048  012A  00F1               	movwf	___awdiv@divisor+1
  1049  012B  087D               	movf	_cnt_clk,w
  1050  012C  00FB               	movwf	??_send_timer_interrupt+2
  1051  012D  01FC               	clrf	??_send_timer_interrupt+3
  1052  012E  087B               	movf	??_send_timer_interrupt+2,w
  1053  012F  00F2               	movwf	___awdiv@dividend
  1054  0130  087C               	movf	??_send_timer_interrupt+3,w
  1055  0131  00F3               	movwf	___awdiv@dividend+1
  1056  0132  3181  21D0  3181   	fcall	___awdiv
  1057  0135  0870               	movf	?___awdiv,w
  1058  0136  3AFF               	xorlw	255
  1059  0137  3E01               	addlw	1
  1060  0138  3E0F               	addlw	15
  1061  0139  0A89               	incf	9,f
  1062  013A  293D               	goto	u108_24
  1063  013B                     u108_25:	
  1064  013B  36FA               	lsrf	??_send_timer_interrupt+1,f
  1065  013C  0CF9               	rrf	??_send_timer_interrupt,f
  1066  013D                     u108_24:	
  1067  013D  0B89               	decfsz	9,f
  1068  013E  293B               	goto	u108_25
  1069  013F  2983               	goto	L2
  1070  0140                     i1l1488:	
  1071                           ;PIC16F1827-EV01.c: 77: }
  1072                           ;PIC16F1827-EV01.c: 78: } else if (cnt_clk == 33) {
  1073                           
  1074                           ;PIC16F1827-EV01.c: 76: LATB3 = 0;
  1075                           
  1076                           ;PIC16F1827-EV01.c: 75: } else {
  1077                           
  1078  0140  087D               	movf	_cnt_clk,w
  1079  0141  3A21               	xorlw	33
  1080  0142  1903               	btfsc	3,2
  1081  0143  2999               	goto	i1l1512
  1082                           
  1083                           ;PIC16F1827-EV01.c: 80: } else if (cnt_clk == 34) {
  1084                           
  1085                           ;PIC16F1827-EV01.c: 79: LATB3 = 1;
  1086  0144  087D               	movf	_cnt_clk,w
  1087  0145  3A22               	xorlw	34
  1088  0146  1903               	btfsc	3,2
  1089  0147  29A8               	goto	i1l1516
  1090                           
  1091                           ;PIC16F1827-EV01.c: 82: } else if (cnt_clk == 35) {
  1092                           
  1093                           ;PIC16F1827-EV01.c: 81: LATB4 = 1;
  1094  0148  087D               	movf	_cnt_clk,w
  1095  0149  3A23               	xorlw	35
  1096  014A  1903               	btfsc	3,2
  1097  014B  29B7               	goto	i1l1520
  1098                           
  1099                           ;PIC16F1827-EV01.c: 84: } else if ((cnt_clk - 35) < 32) {
  1100                           
  1101                           ;PIC16F1827-EV01.c: 83: LATB4 = 0;
  1102  014C  087D               	movf	_cnt_clk,w
  1103  014D  3EDD               	addlw	221
  1104  014E  00F9               	movwf	??_send_timer_interrupt
  1105  014F  30FF               	movlw	255
  1106  0150  1803               	skipnc
  1107  0151  3000               	movlw	0
  1108  0152  00FA               	movwf	??_send_timer_interrupt+1
  1109  0153  087A               	movf	??_send_timer_interrupt+1,w
  1110  0154  3A80               	xorlw	128
  1111  0155  00FB               	movwf	??_send_timer_interrupt+2
  1112  0156  3080               	movlw	128
  1113  0157  027B               	subwf	??_send_timer_interrupt+2,w
  1114  0158  1D03               	skipz
  1115  0159  295C               	goto	u114_25
  1116  015A  3020               	movlw	32
  1117  015B  0279               	subwf	??_send_timer_interrupt,w
  1118  015C                     u114_25:	
  1119  015C  1803               	skipnc
  1120  015D  298D               	goto	i1l1510
  1121                           
  1122                           ;PIC16F1827-EV01.c: 85: LATB4 = 0;
  1123  015E  0022               	movlb	2	; select bank2
  1124  015F  120D               	bcf	13,4	;volatile
  1125                           
  1126                           ;PIC16F1827-EV01.c: 86: if ((cnt_clk - 35) % 2 == 0) {
  1127  0160  30DD               	movlw	221
  1128  0161  077D               	addwf	_cnt_clk,w
  1129  0162  00F9               	movwf	??_send_timer_interrupt
  1130  0163  1879               	btfsc	??_send_timer_interrupt,0
  1131  0164  298B               	goto	i1l284
  1132                           
  1133                           ;PIC16F1827-EV01.c: 87: LATB3 = 1;
  1134  0165  158D               	bsf	13,3	;volatile
  1135                           
  1136                           ;PIC16F1827-EV01.c: 88: LATB5 = (serial_data2 >> (15 - (cnt_clk - 35) / 2));
  1137  0166  0020               	movlb	0	; select bank0
  1138  0167  0823               	movf	_serial_data2+1,w
  1139  0168  00FA               	movwf	??_send_timer_interrupt+1
  1140  0169  0822               	movf	_serial_data2,w
  1141  016A  00F9               	movwf	??_send_timer_interrupt
  1142  016B  3002               	movlw	2
  1143  016C  00F0               	movwf	___awdiv@divisor
  1144  016D  3000               	movlw	0
  1145  016E  00F1               	movwf	___awdiv@divisor+1
  1146  016F  087D               	movf	_cnt_clk,w
  1147  0170  3EDD               	addlw	221
  1148  0171  00F2               	movwf	___awdiv@dividend
  1149  0172  30FF               	movlw	255
  1150  0173  1803               	skipnc
  1151  0174  3000               	movlw	0
  1152  0175  00F3               	movwf	___awdiv@dividend+1
  1153  0176  3181  21D0  3181   	fcall	___awdiv
  1154  0179  0870               	movf	?___awdiv,w
  1155  017A  3AFF               	xorlw	255
  1156  017B  3E01               	addlw	1
  1157  017C  3E0F               	addlw	15
  1158  017D  0A89               	incf	9,f
  1159  017E  2981               	goto	u116_24
  1160  017F                     u116_25:	
  1161  017F  36FA               	lsrf	??_send_timer_interrupt+1,f
  1162  0180  0CF9               	rrf	??_send_timer_interrupt,f
  1163  0181                     u116_24:	
  1164  0181  0B89               	decfsz	9,f
  1165  0182  297F               	goto	u116_25
  1166  0183                     L2:	
  1167  0183  1C79               	btfss	??_send_timer_interrupt,0
  1168  0184  2988               	goto	u117_20
  1169  0185  0022               	movlb	2	; select bank2
  1170  0186  168D               	bsf	13,5	;volatile
  1171  0187  29B9               	goto	i1l1522
  1172  0188                     u117_20:	
  1173  0188  0022               	movlb	2	; select bank2
  1174  0189  128D               	bcf	13,5	;volatile
  1175                           
  1176                           ;PIC16F1827-EV01.c: 89: } else {
  1177  018A  29B9               	goto	i1l1522
  1178  018B                     i1l284:	
  1179                           
  1180                           ;PIC16F1827-EV01.c: 90: LATB3 = 0;
  1181  018B  118D               	bcf	13,3	;volatile
  1182                           
  1183                           ;PIC16F1827-EV01.c: 91: }
  1184                           ;PIC16F1827-EV01.c: 92: } else if ((cnt_clk - 35) == 33) {
  1185  018C  29B9               	goto	i1l1522
  1186  018D                     i1l1510:	
  1187  018D  087D               	movf	_cnt_clk,w
  1188  018E  3EDD               	addlw	221
  1189  018F  00F9               	movwf	??_send_timer_interrupt
  1190  0190  30FF               	movlw	255
  1191  0191  1803               	skipnc
  1192  0192  3000               	movlw	0
  1193  0193  00FA               	movwf	??_send_timer_interrupt+1
  1194  0194  3021               	movlw	33
  1195  0195  0679               	xorwf	??_send_timer_interrupt,w
  1196  0196  047A               	iorwf	??_send_timer_interrupt+1,w
  1197  0197  1D03               	skipz
  1198  0198  299C               	goto	i1l1514
  1199  0199                     i1l1512:	
  1200                           
  1201                           ;PIC16F1827-EV01.c: 93: LATB3 = 1;
  1202  0199  0022               	movlb	2	; select bank2
  1203  019A  158D               	bsf	13,3	;volatile
  1204                           
  1205                           ;PIC16F1827-EV01.c: 94: } else if ((cnt_clk - 35) == 34) {
  1206  019B  29B9               	goto	i1l1522
  1207  019C                     i1l1514:	
  1208  019C  087D               	movf	_cnt_clk,w
  1209  019D  3EDD               	addlw	221
  1210  019E  00F9               	movwf	??_send_timer_interrupt
  1211  019F  30FF               	movlw	255
  1212  01A0  1803               	skipnc
  1213  01A1  3000               	movlw	0
  1214  01A2  00FA               	movwf	??_send_timer_interrupt+1
  1215  01A3  3022               	movlw	34
  1216  01A4  0679               	xorwf	??_send_timer_interrupt,w
  1217  01A5  047A               	iorwf	??_send_timer_interrupt+1,w
  1218  01A6  1D03               	skipz
  1219  01A7  29AB               	goto	i1l1518
  1220  01A8                     i1l1516:	
  1221                           
  1222                           ;PIC16F1827-EV01.c: 95: LATB4 = 1;
  1223  01A8  0022               	movlb	2	; select bank2
  1224  01A9  160D               	bsf	13,4	;volatile
  1225                           
  1226                           ;PIC16F1827-EV01.c: 96: } else if ((cnt_clk - 35) == 35) {
  1227  01AA  29B9               	goto	i1l1522
  1228  01AB                     i1l1518:	
  1229  01AB  087D               	movf	_cnt_clk,w
  1230  01AC  3EDD               	addlw	221
  1231  01AD  00F9               	movwf	??_send_timer_interrupt
  1232  01AE  30FF               	movlw	255
  1233  01AF  1803               	skipnc
  1234  01B0  3000               	movlw	0
  1235  01B1  00FA               	movwf	??_send_timer_interrupt+1
  1236  01B2  3023               	movlw	35
  1237  01B3  0679               	xorwf	??_send_timer_interrupt,w
  1238  01B4  047A               	iorwf	??_send_timer_interrupt+1,w
  1239  01B5  1D03               	skipz
  1240  01B6  29B9               	goto	i1l1522
  1241  01B7                     i1l1520:	
  1242                           
  1243                           ;PIC16F1827-EV01.c: 97: LATB4 = 0;
  1244  01B7  0022               	movlb	2	; select bank2
  1245  01B8  120D               	bcf	13,4	;volatile
  1246  01B9                     i1l1522:	
  1247                           
  1248                           ;PIC16F1827-EV01.c: 98: }
  1249                           ;PIC16F1827-EV01.c: 99: if ((cnt_clk - 35) < 36)cnt_clk++;
  1250  01B9  087D               	movf	_cnt_clk,w
  1251  01BA  3EDD               	addlw	221
  1252  01BB  00F9               	movwf	??_send_timer_interrupt
  1253  01BC  30FF               	movlw	255
  1254  01BD  1803               	skipnc
  1255  01BE  3000               	movlw	0
  1256  01BF  00FA               	movwf	??_send_timer_interrupt+1
  1257  01C0  087A               	movf	??_send_timer_interrupt+1,w
  1258  01C1  3A80               	xorlw	128
  1259  01C2  00FB               	movwf	??_send_timer_interrupt+2
  1260  01C3  3080               	movlw	128
  1261  01C4  027B               	subwf	??_send_timer_interrupt+2,w
  1262  01C5  1D03               	skipz
  1263  01C6  29C9               	goto	u122_25
  1264  01C7  3024               	movlw	36
  1265  01C8  0279               	subwf	??_send_timer_interrupt,w
  1266  01C9                     u122_25:	
  1267  01C9  1803               	skipnc
  1268  01CA  0008               	return
  1269  01CB  3001               	movlw	1
  1270  01CC  00F9               	movwf	??_send_timer_interrupt
  1271  01CD  0879               	movf	??_send_timer_interrupt,w
  1272  01CE  07FD               	addwf	_cnt_clk,f
  1273  01CF  0008               	return
  1274  01D0                     __end_of_send_timer_interrupt:	
  1275                           
  1276                           	psect	text7
  1277  01D0                     __ptext7:	
  1278 ;; *************** function ___awdiv *****************
  1279 ;; Defined at:
  1280 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  divisor         2    0[COMMON] int 
  1283 ;;  dividend        2    2[COMMON] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  quotient        2    7[COMMON] int 
  1286 ;;  sign            1    6[COMMON] unsigned char 
  1287 ;;  counter         1    5[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2    0[COMMON] int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1297 ;;      Params:         4       0       0       0       0       0
  1298 ;;      Locals:         4       0       0       0       0       0
  1299 ;;      Temps:          1       0       0       0       0       0
  1300 ;;      Totals:         9       0       0       0       0       0
  1301 ;;Total ram usage:        9 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_send_timer_interrupt
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function ___awdiv
  1312  01D0                     ___awdiv:	
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1316  01D0  01F6               	clrf	___awdiv@sign
  1317  01D1  1FF1               	btfss	___awdiv@divisor+1,7
  1318  01D2  29DA               	goto	i1l1326
  1319  01D3  09F0               	comf	___awdiv@divisor,f
  1320  01D4  09F1               	comf	___awdiv@divisor+1,f
  1321  01D5  0AF0               	incf	___awdiv@divisor,f
  1322  01D6  1903               	skipnz
  1323  01D7  0AF1               	incf	___awdiv@divisor+1,f
  1324  01D8  01F6               	clrf	___awdiv@sign
  1325  01D9  0AF6               	incf	___awdiv@sign,f
  1326  01DA                     i1l1326:	
  1327  01DA  1FF3               	btfss	___awdiv@dividend+1,7
  1328  01DB  29E5               	goto	i1l1332
  1329  01DC  09F2               	comf	___awdiv@dividend,f
  1330  01DD  09F3               	comf	___awdiv@dividend+1,f
  1331  01DE  0AF2               	incf	___awdiv@dividend,f
  1332  01DF  1903               	skipnz
  1333  01E0  0AF3               	incf	___awdiv@dividend+1,f
  1334  01E1  3001               	movlw	1
  1335  01E2  00F4               	movwf	??___awdiv
  1336  01E3  0874               	movf	??___awdiv,w
  1337  01E4  06F6               	xorwf	___awdiv@sign,f
  1338  01E5                     i1l1332:	
  1339  01E5  01F7               	clrf	___awdiv@quotient
  1340  01E6  01F8               	clrf	___awdiv@quotient+1
  1341  01E7  0871               	movf	___awdiv@divisor+1,w
  1342  01E8  0470               	iorwf	___awdiv@divisor,w
  1343  01E9  1903               	skipnz
  1344  01EA  2A14               	goto	i1l1354
  1345  01EB  01F5               	clrf	___awdiv@counter
  1346  01EC  0AF5               	incf	___awdiv@counter,f
  1347  01ED                     i1l1342:	
  1348  01ED  1BF1               	btfsc	___awdiv@divisor+1,7
  1349  01EE  29F9               	goto	i1l1344
  1350  01EF  3001               	movlw	1
  1351  01F0                     u83_25:	
  1352  01F0  35F0               	lslf	___awdiv@divisor,f
  1353  01F1  0DF1               	rlf	___awdiv@divisor+1,f
  1354  01F2  0B89               	decfsz	9,f
  1355  01F3  29F0               	goto	u83_25
  1356  01F4  3001               	movlw	1
  1357  01F5  00F4               	movwf	??___awdiv
  1358  01F6  0874               	movf	??___awdiv,w
  1359  01F7  07F5               	addwf	___awdiv@counter,f
  1360  01F8  29ED               	goto	i1l1342
  1361  01F9                     i1l1344:	
  1362  01F9  3001               	movlw	1
  1363  01FA                     u85_25:	
  1364  01FA  35F7               	lslf	___awdiv@quotient,f
  1365  01FB  0DF8               	rlf	___awdiv@quotient+1,f
  1366  01FC  0B89               	decfsz	9,f
  1367  01FD  29FA               	goto	u85_25
  1368  01FE  0871               	movf	___awdiv@divisor+1,w
  1369  01FF  0273               	subwf	___awdiv@dividend+1,w
  1370  0200  1D03               	skipz
  1371  0201  2A04               	goto	u86_25
  1372  0202  0870               	movf	___awdiv@divisor,w
  1373  0203  0272               	subwf	___awdiv@dividend,w
  1374  0204                     u86_25:	
  1375  0204  1C03               	skipc
  1376  0205  2A0B               	goto	i1l1350
  1377  0206  0870               	movf	___awdiv@divisor,w
  1378  0207  02F2               	subwf	___awdiv@dividend,f
  1379  0208  0871               	movf	___awdiv@divisor+1,w
  1380  0209  3BF3               	subwfb	___awdiv@dividend+1,f
  1381  020A  1477               	bsf	___awdiv@quotient,0
  1382  020B                     i1l1350:	
  1383  020B  3001               	movlw	1
  1384  020C                     u87_25:	
  1385  020C  36F1               	lsrf	___awdiv@divisor+1,f
  1386  020D  0CF0               	rrf	___awdiv@divisor,f
  1387  020E  0B89               	decfsz	9,f
  1388  020F  2A0C               	goto	u87_25
  1389  0210  3001               	movlw	1
  1390  0211  02F5               	subwf	___awdiv@counter,f
  1391  0212  1D03               	btfss	3,2
  1392  0213  29F9               	goto	i1l1344
  1393  0214                     i1l1354:	
  1394  0214  0876               	movf	___awdiv@sign,w
  1395  0215  1903               	btfsc	3,2
  1396  0216  2A1C               	goto	i1l1358
  1397  0217  09F7               	comf	___awdiv@quotient,f
  1398  0218  09F8               	comf	___awdiv@quotient+1,f
  1399  0219  0AF7               	incf	___awdiv@quotient,f
  1400  021A  1903               	skipnz
  1401  021B  0AF8               	incf	___awdiv@quotient+1,f
  1402  021C                     i1l1358:	
  1403  021C  0878               	movf	___awdiv@quotient+1,w
  1404  021D  01F1               	clrf	?___awdiv+1
  1405  021E  07F1               	addwf	?___awdiv+1,f
  1406  021F  0877               	movf	___awdiv@quotient,w
  1407  0220  01F0               	clrf	?___awdiv
  1408  0221  07F0               	addwf	?___awdiv,f
  1409  0222  0008               	return
  1410  0223                     __end_of___awdiv:	
  1411                           
  1412                           	psect	text8
  1413  0223                     __ptext8:	
  1414 ;; *************** function _ringbuf_pop *****************
  1415 ;; Defined at:
  1416 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  rb              1    wreg     PTR struct ringbuf
  1419 ;;		 -> tx_buf(5), 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  rb              1    3[COMMON] PTR struct ringbuf
  1422 ;;		 -> tx_buf(5), 
  1423 ;;  ret             1    2[COMMON] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1433 ;;      Params:         0       0       0       0       0       0
  1434 ;;      Locals:         2       0       0       0       0       0
  1435 ;;      Temps:          2       0       0       0       0       0
  1436 ;;      Totals:         4       0       0       0       0       0
  1437 ;;Total ram usage:        4 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_ISR
  1443 ;;		_interrupt_TXIF
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _ringbuf_pop
  1449  0223                     _ringbuf_pop:	
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  1453                           ;ringbuf_pop@rb stored from wreg
  1454  0223  00F3               	movwf	ringbuf_pop@rb
  1455                           
  1456                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  1457  0224  0873               	movf	ringbuf_pop@rb,w
  1458  0225  0086               	movwf	6
  1459  0226  0187               	clrf	7
  1460  0227  0873               	movf	ringbuf_pop@rb,w
  1461  0228  3E04               	addlw	4
  1462  0229  0084               	movwf	4
  1463  022A  0185               	clrf	5
  1464  022B  0800               	movf	0,w
  1465  022C  0701               	addwf	1,w
  1466  022D  00F0               	movwf	??_ringbuf_pop
  1467  022E  0870               	movf	??_ringbuf_pop,w
  1468  022F  0086               	movwf	6
  1469  0230  0187               	clrf	7
  1470  0231  0801               	movf	1,w
  1471  0232  00F1               	movwf	??_ringbuf_pop+1
  1472  0233  0871               	movf	??_ringbuf_pop+1,w
  1473  0234  00F2               	movwf	ringbuf_pop@ret
  1474                           
  1475                           ;My_header_16F.h: 130: rb->tail++;
  1476  0235  3001               	movlw	1
  1477  0236  00F0               	movwf	??_ringbuf_pop
  1478  0237  0873               	movf	ringbuf_pop@rb,w
  1479  0238  3E04               	addlw	4
  1480  0239  0086               	movwf	6
  1481  023A  0187               	clrf	7
  1482  023B  0870               	movf	??_ringbuf_pop,w
  1483  023C  0781               	addwf	1,f
  1484                           
  1485                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  1486  023D  0873               	movf	ringbuf_pop@rb,w
  1487  023E  3E04               	addlw	4
  1488  023F  0086               	movwf	6
  1489  0240  0187               	clrf	7
  1490  0241  0873               	movf	ringbuf_pop@rb,w
  1491  0242  3E02               	addlw	2
  1492  0243  0084               	movwf	4
  1493  0244  0185               	clrf	5
  1494  0245  0800               	movf	0,w
  1495  0246  0201               	subwf	1,w
  1496  0247  1C03               	skipc
  1497  0248  2A4E               	goto	i1l1410
  1498                           
  1499                           ;My_header_16F.h: 132: rb->tail = 0;
  1500  0249  0873               	movf	ringbuf_pop@rb,w
  1501  024A  3E04               	addlw	4
  1502  024B  0086               	movwf	6
  1503  024C  0187               	clrf	7
  1504  024D  0181               	clrf	1
  1505  024E                     i1l1410:	
  1506                           
  1507                           ;My_header_16F.h: 133: }
  1508                           ;My_header_16F.h: 134: return ret;
  1509  024E  0872               	movf	ringbuf_pop@ret,w
  1510  024F  0008               	return
  1511  0250                     __end_of_ringbuf_pop:	
  1512                           
  1513                           	psect	text9
  1514  0250                     __ptext9:	
  1515 ;; *************** function _ringbuf_num *****************
  1516 ;; Defined at:
  1517 ;;		line 137 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  rb              1    wreg     PTR struct ringbuf
  1520 ;;		 -> tx_buf(5), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  rb              1    1[COMMON] PTR struct ringbuf
  1523 ;;		 -> tx_buf(5), 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      unsigned char 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1533 ;;      Params:         0       0       0       0       0       0
  1534 ;;      Locals:         1       0       0       0       0       0
  1535 ;;      Temps:          1       0       0       0       0       0
  1536 ;;      Totals:         2       0       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_ISR
  1543 ;;		_interrupt_TXIF
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _ringbuf_num
  1549  0250                     _ringbuf_num:	
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  1553                           ;ringbuf_num@rb stored from wreg
  1554  0250  00F1               	movwf	ringbuf_num@rb
  1555                           
  1556                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  1557  0251  0871               	movf	ringbuf_num@rb,w
  1558  0252  3E03               	addlw	3
  1559  0253  0086               	movwf	6
  1560  0254  0187               	clrf	7
  1561  0255  0871               	movf	ringbuf_num@rb,w
  1562  0256  3E04               	addlw	4
  1563  0257  0084               	movwf	4
  1564  0258  0185               	clrf	5
  1565  0259  0800               	movf	0,w
  1566  025A  0201               	subwf	1,w
  1567  025B  1C03               	skipc
  1568  025C  2A69               	goto	i1l1422
  1569                           
  1570                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  1571  025D  0871               	movf	ringbuf_num@rb,w
  1572  025E  3E03               	addlw	3
  1573  025F  0086               	movwf	6
  1574  0260  0187               	clrf	7
  1575  0261  0871               	movf	ringbuf_num@rb,w
  1576  0262  3E04               	addlw	4
  1577  0263  0084               	movwf	4
  1578  0264  0185               	clrf	5
  1579  0265  0300               	decf	0,w
  1580  0266  3AFF               	xorlw	255
  1581  0267  0701               	addwf	1,w
  1582                           
  1583                           ;My_header_16F.h: 140: } else {
  1584  0268  0008               	return
  1585  0269                     i1l1422:	
  1586                           
  1587                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  1588  0269  0871               	movf	ringbuf_num@rb,w
  1589  026A  3E03               	addlw	3
  1590  026B  0086               	movwf	6
  1591  026C  0187               	clrf	7
  1592  026D  0871               	movf	ringbuf_num@rb,w
  1593  026E  3E02               	addlw	2
  1594  026F  0084               	movwf	4
  1595  0270  0185               	clrf	5
  1596  0271  0800               	movf	0,w
  1597  0272  00F0               	movwf	??_ringbuf_num
  1598  0273  0871               	movf	ringbuf_num@rb,w
  1599  0274  3E04               	addlw	4
  1600  0275  0084               	movwf	4
  1601  0276  0185               	clrf	5
  1602  0277  0300               	decf	0,w
  1603  0278  3AFF               	xorlw	255
  1604  0279  0770               	addwf	??_ringbuf_num,w
  1605  027A  0701               	addwf	1,w
  1606  027B  0008               	return
  1607  027C                     __end_of_ringbuf_num:	
  1608                           
  1609                           	psect	text10
  1610  0060                     __ptext10:	
  1611 ;; *************** function _button_timer_interrupt *****************
  1612 ;; Defined at:
  1613 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  bt              1    wreg     PTR struct button
  1616 ;;		 -> sw_m(3), sw_p(3), 
  1617 ;;  sw_value        1    0[COMMON] unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  bt              1    3[COMMON] PTR struct button
  1620 ;;		 -> sw_m(3), sw_p(3), 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;		None               void
  1623 ;; Registers used:
  1624 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1630 ;;      Params:         1       0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0       0
  1632 ;;      Temps:          2       0       0       0       0       0
  1633 ;;      Totals:         4       0       0       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_ISR
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _button_timer_interrupt
  1645  0060                     _button_timer_interrupt:	
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1649                           ;button_timer_interrupt@bt stored from wreg
  1650  0060  00F3               	movwf	button_timer_interrupt@bt
  1651                           
  1652                           ;My_header_16F.h: 88: if (sw_value) {
  1653  0061  0870               	movf	button_timer_interrupt@sw_value,w
  1654  0062  1903               	btfsc	3,2
  1655  0063  28BB               	goto	i1l1378
  1656                           
  1657                           ;My_header_16F.h: 89: if (bt->cnt_sw < 150 + 1) bt->cnt_sw++;
  1658  0064  0873               	movf	button_timer_interrupt@bt,w
  1659  0065  0086               	movwf	6
  1660  0066  0187               	clrf	7
  1661  0067  3F40               	moviw [0]fsr1
  1662  0068  00F1               	movwf	??_button_timer_interrupt
  1663  0069  3F41               	moviw [1]fsr1
  1664  006A  00F2               	movwf	??_button_timer_interrupt+1
  1665  006B  3000               	movlw	0
  1666  006C  0272               	subwf	??_button_timer_interrupt+1,w
  1667  006D  3097               	movlw	151
  1668  006E  1903               	skipnz
  1669  006F  0271               	subwf	??_button_timer_interrupt,w
  1670  0070  1803               	skipnc
  1671  0071  287A               	goto	i1l1368
  1672  0072  0873               	movf	button_timer_interrupt@bt,w
  1673  0073  0086               	movwf	6
  1674  0074  0187               	clrf	7
  1675  0075  3001               	movlw	1
  1676  0076  0781               	addwf	1,f
  1677  0077  3141               	addfsr 1,1
  1678  0078  1803               	skipnc
  1679  0079  0A81               	incf	1,f
  1680  007A                     i1l1368:	
  1681                           
  1682                           ;My_header_16F.h: 90: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  1683  007A  0873               	movf	button_timer_interrupt@bt,w
  1684  007B  0086               	movwf	6
  1685  007C  0187               	clrf	7
  1686  007D  3F40               	moviw [0]fsr1
  1687  007E  3A96               	xorlw	150
  1688  007F  1D03               	skipz
  1689  0080  2883               	goto	u92_25
  1690  0081  3F41               	moviw [1]fsr1
  1691  0082  3A00               	xorlw	0
  1692  0083                     u92_25:	
  1693  0083  1D03               	skipz
  1694  0084  288A               	goto	i1l111
  1695  0085  0873               	movf	button_timer_interrupt@bt,w
  1696  0086  3E02               	addlw	2
  1697  0087  0086               	movwf	6
  1698  0088  0187               	clrf	7
  1699  0089  1781               	bsf	1,7
  1700  008A                     i1l111:	
  1701                           
  1702                           ;My_header_16F.h: 91: if (bt->cnt_sw == 75)bt->flag.long_holding_2 = 1;
  1703  008A  0873               	movf	button_timer_interrupt@bt,w
  1704  008B  0086               	movwf	6
  1705  008C  0187               	clrf	7
  1706  008D  3F40               	moviw [0]fsr1
  1707  008E  3A4B               	xorlw	75
  1708  008F  1D03               	skipz
  1709  0090  2893               	goto	u93_25
  1710  0091  3F41               	moviw [1]fsr1
  1711  0092  3A00               	xorlw	0
  1712  0093                     u93_25:	
  1713  0093  1D03               	skipz
  1714  0094  289A               	goto	i1l112
  1715  0095  0873               	movf	button_timer_interrupt@bt,w
  1716  0096  3E02               	addlw	2
  1717  0097  0086               	movwf	6
  1718  0098  0187               	clrf	7
  1719  0099  1701               	bsf	1,6
  1720  009A                     i1l112:	
  1721                           
  1722                           ;My_header_16F.h: 92: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  1723  009A  0873               	movf	button_timer_interrupt@bt,w
  1724  009B  0086               	movwf	6
  1725  009C  0187               	clrf	7
  1726  009D  3F40               	moviw [0]fsr1
  1727  009E  3A1E               	xorlw	30
  1728  009F  1D03               	skipz
  1729  00A0  28A3               	goto	u94_25
  1730  00A1  3F41               	moviw [1]fsr1
  1731  00A2  3A00               	xorlw	0
  1732  00A3                     u94_25:	
  1733  00A3  1D03               	skipz
  1734  00A4  28AA               	goto	i1l113
  1735  00A5  0873               	movf	button_timer_interrupt@bt,w
  1736  00A6  3E02               	addlw	2
  1737  00A7  0086               	movwf	6
  1738  00A8  0187               	clrf	7
  1739  00A9  1681               	bsf	1,5
  1740  00AA                     i1l113:	
  1741                           
  1742                           ;My_header_16F.h: 93: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  1743  00AA  0873               	movf	button_timer_interrupt@bt,w
  1744  00AB  0086               	movwf	6
  1745  00AC  0187               	clrf	7
  1746  00AD  3F40               	moviw [0]fsr1
  1747  00AE  3A02               	xorlw	2
  1748  00AF  1D03               	skipz
  1749  00B0  28B3               	goto	u95_25
  1750  00B1  3F41               	moviw [1]fsr1
  1751  00B2  3A00               	xorlw	0
  1752  00B3                     u95_25:	
  1753  00B3  1D03               	skipz
  1754  00B4  0008               	return
  1755  00B5  0873               	movf	button_timer_interrupt@bt,w
  1756  00B6  3E02               	addlw	2
  1757  00B7  0086               	movwf	6
  1758  00B8  0187               	clrf	7
  1759  00B9  1601               	bsf	1,4
  1760                           
  1761                           ;My_header_16F.h: 94: } else {
  1762  00BA  0008               	return
  1763  00BB                     i1l1378:	
  1764                           
  1765                           ;My_header_16F.h: 95: if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  1766  00BB  0873               	movf	button_timer_interrupt@bt,w
  1767  00BC  0086               	movwf	6
  1768  00BD  0187               	clrf	7
  1769  00BE  3F40               	moviw [0]fsr1
  1770  00BF  00F1               	movwf	??_button_timer_interrupt
  1771  00C0  3F41               	moviw [1]fsr1
  1772  00C1  00F2               	movwf	??_button_timer_interrupt+1
  1773  00C2  3000               	movlw	0
  1774  00C3  0272               	subwf	??_button_timer_interrupt+1,w
  1775  00C4  3096               	movlw	150
  1776  00C5  1903               	skipnz
  1777  00C6  0271               	subwf	??_button_timer_interrupt,w
  1778  00C7  1C03               	skipc
  1779  00C8  28CF               	goto	i1l1382
  1780  00C9  0873               	movf	button_timer_interrupt@bt,w
  1781  00CA  3E02               	addlw	2
  1782  00CB  0086               	movwf	6
  1783  00CC  0187               	clrf	7
  1784  00CD  1581               	bsf	1,3
  1785  00CE  290A               	goto	i1l117
  1786  00CF                     i1l1382:	
  1787                           
  1788                           ;My_header_16F.h: 96: else if (bt->cnt_sw >= 75)bt->flag.long_hold_2 = 1;
  1789  00CF  0873               	movf	button_timer_interrupt@bt,w
  1790  00D0  0086               	movwf	6
  1791  00D1  0187               	clrf	7
  1792  00D2  3F40               	moviw [0]fsr1
  1793  00D3  00F1               	movwf	??_button_timer_interrupt
  1794  00D4  3F41               	moviw [1]fsr1
  1795  00D5  00F2               	movwf	??_button_timer_interrupt+1
  1796  00D6  3000               	movlw	0
  1797  00D7  0272               	subwf	??_button_timer_interrupt+1,w
  1798  00D8  304B               	movlw	75
  1799  00D9  1903               	skipnz
  1800  00DA  0271               	subwf	??_button_timer_interrupt,w
  1801  00DB  1C03               	skipc
  1802  00DC  28E3               	goto	i1l1386
  1803  00DD  0873               	movf	button_timer_interrupt@bt,w
  1804  00DE  3E02               	addlw	2
  1805  00DF  0086               	movwf	6
  1806  00E0  0187               	clrf	7
  1807  00E1  1501               	bsf	1,2
  1808  00E2  290A               	goto	i1l117
  1809  00E3                     i1l1386:	
  1810                           
  1811                           ;My_header_16F.h: 97: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  1812  00E3  0873               	movf	button_timer_interrupt@bt,w
  1813  00E4  0086               	movwf	6
  1814  00E5  0187               	clrf	7
  1815  00E6  3F40               	moviw [0]fsr1
  1816  00E7  00F1               	movwf	??_button_timer_interrupt
  1817  00E8  3F41               	moviw [1]fsr1
  1818  00E9  00F2               	movwf	??_button_timer_interrupt+1
  1819  00EA  3000               	movlw	0
  1820  00EB  0272               	subwf	??_button_timer_interrupt+1,w
  1821  00EC  301E               	movlw	30
  1822  00ED  1903               	skipnz
  1823  00EE  0271               	subwf	??_button_timer_interrupt,w
  1824  00EF  1C03               	skipc
  1825  00F0  28F7               	goto	i1l1390
  1826  00F1  0873               	movf	button_timer_interrupt@bt,w
  1827  00F2  3E02               	addlw	2
  1828  00F3  0086               	movwf	6
  1829  00F4  0187               	clrf	7
  1830  00F5  1481               	bsf	1,1
  1831  00F6  290A               	goto	i1l117
  1832  00F7                     i1l1390:	
  1833                           
  1834                           ;My_header_16F.h: 98: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  1835  00F7  0873               	movf	button_timer_interrupt@bt,w
  1836  00F8  0086               	movwf	6
  1837  00F9  0187               	clrf	7
  1838  00FA  3F40               	moviw [0]fsr1
  1839  00FB  00F1               	movwf	??_button_timer_interrupt
  1840  00FC  3F41               	moviw [1]fsr1
  1841  00FD  00F2               	movwf	??_button_timer_interrupt+1
  1842  00FE  3000               	movlw	0
  1843  00FF  0272               	subwf	??_button_timer_interrupt+1,w
  1844  0100  3002               	movlw	2
  1845  0101  1903               	skipnz
  1846  0102  0271               	subwf	??_button_timer_interrupt,w
  1847  0103  1C03               	skipc
  1848  0104  290A               	goto	i1l117
  1849  0105  0873               	movf	button_timer_interrupt@bt,w
  1850  0106  3E02               	addlw	2
  1851  0107  0086               	movwf	6
  1852  0108  0187               	clrf	7
  1853  0109  1401               	bsf	1,0
  1854  010A                     i1l117:	
  1855                           
  1856                           ;My_header_16F.h: 99: bt->cnt_sw = 0;
  1857  010A  0873               	movf	button_timer_interrupt@bt,w
  1858  010B  0086               	movwf	6
  1859  010C  0187               	clrf	7
  1860  010D  3000               	movlw	0
  1861  010E  3FC0               	movwi [0]fsr1
  1862  010F  3FC1               	movwi [1]fsr1
  1863                           
  1864                           ;My_header_16F.h: 100: bt->flags &= 0x0F;
  1865  0110  300F               	movlw	15
  1866  0111  00F1               	movwf	??_button_timer_interrupt
  1867  0112  0873               	movf	button_timer_interrupt@bt,w
  1868  0113  3E02               	addlw	2
  1869  0114  0086               	movwf	6
  1870  0115  0187               	clrf	7
  1871  0116  0871               	movf	??_button_timer_interrupt,w
  1872  0117  0581               	andwf	1,f
  1873  0118  0008               	return
  1874  0119                     __end_of_button_timer_interrupt:	
  1875  007E                     btemp	set	126	;btemp
  1876  007E                     pic14e$flags	set	126
  1877  007E                     wtemp	set	126
  1878  007E                     wtemp0	set	126
  1879  0080                     wtemp1	set	128
  1880  0082                     wtemp2	set	130
  1881  0084                     wtemp3	set	132
  1882  0086                     wtemp4	set	134
  1883  0088                     wtemp5	set	136
  1884  007F                     wtemp6	set	127
  1885  007E                     ttemp	set	126
  1886  007E                     ttemp0	set	126
  1887  0081                     ttemp1	set	129
  1888  0084                     ttemp2	set	132
  1889  0087                     ttemp3	set	135
  1890  007F                     ttemp4	set	127
  1891  007E                     ltemp	set	126
  1892  007E                     ltemp0	set	126
  1893  0082                     ltemp1	set	130
  1894  0086                     ltemp2	set	134
  1895  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      5      23
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK0[5]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK0[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 0

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 0

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_m(BANK0[3]), sw_p(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_send_timer_interrupt
    _send_timer_interrupt->___awdiv

Critical Paths under _main in BANK0

    _main->_data_set
    _main_init->_timer0_init
    _main_init->_timer1_init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     110
                           _data_set
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0      66
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      22
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _data_set                                             3     3      0      44
                                              2 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0    1983
                                              0 BANK0      2     2      0
             _button_timer_interrupt
                        _ringbuf_num
                        _ringbuf_pop
               _send_timer_interrupt
 ---------------------------------------------------------------------------------
 (4) _send_timer_interrupt                                 4     4      0     656
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     656
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _ringbuf_pop                                          4     4      0     281
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          2     2      0     280
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _button_timer_interrupt                               4     3      1     766
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _data_set
   _main_init
     _timer0_init
     _timer1_init

 _ISR (ROOT)
   _button_timer_interrupt
   _ringbuf_num
   _ringbuf_pop
   _send_timer_interrupt
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      17       6       28.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      25      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Feb 09 17:54:06 2015

                    __CFG_CP$OFF 0000                               l91 02BD                     ___awdiv@sign 0076  
                            _RA1 0061                              _RA2 0062                     __CFG_CPD$OFF 0000  
                            _ISR 0004                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_LVP$OFF 0000                             ?_ISR 0070                             l1286 02CB  
                           l1726 02A9                             l1718 029E                             u1235 0282  
                           u1245 028E                             _SPEN 0CEF                             _TXIE 048C  
                           _TXIF 008C                             _WPUA 020C                             _WPUB 020D  
                   __CFG_WRT$OFF 0000                             _main 029A         button_timer_interrupt@bt 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           _sw_m 002A                             _sw_p 002D                             btemp 007E  
                           ltemp 007E                             start 004A                             ttemp 007E  
                           wtemp 007E                    __CFG_IESO$OFF 0000                            ??_ISR 0030  
                  __CFG_PLLEN$ON 0000                            ?_main 0070                  __end_of___awdiv 0223  
                          _ADRES 009B                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                ___awdiv@divisor 0070                            _LATB0 0868                            _LATB1 0869  
                          _LATB3 086B                            _LATB4 086C                            _LATB5 086D  
                          i1l111 008A                            i1l112 009A                            i1l113 00AA  
                          i1l117 010A                            i1l270 0045                            i1l265 0025  
                          i1l266 0023                            i1l284 018B                  ___awdiv@counter 0075  
                          _RCSTA 019D                            _TMR1H 0017                            _TMR1L 0016  
                          _TRISA 008C                            _TRISB 008D                            u83_25 01F0  
                          u92_25 0083                            u93_25 0093                            u85_25 01FA  
                          u94_25 00A3                            u86_25 0204                            u95_25 00B3  
                          u87_25 020C                            _TXREG 019A                            _TXSTA 019E  
                 __CFG_FCMEN$OFF 0000                   __CFG_BOREN$OFF 0000                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                   __CFG_MCLRE$OFF 0000                  __initialization 004C  
                   __end_of_main 02B5     __end_of_send_timer_interrupt 01D0                           ??_main 0035  
                         _BCL1IF 0093                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         _ANSELB 018D                           i1l1410 024E                           i1l1332 01E5  
                         i1l1422 0269                           i1l1350 020B                           i1l1342 01ED  
                         i1l1326 01DA                           i1l1510 018D                           i1l1344 01F9  
                         i1l1520 01B7                           i1l1512 0199                           i1l1354 0214  
                         i1l1514 019C                           i1l1522 01B9                           i1l1516 01A8  
                         i1l1390 00F7                           i1l1382 00CF                           i1l1358 021C  
                         i1l1518 01AB                           i1l1368 007A                           i1l1386 00E3  
                         i1l1378 00BB                           i1l1708 0040                           i1l1488 0140  
                         u122_25 01C9                           u114_25 015C                           u116_24 0181  
                         u108_24 013D                           u116_25 017F                           u108_25 013B  
                         u117_20 0188                           _FVRCON 0117                           _OSCCON 0099  
                         _SPBRGH 019C                           _SPBRGL 019B                           _SSP1IF 008B  
               __end_of_data_set 029A                   __CFG_PWRTE$OFF 0000                     ?_ringbuf_pop 0070  
                   ?_ringbuf_num 0070                        ??___awdiv 0074                     ?_timer0_init 0070  
                   ?_timer1_init 0070                           _cnt_t1 0024                 ___awdiv@quotient 0077  
                         _tx_buf 0025          __end_of__initialization 005C                   __pcstackCOMMON 0070  
                   __pidataBANK0 0301                   _OPTION_REGbits 0095             _send_timer_interrupt 0119  
             __size_of_main_init 0018                       __pbssBANK0 0020                       __pmaintext 029A  
                     __pintentry 0004                        ?_data_set 0070                          _SSP1ADD 0212  
                        _SSP1BUF 0211            ?_send_timer_interrupt 0070             timer1_init@prescaler 0033  
       ??_button_timer_interrupt 0071                    data_set@value 0034                          ___awdiv 01D0  
           __size_of_ringbuf_pop 002D             __size_of_ringbuf_num 002C                  __CFG_STVREN$OFF 0000  
              __end_of_main_init 02E8             __size_of_timer0_init 001B             __size_of_timer1_init 0013  
                        __ptext1 02D0                          __ptext2 02E8                          __ptext3 02B5  
                        __ptext4 027C                          __ptext6 0119                          __ptext7 01D0  
                        __ptext8 0223                          __ptext9 0250                          _cnt_clk 007D  
                   __size_of_ISR 0046                        _T1CONbits 0018                       ??_data_set 0032  
                        clrloop0 02FC             end_of_initialization 005C                 __CFG_FOSC$INTOSC 0000  
         ??_send_timer_interrupt 0079  __size_of_button_timer_interrupt 00B9                   ringbuf_pop@ret 0072  
            start_initialization 004C                      __end_of_ISR 004A                      __pdataBANK0 0035  
         _button_timer_interrupt 0060                      __pbssCOMMON 007D                        ___latbits 0001  
                  __pcstackBANK0 0030                __size_of_data_set 001E                         ?___awdiv 0070  
                      _main_init 02D0                        clear_ram0 02FB                         _PIE1bits 0091  
                       _PIR1bits 0011                    ??_ringbuf_pop 0070                    ??_ringbuf_num 0070  
                       _SSP1CON1 0215                         _SSP1CON2 0216                    ??_timer0_init 0032  
                  ??_timer1_init 0032                         _SSP1STAT 0214                       _ADCON0bits 009D  
                     _ADCON1bits 009E   button_timer_interrupt@sw_value 0070                       ?_main_init 0070  
                  ringbuf_pop@rb 0073                    ringbuf_num@rb 0071               LCD_SetCursor@F2883 0035  
               __size_of___awdiv 0053              __end_of_ringbuf_pop 0250              __end_of_ringbuf_num 027C  
            __end_of_timer0_init 02D0              __end_of_timer1_init 02FB                         _data_set 027C  
           timer0_init@prescaler 0033                         __ptext10 0060                     _SSP1CON2bits 0216  
  __size_of_send_timer_interrupt 00B7                    __size_of_main 001B                     _serial_data1 0020  
                   _serial_data2 0022          ?_button_timer_interrupt 0070                      ??_main_init 0034  
                     _INTCONbits 000B                      pic14e$flags 007E                         intlevel1 0000  
              __CFG_CLKOUTEN$OFF 0000   __end_of_button_timer_interrupt 0119                      _ringbuf_pop 0223  
                    _ringbuf_num 0250                      _timer0_init 02B5                      _timer1_init 02E8  
