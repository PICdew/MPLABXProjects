

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:57:49 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0014                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0095                     	;# 
    66  0096                     	;# 
    67  0097                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  0111                     	;# 
    79  0112                     	;# 
    80  0113                     	;# 
    81  0114                     	;# 
    82  0115                     	;# 
    83  0116                     	;# 
    84  0117                     	;# 
    85  0118                     	;# 
    86  0119                     	;# 
    87  011A                     	;# 
    88  011B                     	;# 
    89  011D                     	;# 
    90  011E                     	;# 
    91  018C                     	;# 
    92  018D                     	;# 
    93  0191                     	;# 
    94  0191                     	;# 
    95  0192                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0194                     	;# 
   100  0195                     	;# 
   101  0196                     	;# 
   102  0199                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019E                     	;# 
   112  019F                     	;# 
   113  020C                     	;# 
   114  020D                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0219                     	;# 
   131  021A                     	;# 
   132  021B                     	;# 
   133  021C                     	;# 
   134  021D                     	;# 
   135  021E                     	;# 
   136  021F                     	;# 
   137  0291                     	;# 
   138  0291                     	;# 
   139  0292                     	;# 
   140  0293                     	;# 
   141  0294                     	;# 
   142  0295                     	;# 
   143  0295                     	;# 
   144  0296                     	;# 
   145  0298                     	;# 
   146  0298                     	;# 
   147  0299                     	;# 
   148  029A                     	;# 
   149  029B                     	;# 
   150  029C                     	;# 
   151  029C                     	;# 
   152  029D                     	;# 
   153  029E                     	;# 
   154  029E                     	;# 
   155  0311                     	;# 
   156  0311                     	;# 
   157  0312                     	;# 
   158  0313                     	;# 
   159  0318                     	;# 
   160  0318                     	;# 
   161  0319                     	;# 
   162  031A                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  039A                     	;# 
   167  039C                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0415                     	;# 
   172  0416                     	;# 
   173  0417                     	;# 
   174  041C                     	;# 
   175  041D                     	;# 
   176  041E                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188                           
   189                           	psect	idataBANK0
   190  02DE                     __pidataBANK0:	
   191                           
   192                           ;initializer for main@last_scan
   193  02DE  347F               	retlw	127
   194  02DF  3400               	retlw	0
   195  000B                     _INTCONbits	set	11
   196  0011                     _PIR1bits	set	17
   197  001B                     _PR2	set	27
   198  0018                     _T1CONbits	set	24
   199  001C                     _T2CONbits	set	28
   200  0017                     _TMR1H	set	23
   201  0016                     _TMR1L	set	22
   202  008D                     _RCIF	set	141
   203  005A                     _TMR0IF	set	90
   204  0088                     _TMR1IF	set	136
   205  009B                     _ADRES	set	155
   206  009D                     _ADCON0bits	set	157
   207  009E                     _ADCON1bits	set	158
   208  0095                     _OPTION_REGbits	set	149
   209  0099                     _OSCCON	set	153
   210  0091                     _PIE1bits	set	145
   211  008C                     _TRISA	set	140
   212  008D                     _TRISB	set	141
   213  0117                     _FVRCON	set	279
   214  0862                     _LATA2	set	2146
   215  0863                     _LATA3	set	2147
   216  0866                     _LATA6	set	2150
   217  0867                     _LATA7	set	2151
   218  086C                     _LATB4	set	2156
   219  086D                     _LATB5	set	2157
   220  018C                     _ANSELA	set	396
   221  018D                     _ANSELB	set	397
   222  0199                     _RCREG	set	409
   223  019D                     _RCSTA	set	413
   224  019C                     _SPBRGH	set	412
   225  019B                     _SPBRGL	set	411
   226  019A                     _TXREG	set	410
   227  019E                     _TXSTA	set	414
   228  0CFB                     _BRG16	set	3323
   229  0CEF                     _SPEN	set	3311
   230  0293                     _CCP1CONbits	set	659
   231  029A                     _CCP2CONbits	set	666
   232  0291                     _CCPR1L	set	657
   233  0291                     _CCPR1Lbits	set	657
   234  0298                     _CCPR2L	set	664
   235  0298                     _CCPR2Lbits	set	664
   236  029E                     _CCPTMRSbits	set	670
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  0024                     start_initialization:	
   242  0024                     __initialization:	
   243                           
   244                           ; Clear objects allocated to BANK0
   245  0024  3020               	movlw	low __pbssBANK0
   246  0025  0084               	movwf	4
   247  0026  3000               	movlw	high __pbssBANK0
   248  0027  0085               	movwf	5
   249  0028  3010               	movlw	16
   250  0029  3182  22D8  3180   	fcall	clear_ram0
   251                           
   252                           ; Clear objects allocated to BANK1
   253  002C  30CC               	movlw	low __pbssBANK1
   254  002D  0084               	movwf	4
   255  002E  3000               	movlw	high __pbssBANK1
   256  002F  0085               	movwf	5
   257  0030  3007               	movlw	7
   258  0031  3182  22D8  3180   	fcall	clear_ram0
   259                           
   260                           ; Initialize objects allocated to BANK0
   261  0034  3182  22DE  3180   	fcall	__pidataBANK0	;fetch initializer
   262  0037  00BD               	movwf	__pdataBANK0& (0+127)
   263  0038  3182  22DF         	fcall	__pidataBANK0+1	;fetch initializer
   264  003A  00BE               	movwf	(__pdataBANK0+1)& (0+127)
   265  003B                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268  003B                     __end_of__initialization:	
   269  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   270  003C  0020               	movlb	0
   271  003D  3180  283F         	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssBANK0
   274  0020                     __pbssBANK0:	
   275  0020                     _ms:	
   276  0020                     	ds	4
   277  0024                     _d1:	
   278  0024                     	ds	3
   279  0027                     millis_timer@cnt:	
   280  0027                     	ds	2
   281  0029                     _tx_buf:	
   282  0029                     	ds	7
   283                           
   284                           	psect	dataBANK0
   285  003D                     __pdataBANK0:	
   286  003D                     main@last_scan:	
   287  003D                     	ds	2
   288                           
   289                           	psect	bssBANK1
   290  00CC                     __pbssBANK1:	
   291  00CC                     _rx_buf:	
   292  00CC                     	ds	7
   293                           
   294                           	psect	clrtext
   295  02D8                     clear_ram0:	
   296                           ;	Called with FSR0 containing the base address, and
   297                           ;	WREG with the size to clear
   298                           
   299  02D8  0064               	clrwdt	;clear the watchdog before getting into this loop
   300  02D9                     clrloop0:	
   301  02D9  0180               	clrf	0	;clear RAM location pointed to by FSR
   302  02DA  3101               	addfsr 0,1
   303  02DB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   304  02DC  2AD9               	goto	clrloop0	;have we reached the end yet?
   305  02DD  3400               	retlw	0	;all done for this memory range, return
   306                           
   307                           	psect	cstackBANK1
   308  00A0                     __pcstackBANK1:	
   309  00A0                     main@buf:	
   310                           
   311                           ; 40 bytes @ 0x0
   312  00A0                     	ds	40
   313  00C8                     main@scan:	
   314                           
   315                           ; 2 bytes @ 0x28
   316  00C8                     	ds	2
   317  00CA                     main@sub:	
   318                           
   319                           ; 2 bytes @ 0x2A
   320  00CA                     	ds	2
   321                           
   322                           	psect	cstackCOMMON
   323  0070                     __pcstackCOMMON:	
   324  0070                     ?_timer0_init:	
   325  0070                     ?_timer1_init:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_ADC_init:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_UART_init:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_interrupt_TXIF:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_tx_send:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_isr:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_PWM_init:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_PWM_set:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_drive:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_ringbuf_pop:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_ringbuf_num:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_main:	
   359                           ; 2 bytes @ 0x0
   360                           
   361                           
   362                           ; 2 bytes @ 0x0
   363  0070                     	ds	2
   364  0072                     ??_ringbuf_num:	
   365                           
   366                           ; 0 bytes @ 0x2
   367  0072                     	ds	4
   368  0076                     ringbuf_num@rb:	
   369                           
   370                           ; 1 bytes @ 0x6
   371  0076                     	ds	1
   372  0077                     ?_ringbuf_put:	
   373  0077                     ??_ringbuf_pop:	
   374                           ; 0 bytes @ 0x7
   375                           
   376  0077                     ringbuf_put@asciicode:	
   377                           ; 0 bytes @ 0x7
   378                           
   379                           
   380                           ; 1 bytes @ 0x7
   381  0077                     	ds	1
   382  0078                     ??_ringbuf_put:	
   383                           
   384                           ; 0 bytes @ 0x8
   385  0078                     	ds	5
   386  007D                     ??_interrupt_TXIF:	
   387                           
   388                           ; 0 bytes @ 0xD
   389  007D                     	ds	1
   390                           
   391                           	psect	cstackBANK0
   392  0030                     __pcstackBANK0:	
   393  0030                     ringbuf_put@rb:	
   394  0030                     ringbuf_pop@ret:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399  0030                     	ds	1
   400  0031                     ??_tx_send:	
   401  0031                     ringbuf_pop@rb:	
   402                           ; 0 bytes @ 0x1
   403                           
   404                           
   405                           ; 1 bytes @ 0x1
   406  0031                     	ds	1
   407  0032                     tx_send@asciicode:	
   408                           
   409                           ; 1 bytes @ 0x2
   410  0032                     	ds	1
   411  0033                     ??_isr:	
   412                           
   413                           ; 0 bytes @ 0x3
   414  0033                     	ds	2
   415  0035                     isr@ascii:	
   416                           
   417                           ; 1 bytes @ 0x5
   418  0035                     	ds	1
   419  0036                     ??_timer0_init:	
   420  0036                     ??_timer1_init:	
   421                           ; 0 bytes @ 0x6
   422                           
   423  0036                     ??_ADC_init:	
   424                           ; 0 bytes @ 0x6
   425                           
   426  0036                     ?_ringbuf_init:	
   427                           ; 0 bytes @ 0x6
   428                           
   429  0036                     ??_UART_init:	
   430                           ; 0 bytes @ 0x6
   431                           
   432  0036                     ??_PWM_init:	
   433                           ; 0 bytes @ 0x6
   434                           
   435  0036                     ??_PWM_set:	
   436                           ; 0 bytes @ 0x6
   437                           
   438  0036                     ??_drive:	
   439                           ; 0 bytes @ 0x6
   440                           
   441  0036                     ?_ADC:	
   442                           ; 0 bytes @ 0x6
   443                           
   444  0036                     ADC_init@p_ref:	
   445                           ; 2 bytes @ 0x6
   446                           
   447  0036                     ringbuf_init@internal_buf:	
   448                           ; 1 bytes @ 0x6
   449                           
   450  0036                     PWM_set@value:	
   451                           ; 1 bytes @ 0x6
   452                           
   453  0036                     drive@dir:	
   454                           ; 1 bytes @ 0x6
   455                           
   456                           
   457                           ; 1 bytes @ 0x6
   458  0036                     	ds	1
   459  0037                     timer0_init@prescaler:	
   460  0037                     timer1_init@prescaler:	
   461                           ; 1 bytes @ 0x7
   462                           
   463  0037                     ringbuf_init@bufsize:	
   464                           ; 1 bytes @ 0x7
   465                           
   466                           
   467                           ; 2 bytes @ 0x7
   468  0037                     	ds	1
   469  0038                     ??_ADC:	
   470                           
   471                           ; 0 bytes @ 0x8
   472  0038                     	ds	1
   473  0039                     ??_ringbuf_init:	
   474  0039                     ADC@ch:	
   475                           ; 0 bytes @ 0x9
   476                           
   477                           
   478                           ; 1 bytes @ 0x9
   479  0039                     	ds	1
   480  003A                     ringbuf_init@rb:	
   481                           
   482                           ; 1 bytes @ 0xA
   483  003A                     	ds	1
   484  003B                     ??_main:	
   485                           
   486                           ; 0 bytes @ 0xB
   487  003B                     	ds	2
   488                           
   489                           	psect	maintext
   490  003F                     __pmaintext:	
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 108 in file "PIC16F1827-Inverted_Pendulum01.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  sub             2   42[BANK1 ] int 
   501 ;;  scan            2   40[BANK1 ] unsigned int 
   502 ;;  buf            40    0[BANK1 ] unsigned char [40]
   503 ;;  i               1    0        unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  2  231[None  ] int 
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : B1F/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   513 ;;      Params:         0       0       0       0       0       0
   514 ;;      Locals:         0       0      44       0       0       0
   515 ;;      Temps:          0       2       0       0       0       0
   516 ;;      Totals:         0       2      44       0       0       0
   517 ;;Total ram usage:       46 bytes
   518 ;; Hardware stack levels required when called:    5
   519 ;; This function calls:
   520 ;;		_ADC
   521 ;;		_ADC_init
   522 ;;		_PWM_init
   523 ;;		_PWM_set
   524 ;;		_UART_init
   525 ;;		_drive
   526 ;;		_ringbuf_init
   527 ;;		_timer0_init
   528 ;;		_timer1_init
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _main
   536  003F                     _main:	
   537                           
   538                           ;PIC16F1827-Inverted_Pendulum01.c: 109: OSCCON = 0x70;
   539                           
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   542  003F  3070               	movlw	112
   543  0040  0021               	movlb	1	; select bank1
   544  0041  0099               	movwf	25	;volatile
   545                           
   546                           ;PIC16F1827-Inverted_Pendulum01.c: 110: ANSELA = 0x01;
   547  0042  3001               	movlw	1
   548  0043  0023               	movlb	3	; select bank3
   549  0044  008C               	movwf	12	;volatile
   550                           
   551                           ;PIC16F1827-Inverted_Pendulum01.c: 111: ANSELB = 0x00;
   552  0045  018D               	clrf	13	;volatile
   553                           
   554                           ;PIC16F1827-Inverted_Pendulum01.c: 112: TRISA = 0x01;
   555  0046  3001               	movlw	1
   556  0047  0021               	movlb	1	; select bank1
   557  0048  008C               	movwf	12	;volatile
   558                           
   559                           ;PIC16F1827-Inverted_Pendulum01.c: 113: TRISB = 0x02;
   560  0049  3002               	movlw	2
   561  004A  008D               	movwf	13	;volatile
   562                           
   563                           ;PIC16F1827-Inverted_Pendulum01.c: 115: UART_init();
   564  004B  3182  22BE  3180   	fcall	_UART_init
   565                           
   566                           ;PIC16F1827-Inverted_Pendulum01.c: 116: ADC_init(0);
   567  004E  3000               	movlw	0
   568  004F  3182  226A  3180   	fcall	_ADC_init
   569                           
   570                           ;PIC16F1827-Inverted_Pendulum01.c: 117: timer0_init(2);
   571  0052  3002               	movlw	2
   572  0053  3182  224F  3180   	fcall	_timer0_init
   573                           
   574                           ;PIC16F1827-Inverted_Pendulum01.c: 118: timer1_init(2);
   575  0056  3002               	movlw	2
   576  0057  3182  229B  3180   	fcall	_timer1_init
   577                           
   578                           ;PIC16F1827-Inverted_Pendulum01.c: 119: PWM_init();
   579  005A  3181  21EF  3180   	fcall	_PWM_init
   580                           
   581                           ;PIC16F1827-Inverted_Pendulum01.c: 121: char buf[40];
   582                           ;PIC16F1827-Inverted_Pendulum01.c: 122: ringbuf_init(&tx_buf, buf, sizeof (buf));
   583  005D  30A0               	movlw	(low (main@buf| 0))& (0+255)
   584  005E  0020               	movlb	0	; select bank0
   585  005F  00BB               	movwf	??_main
   586  0060  083B               	movf	??_main,w
   587  0061  00B6               	movwf	ringbuf_init@internal_buf
   588  0062  3028               	movlw	40
   589  0063  00B7               	movwf	ringbuf_init@bufsize
   590  0064  3000               	movlw	0
   591  0065  00B8               	movwf	ringbuf_init@bufsize+1
   592  0066  3029               	movlw	(low (_tx_buf| 0))& (0+255)
   593  0067  3182  2211  3180   	fcall	_ringbuf_init
   594                           
   595                           ;PIC16F1827-Inverted_Pendulum01.c: 124: INTCONbits.GIE = 1;
   596  006A  178B               	bsf	11,7	;volatile
   597  006B                     l1537:	
   598                           ;PIC16F1827-Inverted_Pendulum01.c: 126: uint8_t i;
   599                           ;PIC16F1827-Inverted_Pendulum01.c: 128: while (1) {
   600                           
   601                           
   602                           ;PIC16F1827-Inverted_Pendulum01.c: 129: uint16_t scan = ADC(0);
   603  006B  3000               	movlw	0
   604  006C  3182  2230  3180   	fcall	_ADC
   605  006F  0020               	movlb	0	; select bank0
   606  0070  0837               	movf	?_ADC+1,w
   607  0071  0021               	movlb	1	; select bank1
   608  0072  00C9               	movwf	(main@scan+1)^(0+128)
   609  0073  0020               	movlb	0	; select bank0
   610  0074  0836               	movf	?_ADC,w
   611  0075  0021               	movlb	1	; select bank1
   612  0076  00C8               	movwf	main@scan^(0+128)
   613                           
   614                           ;PIC16F1827-Inverted_Pendulum01.c: 130: static uint16_t last_scan = 127;
   615                           ;PIC16F1827-Inverted_Pendulum01.c: 131: int16_t sub = scan - last_scan;
   616  0077  0020               	movlb	0	; select bank0
   617  0078  093D               	comf	main@last_scan,w
   618  0079  00BB               	movwf	??_main
   619  007A  093E               	comf	main@last_scan+1,w
   620  007B  00BC               	movwf	??_main+1
   621  007C  0ABB               	incf	??_main,f
   622  007D  1903               	skipnz
   623  007E  0ABC               	incf	??_main+1,f
   624  007F  0021               	movlb	1	; select bank1
   625  0080  0848               	movf	main@scan^(0+128),w
   626  0081  0020               	movlb	0	; select bank0
   627  0082  073B               	addwf	??_main,w
   628  0083  0021               	movlb	1	; select bank1
   629  0084  00CA               	movwf	main@sub^(0+128)
   630  0085  0849               	movf	(main@scan+1)^(0+128),w
   631  0086  0020               	movlb	0	; select bank0
   632  0087  3D3C               	addwfc	??_main+1,w
   633  0088  0021               	movlb	1	; select bank1
   634  0089  00CB               	movwf	(main@sub+1)^(0+128)
   635                           
   636                           ;PIC16F1827-Inverted_Pendulum01.c: 132: last_scan = scan;
   637  008A  0849               	movf	(main@scan+1)^(0+128),w
   638  008B  0020               	movlb	0	; select bank0
   639  008C  00BE               	movwf	main@last_scan+1
   640  008D  0021               	movlb	1	; select bank1
   641  008E  0848               	movf	main@scan^(0+128),w
   642  008F  0020               	movlb	0	; select bank0
   643  0090  00BD               	movwf	main@last_scan
   644                           
   645                           ;PIC16F1827-Inverted_Pendulum01.c: 133: if (sub > 0) {
   646  0091  0021               	movlb	1	; select bank1
   647  0092  084B               	movf	(main@sub+1)^(0+128),w
   648  0093  3A80               	xorlw	128
   649  0094  0020               	movlb	0	; select bank0
   650  0095  00BB               	movwf	??_main
   651  0096  3080               	movlw	128
   652  0097  023B               	subwf	??_main,w
   653  0098  1D03               	skipz
   654  0099  289D               	goto	u685
   655  009A  3001               	movlw	1
   656  009B  0021               	movlb	1	; select bank1
   657  009C  024A               	subwf	main@sub^(0+128),w
   658  009D                     u685:	
   659  009D  1C03               	skipc
   660  009E  28AB               	goto	l235
   661                           
   662                           ;PIC16F1827-Inverted_Pendulum01.c: 134: drive(1);
   663  009F  3001               	movlw	1
   664  00A0  3181  21C4  3180   	fcall	_drive
   665                           
   666                           ;PIC16F1827-Inverted_Pendulum01.c: 135: PWM_set(sub);
   667  00A3  0021               	movlb	1	; select bank1
   668  00A4  084A               	movf	main@sub^(0+128),w
   669  00A5  3182  22AE  3180   	fcall	_PWM_set
   670                           
   671                           ;PIC16F1827-Inverted_Pendulum01.c: 136: LATB4 = 1;
   672  00A8  0022               	movlb	2	; select bank2
   673  00A9  160D               	bsf	13,4	;volatile
   674  00AA  28C2               	goto	l1565
   675  00AB                     l235:	
   676                           ;PIC16F1827-Inverted_Pendulum01.c: 138: } else if (sub < 0) {
   677                           
   678                           ;PIC16F1827-Inverted_Pendulum01.c: 137: LATB5 = 0;
   679                           
   680  00AB  0021               	movlb	1	; select bank1
   681  00AC  1FCB               	btfss	(main@sub+1)^(0+128),7
   682  00AD  28BC               	goto	l1561
   683                           
   684                           ;PIC16F1827-Inverted_Pendulum01.c: 139: drive(2);
   685  00AE  3002               	movlw	2
   686  00AF  3181  21C4  3180   	fcall	_drive
   687                           
   688                           ;PIC16F1827-Inverted_Pendulum01.c: 140: PWM_set(-sub);
   689  00B2  0021               	movlb	1	; select bank1
   690  00B3  034A               	decf	main@sub^(0+128),w
   691  00B4  3AFF               	xorlw	255
   692  00B5  3182  22AE  3180   	fcall	_PWM_set
   693                           
   694                           ;PIC16F1827-Inverted_Pendulum01.c: 141: LATB4 = 0;
   695  00B8  0022               	movlb	2	; select bank2
   696  00B9  120D               	bcf	13,4	;volatile
   697                           
   698                           ;PIC16F1827-Inverted_Pendulum01.c: 142: LATB5 = 1;
   699  00BA  168D               	bsf	13,5	;volatile
   700                           
   701                           ;PIC16F1827-Inverted_Pendulum01.c: 143: } else {
   702  00BB  28C3               	goto	l1567
   703  00BC                     l1561:	
   704                           
   705                           ;PIC16F1827-Inverted_Pendulum01.c: 144: drive(0);
   706  00BC  3000               	movlw	0
   707  00BD  3181  21C4  3180   	fcall	_drive
   708                           
   709                           ;PIC16F1827-Inverted_Pendulum01.c: 145: LATB4 = 0;
   710  00C0  0022               	movlb	2	; select bank2
   711  00C1  120D               	bcf	13,4	;volatile
   712  00C2                     l1565:	
   713                           
   714                           ;PIC16F1827-Inverted_Pendulum01.c: 146: LATB5 = 0;
   715  00C2  128D               	bcf	13,5	;volatile
   716  00C3                     l1567:	
   717                           
   718                           ;PIC16F1827-Inverted_Pendulum01.c: 147: }
   719                           ;PIC16F1827-Inverted_Pendulum01.c: 148: _delay((unsigned long)((10)*(32000000/4000.0)));
   720  00C3  3068               	movlw	104
   721  00C4  0020               	movlb	0	; select bank0
   722  00C5  00BC               	movwf	??_main+1
   723  00C6  30E4               	movlw	228
   724  00C7  00BB               	movwf	??_main
   725  00C8                     u707:	
   726  00C8  0BBB               	decfsz	??_main,f
   727  00C9  28C8               	goto	u707
   728  00CA  0BBC               	decfsz	??_main+1,f
   729  00CB  28C8               	goto	u707
   730  00CC  0000               	nop
   731  00CD  286B               	goto	l1537
   732  00CE                     __end_of_main:	
   733                           ;PIC16F1827-Inverted_Pendulum01.c: 149: }
   734                           ;PIC16F1827-Inverted_Pendulum01.c: 150: return 0;
   735                           ;	Return value of _main is never used
   736                           
   737                           
   738                           	psect	text1
   739  029B                     __ptext1:	
   740 ;; *************** function _timer1_init *****************
   741 ;; Defined at:
   742 ;;		line 71 in file "../My_header\My_header.h"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  prescaler       1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  prescaler       1    7[BANK0 ] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;		None               void
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   756 ;;      Params:         0       0       0       0       0       0
   757 ;;      Locals:         0       1       0       0       0       0
   758 ;;      Temps:          0       1       0       0       0       0
   759 ;;      Totals:         0       2       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    4
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _timer1_init
   772  029B                     _timer1_init:	
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
   776                           ;timer1_init@prescaler stored from wreg
   777  029B  0020               	movlb	0	; select bank0
   778  029C  00B7               	movwf	timer1_init@prescaler
   779                           
   780                           ;My_header\My_header.h: 72: T1CONbits.TMR1ON = 1;
   781  029D  1418               	bsf	24,0	;volatile
   782                           
   783                           ;My_header\My_header.h: 73: T1CONbits.TMR1CS = 0;
   784  029E  303F               	movlw	-193
   785  029F  0598               	andwf	24,f	;volatile
   786                           
   787                           ;My_header\My_header.h: 74: T1CONbits.T1CKPS = prescaler;
   788  02A0  0837               	movf	timer1_init@prescaler,w
   789  02A1  00B6               	movwf	??_timer1_init
   790  02A2  0EB6               	swapf	??_timer1_init,f
   791  02A3  0818               	movf	24,w	;volatile
   792  02A4  0636               	xorwf	??_timer1_init,w
   793  02A5  39CF               	andlw	-49
   794  02A6  0636               	xorwf	??_timer1_init,w
   795  02A7  0098               	movwf	24	;volatile
   796                           
   797                           ;My_header\My_header.h: 75: TMR1H = 0x00;
   798  02A8  0197               	clrf	23	;volatile
   799                           
   800                           ;My_header\My_header.h: 76: TMR1L = 0x00;
   801  02A9  0196               	clrf	22	;volatile
   802                           
   803                           ;My_header\My_header.h: 77: PIE1bits.TMR1IE = 1;
   804  02AA  0021               	movlb	1	; select bank1
   805  02AB  1411               	bsf	17,0	;volatile
   806                           
   807                           ;My_header\My_header.h: 78: INTCONbits.PEIE = 1;
   808  02AC  170B               	bsf	11,6	;volatile
   809  02AD  0008               	return
   810  02AE                     __end_of_timer1_init:	
   811                           
   812                           	psect	text2
   813  024F                     __ptext2:	
   814 ;; *************** function _timer0_init *****************
   815 ;; Defined at:
   816 ;;		line 33 in file "../My_header\My_header.h"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  prescaler       1    wreg     unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  prescaler       1    7[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;		None               void
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   830 ;;      Params:         0       0       0       0       0       0
   831 ;;      Locals:         0       1       0       0       0       0
   832 ;;      Temps:          0       1       0       0       0       0
   833 ;;      Totals:         0       2       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    4
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _timer0_init
   846  024F                     _timer0_init:	
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
   850                           ;timer0_init@prescaler stored from wreg
   851  024F  0020               	movlb	0	; select bank0
   852  0250  00B7               	movwf	timer0_init@prescaler
   853                           
   854                           ;My_header\My_header.h: 34: if (prescaler == 0) {
   855  0251  0837               	movf	timer0_init@prescaler,w
   856  0252  1D03               	btfss	3,2
   857  0253  2A57               	goto	l89
   858                           
   859                           ;My_header\My_header.h: 35: OPTION_REGbits.PSA = 1;
   860  0254  0021               	movlb	1	; select bank1
   861  0255  1595               	bsf	21,3	;volatile
   862                           
   863                           ;My_header\My_header.h: 36: } else {
   864  0256  2A65               	goto	l1337
   865  0257                     l89:	
   866                           
   867                           ;My_header\My_header.h: 37: OPTION_REGbits.PSA = 0;
   868  0257  0021               	movlb	1	; select bank1
   869  0258  1195               	bcf	21,3	;volatile
   870                           
   871                           ;My_header\My_header.h: 38: OPTION_REGbits.PS = prescaler - 1;
   872  0259  30FF               	movlw	255
   873  025A  0020               	movlb	0	; select bank0
   874  025B  0737               	addwf	timer0_init@prescaler,w
   875  025C  00B6               	movwf	??_timer0_init
   876  025D  0021               	movlb	1	; select bank1
   877  025E  0815               	movf	21,w	;volatile
   878  025F  0020               	movlb	0	; select bank0
   879  0260  0636               	xorwf	??_timer0_init,w
   880  0261  39F8               	andlw	-8
   881  0262  0636               	xorwf	??_timer0_init,w
   882  0263  0021               	movlb	1	; select bank1
   883  0264  0095               	movwf	21	;volatile
   884  0265                     l1337:	
   885                           
   886                           ;My_header\My_header.h: 39: }
   887                           ;My_header\My_header.h: 40: OPTION_REGbits.TMR0CS = 0;
   888  0265  1295               	bcf	21,5	;volatile
   889                           
   890                           ;My_header\My_header.h: 41: OPTION_REGbits.TMR0SE = 0;
   891  0266  1215               	bcf	21,4	;volatile
   892                           
   893                           ;My_header\My_header.h: 42: INTCONbits.TMR0IE = 1;
   894  0267  168B               	bsf	11,5	;volatile
   895                           
   896                           ;My_header\My_header.h: 43: INTCONbits.PEIE = 1;
   897  0268  170B               	bsf	11,6	;volatile
   898  0269  0008               	return
   899  026A                     __end_of_timer0_init:	
   900                           
   901                           	psect	text3
   902  0211                     __ptext3:	
   903 ;; *************** function _ringbuf_init *****************
   904 ;; Defined at:
   905 ;;		line 24 in file "../My_header\My_ringbuf.h"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  rb              1    wreg     PTR struct ringbuf
   908 ;;		 -> tx_buf(7), 
   909 ;;  internal_buf    1    6[BANK0 ] PTR unsigned char 
   910 ;;		 -> main@buf(40), 
   911 ;;  bufsize         2    7[BANK0 ] unsigned int 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  rb              1   10[BANK0 ] PTR struct ringbuf
   914 ;;		 -> tx_buf(7), 
   915 ;; Return value:  Size  Location     Type
   916 ;;		None               void
   917 ;; Registers used:
   918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   924 ;;      Params:         0       3       0       0       0       0
   925 ;;      Locals:         0       1       0       0       0       0
   926 ;;      Temps:          0       1       0       0       0       0
   927 ;;      Totals:         0       5       0       0       0       0
   928 ;;Total ram usage:        5 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    4
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _ringbuf_init
   940  0211                     _ringbuf_init:	
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2+status,0]
   944                           ;ringbuf_init@rb stored from wreg
   945  0211  0020               	movlb	0	; select bank0
   946  0212  00BA               	movwf	ringbuf_init@rb
   947                           
   948                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
   949  0213  0836               	movf	ringbuf_init@internal_buf,w
   950  0214  00B9               	movwf	??_ringbuf_init
   951  0215  083A               	movf	ringbuf_init@rb,w
   952  0216  0086               	movwf	6
   953  0217  0187               	clrf	7
   954  0218  0839               	movf	??_ringbuf_init,w
   955  0219  0081               	movwf	1
   956                           
   957                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
   958  021A  0A3A               	incf	ringbuf_init@rb,w
   959  021B  0086               	movwf	6
   960  021C  0187               	clrf	7
   961  021D  0837               	movf	ringbuf_init@bufsize,w
   962  021E  3FC0               	movwi [0]fsr1
   963  021F  0838               	movf	ringbuf_init@bufsize+1,w
   964  0220  3FC1               	movwi [1]fsr1
   965                           
   966                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
   967  0221  083A               	movf	ringbuf_init@rb,w
   968  0222  3E03               	addlw	3
   969  0223  0086               	movwf	6
   970  0224  0187               	clrf	7
   971  0225  3000               	movlw	0
   972  0226  3FC0               	movwi [0]fsr1
   973  0227  3FC1               	movwi [1]fsr1
   974                           
   975                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
   976  0228  083A               	movf	ringbuf_init@rb,w
   977  0229  3E05               	addlw	5
   978  022A  0086               	movwf	6
   979  022B  0187               	clrf	7
   980  022C  3000               	movlw	0
   981  022D  3FC0               	movwi [0]fsr1
   982  022E  3FC1               	movwi [1]fsr1
   983  022F  0008               	return
   984  0230                     __end_of_ringbuf_init:	
   985                           
   986                           	psect	text4
   987  01C4                     __ptext4:	
   988 ;; *************** function _drive *****************
   989 ;; Defined at:
   990 ;;		line 79 in file "PIC16F1827-Inverted_Pendulum01.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  dir             1    wreg     unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  dir             1    6[BANK0 ] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;		None               void
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1004 ;;      Params:         0       0       0       0       0       0
  1005 ;;      Locals:         0       1       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0
  1007 ;;      Totals:         0       1       0       0       0       0
  1008 ;;Total ram usage:        1 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    4
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _drive
  1020  01C4                     _drive:	
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0]
  1024                           ;drive@dir stored from wreg
  1025  01C4  0020               	movlb	0	; select bank0
  1026  01C5  00B6               	movwf	drive@dir
  1027                           
  1028                           ;PIC16F1827-Inverted_Pendulum01.c: 80: switch (dir) {
  1029  01C6  29DF               	goto	l1441
  1030  01C7                     l224:	
  1031                           ;PIC16F1827-Inverted_Pendulum01.c: 81: case 0:
  1032                           
  1033                           
  1034                           ;PIC16F1827-Inverted_Pendulum01.c: 82: LATA6 = 0;
  1035  01C7  0022               	movlb	2	; select bank2
  1036  01C8  130C               	bcf	12,6	;volatile
  1037                           
  1038                           ;PIC16F1827-Inverted_Pendulum01.c: 83: LATA7 = 0;
  1039  01C9  138C               	bcf	12,7	;volatile
  1040                           
  1041                           ;PIC16F1827-Inverted_Pendulum01.c: 84: LATA2 = 0;
  1042  01CA  110C               	bcf	12,2	;volatile
  1043                           
  1044                           ;PIC16F1827-Inverted_Pendulum01.c: 85: LATA3 = 0;
  1045  01CB  118C               	bcf	12,3	;volatile
  1046                           
  1047                           ;PIC16F1827-Inverted_Pendulum01.c: 86: break;
  1048  01CC  0008               	return
  1049  01CD                     l226:	
  1050                           ;PIC16F1827-Inverted_Pendulum01.c: 87: case 1:
  1051                           
  1052                           
  1053                           ;PIC16F1827-Inverted_Pendulum01.c: 88: LATA6 = 1;
  1054  01CD  0022               	movlb	2	; select bank2
  1055  01CE  170C               	bsf	12,6	;volatile
  1056                           
  1057                           ;PIC16F1827-Inverted_Pendulum01.c: 89: LATA7 = 0;
  1058  01CF  138C               	bcf	12,7	;volatile
  1059                           
  1060                           ;PIC16F1827-Inverted_Pendulum01.c: 90: LATA2 = 1;
  1061  01D0  150C               	bsf	12,2	;volatile
  1062                           
  1063                           ;PIC16F1827-Inverted_Pendulum01.c: 91: LATA3 = 0;
  1064  01D1  118C               	bcf	12,3	;volatile
  1065                           
  1066                           ;PIC16F1827-Inverted_Pendulum01.c: 92: break;
  1067  01D2  0008               	return
  1068  01D3                     l227:	
  1069                           ;PIC16F1827-Inverted_Pendulum01.c: 93: case 2:
  1070                           
  1071                           
  1072                           ;PIC16F1827-Inverted_Pendulum01.c: 94: LATA6 = 0;
  1073  01D3  0022               	movlb	2	; select bank2
  1074  01D4  130C               	bcf	12,6	;volatile
  1075                           
  1076                           ;PIC16F1827-Inverted_Pendulum01.c: 95: LATA7 = 1;
  1077  01D5  178C               	bsf	12,7	;volatile
  1078                           
  1079                           ;PIC16F1827-Inverted_Pendulum01.c: 96: LATA2 = 0;
  1080  01D6  110C               	bcf	12,2	;volatile
  1081                           
  1082                           ;PIC16F1827-Inverted_Pendulum01.c: 97: LATA3 = 1;
  1083  01D7  158C               	bsf	12,3	;volatile
  1084                           
  1085                           ;PIC16F1827-Inverted_Pendulum01.c: 98: break;
  1086  01D8  0008               	return
  1087  01D9                     l228:	
  1088                           ;PIC16F1827-Inverted_Pendulum01.c: 99: case 3:
  1089                           
  1090                           
  1091                           ;PIC16F1827-Inverted_Pendulum01.c: 100: LATA6 = 1;
  1092  01D9  0022               	movlb	2	; select bank2
  1093  01DA  170C               	bsf	12,6	;volatile
  1094                           
  1095                           ;PIC16F1827-Inverted_Pendulum01.c: 101: LATA7 = 1;
  1096  01DB  178C               	bsf	12,7	;volatile
  1097                           
  1098                           ;PIC16F1827-Inverted_Pendulum01.c: 102: LATA2 = 1;
  1099  01DC  150C               	bsf	12,2	;volatile
  1100                           
  1101                           ;PIC16F1827-Inverted_Pendulum01.c: 103: LATA3 = 1;
  1102  01DD  158C               	bsf	12,3	;volatile
  1103                           
  1104                           ;PIC16F1827-Inverted_Pendulum01.c: 105: }
  1105                           
  1106                           ;PIC16F1827-Inverted_Pendulum01.c: 104: break;
  1107  01DE  0008               	return
  1108  01DF                     l1441:	
  1109  01DF  0020               	movlb	0	; select bank0
  1110  01E0  0836               	movf	drive@dir,w
  1111                           
  1112                           ; Switch size 1, requested type "space"
  1113                           ; Number of cases is 4, Range of values is 0 to 3
  1114                           ; switch strategies available:
  1115                           ; Name         Instructions Cycles
  1116                           ; simple_byte           13     7 (average)
  1117                           ; direct_byte           14     6 (fixed)
  1118                           ; jumptable            260     6 (fixed)
  1119                           ;	Chosen strategy is simple_byte
  1120  01E1  3A00               	xorlw	0	; case 0
  1121  01E2  1903               	skipnz
  1122  01E3  29C7               	goto	l224
  1123  01E4  3A01               	xorlw	1	; case 1
  1124  01E5  1903               	skipnz
  1125  01E6  29CD               	goto	l226
  1126  01E7  3A03               	xorlw	3	; case 2
  1127  01E8  1903               	skipnz
  1128  01E9  29D3               	goto	l227
  1129  01EA  3A01               	xorlw	1	; case 3
  1130  01EB  1903               	skipnz
  1131  01EC  29D9               	goto	l228
  1132  01ED  29EE               	goto	l229
  1133  01EE                     l229:	
  1134  01EE  0008               	return
  1135  01EF                     __end_of_drive:	
  1136                           
  1137                           	psect	text5
  1138  02BE                     __ptext5:	
  1139 ;; *************** function _UART_init *****************
  1140 ;; Defined at:
  1141 ;;		line 237 in file "../My_header\My_header.h"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;		None               void
  1148 ;; Registers used:
  1149 ;;		wreg, status,2
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1155 ;;      Params:         0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0
  1158 ;;      Totals:         0       0       0       0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    4
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _UART_init
  1171  02BE                     _UART_init:	
  1172                           
  1173                           ;My_header\My_header.h: 238: SPEN = 1;
  1174                           
  1175                           ;incstack = 0
  1176                           ; Regs used in _UART_init: [wreg+status,2]
  1177  02BE  0023               	movlb	3	; select bank3
  1178  02BF  179D               	bsf	29,7	;volatile
  1179                           
  1180                           ;My_header\My_header.h: 239: RCSTA = 0x90;
  1181  02C0  3090               	movlw	144
  1182  02C1  009D               	movwf	29	;volatile
  1183                           
  1184                           ;My_header\My_header.h: 240: BRG16 = 0;
  1185  02C2  119F               	bcf	31,3	;volatile
  1186                           
  1187                           ;My_header\My_header.h: 241: SPBRGH = 0;
  1188  02C3  019C               	clrf	28	;volatile
  1189                           
  1190                           ;My_header\My_header.h: 242: SPBRGL = 207;
  1191  02C4  30CF               	movlw	207
  1192  02C5  009B               	movwf	27	;volatile
  1193                           
  1194                           ;My_header\My_header.h: 243: TXSTA = 0x24;
  1195  02C6  3024               	movlw	36
  1196  02C7  009E               	movwf	30	;volatile
  1197                           
  1198                           ;My_header\My_header.h: 244: PIE1bits.RCIE = 1;
  1199  02C8  0021               	movlb	1	; select bank1
  1200  02C9  1691               	bsf	17,5	;volatile
  1201                           
  1202                           ;My_header\My_header.h: 245: INTCONbits.PEIE = 1;
  1203  02CA  170B               	bsf	11,6	;volatile
  1204  02CB  0008               	return
  1205  02CC                     __end_of_UART_init:	
  1206                           
  1207                           	psect	text6
  1208  02AE                     __ptext6:	
  1209 ;; *************** function _PWM_set *****************
  1210 ;; Defined at:
  1211 ;;		line 72 in file "PIC16F1827-Inverted_Pendulum01.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  value           1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  value           1    6[BANK0 ] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;		None               void
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1225 ;;      Params:         0       0       0       0       0       0
  1226 ;;      Locals:         0       1       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0
  1228 ;;      Totals:         0       1       0       0       0       0
  1229 ;;Total ram usage:        1 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    4
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _PWM_set
  1241  02AE                     _PWM_set:	
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _PWM_set: [wreg+status,2+status,0]
  1245                           ;PWM_set@value stored from wreg
  1246  02AE  0020               	movlb	0	; select bank0
  1247  02AF  00B6               	movwf	PWM_set@value
  1248                           
  1249                           ;PIC16F1827-Inverted_Pendulum01.c: 73: CCP1CONbits.DC1B = 0;
  1250  02B0  30CF               	movlw	-49
  1251  02B1  0025               	movlb	5	; select bank5
  1252  02B2  0593               	andwf	19,f	;volatile
  1253                           
  1254                           ;PIC16F1827-Inverted_Pendulum01.c: 74: CCPR1L = value;
  1255  02B3  0020               	movlb	0	; select bank0
  1256  02B4  0836               	movf	PWM_set@value,w
  1257  02B5  0025               	movlb	5	; select bank5
  1258  02B6  0091               	movwf	17	;volatile
  1259                           
  1260                           ;PIC16F1827-Inverted_Pendulum01.c: 75: CCP2CONbits.DC2B = 0;
  1261  02B7  30CF               	movlw	-49
  1262  02B8  059A               	andwf	26,f	;volatile
  1263                           
  1264                           ;PIC16F1827-Inverted_Pendulum01.c: 76: CCPR2L = value;
  1265  02B9  0020               	movlb	0	; select bank0
  1266  02BA  0836               	movf	PWM_set@value,w
  1267  02BB  0025               	movlb	5	; select bank5
  1268  02BC  0098               	movwf	24	;volatile
  1269  02BD  0008               	return
  1270  02BE                     __end_of_PWM_set:	
  1271                           
  1272                           	psect	text7
  1273  01EF                     __ptext7:	
  1274 ;; *************** function _PWM_init *****************
  1275 ;; Defined at:
  1276 ;;		line 53 in file "PIC16F1827-Inverted_Pendulum01.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;		None               void
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1290 ;;      Params:         0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    4
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _PWM_init
  1306  01EF                     _PWM_init:	
  1307                           
  1308                           ;PIC16F1827-Inverted_Pendulum01.c: 54: CCP1CONbits.CCP1M = 12;
  1309                           
  1310                           ;incstack = 0
  1311                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  1312  01EF  0025               	movlb	5	; select bank5
  1313  01F0  0813               	movf	19,w	;volatile
  1314  01F1  39F0               	andlw	-16
  1315  01F2  380C               	iorlw	12
  1316  01F3  0093               	movwf	19	;volatile
  1317                           
  1318                           ;PIC16F1827-Inverted_Pendulum01.c: 55: CCP1CONbits.P1M = 0;
  1319  01F4  303F               	movlw	-193
  1320  01F5  0593               	andwf	19,f	;volatile
  1321                           
  1322                           ;PIC16F1827-Inverted_Pendulum01.c: 56: CCPTMRSbits.C1TSEL = 0;
  1323  01F6  30FC               	movlw	-4
  1324  01F7  059E               	andwf	30,f	;volatile
  1325                           
  1326                           ;PIC16F1827-Inverted_Pendulum01.c: 57: CCPR1Lbits.CCPR1L = 0;
  1327  01F8  0191               	clrf	17	;volatile
  1328                           
  1329                           ;PIC16F1827-Inverted_Pendulum01.c: 58: CCP1CONbits.DC1B = 0;
  1330  01F9  30CF               	movlw	-49
  1331  01FA  0593               	andwf	19,f	;volatile
  1332                           
  1333                           ;PIC16F1827-Inverted_Pendulum01.c: 60: CCP2CONbits.CCP2M = 12;
  1334  01FB  081A               	movf	26,w	;volatile
  1335  01FC  39F0               	andlw	-16
  1336  01FD  380C               	iorlw	12
  1337  01FE  009A               	movwf	26	;volatile
  1338                           
  1339                           ;PIC16F1827-Inverted_Pendulum01.c: 61: CCP2CONbits.P2M = 0;
  1340  01FF  303F               	movlw	-193
  1341  0200  059A               	andwf	26,f	;volatile
  1342                           
  1343                           ;PIC16F1827-Inverted_Pendulum01.c: 62: CCPTMRSbits.C2TSEL = 0;
  1344  0201  30F3               	movlw	-13
  1345  0202  059E               	andwf	30,f	;volatile
  1346                           
  1347                           ;PIC16F1827-Inverted_Pendulum01.c: 63: CCPR2Lbits.CCPR2L = 0;
  1348  0203  0198               	clrf	24	;volatile
  1349                           
  1350                           ;PIC16F1827-Inverted_Pendulum01.c: 64: CCP2CONbits.DC2B = 0;
  1351  0204  30CF               	movlw	-49
  1352  0205  059A               	andwf	26,f	;volatile
  1353                           
  1354                           ;PIC16F1827-Inverted_Pendulum01.c: 66: T2CONbits.T2OUTPS = 0;
  1355  0206  3087               	movlw	-121
  1356  0207  0020               	movlb	0	; select bank0
  1357  0208  059C               	andwf	28,f	;volatile
  1358                           
  1359                           ;PIC16F1827-Inverted_Pendulum01.c: 67: T2CONbits.T2CKPS = 2;
  1360  0209  081C               	movf	28,w	;volatile
  1361  020A  39FC               	andlw	-4
  1362  020B  3802               	iorlw	2
  1363  020C  009C               	movwf	28	;volatile
  1364                           
  1365                           ;PIC16F1827-Inverted_Pendulum01.c: 68: PR2 = 20 - 1;
  1366  020D  3013               	movlw	19
  1367  020E  009B               	movwf	27	;volatile
  1368                           
  1369                           ;PIC16F1827-Inverted_Pendulum01.c: 69: T2CONbits.TMR2ON = 1;
  1370  020F  151C               	bsf	28,2	;volatile
  1371  0210  0008               	return
  1372  0211                     __end_of_PWM_init:	
  1373                           
  1374                           	psect	text8
  1375  026A                     __ptext8:	
  1376 ;; *************** function _ADC_init *****************
  1377 ;; Defined at:
  1378 ;;		line 161 in file "../My_header\My_header.h"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  p_ref           1    wreg     unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  p_ref           1    6[BANK0 ] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1392 ;;      Params:         0       0       0       0       0       0
  1393 ;;      Locals:         0       1       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0
  1395 ;;      Totals:         0       1       0       0       0       0
  1396 ;;Total ram usage:        1 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    4
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _ADC_init
  1408  026A                     _ADC_init:	
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  1412                           ;ADC_init@p_ref stored from wreg
  1413  026A  0020               	movlb	0	; select bank0
  1414  026B  00B6               	movwf	ADC_init@p_ref
  1415                           
  1416                           ;My_header\My_header.h: 162: ADCON1bits.ADFM = 0;
  1417  026C  0021               	movlb	1	; select bank1
  1418  026D  139E               	bcf	30,7	;volatile
  1419                           
  1420                           ;My_header\My_header.h: 163: ADCON1bits.ADCS = 6;
  1421  026E  081E               	movf	30,w	;volatile
  1422  026F  398F               	andlw	-113
  1423  0270  3860               	iorlw	96
  1424  0271  009E               	movwf	30	;volatile
  1425                           
  1426                           ;My_header\My_header.h: 164: ADCON1bits.ADNREF = 0;
  1427  0272  111E               	bcf	30,2	;volatile
  1428                           
  1429                           ;My_header\My_header.h: 165: ADCON1bits.ADPREF = p_ref;
  1430  0273  081E               	movf	30,w	;volatile
  1431  0274  0020               	movlb	0	; select bank0
  1432  0275  0636               	xorwf	ADC_init@p_ref,w
  1433  0276  39FC               	andlw	-4
  1434  0277  0636               	xorwf	ADC_init@p_ref,w
  1435  0278  0021               	movlb	1	; select bank1
  1436  0279  009E               	movwf	30	;volatile
  1437                           
  1438                           ;My_header\My_header.h: 166: if (p_ref == 3) FVRCON = 0x83;
  1439  027A  3003               	movlw	3
  1440  027B  0020               	movlb	0	; select bank0
  1441  027C  0636               	xorwf	ADC_init@p_ref,w
  1442  027D  1D03               	btfss	3,2
  1443  027E  0008               	return
  1444  027F  3083               	movlw	131
  1445  0280  0022               	movlb	2	; select bank2
  1446  0281  0097               	movwf	23	;volatile
  1447  0282  0008               	return
  1448  0283                     __end_of_ADC_init:	
  1449                           
  1450                           	psect	text9
  1451  0230                     __ptext9:	
  1452 ;; *************** function _ADC *****************
  1453 ;; Defined at:
  1454 ;;		line 172 in file "../My_header\My_header.h"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  ch              1    wreg     unsigned char 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  ch              1    9[BANK0 ] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2    6[BANK0 ] unsigned int 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1468 ;;      Params:         0       2       0       0       0       0
  1469 ;;      Locals:         0       1       0       0       0       0
  1470 ;;      Temps:          0       1       0       0       0       0
  1471 ;;      Totals:         0       4       0       0       0       0
  1472 ;;Total ram usage:        4 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _ADC
  1484  0230                     _ADC:	
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1488                           ;ADC@ch stored from wreg
  1489  0230  0020               	movlb	0	; select bank0
  1490  0231  00B9               	movwf	ADC@ch
  1491                           
  1492                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  1493  0232  0839               	movf	ADC@ch,w
  1494  0233  00B8               	movwf	??_ADC
  1495  0234  0DB8               	rlf	??_ADC,f
  1496  0235  0DB8               	rlf	??_ADC,f
  1497  0236  0021               	movlb	1	; select bank1
  1498  0237  081D               	movf	29,w	;volatile
  1499  0238  0020               	movlb	0	; select bank0
  1500  0239  0638               	xorwf	??_ADC,w
  1501  023A  3983               	andlw	-125
  1502  023B  0638               	xorwf	??_ADC,w
  1503  023C  0021               	movlb	1	; select bank1
  1504  023D  009D               	movwf	29	;volatile
  1505                           
  1506                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  1507  023E  141D               	bsf	29,0	;volatile
  1508                           
  1509                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  1510  023F  0020               	movlb	0	; select bank0
  1511  0240  1311               	bcf	17,6	;volatile
  1512                           
  1513                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  1514  0241  0021               	movlb	1	; select bank1
  1515  0242  149D               	bsf	29,1	;volatile
  1516  0243                     l101:	
  1517                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
  1518                           
  1519  0243  0020               	movlb	0	; select bank0
  1520  0244  1F11               	btfss	17,6	;volatile
  1521  0245  2A43               	goto	l101
  1522                           
  1523                           ;My_header\My_header.h: 179: return ADRES;
  1524  0246  0021               	movlb	1	; select bank1
  1525  0247  081C               	movf	28,w	;volatile
  1526  0248  0020               	movlb	0	; select bank0
  1527  0249  00B7               	movwf	?_ADC+1
  1528  024A  0021               	movlb	1	; select bank1
  1529  024B  081B               	movf	27,w	;volatile
  1530  024C  0020               	movlb	0	; select bank0
  1531  024D  00B6               	movwf	?_ADC
  1532  024E  0008               	return
  1533  024F                     __end_of_ADC:	
  1534                           
  1535                           	psect	intentry
  1536  0004                     __pintentry:	
  1537 ;; *************** function _isr *****************
  1538 ;; Defined at:
  1539 ;;		line 36 in file "PIC16F1827-Inverted_Pendulum01.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  ascii           1    5[BANK0 ] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;		None               void
  1546 ;; Registers used:
  1547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1553 ;;      Params:         0       0       0       0       0       0
  1554 ;;      Locals:         0       1       0       0       0       0
  1555 ;;      Temps:          0       2       0       0       0       0
  1556 ;;      Totals:         0       3       0       0       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    3
  1560 ;; This function calls:
  1561 ;;		_interrupt_TXIF
  1562 ;;		_tx_send
  1563 ;; This function is called by:
  1564 ;;		Interrupt level 1
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568  0004                     _isr:	
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1572  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1573  0005  3180               	pagesel	$
  1574  0006  0020               	movlb	0	; select bank0
  1575  0007  087F               	movf	127,w
  1576  0008  00B4               	movwf	??_isr+1
  1577                           
  1578                           ;PIC16F1827-Inverted_Pendulum01.c: 37: interrupt_TXIF();
  1579  0009  3182  2283  3180   	fcall	_interrupt_TXIF
  1580                           
  1581                           ;PIC16F1827-Inverted_Pendulum01.c: 38: if (TMR0IF) {
  1582  000C  190B               	btfsc	11,2	;volatile
  1583                           
  1584                           ;PIC16F1827-Inverted_Pendulum01.c: 39: TMR0IF = 0;
  1585  000D  110B               	bcf	11,2	;volatile
  1586                           
  1587                           ;PIC16F1827-Inverted_Pendulum01.c: 40: }
  1588                           ;PIC16F1827-Inverted_Pendulum01.c: 41: if (TMR1IF) {
  1589  000E  0020               	movlb	0	; select bank0
  1590  000F  1811               	btfsc	17,0	;volatile
  1591                           
  1592                           ;PIC16F1827-Inverted_Pendulum01.c: 42: TMR1IF = 0;
  1593  0010  1011               	bcf	17,0	;volatile
  1594                           
  1595                           ;PIC16F1827-Inverted_Pendulum01.c: 45: }
  1596                           ;PIC16F1827-Inverted_Pendulum01.c: 46: if (RCIF) {
  1597  0011  1E91               	btfss	17,5	;volatile
  1598  0012  281D               	goto	i1l214
  1599                           
  1600                           ;PIC16F1827-Inverted_Pendulum01.c: 47: RCIF = 0;
  1601  0013  1291               	bcf	17,5	;volatile
  1602                           
  1603                           ;PIC16F1827-Inverted_Pendulum01.c: 48: char ascii = RCREG;
  1604  0014  0023               	movlb	3	; select bank3
  1605  0015  0819               	movf	25,w	;volatile
  1606  0016  0020               	movlb	0	; select bank0
  1607  0017  00B3               	movwf	??_isr
  1608  0018  0833               	movf	??_isr,w
  1609  0019  00B5               	movwf	isr@ascii
  1610                           
  1611                           ;PIC16F1827-Inverted_Pendulum01.c: 49: tx_send(ascii);
  1612  001A  0835               	movf	isr@ascii,w
  1613  001B  3182  22CC         	fcall	_tx_send
  1614  001D                     i1l214:	
  1615  001D  0020               	movlb	0	; select bank0
  1616  001E  0834               	movf	??_isr+1,w
  1617  001F  00FF               	movwf	127
  1618  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1619  0021  0009               	retfie
  1620  0022                     __end_of_isr:	
  1621                           
  1622                           	psect	text11
  1623  02CC                     __ptext11:	
  1624 ;; *************** function _tx_send *****************
  1625 ;; Defined at:
  1626 ;;		line 259 in file "../My_header\My_header.h"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  asciicode       1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  asciicode       1    2[BANK0 ] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;		None               void
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1640 ;;      Params:         0       0       0       0       0       0
  1641 ;;      Locals:         0       1       0       0       0       0
  1642 ;;      Temps:          0       1       0       0       0       0
  1643 ;;      Totals:         0       2       0       0       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    2
  1647 ;; This function calls:
  1648 ;;		_ringbuf_put
  1649 ;; This function is called by:
  1650 ;;		_isr
  1651 ;;		_tx_sendn
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function _tx_send
  1657  02CC                     _tx_send:	
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _tx_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1661                           ;tx_send@asciicode stored from wreg
  1662  02CC  0020               	movlb	0	; select bank0
  1663  02CD  00B2               	movwf	tx_send@asciicode
  1664                           
  1665                           ;My_header\My_header.h: 260: ringbuf_put(&tx_buf, asciicode);
  1666  02CE  0832               	movf	tx_send@asciicode,w
  1667  02CF  00B1               	movwf	??_tx_send
  1668  02D0  0831               	movf	??_tx_send,w
  1669  02D1  00F7               	movwf	ringbuf_put@asciicode
  1670  02D2  3029               	movlw	(low (_tx_buf| 0))& (0+255)
  1671  02D3  3180  20CE         	fcall	_ringbuf_put
  1672                           
  1673                           ;My_header\My_header.h: 261: PIE1bits.TXIE = 1;
  1674  02D5  0021               	movlb	1	; select bank1
  1675  02D6  1611               	bsf	17,4	;volatile
  1676  02D7  0008               	return
  1677  02D8                     __end_of_tx_send:	
  1678                           
  1679                           	psect	text12
  1680  00CE                     __ptext12:	
  1681 ;; *************** function _ringbuf_put *****************
  1682 ;; Defined at:
  1683 ;;		line 39 in file "../My_header\My_ringbuf.h"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  rb              1    wreg     PTR struct ringbuf
  1686 ;;		 -> tx_buf(7), 
  1687 ;;  asciicode       1    7[COMMON] unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  rb              1    0[BANK0 ] PTR struct ringbuf
  1690 ;;		 -> tx_buf(7), 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;		None               void
  1693 ;; Registers used:
  1694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1700 ;;      Params:         1       0       0       0       0       0
  1701 ;;      Locals:         0       1       0       0       0       0
  1702 ;;      Temps:          6       0       0       0       0       0
  1703 ;;      Totals:         7       1       0       0       0       0
  1704 ;;Total ram usage:        8 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		_ringbuf_num
  1709 ;; This function is called by:
  1710 ;;		_tx_send
  1711 ;;		_ringbuf_put_num
  1712 ;;		_ringbuf_put_str
  1713 ;;		_tx_sends
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _ringbuf_put
  1719  00CE                     _ringbuf_put:	
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _ringbuf_put: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1723                           ;ringbuf_put@rb stored from wreg
  1724  00CE  0020               	movlb	0	; select bank0
  1725  00CF  00B0               	movwf	ringbuf_put@rb
  1726                           
  1727                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  1728  00D0  0A30               	incf	ringbuf_put@rb,w
  1729  00D1  0086               	movwf	6
  1730  00D2  0187               	clrf	7
  1731  00D3  3F40               	moviw [0]fsr1
  1732  00D4  00F8               	movwf	??_ringbuf_put
  1733  00D5  3F41               	moviw [1]fsr1
  1734  00D6  00F9               	movwf	??_ringbuf_put+1
  1735  00D7  0830               	movf	ringbuf_put@rb,w
  1736  00D8  3181  2124  3180   	fcall	_ringbuf_num
  1737  00DB  0879               	movf	??_ringbuf_put+1,w
  1738  00DC  0271               	subwf	?_ringbuf_num+1,w
  1739  00DD  1D03               	skipz
  1740  00DE  28E1               	goto	u49_25
  1741  00DF  0878               	movf	??_ringbuf_put,w
  1742  00E0  0270               	subwf	?_ringbuf_num,w
  1743  00E1                     u49_25:	
  1744  00E1  1803               	skipnc
  1745  00E2  0008               	return
  1746                           
  1747                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  1748  00E3  0877               	movf	ringbuf_put@asciicode,w
  1749  00E4  00F8               	movwf	??_ringbuf_put
  1750  00E5  0020               	movlb	0	; select bank0
  1751  00E6  0830               	movf	ringbuf_put@rb,w
  1752  00E7  0086               	movwf	6
  1753  00E8  0187               	clrf	7
  1754  00E9  0830               	movf	ringbuf_put@rb,w
  1755  00EA  3E03               	addlw	3
  1756  00EB  0084               	movwf	4
  1757  00EC  0185               	clrf	5
  1758  00ED  0800               	movf	0,w
  1759  00EE  0701               	addwf	1,w
  1760  00EF  00F9               	movwf	??_ringbuf_put+1
  1761  00F0  0879               	movf	??_ringbuf_put+1,w
  1762  00F1  0086               	movwf	6
  1763  00F2  0187               	clrf	7
  1764  00F3  0878               	movf	??_ringbuf_put,w
  1765  00F4  0081               	movwf	1
  1766                           
  1767                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  1768  00F5  0A30               	incf	ringbuf_put@rb,w
  1769  00F6  0086               	movwf	6
  1770  00F7  0187               	clrf	7
  1771  00F8  3F40               	moviw [0]fsr1
  1772  00F9  00F8               	movwf	??_ringbuf_put
  1773  00FA  3F41               	moviw [1]fsr1
  1774  00FB  00F9               	movwf	??_ringbuf_put+1
  1775  00FC  0830               	movf	ringbuf_put@rb,w
  1776  00FD  3E03               	addlw	3
  1777  00FE  0086               	movwf	6
  1778  00FF  0187               	clrf	7
  1779  0100  3F40               	moviw [0]fsr1
  1780  0101  00FA               	movwf	??_ringbuf_put+2
  1781  0102  3F41               	moviw [1]fsr1
  1782  0103  00FB               	movwf	??_ringbuf_put+3
  1783  0104  087A               	movf	??_ringbuf_put+2,w
  1784  0105  3E01               	addlw	1
  1785  0106  00FC               	movwf	??_ringbuf_put+4
  1786  0107  3000               	movlw	0
  1787  0108  3D7B               	addwfc	??_ringbuf_put+3,w
  1788  0109  00FD               	movwf	??_ringbuf_put+5
  1789  010A  0879               	movf	??_ringbuf_put+1,w
  1790  010B  027D               	subwf	??_ringbuf_put+5,w
  1791  010C  1D03               	skipz
  1792  010D  2910               	goto	u50_25
  1793  010E  0878               	movf	??_ringbuf_put,w
  1794  010F  027C               	subwf	??_ringbuf_put+4,w
  1795  0110                     u50_25:	
  1796  0110  1803               	skipnc
  1797  0111  291C               	goto	i1l1309
  1798  0112  0830               	movf	ringbuf_put@rb,w
  1799  0113  3E03               	addlw	3
  1800  0114  0086               	movwf	6
  1801  0115  0187               	clrf	7
  1802  0116  3001               	movlw	1
  1803  0117  0781               	addwf	1,f
  1804  0118  3141               	addfsr 1,1
  1805  0119  1803               	skipnc
  1806  011A  0A81               	incf	1,f
  1807  011B  0008               	return
  1808  011C                     i1l1309:	
  1809                           
  1810                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  1811  011C  0830               	movf	ringbuf_put@rb,w
  1812  011D  3E03               	addlw	3
  1813  011E  0086               	movwf	6
  1814  011F  0187               	clrf	7
  1815  0120  3000               	movlw	0
  1816  0121  3FC0               	movwi [0]fsr1
  1817  0122  3FC1               	movwi [1]fsr1
  1818  0123  0008               	return
  1819  0124                     __end_of_ringbuf_put:	
  1820                           
  1821                           	psect	text13
  1822  0283                     __ptext13:	
  1823 ;; *************** function _interrupt_TXIF *****************
  1824 ;; Defined at:
  1825 ;;		line 248 in file "../My_header\My_header.h"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;		None               void
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1839 ;;      Params:         0       0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		_ringbuf_num
  1848 ;;		_ringbuf_pop
  1849 ;; This function is called by:
  1850 ;;		_isr
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _interrupt_TXIF
  1856  0283                     _interrupt_TXIF:	
  1857                           
  1858                           ;My_header\My_header.h: 249: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _interrupt_TXIF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1862  0283  0021               	movlb	1	; select bank1
  1863  0284  1E11               	btfss	17,4	;volatile
  1864  0285  0008               	return
  1865  0286  0020               	movlb	0	; select bank0
  1866  0287  1E11               	btfss	17,4	;volatile
  1867  0288  0008               	return
  1868                           
  1869                           ;My_header\My_header.h: 250: PIR1bits.TXIF = 0;
  1870  0289  1211               	bcf	17,4	;volatile
  1871                           
  1872                           ;My_header\My_header.h: 251: if (ringbuf_num(&tx_buf) > 0) {
  1873  028A  3029               	movlw	(low (_tx_buf| 0))& (0+255)
  1874  028B  3181  2124  3182   	fcall	_ringbuf_num
  1875  028E  0870               	movf	?_ringbuf_num,w
  1876  028F  0471               	iorwf	?_ringbuf_num+1,w
  1877  0290  1903               	btfsc	3,2
  1878  0291  2A98               	goto	i1l160
  1879                           
  1880                           ;My_header\My_header.h: 252: TXREG = ringbuf_pop(&tx_buf);
  1881  0292  3029               	movlw	(low (_tx_buf| 0))& (0+255)
  1882  0293  3181  2176         	fcall	_ringbuf_pop
  1883  0295  0023               	movlb	3	; select bank3
  1884  0296  009A               	movwf	26	;volatile
  1885                           
  1886                           ;My_header\My_header.h: 253: } else {
  1887  0297  0008               	return
  1888  0298                     i1l160:	
  1889                           
  1890                           ;My_header\My_header.h: 254: PIE1bits.TXIE = 0;
  1891  0298  0021               	movlb	1	; select bank1
  1892  0299  1211               	bcf	17,4	;volatile
  1893  029A  0008               	return
  1894  029B                     __end_of_interrupt_TXIF:	
  1895                           
  1896                           	psect	text14
  1897  0176                     __ptext14:	
  1898 ;; *************** function _ringbuf_pop *****************
  1899 ;; Defined at:
  1900 ;;		line 64 in file "../My_header\My_ringbuf.h"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  rb              1    wreg     PTR struct ringbuf
  1903 ;;		 -> tx_buf(7), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  rb              1    1[BANK0 ] PTR struct ringbuf
  1906 ;;		 -> tx_buf(7), 
  1907 ;;  ret             1    0[BANK0 ] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      unsigned char 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1917 ;;      Params:         0       0       0       0       0       0
  1918 ;;      Locals:         0       2       0       0       0       0
  1919 ;;      Temps:          6       0       0       0       0       0
  1920 ;;      Totals:         6       2       0       0       0       0
  1921 ;;Total ram usage:        8 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    1
  1924 ;; This function calls:
  1925 ;;		_ringbuf_num
  1926 ;; This function is called by:
  1927 ;;		_interrupt_TXIF
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _ringbuf_pop
  1933  0176                     _ringbuf_pop:	
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1937                           ;ringbuf_pop@rb stored from wreg
  1938  0176  0020               	movlb	0	; select bank0
  1939  0177  00B1               	movwf	ringbuf_pop@rb
  1940                           
  1941                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  1942  0178  0831               	movf	ringbuf_pop@rb,w
  1943  0179  3181  2124  3181   	fcall	_ringbuf_num
  1944  017C  0870               	movf	?_ringbuf_num,w
  1945  017D  0471               	iorwf	?_ringbuf_num+1,w
  1946  017E  1903               	btfsc	3,2
  1947  017F  29C2               	goto	i1l1327
  1948                           
  1949                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  1950  0180  0020               	movlb	0	; select bank0
  1951  0181  0831               	movf	ringbuf_pop@rb,w
  1952  0182  0086               	movwf	6
  1953  0183  0187               	clrf	7
  1954  0184  0831               	movf	ringbuf_pop@rb,w
  1955  0185  3E05               	addlw	5
  1956  0186  0084               	movwf	4
  1957  0187  0185               	clrf	5
  1958  0188  0800               	movf	0,w
  1959  0189  0701               	addwf	1,w
  1960  018A  00F7               	movwf	??_ringbuf_pop
  1961  018B  0877               	movf	??_ringbuf_pop,w
  1962  018C  0086               	movwf	6
  1963  018D  0187               	clrf	7
  1964  018E  0801               	movf	1,w
  1965  018F  00F8               	movwf	??_ringbuf_pop+1
  1966  0190  0878               	movf	??_ringbuf_pop+1,w
  1967  0191  00B0               	movwf	ringbuf_pop@ret
  1968                           
  1969                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  1970  0192  0A31               	incf	ringbuf_pop@rb,w
  1971  0193  0086               	movwf	6
  1972  0194  0187               	clrf	7
  1973  0195  3F40               	moviw [0]fsr1
  1974  0196  00F7               	movwf	??_ringbuf_pop
  1975  0197  3F41               	moviw [1]fsr1
  1976  0198  00F8               	movwf	??_ringbuf_pop+1
  1977  0199  0831               	movf	ringbuf_pop@rb,w
  1978  019A  3E05               	addlw	5
  1979  019B  0086               	movwf	6
  1980  019C  0187               	clrf	7
  1981  019D  3F40               	moviw [0]fsr1
  1982  019E  00F9               	movwf	??_ringbuf_pop+2
  1983  019F  3F41               	moviw [1]fsr1
  1984  01A0  00FA               	movwf	??_ringbuf_pop+3
  1985  01A1  0879               	movf	??_ringbuf_pop+2,w
  1986  01A2  3E01               	addlw	1
  1987  01A3  00FB               	movwf	??_ringbuf_pop+4
  1988  01A4  3000               	movlw	0
  1989  01A5  3D7A               	addwfc	??_ringbuf_pop+3,w
  1990  01A6  00FC               	movwf	??_ringbuf_pop+5
  1991  01A7  0878               	movf	??_ringbuf_pop+1,w
  1992  01A8  027C               	subwf	??_ringbuf_pop+5,w
  1993  01A9  1D03               	skipz
  1994  01AA  29AD               	goto	u52_25
  1995  01AB  0877               	movf	??_ringbuf_pop,w
  1996  01AC  027B               	subwf	??_ringbuf_pop+4,w
  1997  01AD                     u52_25:	
  1998  01AD  1803               	skipnc
  1999  01AE  29B9               	goto	i1l1319
  2000                           
  2001                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2002  01AF  0831               	movf	ringbuf_pop@rb,w
  2003  01B0  3E05               	addlw	5
  2004  01B1  0086               	movwf	6
  2005  01B2  0187               	clrf	7
  2006  01B3  3001               	movlw	1
  2007  01B4  0781               	addwf	1,f
  2008  01B5  3141               	addfsr 1,1
  2009  01B6  1803               	skipnc
  2010  01B7  0A81               	incf	1,f
  2011                           
  2012                           ;My_header\My_ringbuf.h: 69: } else {
  2013  01B8  29C0               	goto	i1l1321
  2014  01B9                     i1l1319:	
  2015                           
  2016                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2017  01B9  0831               	movf	ringbuf_pop@rb,w
  2018  01BA  3E05               	addlw	5
  2019  01BB  0086               	movwf	6
  2020  01BC  0187               	clrf	7
  2021  01BD  3000               	movlw	0
  2022  01BE  3FC0               	movwi [0]fsr1
  2023  01BF  3FC1               	movwi [1]fsr1
  2024  01C0                     i1l1321:	
  2025                           
  2026                           ;My_header\My_ringbuf.h: 71: }
  2027                           ;My_header\My_ringbuf.h: 72: return ret;
  2028  01C0  0830               	movf	ringbuf_pop@ret,w
  2029                           
  2030                           ;My_header\My_ringbuf.h: 73: } else {
  2031  01C1  0008               	return
  2032  01C2                     i1l1327:	
  2033                           
  2034                           ;My_header\My_ringbuf.h: 74: return 0;
  2035  01C2  3000               	movlw	0
  2036  01C3  0008               	return
  2037  01C4                     __end_of_ringbuf_pop:	
  2038                           
  2039                           	psect	text15
  2040  0124                     __ptext15:	
  2041 ;; *************** function _ringbuf_num *****************
  2042 ;; Defined at:
  2043 ;;		line 31 in file "../My_header\My_ringbuf.h"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  rb              1    wreg     PTR struct ringbuf
  2046 ;;		 -> tx_buf(7), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  rb              1    6[COMMON] PTR struct ringbuf
  2049 ;;		 -> tx_buf(7), 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2    0[COMMON] unsigned int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2059 ;;      Params:         2       0       0       0       0       0
  2060 ;;      Locals:         1       0       0       0       0       0
  2061 ;;      Temps:          4       0       0       0       0       0
  2062 ;;      Totals:         7       0       0       0       0       0
  2063 ;;Total ram usage:        7 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_ringbuf_put
  2069 ;;		_ringbuf_pop
  2070 ;;		_interrupt_TXIF
  2071 ;;		_ringbuf_backspace
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _ringbuf_num
  2077  0124                     _ringbuf_num:	
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  2081                           ;ringbuf_num@rb stored from wreg
  2082  0124  00F6               	movwf	ringbuf_num@rb
  2083                           
  2084                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  2085  0125  0876               	movf	ringbuf_num@rb,w
  2086  0126  3E05               	addlw	5
  2087  0127  0086               	movwf	6
  2088  0128  0187               	clrf	7
  2089  0129  3F40               	moviw [0]fsr1
  2090  012A  00F2               	movwf	??_ringbuf_num
  2091  012B  3F41               	moviw [1]fsr1
  2092  012C  00F3               	movwf	??_ringbuf_num+1
  2093  012D  0876               	movf	ringbuf_num@rb,w
  2094  012E  3E03               	addlw	3
  2095  012F  0086               	movwf	6
  2096  0130  0187               	clrf	7
  2097  0131  3F40               	moviw [0]fsr1
  2098  0132  00F4               	movwf	??_ringbuf_num+2
  2099  0133  3F41               	moviw [1]fsr1
  2100  0134  00F5               	movwf	??_ringbuf_num+3
  2101  0135  0873               	movf	??_ringbuf_num+1,w
  2102  0136  0275               	subwf	??_ringbuf_num+3,w
  2103  0137  1D03               	skipz
  2104  0138  293B               	goto	u48_25
  2105  0139  0872               	movf	??_ringbuf_num,w
  2106  013A  0274               	subwf	??_ringbuf_num+2,w
  2107  013B                     u48_25:	
  2108  013B  1C03               	skipc
  2109  013C  2955               	goto	i1l1297
  2110                           
  2111                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  2112  013D  0876               	movf	ringbuf_num@rb,w
  2113  013E  3E03               	addlw	3
  2114  013F  0086               	movwf	6
  2115  0140  0187               	clrf	7
  2116  0141  0876               	movf	ringbuf_num@rb,w
  2117  0142  3E05               	addlw	5
  2118  0143  0084               	movwf	4
  2119  0144  0185               	clrf	5
  2120  0145  3F00               	moviw [0]fsr0
  2121  0146  00F2               	movwf	??_ringbuf_num
  2122  0147  3F01               	moviw [1]fsr0
  2123  0148  00F3               	movwf	??_ringbuf_num+1
  2124  0149  09F2               	comf	??_ringbuf_num,f
  2125  014A  09F3               	comf	??_ringbuf_num+1,f
  2126  014B  0AF2               	incf	??_ringbuf_num,f
  2127  014C  1903               	skipnz
  2128  014D  0AF3               	incf	??_ringbuf_num+1,f
  2129  014E  3F40               	moviw [0]fsr1
  2130  014F  0772               	addwf	??_ringbuf_num,w
  2131  0150  00F0               	movwf	?_ringbuf_num
  2132  0151  3F41               	moviw [1]fsr1
  2133  0152  3D73               	addwfc	??_ringbuf_num+1,w
  2134  0153  00F1               	movwf	?_ringbuf_num+1
  2135                           
  2136                           ;My_header\My_ringbuf.h: 34: } else {
  2137  0154  0008               	return
  2138  0155                     i1l1297:	
  2139                           
  2140                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  2141  0155  0876               	movf	ringbuf_num@rb,w
  2142  0156  3E03               	addlw	3
  2143  0157  0086               	movwf	6
  2144  0158  0187               	clrf	7
  2145  0159  0876               	movf	ringbuf_num@rb,w
  2146  015A  3E05               	addlw	5
  2147  015B  0084               	movwf	4
  2148  015C  0185               	clrf	5
  2149  015D  3F00               	moviw [0]fsr0
  2150  015E  00F2               	movwf	??_ringbuf_num
  2151  015F  3F01               	moviw [1]fsr0
  2152  0160  00F3               	movwf	??_ringbuf_num+1
  2153  0161  09F2               	comf	??_ringbuf_num,f
  2154  0162  09F3               	comf	??_ringbuf_num+1,f
  2155  0163  0AF2               	incf	??_ringbuf_num,f
  2156  0164  1903               	skipnz
  2157  0165  0AF3               	incf	??_ringbuf_num+1,f
  2158  0166  0A76               	incf	ringbuf_num@rb,w
  2159  0167  0084               	movwf	4
  2160  0168  0185               	clrf	5
  2161  0169  3F00               	moviw [0]fsr0
  2162  016A  0772               	addwf	??_ringbuf_num,w
  2163  016B  00F4               	movwf	??_ringbuf_num+2
  2164  016C  3F01               	moviw [1]fsr0
  2165  016D  3D73               	addwfc	??_ringbuf_num+1,w
  2166  016E  00F5               	movwf	??_ringbuf_num+3
  2167  016F  3F40               	moviw [0]fsr1
  2168  0170  0774               	addwf	??_ringbuf_num+2,w
  2169  0171  00F0               	movwf	?_ringbuf_num
  2170  0172  3F41               	moviw [1]fsr1
  2171  0173  3D75               	addwfc	??_ringbuf_num+3,w
  2172  0174  00F1               	movwf	?_ringbuf_num+1
  2173  0175  0008               	return
  2174  0176                     __end_of_ringbuf_num:	
  2175  007E                     btemp	set	126	;btemp
  2176  007E                     int$flags	set	126
  2177  007E                     wtemp	set	126
  2178  007E                     wtemp0	set	126
  2179  0080                     wtemp1	set	128
  2180  0082                     wtemp2	set	130
  2181  0084                     wtemp3	set	132
  2182  0086                     wtemp4	set	134
  2183  0088                     wtemp5	set	136
  2184  007F                     wtemp6	set	127
  2185  007E                     ttemp	set	126
  2186  007E                     ttemp0	set	126
  2187  0081                     ttemp1	set	129
  2188  0084                     ttemp2	set	132
  2189  0087                     ttemp3	set	135
  2190  007F                     ttemp4	set	127
  2191  007E                     ltemp	set	126
  2192  007E                     ltemp0	set	126
  2193  0082                     ltemp1	set	130
  2194  0086                     ltemp2	set	134
  2195  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      31
    BANK1            80     44      51
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ringbuf_put_str@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_put_num@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    rx_buf.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_put@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _interrupt_TXIF->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num

Critical Paths under _main in BANK0

    _main->_ringbuf_init

Critical Paths under _isr in BANK0

    _isr->_tx_send
    _tx_send->_ringbuf_put
    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0     884
                                             11 BANK0      2     2      0
                                              0 BANK1     44    44      0
                                _ADC
                           _ADC_init
                           _PWM_init
                            _PWM_set
                          _UART_init
                              _drive
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          2     2      0      31
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      62
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     2      3     373
                                              6 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _drive                                                1     1      0      31
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_set                                              1     1      0      62
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             1     1      0      62
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                              6 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0    2115
                                              3 BANK0      3     3      0
                     _interrupt_TXIF
                            _tx_send
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              2     2      0    1099
                                              1 BANK0      2     2      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ringbuf_put                                          8     7      1    1068
                                              7 COMMON     7     6      1
                                              0 BANK0      1     1      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _interrupt_TXIF                                       0     0      0     982
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (4) _ringbuf_pop                                          8     8      0     633
                                              7 COMMON     6     6      0
                                              0 BANK0      2     2      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          7     5      2     349
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _ADC_init
   _PWM_init
   _PWM_set
   _UART_init
   _drive
   _ringbuf_init
   _timer0_init
   _timer1_init

 _isr (ROOT)
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      60       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      1F       6       38.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2C      33       8       63.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      60      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:57:49 2015

             __CFG_CP$OFF 0000                        l89 0257                        _d1 0024  
                      _ms 0020    __end_of_interrupt_TXIF 029B                       l101 0243  
                     l224 01C7                       l226 01CD                       l227 01D3  
                     l235 00AB                       l228 01D9                       l229 01EE  
                     _ADC 0230                       _PR2 001B              __CFG_CPD$OFF 0000  
                     u707 00C8                       u685 009D                       _isr 0004  
            __CFG_BORV$LO 0000                       wreg 0009                      ?_ADC 0036  
            __CFG_LVP$OFF 0000                      l1441 01DF                      l1337 0265  
                    l1561 00BC                      l1537 006B                      l1565 00C2  
                    l1567 00C3                      ?_isr 0070                      _RCIF 008D  
                    _SPEN 0CEF              __CFG_WRT$OFF 0000                      _main 003F  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    indf0 0000                      indf1 0001                      fsr1l 0006  
                    btemp 007E                      ltemp 007E           __end_of_PWM_set 02BE  
                    start 0022                      ttemp 007E          __end_of_ADC_init 0283  
                    wtemp 007E             __CFG_IESO$OFF 0000                     ??_ADC 0038  
                   ADC@ch 0039             ADC_init@p_ref 0036                     ??_isr 0033  
           __CFG_PLLEN$ON 0000           ?_interrupt_TXIF 0070                     ?_main 0070  
                   _ADRES 009B                     _BRG16 0CFB             __CFG_WDTE$OFF 0000  
                   _LATA2 0862                     _LATA3 0863                     _LATB4 086C  
                   _LATA6 0866                     _LATB5 086D                     _LATA7 0867  
                   i1l214 001D                     i1l160 0298                     _RCREG 0199  
                   _RCSTA 019D                     _TMR1H 0017                     _TMR1L 0016  
                   u50_25 0110                     u52_25 01AD                     u48_25 013B  
                   _TRISA 008C                     _TRISB 008D                     u49_25 00E1  
                   _TXREG 019A                     _TXSTA 019E            __CFG_FCMEN$OFF 0000  
      __size_of_UART_init 000E                     _drive 01C4            __CFG_BOREN$OFF 0000  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080          __end_of_PWM_init 0211                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __end_of_tx_send 02D8            __CFG_MCLRE$OFF 0000           __initialization 0024  
            __end_of_main 00CE       ringbuf_init@bufsize 0037                    ??_main 003B  
                  ?_drive 0070                    _CCPR1L 0291                    _CCPR2L 0298  
                  _ANSELA 018C                    _ANSELB 018D                 ??_PWM_set 0036  
                  i1l1321 01C0                    i1l1309 011C                    i1l1319 01B9  
                  i1l1327 01C2                    i1l1297 0155                    _FVRCON 0117  
                  _OSCCON 0099                    _TMR0IF 005A                    _TMR1IF 0088  
                  _SPBRGH 019C                    _SPBRGL 019B             main@last_scan 003D  
          __CFG_PWRTE$OFF 0000              ?_ringbuf_pop 0070              ?_ringbuf_num 0070  
            ?_ringbuf_put 0077         __end_of_UART_init 02CC              ?_timer0_init 0070  
            ?_timer1_init 0070                    _rx_buf 00CC                    _tx_buf 0029  
               ?_ADC_init 0070                 ??_tx_send 0031   __end_of__initialization 003B  
          __pcstackCOMMON 0070              __pidataBANK0 02DE             __end_of_drive 01EF  
               ?_PWM_init 0070            _OPTION_REGbits 0095                ??_ADC_init 0036  
                 ??_drive 0036                __pbssBANK0 0020                __pbssBANK1 00CC  
              __pmaintext 003F          ??_interrupt_TXIF 007D                __pintentry 0004  
              ??_PWM_init 0036      timer1_init@prescaler 0037                   _PWM_set 02AE  
            PWM_set@value 0036             ?_ringbuf_init 0036      __size_of_ringbuf_pop 004E  
    __size_of_ringbuf_num 0052      __size_of_ringbuf_put 0056           __CFG_STVREN$OFF 0000  
    __size_of_timer0_init 001B      __size_of_timer1_init 0013                   __ptext1 029B  
                 __ptext2 024F                   __ptext3 0211                   __ptext4 01C4  
                 __ptext5 02BE                   __ptext6 02AE                   __ptext7 01EF  
                 __ptext8 026A                   __ptext9 0230              __size_of_ADC 001F  
               _T1CONbits 0018                 _T2CONbits 001C              __size_of_isr 001E  
                 main@buf 00A0                   clrloop0 02D9                   main@sub 00CA  
                 _tx_send 02CC      end_of_initialization 003B            ??_ringbuf_init 0039  
               _UART_init 02BE          __CFG_FOSC$INTOSC 0000         __size_of_ADC_init 0019  
             _CCP1CONbits 0293               _CCP2CONbits 029A            ringbuf_init@rb 003A  
          ringbuf_pop@ret 0030                ?_UART_init 0070       start_initialization 0024  
             __end_of_ADC 024F         __size_of_PWM_init 0022               __end_of_isr 0022  
             _CCPTMRSbits 029E               __pdataBANK0 003D                 ___latbits 0001  
           __pcstackBANK0 0030             __pcstackBANK1 00A0      __end_of_ringbuf_init 0230  
        tx_send@asciicode 0032                  ?_PWM_set 0070           millis_timer@cnt 0027  
             ??_UART_init 0036                  _ADC_init 026A            __size_of_drive 002B  
                ?_tx_send 0070  ringbuf_init@internal_buf 0036                 clear_ram0 02D8  
                _PIE1bits 0091                  _PIR1bits 0011             ??_ringbuf_pop 0077  
           ??_ringbuf_num 0072             ??_ringbuf_put 0078             ??_timer0_init 0036  
           ??_timer1_init 0036                _ADCON0bits 009D                _ADCON1bits 009E  
                _PWM_init 01EF   __size_of_interrupt_TXIF 0018             ringbuf_pop@rb 0031  
           ringbuf_num@rb 0076             ringbuf_put@rb 0030          __size_of_PWM_set 0010  
              _CCPR1Lbits 0291                _CCPR2Lbits 0298       __end_of_ringbuf_pop 01C4  
     __end_of_ringbuf_num 0176       __end_of_ringbuf_put 0124       __end_of_timer0_init 026A  
   __size_of_ringbuf_init 001F       __end_of_timer1_init 02AE      timer0_init@prescaler 0037  
                __ptext11 02CC                  __ptext12 00CE                  __ptext13 0283  
                __ptext14 0176                  __ptext15 0124          __size_of_tx_send 000C  
           __size_of_main 008F                  int$flags 007E              _ringbuf_init 0211  
                main@scan 00C8                  drive@dir 0036                _INTCONbits 000B  
    ringbuf_put@asciicode 0077                  isr@ascii 0035                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000               _ringbuf_pop 0176               _ringbuf_num 0124  
             _ringbuf_put 00CE               _timer0_init 024F               _timer1_init 029B  
          _interrupt_TXIF 0283  
