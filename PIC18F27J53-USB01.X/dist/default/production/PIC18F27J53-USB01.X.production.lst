

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 09 22:43:17 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111                           	dabs	1,0xD00,48,_BDT
   112                           	dabs	1,0xD38,8,_CtrlTrfData
   113                           	dabs	1,0xD30,8,_SetupPkt
   114  0000                     
   115                           	psect	idataBANK0
   116  01379E                     __pidataBANK0:
   117                           	opt stack 0
   118                           
   119                           ;initializer for ST7032_cursor@F8640
   120  01379E  00                 	db	0
   121  01379F  40                 	db	64
   122                           
   123                           ;initializer for epoch_to_caltime@month_cache
   124  0137A0  01                 	db	1
   125                           
   126                           	psect	idataBANK1
   127  001004                     __pidataBANK1:
   128                           	opt stack 0
   129                           
   130                           ;initializer for I2C_LCD_SetCursor@F8685
   131  001004  00                 	db	0
   132  001005  40                 	db	64
   133                           
   134                           	psect	mediumconst
   135  00FE6C                     __pmediumconst:
   136                           	opt stack 0
   137  00FE6C  00                 	db	0
   138  00FE6D                     _dpowers:
   139                           	opt stack 0
   140  00FE6D  0001               	dw	1
   141  00FE6F  000A               	dw	10
   142  00FE71  0064               	dw	100
   143  00FE73  03E8               	dw	1000
   144  00FE75  2710               	dw	10000
   145  00FE77                     __end_of_dpowers:
   146                           	opt stack 0
   147  00FE77                     _USB_SD_Ptr:
   148                           	opt stack 0
   149  00FE77  58                 	db	low _sd000
   150  00FE78  FF                 	db	high _sd000
   151  00FE79  C2                 	db	low _sd001
   152  00FE7A  FE                 	db	high _sd001
   153  00FE7B  F6                 	db	low _sd002
   154  00FE7C  FE                 	db	high _sd002
   155  00FE7D                     __end_of_USB_SD_Ptr:
   156                           	opt stack 0
   157  00FE7D                     _USB_CD_Ptr:
   158                           	opt stack 0
   159  00FE7D  7F                 	db	low _configDescriptor1
   160  00FE7E  FE                 	db	high _configDescriptor1
   161  00FE7F                     __end_of_USB_CD_Ptr:
   162                           	opt stack 0
   163  00FE7F                     _configDescriptor1:
   164                           	opt stack 0
   165  00FE7F  09                 	db	9
   166  00FE80  02                 	db	2
   167  00FE81  43                 	db	67
   168  00FE82  00                 	db	0
   169  00FE83  02                 	db	2
   170  00FE84  01                 	db	1
   171  00FE85  00                 	db	0
   172  00FE86  C0                 	db	192
   173  00FE87  32                 	db	50
   174  00FE88  09                 	db	9
   175  00FE89  04                 	db	4
   176  00FE8A  00                 	db	0
   177  00FE8B  00                 	db	0
   178  00FE8C  01                 	db	1
   179  00FE8D  02                 	db	2
   180  00FE8E  02                 	db	2
   181  00FE8F  01                 	db	1
   182  00FE90  00                 	db	0
   183  00FE91  05                 	db	5
   184  00FE92  24                 	db	36
   185  00FE93  00                 	db	0
   186  00FE94  10                 	db	16
   187  00FE95  01                 	db	1
   188  00FE96  04                 	db	4
   189  00FE97  24                 	db	36
   190  00FE98  02                 	db	2
   191  00FE99  02                 	db	2
   192  00FE9A  05                 	db	5
   193  00FE9B  24                 	db	36
   194  00FE9C  06                 	db	6
   195  00FE9D  00                 	db	0
   196  00FE9E  01                 	db	1
   197  00FE9F  05                 	db	5
   198  00FEA0  24                 	db	36
   199  00FEA1  01                 	db	1
   200  00FEA2  00                 	db	0
   201  00FEA3  01                 	db	1
   202  00FEA4  07                 	db	7
   203  00FEA5  05                 	db	5
   204  00FEA6  81                 	db	129
   205  00FEA7  03                 	db	3
   206  00FEA8  08                 	db	8
   207  00FEA9  00                 	db	0
   208  00FEAA  02                 	db	2
   209  00FEAB  09                 	db	9
   210  00FEAC  04                 	db	4
   211  00FEAD  01                 	db	1
   212  00FEAE  00                 	db	0
   213  00FEAF  02                 	db	2
   214  00FEB0  0A                 	db	10
   215  00FEB1  00                 	db	0
   216  00FEB2  00                 	db	0
   217  00FEB3  00                 	db	0
   218  00FEB4  07                 	db	7
   219  00FEB5  05                 	db	5
   220  00FEB6  02                 	db	2
   221  00FEB7  02                 	db	2
   222  00FEB8  40                 	db	64
   223  00FEB9  00                 	db	0
   224  00FEBA  00                 	db	0
   225  00FEBB  07                 	db	7
   226  00FEBC  05                 	db	5
   227  00FEBD  82                 	db	130
   228  00FEBE  02                 	db	2
   229  00FEBF  40                 	db	64
   230  00FEC0  00                 	db	0
   231  00FEC1  00                 	db	0
   232  00FEC2                     __end_of_configDescriptor1:
   233                           	opt stack 0
   234  00FEC2                     _sd001:
   235                           	opt stack 0
   236  00FEC2  34                 	db	52
   237  00FEC3  03                 	db	3
   238  00FEC4  004D               	dw	77
   239  00FEC6  0069               	dw	105
   240  00FEC8  0063               	dw	99
   241  00FECA  0072               	dw	114
   242  00FECC  006F               	dw	111
   243  00FECE  0063               	dw	99
   244  00FED0  0068               	dw	104
   245  00FED2  0069               	dw	105
   246  00FED4  0070               	dw	112
   247  00FED6  0020               	dw	32
   248  00FED8  0054               	dw	84
   249  00FEDA  0065               	dw	101
   250  00FEDC  0063               	dw	99
   251  00FEDE  0068               	dw	104
   252  00FEE0  006E               	dw	110
   253  00FEE2  006F               	dw	111
   254  00FEE4  006C               	dw	108
   255  00FEE6  006F               	dw	111
   256  00FEE8  0067               	dw	103
   257  00FEEA  0079               	dw	121
   258  00FEEC  0020               	dw	32
   259  00FEEE  0049               	dw	73
   260  00FEF0  006E               	dw	110
   261  00FEF2  0063               	dw	99
   262  00FEF4  002E               	dw	46
   263  00FEF6                     __end_of_sd001:
   264                           	opt stack 0
   265  00FEF6                     _sd002:
   266                           	opt stack 0
   267  00FEF6  34                 	db	52
   268  00FEF7  03                 	db	3
   269  00FEF8  0043               	dw	67
   270  00FEFA  0044               	dw	68
   271  00FEFC  0043               	dw	67
   272  00FEFE  0020               	dw	32
   273  00FF00  0052               	dw	82
   274  00FF02  0053               	dw	83
   275  00FF04  002D               	dw	45
   276  00FF06  0032               	dw	50
   277  00FF08  0033               	dw	51
   278  00FF0A  0032               	dw	50
   279  00FF0C  0020               	dw	32
   280  00FF0E  0045               	dw	69
   281  00FF10  006D               	dw	109
   282  00FF12  0075               	dw	117
   283  00FF14  006C               	dw	108
   284  00FF16  0061               	dw	97
   285  00FF18  0074               	dw	116
   286  00FF1A  0069               	dw	105
   287  00FF1C  006F               	dw	111
   288  00FF1E  006E               	dw	110
   289  00FF20  0020               	dw	32
   290  00FF22  0044               	dw	68
   291  00FF24  0065               	dw	101
   292  00FF26  006D               	dw	109
   293  00FF28  006F               	dw	111
   294  00FF2A                     __end_of_sd002:
   295                           	opt stack 0
   296  00FF2A                     _weekday_3char:
   297                           	opt stack 0
   298  00FF2A  53                 	db	83
   299  00FF2B  55                 	db	85
   300  00FF2C  4E                 	db	78
   301  00FF2D  00                 	db	0
   302  00FF2E  4D                 	db	77
   303  00FF2F  4F                 	db	79
   304  00FF30  4E                 	db	78
   305  00FF31  00                 	db	0
   306  00FF32  54                 	db	84
   307  00FF33  55                 	db	85
   308  00FF34  45                 	db	69
   309  00FF35  00                 	db	0
   310  00FF36  57                 	db	87
   311  00FF37  45                 	db	69
   312  00FF38  44                 	db	68
   313  00FF39  00                 	db	0
   314  00FF3A  54                 	db	84
   315  00FF3B  48                 	db	72
   316  00FF3C  55                 	db	85
   317  00FF3D  00                 	db	0
   318  00FF3E  46                 	db	70
   319  00FF3F  52                 	db	82
   320  00FF40  49                 	db	73
   321  00FF41  00                 	db	0
   322  00FF42  53                 	db	83
   323  00FF43  41                 	db	65
   324  00FF44  54                 	db	84
   325  00FF45  00                 	db	0
   326  00FF46                     __end_of_weekday_3char:
   327                           	opt stack 0
   328  00FF46                     _device_dsc:
   329                           	opt stack 0
   330  00FF46  12                 	db	18
   331  00FF47  01                 	db	1
   332  00FF48  0200               	dw	512
   333  00FF4A  02                 	db	2
   334  00FF4B  00                 	db	0
   335  00FF4C  00                 	db	0
   336  00FF4D  08                 	db	8
   337  00FF4E  04D8               	dw	1240
   338  00FF50  000A               	dw	10
   339  00FF52  0100               	dw	256
   340  00FF54  01                 	db	1
   341  00FF55  02                 	db	2
   342  00FF56  00                 	db	0
   343  00FF57  01                 	db	1
   344  00FF58                     __end_of_device_dsc:
   345                           	opt stack 0
   346  00FF58                     _sd000:
   347                           	opt stack 0
   348  00FF58  04                 	db	4
   349  00FF59  03                 	db	3
   350  00FF5A  0409               	dw	1033
   351  00FF5C                     __end_of_sd000:
   352                           	opt stack 0
   353  0000                     _ANCON0	set	3912
   354  0000                     _ANCON1	set	3913
   355  0000                     _PADCFG1bits	set	3900
   356  0000                     _RTCCAL	set	3902
   357  0000                     _RTCCFGbits	set	3903
   358  0000                     _RTCVALH	set	3899
   359  0000                     _RTCVALL	set	3898
   360  0000                     _T5CONbits	set	3874
   361  0000                     _UADDR	set	3896
   362  0000                     _UCFG	set	3897
   363  0000                     _UEIE	set	3895
   364  0000                     _UEP0bits	set	3878
   365  0000                     _UIE	set	3894
   366  0000                     _UIEbits	set	3894
   367  0000                     _UEP0	set	3878
   368  0000                     _UEP1	set	3879
   369  0000                     _ADRES	set	4035
   370  0000                     _ADCON0bits	set	4034
   371  0000                     _ADCON1bits	set	4033
   372  0000                     _BAUDCON1bits	set	3966
   373  0000                     _CTMUCONH	set	4019
   374  0000                     _CTMUCONHbits	set	4019
   375  0000                     _CTMUCONL	set	4018
   376  0000                     _CTMUCONLbits	set	4018
   377  0000                     _CTMUICON	set	4017
   378  0000                     _EECON2	set	4007
   379  0000                     _INTCON2bits	set	4081
   380  0000                     _INTCONbits	set	4082
   381  0000                     _IPR1bits	set	3999
   382  0000                     _IPR2bits	set	4002
   383  0000                     _IPR5bits	set	3993
   384  0000                     _LATAbits	set	3977
   385  0000                     _LATBbits	set	3978
   386  0000                     _OSCCONbits	set	4051
   387  0000                     _OSCTUNEbits	set	3995
   388  0000                     _PIE1bits	set	3997
   389  0000                     _PIE2bits	set	4000
   390  0000                     _PIE5bits	set	3985
   391  0000                     _PIR1bits	set	3998
   392  0000                     _PIR2bits	set	4001
   393  0000                     _PIR5bits	set	3992
   394  0000                     _RCREG1	set	4015
   395  0000                     _RCSTA1bits	set	4012
   396  0000                     _SPBRG1	set	4016
   397  0000                     _SPBRGH1	set	3967
   398  0000                     _SSP1ADD	set	4040
   399  0000                     _SSP1BUF	set	4041
   400  0000                     _SSP1CON1	set	4038
   401  0000                     _SSP1CON1bits	set	4038
   402  0000                     _SSP1CON2	set	4037
   403  0000                     _SSP1CON2bits	set	4037
   404  0000                     _SSP1STAT	set	4039
   405  0000                     _SSP1STATbits	set	4039
   406  0000                     _SSPBUF	set	4041
   407  0000                     _T0CONbits	set	4053
   408  0000                     _T1CONbits	set	4045
   409  0000                     _T3CONbits	set	3961
   410  0000                     _TMR1H	set	4047
   411  0000                     _TRISA	set	3986
   412  0000                     _TRISB	set	3987
   413  0000                     _TRISC	set	3988
   414  0000                     _TXREG1	set	4014
   415  0000                     _TXSTA1bits	set	4013
   416  0000                     _UCON	set	3941
   417  0000                     _UCONbits	set	3941
   418  0000                     _UEIR	set	3939
   419  0000                     _UIR	set	3938
   420  0000                     _UIRbits	set	3938
   421  0000                     _USTAT	set	3940
   422  0000                     _BCL1IF	set	32011
   423  0000                     _LATB2	set	31826
   424  0000                     _SSP1IF	set	31987
   425  00FF5C  09                 	db	9
   426  00FF5D  32                 	db	50	;'2'
   427  00FF5E  30                 	db	48	;'0'
   428  00FF5F  25                 	db	37
   429  00FF60  30                 	db	48	;'0'
   430  00FF61  32                 	db	50	;'2'
   431  00FF62  64                 	db	100	;'d'
   432  00FF63  2F                 	db	47
   433  00FF64  25                 	db	37
   434  00FF65  30                 	db	48	;'0'
   435  00FF66  32                 	db	50	;'2'
   436  00FF67  64                 	db	100	;'d'
   437  00FF68  2F                 	db	47
   438  00FF69  25                 	db	37
   439  00FF6A  30                 	db	48	;'0'
   440  00FF6B  32                 	db	50	;'2'
   441  00FF6C  64                 	db	100	;'d'
   442  00FF6D  28                 	db	40
   443  00FF6E  25                 	db	37
   444  00FF6F  73                 	db	115	;'s'
   445  00FF70  29                 	db	41
   446  00FF71  25                 	db	37
   447  00FF72  30                 	db	48	;'0'
   448  00FF73  32                 	db	50	;'2'
   449  00FF74  64                 	db	100	;'d'
   450  00FF75  3A                 	db	58	;':'
   451  00FF76  25                 	db	37
   452  00FF77  30                 	db	48	;'0'
   453  00FF78  32                 	db	50	;'2'
   454  00FF79  64                 	db	100	;'d'
   455  00FF7A  2D                 	db	45
   456  00FF7B  25                 	db	37
   457  00FF7C  30                 	db	48	;'0'
   458  00FF7D  32                 	db	50	;'2'
   459  00FF7E  64                 	db	100	;'d'
   460  00FF7F  0A                 	db	10
   461  00FF80  00                 	db	0
   462  00FF81  61                 	db	97	;'a'
   463  00FF82  64                 	db	100	;'d'
   464  00FF83  6A                 	db	106	;'j'
   465  00FF84  75                 	db	117	;'u'
   466  00FF85  73                 	db	115	;'s'
   467  00FF86  74                 	db	116	;'t'
   468  00FF87  5F                 	db	95	;'_'
   469  00FF88  74                 	db	116	;'t'
   470  00FF89  69                 	db	105	;'i'
   471  00FF8A  6D                 	db	109	;'m'
   472  00FF8B  65                 	db	101	;'e'
   473  00FF8C  00                 	db	0
   474  00FF8D  70                 	db	112	;'p'
   475  00FF8E  72                 	db	114	;'r'
   476  00FF8F  69                 	db	105	;'i'
   477  00FF90  6E                 	db	110	;'n'
   478  00FF91  74                 	db	116	;'t'
   479  00FF92  5F                 	db	95	;'_'
   480  00FF93  74                 	db	116	;'t'
   481  00FF94  69                 	db	105	;'i'
   482  00FF95  6D                 	db	109	;'m'
   483  00FF96  65                 	db	101	;'e'
   484  00FF97  00                 	db	0
   485  00FF98                     STR_41:
   486  00FF98  31                 	db	49	;'1'
   487  00FF99  38                 	db	56	;'8'
   488  00FF9A  46                 	db	70	;'F'
   489  00FF9B  32                 	db	50	;'2'
   490  00FF9C  37                 	db	55	;'7'
   491  00FF9D  4A                 	db	74	;'J'
   492  00FF9E  35                 	db	53	;'5'
   493  00FF9F  33                 	db	51	;'3'
   494  00FFA0  00                 	db	0
   495  00FFA1                     STR_42:
   496  00FFA1  55                 	db	85	;'U'
   497  00FFA2  53                 	db	83	;'S'
   498  00FFA3  42                 	db	66	;'B'
   499  00FFA4  20                 	db	32
   500  00FFA5  55                 	db	85	;'U'
   501  00FFA6  41                 	db	65	;'A'
   502  00FFA7  52                 	db	82	;'R'
   503  00FFA8  54                 	db	84	;'T'
   504  00FFA9  00                 	db	0
   505  00FFAA                     STR_15:
   506  00FFAA  20                 	db	32
   507  00FFAB  20                 	db	32
   508  00FFAC  20                 	db	32
   509  00FFAD  20                 	db	32
   510  00FFAE  20                 	db	32
   511  00FFAF  20                 	db	32
   512  00FFB0  20                 	db	32
   513  00FFB1  20                 	db	32
   514  00FFB2  00                 	db	0
   515  00FFB3  09                 	db	9
   516  00FFB4  65                 	db	101	;'e'
   517  00FFB5  72                 	db	114	;'r'
   518  00FFB6  72                 	db	114	;'r'
   519  00FFB7  6F                 	db	111	;'o'
   520  00FFB8  72                 	db	114	;'r'
   521  00FFB9  0A                 	db	10
   522  00FFBA  00                 	db	0
   523  00FFBB                     STR_43:
   524  00FFBB  28                 	db	40
   525  00FFBC  6E                 	db	110	;'n'
   526  00FFBD  75                 	db	117	;'u'
   527  00FFBE  6C                 	db	108	;'l'
   528  00FFBF  6C                 	db	108	;'l'
   529  00FFC0  29                 	db	41
   530  00FFC1  00                 	db	0
   531  00FFC2  73                 	db	115	;'s'
   532  00FFC3  65                 	db	101	;'e'
   533  00FFC4  63                 	db	99	;'c'
   534  00FFC5  6F                 	db	111	;'o'
   535  00FFC6  6E                 	db	110	;'n'
   536  00FFC7  64                 	db	100	;'d'
   537  00FFC8  00                 	db	0
   538  00FFC9  6D                 	db	109	;'m'
   539  00FFCA  69                 	db	105	;'i'
   540  00FFCB  6E                 	db	110	;'n'
   541  00FFCC  75                 	db	117	;'u'
   542  00FFCD  74                 	db	116	;'t'
   543  00FFCE  65                 	db	101	;'e'
   544  00FFCF  00                 	db	0
   545  00FFD0                     STR_32:
   546  00FFD0  6D                 	db	109	;'m'
   547  00FFD1  6F                 	db	111	;'o'
   548  00FFD2  6E                 	db	110	;'n'
   549  00FFD3  74                 	db	116	;'t'
   550  00FFD4  68                 	db	104	;'h'
   551  00FFD5  00                 	db	0
   552  00FFD6  79                 	db	121	;'y'
   553  00FFD7  65                 	db	101	;'e'
   554  00FFD8  61                 	db	97	;'a'
   555  00FFD9  72                 	db	114	;'r'
   556  00FFDA  00                 	db	0
   557  00FFDB  68                 	db	104	;'h'
   558  00FFDC  6F                 	db	111	;'o'
   559  00FFDD  75                 	db	117	;'u'
   560  00FFDE  72                 	db	114	;'r'
   561  00FFDF  00                 	db	0
   562  00FFE0                     STR_1:
   563  00FFE0  25                 	db	37
   564  00FFE1  30                 	db	48	;'0'
   565  00FFE2  32                 	db	50	;'2'
   566  00FFE3  64                 	db	100	;'d'
   567  00FFE4  00                 	db	0
   568  00FFE5                     STR_19:
   569  00FFE5  08                 	db	8
   570  00FFE6  20                 	db	32
   571  00FFE7  08                 	db	8
   572  00FFE8  00                 	db	0
   573  00FFE9                     STR_34:
   574  00FFE9  64                 	db	100	;'d'
   575  00FFEA  61                 	db	97	;'a'
   576  00FFEB  79                 	db	121	;'y'
   577  00FFEC  00                 	db	0
   578  00FFED                     STR_27:
   579  00FFED  61                 	db	97	;'a'
   580  00FFEE  74                 	db	116	;'t'
   581  00FFEF  00                 	db	0
   582  00FFF0  4D                 	db	77	;'M'
   583  00FFF1  00                 	db	0
   584  00FFF2  6D                 	db	109	;'m'
   585  00FFF3  00                 	db	0
   586  00FFF4  73                 	db	115	;'s'
   587  00FFF5  00                 	db	0
   588  00FFF6  28                 	db	40
   589  00FFF7  00                 	db	0
   590  00FFF8                     STR_9:
   591  00FFF8  2D                 	db	45
   592  00FFF9  00                 	db	0
   593  00FFFA                     STR_4:
   594  00FFFA  2F                 	db	47
   595  00FFFB  00                 	db	0
   596  00FFFC                     STR_7:
   597  00FFFC  3A                 	db	58	;':'
   598  00FFFD  00                 	db	0
   599  0000                     
   600                           ; #config settings
   601  00FFFE  00                 	db	0	; dummy byte at the end
   602  0000                     
   603                           	psect	cinit
   604  012AF6                     __pcinit:
   605                           	opt stack 0
   606  012AF6                     start_initialization:
   607                           	opt stack 0
   608  012AF6                     __initialization:
   609                           	opt stack 0
   610                           
   611                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   612  012AF6  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   613  012AFA  EE17 F0D0          	lfsr	1,2000
   614  012AFE                     clear_0:
   615  012AFE  6AEE               	clrf	postinc0,c
   616  012B00  50E5               	movf	postdec1,w,c
   617  012B02  50E1               	movf	fsr1l,w,c
   618  012B04  E1FC               	bnz	clear_0
   619  012B06  50E2               	movf	fsr1h,w,c
   620  012B08  E1FA               	bnz	clear_0
   621                           
   622                           ; Clear objects allocated to BANK4 (200 bytes)
   623  012B0A  EE04  F000         	lfsr	0,__pbssBANK4
   624  012B0E  0EC8               	movlw	200
   625  012B10                     clear_1:
   626  012B10  6AEE               	clrf	postinc0,c
   627  012B12  06E8               	decf	wreg,f,c
   628  012B14  E1FD               	bnz	clear_1
   629                           
   630                           ; Clear objects allocated to BANK3 (100 bytes)
   631  012B16  EE03  F000         	lfsr	0,__pbssBANK3
   632  012B1A  0E64               	movlw	100
   633  012B1C                     clear_2:
   634  012B1C  6AEE               	clrf	postinc0,c
   635  012B1E  06E8               	decf	wreg,f,c
   636  012B20  E1FD               	bnz	clear_2
   637                           
   638                           ; Clear objects allocated to BANK2 (164 bytes)
   639  012B22  EE02  F000         	lfsr	0,__pbssBANK2
   640  012B26  0EA4               	movlw	164
   641  012B28                     clear_3:
   642  012B28  6AEE               	clrf	postinc0,c
   643  012B2A  06E8               	decf	wreg,f,c
   644  012B2C  E1FD               	bnz	clear_3
   645                           
   646                           ; Clear objects allocated to BANK1 (231 bytes)
   647  012B2E  EE01  F000         	lfsr	0,__pbssBANK1
   648  012B32  0EE7               	movlw	231
   649  012B34                     clear_4:
   650  012B34  6AEE               	clrf	postinc0,c
   651  012B36  06E8               	decf	wreg,f,c
   652  012B38  E1FD               	bnz	clear_4
   653                           
   654                           ; Clear objects allocated to BANK0 (85 bytes)
   655  012B3A  EE00  F060         	lfsr	0,__pbssBANK0
   656  012B3E  0E55               	movlw	85
   657  012B40                     clear_5:
   658  012B40  6AEE               	clrf	postinc0,c
   659  012B42  06E8               	decf	wreg,f,c
   660  012B44  E1FD               	bnz	clear_5
   661                           
   662                           ; Clear objects allocated to COMRAM (31 bytes)
   663  012B46  EE00  F021         	lfsr	0,__pbssCOMRAM
   664  012B4A  0E1F               	movlw	31
   665  012B4C                     clear_6:
   666  012B4C  6AEE               	clrf	postinc0,c
   667  012B4E  06E8               	decf	wreg,f,c
   668  012B50  E1FD               	bnz	clear_6
   669                           
   670                           ; Initialize objects allocated to BANK1 (2 bytes)
   671                           ; load TBLPTR registers with __pidataBANK1
   672  012B52  0E04               	movlw	low __pidataBANK1
   673  012B54  6EF6               	movwf	tblptrl,c
   674  012B56  0E10               	movlw	high __pidataBANK1
   675  012B58  6EF7               	movwf	tblptrh,c
   676  012B5A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   677  012B5C  6EF8               	movwf	tblptru,c
   678  012B5E  0009               	tblrd		*+	;fetch initializer
   679  012B60  CFF5 F1E7          	movff	tablat,__pdataBANK1
   680  012B64  0009               	tblrd		*+	;fetch initializer
   681  012B66  CFF5 F1E8          	movff	tablat,__pdataBANK1+1
   682                           
   683                           ; Initialize objects allocated to BANK0 (3 bytes)
   684                           ; load TBLPTR registers with __pidataBANK0
   685  012B6A  0E9E               	movlw	low __pidataBANK0
   686  012B6C  6EF6               	movwf	tblptrl,c
   687  012B6E  0E37               	movlw	high __pidataBANK0
   688  012B70  6EF7               	movwf	tblptrh,c
   689  012B72  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   690  012B74  6EF8               	movwf	tblptru,c
   691  012B76  0009               	tblrd		*+	;fetch initializer
   692  012B78  CFF5 F0F2          	movff	tablat,__pdataBANK0
   693  012B7C  0009               	tblrd		*+	;fetch initializer
   694  012B7E  CFF5 F0F3          	movff	tablat,__pdataBANK0+1
   695  012B82  0009               	tblrd		*+	;fetch initializer
   696  012B84  CFF5 F0F4          	movff	tablat,__pdataBANK0+2
   697  012B88                     end_of_initialization:
   698                           	opt stack 0
   699  012B88                     __end_of__initialization:
   700                           	opt stack 0
   701  012B88  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   702  012B8A  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   703  012B8C  0100               	movlb	0
   704  012B8E  EFE0  F086         	goto	_main	;jump to C main() function
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           postdec1	equ	0xFE5
   712                           fsr1h	equ	0xFE2
   713                           fsr1l	equ	0xFE1
   714                           
   715                           	psect	bssCOMRAM
   716  000021                     __pbssCOMRAM:
   717                           	opt stack 0
   718  000021                     _inPipes:
   719                           	opt stack 0
   720  000021                     	ds	6
   721  000027                     _pBDTEntryIn:
   722                           	opt stack 0
   723  000027                     	ds	6
   724  00002D                     _CDCDataOutHandle:
   725                           	opt stack 0
   726  00002D                     	ds	2
   727  00002F                     _pBDTEntryEP0OutCurrent:
   728                           	opt stack 0
   729  00002F                     	ds	2
   730  000031                     _pBDTEntryEP0OutNext:
   731                           	opt stack 0
   732  000031                     	ds	2
   733  000033                     _USBDeferStatusStagePacket:
   734                           	opt stack 0
   735  000033                     	ds	1
   736  000034                     _USBDeviceState:
   737                           	opt stack 0
   738  000034                     	ds	1
   739  000035                     _USBStatusStageEnabledFlag1:
   740                           	opt stack 0
   741  000035                     	ds	1
   742  000036                     _USBStatusStageEnabledFlag2:
   743                           	opt stack 0
   744  000036                     	ds	1
   745  000037                     _USBStatusStageTimeoutCounter:
   746                           	opt stack 0
   747  000037                     	ds	1
   748  000038                     _cdc_rx_len:
   749                           	opt stack 0
   750  000038                     	ds	1
   751  000039                     _cdc_trf_state:
   752                           	opt stack 0
   753  000039                     	ds	1
   754  00003A                     _cdc_tx_len:
   755                           	opt stack 0
   756  00003A                     	ds	1
   757  00003B                     _controlTransferState:
   758                           	opt stack 0
   759  00003B                     	ds	1
   760  00003C                     _endpoint_number:
   761                           	opt stack 0
   762  00003C                     	ds	1
   763  00003D                     _shortPacketStatus:
   764                           	opt stack 0
   765  00003D                     	ds	1
   766  00003E                     _USBActiveConfiguration:
   767                           	opt stack 0
   768  00003E                     	ds	1
   769  00003F                     _USTATcopy:
   770                           	opt stack 0
   771  00003F                     	ds	1
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           postdec1	equ	0xFE5
   779                           fsr1h	equ	0xFE2
   780                           fsr1l	equ	0xFE1
   781                           
   782                           	psect	bssBANK0
   783  000060                     __pbssBANK0:
   784                           	opt stack 0
   785  000060                     _outPipes:
   786                           	opt stack 0
   787  000060                     	ds	9
   788  000069                     _pBDTEntryOut:
   789                           	opt stack 0
   790  000069                     	ds	6
   791  00006F                     _ep_data_in:
   792                           	opt stack 0
   793  00006F                     	ds	3
   794  000072                     _ep_data_out:
   795                           	opt stack 0
   796  000072                     	ds	3
   797  000075                     _pCDCDst:
   798                           	opt stack 0
   799  000075                     	ds	3
   800  000078                     _pCDCSrc:
   801                           	opt stack 0
   802  000078                     	ds	3
   803  00007B                     ST7032_task@wait:
   804                           	opt stack 0
   805  00007B                     	ds	2
   806  00007D                     USBCBSendResume@delay_count:
   807                           	opt stack 0
   808  00007D                     	ds	2
   809  00007F                     _CDCDataInHandle:
   810                           	opt stack 0
   811  00007F                     	ds	2
   812  000081                     _pDst:
   813                           	opt stack 0
   814  000081                     	ds	2
   815  000083                     millis_timer@cnt:
   816                           	opt stack 0
   817  000083                     	ds	2
   818  000085                     RTCC_task@prev_halfsec:
   819                           	opt stack 0
   820  000085                     	ds	1
   821  000086                     ST7032_task@st7032_state:
   822                           	opt stack 0
   823  000086                     	ds	1
   824  000087                     _BothEP0OutUOWNsSet:
   825                           	opt stack 0
   826  000087                     	ds	1
   827  000088                     _I2C_busy:
   828                           	opt stack 0
   829  000088                     	ds	1
   830  000089                     _I2C_cfct_flag:
   831                           	opt stack 0
   832  000089                     	ds	1
   833  00008A                     _I2C_sent_flag:
   834                           	opt stack 0
   835  00008A                     	ds	1
   836  00008B                     _RemoteWakeup:
   837                           	opt stack 0
   838  00008B                     	ds	1
   839  00008C                     _USBBusIsSuspended:
   840                           	opt stack 0
   841  00008C                     	ds	1
   842  00008D                     _USBDeferINDataStagePackets:
   843                           	opt stack 0
   844  00008D                     	ds	1
   845  00008E                     _USBDeferOUTDataStagePackets:
   846                           	opt stack 0
   847  00008E                     	ds	1
   848  00008F                     _cdc_mem_type:
   849                           	opt stack 0
   850  00008F                     	ds	1
   851  000090                     _control_signal_bitmap:
   852                           	opt stack 0
   853  000090                     	ds	1
   854  000091                     _st7032_state:
   855                           	opt stack 0
   856  000091                     	ds	1
   857  000092                     _time_change_flag:
   858                           	opt stack 0
   859  000092                     	ds	1
   860  000093                     epoch_to_caltime@year_cache:
   861                           	opt stack 0
   862  000093                     	ds	1
   863  000094                     terminal_task@command_init:
   864                           	opt stack 0
   865  000094                     	ds	1
   866  000095                     _now:
   867                           	opt stack 0
   868  000095                     	ds	14
   869  0000A3                     _lcd_tx:
   870                           	opt stack 0
   871  0000A3                     	ds	8
   872  0000AB                     terminal_task@command:
   873                           	opt stack 0
   874  0000AB                     	ds	8
   875  0000B3                     _USBAlternateInterface:
   876                           	opt stack 0
   877  0000B3                     	ds	2
   878                           tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           tblptrl	equ	0xFF6
   881                           tablat	equ	0xFF5
   882                           postinc0	equ	0xFEE
   883                           wreg	equ	0xFE8
   884                           postdec1	equ	0xFE5
   885                           fsr1h	equ	0xFE2
   886                           fsr1l	equ	0xFE1
   887                           
   888                           	psect	dataBANK0
   889  0000F2                     __pdataBANK0:
   890                           	opt stack 0
   891  0000F2                     ST7032_cursor@F8640:
   892                           	opt stack 0
   893  0000F2                     	ds	2
   894  0000F4                     epoch_to_caltime@month_cache:
   895                           	opt stack 0
   896  0000F4                     	ds	1
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           postinc0	equ	0xFEE
   902                           wreg	equ	0xFE8
   903                           postdec1	equ	0xFE5
   904                           fsr1h	equ	0xFE2
   905                           fsr1l	equ	0xFE1
   906                           
   907                           	psect	bssBANK1
   908  000100                     __pbssBANK1:
   909                           	opt stack 0
   910  000100                     _cdc_notice:
   911                           	opt stack 0
   912  000100                     	ds	10
   913  00010A                     _BaudRateGen:
   914                           	opt stack 0
   915  00010A                     	ds	4
   916  00010E                     _ms:
   917                           	opt stack 0
   918  00010E                     	ds	4
   919  000112                     epoch_to_caltime@day_cache:
   920                           	opt stack 0
   921  000112                     	ds	2
   922  000114                     _cdc_data_rx:
   923                           	opt stack 0
   924  000114                     	ds	64
   925  000154                     terminal_task@op0:
   926                           	opt stack 0
   927  000154                     	ds	25
   928  00016D                     terminal_task@op1:
   929                           	opt stack 0
   930  00016D                     	ds	25
   931  000186                     terminal_task@op2:
   932                           	opt stack 0
   933  000186                     	ds	25
   934  00019F                     terminal_task@op3:
   935                           	opt stack 0
   936  00019F                     	ds	25
   937  0001B8                     _dummy_encapsulated_cmd_response:
   938                           	opt stack 0
   939  0001B8                     	ds	8
   940  0001C0                     _uart_rx:
   941                           	opt stack 0
   942  0001C0                     	ds	8
   943  0001C8                     _uart_tx:
   944                           	opt stack 0
   945  0001C8                     	ds	8
   946  0001D0                     _usb_rx:
   947                           	opt stack 0
   948  0001D0                     	ds	8
   949  0001D8                     _usb_tx:
   950                           	opt stack 0
   951  0001D8                     	ds	8
   952  0001E0                     _line_coding:
   953                           	opt stack 0
   954  0001E0                     	ds	7
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postdec1	equ	0xFE5
   962                           fsr1h	equ	0xFE2
   963                           fsr1l	equ	0xFE1
   964                           
   965                           	psect	dataBANK1
   966  0001E7                     __pdataBANK1:
   967                           	opt stack 0
   968  0001E7                     I2C_LCD_SetCursor@F8685:
   969                           	opt stack 0
   970  0001E7                     	ds	2
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1h	equ	0xFE2
   979                           fsr1l	equ	0xFE1
   980                           
   981                           	psect	bssBANK2
   982  000200                     __pbssBANK2:
   983                           	opt stack 0
   984  000200                     main_init@usbrx:
   985                           	opt stack 0
   986  000200                     	ds	100
   987  000264                     _cdc_data_tx:
   988                           	opt stack 0
   989  000264                     	ds	64
   990                           tblptru	equ	0xFF8
   991                           tblptrh	equ	0xFF7
   992                           tblptrl	equ	0xFF6
   993                           tablat	equ	0xFF5
   994                           postinc0	equ	0xFEE
   995                           wreg	equ	0xFE8
   996                           postdec1	equ	0xFE5
   997                           fsr1h	equ	0xFE2
   998                           fsr1l	equ	0xFE1
   999                           
  1000                           	psect	bssBANK3
  1001  000300                     __pbssBANK3:
  1002                           	opt stack 0
  1003  000300                     main_init@uartrx:
  1004                           	opt stack 0
  1005  000300                     	ds	100
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1h	equ	0xFE2
  1014                           fsr1l	equ	0xFE1
  1015                           
  1016                           	psect	bssBANK4
  1017  000400                     __pbssBANK4:
  1018                           	opt stack 0
  1019  000400                     ST7032_init@buf:
  1020                           	opt stack 0
  1021  000400                     	ds	200
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1h	equ	0xFE2
  1030                           fsr1l	equ	0xFE1
  1031                           
  1032                           	psect	bssBIGRAMl
  1033  0004C8                     __pbssBIGRAMl:
  1034                           	opt stack 0
  1035  0004C8                     main_init@uarttx:
  1036                           	opt stack 0
  1037  0004C8                     	ds	1000
  1038  0008B0                     main_init@usbtx:
  1039                           	opt stack 0
  1040  0008B0                     	ds	1000
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           fsr1h	equ	0xFE2
  1049                           fsr1l	equ	0xFE1
  1050                           
  1051                           	psect	cstackBANK2
  1052  0002A4                     __pcstackBANK2:
  1053                           	opt stack 0
  1054  0002A4                     main@s:
  1055                           	opt stack 0
  1056                           
  1057                           ; 40 bytes @ 0x0
  1058  0002A4                     	ds	40
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1h	equ	0xFE2
  1067                           fsr1l	equ	0xFE1
  1068                           
  1069                           	psect	cstackBANK0
  1070  0000B5                     __pcstackBANK0:
  1071                           	opt stack 0
  1072  0000B5                     ??_USBConfigureEndpoint:
  1073  0000B5                     ??_USBStdGetDscHandler:
  1074  0000B5                     ??_timer1_init:
  1075  0000B5                     ?_USBTransferOnePacket:
  1076                           	opt stack 0
  1077  0000B5                     ?_ringbuf_num:
  1078                           	opt stack 0
  1079  0000B5                     ?___wmul:
  1080                           	opt stack 0
  1081  0000B5                     ?___awdiv:
  1082                           	opt stack 0
  1083  0000B5                     ?___awmod:
  1084                           	opt stack 0
  1085  0000B5                     ?___lwdiv:
  1086                           	opt stack 0
  1087  0000B5                     ?___lldiv:
  1088                           	opt stack 0
  1089  0000B5                     USBTransferOnePacket@dir:
  1090                           	opt stack 0
  1091  0000B5                     USBCtrlTrfRxService@i:
  1092                           	opt stack 0
  1093  0000B5                     USBCtrlTrfInHandler@lastDTS:
  1094                           	opt stack 0
  1095  0000B5                     I2C_IdleCheck@mask:
  1096                           	opt stack 0
  1097  0000B5                     timer0_init@prescaler:
  1098                           	opt stack 0
  1099  0000B5                     timer3_init@prescaler:
  1100                           	opt stack 0
  1101  0000B5                     x_to_d@hex:
  1102                           	opt stack 0
  1103  0000B5                     _isdigit$5607:
  1104                           	opt stack 0
  1105  0000B5                     USBStdGetStatusHandler@p:
  1106                           	opt stack 0
  1107  0000B5                     putUSBUSART@data:
  1108                           	opt stack 0
  1109  0000B5                     ringbuf_init@rb:
  1110                           	opt stack 0
  1111  0000B5                     ringbuf_num@rb:
  1112                           	opt stack 0
  1113  0000B5                     ___wmul@multiplier:
  1114                           	opt stack 0
  1115  0000B5                     ___awdiv@dividend:
  1116                           	opt stack 0
  1117  0000B5                     ___awmod@dividend:
  1118                           	opt stack 0
  1119  0000B5                     ___lwdiv@dividend:
  1120                           	opt stack 0
  1121  0000B5                     memset@p1:
  1122                           	opt stack 0
  1123  0000B5                     strcat@to:
  1124                           	opt stack 0
  1125  0000B5                     strcpy@to:
  1126                           	opt stack 0
  1127  0000B5                     ___lldiv@dividend:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x0
  1131  0000B5                     	ds	1
  1132  0000B6                     USBCtrlTrfRxService@byteToRead:
  1133                           	opt stack 0
  1134  0000B6                     I2C_Start@rw:
  1135                           	opt stack 0
  1136  0000B6                     I2C_Send@data:
  1137                           	opt stack 0
  1138  0000B6                     timer1_init@prescaler:
  1139                           	opt stack 0
  1140  0000B6                     isdigit@c:
  1141                           	opt stack 0
  1142  0000B6                     USBTransferOnePacket@data:
  1143                           	opt stack 0
  1144  0000B6                     RTCC_to_caltime@tm:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x1
  1148  0000B6                     	ds	1
  1149  0000B7                     ??_ringbuf_num:
  1150  0000B7                     putUSBUSART@length:
  1151                           	opt stack 0
  1152  0000B7                     I2C_Start@adrs:
  1153                           	opt stack 0
  1154  0000B7                     ringbuf_init@internal_buf:
  1155                           	opt stack 0
  1156  0000B7                     ___wmul@multiplicand:
  1157                           	opt stack 0
  1158  0000B7                     ___awdiv@divisor:
  1159                           	opt stack 0
  1160  0000B7                     ___awmod@divisor:
  1161                           	opt stack 0
  1162  0000B7                     ___lwdiv@divisor:
  1163                           	opt stack 0
  1164  0000B7                     memset@c:
  1165                           	opt stack 0
  1166  0000B7                     strcat@from:
  1167                           	opt stack 0
  1168  0000B7                     strcpy@from:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x2
  1172  0000B7                     	ds	1
  1173  0000B8                     USBTransferOnePacket@len:
  1174                           	opt stack 0
  1175  0000B8                     RTCC_to_caltime@dumy:
  1176                           	opt stack 0
  1177  0000B8                     I2C_LCD_Command@c:
  1178                           	opt stack 0
  1179  0000B8                     I2C_LCD_Puts@s:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0x3
  1183  0000B8                     	ds	1
  1184  0000B9                     USBTransferOnePacket@ep:
  1185                           	opt stack 0
  1186  0000B9                     USBConfigureEndpoint@EPNum:
  1187                           	opt stack 0
  1188  0000B9                     I2C_LCD_Command@ans:
  1189                           	opt stack 0
  1190  0000B9                     ___awdiv@counter:
  1191                           	opt stack 0
  1192  0000B9                     ___awmod@counter:
  1193                           	opt stack 0
  1194  0000B9                     ___lwdiv@counter:
  1195                           	opt stack 0
  1196  0000B9                     ringbuf_init@bufsize:
  1197                           	opt stack 0
  1198  0000B9                     ___wmul@product:
  1199                           	opt stack 0
  1200  0000B9                     memset@n:
  1201                           	opt stack 0
  1202  0000B9                     strcat@cp:
  1203                           	opt stack 0
  1204  0000B9                     strcpy@cp:
  1205                           	opt stack 0
  1206  0000B9                     ___lldiv@divisor:
  1207                           	opt stack 0
  1208                           
  1209                           ; 4 bytes @ 0x4
  1210  0000B9                     	ds	1
  1211  0000BA                     ??_I2C_LCD_Clear:
  1212  0000BA                     ??_I2C_LCD_Puts:
  1213  0000BA                     I2C_LCD_SetCursor@row:
  1214                           	opt stack 0
  1215  0000BA                     ___awdiv@sign:
  1216                           	opt stack 0
  1217  0000BA                     ___awmod@sign:
  1218                           	opt stack 0
  1219  0000BA                     USBTransferOnePacket@handle:
  1220                           	opt stack 0
  1221  0000BA                     USBConfigureEndpoint@handle:
  1222                           	opt stack 0
  1223  0000BA                     ___lwdiv@quotient:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x5
  1227  0000BA                     	ds	1
  1228  0000BB                     ??_month_length:
  1229  0000BB                     ??_I2C_LCD_init:
  1230  0000BB                     I2C_LCD_SetCursor@row_offsets:
  1231                           	opt stack 0
  1232  0000BB                     I2C_LCD_Puts@ans:
  1233                           	opt stack 0
  1234  0000BB                     ___awdiv@quotient:
  1235                           	opt stack 0
  1236  0000BB                     memset@p:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x6
  1240  0000BB                     	ds	1
  1241  0000BC                     ?___lwmod:
  1242                           	opt stack 0
  1243  0000BC                     USBEnableEndpoint@options:
  1244                           	opt stack 0
  1245  0000BC                     I2C_LCD_init@i:
  1246                           	opt stack 0
  1247  0000BC                     getsUSBUSART@buffer:
  1248                           	opt stack 0
  1249  0000BC                     _CDCTxService$1762:
  1250                           	opt stack 0
  1251  0000BC                     ___lwmod@dividend:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x7
  1255  0000BC                     	ds	1
  1256  0000BD                     I2C_LCD_SetCursor@col:
  1257                           	opt stack 0
  1258  0000BD                     I2C_LCD_init@i_4268:
  1259                           	opt stack 0
  1260  0000BD                     USBEnableEndpoint@p:
  1261                           	opt stack 0
  1262  0000BD                     ringbuf_pop@rb:
  1263                           	opt stack 0
  1264  0000BD                     caltime_to_RTCC@tm:
  1265                           	opt stack 0
  1266  0000BD                     ___lldiv@quotient:
  1267                           	opt stack 0
  1268                           
  1269                           ; 4 bytes @ 0x8
  1270  0000BD                     	ds	1
  1271  0000BE                     getsUSBUSART@len:
  1272                           	opt stack 0
  1273  0000BE                     CDCTxService@i:
  1274                           	opt stack 0
  1275  0000BE                     ___lwmod@divisor:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x9
  1279  0000BE                     	ds	1
  1280  0000BF                     ??_ringbuf_pop:
  1281  0000BF                     USBEnableEndpoint@ep:
  1282                           	opt stack 0
  1283  0000BF                     CDCTxService@byte_to_send:
  1284                           	opt stack 0
  1285  0000BF                     month_length@year:
  1286                           	opt stack 0
  1287  0000BF                     _getsUSBUSART$1714:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0xA
  1291  0000BF                     	ds	1
  1292  0000C0                     ?_sprintf:
  1293                           	opt stack 0
  1294  0000C0                     usb_char_send@c:
  1295                           	opt stack 0
  1296  0000C0                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1297                           	opt stack 0
  1298  0000C0                     sprintf@sp:
  1299                           	opt stack 0
  1300                           
  1301                           ; 2 bytes @ 0xB
  1302  0000C0                     	ds	1
  1303  0000C1                     ___lldiv@counter:
  1304                           	opt stack 0
  1305  0000C1                     usb_char_get@c:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0xC
  1309  0000C1                     	ds	1
  1310  0000C2                     ?___lmul:
  1311                           	opt stack 0
  1312  0000C2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1313                           	opt stack 0
  1314  0000C2                     sprintf@f:
  1315                           	opt stack 0
  1316  0000C2                     ___lmul@multiplier:
  1317                           	opt stack 0
  1318                           
  1319                           ; 4 bytes @ 0xD
  1320  0000C2                     	ds	1
  1321  0000C3                     usb_char_get@ans:
  1322                           	opt stack 0
  1323  0000C3                     ringbuf_put@rb:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0xE
  1327  0000C3                     	ds	1
  1328  0000C4                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0xF
  1332  0000C4                     	ds	1
  1333  0000C5                     ringbuf_put@asciicode:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x10
  1337  0000C5                     	ds	1
  1338  0000C6                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1339  0000C6                     ??_ringbuf_put:
  1340  0000C6                     ___lmul@multiplicand:
  1341                           	opt stack 0
  1342                           
  1343                           ; 4 bytes @ 0x11
  1344  0000C6                     	ds	2
  1345  0000C8                     ??_USBStdFeatureReqHandler:
  1346  0000C8                     USBStdSetCfgHandler@i:
  1347                           	opt stack 0
  1348                           
  1349                           ; 1 bytes @ 0x13
  1350  0000C8                     	ds	1
  1351  0000C9                     USBStdFeatureReqHandler@pUEP:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0x14
  1355  0000C9                     	ds	1
  1356  0000CA                     ___lmul@product:
  1357                           	opt stack 0
  1358                           
  1359                           ; 4 bytes @ 0x15
  1360  0000CA                     	ds	1
  1361  0000CB                     USBStdFeatureReqHandler@current_ep_data:
  1362                           	opt stack 0
  1363                           
  1364                           ; 1 bytes @ 0x16
  1365  0000CB                     	ds	1
  1366  0000CC                     USBStdFeatureReqHandler@p:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x17
  1370  0000CC                     	ds	2
  1371  0000CE                     ??_USBCtrlEPService:
  1372  0000CE                     ?_get_quot_rem:
  1373                           	opt stack 0
  1374  0000CE                     get_quot_rem@quot:
  1375                           	opt stack 0
  1376  0000CE                     caltime_to_epoch@tm:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x19
  1380  0000CE                     	ds	2
  1381  0000D0                     ??_caltime_to_epoch:
  1382  0000D0                     USBCtrlEPService@setup_cnt:
  1383                           	opt stack 0
  1384  0000D0                     get_quot_rem@div:
  1385                           	opt stack 0
  1386                           
  1387                           ; 1 bytes @ 0x1B
  1388  0000D0                     	ds	1
  1389  0000D1                     USBDeviceTasks@i:
  1390                           	opt stack 0
  1391                           
  1392                           ; 1 bytes @ 0x1C
  1393  0000D1                     	ds	1
  1394  0000D2                     ??_sprintf:
  1395  0000D2                     USB_task@data:
  1396                           	opt stack 0
  1397  0000D2                     get_quot_rem@num:
  1398                           	opt stack 0
  1399                           
  1400                           ; 4 bytes @ 0x1D
  1401  0000D2                     	ds	2
  1402  0000D4                     caltime_to_epoch@year:
  1403                           	opt stack 0
  1404                           
  1405                           ; 1 bytes @ 0x1F
  1406  0000D4                     	ds	1
  1407  0000D5                     caltime_to_epoch@month_3453:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x20
  1411  0000D5                     	ds	1
  1412  0000D6                     sprintf@prec:
  1413                           	opt stack 0
  1414  0000D6                     epoch_to_caltime@tm:
  1415                           	opt stack 0
  1416  0000D6                     caltime_to_epoch@epoch:
  1417                           	opt stack 0
  1418                           
  1419                           ; 4 bytes @ 0x21
  1420  0000D6                     	ds	1
  1421  0000D7                     sprintf@ap:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x22
  1425  0000D7                     	ds	1
  1426  0000D8                     ??_epoch_to_caltime:
  1427                           
  1428                           ; 0 bytes @ 0x23
  1429  0000D8                     	ds	1
  1430  0000D9                     sprintf@cp:
  1431                           	opt stack 0
  1432                           
  1433                           ; 2 bytes @ 0x24
  1434  0000D9                     	ds	1
  1435  0000DA                     caltime_to_epoch@month:
  1436                           	opt stack 0
  1437  0000DA                     epoch_to_caltime@day_since_epoch:
  1438                           	opt stack 0
  1439                           
  1440                           ; 2 bytes @ 0x25
  1441  0000DA                     	ds	1
  1442  0000DB                     RTCC_from_RTCC@tm:
  1443                           	opt stack 0
  1444  0000DB                     sprintf@val:
  1445                           	opt stack 0
  1446                           
  1447                           ; 2 bytes @ 0x26
  1448  0000DB                     	ds	1
  1449  0000DC                     epoch_to_caltime@day:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0x27
  1453  0000DC                     	ds	1
  1454  0000DD                     sprintf@len:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0x28
  1458  0000DD                     	ds	1
  1459  0000DE                     epoch_to_caltime@year:
  1460                           	opt stack 0
  1461                           
  1462                           ; 1 bytes @ 0x29
  1463  0000DE                     	ds	1
  1464  0000DF                     epoch_to_caltime@month:
  1465                           	opt stack 0
  1466  0000DF                     sprintf@flag:
  1467                           	opt stack 0
  1468                           
  1469                           ; 1 bytes @ 0x2A
  1470  0000DF                     	ds	1
  1471  0000E0                     sprintf@c:
  1472                           	opt stack 0
  1473  0000E0                     epoch_to_caltime@num:
  1474                           	opt stack 0
  1475                           
  1476                           ; 4 bytes @ 0x2B
  1477  0000E0                     	ds	1
  1478  0000E1                     sprintf@width:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x2C
  1482  0000E1                     	ds	2
  1483  0000E3                     display_dec@str:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x2E
  1487  0000E3                     	ds	1
  1488  0000E4                     RTCC_from_epoch@tm:
  1489                           	opt stack 0
  1490                           
  1491                           ; 2 bytes @ 0x2F
  1492  0000E4                     	ds	1
  1493  0000E5                     display_dec@dec:
  1494                           	opt stack 0
  1495                           
  1496                           ; 1 bytes @ 0x30
  1497  0000E5                     	ds	1
  1498  0000E6                     display_dec@edit:
  1499                           	opt stack 0
  1500                           
  1501                           ; 1 bytes @ 0x31
  1502  0000E6                     	ds	1
  1503  0000E7                     display_dec@s:
  1504                           	opt stack 0
  1505                           
  1506                           ; 4 bytes @ 0x32
  1507  0000E7                     	ds	4
  1508  0000EB                     display_time_0802@tm:
  1509                           	opt stack 0
  1510                           
  1511                           ; 2 bytes @ 0x36
  1512  0000EB                     	ds	2
  1513  0000ED                     display_time_0802@line0:
  1514                           	opt stack 0
  1515                           
  1516                           ; 2 bytes @ 0x38
  1517  0000ED                     	ds	2
  1518  0000EF                     display_time_0802@line1:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x3A
  1522  0000EF                     	ds	2
  1523  0000F1                     ??_main:
  1524                           
  1525                           ; 0 bytes @ 0x3C
  1526  0000F1                     	ds	1
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1h	equ	0xFE2
  1535                           fsr1l	equ	0xFE1
  1536                           
  1537                           	psect	cstackCOMRAM
  1538  000001                     __pcstackCOMRAM:
  1539                           	opt stack 0
  1540  000001                     ?i2_ringbuf_num:
  1541                           	opt stack 0
  1542  000001                     i2ringbuf_num@rb:
  1543                           	opt stack 0
  1544                           
  1545                           ; 2 bytes @ 0x0
  1546  000001                     	ds	2
  1547  000003                     ??i2_ringbuf_num:
  1548                           
  1549                           ; 0 bytes @ 0x2
  1550  000003                     	ds	6
  1551  000009                     i2ringbuf_put@rb:
  1552                           	opt stack 0
  1553  000009                     i2ringbuf_pop@rb:
  1554                           	opt stack 0
  1555                           
  1556                           ; 2 bytes @ 0x8
  1557  000009                     	ds	2
  1558  00000B                     ??i2_ringbuf_pop:
  1559  00000B                     i2ringbuf_put@asciicode:
  1560                           	opt stack 0
  1561                           
  1562                           ; 1 bytes @ 0xA
  1563  00000B                     	ds	1
  1564  00000C                     ??i2_ringbuf_put:
  1565                           
  1566                           ; 0 bytes @ 0xB
  1567  00000C                     	ds	3
  1568  00000F                     i2ringbuf_pop@ret:
  1569                           	opt stack 0
  1570                           
  1571                           ; 1 bytes @ 0xE
  1572  00000F                     	ds	1
  1573  000010                     UART_ISR@ascii:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0xF
  1577  000010                     	ds	1
  1578  000011                     ??_ISR:
  1579                           
  1580                           ; 0 bytes @ 0x10
  1581  000011                     	ds	15
  1582  000020                     ??_isdigit:
  1583  000020                     ??_USBStdGetStatusHandler:
  1584  000020                     ??_getsUSBUSART:
  1585  000020                     ??_CDCTxService:
  1586  000020                     ??_I2C_IdleCheck:
  1587  000020                     ??_timer0_init:
  1588  000020                     ??_timer3_init:
  1589  000020                     ??_x_to_d:
  1590  000020                     USBDeviceInit@i:
  1591                           	opt stack 0
  1592  000020                     USBConfigureEndpoint@direction:
  1593                           	opt stack 0
  1594  000020                     USBCtrlTrfTxService@byteToSend:
  1595                           	opt stack 0
  1596  000020                     timer1_init@clock_select:
  1597                           	opt stack 0
  1598  000020                     ringbuf_pop@ret:
  1599                           	opt stack 0
  1600  000020                     d_to_x@dec:
  1601                           	opt stack 0
  1602  000020                     month_length@month:
  1603                           	opt stack 0
  1604  000020                     _is_usb_available$4927:
  1605                           	opt stack 0
  1606  000020                     ___lwmod@counter:
  1607                           	opt stack 0
  1608                           
  1609                           ; 1 bytes @ 0x1F
  1610  000020                     	ds	1
  1611  000021                     tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           postdec1	equ	0xFE5
  1618                           fsr1h	equ	0xFE2
  1619                           fsr1l	equ	0xFE1
  1620                           
  1621                           ; 0 bytes @ 0x20
  1622 ;;
  1623 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1624 ;;
  1625 ;; *************** function _main *****************
  1626 ;; Defined at:
  1627 ;;		line 90 in file "main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  s              40    0[BANK2 ] unsigned char [20][2]
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  2  1465[None  ] int 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Locals:         0       0       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Totals:         0       1       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;Total ram usage:       41 bytes
  1646 ;; Hardware stack levels required when called:   14
  1647 ;; This function calls:
  1648 ;;		_I2C_LCD_Clear
  1649 ;;		_I2C_LCD_Puts
  1650 ;;		_I2C_LCD_SetCursor
  1651 ;;		_RTCC_from_RTCC
  1652 ;;		_RTCC_from_epoch
  1653 ;;		_RTCC_task
  1654 ;;		_UART_task
  1655 ;;		_USB_task
  1656 ;;		_display_time_0802
  1657 ;;		_main_init
  1658 ;;		_ringbuf_num
  1659 ;;		_ringbuf_pop
  1660 ;;		_ringbuf_put
  1661 ;; This function is called by:
  1662 ;;		Startup code after reset
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text0
  1667  010DC0                     __ptext0:
  1668                           	opt stack 0
  1669  010DC0                     _main:
  1670                           	opt stack 17
  1671                           
  1672                           ;main.c: 91: main_init();
  1673                           
  1674                           ;incstack = 0
  1675  010DC0  EC69  F08D         	call	_main_init	;wreg free
  1676                           
  1677                           ;main.c: 93: RTCC_from_RTCC(&now);
  1678  010DC4  0E95               	movlw	low _now
  1679  010DC6  0100               	movlb	0	; () banked
  1680  010DC8  6FDB               	movwf	RTCC_from_RTCC@tm& (0+255),b
  1681  010DCA  0E00               	movlw	high _now
  1682  010DCC  0100               	movlb	0	; () banked
  1683  010DCE  6FDC               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  1684  010DD0  EC7D  F09B         	call	_RTCC_from_RTCC	;wreg free
  1685                           
  1686                           ;main.c: 94: if (now.DD == 0) {
  1687  010DD4  0100               	movlb	0	; () banked
  1688  010DD6  519D               	movf	(_now+8)& (0+255),w,b
  1689  010DD8  A4D8               	btfss	status,2,c
  1690  010DDA  D011               	goto	l10268
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;main.c: 95: now.epoch = 0;
  1694  010DDC  0E00               	movlw	0
  1695  010DDE  0100               	movlb	0	; () banked
  1696  010DE0  6F95               	movwf	_now& (0+255),b
  1697  010DE2  0E00               	movlw	0
  1698  010DE4  6F96               	movwf	(_now+1)& (0+255),b
  1699  010DE6  0E00               	movlw	0
  1700  010DE8  6F97               	movwf	(_now+2)& (0+255),b
  1701  010DEA  0E00               	movlw	0
  1702  010DEC  6F98               	movwf	(_now+3)& (0+255),b
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;main.c: 96: RTCC_from_epoch(&now);
  1706  010DEE  0E95               	movlw	low _now
  1707  010DF0  0100               	movlb	0	; () banked
  1708  010DF2  6FE4               	movwf	RTCC_from_epoch@tm& (0+255),b
  1709  010DF4  0E00               	movlw	high _now
  1710  010DF6  0100               	movlb	0	; () banked
  1711  010DF8  6FE5               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  1712  010DFA  EC63  F09B         	call	_RTCC_from_epoch	;wreg free
  1713  010DFE                     l10268:
  1714                           
  1715                           ;main.c: 97: }
  1716                           ;main.c: 99: I2C_LCD_Clear();
  1717  010DFE  EC70  F09B         	call	_I2C_LCD_Clear	;wreg free
  1718                           
  1719                           ;main.c: 100: I2C_LCD_SetCursor(0, 0);
  1720  010E02  0E00               	movlw	0
  1721  010E04  0100               	movlb	0	; () banked
  1722  010E06  6FBA               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1723  010E08  0E00               	movlw	0
  1724  010E0A  ECD5  F09A         	call	_I2C_LCD_SetCursor
  1725                           
  1726                           ;main.c: 101: I2C_LCD_Puts("18F27J53");
  1727  010E0E  0E98               	movlw	low STR_41
  1728  010E10  0100               	movlb	0	; () banked
  1729  010E12  6FB8               	movwf	I2C_LCD_Puts@s& (0+255),b
  1730  010E14  0EFF               	movlw	high STR_41
  1731  010E16  0100               	movlb	0	; () banked
  1732  010E18  6FB9               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1733  010E1A  ECA9  F096         	call	_I2C_LCD_Puts	;wreg free
  1734                           
  1735                           ;main.c: 102: I2C_LCD_SetCursor(0, 1);
  1736  010E1E  0E01               	movlw	1
  1737  010E20  0100               	movlb	0	; () banked
  1738  010E22  6FBA               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1739  010E24  0E00               	movlw	0
  1740  010E26  ECD5  F09A         	call	_I2C_LCD_SetCursor
  1741                           
  1742                           ;main.c: 103: I2C_LCD_Puts("USB UART");
  1743  010E2A  0EA1               	movlw	low STR_42
  1744  010E2C  0100               	movlb	0	; () banked
  1745  010E2E  6FB8               	movwf	I2C_LCD_Puts@s& (0+255),b
  1746  010E30  0EFF               	movlw	high STR_42
  1747  010E32  0100               	movlb	0	; () banked
  1748  010E34  6FB9               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1749  010E36  ECA9  F096         	call	_I2C_LCD_Puts	;wreg free
  1750                           
  1751                           ;main.c: 105: INTCONbits.GIE = 1;
  1752  010E3A  8EF2               	bsf	intcon,7,c	;volatile
  1753  010E3C                     l10280:
  1754                           
  1755                           ;main.c: 108: USB_task();
  1756  010E3C  ECA3  F097         	call	_USB_task	;wreg free
  1757                           
  1758                           ;main.c: 109: UART_task();
  1759  010E40  EC36  F09B         	call	_UART_task	;wreg free
  1760                           
  1761                           ;main.c: 110: RTCC_task();
  1762  010E44  EC90  F099         	call	_RTCC_task	;wreg free
  1763                           
  1764                           ;main.c: 112: if (ringbuf_num(&usb_rx)) {
  1765  010E48  0ED0               	movlw	low _usb_rx
  1766  010E4A  0100               	movlb	0	; () banked
  1767  010E4C  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  1768  010E4E  0E01               	movlw	high _usb_rx
  1769  010E50  0100               	movlb	0	; () banked
  1770  010E52  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1771  010E54  EC12  F08C         	call	_ringbuf_num	;wreg free
  1772  010E58  0100               	movlb	0	; () banked
  1773  010E5A  51B5               	movf	?_ringbuf_num& (0+255),w,b
  1774  010E5C  0100               	movlb	0	; () banked
  1775  010E5E  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1776  010E60  B4D8               	btfsc	status,2,c
  1777  010E62  D023               	goto	l10292
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;main.c: 113: ringbuf_put(&usb_tx, ringbuf_pop(&usb_rx));
  1781  010E64  0ED8               	movlw	low _usb_tx
  1782  010E66  0100               	movlb	0	; () banked
  1783  010E68  6FC3               	movwf	ringbuf_put@rb& (0+255),b
  1784  010E6A  0E01               	movlw	high _usb_tx
  1785  010E6C  0100               	movlb	0	; () banked
  1786  010E6E  6FC4               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1787  010E70  0ED0               	movlw	low _usb_rx
  1788  010E72  0100               	movlb	0	; () banked
  1789  010E74  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  1790  010E76  0E01               	movlw	high _usb_rx
  1791  010E78  0100               	movlb	0	; () banked
  1792  010E7A  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1793  010E7C  ECBD  F090         	call	_ringbuf_pop	;wreg free
  1794  010E80  0100               	movlb	0	; () banked
  1795  010E82  6FC5               	movwf	ringbuf_put@asciicode& (0+255),b
  1796  010E84  EC84  F08F         	call	_ringbuf_put	;wreg free
  1797                           
  1798                           ;main.c: 114: LATBbits.LATB7 = !LATBbits.LATB7;
  1799  010E88  BE8A               	btfsc	3978,7,c	;volatile
  1800  010E8A  D004               	goto	u10650
  1801  010E8C  0100               	movlb	0	; () banked
  1802  010E8E  6BF1               	clrf	??_main& (0+255),b
  1803  010E90  2BF1               	incf	??_main& (0+255),f,b
  1804  010E92  D002               	goto	u10668
  1805  010E94                     u10650:
  1806  010E94  0100               	movlb	0	; () banked
  1807  010E96  6BF1               	clrf	??_main& (0+255),b
  1808  010E98                     u10668:
  1809  010E98  0100               	movlb	0	; () banked
  1810  010E9A  33F1               	rrcf	??_main& (0+255),f,b
  1811  010E9C  33F1               	rrcf	??_main& (0+255),f,b
  1812  010E9E  508A               	movf	3978,w,c	;volatile
  1813  010EA0  0100               	movlb	0	; () banked
  1814  010EA2  19F1               	xorwf	??_main& (0+255),w,b
  1815  010EA4  0B7F               	andlw	-129
  1816  010EA6  19F1               	xorwf	??_main& (0+255),w,b
  1817  010EA8  6E8A               	movwf	3978,c	;volatile
  1818  010EAA                     l10292:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;main.c: 115: }
  1822                           ;main.c: 116: if (ringbuf_num(&uart_rx)) {
  1823  010EAA  0EC0               	movlw	low _uart_rx
  1824  010EAC  0100               	movlb	0	; () banked
  1825  010EAE  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  1826  010EB0  0E01               	movlw	high _uart_rx
  1827  010EB2  0100               	movlb	0	; () banked
  1828  010EB4  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1829  010EB6  EC12  F08C         	call	_ringbuf_num	;wreg free
  1830  010EBA  0100               	movlb	0	; () banked
  1831  010EBC  51B5               	movf	?_ringbuf_num& (0+255),w,b
  1832  010EBE  0100               	movlb	0	; () banked
  1833  010EC0  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1834  010EC2  B4D8               	btfsc	status,2,c
  1835  010EC4  D024               	goto	l10298
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main.c: 117: ringbuf_put(&uart_tx, ringbuf_pop(&uart_rx));
  1839  010EC6  0EC8               	movlw	low _uart_tx
  1840  010EC8  0100               	movlb	0	; () banked
  1841  010ECA  6FC3               	movwf	ringbuf_put@rb& (0+255),b
  1842  010ECC  0E01               	movlw	high _uart_tx
  1843  010ECE  0100               	movlb	0	; () banked
  1844  010ED0  6FC4               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1845  010ED2  0EC0               	movlw	low _uart_rx
  1846  010ED4  0100               	movlb	0	; () banked
  1847  010ED6  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  1848  010ED8  0E01               	movlw	high _uart_rx
  1849  010EDA  0100               	movlb	0	; () banked
  1850  010EDC  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1851  010EDE  ECBD  F090         	call	_ringbuf_pop	;wreg free
  1852  010EE2  0100               	movlb	0	; () banked
  1853  010EE4  6FC5               	movwf	ringbuf_put@asciicode& (0+255),b
  1854  010EE6  EC84  F08F         	call	_ringbuf_put	;wreg free
  1855                           
  1856                           ;main.c: 118: LATBbits.LATB6 = !LATBbits.LATB6;
  1857  010EEA  BC8A               	btfsc	3978,6,c	;volatile
  1858  010EEC  D004               	goto	u10680
  1859  010EEE  0100               	movlb	0	; () banked
  1860  010EF0  6BF1               	clrf	??_main& (0+255),b
  1861  010EF2  2BF1               	incf	??_main& (0+255),f,b
  1862  010EF4  D002               	goto	u10698
  1863  010EF6                     u10680:
  1864  010EF6  0100               	movlb	0	; () banked
  1865  010EF8  6BF1               	clrf	??_main& (0+255),b
  1866  010EFA                     u10698:
  1867  010EFA  0100               	movlb	0	; () banked
  1868  010EFC  3BF1               	swapf	??_main& (0+255),f,b
  1869  010EFE  47F1               	rlncf	??_main& (0+255),f,b
  1870  010F00  47F1               	rlncf	??_main& (0+255),f,b
  1871  010F02  508A               	movf	3978,w,c	;volatile
  1872  010F04  0100               	movlb	0	; () banked
  1873  010F06  19F1               	xorwf	??_main& (0+255),w,b
  1874  010F08  0BBF               	andlw	-65
  1875  010F0A  19F1               	xorwf	??_main& (0+255),w,b
  1876  010F0C  6E8A               	movwf	3978,c	;volatile
  1877  010F0E                     l10298:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 119: }
  1881                           ;main.c: 120: if (time_change_flag) {
  1882  010F0E  0100               	movlb	0	; () banked
  1883  010F10  5192               	movf	_time_change_flag& (0+255),w,b
  1884  010F12  B4D8               	btfsc	status,2,c
  1885  010F14  D793               	goto	l10280
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;main.c: 121: time_change_flag = 0;
  1889  010F16  0E00               	movlw	0
  1890  010F18  0100               	movlb	0	; () banked
  1891  010F1A  6F92               	movwf	_time_change_flag& (0+255),b
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 122: char s[2][20];
  1895                           ;main.c: 123: display_time_0802(&now, s[0], s[1]);
  1896  010F1C  0E95               	movlw	low _now
  1897  010F1E  0100               	movlb	0	; () banked
  1898  010F20  6FEB               	movwf	display_time_0802@tm& (0+255),b
  1899  010F22  0E00               	movlw	high _now
  1900  010F24  0100               	movlb	0	; () banked
  1901  010F26  6FEC               	movwf	(display_time_0802@tm+1)& (0+255),b
  1902  010F28  0EA4               	movlw	low main@s
  1903  010F2A  0100               	movlb	0	; () banked
  1904  010F2C  6FED               	movwf	display_time_0802@line0& (0+255),b
  1905  010F2E  0E02               	movlw	high main@s
  1906  010F30  0100               	movlb	0	; () banked
  1907  010F32  6FEE               	movwf	(display_time_0802@line0+1)& (0+255),b
  1908  010F34  0EB8               	movlw	low (main@s+20)
  1909  010F36  0100               	movlb	0	; () banked
  1910  010F38  6FEF               	movwf	display_time_0802@line1& (0+255),b
  1911  010F3A  0E02               	movlw	high (main@s+20)
  1912  010F3C  0100               	movlb	0	; () banked
  1913  010F3E  6FF0               	movwf	(display_time_0802@line1+1)& (0+255),b
  1914  010F40  ECDD  F084         	call	_display_time_0802	;wreg free
  1915                           
  1916                           ;main.c: 124: I2C_LCD_Clear();
  1917  010F44  EC70  F09B         	call	_I2C_LCD_Clear	;wreg free
  1918                           
  1919                           ;main.c: 125: I2C_LCD_SetCursor(0, 0);
  1920  010F48  0E00               	movlw	0
  1921  010F4A  0100               	movlb	0	; () banked
  1922  010F4C  6FBA               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1923  010F4E  0E00               	movlw	0
  1924  010F50  ECD5  F09A         	call	_I2C_LCD_SetCursor
  1925                           
  1926                           ;main.c: 126: I2C_LCD_Puts(s[0]);
  1927  010F54  0EA4               	movlw	low main@s
  1928  010F56  0100               	movlb	0	; () banked
  1929  010F58  6FB8               	movwf	I2C_LCD_Puts@s& (0+255),b
  1930  010F5A  0E02               	movlw	high main@s
  1931  010F5C  0100               	movlb	0	; () banked
  1932  010F5E  6FB9               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1933  010F60  ECA9  F096         	call	_I2C_LCD_Puts	;wreg free
  1934                           
  1935                           ;main.c: 127: I2C_LCD_SetCursor(0, 1);
  1936  010F64  0E01               	movlw	1
  1937  010F66  0100               	movlb	0	; () banked
  1938  010F68  6FBA               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1939  010F6A  0E00               	movlw	0
  1940  010F6C  ECD5  F09A         	call	_I2C_LCD_SetCursor
  1941                           
  1942                           ;main.c: 128: I2C_LCD_Puts(s[1]);
  1943  010F70  0EB8               	movlw	low (main@s+20)
  1944  010F72  0100               	movlb	0	; () banked
  1945  010F74  6FB8               	movwf	I2C_LCD_Puts@s& (0+255),b
  1946  010F76  0E02               	movlw	high (main@s+20)
  1947  010F78  0100               	movlb	0	; () banked
  1948  010F7A  6FB9               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1949  010F7C  ECA9  F096         	call	_I2C_LCD_Puts	;wreg free
  1950  010F80  D75D               	goto	l10280
  1951  010F82                     __end_of_main:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           status	equ	0xFD8
  1964                           
  1965 ;; *************** function _main_init *****************
  1966 ;; Defined at:
  1967 ;;		line 62 in file "main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    9
  1988 ;; This function calls:
  1989 ;;		_I2C_LCD_init
  1990 ;;		_OSC_init
  1991 ;;		_RTCC_init
  1992 ;;		_UART_init
  1993 ;;		_USB_init
  1994 ;;		_ringbuf_init
  1995 ;;		_timer0_init
  1996 ;;		_timer1_init
  1997 ;;		_timer3_init
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text1
  2004  011AD2                     __ptext1:
  2005                           	opt stack 0
  2006  011AD2                     _main_init:
  2007                           	opt stack 21
  2008                           
  2009                           ;main.c: 63: OSC_init();
  2010                           
  2011                           ;incstack = 0
  2012  011AD2  ECC3  F09B         	call	_OSC_init	;wreg free
  2013                           
  2014                           ;main.c: 64: TRISA = 0b00010000;
  2015  011AD6  0E10               	movlw	16
  2016  011AD8  6E92               	movwf	3986,c	;volatile
  2017                           
  2018                           ;main.c: 65: TRISB = 0b00111111;
  2019  011ADA  0E3F               	movlw	63
  2020  011ADC  6E93               	movwf	3987,c	;volatile
  2021                           
  2022                           ;main.c: 66: TRISC = 0b10111010;
  2023  011ADE  0EBA               	movlw	186
  2024  011AE0  6E94               	movwf	3988,c	;volatile
  2025                           
  2026                           ;main.c: 67: ANCON0 = 0b11111111;
  2027  011AE2  010F               	movlb	15	; () banked
  2028  011AE4  6948               	setf	72,b	;volatile
  2029                           
  2030                           ; BSR set to: 15
  2031                           ;main.c: 68: ANCON1 = 0b00011111;
  2032  011AE6  0E1F               	movlw	31
  2033  011AE8  010F               	movlb	15	; () banked
  2034  011AEA  6F49               	movwf	73,b	;volatile
  2035                           
  2036                           ; BSR set to: 15
  2037                           ;main.c: 69: INTCON2bits.RBPU = 0;
  2038  011AEC  9EF1               	bcf	intcon2,7,c	;volatile
  2039                           
  2040                           ; BSR set to: 15
  2041                           ;main.c: 71: timer0_init(6);
  2042  011AEE  0E06               	movlw	6
  2043  011AF0  EC1F  F09A         	call	_timer0_init
  2044                           
  2045                           ;main.c: 72: timer1_init(0, 2);
  2046  011AF4  0E02               	movlw	2
  2047  011AF6  6E20               	movwf	timer1_init@clock_select,c
  2048  011AF8  0E00               	movlw	0
  2049  011AFA  ECFB  F098         	call	_timer1_init
  2050                           
  2051                           ;main.c: 73: timer3_init(2);
  2052  011AFE  0E02               	movlw	2
  2053  011B00  ECEB  F09A         	call	_timer3_init
  2054                           
  2055                           ;main.c: 74: I2C_LCD_init();
  2056  011B04  EC61  F096         	call	_I2C_LCD_init	;wreg free
  2057                           
  2058                           ;main.c: 75: RTCC_init();
  2059  011B08  ECD9  F097         	call	_RTCC_init	;wreg free
  2060                           
  2061                           ;main.c: 77: USB_init();
  2062  011B0C  EC97  F09B         	call	_USB_init	;wreg free
  2063                           
  2064                           ;main.c: 78: static uint8_t usbtx[1000];
  2065                           ;main.c: 79: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  2066  011B10  0ED8               	movlw	low _usb_tx
  2067  011B12  0100               	movlb	0	; () banked
  2068  011B14  6FB5               	movwf	ringbuf_init@rb& (0+255),b
  2069  011B16  0E01               	movlw	high _usb_tx
  2070  011B18  0100               	movlb	0	; () banked
  2071  011B1A  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2072  011B1C  0EB0               	movlw	low main_init@usbtx
  2073  011B1E  0100               	movlb	0	; () banked
  2074  011B20  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
  2075  011B22  0E08               	movlw	high main_init@usbtx
  2076  011B24  0100               	movlb	0	; () banked
  2077  011B26  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2078  011B28  0E03               	movlw	3
  2079  011B2A  0100               	movlb	0	; () banked
  2080  011B2C  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2081  011B2E  0EE8               	movlw	232
  2082  011B30  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
  2083  011B32  ECD1  F098         	call	_ringbuf_init	;wreg free
  2084                           
  2085                           ;main.c: 80: static uint8_t usbrx[100];
  2086                           ;main.c: 81: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  2087  011B36  0ED0               	movlw	low _usb_rx
  2088  011B38  0100               	movlb	0	; () banked
  2089  011B3A  6FB5               	movwf	ringbuf_init@rb& (0+255),b
  2090  011B3C  0E01               	movlw	high _usb_rx
  2091  011B3E  0100               	movlb	0	; () banked
  2092  011B40  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2093  011B42  0E00               	movlw	low main_init@usbrx
  2094  011B44  0100               	movlb	0	; () banked
  2095  011B46  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
  2096  011B48  0E02               	movlw	high main_init@usbrx
  2097  011B4A  0100               	movlb	0	; () banked
  2098  011B4C  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2099  011B4E  0E00               	movlw	0
  2100  011B50  0100               	movlb	0	; () banked
  2101  011B52  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2102  011B54  0E64               	movlw	100
  2103  011B56  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
  2104  011B58  ECD1  F098         	call	_ringbuf_init	;wreg free
  2105                           
  2106                           ;main.c: 83: UART_init();
  2107  011B5C  EC25  F09B         	call	_UART_init	;wreg free
  2108                           
  2109                           ;main.c: 84: static uint8_t uarttx[1000];
  2110                           ;main.c: 85: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  2111  011B60  0EC8               	movlw	low _uart_tx
  2112  011B62  0100               	movlb	0	; () banked
  2113  011B64  6FB5               	movwf	ringbuf_init@rb& (0+255),b
  2114  011B66  0E01               	movlw	high _uart_tx
  2115  011B68  0100               	movlb	0	; () banked
  2116  011B6A  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2117  011B6C  0EC8               	movlw	low main_init@uarttx
  2118  011B6E  0100               	movlb	0	; () banked
  2119  011B70  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
  2120  011B72  0E04               	movlw	high main_init@uarttx
  2121  011B74  0100               	movlb	0	; () banked
  2122  011B76  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2123  011B78  0E03               	movlw	3
  2124  011B7A  0100               	movlb	0	; () banked
  2125  011B7C  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2126  011B7E  0EE8               	movlw	232
  2127  011B80  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
  2128  011B82  ECD1  F098         	call	_ringbuf_init	;wreg free
  2129                           
  2130                           ;main.c: 86: static uint8_t uartrx[100];
  2131                           ;main.c: 87: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  2132  011B86  0EC0               	movlw	low _uart_rx
  2133  011B88  0100               	movlb	0	; () banked
  2134  011B8A  6FB5               	movwf	ringbuf_init@rb& (0+255),b
  2135  011B8C  0E01               	movlw	high _uart_rx
  2136  011B8E  0100               	movlb	0	; () banked
  2137  011B90  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2138  011B92  0E00               	movlw	low main_init@uartrx
  2139  011B94  0100               	movlb	0	; () banked
  2140  011B96  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
  2141  011B98  0E03               	movlw	high main_init@uartrx
  2142  011B9A  0100               	movlb	0	; () banked
  2143  011B9C  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2144  011B9E  0E00               	movlw	0
  2145  011BA0  0100               	movlb	0	; () banked
  2146  011BA2  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2147  011BA4  0E64               	movlw	100
  2148  011BA6  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
  2149  011BA8  ECD1  F098         	call	_ringbuf_init	;wreg free
  2150  011BAC  0012               	return		;funcret
  2151  011BAE                     __end_of_main_init:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           intcon	equ	0xFF2
  2158                           intcon2	equ	0xFF1
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1h	equ	0xFE2
  2163                           fsr1l	equ	0xFE1
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _timer3_init *****************
  2167 ;; Defined at:
  2168 ;;		line 101 in file "../My_library/My_PIC.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  prescaler       1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  prescaler       1    0[BANK0 ] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;Total ram usage:        2 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    4
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_main_init
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text2
  2197  0135D6                     __ptext2:
  2198                           	opt stack 0
  2199  0135D6                     _timer3_init:
  2200                           	opt stack 25
  2201                           
  2202                           ;incstack = 0
  2203                           ;timer3_init@prescaler stored from wreg
  2204  0135D6  0100               	movlb	0	; () banked
  2205  0135D8  6FB5               	movwf	timer3_init@prescaler& (0+255),b
  2206                           
  2207                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  2208  0135DA  0E3F               	movlw	-193
  2209  0135DC  1679               	andwf	3961,f,c	;volatile
  2210                           
  2211                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  2212  0135DE  9679               	bcf	3961,3,c	;volatile
  2213                           
  2214                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  2215  0135E0  C0B5  F020         	movff	timer3_init@prescaler,??_timer3_init
  2216  0135E4  3A20               	swapf	??_timer3_init,f,c
  2217  0135E6  5079               	movf	3961,w,c	;volatile
  2218  0135E8  1820               	xorwf	??_timer3_init,w,c
  2219  0135EA  0BCF               	andlw	-49
  2220  0135EC  1820               	xorwf	??_timer3_init,w,c
  2221  0135EE  6E79               	movwf	3961,c	;volatile
  2222                           
  2223                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  2224  0135F0  9E79               	bcf	3961,7,c	;volatile
  2225                           
  2226                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  2227  0135F2  8079               	bsf	3961,0,c	;volatile
  2228                           
  2229                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  2230  0135F4  92A2               	bcf	4002,1,c	;volatile
  2231                           
  2232                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  2233  0135F6  92A1               	bcf	4001,1,c	;volatile
  2234                           
  2235                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  2236  0135F8  82A0               	bsf	4000,1,c	;volatile
  2237                           
  2238                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  2239  0135FA  8CF2               	bsf	intcon,6,c	;volatile
  2240  0135FC  0012               	return		;funcret
  2241  0135FE                     __end_of_timer3_init:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           intcon	equ	0xFF2
  2248                           intcon2	equ	0xFF1
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _timer1_init *****************
  2257 ;; Defined at:
  2258 ;;		line 70 in file "../My_library/My_PIC.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  prescaler       1    wreg     unsigned char 
  2261 ;;  clock_select    1   31[COMRAM] unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;Total ram usage:        3 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main_init
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text3
  2288  0131F6                     __ptext3:
  2289                           	opt stack 0
  2290  0131F6                     _timer1_init:
  2291                           	opt stack 25
  2292                           
  2293                           ;incstack = 0
  2294                           ;timer1_init@prescaler stored from wreg
  2295  0131F6  0100               	movlb	0	; () banked
  2296  0131F8  6FB6               	movwf	timer1_init@prescaler& (0+255),b
  2297                           
  2298                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  2299  0131FA  C020  F0B5         	movff	timer1_init@clock_select,??_timer1_init
  2300  0131FE  0100               	movlb	0	; () banked
  2301  013200  3BB5               	swapf	??_timer1_init& (0+255),f,b
  2302  013202  47B5               	rlncf	??_timer1_init& (0+255),f,b
  2303  013204  47B5               	rlncf	??_timer1_init& (0+255),f,b
  2304  013206  50CD               	movf	4045,w,c	;volatile
  2305  013208  0100               	movlb	0	; () banked
  2306  01320A  19B5               	xorwf	??_timer1_init& (0+255),w,b
  2307  01320C  0B3F               	andlw	-193
  2308  01320E  19B5               	xorwf	??_timer1_init& (0+255),w,b
  2309  013210  6ECD               	movwf	4045,c	;volatile
  2310                           
  2311                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2312  013212  0E02               	movlw	2
  2313  013214  1820               	xorwf	timer1_init@clock_select,w,c
  2314  013216  A4D8               	btfss	status,2,c
  2315  013218  D002               	goto	l696
  2316                           
  2317                           ; BSR set to: 0
  2318  01321A  86CD               	bsf	4045,3,c	;volatile
  2319  01321C  D001               	goto	l9370
  2320  01321E                     l696:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  2324  01321E  96CD               	bcf	4045,3,c	;volatile
  2325  013220                     l9370:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  2329  013220  C0B6  F0B5         	movff	timer1_init@prescaler,??_timer1_init
  2330  013224  0100               	movlb	0	; () banked
  2331  013226  3BB5               	swapf	??_timer1_init& (0+255),f,b
  2332  013228  50CD               	movf	4045,w,c	;volatile
  2333  01322A  0100               	movlb	0	; () banked
  2334  01322C  19B5               	xorwf	??_timer1_init& (0+255),w,b
  2335  01322E  0BCF               	andlw	-49
  2336  013230  19B5               	xorwf	??_timer1_init& (0+255),w,b
  2337  013232  6ECD               	movwf	4045,c	;volatile
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  2341  013234  84CD               	bsf	4045,2,c	;volatile
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  2345  013236  92CD               	bcf	4045,1,c	;volatile
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  2349  013238  80CD               	bsf	4045,0,c	;volatile
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  2353  01323A  909F               	bcf	3999,0,c	;volatile
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  2357  01323C  909E               	bcf	3998,0,c	;volatile
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  2361  01323E  809D               	bsf	3997,0,c	;volatile
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  2365  013240  8CF2               	bsf	intcon,6,c	;volatile
  2366                           
  2367                           ; BSR set to: 0
  2368  013242  0012               	return		;funcret
  2369  013244                     __end_of_timer1_init:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           intcon	equ	0xFF2
  2376                           intcon2	equ	0xFF1
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postdec1	equ	0xFE5
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _timer0_init *****************
  2385 ;; Defined at:
  2386 ;;		line 34 in file "../My_library/My_PIC.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  prescaler       1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  prescaler       1    0[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;		None               void
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;Total ram usage:        2 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    4
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main_init
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text4
  2415  01343E                     __ptext4:
  2416                           	opt stack 0
  2417  01343E                     _timer0_init:
  2418                           	opt stack 25
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;incstack = 0
  2422                           ;timer0_init@prescaler stored from wreg
  2423  01343E  0100               	movlb	0	; () banked
  2424  013440  6FB5               	movwf	timer0_init@prescaler& (0+255),b
  2425                           
  2426                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  2427  013442  8ED5               	bsf	4053,7,c	;volatile
  2428                           
  2429                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  2430  013444  8CD5               	bsf	4053,6,c	;volatile
  2431                           
  2432                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  2433  013446  9AD5               	bcf	4053,5,c	;volatile
  2434                           
  2435                           ;My_PIC.c: 38: if (prescaler == 0) {
  2436  013448  0100               	movlb	0	; () banked
  2437  01344A  51B5               	movf	timer0_init@prescaler& (0+255),w,b
  2438  01344C  0100               	movlb	0	; () banked
  2439  01344E  A4D8               	btfss	status,2,c
  2440  013450  D002               	goto	l691
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  2444  013452  86D5               	bsf	4053,3,c	;volatile
  2445                           
  2446                           ;My_PIC.c: 40: } else {
  2447  013454  D00A               	goto	l9358
  2448  013456                     l691:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  2452  013456  96D5               	bcf	4053,3,c	;volatile
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  2456  013458  C0B5  F020         	movff	timer0_init@prescaler,??_timer0_init
  2457  01345C  0EFF               	movlw	255
  2458  01345E  2620               	addwf	??_timer0_init,f,c
  2459  013460  50D5               	movf	4053,w,c	;volatile
  2460  013462  1820               	xorwf	??_timer0_init,w,c
  2461  013464  0BF8               	andlw	-8
  2462  013466  1820               	xorwf	??_timer0_init,w,c
  2463  013468  6ED5               	movwf	4053,c	;volatile
  2464  01346A                     l9358:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;My_PIC.c: 43: }
  2468                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  2469  01346A  8AF2               	bsf	intcon,5,c	;volatile
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  2473  01346C  94F2               	bcf	intcon,2,c	;volatile
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  2477  01346E  94F1               	bcf	intcon2,2,c	;volatile
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  2481  013470  8CF2               	bsf	intcon,6,c	;volatile
  2482                           
  2483                           ; BSR set to: 0
  2484  013472  0012               	return		;funcret
  2485  013474                     __end_of_timer0_init:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           intcon	equ	0xFF2
  2492                           intcon2	equ	0xFF1
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           postdec1	equ	0xFE5
  2496                           fsr1h	equ	0xFE2
  2497                           fsr1l	equ	0xFE1
  2498                           status	equ	0xFD8
  2499                           
  2500 ;; *************** function _ringbuf_init *****************
  2501 ;; Defined at:
  2502 ;;		line 5 in file "../My_library/My_ringbuf.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2505 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  2506 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  2507 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  2508 ;;		 -> main_init@uartrx(100), main_init@uarttx(1000), main_init@usbrx(100), main_init@usbtx(1000), 
  2509 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  2510 ;;  bufsize         2    4[BANK0 ] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;		None               void
  2515 ;; Registers used:
  2516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2522 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;Total ram usage:        6 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    4
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main_init
  2533 ;;		_ST7032_init
  2534 ;;		_terminal_task
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text5
  2539  0131A2                     __ptext5:
  2540                           	opt stack 0
  2541  0131A2                     _ringbuf_init:
  2542                           	opt stack 25
  2543                           
  2544                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;incstack = 0
  2548  0131A2  C0B5  FFD9         	movff	ringbuf_init@rb,fsr2l
  2549  0131A6  C0B6  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2550  0131AA  C0B7  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2551  0131AE  C0B8  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2552                           
  2553                           ;My_ringbuf.c: 7: rb->size = bufsize;
  2554  0131B2  0100               	movlb	0	; () banked
  2555  0131B4  EE20 F002          	lfsr	2,2
  2556  0131B8  51B5               	movf	ringbuf_init@rb& (0+255),w,b
  2557  0131BA  26D9               	addwf	fsr2l,f,c
  2558  0131BC  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2559  0131BE  22DA               	addwfc	fsr2h,f,c
  2560  0131C0  C0B9  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2561  0131C4  C0BA  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;My_ringbuf.c: 8: rb->head = 0;
  2565  0131C8  0100               	movlb	0	; () banked
  2566  0131CA  EE20 F004          	lfsr	2,4
  2567  0131CE  51B5               	movf	ringbuf_init@rb& (0+255),w,b
  2568  0131D0  26D9               	addwf	fsr2l,f,c
  2569  0131D2  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2570  0131D4  22DA               	addwfc	fsr2h,f,c
  2571  0131D6  0E00               	movlw	0
  2572  0131D8  6EDE               	movwf	postinc2,c
  2573  0131DA  0E00               	movlw	0
  2574  0131DC  6EDD               	movwf	postdec2,c
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;My_ringbuf.c: 9: rb->tail = 0;
  2578  0131DE  0100               	movlb	0	; () banked
  2579  0131E0  EE20 F006          	lfsr	2,6
  2580  0131E4  51B5               	movf	ringbuf_init@rb& (0+255),w,b
  2581  0131E6  26D9               	addwf	fsr2l,f,c
  2582  0131E8  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2583  0131EA  22DA               	addwfc	fsr2h,f,c
  2584  0131EC  0E00               	movlw	0
  2585  0131EE  6EDE               	movwf	postinc2,c
  2586  0131F0  0E00               	movlw	0
  2587  0131F2  6EDD               	movwf	postdec2,c
  2588                           
  2589                           ; BSR set to: 0
  2590  0131F4  0012               	return		;funcret
  2591  0131F6                     __end_of_ringbuf_init:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           intcon	equ	0xFF2
  2598                           intcon2	equ	0xFF1
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           postinc2	equ	0xFDE
  2605                           postdec2	equ	0xFDD
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _USB_init *****************
  2611 ;; Defined at:
  2612 ;;		line 10 in file "../My_library/My_usb_cdc.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    6
  2633 ;; This function calls:
  2634 ;;		_USBDeviceInit
  2635 ;; This function is called by:
  2636 ;;		_main_init
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text6
  2641  01372E                     __ptext6:
  2642                           	opt stack 0
  2643  01372E                     _USB_init:
  2644                           	opt stack 23
  2645                           
  2646                           ;My_usb_cdc.c: 11: USBDeviceInit();
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;incstack = 0
  2650  01372E  EC3C  F089         	call	_USBDeviceInit	;wreg free
  2651                           
  2652                           ;My_usb_cdc.c: 12: ;
  2653                           ;My_usb_cdc.c: 13: {line_coding.dwDTERate=115200;};
  2654  013732  0E00               	movlw	0
  2655  013734  0101               	movlb	1	; () banked
  2656  013736  6FE0               	movwf	_line_coding& (0+255),b
  2657  013738  0EC2               	movlw	194
  2658  01373A  6FE1               	movwf	(_line_coding+1)& (0+255),b
  2659  01373C  0E01               	movlw	1
  2660  01373E  6FE2               	movwf	(_line_coding+2)& (0+255),b
  2661  013740  0E00               	movlw	0
  2662  013742  6FE3               	movwf	(_line_coding+3)& (0+255),b
  2663                           
  2664                           ; BSR set to: 1
  2665  013744  0012               	return		;funcret
  2666  013746                     __end_of_USB_init:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           intcon	equ	0xFF2
  2673                           intcon2	equ	0xFF1
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           postdec1	equ	0xFE5
  2677                           fsr1h	equ	0xFE2
  2678                           fsr1l	equ	0xFE1
  2679                           postinc2	equ	0xFDE
  2680                           postdec2	equ	0xFDD
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8
  2684                           
  2685 ;; *************** function _UART_init *****************
  2686 ;; Defined at:
  2687 ;;		line 10 in file "../My_library/My_UART.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;		None               void
  2694 ;; Registers used:
  2695 ;;		wreg, status,2
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    4
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_main_init
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text7
  2716  01364A                     __ptext7:
  2717                           	opt stack 0
  2718  01364A                     _UART_init:
  2719                           	opt stack 25
  2720                           
  2721                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  2722                           
  2723                           ; BSR set to: 1
  2724                           ;incstack = 0
  2725  01364A  9CAD               	bcf	4013,6,c	;volatile
  2726                           
  2727                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  2728  01364C  8AAD               	bsf	4013,5,c	;volatile
  2729                           
  2730                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  2731  01364E  98AD               	bcf	4013,4,c	;volatile
  2732                           
  2733                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  2734  013650  94AD               	bcf	4013,2,c	;volatile
  2735                           
  2736                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  2737  013652  8EAC               	bsf	4012,7,c	;volatile
  2738                           
  2739                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  2740  013654  9CAC               	bcf	4012,6,c	;volatile
  2741                           
  2742                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  2743  013656  88AC               	bsf	4012,4,c	;volatile
  2744                           
  2745                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  2746  013658  867E               	bsf	3966,3,c	;volatile
  2747                           
  2748                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  2749  01365A  0E19               	movlw	25
  2750  01365C  6EB0               	movwf	4016,c	;volatile
  2751                           
  2752                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  2753  01365E  0E00               	movlw	0
  2754  013660  6E7F               	movwf	3967,c	;volatile
  2755                           
  2756                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  2757  013662  9A9F               	bcf	3999,5,c	;volatile
  2758                           
  2759                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  2760  013664  989F               	bcf	3999,4,c	;volatile
  2761                           
  2762                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  2763  013666  8A9D               	bsf	3997,5,c	;volatile
  2764                           
  2765                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  2766  013668  8CF2               	bsf	intcon,6,c	;volatile
  2767  01366A  0012               	return		;funcret
  2768  01366C                     __end_of_UART_init:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           intcon	equ	0xFF2
  2775                           intcon2	equ	0xFF1
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1h	equ	0xFE2
  2780                           fsr1l	equ	0xFE1
  2781                           postinc2	equ	0xFDE
  2782                           postdec2	equ	0xFDD
  2783                           fsr2h	equ	0xFDA
  2784                           fsr2l	equ	0xFD9
  2785                           status	equ	0xFD8
  2786                           
  2787 ;; *************** function _RTCC_init *****************
  2788 ;; Defined at:
  2789 ;;		line 22 in file "../My_library/My_RTCC.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;		None               void
  2796 ;; Registers used:
  2797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    8
  2810 ;; This function calls:
  2811 ;;		_RTCC_from_RTCC
  2812 ;;		_RTCC_from_epoch
  2813 ;; This function is called by:
  2814 ;;		_main_init
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text8
  2819  012FB2                     __ptext8:
  2820                           	opt stack 0
  2821  012FB2                     _RTCC_init:
  2822                           	opt stack 21
  2823                           
  2824                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  2825                           
  2826                           ;incstack = 0
  2827  012FB2  010F               	movlb	15	; () banked
  2828  012FB4  8B3F               	bsf	63,5,b	;volatile
  2829                           
  2830                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  2831  012FB6  010F               	movlb	15	; () banked
  2832  012FB8  BB3F               	btfsc	63,5,b	;volatile
  2833  012FBA  D006               	goto	l9448
  2834                           
  2835                           ; BSR set to: 15
  2836                           ;My_RTCC.c: 25: EECON2 = 0x55;
  2837  012FBC  0E55               	movlw	85
  2838  012FBE  6EA7               	movwf	4007,c	;volatile
  2839                           
  2840                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  2841  012FC0  0EAA               	movlw	170
  2842  012FC2  6EA7               	movwf	4007,c	;volatile
  2843                           
  2844                           ; BSR set to: 15
  2845                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  2846  012FC4  010F               	movlb	15	; () banked
  2847  012FC6  8B3F               	bsf	63,5,b	;volatile
  2848  012FC8                     l9448:
  2849                           
  2850                           ; BSR set to: 15
  2851                           ;My_RTCC.c: 28: }
  2852                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  2853  012FC8  010F               	movlb	15	; () banked
  2854  012FCA  8F3F               	bsf	63,7,b	;volatile
  2855                           
  2856                           ; BSR set to: 15
  2857                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  2858  012FCC  010F               	movlb	15	; () banked
  2859  012FCE  953F               	bcf	63,2,b	;volatile
  2860                           
  2861                           ; BSR set to: 15
  2862                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  2863  012FD0  010F               	movlb	15	; () banked
  2864  012FD2  833C               	bsf	60,1,b	;volatile
  2865                           
  2866                           ; BSR set to: 15
  2867                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  2868  012FD4  010F               	movlb	15	; () banked
  2869  012FD6  853C               	bsf	60,2,b	;volatile
  2870                           
  2871                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  2872  012FD8  0E00               	movlw	0
  2873  012FDA  010F               	movlb	15	; () banked
  2874  012FDC  6F3E               	movwf	62,b	;volatile
  2875                           
  2876                           ; BSR set to: 15
  2877                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  2878  012FDE  86CD               	bsf	4045,3,c	;volatile
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  2882  012FE0  0E95               	movlw	low _now
  2883  012FE2  0100               	movlb	0	; () banked
  2884  012FE4  6FDB               	movwf	RTCC_from_RTCC@tm& (0+255),b
  2885  012FE6  0E00               	movlw	high _now
  2886  012FE8  0100               	movlb	0	; () banked
  2887  012FEA  6FDC               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  2888  012FEC  EC7D  F09B         	call	_RTCC_from_RTCC	;wreg free
  2889                           
  2890                           ;My_RTCC.c: 37: if (now.DD == 0) {
  2891  012FF0  0100               	movlb	0	; () banked
  2892  012FF2  519D               	movf	(_now+8)& (0+255),w,b
  2893  012FF4  A4D8               	btfss	status,2,c
  2894  012FF6  0012               	return	
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;My_RTCC.c: 38: now.epoch = 0;
  2898  012FF8  0E00               	movlw	0
  2899  012FFA  0100               	movlb	0	; () banked
  2900  012FFC  6F95               	movwf	_now& (0+255),b
  2901  012FFE  0E00               	movlw	0
  2902  013000  6F96               	movwf	(_now+1)& (0+255),b
  2903  013002  0E00               	movlw	0
  2904  013004  6F97               	movwf	(_now+2)& (0+255),b
  2905  013006  0E00               	movlw	0
  2906  013008  6F98               	movwf	(_now+3)& (0+255),b
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  2910  01300A  0E95               	movlw	low _now
  2911  01300C  0100               	movlb	0	; () banked
  2912  01300E  6FE4               	movwf	RTCC_from_epoch@tm& (0+255),b
  2913  013010  0E00               	movlw	high _now
  2914  013012  0100               	movlb	0	; () banked
  2915  013014  6FE5               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  2916  013016  EC63  F09B         	call	_RTCC_from_epoch	;wreg free
  2917  01301A  0012               	return	
  2918  01301C                     __end_of_RTCC_init:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           intcon	equ	0xFF2
  2925                           intcon2	equ	0xFF1
  2926                           postinc0	equ	0xFEE
  2927                           wreg	equ	0xFE8
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _RTCC_from_epoch *****************
  2938 ;; Defined at:
  2939 ;;		line 210 in file "../My_library/My_RTCC.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  tm              2   47[BANK0 ] PTR struct .
  2942 ;;		 -> now(14), 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2954 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;Total ram usage:        2 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    7
  2961 ;; This function calls:
  2962 ;;		_caltime_to_RTCC
  2963 ;;		_epoch_to_caltime
  2964 ;; This function is called by:
  2965 ;;		_RTCC_init
  2966 ;;		_main
  2967 ;;		_RTCC_adjust_time_inc
  2968 ;;		_RTCC_adjust_time_dec
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text9
  2973  0136C6                     __ptext9:
  2974                           	opt stack 0
  2975  0136C6                     _RTCC_from_epoch:
  2976                           	opt stack 21
  2977                           
  2978                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  2979                           
  2980                           ;incstack = 0
  2981  0136C6  C0E4  F0D6         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  2982  0136CA  C0E5  F0D7         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  2983  0136CE  ECE7  F085         	call	_epoch_to_caltime	;wreg free
  2984                           
  2985                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  2986  0136D2  C0E4  F0BD         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  2987  0136D6  C0E5  F0BE         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  2988  0136DA  ECAF  F08E         	call	_caltime_to_RTCC	;wreg free
  2989  0136DE  0012               	return		;funcret
  2990  0136E0                     __end_of_RTCC_from_epoch:
  2991                           	opt stack 0
  2992                           tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           intcon	equ	0xFF2
  2997                           intcon2	equ	0xFF1
  2998                           postinc0	equ	0xFEE
  2999                           wreg	equ	0xFE8
  3000                           postdec1	equ	0xFE5
  3001                           fsr1h	equ	0xFE2
  3002                           fsr1l	equ	0xFE1
  3003                           postinc2	equ	0xFDE
  3004                           postdec2	equ	0xFDD
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _epoch_to_caltime *****************
  3010 ;; Defined at:
  3011 ;;		line 125 in file "../My_library/My_RTCC.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  tm              2   33[BANK0 ] PTR struct .
  3014 ;;		 -> now(14), 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  num             4   43[BANK0 ] unsigned long 
  3017 ;;  day             2   39[BANK0 ] unsigned int 
  3018 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  3019 ;;  month           1   42[BANK0 ] unsigned char 
  3020 ;;  year            1   41[BANK0 ] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3031 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;Total ram usage:       14 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    6
  3037 ;; This function calls:
  3038 ;;		_get_quot_rem
  3039 ;;		_month_length
  3040 ;; This function is called by:
  3041 ;;		_RTCC_from_epoch
  3042 ;;		_RTCC_from_caltime
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text10
  3047  010BCE                     __ptext10:
  3048                           	opt stack 0
  3049  010BCE                     _epoch_to_caltime:
  3050                           	opt stack 21
  3051                           
  3052                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  3053                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  3054                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  3055                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  3056                           ;My_RTCC.c: 132: uint16_t day;
  3057                           ;My_RTCC.c: 133: uint8_t year = 0;
  3058                           
  3059                           ;incstack = 0
  3060  010BCE  0E00               	movlw	0
  3061  010BD0  0100               	movlb	0	; () banked
  3062  010BD2  6FDE               	movwf	epoch_to_caltime@year& (0+255),b
  3063                           
  3064                           ;My_RTCC.c: 134: uint8_t month = 1;
  3065  010BD4  0E01               	movlw	1
  3066  010BD6  0100               	movlb	0	; () banked
  3067  010BD8  6FDF               	movwf	epoch_to_caltime@month& (0+255),b
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;My_RTCC.c: 135: epoch_t num;
  3071                           ;My_RTCC.c: 137: num = tm->epoch;
  3072  010BDA  C0D6  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3073  010BDE  C0D7  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3074  010BE2  CFDE F0E0          	movff	postinc2,epoch_to_caltime@num
  3075  010BE6  CFDE F0E1          	movff	postinc2,epoch_to_caltime@num+1
  3076  010BEA  CFDE F0E2          	movff	postinc2,epoch_to_caltime@num+2
  3077  010BEE  CFDE F0E3          	movff	postinc2,epoch_to_caltime@num+3
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  3081  010BF2  0EE0               	movlw	low epoch_to_caltime@num
  3082  010BF4  0100               	movlb	0	; () banked
  3083  010BF6  6FCE               	movwf	get_quot_rem@quot& (0+255),b
  3084  010BF8  0E00               	movlw	high epoch_to_caltime@num
  3085  010BFA  0100               	movlb	0	; () banked
  3086  010BFC  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3087  010BFE  0E3C               	movlw	60
  3088  010C00  0100               	movlb	0	; () banked
  3089  010C02  6FD0               	movwf	get_quot_rem@div& (0+255),b
  3090  010C04  EC1A  F08F         	call	_get_quot_rem	;wreg free
  3091  010C08  0100               	movlb	0	; () banked
  3092  010C0A  EE20 F004          	lfsr	2,4
  3093  010C0E  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3094  010C10  26D9               	addwf	fsr2l,f,c
  3095  010C12  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3096  010C14  22DA               	addwfc	fsr2h,f,c
  3097  010C16  0100               	movlb	0	; () banked
  3098  010C18  C0CE  FFDF         	movff	?_get_quot_rem,indf2
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  3102  010C1C  0EE0               	movlw	low epoch_to_caltime@num
  3103  010C1E  0100               	movlb	0	; () banked
  3104  010C20  6FCE               	movwf	get_quot_rem@quot& (0+255),b
  3105  010C22  0E00               	movlw	high epoch_to_caltime@num
  3106  010C24  0100               	movlb	0	; () banked
  3107  010C26  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3108  010C28  0E3C               	movlw	60
  3109  010C2A  0100               	movlb	0	; () banked
  3110  010C2C  6FD0               	movwf	get_quot_rem@div& (0+255),b
  3111  010C2E  EC1A  F08F         	call	_get_quot_rem	;wreg free
  3112  010C32  0100               	movlb	0	; () banked
  3113  010C34  EE20 F005          	lfsr	2,5
  3114  010C38  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3115  010C3A  26D9               	addwf	fsr2l,f,c
  3116  010C3C  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3117  010C3E  22DA               	addwfc	fsr2h,f,c
  3118  010C40  0100               	movlb	0	; () banked
  3119  010C42  C0CE  FFDF         	movff	?_get_quot_rem,indf2
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  3123  010C46  0EE0               	movlw	low epoch_to_caltime@num
  3124  010C48  0100               	movlb	0	; () banked
  3125  010C4A  6FCE               	movwf	get_quot_rem@quot& (0+255),b
  3126  010C4C  0E00               	movlw	high epoch_to_caltime@num
  3127  010C4E  0100               	movlb	0	; () banked
  3128  010C50  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3129  010C52  0E18               	movlw	24
  3130  010C54  0100               	movlb	0	; () banked
  3131  010C56  6FD0               	movwf	get_quot_rem@div& (0+255),b
  3132  010C58  EC1A  F08F         	call	_get_quot_rem	;wreg free
  3133  010C5C  0100               	movlb	0	; () banked
  3134  010C5E  EE20 F006          	lfsr	2,6
  3135  010C62  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3136  010C64  26D9               	addwf	fsr2l,f,c
  3137  010C66  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3138  010C68  22DA               	addwfc	fsr2h,f,c
  3139  010C6A  0100               	movlb	0	; () banked
  3140  010C6C  C0CE  FFDF         	movff	?_get_quot_rem,indf2
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;My_RTCC.c: 141: day = num;
  3144  010C70  C0E0  F0DC         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  3145  010C74  C0E1  F0DD         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;My_RTCC.c: 142: day_since_epoch = day;
  3149  010C78  C0DC  F0DA         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  3150  010C7C  C0DD  F0DB         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;My_RTCC.c: 144: num += 6;
  3154  010C80  0E06               	movlw	6
  3155  010C82  0100               	movlb	0	; () banked
  3156  010C84  27E0               	addwf	epoch_to_caltime@num& (0+255),f,b
  3157  010C86  0E00               	movlw	0
  3158  010C88  23E1               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  3159  010C8A  23E2               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  3160  010C8C  23E3               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  3164  010C8E  0EE0               	movlw	low epoch_to_caltime@num
  3165  010C90  0100               	movlb	0	; () banked
  3166  010C92  6FCE               	movwf	get_quot_rem@quot& (0+255),b
  3167  010C94  0E00               	movlw	high epoch_to_caltime@num
  3168  010C96  0100               	movlb	0	; () banked
  3169  010C98  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3170  010C9A  0E07               	movlw	7
  3171  010C9C  0100               	movlb	0	; () banked
  3172  010C9E  6FD0               	movwf	get_quot_rem@div& (0+255),b
  3173  010CA0  EC1A  F08F         	call	_get_quot_rem	;wreg free
  3174  010CA4  0100               	movlb	0	; () banked
  3175  010CA6  EE20 F007          	lfsr	2,7
  3176  010CAA  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3177  010CAC  26D9               	addwf	fsr2l,f,c
  3178  010CAE  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3179  010CB0  22DA               	addwfc	fsr2h,f,c
  3180  010CB2  0100               	movlb	0	; () banked
  3181  010CB4  C0CE  FFDF         	movff	?_get_quot_rem,indf2
  3182                           
  3183                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  3184  010CB8  D03F               	goto	l8676
  3185  010CBA                     l860:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;My_RTCC.c: 155: LATB2 = 1;
  3189  010CBA  848A               	bsf	3978,2,c	;volatile
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  3193  010CBC  C0DF  F020         	movff	epoch_to_caltime@month,month_length@month
  3194  010CC0  0100               	movlb	0	; () banked
  3195  010CC2  51DE               	movf	epoch_to_caltime@year& (0+255),w,b
  3196  010CC4  EC43  F08E         	call	_month_length
  3197  010CC8  0100               	movlb	0	; () banked
  3198  010CCA  6FD8               	movwf	??_epoch_to_caltime& (0+255),b
  3199  010CCC  6BD9               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  3200  010CCE  0100               	movlb	0	; () banked
  3201  010CD0  1FD8               	comf	??_epoch_to_caltime& (0+255),f,b
  3202  010CD2  1FD9               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3203  010CD4  4BD8               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3204  010CD6  2BD9               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3205  010CD8  0100               	movlb	0	; () banked
  3206  010CDA  51DC               	movf	epoch_to_caltime@day& (0+255),w,b
  3207  010CDC  0100               	movlb	0	; () banked
  3208  010CDE  25D8               	addwf	??_epoch_to_caltime& (0+255),w,b
  3209  010CE0  0100               	movlb	0	; () banked
  3210  010CE2  6FDC               	movwf	epoch_to_caltime@day& (0+255),b
  3211  010CE4  0100               	movlb	0	; () banked
  3212  010CE6  51DD               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  3213  010CE8  0100               	movlb	0	; () banked
  3214  010CEA  21D9               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3215  010CEC  0100               	movlb	0	; () banked
  3216  010CEE  6FDD               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;My_RTCC.c: 157: if (month == 12) {
  3220  010CF0  0E0C               	movlw	12
  3221  010CF2  0100               	movlb	0	; () banked
  3222  010CF4  19DF               	xorwf	epoch_to_caltime@month& (0+255),w,b
  3223  010CF6  A4D8               	btfss	status,2,c
  3224  010CF8  D019               	goto	l8670
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;My_RTCC.c: 158: month = 1;
  3228  010CFA  0E01               	movlw	1
  3229  010CFC  0100               	movlb	0	; () banked
  3230  010CFE  6FDF               	movwf	epoch_to_caltime@month& (0+255),b
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;My_RTCC.c: 159: year++;
  3234  010D00  0100               	movlb	0	; () banked
  3235  010D02  2BDE               	incf	epoch_to_caltime@year& (0+255),f,b
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;My_RTCC.c: 161: if (year >= 100) {
  3239  010D04  0E63               	movlw	99
  3240  010D06  0100               	movlb	0	; () banked
  3241  010D08  65DE               	cpfsgt	epoch_to_caltime@year& (0+255),b
  3242  010D0A  D012               	goto	l8672
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  3246  010D0C  C0D6  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3247  010D10  C0D7  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3248  010D14  0E80               	movlw	128
  3249  010D16  5EDE               	subwf	postinc2,f,c
  3250  010D18  0E13               	movlw	19
  3251  010D1A  5ADE               	subwfb	postinc2,f,c
  3252  010D1C  0E19               	movlw	25
  3253  010D1E  5ADE               	subwfb	postinc2,f,c
  3254  010D20  0EBC               	movlw	188
  3255  010D22  5ADE               	subwfb	postinc2,f,c
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;My_RTCC.c: 163: year = 0;
  3259  010D24  0E00               	movlw	0
  3260  010D26  0100               	movlb	0	; () banked
  3261  010D28  6FDE               	movwf	epoch_to_caltime@year& (0+255),b
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;My_RTCC.c: 164: }
  3265                           ;My_RTCC.c: 165: } else {
  3266  010D2A  D002               	goto	l8672
  3267  010D2C                     l8670:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;My_RTCC.c: 166: month++;
  3271  010D2C  0100               	movlb	0	; () banked
  3272  010D2E  2BDF               	incf	epoch_to_caltime@month& (0+255),f,b
  3273  010D30                     l8672:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;My_RTCC.c: 167: }
  3277                           ;My_RTCC.c: 168: month_cache = month;
  3278  010D30  C0DF  F0F4         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;My_RTCC.c: 169: year_cache = year;
  3282  010D34  C0DE  F093         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  3283  010D38                     l8676:
  3284                           
  3285                           ; BSR set to: 0
  3286  010D38  C0DF  F020         	movff	epoch_to_caltime@month,month_length@month
  3287  010D3C  0100               	movlb	0	; () banked
  3288  010D3E  51DE               	movf	epoch_to_caltime@year& (0+255),w,b
  3289  010D40  EC43  F08E         	call	_month_length
  3290  010D44  0100               	movlb	0	; () banked
  3291  010D46  6FD8               	movwf	??_epoch_to_caltime& (0+255),b
  3292  010D48  0100               	movlb	0	; () banked
  3293  010D4A  51D8               	movf	??_epoch_to_caltime& (0+255),w,b
  3294  010D4C  0100               	movlb	0	; () banked
  3295  010D4E  5DDC               	subwf	epoch_to_caltime@day& (0+255),w,b
  3296  010D50  0E00               	movlw	0
  3297  010D52  59DD               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  3298  010D54  B0D8               	btfsc	status,0,c
  3299  010D56  D7B1               	goto	l860
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;My_RTCC.c: 170: }
  3303                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  3304                           
  3305                           ; BSR set to: 0
  3306  010D58  C0DC  F0D8         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  3307  010D5C  C0DD  F0D9         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  3308  010D60  0100               	movlb	0	; () banked
  3309  010D62  1FD8               	comf	??_epoch_to_caltime& (0+255),f,b
  3310  010D64  1FD9               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3311  010D66  4BD8               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3312  010D68  2BD9               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3313  010D6A  0100               	movlb	0	; () banked
  3314  010D6C  51DA               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  3315  010D6E  0100               	movlb	0	; () banked
  3316  010D70  25D8               	addwf	??_epoch_to_caltime& (0+255),w,b
  3317  010D72  0101               	movlb	1	; () banked
  3318  010D74  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  3319  010D76  0100               	movlb	0	; () banked
  3320  010D78  51DB               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  3321  010D7A  0100               	movlb	0	; () banked
  3322  010D7C  21D9               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3323  010D7E  0101               	movlb	1	; () banked
  3324  010D80  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;My_RTCC.c: 172: day++;
  3328  010D82  0100               	movlb	0	; () banked
  3329  010D84  4BDC               	infsnz	epoch_to_caltime@day& (0+255),f,b
  3330  010D86  2BDD               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;My_RTCC.c: 174: tm->YY = year;
  3334  010D88  0100               	movlb	0	; () banked
  3335  010D8A  EE20 F00A          	lfsr	2,10
  3336  010D8E  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3337  010D90  26D9               	addwf	fsr2l,f,c
  3338  010D92  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3339  010D94  22DA               	addwfc	fsr2h,f,c
  3340  010D96  C0DE  FFDF         	movff	epoch_to_caltime@year,indf2
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;My_RTCC.c: 175: tm->MM = month;
  3344  010D9A  0100               	movlb	0	; () banked
  3345  010D9C  EE20 F009          	lfsr	2,9
  3346  010DA0  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3347  010DA2  26D9               	addwf	fsr2l,f,c
  3348  010DA4  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3349  010DA6  22DA               	addwfc	fsr2h,f,c
  3350  010DA8  C0DF  FFDF         	movff	epoch_to_caltime@month,indf2
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;My_RTCC.c: 176: tm->DD = day;
  3354  010DAC  0100               	movlb	0	; () banked
  3355  010DAE  EE20 F008          	lfsr	2,8
  3356  010DB2  51D6               	movf	epoch_to_caltime@tm& (0+255),w,b
  3357  010DB4  26D9               	addwf	fsr2l,f,c
  3358  010DB6  51D7               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3359  010DB8  22DA               	addwfc	fsr2h,f,c
  3360  010DBA  C0DC  FFDF         	movff	epoch_to_caltime@day,indf2
  3361                           
  3362                           ; BSR set to: 0
  3363  010DBE  0012               	return		;funcret
  3364  010DC0                     __end_of_epoch_to_caltime:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           intcon	equ	0xFF2
  3371                           intcon2	equ	0xFF1
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           postdec1	equ	0xFE5
  3375                           fsr1h	equ	0xFE2
  3376                           fsr1l	equ	0xFE1
  3377                           indf2	equ	0xFDF
  3378                           postinc2	equ	0xFDE
  3379                           postdec2	equ	0xFDD
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _get_quot_rem *****************
  3385 ;; Defined at:
  3386 ;;		line 80 in file "../My_library/My_RTCC.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  3389 ;;		 -> epoch_to_caltime@num(4), 
  3390 ;;  div             1   27[BANK0 ] unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  num             4   29[BANK0 ] unsigned long 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  4   25[BANK0 ] unsigned long 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3405 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;Total ram usage:        8 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    5
  3409 ;; This function calls:
  3410 ;;		___lldiv
  3411 ;;		___lmul
  3412 ;; This function is called by:
  3413 ;;		_epoch_to_caltime
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text11
  3418  011E34                     __ptext11:
  3419                           	opt stack 0
  3420  011E34                     _get_quot_rem:
  3421                           	opt stack 21
  3422                           
  3423                           ;My_RTCC.c: 83: epoch_t num = *quot;
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;incstack = 0
  3427  011E34  C0CE  FFD9         	movff	get_quot_rem@quot,fsr2l
  3428  011E38  C0CF  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3429  011E3C  CFDE F0D2          	movff	postinc2,get_quot_rem@num
  3430  011E40  CFDE F0D3          	movff	postinc2,get_quot_rem@num+1
  3431  011E44  CFDE F0D4          	movff	postinc2,get_quot_rem@num+2
  3432  011E48  CFDE F0D5          	movff	postinc2,get_quot_rem@num+3
  3433                           
  3434                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  3435  011E4C  0100               	movlb	0	; () banked
  3436  011E4E  51D0               	movf	get_quot_rem@div& (0+255),w,b
  3437  011E50  0100               	movlb	0	; () banked
  3438  011E52  6FB9               	movwf	___lldiv@divisor& (0+255),b
  3439  011E54  6BBA               	clrf	(___lldiv@divisor+1)& (0+255),b
  3440  011E56  6BBB               	clrf	(___lldiv@divisor+2)& (0+255),b
  3441  011E58  6BBC               	clrf	(___lldiv@divisor+3)& (0+255),b
  3442  011E5A  C0D2  F0B5         	movff	get_quot_rem@num,___lldiv@dividend
  3443  011E5E  C0D3  F0B6         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  3444  011E62  C0D4  F0B7         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  3445  011E66  C0D5  F0B8         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  3446  011E6A  ECA9  F092         	call	___lldiv	;wreg free
  3447  011E6E  C0CE  FFD9         	movff	get_quot_rem@quot,fsr2l
  3448  011E72  C0CF  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3449  011E76  0100               	movlb	0	; () banked
  3450  011E78  C0B5  FFDE         	movff	?___lldiv,postinc2
  3451  011E7C  0100               	movlb	0	; () banked
  3452  011E7E  C0B6  FFDE         	movff	?___lldiv+1,postinc2
  3453  011E82  0100               	movlb	0	; () banked
  3454  011E84  C0B7  FFDE         	movff	?___lldiv+2,postinc2
  3455  011E88  0100               	movlb	0	; () banked
  3456  011E8A  C0B8  FFDD         	movff	?___lldiv+3,postdec2
  3457  011E8E  52DD               	movf	postdec2,f,c
  3458  011E90  52DD               	movf	postdec2,f,c
  3459  011E92  CFDE F0C2          	movff	postinc2,___lmul@multiplier
  3460  011E96  CFDE F0C3          	movff	postinc2,___lmul@multiplier+1
  3461  011E9A  CFDE F0C4          	movff	postinc2,___lmul@multiplier+2
  3462  011E9E  CFDE F0C5          	movff	postinc2,___lmul@multiplier+3
  3463  011EA2  0100               	movlb	0	; () banked
  3464  011EA4  51D0               	movf	get_quot_rem@div& (0+255),w,b
  3465  011EA6  0100               	movlb	0	; () banked
  3466  011EA8  6FC6               	movwf	___lmul@multiplicand& (0+255),b
  3467  011EAA  6BC7               	clrf	(___lmul@multiplicand+1)& (0+255),b
  3468  011EAC  6BC8               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3469  011EAE  6BC9               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3470  011EB0  EC68  F097         	call	___lmul	;wreg free
  3471  011EB4  0100               	movlb	0	; () banked
  3472  011EB6  1FC2               	comf	?___lmul& (0+255),f,b
  3473  011EB8  0100               	movlb	0	; () banked
  3474  011EBA  1FC3               	comf	(?___lmul+1)& (0+255),f,b
  3475  011EBC  0100               	movlb	0	; () banked
  3476  011EBE  1FC4               	comf	(?___lmul+2)& (0+255),f,b
  3477  011EC0  0100               	movlb	0	; () banked
  3478  011EC2  1FC5               	comf	(?___lmul+3)& (0+255),f,b
  3479  011EC4  0100               	movlb	0	; () banked
  3480  011EC6  2BC2               	incf	?___lmul& (0+255),f,b
  3481  011EC8  0E00               	movlw	0
  3482  011ECA  0100               	movlb	0	; () banked
  3483  011ECC  23C3               	addwfc	(?___lmul+1)& (0+255),f,b
  3484  011ECE  0100               	movlb	0	; () banked
  3485  011ED0  23C4               	addwfc	(?___lmul+2)& (0+255),f,b
  3486  011ED2  0100               	movlb	0	; () banked
  3487  011ED4  23C5               	addwfc	(?___lmul+3)& (0+255),f,b
  3488  011ED6  0100               	movlb	0	; () banked
  3489  011ED8  51D2               	movf	get_quot_rem@num& (0+255),w,b
  3490  011EDA  0100               	movlb	0	; () banked
  3491  011EDC  25C2               	addwf	?___lmul& (0+255),w,b
  3492  011EDE  0100               	movlb	0	; () banked
  3493  011EE0  6FCE               	movwf	?_get_quot_rem& (0+255),b
  3494  011EE2  0100               	movlb	0	; () banked
  3495  011EE4  51D3               	movf	(get_quot_rem@num+1)& (0+255),w,b
  3496  011EE6  0100               	movlb	0	; () banked
  3497  011EE8  21C3               	addwfc	(?___lmul+1)& (0+255),w,b
  3498  011EEA  0100               	movlb	0	; () banked
  3499  011EEC  6FCF               	movwf	(?_get_quot_rem+1)& (0+255),b
  3500  011EEE  0100               	movlb	0	; () banked
  3501  011EF0  51D4               	movf	(get_quot_rem@num+2)& (0+255),w,b
  3502  011EF2  0100               	movlb	0	; () banked
  3503  011EF4  21C4               	addwfc	(?___lmul+2)& (0+255),w,b
  3504  011EF6  0100               	movlb	0	; () banked
  3505  011EF8  6FD0               	movwf	(?_get_quot_rem+2)& (0+255),b
  3506  011EFA  0100               	movlb	0	; () banked
  3507  011EFC  51D5               	movf	(get_quot_rem@num+3)& (0+255),w,b
  3508  011EFE  0100               	movlb	0	; () banked
  3509  011F00  21C5               	addwfc	(?___lmul+3)& (0+255),w,b
  3510  011F02  0100               	movlb	0	; () banked
  3511  011F04  6FD1               	movwf	(?_get_quot_rem+3)& (0+255),b
  3512  011F06  0012               	return	
  3513  011F08                     __end_of_get_quot_rem:
  3514                           	opt stack 0
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           intcon	equ	0xFF2
  3520                           intcon2	equ	0xFF1
  3521                           postinc0	equ	0xFEE
  3522                           wreg	equ	0xFE8
  3523                           postdec1	equ	0xFE5
  3524                           fsr1h	equ	0xFE2
  3525                           fsr1l	equ	0xFE1
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function ___lldiv *****************
  3534 ;; Defined at:
  3535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  dividend        4    0[BANK0 ] unsigned long 
  3538 ;;  divisor         4    4[BANK0 ] unsigned long 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  quotient        4    8[BANK0 ] unsigned long 
  3541 ;;  counter         1   12[BANK0 ] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  4    0[BANK0 ] unsigned long 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3551 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;Total ram usage:       13 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    4
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_get_quot_rem
  3562 ;;		_CTMU_read
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text12
  3567  012552                     __ptext12:
  3568                           	opt stack 0
  3569  012552                     ___lldiv:
  3570                           	opt stack 21
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;incstack = 0
  3574  012552  0E00               	movlw	0
  3575  012554  0100               	movlb	0	; () banked
  3576  012556  6FBD               	movwf	___lldiv@quotient& (0+255),b
  3577  012558  0E00               	movlw	0
  3578  01255A  6FBE               	movwf	(___lldiv@quotient+1)& (0+255),b
  3579  01255C  0E00               	movlw	0
  3580  01255E  6FBF               	movwf	(___lldiv@quotient+2)& (0+255),b
  3581  012560  0E00               	movlw	0
  3582  012562  6FC0               	movwf	(___lldiv@quotient+3)& (0+255),b
  3583                           
  3584                           ; BSR set to: 0
  3585  012564  0100               	movlb	0	; () banked
  3586  012566  51B9               	movf	___lldiv@divisor& (0+255),w,b
  3587  012568  0100               	movlb	0	; () banked
  3588  01256A  11BA               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3589  01256C  0100               	movlb	0	; () banked
  3590  01256E  11BB               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3591  012570  0100               	movlb	0	; () banked
  3592  012572  11BC               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3593  012574  B4D8               	btfsc	status,2,c
  3594  012576  D042               	goto	l1907
  3595                           
  3596                           ; BSR set to: 0
  3597  012578  0E01               	movlw	1
  3598  01257A  0100               	movlb	0	; () banked
  3599  01257C  6FC1               	movwf	___lldiv@counter& (0+255),b
  3600  01257E  D008               	goto	l8324
  3601  012580                     l8322:
  3602                           
  3603                           ; BSR set to: 0
  3604  012580  0100               	movlb	0	; () banked
  3605  012582  90D8               	bcf	status,0,c
  3606  012584  37B9               	rlcf	___lldiv@divisor& (0+255),f,b
  3607  012586  37BA               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3608  012588  37BB               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3609  01258A  37BC               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3610  01258C  0100               	movlb	0	; () banked
  3611  01258E  2BC1               	incf	___lldiv@counter& (0+255),f,b
  3612  012590                     l8324:
  3613                           
  3614                           ; BSR set to: 0
  3615  012590  0100               	movlb	0	; () banked
  3616  012592  AFBC               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3617  012594  D7F5               	goto	l8322
  3618  012596                     l8326:
  3619                           
  3620                           ; BSR set to: 0
  3621  012596  0100               	movlb	0	; () banked
  3622  012598  90D8               	bcf	status,0,c
  3623  01259A  37BD               	rlcf	___lldiv@quotient& (0+255),f,b
  3624  01259C  37BE               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3625  01259E  37BF               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3626  0125A0  37C0               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3627                           
  3628                           ; BSR set to: 0
  3629  0125A2  0100               	movlb	0	; () banked
  3630  0125A4  51B9               	movf	___lldiv@divisor& (0+255),w,b
  3631  0125A6  0100               	movlb	0	; () banked
  3632  0125A8  5DB5               	subwf	___lldiv@dividend& (0+255),w,b
  3633  0125AA  0100               	movlb	0	; () banked
  3634  0125AC  51BA               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3635  0125AE  0100               	movlb	0	; () banked
  3636  0125B0  59B6               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3637  0125B2  0100               	movlb	0	; () banked
  3638  0125B4  51BB               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3639  0125B6  0100               	movlb	0	; () banked
  3640  0125B8  59B7               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3641  0125BA  0100               	movlb	0	; () banked
  3642  0125BC  51BC               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3643  0125BE  0100               	movlb	0	; () banked
  3644  0125C0  59B8               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3645  0125C2  A0D8               	btfss	status,0,c
  3646  0125C4  D012               	goto	l8334
  3647                           
  3648                           ; BSR set to: 0
  3649  0125C6  0100               	movlb	0	; () banked
  3650  0125C8  51B9               	movf	___lldiv@divisor& (0+255),w,b
  3651  0125CA  0100               	movlb	0	; () banked
  3652  0125CC  5FB5               	subwf	___lldiv@dividend& (0+255),f,b
  3653  0125CE  0100               	movlb	0	; () banked
  3654  0125D0  51BA               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3655  0125D2  0100               	movlb	0	; () banked
  3656  0125D4  5BB6               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3657  0125D6  0100               	movlb	0	; () banked
  3658  0125D8  51BB               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3659  0125DA  0100               	movlb	0	; () banked
  3660  0125DC  5BB7               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3661  0125DE  0100               	movlb	0	; () banked
  3662  0125E0  51BC               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3663  0125E2  0100               	movlb	0	; () banked
  3664  0125E4  5BB8               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3665                           
  3666                           ; BSR set to: 0
  3667  0125E6  0100               	movlb	0	; () banked
  3668  0125E8  81BD               	bsf	___lldiv@quotient& (0+255),0,b
  3669  0125EA                     l8334:
  3670                           
  3671                           ; BSR set to: 0
  3672  0125EA  0100               	movlb	0	; () banked
  3673  0125EC  90D8               	bcf	status,0,c
  3674  0125EE  33BC               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3675  0125F0  33BB               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3676  0125F2  33BA               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3677  0125F4  33B9               	rrcf	___lldiv@divisor& (0+255),f,b
  3678                           
  3679                           ; BSR set to: 0
  3680  0125F6  0100               	movlb	0	; () banked
  3681  0125F8  2FC1               	decfsz	___lldiv@counter& (0+255),f,b
  3682  0125FA  D7CD               	goto	l8326
  3683  0125FC                     l1907:
  3684                           
  3685                           ; BSR set to: 0
  3686  0125FC  C0BD  F0B5         	movff	___lldiv@quotient,?___lldiv
  3687  012600  C0BE  F0B6         	movff	___lldiv@quotient+1,?___lldiv+1
  3688  012604  C0BF  F0B7         	movff	___lldiv@quotient+2,?___lldiv+2
  3689  012608  C0C0  F0B8         	movff	___lldiv@quotient+3,?___lldiv+3
  3690                           
  3691                           ; BSR set to: 0
  3692  01260C  0012               	return		;funcret
  3693  01260E                     __end_of___lldiv:
  3694                           	opt stack 0
  3695                           tblptru	equ	0xFF8
  3696                           tblptrh	equ	0xFF7
  3697                           tblptrl	equ	0xFF6
  3698                           tablat	equ	0xFF5
  3699                           intcon	equ	0xFF2
  3700                           intcon2	equ	0xFF1
  3701                           postinc0	equ	0xFEE
  3702                           wreg	equ	0xFE8
  3703                           postdec1	equ	0xFE5
  3704                           fsr1h	equ	0xFE2
  3705                           fsr1l	equ	0xFE1
  3706                           indf2	equ	0xFDF
  3707                           postinc2	equ	0xFDE
  3708                           postdec2	equ	0xFDD
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _caltime_to_RTCC *****************
  3714 ;; Defined at:
  3715 ;;		line 105 in file "../My_library/My_RTCC.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  tm              2    8[BANK0 ] PTR struct .
  3718 ;;		 -> now(14), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;		None               void
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    6
  3737 ;; This function calls:
  3738 ;;		_d_to_x
  3739 ;; This function is called by:
  3740 ;;		_RTCC_from_epoch
  3741 ;;		_RTCC_from_caltime
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text13
  3746  011D5E                     __ptext13:
  3747                           	opt stack 0
  3748  011D5E                     _caltime_to_RTCC:
  3749                           	opt stack 21
  3750  011D5E                     l847:
  3751  011D5E  010F               	movlb	15	; () banked
  3752  011D60  B93F               	btfsc	63,4,b	;volatile
  3753  011D62  D7FD               	goto	l847
  3754                           
  3755                           ; BSR set to: 15
  3756                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  3757  011D64  010F               	movlb	15	; () banked
  3758  011D66  813F               	bsf	63,0,b	;volatile
  3759                           
  3760                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  3761  011D68  010F               	movlb	15	; () banked
  3762  011D6A  833F               	bsf	63,1,b	;volatile
  3763                           
  3764                           ; BSR set to: 15
  3765                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  3766  011D6C  0100               	movlb	0	; () banked
  3767  011D6E  EE20 F00A          	lfsr	2,10
  3768  011D72  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3769  011D74  26D9               	addwf	fsr2l,f,c
  3770  011D76  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3771  011D78  22DA               	addwfc	fsr2h,f,c
  3772  011D7A  50DF               	movf	indf2,w,c
  3773  011D7C  EC13  F09B         	call	_d_to_x
  3774  011D80  010F               	movlb	15	; () banked
  3775  011D82  6F3A               	movwf	58,b	;volatile
  3776                           
  3777                           ; BSR set to: 15
  3778                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  3779  011D84  0E00               	movlw	0
  3780  011D86  010F               	movlb	15	; () banked
  3781  011D88  6F3B               	movwf	59,b	;volatile
  3782                           
  3783                           ; BSR set to: 15
  3784                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  3785  011D8A  010F               	movlb	15	; () banked
  3786  011D8C  913F               	bcf	63,0,b	;volatile
  3787                           
  3788                           ; BSR set to: 15
  3789                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  3790  011D8E  010F               	movlb	15	; () banked
  3791  011D90  833F               	bsf	63,1,b	;volatile
  3792                           
  3793                           ; BSR set to: 15
  3794                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  3795  011D92  0100               	movlb	0	; () banked
  3796  011D94  EE20 F008          	lfsr	2,8
  3797  011D98  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3798  011D9A  26D9               	addwf	fsr2l,f,c
  3799  011D9C  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3800  011D9E  22DA               	addwfc	fsr2h,f,c
  3801  011DA0  50DF               	movf	indf2,w,c
  3802  011DA2  EC13  F09B         	call	_d_to_x
  3803  011DA6  010F               	movlb	15	; () banked
  3804  011DA8  6F3A               	movwf	58,b	;volatile
  3805                           
  3806                           ; BSR set to: 15
  3807                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  3808  011DAA  0100               	movlb	0	; () banked
  3809  011DAC  EE20 F009          	lfsr	2,9
  3810  011DB0  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3811  011DB2  26D9               	addwf	fsr2l,f,c
  3812  011DB4  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3813  011DB6  22DA               	addwfc	fsr2h,f,c
  3814  011DB8  50DF               	movf	indf2,w,c
  3815  011DBA  EC13  F09B         	call	_d_to_x
  3816  011DBE  010F               	movlb	15	; () banked
  3817  011DC0  6F3B               	movwf	59,b	;volatile
  3818                           
  3819                           ; BSR set to: 15
  3820                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  3821  011DC2  010F               	movlb	15	; () banked
  3822  011DC4  813F               	bsf	63,0,b	;volatile
  3823                           
  3824                           ; BSR set to: 15
  3825                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  3826  011DC6  010F               	movlb	15	; () banked
  3827  011DC8  933F               	bcf	63,1,b	;volatile
  3828                           
  3829                           ; BSR set to: 15
  3830                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  3831  011DCA  0100               	movlb	0	; () banked
  3832  011DCC  EE20 F006          	lfsr	2,6
  3833  011DD0  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3834  011DD2  26D9               	addwf	fsr2l,f,c
  3835  011DD4  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3836  011DD6  22DA               	addwfc	fsr2h,f,c
  3837  011DD8  50DF               	movf	indf2,w,c
  3838  011DDA  EC13  F09B         	call	_d_to_x
  3839  011DDE  010F               	movlb	15	; () banked
  3840  011DE0  6F3A               	movwf	58,b	;volatile
  3841                           
  3842                           ; BSR set to: 15
  3843                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  3844  011DE2  0100               	movlb	0	; () banked
  3845  011DE4  EE20 F007          	lfsr	2,7
  3846  011DE8  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3847  011DEA  26D9               	addwf	fsr2l,f,c
  3848  011DEC  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3849  011DEE  22DA               	addwfc	fsr2h,f,c
  3850  011DF0  50DF               	movf	indf2,w,c
  3851  011DF2  EC13  F09B         	call	_d_to_x
  3852  011DF6  010F               	movlb	15	; () banked
  3853  011DF8  6F3B               	movwf	59,b	;volatile
  3854                           
  3855                           ; BSR set to: 15
  3856                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  3857  011DFA  010F               	movlb	15	; () banked
  3858  011DFC  913F               	bcf	63,0,b	;volatile
  3859                           
  3860                           ; BSR set to: 15
  3861                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  3862  011DFE  010F               	movlb	15	; () banked
  3863  011E00  933F               	bcf	63,1,b	;volatile
  3864                           
  3865                           ; BSR set to: 15
  3866                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  3867  011E02  0100               	movlb	0	; () banked
  3868  011E04  EE20 F004          	lfsr	2,4
  3869  011E08  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3870  011E0A  26D9               	addwf	fsr2l,f,c
  3871  011E0C  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3872  011E0E  22DA               	addwfc	fsr2h,f,c
  3873  011E10  50DF               	movf	indf2,w,c
  3874  011E12  EC13  F09B         	call	_d_to_x
  3875  011E16  010F               	movlb	15	; () banked
  3876  011E18  6F3A               	movwf	58,b	;volatile
  3877                           
  3878                           ; BSR set to: 15
  3879                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  3880  011E1A  0100               	movlb	0	; () banked
  3881  011E1C  EE20 F005          	lfsr	2,5
  3882  011E20  51BD               	movf	caltime_to_RTCC@tm& (0+255),w,b
  3883  011E22  26D9               	addwf	fsr2l,f,c
  3884  011E24  51BE               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  3885  011E26  22DA               	addwfc	fsr2h,f,c
  3886  011E28  50DF               	movf	indf2,w,c
  3887  011E2A  EC13  F09B         	call	_d_to_x
  3888  011E2E  010F               	movlb	15	; () banked
  3889  011E30  6F3B               	movwf	59,b	;volatile
  3890                           
  3891                           ; BSR set to: 15
  3892  011E32  0012               	return		;funcret
  3893  011E34                     __end_of_caltime_to_RTCC:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           intcon	equ	0xFF2
  3900                           intcon2	equ	0xFF1
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postdec1	equ	0xFE5
  3904                           fsr1h	equ	0xFE2
  3905                           fsr1l	equ	0xFE1
  3906                           indf2	equ	0xFDF
  3907                           postinc2	equ	0xFDE
  3908                           postdec2	equ	0xFDD
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8
  3912                           
  3913 ;; *************** function _d_to_x *****************
  3914 ;; Defined at:
  3915 ;;		line 45 in file "../My_library/My_RTCC.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  dec             1    wreg     unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  dec             1   31[COMRAM] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      unsigned char 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;Total ram usage:        1 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    5
  3936 ;; This function calls:
  3937 ;;		___awdiv
  3938 ;; This function is called by:
  3939 ;;		_caltime_to_RTCC
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text14
  3944  013626                     __ptext14:
  3945                           	opt stack 0
  3946  013626                     _d_to_x:
  3947                           	opt stack 21
  3948                           
  3949                           ; BSR set to: 15
  3950                           ;incstack = 0
  3951                           ;d_to_x@dec stored from wreg
  3952  013626  6E20               	movwf	d_to_x@dec,c
  3953                           
  3954                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  3955  013628  C020  F0B5         	movff	d_to_x@dec,___awdiv@dividend
  3956  01362C  0100               	movlb	0	; () banked
  3957  01362E  6BB6               	clrf	(___awdiv@dividend+1)& (0+255),b
  3958  013630  0E00               	movlw	0
  3959  013632  0100               	movlb	0	; () banked
  3960  013634  6FB8               	movwf	(___awdiv@divisor+1)& (0+255),b
  3961  013636  0E0A               	movlw	10
  3962  013638  6FB7               	movwf	___awdiv@divisor& (0+255),b
  3963  01363A  EC4A  F092         	call	___awdiv	;wreg free
  3964  01363E  0100               	movlb	0	; () banked
  3965  013640  51B5               	movf	?___awdiv& (0+255),w,b
  3966  013642  0D06               	mullw	6
  3967  013644  50F3               	movf	prodl,w,c
  3968  013646  2420               	addwf	d_to_x@dec,w,c
  3969  013648  0012               	return	
  3970  01364A                     __end_of_d_to_x:
  3971                           	opt stack 0
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           intcon2	equ	0xFF1
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           indf2	equ	0xFDF
  3985                           postinc2	equ	0xFDE
  3986                           postdec2	equ	0xFDD
  3987                           fsr2h	equ	0xFDA
  3988                           fsr2l	equ	0xFD9
  3989                           status	equ	0xFD8
  3990                           
  3991 ;; *************** function ___awdiv *****************
  3992 ;; Defined at:
  3993 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  dividend        2    0[BANK0 ] int 
  3996 ;;  divisor         2    2[BANK0 ] int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  quotient        2    6[BANK0 ] int 
  3999 ;;  sign            1    5[BANK0 ] unsigned char 
  4000 ;;  counter         1    4[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2    0[BANK0 ] int 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4014 ;;Total ram usage:        8 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    4
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_d_to_x
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text15
  4025  012494                     __ptext15:
  4026                           	opt stack 0
  4027  012494                     ___awdiv:
  4028                           	opt stack 21
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;incstack = 0
  4032  012494  0E00               	movlw	0
  4033  012496  0100               	movlb	0	; () banked
  4034  012498  6FBA               	movwf	___awdiv@sign& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037  01249A  0100               	movlb	0	; () banked
  4038  01249C  AFB8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4039  01249E  D008               	goto	l8244
  4040                           
  4041                           ; BSR set to: 0
  4042  0124A0  0100               	movlb	0	; () banked
  4043  0124A2  6DB7               	negf	___awdiv@divisor& (0+255),b
  4044  0124A4  1FB8               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4045  0124A6  B0D8               	btfsc	status,0,c
  4046  0124A8  2BB8               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4047                           
  4048                           ; BSR set to: 0
  4049  0124AA  0E01               	movlw	1
  4050  0124AC  0100               	movlb	0	; () banked
  4051  0124AE  6FBA               	movwf	___awdiv@sign& (0+255),b
  4052  0124B0                     l8244:
  4053                           
  4054                           ; BSR set to: 0
  4055  0124B0  0100               	movlb	0	; () banked
  4056  0124B2  AFB6               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4057  0124B4  D008               	goto	l8250
  4058                           
  4059                           ; BSR set to: 0
  4060  0124B6  0100               	movlb	0	; () banked
  4061  0124B8  6DB5               	negf	___awdiv@dividend& (0+255),b
  4062  0124BA  1FB6               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4063  0124BC  B0D8               	btfsc	status,0,c
  4064  0124BE  2BB6               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4065                           
  4066                           ; BSR set to: 0
  4067  0124C0  0E01               	movlw	1
  4068  0124C2  0100               	movlb	0	; () banked
  4069  0124C4  1BBA               	xorwf	___awdiv@sign& (0+255),f,b
  4070  0124C6                     l8250:
  4071                           
  4072                           ; BSR set to: 0
  4073  0124C6  0E00               	movlw	0
  4074  0124C8  0100               	movlb	0	; () banked
  4075  0124CA  6FBC               	movwf	(___awdiv@quotient+1)& (0+255),b
  4076  0124CC  0E00               	movlw	0
  4077  0124CE  6FBB               	movwf	___awdiv@quotient& (0+255),b
  4078                           
  4079                           ; BSR set to: 0
  4080  0124D0  0100               	movlb	0	; () banked
  4081  0124D2  51B7               	movf	___awdiv@divisor& (0+255),w,b
  4082  0124D4  0100               	movlb	0	; () banked
  4083  0124D6  11B8               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4084  0124D8  B4D8               	btfsc	status,2,c
  4085  0124DA  D02C               	goto	l8272
  4086                           
  4087                           ; BSR set to: 0
  4088  0124DC  0E01               	movlw	1
  4089  0124DE  0100               	movlb	0	; () banked
  4090  0124E0  6FB9               	movwf	___awdiv@counter& (0+255),b
  4091  0124E2  D006               	goto	l8258
  4092  0124E4                     l8256:
  4093                           
  4094                           ; BSR set to: 0
  4095  0124E4  0100               	movlb	0	; () banked
  4096  0124E6  90D8               	bcf	status,0,c
  4097  0124E8  37B7               	rlcf	___awdiv@divisor& (0+255),f,b
  4098  0124EA  37B8               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4099  0124EC  0100               	movlb	0	; () banked
  4100  0124EE  2BB9               	incf	___awdiv@counter& (0+255),f,b
  4101  0124F0                     l8258:
  4102                           
  4103                           ; BSR set to: 0
  4104  0124F0  0100               	movlb	0	; () banked
  4105  0124F2  AFB8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4106  0124F4  D7F7               	goto	l8256
  4107  0124F6                     l8260:
  4108                           
  4109                           ; BSR set to: 0
  4110  0124F6  0100               	movlb	0	; () banked
  4111  0124F8  90D8               	bcf	status,0,c
  4112  0124FA  37BB               	rlcf	___awdiv@quotient& (0+255),f,b
  4113  0124FC  37BC               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4114                           
  4115                           ; BSR set to: 0
  4116  0124FE  0100               	movlb	0	; () banked
  4117  012500  51B7               	movf	___awdiv@divisor& (0+255),w,b
  4118  012502  0100               	movlb	0	; () banked
  4119  012504  5DB5               	subwf	___awdiv@dividend& (0+255),w,b
  4120  012506  0100               	movlb	0	; () banked
  4121  012508  51B8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4122  01250A  0100               	movlb	0	; () banked
  4123  01250C  59B6               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4124  01250E  A0D8               	btfss	status,0,c
  4125  012510  D00A               	goto	l8268
  4126                           
  4127                           ; BSR set to: 0
  4128  012512  0100               	movlb	0	; () banked
  4129  012514  51B7               	movf	___awdiv@divisor& (0+255),w,b
  4130  012516  0100               	movlb	0	; () banked
  4131  012518  5FB5               	subwf	___awdiv@dividend& (0+255),f,b
  4132  01251A  0100               	movlb	0	; () banked
  4133  01251C  51B8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4134  01251E  0100               	movlb	0	; () banked
  4135  012520  5BB6               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4136                           
  4137                           ; BSR set to: 0
  4138  012522  0100               	movlb	0	; () banked
  4139  012524  81BB               	bsf	___awdiv@quotient& (0+255),0,b
  4140  012526                     l8268:
  4141                           
  4142                           ; BSR set to: 0
  4143  012526  0100               	movlb	0	; () banked
  4144  012528  90D8               	bcf	status,0,c
  4145  01252A  33B8               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4146  01252C  33B7               	rrcf	___awdiv@divisor& (0+255),f,b
  4147                           
  4148                           ; BSR set to: 0
  4149  01252E  0100               	movlb	0	; () banked
  4150  012530  2FB9               	decfsz	___awdiv@counter& (0+255),f,b
  4151  012532  D7E1               	goto	l8260
  4152  012534                     l8272:
  4153                           
  4154                           ; BSR set to: 0
  4155  012534  0100               	movlb	0	; () banked
  4156  012536  51BA               	movf	___awdiv@sign& (0+255),w,b
  4157  012538  0100               	movlb	0	; () banked
  4158  01253A  B4D8               	btfsc	status,2,c
  4159  01253C  D005               	goto	l8276
  4160                           
  4161                           ; BSR set to: 0
  4162  01253E  0100               	movlb	0	; () banked
  4163  012540  6DBB               	negf	___awdiv@quotient& (0+255),b
  4164  012542  1FBC               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4165  012544  B0D8               	btfsc	status,0,c
  4166  012546  2BBC               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4167  012548                     l8276:
  4168                           
  4169                           ; BSR set to: 0
  4170  012548  C0BB  F0B5         	movff	___awdiv@quotient,?___awdiv
  4171  01254C  C0BC  F0B6         	movff	___awdiv@quotient+1,?___awdiv+1
  4172  012550  0012               	return	
  4173  012552                     __end_of___awdiv:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodl	equ	0xFF3
  4180                           intcon	equ	0xFF2
  4181                           intcon2	equ	0xFF1
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postdec1	equ	0xFE5
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           postdec2	equ	0xFDD
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _OSC_init *****************
  4195 ;; Defined at:
  4196 ;;		line 8 in file "../My_library/My_PIC.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;		None               void
  4203 ;; Registers used:
  4204 ;;		wreg, status,2
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    4
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_main_init
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text16
  4225  013786                     __ptext16:
  4226                           	opt stack 0
  4227  013786                     _OSC_init:
  4228                           	opt stack 25
  4229                           
  4230                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;incstack = 0
  4234  013786  88D3               	bsf	4051,4,c	;volatile
  4235  013788  8AD3               	bsf	4051,5,c	;volatile
  4236  01378A  8CD3               	bsf	4051,6,c	;volatile
  4237                           
  4238                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  4239  01378C  8C9B               	bsf	3995,6,c	;volatile
  4240                           
  4241                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  4242  01378E  0EFC               	movlw	-4
  4243  013790  16D3               	andwf	4051,f,c	;volatile
  4244  013792  0012               	return		;funcret
  4245  013794                     __end_of_OSC_init:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           prodl	equ	0xFF3
  4252                           intcon	equ	0xFF2
  4253                           intcon2	equ	0xFF1
  4254                           postinc0	equ	0xFEE
  4255                           wreg	equ	0xFE8
  4256                           postdec1	equ	0xFE5
  4257                           fsr1h	equ	0xFE2
  4258                           fsr1l	equ	0xFE1
  4259                           indf2	equ	0xFDF
  4260                           postinc2	equ	0xFDE
  4261                           postdec2	equ	0xFDD
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8
  4265                           
  4266 ;; *************** function _I2C_LCD_init *****************
  4267 ;; Defined at:
  4268 ;;		line 211 in file "../My_library/My_ST7032.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  i               1    8[BANK0 ] unsigned char 
  4273 ;;  i               1    7[BANK0 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4287 ;;Total ram usage:        3 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    8
  4290 ;; This function calls:
  4291 ;;		_I2C_LCD_Clear
  4292 ;;		_I2C_LCD_Command
  4293 ;;		_I2C_init_old
  4294 ;; This function is called by:
  4295 ;;		_main_init
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text17
  4300  012CC2                     __ptext17:
  4301                           	opt stack 0
  4302  012CC2                     _I2C_LCD_init:
  4303                           	opt stack 21
  4304                           
  4305                           ;My_ST7032.c: 212: I2C_init_old();
  4306                           
  4307                           ;incstack = 0
  4308  012CC2  ECBA  F09B         	call	_I2C_init_old	;wreg free
  4309                           
  4310                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  4311  012CC6  0E00               	movlw	0
  4312  012CC8  0100               	movlb	0	; () banked
  4313  012CCA  6FBC               	movwf	I2C_LCD_init@i& (0+255),b
  4314  012CCC                     l9492:
  4315                           
  4316                           ; BSR set to: 0
  4317  012CCC  0E27               	movlw	39
  4318  012CCE  0100               	movlb	0	; () banked
  4319  012CD0  65BC               	cpfsgt	I2C_LCD_init@i& (0+255),b
  4320  012CD2  D001               	goto	l9496
  4321  012CD4  D00C               	goto	l9500
  4322  012CD6                     l9496:
  4323                           
  4324                           ; BSR set to: 0
  4325  012CD6  0E10               	movlw	16
  4326  012CD8  0100               	movlb	0	; () banked
  4327  012CDA  6FBB               	movwf	??_I2C_LCD_init& (0+255),b
  4328  012CDC  0E94               	movlw	148
  4329  012CDE                     u10717:
  4330  012CDE  2EE8               	decfsz	wreg,f,c
  4331  012CE0  D7FE               	goto	u10717
  4332  012CE2  2FBB               	decfsz	??_I2C_LCD_init& (0+255),f,b
  4333  012CE4  D7FC               	goto	u10717
  4334  012CE6  D000               	nop2	
  4335  012CE8  0100               	movlb	0	; () banked
  4336  012CEA  2BBC               	incf	I2C_LCD_init@i& (0+255),f,b
  4337  012CEC  D7EF               	goto	l9492
  4338  012CEE                     l9500:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
  4342  012CEE  0E38               	movlw	56
  4343  012CF0  EC03  F09A         	call	_I2C_LCD_Command
  4344                           
  4345                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
  4346  012CF4  0E39               	movlw	57
  4347  012CF6  EC03  F09A         	call	_I2C_LCD_Command
  4348                           
  4349                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
  4350  012CFA  0E14               	movlw	20
  4351  012CFC  EC03  F09A         	call	_I2C_LCD_Command
  4352                           
  4353                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
  4354  012D00  0E70               	movlw	112
  4355  012D02  EC03  F09A         	call	_I2C_LCD_Command
  4356                           
  4357                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
  4358  012D06  0E56               	movlw	86
  4359  012D08  EC03  F09A         	call	_I2C_LCD_Command
  4360                           
  4361                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
  4362  012D0C  0E6C               	movlw	108
  4363  012D0E  EC03  F09A         	call	_I2C_LCD_Command
  4364                           
  4365                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  4366  012D12  0E00               	movlw	0
  4367  012D14  0100               	movlb	0	; () banked
  4368  012D16  6FBD               	movwf	I2C_LCD_init@i_4268& (0+255),b
  4369  012D18                     l9504:
  4370                           
  4371                           ; BSR set to: 0
  4372  012D18  0E27               	movlw	39
  4373  012D1A  0100               	movlb	0	; () banked
  4374  012D1C  65BD               	cpfsgt	I2C_LCD_init@i_4268& (0+255),b
  4375  012D1E  D001               	goto	l9508
  4376  012D20  D00C               	goto	l9512
  4377  012D22                     l9508:
  4378                           
  4379                           ; BSR set to: 0
  4380  012D22  0E10               	movlw	16
  4381  012D24  0100               	movlb	0	; () banked
  4382  012D26  6FBB               	movwf	??_I2C_LCD_init& (0+255),b
  4383  012D28  0E94               	movlw	148
  4384  012D2A                     u10727:
  4385  012D2A  2EE8               	decfsz	wreg,f,c
  4386  012D2C  D7FE               	goto	u10727
  4387  012D2E  2FBB               	decfsz	??_I2C_LCD_init& (0+255),f,b
  4388  012D30  D7FC               	goto	u10727
  4389  012D32  D000               	nop2	
  4390  012D34  0100               	movlb	0	; () banked
  4391  012D36  2BBD               	incf	I2C_LCD_init@i_4268& (0+255),f,b
  4392  012D38  D7EF               	goto	l9504
  4393  012D3A                     l9512:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
  4397  012D3A  0E38               	movlw	56
  4398  012D3C  EC03  F09A         	call	_I2C_LCD_Command
  4399                           
  4400                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
  4401  012D40  0E0C               	movlw	12
  4402  012D42  EC03  F09A         	call	_I2C_LCD_Command
  4403                           
  4404                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
  4405  012D46  0E06               	movlw	6
  4406  012D48  EC03  F09A         	call	_I2C_LCD_Command
  4407                           
  4408                           ;My_ST7032.c: 225: I2C_LCD_Clear();
  4409  012D4C  EC70  F09B         	call	_I2C_LCD_Clear	;wreg free
  4410  012D50  0012               	return		;funcret
  4411  012D52                     __end_of_I2C_LCD_init:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodl	equ	0xFF3
  4418                           intcon	equ	0xFF2
  4419                           intcon2	equ	0xFF1
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postdec1	equ	0xFE5
  4423                           fsr1h	equ	0xFE2
  4424                           fsr1l	equ	0xFE1
  4425                           indf2	equ	0xFDF
  4426                           postinc2	equ	0xFDE
  4427                           postdec2	equ	0xFDD
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _I2C_init_old *****************
  4433 ;; Defined at:
  4434 ;;		line 62 in file "../My_library/My_I2C.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		wreg, status,2
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    4
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_I2C_LCD_init
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text18
  4463  013774                     __ptext18:
  4464                           	opt stack 0
  4465  013774                     _I2C_init_old:
  4466                           	opt stack 24
  4467                           
  4468                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
  4469                           
  4470                           ;incstack = 0
  4471  013774  0E80               	movlw	128
  4472  013776  6EC7               	movwf	4039,c	;volatile
  4473                           
  4474                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
  4475  013778  0E28               	movlw	40
  4476  01377A  6EC6               	movwf	4038,c	;volatile
  4477                           
  4478                           ;My_I2C.c: 65: SSP1ADD = 0x13;
  4479  01377C  0E13               	movlw	19
  4480  01377E  6EC8               	movwf	4040,c	;volatile
  4481                           
  4482                           ;My_I2C.c: 68: SSP1IF = 0;
  4483  013780  969E               	bcf	3998,3,c	;volatile
  4484                           
  4485                           ;My_I2C.c: 69: BCL1IF = 0;
  4486  013782  96A1               	bcf	4001,3,c	;volatile
  4487  013784  0012               	return		;funcret
  4488  013786                     __end_of_I2C_init_old:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           prodl	equ	0xFF3
  4495                           intcon	equ	0xFF2
  4496                           intcon2	equ	0xFF1
  4497                           postinc0	equ	0xFEE
  4498                           wreg	equ	0xFE8
  4499                           postdec1	equ	0xFE5
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _I2C_LCD_Clear *****************
  4510 ;; Defined at:
  4511 ;;		line 154 in file "../My_library/My_ST7032.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;		None               void
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;Total ram usage:        1 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    7
  4532 ;; This function calls:
  4533 ;;		_I2C_LCD_Command
  4534 ;; This function is called by:
  4535 ;;		_I2C_LCD_init
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text19
  4541  0136E0                     __ptext19:
  4542                           	opt stack 0
  4543  0136E0                     _I2C_LCD_Clear:
  4544                           	opt stack 21
  4545                           
  4546                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
  4547                           
  4548                           ;incstack = 0
  4549  0136E0  0E01               	movlw	1
  4550  0136E2  EC03  F09A         	call	_I2C_LCD_Command
  4551                           
  4552                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  4553  0136E6  0E12               	movlw	18
  4554  0136E8  0100               	movlb	0	; () banked
  4555  0136EA  6FBA               	movwf	??_I2C_LCD_Clear& (0+255),b
  4556  0136EC  0E23               	movlw	35
  4557  0136EE                     u10737:
  4558  0136EE  2EE8               	decfsz	wreg,f,c
  4559  0136F0  D7FE               	goto	u10737
  4560  0136F2  2FBA               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  4561  0136F4  D7FC               	goto	u10737
  4562  0136F6  F000               	nop	
  4563  0136F8  0012               	return		;funcret
  4564  0136FA                     __end_of_I2C_LCD_Clear:
  4565                           	opt stack 0
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           prodl	equ	0xFF3
  4571                           intcon	equ	0xFF2
  4572                           intcon2	equ	0xFF1
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           postdec1	equ	0xFE5
  4576                           fsr1h	equ	0xFE2
  4577                           fsr1l	equ	0xFE1
  4578                           indf2	equ	0xFDF
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function _display_time_0802 *****************
  4586 ;; Defined at:
  4587 ;;		line 224 in file "../My_library/My_RTCC.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  tm              2   54[BANK0 ] PTR struct .
  4590 ;;		 -> now(14), 
  4591 ;;  line0           2   56[BANK0 ] PTR unsigned char 
  4592 ;;		 -> main@s(40), 
  4593 ;;  line1           2   58[BANK0 ] PTR unsigned char 
  4594 ;;		 -> main@s(40), 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;		None               void
  4599 ;; Registers used:
  4600 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4606 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;Total ram usage:        6 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    8
  4613 ;; This function calls:
  4614 ;;		_RTCC_from_RTCC
  4615 ;;		_display_dec
  4616 ;;		_strcat
  4617 ;;		_strcpy
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text20
  4624  0109BA                     __ptext20:
  4625                           	opt stack 0
  4626  0109BA                     _display_time_0802:
  4627                           	opt stack 22
  4628                           
  4629                           ;My_RTCC.c: 225: RTCC_from_RTCC(&now);
  4630                           
  4631                           ;incstack = 0
  4632  0109BA  0E95               	movlw	low _now
  4633  0109BC  0100               	movlb	0	; () banked
  4634  0109BE  6FDB               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4635  0109C0  0E00               	movlw	high _now
  4636  0109C2  0100               	movlb	0	; () banked
  4637  0109C4  6FDC               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4638  0109C6  EC7D  F09B         	call	_RTCC_from_RTCC	;wreg free
  4639                           
  4640                           ;My_RTCC.c: 227: strcpy(line0, "");
  4641  0109CA  C0ED  F0B5         	movff	display_time_0802@line0,strcpy@to
  4642  0109CE  C0EE  F0B6         	movff	display_time_0802@line0+1,strcpy@to+1
  4643  0109D2  0EE8               	movlw	low (STR_19+3)
  4644  0109D4  0100               	movlb	0	; () banked
  4645  0109D6  6FB7               	movwf	strcpy@from& (0+255),b
  4646  0109D8  0EFF               	movlw	high (STR_19+3)
  4647  0109DA  0100               	movlb	0	; () banked
  4648  0109DC  6FB8               	movwf	(strcpy@from+1)& (0+255),b
  4649  0109DE  ECCB  F099         	call	_strcpy	;wreg free
  4650                           
  4651                           ;My_RTCC.c: 228: display_dec(line0, tm->YY, tm->edit.flag.YY);
  4652  0109E2  C0ED  F0E3         	movff	display_time_0802@line0,display_dec@str
  4653  0109E6  C0EE  F0E4         	movff	display_time_0802@line0+1,display_dec@str+1
  4654  0109EA  0100               	movlb	0	; () banked
  4655  0109EC  EE20 F00A          	lfsr	2,10
  4656  0109F0  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4657  0109F2  26D9               	addwf	fsr2l,f,c
  4658  0109F4  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4659  0109F6  22DA               	addwfc	fsr2h,f,c
  4660  0109F8  50DF               	movf	indf2,w,c
  4661  0109FA  0100               	movlb	0	; () banked
  4662  0109FC  6FE5               	movwf	display_dec@dec& (0+255),b
  4663  0109FE  0100               	movlb	0	; () banked
  4664  010A00  EE20 F00D          	lfsr	2,13
  4665  010A04  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4666  010A06  26D9               	addwf	fsr2l,f,c
  4667  010A08  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4668  010A0A  22DA               	addwfc	fsr2h,f,c
  4669  010A0C  0E00               	movlw	0
  4670  010A0E  BADF               	btfsc	indf2,5,c
  4671  010A10  0E01               	movlw	1
  4672  010A12  0100               	movlb	0	; () banked
  4673  010A14  6FE6               	movwf	display_dec@edit& (0+255),b
  4674  010A16  EC0E  F098         	call	_display_dec	;wreg free
  4675                           
  4676                           ;My_RTCC.c: 229: strcat(line0, "/");
  4677  010A1A  C0ED  F0B5         	movff	display_time_0802@line0,strcat@to
  4678  010A1E  C0EE  F0B6         	movff	display_time_0802@line0+1,strcat@to+1
  4679  010A22  0EFA               	movlw	low STR_4
  4680  010A24  0100               	movlb	0	; () banked
  4681  010A26  6FB7               	movwf	strcat@from& (0+255),b
  4682  010A28  0EFF               	movlw	high STR_4
  4683  010A2A  0100               	movlb	0	; () banked
  4684  010A2C  6FB8               	movwf	(strcat@from+1)& (0+255),b
  4685  010A2E  EC43  F098         	call	_strcat	;wreg free
  4686                           
  4687                           ;My_RTCC.c: 230: display_dec(line0, tm->MM, tm->edit.flag.MM);
  4688  010A32  C0ED  F0E3         	movff	display_time_0802@line0,display_dec@str
  4689  010A36  C0EE  F0E4         	movff	display_time_0802@line0+1,display_dec@str+1
  4690  010A3A  0100               	movlb	0	; () banked
  4691  010A3C  EE20 F009          	lfsr	2,9
  4692  010A40  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4693  010A42  26D9               	addwf	fsr2l,f,c
  4694  010A44  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4695  010A46  22DA               	addwfc	fsr2h,f,c
  4696  010A48  50DF               	movf	indf2,w,c
  4697  010A4A  0100               	movlb	0	; () banked
  4698  010A4C  6FE5               	movwf	display_dec@dec& (0+255),b
  4699  010A4E  0100               	movlb	0	; () banked
  4700  010A50  EE20 F00D          	lfsr	2,13
  4701  010A54  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4702  010A56  26D9               	addwf	fsr2l,f,c
  4703  010A58  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4704  010A5A  22DA               	addwfc	fsr2h,f,c
  4705  010A5C  0E00               	movlw	0
  4706  010A5E  B8DF               	btfsc	indf2,4,c
  4707  010A60  0E01               	movlw	1
  4708  010A62  0100               	movlb	0	; () banked
  4709  010A64  6FE6               	movwf	display_dec@edit& (0+255),b
  4710  010A66  EC0E  F098         	call	_display_dec	;wreg free
  4711                           
  4712                           ;My_RTCC.c: 231: strcat(line0, "/");
  4713  010A6A  C0ED  F0B5         	movff	display_time_0802@line0,strcat@to
  4714  010A6E  C0EE  F0B6         	movff	display_time_0802@line0+1,strcat@to+1
  4715  010A72  0EFA               	movlw	low STR_4
  4716  010A74  0100               	movlb	0	; () banked
  4717  010A76  6FB7               	movwf	strcat@from& (0+255),b
  4718  010A78  0EFF               	movlw	high STR_4
  4719  010A7A  0100               	movlb	0	; () banked
  4720  010A7C  6FB8               	movwf	(strcat@from+1)& (0+255),b
  4721  010A7E  EC43  F098         	call	_strcat	;wreg free
  4722                           
  4723                           ;My_RTCC.c: 232: display_dec(line0, tm->DD, tm->edit.flag.DD);
  4724  010A82  C0ED  F0E3         	movff	display_time_0802@line0,display_dec@str
  4725  010A86  C0EE  F0E4         	movff	display_time_0802@line0+1,display_dec@str+1
  4726  010A8A  0100               	movlb	0	; () banked
  4727  010A8C  EE20 F008          	lfsr	2,8
  4728  010A90  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4729  010A92  26D9               	addwf	fsr2l,f,c
  4730  010A94  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4731  010A96  22DA               	addwfc	fsr2h,f,c
  4732  010A98  50DF               	movf	indf2,w,c
  4733  010A9A  0100               	movlb	0	; () banked
  4734  010A9C  6FE5               	movwf	display_dec@dec& (0+255),b
  4735  010A9E  0100               	movlb	0	; () banked
  4736  010AA0  EE20 F00D          	lfsr	2,13
  4737  010AA4  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4738  010AA6  26D9               	addwf	fsr2l,f,c
  4739  010AA8  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4740  010AAA  22DA               	addwfc	fsr2h,f,c
  4741  010AAC  0E00               	movlw	0
  4742  010AAE  B6DF               	btfsc	indf2,3,c
  4743  010AB0  0E01               	movlw	1
  4744  010AB2  0100               	movlb	0	; () banked
  4745  010AB4  6FE6               	movwf	display_dec@edit& (0+255),b
  4746  010AB6  EC0E  F098         	call	_display_dec	;wreg free
  4747                           
  4748                           ;My_RTCC.c: 234: strcpy(line1, "");
  4749  010ABA  C0EF  F0B5         	movff	display_time_0802@line1,strcpy@to
  4750  010ABE  C0F0  F0B6         	movff	display_time_0802@line1+1,strcpy@to+1
  4751  010AC2  0EE8               	movlw	low (STR_19+3)
  4752  010AC4  0100               	movlb	0	; () banked
  4753  010AC6  6FB7               	movwf	strcpy@from& (0+255),b
  4754  010AC8  0EFF               	movlw	high (STR_19+3)
  4755  010ACA  0100               	movlb	0	; () banked
  4756  010ACC  6FB8               	movwf	(strcpy@from+1)& (0+255),b
  4757  010ACE  ECCB  F099         	call	_strcpy	;wreg free
  4758                           
  4759                           ;My_RTCC.c: 235: display_dec(line1, tm->hh, tm->edit.flag.hh);
  4760  010AD2  C0EF  F0E3         	movff	display_time_0802@line1,display_dec@str
  4761  010AD6  C0F0  F0E4         	movff	display_time_0802@line1+1,display_dec@str+1
  4762  010ADA  0100               	movlb	0	; () banked
  4763  010ADC  EE20 F006          	lfsr	2,6
  4764  010AE0  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4765  010AE2  26D9               	addwf	fsr2l,f,c
  4766  010AE4  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4767  010AE6  22DA               	addwfc	fsr2h,f,c
  4768  010AE8  50DF               	movf	indf2,w,c
  4769  010AEA  0100               	movlb	0	; () banked
  4770  010AEC  6FE5               	movwf	display_dec@dec& (0+255),b
  4771  010AEE  0100               	movlb	0	; () banked
  4772  010AF0  EE20 F00D          	lfsr	2,13
  4773  010AF4  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4774  010AF6  26D9               	addwf	fsr2l,f,c
  4775  010AF8  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4776  010AFA  22DA               	addwfc	fsr2h,f,c
  4777  010AFC  0E00               	movlw	0
  4778  010AFE  B4DF               	btfsc	indf2,2,c
  4779  010B00  0E01               	movlw	1
  4780  010B02  0100               	movlb	0	; () banked
  4781  010B04  6FE6               	movwf	display_dec@edit& (0+255),b
  4782  010B06  EC0E  F098         	call	_display_dec	;wreg free
  4783                           
  4784                           ;My_RTCC.c: 236: if (now.colon) strcat(line1, ":");
  4785  010B0A  0100               	movlb	0	; () banked
  4786  010B0C  51A0               	movf	(_now+11)& (0+255),w,b
  4787  010B0E  B4D8               	btfsc	status,2,c
  4788  010B10  D00D               	goto	l9610
  4789                           
  4790                           ; BSR set to: 0
  4791  010B12  C0EF  F0B5         	movff	display_time_0802@line1,strcat@to
  4792  010B16  C0F0  F0B6         	movff	display_time_0802@line1+1,strcat@to+1
  4793  010B1A  0EFC               	movlw	low STR_7
  4794  010B1C  0100               	movlb	0	; () banked
  4795  010B1E  6FB7               	movwf	strcat@from& (0+255),b
  4796  010B20  0EFF               	movlw	high STR_7
  4797  010B22  0100               	movlb	0	; () banked
  4798  010B24  6FB8               	movwf	(strcat@from+1)& (0+255),b
  4799  010B26  EC43  F098         	call	_strcat	;wreg free
  4800  010B2A  D00C               	goto	l9612
  4801  010B2C                     l9610:
  4802                           
  4803                           ;My_RTCC.c: 237: else strcat(line1, " ");
  4804  010B2C  C0EF  F0B5         	movff	display_time_0802@line1,strcat@to
  4805  010B30  C0F0  F0B6         	movff	display_time_0802@line1+1,strcat@to+1
  4806  010B34  0EB1               	movlw	low (STR_15+7)
  4807  010B36  0100               	movlb	0	; () banked
  4808  010B38  6FB7               	movwf	strcat@from& (0+255),b
  4809  010B3A  0EFF               	movlw	high (STR_15+7)
  4810  010B3C  0100               	movlb	0	; () banked
  4811  010B3E  6FB8               	movwf	(strcat@from+1)& (0+255),b
  4812  010B40  EC43  F098         	call	_strcat	;wreg free
  4813  010B44                     l9612:
  4814                           
  4815                           ;My_RTCC.c: 238: display_dec(line1, tm->mm, tm->edit.flag.mm);
  4816  010B44  C0EF  F0E3         	movff	display_time_0802@line1,display_dec@str
  4817  010B48  C0F0  F0E4         	movff	display_time_0802@line1+1,display_dec@str+1
  4818  010B4C  0100               	movlb	0	; () banked
  4819  010B4E  EE20 F005          	lfsr	2,5
  4820  010B52  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4821  010B54  26D9               	addwf	fsr2l,f,c
  4822  010B56  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4823  010B58  22DA               	addwfc	fsr2h,f,c
  4824  010B5A  50DF               	movf	indf2,w,c
  4825  010B5C  0100               	movlb	0	; () banked
  4826  010B5E  6FE5               	movwf	display_dec@dec& (0+255),b
  4827  010B60  0100               	movlb	0	; () banked
  4828  010B62  EE20 F00D          	lfsr	2,13
  4829  010B66  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4830  010B68  26D9               	addwf	fsr2l,f,c
  4831  010B6A  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4832  010B6C  22DA               	addwfc	fsr2h,f,c
  4833  010B6E  0E00               	movlw	0
  4834  010B70  B2DF               	btfsc	indf2,1,c
  4835  010B72  0E01               	movlw	1
  4836  010B74  0100               	movlb	0	; () banked
  4837  010B76  6FE6               	movwf	display_dec@edit& (0+255),b
  4838  010B78  EC0E  F098         	call	_display_dec	;wreg free
  4839                           
  4840                           ;My_RTCC.c: 239: strcat(line1, "-");
  4841  010B7C  C0EF  F0B5         	movff	display_time_0802@line1,strcat@to
  4842  010B80  C0F0  F0B6         	movff	display_time_0802@line1+1,strcat@to+1
  4843  010B84  0EF8               	movlw	low STR_9
  4844  010B86  0100               	movlb	0	; () banked
  4845  010B88  6FB7               	movwf	strcat@from& (0+255),b
  4846  010B8A  0EFF               	movlw	high STR_9
  4847  010B8C  0100               	movlb	0	; () banked
  4848  010B8E  6FB8               	movwf	(strcat@from+1)& (0+255),b
  4849  010B90  EC43  F098         	call	_strcat	;wreg free
  4850                           
  4851                           ;My_RTCC.c: 240: display_dec(line1, tm->ss, tm->edit.flag.ss);
  4852  010B94  C0EF  F0E3         	movff	display_time_0802@line1,display_dec@str
  4853  010B98  C0F0  F0E4         	movff	display_time_0802@line1+1,display_dec@str+1
  4854  010B9C  0100               	movlb	0	; () banked
  4855  010B9E  EE20 F004          	lfsr	2,4
  4856  010BA2  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4857  010BA4  26D9               	addwf	fsr2l,f,c
  4858  010BA6  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4859  010BA8  22DA               	addwfc	fsr2h,f,c
  4860  010BAA  50DF               	movf	indf2,w,c
  4861  010BAC  0100               	movlb	0	; () banked
  4862  010BAE  6FE5               	movwf	display_dec@dec& (0+255),b
  4863  010BB0  0100               	movlb	0	; () banked
  4864  010BB2  EE20 F00D          	lfsr	2,13
  4865  010BB6  51EB               	movf	display_time_0802@tm& (0+255),w,b
  4866  010BB8  26D9               	addwf	fsr2l,f,c
  4867  010BBA  51EC               	movf	(display_time_0802@tm+1)& (0+255),w,b
  4868  010BBC  22DA               	addwfc	fsr2h,f,c
  4869  010BBE  0E00               	movlw	0
  4870  010BC0  B0DF               	btfsc	indf2,0,c
  4871  010BC2  0E01               	movlw	1
  4872  010BC4  0100               	movlb	0	; () banked
  4873  010BC6  6FE6               	movwf	display_dec@edit& (0+255),b
  4874  010BC8  EC0E  F098         	call	_display_dec	;wreg free
  4875  010BCC  0012               	return		;funcret
  4876  010BCE                     __end_of_display_time_0802:
  4877                           	opt stack 0
  4878                           tblptru	equ	0xFF8
  4879                           tblptrh	equ	0xFF7
  4880                           tblptrl	equ	0xFF6
  4881                           tablat	equ	0xFF5
  4882                           prodl	equ	0xFF3
  4883                           intcon	equ	0xFF2
  4884                           intcon2	equ	0xFF1
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           postdec1	equ	0xFE5
  4888                           fsr1h	equ	0xFE2
  4889                           fsr1l	equ	0xFE1
  4890                           indf2	equ	0xFDF
  4891                           postinc2	equ	0xFDE
  4892                           postdec2	equ	0xFDD
  4893                           fsr2h	equ	0xFDA
  4894                           fsr2l	equ	0xFD9
  4895                           status	equ	0xFD8
  4896                           
  4897 ;; *************** function _strcpy *****************
  4898 ;; Defined at:
  4899 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  to              2    0[BANK0 ] PTR unsigned char 
  4902 ;;		 -> main@s(40), 
  4903 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  4904 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  4907 ;;		 -> main@s(40), 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2    0[BANK0 ] PTR unsigned char 
  4910 ;; Registers used:
  4911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4921 ;;Total ram usage:        6 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    4
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_display_time_0802
  4928 ;;		_display_time_1602
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text21
  4933  013396                     __ptext21:
  4934                           	opt stack 0
  4935  013396                     _strcpy:
  4936                           	opt stack 25
  4937                           
  4938                           ;incstack = 0
  4939  013396  C0B5  F0B9         	movff	strcpy@to,strcpy@cp
  4940  01339A  C0B6  F0BA         	movff	strcpy@to+1,strcpy@cp+1
  4941  01339E  D006               	goto	l9484
  4942  0133A0                     l9482:
  4943  0133A0  0100               	movlb	0	; () banked
  4944  0133A2  4BB9               	infsnz	strcpy@cp& (0+255),f,b
  4945  0133A4  2BBA               	incf	(strcpy@cp+1)& (0+255),f,b
  4946  0133A6  0100               	movlb	0	; () banked
  4947  0133A8  4BB7               	infsnz	strcpy@from& (0+255),f,b
  4948  0133AA  2BB8               	incf	(strcpy@from+1)& (0+255),f,b
  4949  0133AC                     l9484:
  4950  0133AC  C0B7  FFF6         	movff	strcpy@from,tblptrl
  4951  0133B0  C0B8  FFF7         	movff	strcpy@from+1,tblptrh
  4952  0133B4                     	if	0	;tblptru may be non-zero
  4953  0133B4                     	endif
  4954  0133B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4955  0133B4  0E00               	movlw	low (__mediumconst shr (0+16))
  4956  0133B6  6EF8               	movwf	tblptru,c
  4957  0133B8                     	endif
  4958  0133B8  C0B9  FFD9         	movff	strcpy@cp,fsr2l
  4959  0133BC  C0BA  FFDA         	movff	strcpy@cp+1,fsr2h
  4960  0133C0  0008               	tblrd		*
  4961  0133C2  CFF5 FFDF          	movff	tablat,indf2
  4962  0133C6  50DF               	movf	indf2,w,c
  4963  0133C8  B4D8               	btfsc	status,2,c
  4964  0133CA  0012               	return	
  4965  0133CC  D7E9               	goto	l9482
  4966  0133CE                     __end_of_strcpy:
  4967                           	opt stack 0
  4968                           tblptru	equ	0xFF8
  4969                           tblptrh	equ	0xFF7
  4970                           tblptrl	equ	0xFF6
  4971                           tablat	equ	0xFF5
  4972                           prodl	equ	0xFF3
  4973                           intcon	equ	0xFF2
  4974                           intcon2	equ	0xFF1
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           postdec1	equ	0xFE5
  4978                           fsr1h	equ	0xFE2
  4979                           fsr1l	equ	0xFE1
  4980                           indf2	equ	0xFDF
  4981                           postinc2	equ	0xFDE
  4982                           postdec2	equ	0xFDD
  4983                           fsr2h	equ	0xFDA
  4984                           fsr2l	equ	0xFD9
  4985                           status	equ	0xFD8
  4986                           
  4987 ;; *************** function _display_dec *****************
  4988 ;; Defined at:
  4989 ;;		line 217 in file "../My_library/My_RTCC.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  str             2   46[BANK0 ] PTR unsigned char 
  4992 ;;		 -> main@s(40), 
  4993 ;;  dec             1   48[BANK0 ] unsigned char 
  4994 ;;  edit            1   49[BANK0 ] unsigned char 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  s               4   50[BANK0 ] unsigned char [4]
  4997 ;; Return value:  Size  Location     Type
  4998 ;;		None               void
  4999 ;; Registers used:
  5000 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;Total ram usage:        8 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    6
  5013 ;; This function calls:
  5014 ;;		_sprintf
  5015 ;;		_strcat
  5016 ;; This function is called by:
  5017 ;;		_display_time_0802
  5018 ;;		_display_time_1602
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text22
  5023  01301C                     __ptext22:
  5024                           	opt stack 0
  5025  01301C                     _display_dec:
  5026                           	opt stack 23
  5027                           
  5028                           ;My_RTCC.c: 218: char s[4];
  5029                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
  5030                           
  5031                           ;incstack = 0
  5032  01301C  0EE7               	movlw	low display_dec@s
  5033  01301E  0100               	movlb	0	; () banked
  5034  013020  6FC0               	movwf	sprintf@sp& (0+255),b
  5035  013022  0E00               	movlw	high display_dec@s
  5036  013024  0100               	movlb	0	; () banked
  5037  013026  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  5038  013028  0EE0               	movlw	low STR_1
  5039  01302A  0100               	movlb	0	; () banked
  5040  01302C  6FC2               	movwf	sprintf@f& (0+255),b
  5041  01302E  0EFF               	movlw	high STR_1
  5042  013030  0100               	movlb	0	; () banked
  5043  013032  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  5044  013034  C0E5  F0C4         	movff	display_dec@dec,?_sprintf+4
  5045  013038  0100               	movlb	0	; () banked
  5046  01303A  6BC5               	clrf	(?_sprintf+5)& (0+255),b
  5047  01303C  EC00  F080         	call	_sprintf	;wreg free
  5048                           
  5049                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
  5050  013040  0100               	movlb	0	; () banked
  5051  013042  51E6               	movf	display_dec@edit& (0+255),w,b
  5052  013044  0100               	movlb	0	; () banked
  5053  013046  B4D8               	btfsc	status,2,c
  5054  013048  D011               	goto	l9478
  5055                           
  5056                           ; BSR set to: 0
  5057  01304A  0100               	movlb	0	; () banked
  5058  01304C  51A1               	movf	(_now+12)& (0+255),w,b
  5059  01304E  B4D8               	btfsc	status,2,c
  5060  013050  D00D               	goto	l9478
  5061                           
  5062                           ; BSR set to: 0
  5063  013052  C0E3  F0B5         	movff	display_dec@str,strcat@to
  5064  013056  C0E4  F0B6         	movff	display_dec@str+1,strcat@to+1
  5065  01305A  0EB0               	movlw	low (STR_15+6)
  5066  01305C  0100               	movlb	0	; () banked
  5067  01305E  6FB7               	movwf	strcat@from& (0+255),b
  5068  013060  0EFF               	movlw	high (STR_15+6)
  5069  013062  0100               	movlb	0	; () banked
  5070  013064  6FB8               	movwf	(strcat@from+1)& (0+255),b
  5071  013066  EC43  F098         	call	_strcat	;wreg free
  5072  01306A  0012               	return	
  5073  01306C                     l9478:
  5074                           
  5075                           ;My_RTCC.c: 221: else strcat(str, s);
  5076  01306C  C0E3  F0B5         	movff	display_dec@str,strcat@to
  5077  013070  C0E4  F0B6         	movff	display_dec@str+1,strcat@to+1
  5078  013074  0EE7               	movlw	low display_dec@s
  5079  013076  0100               	movlb	0	; () banked
  5080  013078  6FB7               	movwf	strcat@from& (0+255),b
  5081  01307A  0E00               	movlw	high display_dec@s
  5082  01307C  0100               	movlb	0	; () banked
  5083  01307E  6FB8               	movwf	(strcat@from+1)& (0+255),b
  5084  013080  EC43  F098         	call	_strcat	;wreg free
  5085  013084  0012               	return	
  5086  013086                     __end_of_display_dec:
  5087                           	opt stack 0
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           intcon2	equ	0xFF1
  5095                           postinc0	equ	0xFEE
  5096                           wreg	equ	0xFE8
  5097                           postdec1	equ	0xFE5
  5098                           fsr1h	equ	0xFE2
  5099                           fsr1l	equ	0xFE1
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _strcat *****************
  5108 ;; Defined at:
  5109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5112 ;;		 -> main@s(40), 
  5113 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5114 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
  5115 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
  5116 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  5117 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5120 ;;		 -> main@s(40), 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  2    0[BANK0 ] PTR unsigned char 
  5123 ;; Registers used:
  5124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;Total ram usage:        6 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    4
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_display_dec
  5141 ;;		_display_time_0802
  5142 ;;		_display_time_1602
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text23
  5147  013086                     __ptext23:
  5148                           	opt stack 0
  5149  013086                     _strcat:
  5150                           	opt stack 25
  5151                           
  5152                           ;incstack = 0
  5153  013086  C0B5  F0B9         	movff	strcat@to,strcat@cp
  5154  01308A  C0B6  F0BA         	movff	strcat@to+1,strcat@cp+1
  5155  01308E  D003               	goto	l9212
  5156  013090                     l9210:
  5157  013090  0100               	movlb	0	; () banked
  5158  013092  4BB9               	infsnz	strcat@cp& (0+255),f,b
  5159  013094  2BBA               	incf	(strcat@cp+1)& (0+255),f,b
  5160  013096                     l9212:
  5161  013096  C0B9  FFD9         	movff	strcat@cp,fsr2l
  5162  01309A  C0BA  FFDA         	movff	strcat@cp+1,fsr2h
  5163  01309E  50DF               	movf	indf2,w,c
  5164  0130A0  B4D8               	btfsc	status,2,c
  5165  0130A2  D007               	goto	l9216
  5166  0130A4  D7F5               	goto	l9210
  5167  0130A6                     l9214:
  5168  0130A6  0100               	movlb	0	; () banked
  5169  0130A8  4BB9               	infsnz	strcat@cp& (0+255),f,b
  5170  0130AA  2BBA               	incf	(strcat@cp+1)& (0+255),f,b
  5171  0130AC  0100               	movlb	0	; () banked
  5172  0130AE  4BB7               	infsnz	strcat@from& (0+255),f,b
  5173  0130B0  2BB8               	incf	(strcat@from+1)& (0+255),f,b
  5174  0130B2                     l9216:
  5175  0130B2  C0B7  FFF6         	movff	strcat@from,tblptrl
  5176  0130B6  C0B8  FFF7         	movff	strcat@from+1,tblptrh
  5177  0130BA  0E00               	movlw	low (__mediumconst shr (0+16))
  5178  0130BC  6EF8               	movwf	tblptru,c
  5179  0130BE  C0B9  FFD9         	movff	strcat@cp,fsr2l
  5180  0130C2  C0BA  FFDA         	movff	strcat@cp+1,fsr2h
  5181  0130C6  0E0E               	movlw	(high __ramtop+-1)
  5182  0130C8  64F7               	cpfsgt	tblptrh,c
  5183  0130CA  D003               	bra	u9307
  5184  0130CC  0008               	tblrd		*
  5185  0130CE  50F5               	movf	tablat,w,c
  5186  0130D0  D005               	bra	u9300
  5187  0130D2                     u9307:
  5188  0130D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5189  0130D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5190  0130DA  50EF               	movf	indf0,w,c
  5191  0130DC                     u9300:
  5192  0130DC  6EDF               	movwf	indf2,c
  5193  0130DE  50DF               	movf	indf2,w,c
  5194  0130E0  B4D8               	btfsc	status,2,c
  5195  0130E2  0012               	return	
  5196  0130E4  D7E0               	goto	l9214
  5197  0130E6                     __end_of_strcat:
  5198                           	opt stack 0
  5199                           tblptru	equ	0xFF8
  5200                           tblptrh	equ	0xFF7
  5201                           tblptrl	equ	0xFF6
  5202                           tablat	equ	0xFF5
  5203                           prodl	equ	0xFF3
  5204                           intcon	equ	0xFF2
  5205                           intcon2	equ	0xFF1
  5206                           indf0	equ	0xFEF
  5207                           postinc0	equ	0xFEE
  5208                           fsr0h	equ	0xFEA
  5209                           fsr0l	equ	0xFE9
  5210                           wreg	equ	0xFE8
  5211                           postdec1	equ	0xFE5
  5212                           fsr1h	equ	0xFE2
  5213                           fsr1l	equ	0xFE1
  5214                           indf2	equ	0xFDF
  5215                           postinc2	equ	0xFDE
  5216                           postdec2	equ	0xFDD
  5217                           fsr2h	equ	0xFDA
  5218                           fsr2l	equ	0xFD9
  5219                           status	equ	0xFD8
  5220                           
  5221 ;; *************** function _sprintf *****************
  5222 ;; Defined at:
  5223 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  sp              2   11[BANK0 ] PTR unsigned char 
  5226 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  5227 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  5228 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  tmpval          4    0        struct .
  5231 ;;  width           2   44[BANK0 ] int 
  5232 ;;  len             2   40[BANK0 ] unsigned int 
  5233 ;;  val             2   38[BANK0 ] unsigned int 
  5234 ;;  cp              2   36[BANK0 ] PTR const unsigned char 
  5235 ;;		 -> STR_43(7), weekday_3char(28), 
  5236 ;;  ap              2   34[BANK0 ] PTR void [1]
  5237 ;;		 -> ?_sprintf(2), 
  5238 ;;  c               1   43[BANK0 ] char 
  5239 ;;  flag            1   42[BANK0 ] unsigned char 
  5240 ;;  prec            1   33[BANK0 ] char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  2   11[BANK0 ] int 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5250 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5251 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5254 ;;Total ram usage:       35 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    5
  5257 ;; This function calls:
  5258 ;;		___lwdiv
  5259 ;;		___lwmod
  5260 ;;		___wmul
  5261 ;;		_isdigit
  5262 ;; This function is called by:
  5263 ;;		_display_dec
  5264 ;;		_print_time_dec
  5265 ;;		_print_time
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text24
  5270  010000                     __ptext24:
  5271                           	opt stack 0
  5272  010000                     _sprintf:
  5273                           	opt stack 23
  5274                           
  5275                           ;doprnt.c: 494: va_list ap;
  5276                           ;doprnt.c: 499: signed char c;
  5277                           ;doprnt.c: 501: int width;
  5278                           ;doprnt.c: 506: signed char prec;
  5279                           ;doprnt.c: 508: unsigned char flag;
  5280                           ;doprnt.c: 523: union {
  5281                           ;doprnt.c: 524: unsigned long vd;
  5282                           ;doprnt.c: 525: double integ;
  5283                           ;doprnt.c: 526: } tmpval;
  5284                           ;doprnt.c: 528: unsigned int val;
  5285                           ;doprnt.c: 529: unsigned len;
  5286                           ;doprnt.c: 530: const char * cp;
  5287                           ;doprnt.c: 533: *ap = __va_start();
  5288                           
  5289                           ;incstack = 0
  5290  010000  0EC4               	movlw	low (?_sprintf+4)
  5291  010002  0100               	movlb	0	; () banked
  5292  010004  6FD7               	movwf	sprintf@ap& (0+255),b
  5293  010006  0E00               	movlw	high (?_sprintf+4)
  5294  010008  0100               	movlb	0	; () banked
  5295  01000A  6FD8               	movwf	(sprintf@ap+1)& (0+255),b
  5296                           
  5297                           ;doprnt.c: 536: while(c = *f++) {
  5298  01000C  D20F               	goto	l9202
  5299  01000E                     l9062:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;doprnt.c: 538: if(c != '%')
  5303  01000E  0E25               	movlw	37
  5304  010010  0100               	movlb	0	; () banked
  5305  010012  19E0               	xorwf	sprintf@c& (0+255),w,b
  5306  010014  B4D8               	btfsc	status,2,c
  5307  010016  D00A               	goto	l9068
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;doprnt.c: 540: {
  5311                           ;doprnt.c: 541: ((*sp++ = (c)));
  5312  010018  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5313  01001C  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5314  010020  C0E0  FFDF         	movff	sprintf@c,indf2
  5315                           
  5316                           ; BSR set to: 0
  5317  010024  0100               	movlb	0	; () banked
  5318  010026  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5319  010028  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5320                           
  5321                           ;doprnt.c: 542: continue;
  5322  01002A  D200               	goto	l9202
  5323  01002C                     l9068:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;doprnt.c: 543: }
  5327                           ;doprnt.c: 546: width = 0;
  5328  01002C  0E00               	movlw	0
  5329  01002E  0100               	movlb	0	; () banked
  5330  010030  6FE2               	movwf	(sprintf@width+1)& (0+255),b
  5331  010032  0E00               	movlw	0
  5332  010034  6FE1               	movwf	sprintf@width& (0+255),b
  5333                           
  5334                           ;doprnt.c: 548: flag = 0;
  5335  010036  0E00               	movlw	0
  5336  010038  0100               	movlb	0	; () banked
  5337  01003A  6FDF               	movwf	sprintf@flag& (0+255),b
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;doprnt.c: 551: switch(*f) {
  5341                           
  5342                           ;doprnt.c: 550: for(;;) {
  5343  01003C  D005               	goto	l9074
  5344  01003E                     l9070:
  5345                           
  5346                           ;doprnt.c: 580: flag |= 0x04;
  5347  01003E  0100               	movlb	0	; () banked
  5348  010040  85DF               	bsf	sprintf@flag& (0+255),2,b
  5349                           
  5350                           ;doprnt.c: 581: f++;
  5351  010042  0100               	movlb	0	; () banked
  5352  010044  4BC2               	infsnz	sprintf@f& (0+255),f,b
  5353  010046  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  5354  010048                     l9074:
  5355  010048  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5356  01004C  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5357  010050                     	if	0	;tblptru may be non-zero
  5358  010050                     	endif
  5359  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5360  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  5361  010052  6EF8               	movwf	tblptru,c
  5362  010054                     	endif
  5363  010054  0008               	tblrd		*
  5364  010056  50F5               	movf	tablat,w,c
  5365                           
  5366                           ; Switch size 1, requested type "space"
  5367                           ; Number of cases is 1, Range of values is 48 to 48
  5368                           ; switch strategies available:
  5369                           ; Name         Instructions Cycles
  5370                           ; simple_byte            4     3 (average)
  5371                           ;	Chosen strategy is simple_byte
  5372  010058  0A30               	xorlw	48	; case 48
  5373  01005A  B4D8               	btfsc	status,2,c
  5374  01005C  D7F0               	goto	l9070
  5375                           
  5376                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5377                           
  5378                           ;doprnt.c: 586: }
  5379                           
  5380                           ;doprnt.c: 585: break;
  5381  01005E  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5382  010062  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5383  010066                     	if	0	;tblptru may be non-zero
  5384  010066                     	endif
  5385  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5386  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  5387  010068  6EF8               	movwf	tblptru,c
  5388  01006A                     	endif
  5389  01006A  0008               	tblrd		*
  5390  01006C  50F5               	movf	tablat,w,c
  5391  01006E  ECFF  F09A         	call	_isdigit
  5392  010072  A0D8               	btfss	status,0,c
  5393  010074  D0CB               	goto	l9124
  5394                           
  5395                           ;doprnt.c: 598: width = 0;
  5396  010076  0E00               	movlw	0
  5397  010078  0100               	movlb	0	; () banked
  5398  01007A  6FE2               	movwf	(sprintf@width+1)& (0+255),b
  5399  01007C  0E00               	movlw	0
  5400  01007E  6FE1               	movwf	sprintf@width& (0+255),b
  5401  010080                     l9080:
  5402                           
  5403                           ;doprnt.c: 600: width *= 10;
  5404  010080  C0E1  F0B5         	movff	sprintf@width,___wmul@multiplier
  5405  010084  C0E2  F0B6         	movff	sprintf@width+1,___wmul@multiplier+1
  5406  010088  0E00               	movlw	0
  5407  01008A  0100               	movlb	0	; () banked
  5408  01008C  6FB8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5409  01008E  0E0A               	movlw	10
  5410  010090  6FB7               	movwf	___wmul@multiplicand& (0+255),b
  5411  010092  EC3A  F09A         	call	___wmul	;wreg free
  5412  010096  C0B5  F0E1         	movff	?___wmul,sprintf@width
  5413  01009A  C0B6  F0E2         	movff	?___wmul+1,sprintf@width+1
  5414                           
  5415                           ;doprnt.c: 601: width += *f++ - '0';
  5416  01009E  0ED0               	movlw	208
  5417  0100A0  0100               	movlb	0	; () banked
  5418  0100A2  6FD2               	movwf	??_sprintf& (0+255),b
  5419  0100A4  0EFF               	movlw	255
  5420  0100A6  0100               	movlb	0	; () banked
  5421  0100A8  6FD3               	movwf	(??_sprintf+1)& (0+255),b
  5422  0100AA  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5423  0100AE  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5424  0100B2                     	if	0	;tblptru may be non-zero
  5425  0100B2                     	endif
  5426  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5427  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  5428  0100B4  6EF8               	movwf	tblptru,c
  5429  0100B6                     	endif
  5430  0100B6  0008               	tblrd		*
  5431  0100B8  50F5               	movf	tablat,w,c
  5432  0100BA  0100               	movlb	0	; () banked
  5433  0100BC  6FD4               	movwf	(??_sprintf+2)& (0+255),b
  5434  0100BE  6BD5               	clrf	(??_sprintf+3)& (0+255),b
  5435  0100C0  0100               	movlb	0	; () banked
  5436  0100C2  51D2               	movf	??_sprintf& (0+255),w,b
  5437  0100C4  0100               	movlb	0	; () banked
  5438  0100C6  27D4               	addwf	(??_sprintf+2)& (0+255),f,b
  5439  0100C8  0100               	movlb	0	; () banked
  5440  0100CA  51D3               	movf	(??_sprintf+1)& (0+255),w,b
  5441  0100CC  0100               	movlb	0	; () banked
  5442  0100CE  23D5               	addwfc	(??_sprintf+3)& (0+255),f,b
  5443  0100D0  0100               	movlb	0	; () banked
  5444  0100D2  51D4               	movf	(??_sprintf+2)& (0+255),w,b
  5445  0100D4  0100               	movlb	0	; () banked
  5446  0100D6  27E1               	addwf	sprintf@width& (0+255),f,b
  5447  0100D8  0100               	movlb	0	; () banked
  5448  0100DA  51D5               	movf	(??_sprintf+3)& (0+255),w,b
  5449  0100DC  0100               	movlb	0	; () banked
  5450  0100DE  23E2               	addwfc	(sprintf@width+1)& (0+255),f,b
  5451                           
  5452                           ; BSR set to: 0
  5453  0100E0  0100               	movlb	0	; () banked
  5454  0100E2  4BC2               	infsnz	sprintf@f& (0+255),f,b
  5455  0100E4  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5459  0100E6  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5460  0100EA  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5461  0100EE                     	if	0	;tblptru may be non-zero
  5462  0100EE                     	endif
  5463  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5464  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5465  0100F0  6EF8               	movwf	tblptru,c
  5466  0100F2                     	endif
  5467  0100F2  0008               	tblrd		*
  5468  0100F4  50F5               	movf	tablat,w,c
  5469  0100F6  ECFF  F09A         	call	_isdigit
  5470  0100FA  A0D8               	btfss	status,0,c
  5471  0100FC  D087               	goto	l9124
  5472  0100FE  D7C0               	goto	l9080
  5473  010100                     l9088:
  5474                           
  5475                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5476  010100  C0D7  FFD9         	movff	sprintf@ap,fsr2l
  5477  010104  C0D8  FFDA         	movff	sprintf@ap+1,fsr2h
  5478  010108  CFDE F0D9          	movff	postinc2,sprintf@cp
  5479  01010C  CFDD F0DA          	movff	postdec2,sprintf@cp+1
  5480  010110  0E02               	movlw	2
  5481  010112  0100               	movlb	0	; () banked
  5482  010114  27D7               	addwf	sprintf@ap& (0+255),f,b
  5483  010116  0E00               	movlw	0
  5484  010118  23D8               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;doprnt.c: 740: if(!cp)
  5488  01011A  0100               	movlb	0	; () banked
  5489  01011C  51D9               	movf	sprintf@cp& (0+255),w,b
  5490  01011E  0100               	movlb	0	; () banked
  5491  010120  11DA               	iorwf	(sprintf@cp+1)& (0+255),w,b
  5492  010122  A4D8               	btfss	status,2,c
  5493  010124  D006               	goto	l9096
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;doprnt.c: 741: cp = "(null)";
  5497  010126  0EBB               	movlw	low STR_43
  5498  010128  0100               	movlb	0	; () banked
  5499  01012A  6FD9               	movwf	sprintf@cp& (0+255),b
  5500  01012C  0EFF               	movlw	high STR_43
  5501  01012E  0100               	movlb	0	; () banked
  5502  010130  6FDA               	movwf	(sprintf@cp+1)& (0+255),b
  5503  010132                     l9096:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;doprnt.c: 745: len = 0;
  5507  010132  0E00               	movlw	0
  5508  010134  0100               	movlb	0	; () banked
  5509  010136  6FDE               	movwf	(sprintf@len+1)& (0+255),b
  5510  010138  0E00               	movlw	0
  5511  01013A  6FDD               	movwf	sprintf@len& (0+255),b
  5512                           
  5513                           ;doprnt.c: 746: while(cp[len])
  5514  01013C  D003               	goto	l9100
  5515  01013E                     l9098:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;doprnt.c: 747: len++;
  5519  01013E  0100               	movlb	0	; () banked
  5520  010140  4BDD               	infsnz	sprintf@len& (0+255),f,b
  5521  010142  2BDE               	incf	(sprintf@len+1)& (0+255),f,b
  5522  010144                     l9100:
  5523                           
  5524                           ; BSR set to: 0
  5525  010144  0100               	movlb	0	; () banked
  5526  010146  51DD               	movf	sprintf@len& (0+255),w,b
  5527  010148  0100               	movlb	0	; () banked
  5528  01014A  25D9               	addwf	sprintf@cp& (0+255),w,b
  5529  01014C  0100               	movlb	0	; () banked
  5530  01014E  6FD2               	movwf	??_sprintf& (0+255),b
  5531  010150  0100               	movlb	0	; () banked
  5532  010152  51DE               	movf	(sprintf@len+1)& (0+255),w,b
  5533  010154  0100               	movlb	0	; () banked
  5534  010156  21DA               	addwfc	(sprintf@cp+1)& (0+255),w,b
  5535  010158  0100               	movlb	0	; () banked
  5536  01015A  6FD3               	movwf	(??_sprintf+1)& (0+255),b
  5537  01015C  C0D2  FFF6         	movff	??_sprintf,tblptrl
  5538  010160  C0D3  FFF7         	movff	??_sprintf+1,tblptrh
  5539  010164                     	if	0	;tblptru may be non-zero
  5540  010164                     	endif
  5541  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5542  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  5543  010166  6EF8               	movwf	tblptru,c
  5544  010168                     	endif
  5545  010168  0008               	tblrd		*
  5546  01016A  50F5               	movf	tablat,w,c
  5547  01016C  0900               	iorlw	0
  5548  01016E  A4D8               	btfss	status,2,c
  5549  010170  D7E6               	goto	l9098
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;doprnt.c: 757: if(width > len)
  5553                           
  5554                           ; BSR set to: 0
  5555  010172  0100               	movlb	0	; () banked
  5556  010174  51E1               	movf	sprintf@width& (0+255),w,b
  5557  010176  0100               	movlb	0	; () banked
  5558  010178  5DDD               	subwf	sprintf@len& (0+255),w,b
  5559  01017A  0100               	movlb	0	; () banked
  5560  01017C  51E2               	movf	(sprintf@width+1)& (0+255),w,b
  5561  01017E  0100               	movlb	0	; () banked
  5562  010180  59DE               	subwfb	(sprintf@len+1)& (0+255),w,b
  5563  010182  B0D8               	btfsc	status,0,c
  5564  010184  D009               	goto	l9106
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;doprnt.c: 758: width -= len;
  5568  010186  0100               	movlb	0	; () banked
  5569  010188  51DD               	movf	sprintf@len& (0+255),w,b
  5570  01018A  0100               	movlb	0	; () banked
  5571  01018C  5FE1               	subwf	sprintf@width& (0+255),f,b
  5572  01018E  0100               	movlb	0	; () banked
  5573  010190  51DE               	movf	(sprintf@len+1)& (0+255),w,b
  5574  010192  0100               	movlb	0	; () banked
  5575  010194  5BE2               	subwfb	(sprintf@width+1)& (0+255),f,b
  5576  010196  D00F               	goto	l9112
  5577  010198                     l9106:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;doprnt.c: 759: else
  5581                           ;doprnt.c: 760: width = 0;
  5582  010198  0E00               	movlw	0
  5583  01019A  0100               	movlb	0	; () banked
  5584  01019C  6FE2               	movwf	(sprintf@width+1)& (0+255),b
  5585  01019E  0E00               	movlw	0
  5586  0101A0  6FE1               	movwf	sprintf@width& (0+255),b
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;doprnt.c: 764: while(width--)
  5590  0101A2  D009               	goto	l9112
  5591  0101A4                     l9108:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;doprnt.c: 765: ((*sp++ = (' ')));
  5595  0101A4  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5596  0101A8  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5597  0101AC  0E20               	movlw	32
  5598  0101AE  6EDF               	movwf	indf2,c
  5599                           
  5600                           ; BSR set to: 0
  5601  0101B0  0100               	movlb	0	; () banked
  5602  0101B2  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5603  0101B4  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5604  0101B6                     l9112:
  5605                           
  5606                           ; BSR set to: 0
  5607  0101B6  0100               	movlb	0	; () banked
  5608  0101B8  07E1               	decf	sprintf@width& (0+255),f,b
  5609  0101BA  A0D8               	btfss	status,0,c
  5610  0101BC  07E2               	decf	(sprintf@width+1)& (0+255),f,b
  5611  0101BE  0100               	movlb	0	; () banked
  5612  0101C0  29E1               	incf	sprintf@width& (0+255),w,b
  5613  0101C2  E1F0               	bnz	l9108
  5614  0101C4  0100               	movlb	0	; () banked
  5615  0101C6  29E2               	incf	(sprintf@width+1)& (0+255),w,b
  5616  0101C8  B4D8               	btfsc	status,2,c
  5617  0101CA  D014               	goto	l9120
  5618  0101CC  D7EB               	goto	l9108
  5619  0101CE                     l9114:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  5623  0101CE  C0D9  FFF6         	movff	sprintf@cp,tblptrl
  5624  0101D2  C0DA  FFF7         	movff	sprintf@cp+1,tblptrh
  5625  0101D6                     	if	0	;tblptru may be non-zero
  5626  0101D6                     	endif
  5627  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5628  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  5629  0101D8  6EF8               	movwf	tblptru,c
  5630  0101DA                     	endif
  5631  0101DA  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5632  0101DE  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5633  0101E2  0008               	tblrd		*
  5634  0101E4  CFF5 FFDF          	movff	tablat,indf2
  5635                           
  5636                           ; BSR set to: 0
  5637  0101E8  0100               	movlb	0	; () banked
  5638  0101EA  4BD9               	infsnz	sprintf@cp& (0+255),f,b
  5639  0101EC  2BDA               	incf	(sprintf@cp+1)& (0+255),f,b
  5640                           
  5641                           ; BSR set to: 0
  5642  0101EE  0100               	movlb	0	; () banked
  5643  0101F0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5644  0101F2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5645  0101F4                     l9120:
  5646                           
  5647                           ; BSR set to: 0
  5648  0101F4  0100               	movlb	0	; () banked
  5649  0101F6  07DD               	decf	sprintf@len& (0+255),f,b
  5650  0101F8  A0D8               	btfss	status,0,c
  5651  0101FA  07DE               	decf	(sprintf@len+1)& (0+255),f,b
  5652  0101FC  0100               	movlb	0	; () banked
  5653  0101FE  29DD               	incf	sprintf@len& (0+255),w,b
  5654  010200  E1E6               	bnz	l9114
  5655  010202  0100               	movlb	0	; () banked
  5656  010204  29DE               	incf	(sprintf@len+1)& (0+255),w,b
  5657  010206  B4D8               	btfsc	status,2,c
  5658  010208  D111               	goto	l9202
  5659  01020A  D7E1               	goto	l9114
  5660  01020C                     l9124:
  5661  01020C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  5662  010210  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  5663  010214  0100               	movlb	0	; () banked
  5664  010216  4BC2               	infsnz	sprintf@f& (0+255),f,b
  5665  010218  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  5666  01021A                     	if	0	;tblptru may be non-zero
  5667  01021A                     	endif
  5668  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5669  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  5670  01021C  6EF8               	movwf	tblptru,c
  5671  01021E                     	endif
  5672  01021E  0008               	tblrd		*
  5673  010220  CFF5 F0E0          	movff	tablat,sprintf@c
  5674  010224  0100               	movlb	0	; () banked
  5675  010226  51E0               	movf	sprintf@c& (0+255),w,b
  5676                           
  5677                           ; Switch size 1, requested type "space"
  5678                           ; Number of cases is 4, Range of values is 0 to 115
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte           13     7 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  010228  0A00               	xorlw	0	; case 0
  5684  01022A  B4D8               	btfsc	status,2,c
  5685  01022C  D10F               	goto	l9204
  5686  01022E  0A64               	xorlw	100	; case 100
  5687  010230  B4D8               	btfsc	status,2,c
  5688  010232  D007               	goto	l9126
  5689  010234  0A0D               	xorlw	13	; case 105
  5690  010236  B4D8               	btfsc	status,2,c
  5691  010238  D004               	goto	l9126
  5692  01023A  0A1A               	xorlw	26	; case 115
  5693  01023C  B4D8               	btfsc	status,2,c
  5694  01023E  D760               	goto	l9088
  5695  010240  D0F5               	goto	l9202
  5696  010242                     l9126:
  5697                           
  5698                           ;doprnt.c: 1253: {
  5699                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5700  010242  C0D7  FFD9         	movff	sprintf@ap,fsr2l
  5701  010246  C0D8  FFDA         	movff	sprintf@ap+1,fsr2h
  5702  01024A  CFDE F0DB          	movff	postinc2,sprintf@val
  5703  01024E  CFDD F0DC          	movff	postdec2,sprintf@val+1
  5704  010252  0E02               	movlw	2
  5705  010254  0100               	movlb	0	; () banked
  5706  010256  27D7               	addwf	sprintf@ap& (0+255),f,b
  5707  010258  0E00               	movlw	0
  5708  01025A  23D8               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;doprnt.c: 1261: if((int)val < 0) {
  5712  01025C  0100               	movlb	0	; () banked
  5713  01025E  AFDC               	btfss	(sprintf@val+1)& (0+255),7,b
  5714  010260  D008               	goto	l9136
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;doprnt.c: 1262: flag |= 0x03;
  5718  010262  0E03               	movlw	3
  5719  010264  0100               	movlb	0	; () banked
  5720  010266  13DF               	iorwf	sprintf@flag& (0+255),f,b
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;doprnt.c: 1263: val = -val;
  5724  010268  0100               	movlb	0	; () banked
  5725  01026A  6DDB               	negf	sprintf@val& (0+255),b
  5726  01026C  1FDC               	comf	(sprintf@val+1)& (0+255),f,b
  5727  01026E  B0D8               	btfsc	status,0,c
  5728  010270  2BDC               	incf	(sprintf@val+1)& (0+255),f,b
  5729  010272                     l9136:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;doprnt.c: 1264: }
  5733                           ;doprnt.c: 1266: }
  5734                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5735  010272  0E01               	movlw	1
  5736  010274  0100               	movlb	0	; () banked
  5737  010276  6FE0               	movwf	sprintf@c& (0+255),b
  5738  010278                     l9138:
  5739                           
  5740                           ; BSR set to: 0
  5741  010278  0E05               	movlw	5
  5742  01027A  0100               	movlb	0	; () banked
  5743  01027C  19E0               	xorwf	sprintf@c& (0+255),w,b
  5744  01027E  B4D8               	btfsc	status,2,c
  5745  010280  D019               	goto	l9150
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;doprnt.c: 1306: if(val < dpowers[c])
  5749                           
  5750                           ; BSR set to: 0
  5751                           
  5752                           ; BSR set to: 0
  5753  010282  0100               	movlb	0	; () banked
  5754  010284  51E0               	movf	sprintf@c& (0+255),w,b
  5755  010286  0D02               	mullw	2
  5756  010288  0E6D               	movlw	low _dpowers
  5757  01028A  24F3               	addwf	prodl,w,c
  5758  01028C  6EF6               	movwf	tblptrl,c
  5759  01028E  0EFE               	movlw	high _dpowers
  5760  010290  20F4               	addwfc	prodh,w,c
  5761  010292  6EF7               	movwf	tblptrh,c
  5762  010294                     	if	1	;There are 3 active tblptr bytes
  5763  010294  6AF8               	clrf	tblptru,c
  5764  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  5765  010298  22F8               	addwfc	tblptru,f,c
  5766  01029A                     	endif
  5767  01029A  0009               	tblrd		*+
  5768  01029C  50F5               	movf	tablat,w,c
  5769  01029E  0100               	movlb	0	; () banked
  5770  0102A0  5DDB               	subwf	sprintf@val& (0+255),w,b
  5771  0102A2  0009               	tblrd		*+
  5772  0102A4  50F5               	movf	tablat,w,c
  5773  0102A6  0100               	movlb	0	; () banked
  5774  0102A8  59DC               	subwfb	(sprintf@val+1)& (0+255),w,b
  5775  0102AA  A0D8               	btfss	status,0,c
  5776  0102AC  D003               	goto	l9150
  5777                           
  5778                           ; BSR set to: 0
  5779                           
  5780                           ; BSR set to: 0
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;doprnt.c: 1307: break;
  5784  0102AE  0100               	movlb	0	; () banked
  5785  0102B0  2BE0               	incf	sprintf@c& (0+255),f,b
  5786  0102B2  D7E2               	goto	l9138
  5787  0102B4                     l9150:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5791  0102B4  0100               	movlb	0	; () banked
  5792  0102B6  51E1               	movf	sprintf@width& (0+255),w,b
  5793  0102B8  0100               	movlb	0	; () banked
  5794  0102BA  11E2               	iorwf	(sprintf@width+1)& (0+255),w,b
  5795  0102BC  B4D8               	btfsc	status,2,c
  5796  0102BE  D00B               	goto	l9156
  5797                           
  5798                           ; BSR set to: 0
  5799  0102C0  C0DF  F0D2         	movff	sprintf@flag,??_sprintf
  5800  0102C4  0E03               	movlw	3
  5801  0102C6  0100               	movlb	0	; () banked
  5802  0102C8  17D2               	andwf	??_sprintf& (0+255),f,b
  5803  0102CA  B4D8               	btfsc	status,2,c
  5804  0102CC  D004               	goto	l9156
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;doprnt.c: 1346: width--;
  5808  0102CE  0100               	movlb	0	; () banked
  5809  0102D0  07E1               	decf	sprintf@width& (0+255),f,b
  5810  0102D2  A0D8               	btfss	status,0,c
  5811  0102D4  07E2               	decf	(sprintf@width+1)& (0+255),f,b
  5812  0102D6                     l9156:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;doprnt.c: 1381: if(width > c)
  5816  0102D6  0E80               	movlw	128
  5817  0102D8  0100               	movlb	0	; () banked
  5818  0102DA  BFE0               	btfsc	sprintf@c& (0+255),7,b
  5819  0102DC  0E7F               	movlw	127
  5820  0102DE  0100               	movlb	0	; () banked
  5821  0102E0  6FD2               	movwf	??_sprintf& (0+255),b
  5822  0102E2  0100               	movlb	0	; () banked
  5823  0102E4  51E1               	movf	sprintf@width& (0+255),w,b
  5824  0102E6  0100               	movlb	0	; () banked
  5825  0102E8  5DE0               	subwf	sprintf@c& (0+255),w,b
  5826  0102EA  0100               	movlb	0	; () banked
  5827  0102EC  51E2               	movf	(sprintf@width+1)& (0+255),w,b
  5828  0102EE  0A80               	xorlw	128
  5829  0102F0  0100               	movlb	0	; () banked
  5830  0102F2  59D2               	subwfb	??_sprintf& (0+255),w,b
  5831  0102F4  B0D8               	btfsc	status,0,c
  5832  0102F6  D00B               	goto	l9160
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;doprnt.c: 1382: width -= c;
  5836  0102F8  0100               	movlb	0	; () banked
  5837  0102FA  51E0               	movf	sprintf@c& (0+255),w,b
  5838  0102FC  0100               	movlb	0	; () banked
  5839  0102FE  5FE1               	subwf	sprintf@width& (0+255),f,b
  5840  010300  0E00               	movlw	0
  5841  010302  0100               	movlb	0	; () banked
  5842  010304  BFE0               	btfsc	sprintf@c& (0+255),7,b
  5843  010306  0EFF               	movlw	255
  5844  010308  0100               	movlb	0	; () banked
  5845  01030A  5BE2               	subwfb	(sprintf@width+1)& (0+255),f,b
  5846  01030C  D005               	goto	l9162
  5847  01030E                     l9160:
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;doprnt.c: 1383: else
  5851                           ;doprnt.c: 1384: width = 0;
  5852  01030E  0E00               	movlw	0
  5853  010310  0100               	movlb	0	; () banked
  5854  010312  6FE2               	movwf	(sprintf@width+1)& (0+255),b
  5855  010314  0E00               	movlw	0
  5856  010316  6FE1               	movwf	sprintf@width& (0+255),b
  5857  010318                     l9162:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;doprnt.c: 1387: if(flag & 0x04) {
  5861  010318  0100               	movlb	0	; () banked
  5862  01031A  A5DF               	btfss	sprintf@flag& (0+255),2,b
  5863  01031C  D024               	goto	l9178
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;doprnt.c: 1392: if(flag & 0x03)
  5867  01031E  C0DF  F0D2         	movff	sprintf@flag,??_sprintf
  5868  010322  0E03               	movlw	3
  5869  010324  0100               	movlb	0	; () banked
  5870  010326  17D2               	andwf	??_sprintf& (0+255),f,b
  5871  010328  B4D8               	btfsc	status,2,c
  5872  01032A  D009               	goto	l9170
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5876  01032C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5877  010330  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5878  010334  0E2D               	movlw	45
  5879  010336  6EDF               	movwf	indf2,c
  5880                           
  5881                           ; BSR set to: 0
  5882  010338  0100               	movlb	0	; () banked
  5883  01033A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5884  01033C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5885  01033E                     l9170:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;doprnt.c: 1415: if(width)
  5889  01033E  0100               	movlb	0	; () banked
  5890  010340  51E1               	movf	sprintf@width& (0+255),w,b
  5891  010342  0100               	movlb	0	; () banked
  5892  010344  11E2               	iorwf	(sprintf@width+1)& (0+255),w,b
  5893  010346  B4D8               	btfsc	status,2,c
  5894  010348  D037               	goto	l9192
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5898                           
  5899                           ; BSR set to: 0
  5900                           
  5901                           ;doprnt.c: 1416: do
  5902  01034A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5903  01034E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5904  010352  0E30               	movlw	48
  5905  010354  6EDF               	movwf	indf2,c
  5906                           
  5907                           ; BSR set to: 0
  5908  010356  0100               	movlb	0	; () banked
  5909  010358  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5910  01035A  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;doprnt.c: 1418: while(--width);
  5914  01035C  0100               	movlb	0	; () banked
  5915  01035E  07E1               	decf	sprintf@width& (0+255),f,b
  5916  010360  A0D8               	btfss	status,0,c
  5917  010362  07E2               	decf	(sprintf@width+1)& (0+255),f,b
  5918  010364  D7EC               	goto	l9170
  5919  010366                     l9178:
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;doprnt.c: 1422: {
  5923                           ;doprnt.c: 1424: if(width
  5924                           ;doprnt.c: 1428: )
  5925  010366  0100               	movlb	0	; () banked
  5926  010368  51E1               	movf	sprintf@width& (0+255),w,b
  5927  01036A  0100               	movlb	0	; () banked
  5928  01036C  11E2               	iorwf	(sprintf@width+1)& (0+255),w,b
  5929  01036E  B4D8               	btfsc	status,2,c
  5930  010370  D013               	goto	l9186
  5931  010372                     l9180:
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5935  010372  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5936  010376  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5937  01037A  0E20               	movlw	32
  5938  01037C  6EDF               	movwf	indf2,c
  5939                           
  5940                           ; BSR set to: 0
  5941  01037E  0100               	movlb	0	; () banked
  5942  010380  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5943  010382  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;doprnt.c: 1431: while(--width);
  5947  010384  0100               	movlb	0	; () banked
  5948  010386  07E1               	decf	sprintf@width& (0+255),f,b
  5949  010388  A0D8               	btfss	status,0,c
  5950  01038A  07E2               	decf	(sprintf@width+1)& (0+255),f,b
  5951  01038C  0100               	movlb	0	; () banked
  5952  01038E  51E1               	movf	sprintf@width& (0+255),w,b
  5953  010390  0100               	movlb	0	; () banked
  5954  010392  11E2               	iorwf	(sprintf@width+1)& (0+255),w,b
  5955  010394  A4D8               	btfss	status,2,c
  5956  010396  D7ED               	goto	l9180
  5957  010398                     l9186:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;doprnt.c: 1438: if(flag & 0x03)
  5961  010398  C0DF  F0D2         	movff	sprintf@flag,??_sprintf
  5962  01039C  0E03               	movlw	3
  5963  01039E  0100               	movlb	0	; () banked
  5964  0103A0  17D2               	andwf	??_sprintf& (0+255),f,b
  5965  0103A2  B4D8               	btfsc	status,2,c
  5966  0103A4  D009               	goto	l9192
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5970  0103A6  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  5971  0103AA  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  5972  0103AE  0E2D               	movlw	45
  5973  0103B0  6EDF               	movwf	indf2,c
  5974                           
  5975                           ; BSR set to: 0
  5976  0103B2  0100               	movlb	0	; () banked
  5977  0103B4  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  5978  0103B6  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  5979  0103B8                     l9192:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;doprnt.c: 1469: }
  5983                           ;doprnt.c: 1472: prec = c;
  5984  0103B8  C0E0  F0D6         	movff	sprintf@c,sprintf@prec
  5985                           
  5986                           ;doprnt.c: 1474: while(prec--) {
  5987  0103BC  D031               	goto	l9200
  5988  0103BE                     l9194:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;doprnt.c: 1478: {
  5992                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5993  0103BE  0100               	movlb	0	; () banked
  5994  0103C0  51D6               	movf	sprintf@prec& (0+255),w,b
  5995  0103C2  0D02               	mullw	2
  5996  0103C4  0E6D               	movlw	low _dpowers
  5997  0103C6  24F3               	addwf	prodl,w,c
  5998  0103C8  6EF6               	movwf	tblptrl,c
  5999  0103CA  0EFE               	movlw	high _dpowers
  6000  0103CC  20F4               	addwfc	prodh,w,c
  6001  0103CE  6EF7               	movwf	tblptrh,c
  6002  0103D0                     	if	1	;There are 3 active tblptr bytes
  6003  0103D0  6AF8               	clrf	tblptru,c
  6004  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  6005  0103D4  22F8               	addwfc	tblptru,f,c
  6006  0103D6                     	endif
  6007  0103D6  0009               	tblrd		*+
  6008  0103D8  CFF5 F0B7          	movff	tablat,___lwdiv@divisor
  6009  0103DC  000A               	tblrd		*-
  6010  0103DE  CFF5 F0B8          	movff	tablat,___lwdiv@divisor+1
  6011  0103E2  C0DB  F0B5         	movff	sprintf@val,___lwdiv@dividend
  6012  0103E6  C0DC  F0B6         	movff	sprintf@val+1,___lwdiv@dividend+1
  6013  0103EA  ECF0  F096         	call	___lwdiv	;wreg free
  6014  0103EE  C0B5  F0BC         	movff	?___lwdiv,___lwmod@dividend
  6015  0103F2  C0B6  F0BD         	movff	?___lwdiv+1,___lwmod@dividend+1
  6016  0103F6  0E00               	movlw	0
  6017  0103F8  0100               	movlb	0	; () banked
  6018  0103FA  6FBF               	movwf	(___lwmod@divisor+1)& (0+255),b
  6019  0103FC  0E0A               	movlw	10
  6020  0103FE  6FBE               	movwf	___lwmod@divisor& (0+255),b
  6021  010400  ECA3  F098         	call	___lwmod	;wreg free
  6022  010404  0100               	movlb	0	; () banked
  6023  010406  51BC               	movf	?___lwmod& (0+255),w,b
  6024  010408  0F30               	addlw	48
  6025  01040A  0100               	movlb	0	; () banked
  6026  01040C  6FE0               	movwf	sprintf@c& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;doprnt.c: 1523: }
  6030                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6031  01040E  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6032  010412  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6033  010416  C0E0  FFDF         	movff	sprintf@c,indf2
  6034                           
  6035                           ; BSR set to: 0
  6036  01041A  0100               	movlb	0	; () banked
  6037  01041C  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  6038  01041E  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  6039  010420                     l9200:
  6040                           
  6041                           ; BSR set to: 0
  6042  010420  0100               	movlb	0	; () banked
  6043  010422  07D6               	decf	sprintf@prec& (0+255),f,b
  6044  010424  0100               	movlb	0	; () banked
  6045  010426  29D6               	incf	sprintf@prec& (0+255),w,b
  6046  010428  A4D8               	btfss	status,2,c
  6047  01042A  D7C9               	goto	l9194
  6048  01042C                     l9202:
  6049                           
  6050                           ; BSR set to: 0
  6051  01042C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  6052  010430  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  6053  010434  0100               	movlb	0	; () banked
  6054  010436  4BC2               	infsnz	sprintf@f& (0+255),f,b
  6055  010438  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  6056  01043A                     	if	0	;tblptru may be non-zero
  6057  01043A                     	endif
  6058  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6059  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  6060  01043C  6EF8               	movwf	tblptru,c
  6061  01043E                     	endif
  6062  01043E  0008               	tblrd		*
  6063  010440  CFF5 F0E0          	movff	tablat,sprintf@c
  6064  010444  0100               	movlb	0	; () banked
  6065  010446  51E0               	movf	sprintf@c& (0+255),w,b
  6066  010448  A4D8               	btfss	status,2,c
  6067  01044A  D5E1               	goto	l9062
  6068  01044C                     l9204:
  6069                           
  6070                           ;doprnt.c: 1538: *sp = 0;
  6071  01044C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6072  010450  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6073  010454  0E00               	movlw	0
  6074  010456  6EDF               	movwf	indf2,c
  6075  010458  0012               	return	
  6076  01045A                     __end_of_sprintf:
  6077                           	opt stack 0
  6078                           tblptru	equ	0xFF8
  6079                           tblptrh	equ	0xFF7
  6080                           tblptrl	equ	0xFF6
  6081                           tablat	equ	0xFF5
  6082                           prodh	equ	0xFF4
  6083                           prodl	equ	0xFF3
  6084                           intcon	equ	0xFF2
  6085                           intcon2	equ	0xFF1
  6086                           indf0	equ	0xFEF
  6087                           postinc0	equ	0xFEE
  6088                           fsr0h	equ	0xFEA
  6089                           fsr0l	equ	0xFE9
  6090                           wreg	equ	0xFE8
  6091                           postdec1	equ	0xFE5
  6092                           fsr1h	equ	0xFE2
  6093                           fsr1l	equ	0xFE1
  6094                           indf2	equ	0xFDF
  6095                           postinc2	equ	0xFDE
  6096                           postdec2	equ	0xFDD
  6097                           fsr2h	equ	0xFDA
  6098                           fsr2l	equ	0xFD9
  6099                           status	equ	0xFD8
  6100                           
  6101 ;; *************** function _isdigit *****************
  6102 ;; Defined at:
  6103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  c               1    wreg     unsigned char 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  c               1    1[BANK0 ] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;		None               void
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;Total ram usage:        3 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    4
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_sprintf
  6128 ;;		_atoi
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text25
  6133  0135FE                     __ptext25:
  6134                           	opt stack 0
  6135  0135FE                     _isdigit:
  6136                           	opt stack 23
  6137                           
  6138                           ;incstack = 0
  6139                           ;isdigit@c stored from wreg
  6140  0135FE  0100               	movlb	0	; () banked
  6141  013600  6FB6               	movwf	isdigit@c& (0+255),b
  6142  013602  0E00               	movlw	0
  6143  013604  0100               	movlb	0	; () banked
  6144  013606  6FB5               	movwf	_isdigit$5607& (0+255),b
  6145                           
  6146                           ; BSR set to: 0
  6147  013608  0E3A               	movlw	58
  6148  01360A  0100               	movlb	0	; () banked
  6149  01360C  61B6               	cpfslt	isdigit@c& (0+255),b
  6150  01360E  D007               	goto	l8736
  6151                           
  6152                           ; BSR set to: 0
  6153  013610  0E2F               	movlw	47
  6154  013612  0100               	movlb	0	; () banked
  6155  013614  65B6               	cpfsgt	isdigit@c& (0+255),b
  6156  013616  D003               	goto	l8736
  6157                           
  6158                           ; BSR set to: 0
  6159  013618  0E01               	movlw	1
  6160  01361A  0100               	movlb	0	; () banked
  6161  01361C  6FB5               	movwf	_isdigit$5607& (0+255),b
  6162  01361E                     l8736:
  6163                           
  6164                           ; BSR set to: 0
  6165  01361E  C0B5  F020         	movff	_isdigit$5607,??_isdigit
  6166  013622  3020               	rrcf	??_isdigit,w,c
  6167  013624  0012               	return	
  6168  013626                     __end_of_isdigit:
  6169                           	opt stack 0
  6170                           tblptru	equ	0xFF8
  6171                           tblptrh	equ	0xFF7
  6172                           tblptrl	equ	0xFF6
  6173                           tablat	equ	0xFF5
  6174                           prodh	equ	0xFF4
  6175                           prodl	equ	0xFF3
  6176                           intcon	equ	0xFF2
  6177                           intcon2	equ	0xFF1
  6178                           indf0	equ	0xFEF
  6179                           postinc0	equ	0xFEE
  6180                           fsr0h	equ	0xFEA
  6181                           fsr0l	equ	0xFE9
  6182                           wreg	equ	0xFE8
  6183                           postdec1	equ	0xFE5
  6184                           fsr1h	equ	0xFE2
  6185                           fsr1l	equ	0xFE1
  6186                           indf2	equ	0xFDF
  6187                           postinc2	equ	0xFDE
  6188                           postdec2	equ	0xFDD
  6189                           fsr2h	equ	0xFDA
  6190                           fsr2l	equ	0xFD9
  6191                           status	equ	0xFD8
  6192                           
  6193 ;; *************** function ___wmul *****************
  6194 ;; Defined at:
  6195 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6198 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  product         2    4[BANK0 ] unsigned int 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    0[BANK0 ] unsigned int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0, prodl, prodh
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;Total ram usage:        6 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    4
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_sprintf
  6221 ;;		_atoi
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text26
  6226  013474                     __ptext26:
  6227                           	opt stack 0
  6228  013474                     ___wmul:
  6229                           	opt stack 23
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;incstack = 0
  6233  013474  0100               	movlb	0	; () banked
  6234  013476  51B5               	movf	___wmul@multiplier& (0+255),w,b
  6235  013478  0100               	movlb	0	; () banked
  6236  01347A  03B7               	mulwf	___wmul@multiplicand& (0+255),b
  6237  01347C  CFF3 F0B9          	movff	prodl,___wmul@product
  6238  013480  CFF4 F0BA          	movff	prodh,___wmul@product+1
  6239  013484  0100               	movlb	0	; () banked
  6240  013486  51B5               	movf	___wmul@multiplier& (0+255),w,b
  6241  013488  0100               	movlb	0	; () banked
  6242  01348A  03B8               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6243  01348C  50F3               	movf	prodl,w,c
  6244  01348E  0100               	movlb	0	; () banked
  6245  013490  27BA               	addwf	(___wmul@product+1)& (0+255),f,b
  6246  013492  0100               	movlb	0	; () banked
  6247  013494  51B6               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6248  013496  0100               	movlb	0	; () banked
  6249  013498  03B7               	mulwf	___wmul@multiplicand& (0+255),b
  6250  01349A  50F3               	movf	prodl,w,c
  6251  01349C  0100               	movlb	0	; () banked
  6252  01349E  27BA               	addwf	(___wmul@product+1)& (0+255),f,b
  6253                           
  6254                           ; BSR set to: 0
  6255  0134A0  C0B9  F0B5         	movff	___wmul@product,?___wmul
  6256  0134A4  C0BA  F0B6         	movff	___wmul@product+1,?___wmul+1
  6257  0134A8  0012               	return	
  6258  0134AA                     __end_of___wmul:
  6259                           	opt stack 0
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           intcon	equ	0xFF2
  6267                           intcon2	equ	0xFF1
  6268                           indf0	equ	0xFEF
  6269                           postinc0	equ	0xFEE
  6270                           fsr0h	equ	0xFEA
  6271                           fsr0l	equ	0xFE9
  6272                           wreg	equ	0xFE8
  6273                           postdec1	equ	0xFE5
  6274                           fsr1h	equ	0xFE2
  6275                           fsr1l	equ	0xFE1
  6276                           indf2	equ	0xFDF
  6277                           postinc2	equ	0xFDE
  6278                           postdec2	equ	0xFDD
  6279                           fsr2h	equ	0xFDA
  6280                           fsr2l	equ	0xFD9
  6281                           status	equ	0xFD8
  6282                           
  6283 ;; *************** function ___lwmod *****************
  6284 ;; Defined at:
  6285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  dividend        2    7[BANK0 ] unsigned int 
  6288 ;;  divisor         2    9[BANK0 ] unsigned int 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  counter         1   31[COMRAM] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  2    7[BANK0 ] unsigned int 
  6293 ;; Registers used:
  6294 ;;		wreg, status,2, status,0
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;Total ram usage:        5 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    4
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_sprintf
  6311 ;;		_ringbuf_put_num
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text27
  6316  013146                     __ptext27:
  6317                           	opt stack 0
  6318  013146                     ___lwmod:
  6319                           	opt stack 23
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;incstack = 0
  6323  013146  0100               	movlb	0	; () banked
  6324  013148  51BE               	movf	___lwmod@divisor& (0+255),w,b
  6325  01314A  0100               	movlb	0	; () banked
  6326  01314C  11BF               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6327  01314E  B4D8               	btfsc	status,2,c
  6328  013150  D023               	goto	l1970
  6329                           
  6330                           ; BSR set to: 0
  6331  013152  0E01               	movlw	1
  6332  013154  6E20               	movwf	___lwmod@counter,c
  6333  013156  D005               	goto	l8774
  6334  013158                     l8772:
  6335                           
  6336                           ; BSR set to: 0
  6337  013158  0100               	movlb	0	; () banked
  6338  01315A  90D8               	bcf	status,0,c
  6339  01315C  37BE               	rlcf	___lwmod@divisor& (0+255),f,b
  6340  01315E  37BF               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6341  013160  2A20               	incf	___lwmod@counter,f,c
  6342  013162                     l8774:
  6343                           
  6344                           ; BSR set to: 0
  6345  013162  0100               	movlb	0	; () banked
  6346  013164  AFBF               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6347  013166  D7F8               	goto	l8772
  6348  013168                     l8776:
  6349                           
  6350                           ; BSR set to: 0
  6351  013168  0100               	movlb	0	; () banked
  6352  01316A  51BE               	movf	___lwmod@divisor& (0+255),w,b
  6353  01316C  0100               	movlb	0	; () banked
  6354  01316E  5DBC               	subwf	___lwmod@dividend& (0+255),w,b
  6355  013170  0100               	movlb	0	; () banked
  6356  013172  51BF               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6357  013174  0100               	movlb	0	; () banked
  6358  013176  59BD               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6359  013178  A0D8               	btfss	status,0,c
  6360  01317A  D008               	goto	l8780
  6361                           
  6362                           ; BSR set to: 0
  6363  01317C  0100               	movlb	0	; () banked
  6364  01317E  51BE               	movf	___lwmod@divisor& (0+255),w,b
  6365  013180  0100               	movlb	0	; () banked
  6366  013182  5FBC               	subwf	___lwmod@dividend& (0+255),f,b
  6367  013184  0100               	movlb	0	; () banked
  6368  013186  51BF               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6369  013188  0100               	movlb	0	; () banked
  6370  01318A  5BBD               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6371  01318C                     l8780:
  6372                           
  6373                           ; BSR set to: 0
  6374  01318C  0100               	movlb	0	; () banked
  6375  01318E  90D8               	bcf	status,0,c
  6376  013190  33BF               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6377  013192  33BE               	rrcf	___lwmod@divisor& (0+255),f,b
  6378                           
  6379                           ; BSR set to: 0
  6380  013194  2E20               	decfsz	___lwmod@counter,f,c
  6381  013196  D7E8               	goto	l8776
  6382  013198                     l1970:
  6383                           
  6384                           ; BSR set to: 0
  6385  013198  C0BC  F0BC         	movff	___lwmod@dividend,?___lwmod
  6386  01319C  C0BD  F0BD         	movff	___lwmod@dividend+1,?___lwmod+1
  6387                           
  6388                           ; BSR set to: 0
  6389  0131A0  0012               	return		;funcret
  6390  0131A2                     __end_of___lwmod:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           intcon2	equ	0xFF1
  6400                           indf0	equ	0xFEF
  6401                           postinc0	equ	0xFEE
  6402                           fsr0h	equ	0xFEA
  6403                           fsr0l	equ	0xFE9
  6404                           wreg	equ	0xFE8
  6405                           postdec1	equ	0xFE5
  6406                           fsr1h	equ	0xFE2
  6407                           fsr1l	equ	0xFE1
  6408                           indf2	equ	0xFDF
  6409                           postinc2	equ	0xFDE
  6410                           postdec2	equ	0xFDD
  6411                           fsr2h	equ	0xFDA
  6412                           fsr2l	equ	0xFD9
  6413                           status	equ	0xFD8
  6414                           
  6415 ;; *************** function ___lwdiv *****************
  6416 ;; Defined at:
  6417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  dividend        2    0[BANK0 ] unsigned int 
  6420 ;;  divisor         2    2[BANK0 ] unsigned int 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  quotient        2    5[BANK0 ] unsigned int 
  6423 ;;  counter         1    4[BANK0 ] unsigned char 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  2    0[BANK0 ] unsigned int 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;Total ram usage:        7 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    4
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_sprintf
  6444 ;;		_ringbuf_put_num
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text28
  6449  012DE0                     __ptext28:
  6450                           	opt stack 0
  6451  012DE0                     ___lwdiv:
  6452                           	opt stack 23
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;incstack = 0
  6456  012DE0  0E00               	movlw	0
  6457  012DE2  0100               	movlb	0	; () banked
  6458  012DE4  6FBB               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6459  012DE6  0E00               	movlw	0
  6460  012DE8  6FBA               	movwf	___lwdiv@quotient& (0+255),b
  6461                           
  6462                           ; BSR set to: 0
  6463  012DEA  0100               	movlb	0	; () banked
  6464  012DEC  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  6465  012DEE  0100               	movlb	0	; () banked
  6466  012DF0  11B8               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6467  012DF2  B4D8               	btfsc	status,2,c
  6468  012DF4  D02C               	goto	l1960
  6469                           
  6470                           ; BSR set to: 0
  6471  012DF6  0E01               	movlw	1
  6472  012DF8  0100               	movlb	0	; () banked
  6473  012DFA  6FB9               	movwf	___lwdiv@counter& (0+255),b
  6474  012DFC  D006               	goto	l8754
  6475  012DFE                     l8752:
  6476                           
  6477                           ; BSR set to: 0
  6478  012DFE  0100               	movlb	0	; () banked
  6479  012E00  90D8               	bcf	status,0,c
  6480  012E02  37B7               	rlcf	___lwdiv@divisor& (0+255),f,b
  6481  012E04  37B8               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6482  012E06  0100               	movlb	0	; () banked
  6483  012E08  2BB9               	incf	___lwdiv@counter& (0+255),f,b
  6484  012E0A                     l8754:
  6485                           
  6486                           ; BSR set to: 0
  6487  012E0A  0100               	movlb	0	; () banked
  6488  012E0C  AFB8               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6489  012E0E  D7F7               	goto	l8752
  6490  012E10                     l8756:
  6491                           
  6492                           ; BSR set to: 0
  6493  012E10  0100               	movlb	0	; () banked
  6494  012E12  90D8               	bcf	status,0,c
  6495  012E14  37BA               	rlcf	___lwdiv@quotient& (0+255),f,b
  6496  012E16  37BB               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6497                           
  6498                           ; BSR set to: 0
  6499  012E18  0100               	movlb	0	; () banked
  6500  012E1A  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  6501  012E1C  0100               	movlb	0	; () banked
  6502  012E1E  5DB5               	subwf	___lwdiv@dividend& (0+255),w,b
  6503  012E20  0100               	movlb	0	; () banked
  6504  012E22  51B8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6505  012E24  0100               	movlb	0	; () banked
  6506  012E26  59B6               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6507  012E28  A0D8               	btfss	status,0,c
  6508  012E2A  D00A               	goto	l8764
  6509                           
  6510                           ; BSR set to: 0
  6511  012E2C  0100               	movlb	0	; () banked
  6512  012E2E  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  6513  012E30  0100               	movlb	0	; () banked
  6514  012E32  5FB5               	subwf	___lwdiv@dividend& (0+255),f,b
  6515  012E34  0100               	movlb	0	; () banked
  6516  012E36  51B8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6517  012E38  0100               	movlb	0	; () banked
  6518  012E3A  5BB6               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6519                           
  6520                           ; BSR set to: 0
  6521  012E3C  0100               	movlb	0	; () banked
  6522  012E3E  81BA               	bsf	___lwdiv@quotient& (0+255),0,b
  6523  012E40                     l8764:
  6524                           
  6525                           ; BSR set to: 0
  6526  012E40  0100               	movlb	0	; () banked
  6527  012E42  90D8               	bcf	status,0,c
  6528  012E44  33B8               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6529  012E46  33B7               	rrcf	___lwdiv@divisor& (0+255),f,b
  6530                           
  6531                           ; BSR set to: 0
  6532  012E48  0100               	movlb	0	; () banked
  6533  012E4A  2FB9               	decfsz	___lwdiv@counter& (0+255),f,b
  6534  012E4C  D7E1               	goto	l8756
  6535  012E4E                     l1960:
  6536                           
  6537                           ; BSR set to: 0
  6538  012E4E  C0BA  F0B5         	movff	___lwdiv@quotient,?___lwdiv
  6539  012E52  C0BB  F0B6         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6540                           
  6541                           ; BSR set to: 0
  6542  012E56  0012               	return		;funcret
  6543  012E58                     __end_of___lwdiv:
  6544                           	opt stack 0
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           intcon	equ	0xFF2
  6552                           intcon2	equ	0xFF1
  6553                           indf0	equ	0xFEF
  6554                           postinc0	equ	0xFEE
  6555                           fsr0h	equ	0xFEA
  6556                           fsr0l	equ	0xFE9
  6557                           wreg	equ	0xFE8
  6558                           postdec1	equ	0xFE5
  6559                           fsr1h	equ	0xFE2
  6560                           fsr1l	equ	0xFE1
  6561                           indf2	equ	0xFDF
  6562                           postinc2	equ	0xFDE
  6563                           postdec2	equ	0xFDD
  6564                           fsr2h	equ	0xFDA
  6565                           fsr2l	equ	0xFD9
  6566                           status	equ	0xFD8
  6567                           
  6568 ;; *************** function _USB_task *****************
  6569 ;; Defined at:
  6570 ;;		line 64 in file "../My_library/My_usb_cdc.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  data            1   29[BANK0 ] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;		None               void
  6577 ;; Registers used:
  6578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6587 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6588 ;;Total ram usage:        1 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:   13
  6591 ;; This function calls:
  6592 ;;		_USBDeviceTasks
  6593 ;;		_ringbuf_num
  6594 ;;		_ringbuf_pop
  6595 ;;		_ringbuf_put
  6596 ;;		_usb_char_get
  6597 ;;		_usb_char_send
  6598 ;; This function is called by:
  6599 ;;		_main
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text29
  6604  012F46                     __ptext29:
  6605                           	opt stack 0
  6606  012F46                     _USB_task:
  6607                           	opt stack 17
  6608                           
  6609                           ;My_usb_cdc.c: 65: char data;
  6610                           ;My_usb_cdc.c: 67: while (usb_char_get(&data)) {
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;incstack = 0
  6614  012F46  D00A               	goto	l9760
  6615  012F48                     l9758:
  6616                           
  6617                           ;My_usb_cdc.c: 68: ringbuf_put(&usb_rx, data);
  6618  012F48  0ED0               	movlw	low _usb_rx
  6619  012F4A  0100               	movlb	0	; () banked
  6620  012F4C  6FC3               	movwf	ringbuf_put@rb& (0+255),b
  6621  012F4E  0E01               	movlw	high _usb_rx
  6622  012F50  0100               	movlb	0	; () banked
  6623  012F52  6FC4               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6624  012F54  C0D2  F0C5         	movff	USB_task@data,ringbuf_put@asciicode
  6625  012F58  EC84  F08F         	call	_ringbuf_put	;wreg free
  6626  012F5C                     l9760:
  6627  012F5C  0ED2               	movlw	low USB_task@data
  6628  012F5E  0100               	movlb	0	; () banked
  6629  012F60  6FC1               	movwf	usb_char_get@c& (0+255),b
  6630  012F62  0E00               	movlw	high USB_task@data
  6631  012F64  0100               	movlb	0	; () banked
  6632  012F66  6FC2               	movwf	(usb_char_get@c+1)& (0+255),b
  6633  012F68  ECE7  F099         	call	_usb_char_get	;wreg free
  6634  012F6C  0900               	iorlw	0
  6635  012F6E  B4D8               	btfsc	status,2,c
  6636  012F70  D00F               	goto	l9766
  6637  012F72  D7EA               	goto	l9758
  6638  012F74                     l9762:
  6639                           
  6640                           ;My_usb_cdc.c: 72: data = ringbuf_pop(&usb_tx);
  6641  012F74  0ED8               	movlw	low _usb_tx
  6642  012F76  0100               	movlb	0	; () banked
  6643  012F78  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  6644  012F7A  0E01               	movlw	high _usb_tx
  6645  012F7C  0100               	movlb	0	; () banked
  6646  012F7E  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  6647  012F80  ECBD  F090         	call	_ringbuf_pop	;wreg free
  6648  012F84  0100               	movlb	0	; () banked
  6649  012F86  6FD2               	movwf	USB_task@data& (0+255),b
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;My_usb_cdc.c: 73: usb_char_send(data);
  6653  012F88  0100               	movlb	0	; () banked
  6654  012F8A  51D2               	movf	USB_task@data& (0+255),w,b
  6655  012F8C  EC55  F09A         	call	_usb_char_send
  6656  012F90                     l9766:
  6657  012F90  0ED8               	movlw	low _usb_tx
  6658  012F92  0100               	movlb	0	; () banked
  6659  012F94  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  6660  012F96  0E01               	movlw	high _usb_tx
  6661  012F98  0100               	movlb	0	; () banked
  6662  012F9A  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  6663  012F9C  EC12  F08C         	call	_ringbuf_num	;wreg free
  6664  012FA0  0100               	movlb	0	; () banked
  6665  012FA2  51B5               	movf	?_ringbuf_num& (0+255),w,b
  6666  012FA4  0100               	movlb	0	; () banked
  6667  012FA6  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6668  012FA8  A4D8               	btfss	status,2,c
  6669  012FAA  D7E4               	goto	l9762
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;My_usb_cdc.c: 74: }
  6673                           ;My_usb_cdc.c: 75: USBDeviceTasks();
  6674                           
  6675                           ; BSR set to: 0
  6676  012FAC  ECC1  F087         	call	_USBDeviceTasks	;wreg free
  6677  012FB0  0012               	return		;funcret
  6678  012FB2                     __end_of_USB_task:
  6679                           	opt stack 0
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           intcon2	equ	0xFF1
  6688                           indf0	equ	0xFEF
  6689                           postinc0	equ	0xFEE
  6690                           fsr0h	equ	0xFEA
  6691                           fsr0l	equ	0xFE9
  6692                           wreg	equ	0xFE8
  6693                           postdec1	equ	0xFE5
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           indf2	equ	0xFDF
  6697                           postinc2	equ	0xFDE
  6698                           postdec2	equ	0xFDD
  6699                           fsr2h	equ	0xFDA
  6700                           fsr2l	equ	0xFD9
  6701                           status	equ	0xFD8
  6702                           
  6703 ;; *************** function _usb_char_send *****************
  6704 ;; Defined at:
  6705 ;;		line 20 in file "../My_library/My_usb_cdc.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  c               1    wreg     unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  c               1   11[BANK0 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;		None               void
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;Total ram usage:        1 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    6
  6726 ;; This function calls:
  6727 ;;		_CDCTxService
  6728 ;;		_is_usb_available
  6729 ;;		_putUSBUSART
  6730 ;; This function is called by:
  6731 ;;		_USB_task
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text30
  6736  0134AA                     __ptext30:
  6737                           	opt stack 0
  6738  0134AA                     _usb_char_send:
  6739                           	opt stack 23
  6740                           
  6741                           ;incstack = 0
  6742                           ;usb_char_send@c stored from wreg
  6743  0134AA  0100               	movlb	0	; () banked
  6744  0134AC  6FC0               	movwf	usb_char_send@c& (0+255),b
  6745                           
  6746                           ;My_usb_cdc.c: 21: if (!is_usb_available()) {
  6747  0134AE  ECAF  F09B         	call	_is_usb_available	;wreg free
  6748  0134B2  0900               	iorlw	0
  6749  0134B4  B4D8               	btfsc	status,2,c
  6750  0134B6  0012               	return	
  6751  0134B8  D002               	goto	l9542
  6752  0134BA                     l9540:
  6753  0134BA  EC8C  F088         	call	_CDCTxService	;wreg free
  6754  0134BE                     l9542:
  6755  0134BE  5039               	movf	_cdc_trf_state,w,c
  6756  0134C0  A4D8               	btfss	status,2,c
  6757  0134C2  D7FB               	goto	l9540
  6758                           
  6759                           ;My_usb_cdc.c: 26: putUSBUSART(&c, 1);
  6760  0134C4  0EC0               	movlw	low usb_char_send@c
  6761  0134C6  0100               	movlb	0	; () banked
  6762  0134C8  6FB5               	movwf	putUSBUSART@data& (0+255),b
  6763  0134CA  0E00               	movlw	high usb_char_send@c
  6764  0134CC  0100               	movlb	0	; () banked
  6765  0134CE  6FB6               	movwf	(putUSBUSART@data+1)& (0+255),b
  6766  0134D0  0E01               	movlw	1
  6767  0134D2  0100               	movlb	0	; () banked
  6768  0134D4  6FB7               	movwf	putUSBUSART@length& (0+255),b
  6769  0134D6  EC46  F09B         	call	_putUSBUSART	;wreg free
  6770                           
  6771                           ;My_usb_cdc.c: 27: CDCTxService();
  6772  0134DA  EC8C  F088         	call	_CDCTxService	;wreg free
  6773  0134DE  0012               	return		;funcret
  6774  0134E0                     __end_of_usb_char_send:
  6775                           	opt stack 0
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           intcon	equ	0xFF2
  6783                           intcon2	equ	0xFF1
  6784                           indf0	equ	0xFEF
  6785                           postinc0	equ	0xFEE
  6786                           fsr0h	equ	0xFEA
  6787                           fsr0l	equ	0xFE9
  6788                           wreg	equ	0xFE8
  6789                           postdec1	equ	0xFE5
  6790                           fsr1h	equ	0xFE2
  6791                           fsr1l	equ	0xFE1
  6792                           indf2	equ	0xFDF
  6793                           postinc2	equ	0xFDE
  6794                           postdec2	equ	0xFDD
  6795                           fsr2h	equ	0xFDA
  6796                           fsr2l	equ	0xFD9
  6797                           status	equ	0xFD8
  6798                           
  6799 ;; *************** function _putUSBUSART *****************
  6800 ;; Defined at:
  6801 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  data            2    0[BANK0 ] PTR unsigned char 
  6804 ;;		 -> usb_char_send@c(1), 
  6805 ;;  length          1    2[BANK0 ] unsigned char 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;		None               void
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;Total ram usage:        3 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    4
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_usb_char_send
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text31
  6832  01368C                     __ptext31:
  6833                           	opt stack 0
  6834  01368C                     _putUSBUSART:
  6835                           	opt stack 24
  6836                           
  6837                           ;usb_device_cdc.c: 638: ;
  6838                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  6839                           
  6840                           ;incstack = 0
  6841  01368C  5039               	movf	_cdc_trf_state,w,c
  6842  01368E  A4D8               	btfss	status,2,c
  6843  013690  0012               	return	
  6844                           
  6845                           ;usb_device_cdc.c: 640: {
  6846                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  6847  013692  C0B5  F078         	movff	putUSBUSART@data,_pCDCSrc
  6848  013696  C0B6  F079         	movff	putUSBUSART@data+1,_pCDCSrc+1
  6849  01369A  C0B7  F03A         	movff	putUSBUSART@length,_cdc_tx_len
  6850  01369E  0E01               	movlw	1
  6851  0136A0  0100               	movlb	0	; () banked
  6852  0136A2  6F8F               	movwf	_cdc_mem_type& (0+255),b
  6853                           
  6854                           ; BSR set to: 0
  6855  0136A4  0E01               	movlw	1
  6856  0136A6  6E39               	movwf	_cdc_trf_state,c
  6857  0136A8  0012               	return	
  6858  0136AA                     __end_of_putUSBUSART:
  6859                           	opt stack 0
  6860                           tblptru	equ	0xFF8
  6861                           tblptrh	equ	0xFF7
  6862                           tblptrl	equ	0xFF6
  6863                           tablat	equ	0xFF5
  6864                           prodh	equ	0xFF4
  6865                           prodl	equ	0xFF3
  6866                           intcon	equ	0xFF2
  6867                           intcon2	equ	0xFF1
  6868                           indf0	equ	0xFEF
  6869                           postinc0	equ	0xFEE
  6870                           fsr0h	equ	0xFEA
  6871                           fsr0l	equ	0xFE9
  6872                           wreg	equ	0xFE8
  6873                           postdec1	equ	0xFE5
  6874                           fsr1h	equ	0xFE2
  6875                           fsr1l	equ	0xFE1
  6876                           indf2	equ	0xFDF
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           fsr2h	equ	0xFDA
  6880                           fsr2l	equ	0xFD9
  6881                           status	equ	0xFD8
  6882                           
  6883 ;; *************** function _usb_char_get *****************
  6884 ;; Defined at:
  6885 ;;		line 30 in file "../My_library/My_usb_cdc.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  c               2   12[BANK0 ] PTR unsigned char 
  6888 ;;		 -> USB_task@data(1), 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  ans             1   14[BANK0 ] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      unsigned char 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6903 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6904 ;;Total ram usage:        3 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    6
  6907 ;; This function calls:
  6908 ;;		_CDCTxService
  6909 ;;		_getsUSBUSART
  6910 ;;		_is_usb_available
  6911 ;; This function is called by:
  6912 ;;		_USB_task
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text32
  6917  0133CE                     __ptext32:
  6918                           	opt stack 0
  6919  0133CE                     _usb_char_get:
  6920                           	opt stack 23
  6921                           
  6922                           ;My_usb_cdc.c: 31: if (!is_usb_available()) {
  6923                           
  6924                           ;incstack = 0
  6925  0133CE  ECAF  F09B         	call	_is_usb_available	;wreg free
  6926  0133D2  0900               	iorlw	0
  6927  0133D4  A4D8               	btfss	status,2,c
  6928  0133D6  D004               	goto	l9556
  6929                           
  6930                           ;My_usb_cdc.c: 33: return 0;
  6931  0133D8  0E00               	movlw	0
  6932  0133DA  0012               	return	
  6933  0133DC                     l9554:
  6934  0133DC  EC8C  F088         	call	_CDCTxService	;wreg free
  6935  0133E0                     l9556:
  6936  0133E0  5039               	movf	_cdc_trf_state,w,c
  6937  0133E2  A4D8               	btfss	status,2,c
  6938  0133E4  D7FB               	goto	l9554
  6939                           
  6940                           ;My_usb_cdc.c: 36: uint8_t ans;
  6941                           ;My_usb_cdc.c: 37: ans = getsUSBUSART(c, 1);
  6942  0133E6  C0C1  F0BC         	movff	usb_char_get@c,getsUSBUSART@buffer
  6943  0133EA  C0C2  F0BD         	movff	usb_char_get@c+1,getsUSBUSART@buffer+1
  6944  0133EE  0E01               	movlw	1
  6945  0133F0  0100               	movlb	0	; () banked
  6946  0133F2  6FBE               	movwf	getsUSBUSART@len& (0+255),b
  6947  0133F4  EC57  F090         	call	_getsUSBUSART	;wreg free
  6948  0133F8  0100               	movlb	0	; () banked
  6949  0133FA  6FC3               	movwf	usb_char_get@ans& (0+255),b
  6950                           
  6951                           ;My_usb_cdc.c: 38: CDCTxService();
  6952  0133FC  EC8C  F088         	call	_CDCTxService	;wreg free
  6953                           
  6954                           ;My_usb_cdc.c: 39: return ans;
  6955  013400  0100               	movlb	0	; () banked
  6956  013402  51C3               	movf	usb_char_get@ans& (0+255),w,b
  6957  013404  0012               	return	
  6958  013406                     __end_of_usb_char_get:
  6959                           	opt stack 0
  6960                           tblptru	equ	0xFF8
  6961                           tblptrh	equ	0xFF7
  6962                           tblptrl	equ	0xFF6
  6963                           tablat	equ	0xFF5
  6964                           prodh	equ	0xFF4
  6965                           prodl	equ	0xFF3
  6966                           intcon	equ	0xFF2
  6967                           intcon2	equ	0xFF1
  6968                           indf0	equ	0xFEF
  6969                           postinc0	equ	0xFEE
  6970                           fsr0h	equ	0xFEA
  6971                           fsr0l	equ	0xFE9
  6972                           wreg	equ	0xFE8
  6973                           postdec1	equ	0xFE5
  6974                           fsr1h	equ	0xFE2
  6975                           fsr1l	equ	0xFE1
  6976                           indf2	equ	0xFDF
  6977                           postinc2	equ	0xFDE
  6978                           postdec2	equ	0xFDD
  6979                           fsr2h	equ	0xFDA
  6980                           fsr2l	equ	0xFD9
  6981                           status	equ	0xFD8
  6982                           
  6983 ;; *************** function _is_usb_available *****************
  6984 ;; Defined at:
  6985 ;;		line 16 in file "../My_library/My_usb_cdc.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;		None
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7003 ;;Total ram usage:        1 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    4
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_usb_char_send
  7010 ;;		_usb_char_get
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text33
  7015  01375E                     __ptext33:
  7016                           	opt stack 0
  7017  01375E                     _is_usb_available:
  7018                           	opt stack 24
  7019                           
  7020                           ;My_usb_cdc.c: 17: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
  7021                           
  7022                           ;incstack = 0
  7023  01375E  0E00               	movlw	0
  7024  013760  6E20               	movwf	_is_usb_available$4927,c
  7025  013762  0E1F               	movlw	31
  7026  013764  6434               	cpfsgt	_USBDeviceState,c
  7027  013766  D004               	goto	l1322
  7028  013768  B265               	btfsc	3941,1,c	;volatile
  7029  01376A  D002               	goto	l1322
  7030  01376C  0E01               	movlw	1
  7031  01376E  6E20               	movwf	_is_usb_available$4927,c
  7032  013770                     l1322:
  7033  013770  5020               	movf	_is_usb_available$4927,w,c
  7034  013772  0012               	return	
  7035  013774                     __end_of_is_usb_available:
  7036                           	opt stack 0
  7037                           tblptru	equ	0xFF8
  7038                           tblptrh	equ	0xFF7
  7039                           tblptrl	equ	0xFF6
  7040                           tablat	equ	0xFF5
  7041                           prodh	equ	0xFF4
  7042                           prodl	equ	0xFF3
  7043                           intcon	equ	0xFF2
  7044                           intcon2	equ	0xFF1
  7045                           indf0	equ	0xFEF
  7046                           postinc0	equ	0xFEE
  7047                           fsr0h	equ	0xFEA
  7048                           fsr0l	equ	0xFE9
  7049                           wreg	equ	0xFE8
  7050                           postdec1	equ	0xFE5
  7051                           fsr1h	equ	0xFE2
  7052                           fsr1l	equ	0xFE1
  7053                           indf2	equ	0xFDF
  7054                           postinc2	equ	0xFDE
  7055                           postdec2	equ	0xFDD
  7056                           fsr2h	equ	0xFDA
  7057                           fsr2l	equ	0xFD9
  7058                           status	equ	0xFD8
  7059                           
  7060 ;; *************** function _getsUSBUSART *****************
  7061 ;; Defined at:
  7062 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
  7065 ;;		 -> USB_task@data(1), 
  7066 ;;  len             1    9[BANK0 ] unsigned char 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      unsigned char 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7078 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;Total ram usage:        6 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    5
  7085 ;; This function calls:
  7086 ;;		_USBTransferOnePacket
  7087 ;; This function is called by:
  7088 ;;		_usb_char_get
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text34
  7093  0120AE                     __ptext34:
  7094                           	opt stack 0
  7095  0120AE                     _getsUSBUSART:
  7096                           	opt stack 23
  7097                           
  7098                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  7099                           
  7100                           ;incstack = 0
  7101  0120AE  0E00               	movlw	0
  7102  0120B0  6E38               	movwf	_cdc_rx_len,c
  7103                           
  7104                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  7105  0120B2  502D               	movf	_CDCDataOutHandle,w,c
  7106  0120B4  102E               	iorwf	_CDCDataOutHandle+1,w,c
  7107  0120B6  B4D8               	btfsc	status,2,c
  7108  0120B8  D00F               	goto	l8928
  7109  0120BA  C02D  FFD9         	movff	_CDCDataOutHandle,fsr2l
  7110  0120BE  C02E  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  7111  0120C2  AEDF               	btfss	indf2,7,c
  7112  0120C4  D003               	goto	u8830
  7113  0120C6  6A20               	clrf	??_getsUSBUSART& (0+255),c
  7114  0120C8  2A20               	incf	??_getsUSBUSART& (0+255),f,c
  7115  0120CA  D001               	goto	u8838
  7116  0120CC                     u8830:
  7117  0120CC  6A20               	clrf	??_getsUSBUSART& (0+255),c
  7118  0120CE                     u8838:
  7119  0120CE  5020               	movf	??_getsUSBUSART,w,c
  7120  0120D0  0100               	movlb	0	; () banked
  7121  0120D2  6FBF               	movwf	_getsUSBUSART$1714& (0+255),b
  7122  0120D4  6BC0               	clrf	(_getsUSBUSART$1714+1)& (0+255),b
  7123  0120D6  D005               	goto	l8930
  7124  0120D8                     l8928:
  7125  0120D8  0E00               	movlw	0
  7126  0120DA  0100               	movlb	0	; () banked
  7127  0120DC  6FC0               	movwf	(_getsUSBUSART$1714+1)& (0+255),b
  7128  0120DE  0E00               	movlw	0
  7129  0120E0  6FBF               	movwf	_getsUSBUSART$1714& (0+255),b
  7130  0120E2                     l8930:
  7131                           
  7132                           ; BSR set to: 0
  7133  0120E2  0100               	movlb	0	; () banked
  7134  0120E4  51BF               	movf	_getsUSBUSART$1714& (0+255),w,b
  7135  0120E6  0100               	movlb	0	; () banked
  7136  0120E8  11C0               	iorwf	(_getsUSBUSART$1714+1)& (0+255),w,b
  7137  0120EA  A4D8               	btfss	status,2,c
  7138  0120EC  D044               	goto	l8946
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;usb_device_cdc.c: 547: {
  7142                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  7143  0120EE  EE20 F001          	lfsr	2,1
  7144  0120F2  502D               	movf	_CDCDataOutHandle,w,c
  7145  0120F4  26D9               	addwf	fsr2l,f,c
  7146  0120F6  502E               	movf	_CDCDataOutHandle+1,w,c
  7147  0120F8  22DA               	addwfc	fsr2h,f,c
  7148  0120FA  0100               	movlb	0	; () banked
  7149  0120FC  51BE               	movf	getsUSBUSART@len& (0+255),w,b
  7150  0120FE  5CDE               	subwf	postinc2,w,c
  7151  012100  B0D8               	btfsc	status,0,c
  7152  012102  D009               	goto	l8936
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  7156  012104  EE20 F001          	lfsr	2,1
  7157  012108  502D               	movf	_CDCDataOutHandle,w,c
  7158  01210A  26D9               	addwf	fsr2l,f,c
  7159  01210C  502E               	movf	_CDCDataOutHandle+1,w,c
  7160  01210E  22DA               	addwfc	fsr2h,f,c
  7161  012110  50DF               	movf	indf2,w,c
  7162  012112  0100               	movlb	0	; () banked
  7163  012114  6FBE               	movwf	getsUSBUSART@len& (0+255),b
  7164  012116                     l8936:
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  7168  012116  0E00               	movlw	0
  7169  012118  6E38               	movwf	_cdc_rx_len,c
  7170  01211A  D015               	goto	l8942
  7171  01211C                     l8938:
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  7175  01211C  5038               	movf	_cdc_rx_len,w,c
  7176  01211E  0D01               	mullw	1
  7177  012120  0E14               	movlw	low _cdc_data_rx
  7178  012122  24F3               	addwf	prodl,w,c
  7179  012124  6ED9               	movwf	fsr2l,c
  7180  012126  0E01               	movlw	high _cdc_data_rx
  7181  012128  20F4               	addwfc	prodh,w,c
  7182  01212A  6EDA               	movwf	fsr2h,c
  7183  01212C  5038               	movf	_cdc_rx_len,w,c
  7184  01212E  0D01               	mullw	1
  7185  012130  50F3               	movf	prodl,w,c
  7186  012132  0100               	movlb	0	; () banked
  7187  012134  25BC               	addwf	getsUSBUSART@buffer& (0+255),w,b
  7188  012136  6EE1               	movwf	fsr1l,c
  7189  012138  50F4               	movf	prodh,w,c
  7190  01213A  0100               	movlb	0	; () banked
  7191  01213C  21BD               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  7192  01213E  6EE2               	movwf	fsr1h,c
  7193  012140  CFDF FFE7          	movff	indf2,indf1
  7194                           
  7195                           ; BSR set to: 0
  7196  012144  2A38               	incf	_cdc_rx_len,f,c
  7197  012146                     l8942:
  7198                           
  7199                           ; BSR set to: 0
  7200  012146  0100               	movlb	0	; () banked
  7201  012148  51BE               	movf	getsUSBUSART@len& (0+255),w,b
  7202  01214A  5C38               	subwf	_cdc_rx_len,w,c
  7203  01214C  A0D8               	btfss	status,0,c
  7204  01214E  D7E6               	goto	l8938
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7208                           
  7209                           ; BSR set to: 0
  7210  012150  0E00               	movlw	0
  7211  012152  0100               	movlb	0	; () banked
  7212  012154  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
  7213  012156  0E14               	movlw	low _cdc_data_rx
  7214  012158  0100               	movlb	0	; () banked
  7215  01215A  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
  7216  01215C  0E01               	movlw	high _cdc_data_rx
  7217  01215E  0100               	movlb	0	; () banked
  7218  012160  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7219  012162  0E40               	movlw	64
  7220  012164  0100               	movlb	0	; () banked
  7221  012166  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
  7222  012168  0E02               	movlw	2
  7223  01216A  ECD7  F08D         	call	_USBTransferOnePacket
  7224  01216E  C0B5  F02D         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  7225  012172  C0B6  F02E         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  7226  012176                     l8946:
  7227                           
  7228                           ;usb_device_cdc.c: 567: }
  7229                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  7230  012176  5038               	movf	_cdc_rx_len,w,c
  7231  012178  0012               	return	
  7232  01217A                     __end_of_getsUSBUSART:
  7233                           	opt stack 0
  7234                           tblptru	equ	0xFF8
  7235                           tblptrh	equ	0xFF7
  7236                           tblptrl	equ	0xFF6
  7237                           tablat	equ	0xFF5
  7238                           prodh	equ	0xFF4
  7239                           prodl	equ	0xFF3
  7240                           intcon	equ	0xFF2
  7241                           intcon2	equ	0xFF1
  7242                           indf0	equ	0xFEF
  7243                           postinc0	equ	0xFEE
  7244                           fsr0h	equ	0xFEA
  7245                           fsr0l	equ	0xFE9
  7246                           wreg	equ	0xFE8
  7247                           indf1	equ	0xFE7
  7248                           postdec1	equ	0xFE5
  7249                           fsr1h	equ	0xFE2
  7250                           fsr1l	equ	0xFE1
  7251                           indf2	equ	0xFDF
  7252                           postinc2	equ	0xFDE
  7253                           postdec2	equ	0xFDD
  7254                           fsr2h	equ	0xFDA
  7255                           fsr2l	equ	0xFD9
  7256                           status	equ	0xFD8
  7257                           
  7258 ;; *************** function _CDCTxService *****************
  7259 ;; Defined at:
  7260 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;		None
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  7265 ;;  i               1    9[BANK0 ] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;		None               void
  7268 ;; Registers used:
  7269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;Total ram usage:        5 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    5
  7282 ;; This function calls:
  7283 ;;		_USBTransferOnePacket
  7284 ;; This function is called by:
  7285 ;;		_usb_char_send
  7286 ;;		_usb_char_get
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text35
  7291  011118                     __ptext35:
  7292                           	opt stack 0
  7293  011118                     _CDCTxService:
  7294                           	opt stack 23
  7295                           
  7296                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  7297                           ;usb_device_cdc.c: 896: uint8_t i;
  7298                           ;usb_device_cdc.c: 898: ;
  7299                           ;usb_device_cdc.c: 900: {};
  7300                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  7301                           
  7302                           ;incstack = 0
  7303  011118  0100               	movlb	0	; () banked
  7304  01111A  517F               	movf	_CDCDataInHandle& (0+255),w,b
  7305  01111C  0100               	movlb	0	; () banked
  7306  01111E  1180               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  7307  011120  B4D8               	btfsc	status,2,c
  7308  011122  D010               	goto	l8964
  7309                           
  7310                           ; BSR set to: 0
  7311  011124  C07F  FFD9         	movff	_CDCDataInHandle,fsr2l
  7312  011128  C080  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  7313  01112C  0100               	movlb	0	; () banked
  7314  01112E  AEDF               	btfss	indf2,7,c
  7315  011130  D003               	goto	u8890
  7316  011132  6A20               	clrf	??_CDCTxService& (0+255),c
  7317  011134  2A20               	incf	??_CDCTxService& (0+255),f,c
  7318  011136  D001               	goto	u8898
  7319  011138                     u8890:
  7320  011138  6A20               	clrf	??_CDCTxService& (0+255),c
  7321  01113A                     u8898:
  7322  01113A  5020               	movf	??_CDCTxService,w,c
  7323  01113C  0100               	movlb	0	; () banked
  7324  01113E  6FBC               	movwf	_CDCTxService$1762& (0+255),b
  7325  011140  6BBD               	clrf	(_CDCTxService$1762+1)& (0+255),b
  7326  011142  D005               	goto	l8966
  7327  011144                     l8964:
  7328                           
  7329                           ; BSR set to: 0
  7330  011144  0E00               	movlw	0
  7331  011146  0100               	movlb	0	; () banked
  7332  011148  6FBD               	movwf	(_CDCTxService$1762+1)& (0+255),b
  7333  01114A  0E00               	movlw	0
  7334  01114C  6FBC               	movwf	_CDCTxService$1762& (0+255),b
  7335  01114E                     l8966:
  7336                           
  7337                           ; BSR set to: 0
  7338  01114E  0100               	movlb	0	; () banked
  7339  011150  51BC               	movf	_CDCTxService$1762& (0+255),w,b
  7340  011152  0100               	movlb	0	; () banked
  7341  011154  11BD               	iorwf	(_CDCTxService$1762+1)& (0+255),w,b
  7342  011156  A4D8               	btfss	status,2,c
  7343  011158  0012               	return	
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;usb_device_cdc.c: 906: }
  7347                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  7348                           
  7349                           ; BSR set to: 0
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;usb_device_cdc.c: 903: {
  7353                           ;usb_device_cdc.c: 904: ;
  7354                           ;usb_device_cdc.c: 905: return;
  7355  01115A  0E03               	movlw	3
  7356  01115C  1839               	xorwf	_cdc_trf_state,w,c
  7357  01115E  A4D8               	btfss	status,2,c
  7358  011160  D002               	goto	l490
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  7362  011162  0E00               	movlw	0
  7363  011164  6E39               	movwf	_cdc_trf_state,c
  7364  011166                     l490:
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  7368  011166  5039               	movf	_cdc_trf_state,w,c
  7369  011168  B4D8               	btfsc	status,2,c
  7370  01116A  0012               	return	
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;usb_device_cdc.c: 923: }
  7374                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  7375                           
  7376                           ; BSR set to: 0
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;usb_device_cdc.c: 920: {
  7380                           ;usb_device_cdc.c: 921: ;
  7381                           ;usb_device_cdc.c: 922: return;
  7382  01116C  0E02               	movlw	2
  7383  01116E  1839               	xorwf	_cdc_trf_state,w,c
  7384  011170  A4D8               	btfss	status,2,c
  7385  011172  D016               	goto	l8982
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;usb_device_cdc.c: 929: {
  7389                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7390  011174  0E01               	movlw	1
  7391  011176  0100               	movlb	0	; () banked
  7392  011178  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
  7393  01117A  0E00               	movlw	0
  7394  01117C  0100               	movlb	0	; () banked
  7395  01117E  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
  7396  011180  0E00               	movlw	0
  7397  011182  0100               	movlb	0	; () banked
  7398  011184  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7399  011186  0E00               	movlw	0
  7400  011188  0100               	movlb	0	; () banked
  7401  01118A  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
  7402  01118C  0E02               	movlw	2
  7403  01118E  ECD7  F08D         	call	_USBTransferOnePacket
  7404  011192  C0B5  F07F         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  7405  011196  C0B6  F080         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  7406                           
  7407                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  7408  01119A  0E03               	movlw	3
  7409  01119C  6E39               	movwf	_cdc_trf_state,c
  7410                           
  7411                           ;usb_device_cdc.c: 933: }
  7412  01119E  0012               	return	
  7413  0111A0                     l8982:
  7414                           
  7415                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  7416  0111A0  0439               	decf	_cdc_trf_state,w,c
  7417  0111A2  A4D8               	btfss	status,2,c
  7418  0111A4  0012               	return	
  7419                           
  7420                           ;usb_device_cdc.c: 935: {
  7421                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  7422  0111A6  0E40               	movlw	64
  7423  0111A8  643A               	cpfsgt	_cdc_tx_len,c
  7424  0111AA  D004               	goto	l495
  7425                           
  7426                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  7427  0111AC  0E40               	movlw	64
  7428  0111AE  0100               	movlb	0	; () banked
  7429  0111B0  6FBF               	movwf	CDCTxService@byte_to_send& (0+255),b
  7430  0111B2  D002               	goto	l8988
  7431  0111B4                     l495:
  7432                           
  7433                           ;usb_device_cdc.c: 941: else
  7434                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  7435  0111B4  C03A  F0BF         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  7436  0111B8                     l8988:
  7437                           
  7438                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  7439  0111B8  0100               	movlb	0	; () banked
  7440  0111BA  51BF               	movf	CDCTxService@byte_to_send& (0+255),w,b
  7441  0111BC  0800               	sublw	0
  7442  0111BE  243A               	addwf	_cdc_tx_len,w,c
  7443  0111C0  6E3A               	movwf	_cdc_tx_len,c
  7444                           
  7445                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7446  0111C2  0E64               	movlw	low _cdc_data_tx
  7447  0111C4  0100               	movlb	0	; () banked
  7448  0111C6  6F75               	movwf	_pCDCDst& (0+255),b
  7449  0111C8  0E02               	movlw	high _cdc_data_tx
  7450  0111CA  0100               	movlb	0	; () banked
  7451  0111CC  6F76               	movwf	(_pCDCDst+1)& (0+255),b
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;usb_device_cdc.c: 951: i = byte_to_send;
  7455  0111CE  C0BF  F0BE         	movff	CDCTxService@byte_to_send,CDCTxService@i
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  7459  0111D2  0100               	movlb	0	; () banked
  7460  0111D4  518F               	movf	_cdc_mem_type& (0+255),w,b
  7461  0111D6  B4D8               	btfsc	status,2,c
  7462  0111D8  D013               	goto	l9004
  7463  0111DA  D02A               	goto	l9014
  7464  0111DC                     l8996:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;usb_device_cdc.c: 955: {
  7468                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  7469  0111DC  C078  FFD9         	movff	_pCDCSrc,fsr2l
  7470  0111E0  C079  FFDA         	movff	_pCDCSrc+1,fsr2h
  7471  0111E4  C075  FFE1         	movff	_pCDCDst,fsr1l
  7472  0111E8  C076  FFE2         	movff	_pCDCDst+1,fsr1h
  7473  0111EC  CFDF FFE7          	movff	indf2,indf1
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  7477  0111F0  0100               	movlb	0	; () banked
  7478  0111F2  4B75               	infsnz	_pCDCDst& (0+255),f,b
  7479  0111F4  2B76               	incf	(_pCDCDst+1)& (0+255),f,b
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  7483  0111F6  0100               	movlb	0	; () banked
  7484  0111F8  4B78               	infsnz	_pCDCSrc& (0+255),f,b
  7485  0111FA  2B79               	incf	(_pCDCSrc+1)& (0+255),f,b
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;usb_device_cdc.c: 959: i--;
  7489  0111FC  0100               	movlb	0	; () banked
  7490  0111FE  07BE               	decf	CDCTxService@i& (0+255),f,b
  7491  011200                     l9004:
  7492                           
  7493                           ; BSR set to: 0
  7494  011200  0100               	movlb	0	; () banked
  7495  011202  51BE               	movf	CDCTxService@i& (0+255),w,b
  7496  011204  0100               	movlb	0	; () banked
  7497  011206  B4D8               	btfsc	status,2,c
  7498  011208  D018               	goto	l9016
  7499  01120A  D7E8               	goto	l8996
  7500  01120C                     l9006:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;usb_device_cdc.c: 965: {
  7504                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  7505  01120C  C078  FFD9         	movff	_pCDCSrc,fsr2l
  7506  011210  C079  FFDA         	movff	_pCDCSrc+1,fsr2h
  7507  011214  C075  FFE1         	movff	_pCDCDst,fsr1l
  7508  011218  C076  FFE2         	movff	_pCDCDst+1,fsr1h
  7509  01121C  CFDF FFE7          	movff	indf2,indf1
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  7513  011220  0100               	movlb	0	; () banked
  7514  011222  4B75               	infsnz	_pCDCDst& (0+255),f,b
  7515  011224  2B76               	incf	(_pCDCDst+1)& (0+255),f,b
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  7519  011226  0100               	movlb	0	; () banked
  7520  011228  4B78               	infsnz	_pCDCSrc& (0+255),f,b
  7521  01122A  2B79               	incf	(_pCDCSrc+1)& (0+255),f,b
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;usb_device_cdc.c: 969: i--;
  7525  01122C  0100               	movlb	0	; () banked
  7526  01122E  07BE               	decf	CDCTxService@i& (0+255),f,b
  7527  011230                     l9014:
  7528                           
  7529                           ; BSR set to: 0
  7530  011230  0100               	movlb	0	; () banked
  7531  011232  51BE               	movf	CDCTxService@i& (0+255),w,b
  7532  011234  0100               	movlb	0	; () banked
  7533  011236  A4D8               	btfss	status,2,c
  7534  011238  D7E9               	goto	l9006
  7535  01123A                     l9016:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;usb_device_cdc.c: 970: }
  7539                           ;usb_device_cdc.c: 971: }
  7540                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  7541  01123A  503A               	movf	_cdc_tx_len,w,c
  7542  01123C  A4D8               	btfss	status,2,c
  7543  01123E  D009               	goto	l9024
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;usb_device_cdc.c: 978: {
  7547                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  7548  011240  0E40               	movlw	64
  7549  011242  0100               	movlb	0	; () banked
  7550  011244  19BF               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  7551  011246  A4D8               	btfss	status,2,c
  7552  011248  D002               	goto	l9022
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  7556  01124A  0E02               	movlw	2
  7557  01124C  D001               	goto	L1
  7558  01124E                     l9022:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;usb_device_cdc.c: 981: else
  7562                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  7563  01124E  0E03               	movlw	3
  7564  011250                     L1:
  7565  011250  6E39               	movwf	_cdc_trf_state,c
  7566  011252                     l9024:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;usb_device_cdc.c: 983: }
  7570                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7571  011252  0E01               	movlw	1
  7572  011254  0100               	movlb	0	; () banked
  7573  011256  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
  7574  011258  0E64               	movlw	low _cdc_data_tx
  7575  01125A  0100               	movlb	0	; () banked
  7576  01125C  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
  7577  01125E  0E02               	movlw	high _cdc_data_tx
  7578  011260  0100               	movlb	0	; () banked
  7579  011262  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7580  011264  C0BF  F0B8         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  7581  011268  0E02               	movlw	2
  7582  01126A  ECD7  F08D         	call	_USBTransferOnePacket
  7583  01126E  C0B5  F07F         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  7584  011272  C0B6  F080         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  7585  011276  0012               	return	
  7586  011278                     __end_of_CDCTxService:
  7587                           	opt stack 0
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           intcon2	equ	0xFF1
  7596                           indf0	equ	0xFEF
  7597                           postinc0	equ	0xFEE
  7598                           fsr0h	equ	0xFEA
  7599                           fsr0l	equ	0xFE9
  7600                           wreg	equ	0xFE8
  7601                           indf1	equ	0xFE7
  7602                           postdec1	equ	0xFE5
  7603                           fsr1h	equ	0xFE2
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           fsr2h	equ	0xFDA
  7609                           fsr2l	equ	0xFD9
  7610                           status	equ	0xFD8
  7611                           
  7612 ;; *************** function _ringbuf_put *****************
  7613 ;; Defined at:
  7614 ;;		line 20 in file "../My_library/My_ringbuf.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  rb              2   14[BANK0 ] PTR struct ringbuf
  7617 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  7618 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7619 ;;  asciicode       1   16[BANK0 ] unsigned char 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;		None               void
  7624 ;; Registers used:
  7625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7631 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7633 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7634 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7635 ;;Total ram usage:        7 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    5
  7638 ;; This function calls:
  7639 ;;		_ringbuf_num
  7640 ;; This function is called by:
  7641 ;;		_USB_task
  7642 ;;		_main
  7643 ;;		_ringbuf_put_num
  7644 ;;		_ringbuf_put_str
  7645 ;;		_ST7032_command
  7646 ;;		_ST7032_put
  7647 ;;		_ST7032_create_char
  7648 ;;		_ST7032_init
  7649 ;;		_terminal_task
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text36
  7654  011F08                     __ptext36:
  7655                           	opt stack 0
  7656  011F08                     _ringbuf_put:
  7657                           	opt stack 25
  7658                           
  7659                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  7660                           
  7661                           ;incstack = 0
  7662  011F08  C0C3  F0B5         	movff	ringbuf_put@rb,ringbuf_num@rb
  7663  011F0C  C0C4  F0B6         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  7664  011F10  EC12  F08C         	call	_ringbuf_num	;wreg free
  7665  011F14  0100               	movlb	0	; () banked
  7666  011F16  EE20 F002          	lfsr	2,2
  7667  011F1A  51C3               	movf	ringbuf_put@rb& (0+255),w,b
  7668  011F1C  26D9               	addwf	fsr2l,f,c
  7669  011F1E  51C4               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7670  011F20  22DA               	addwfc	fsr2h,f,c
  7671  011F22  50DE               	movf	postinc2,w,c
  7672  011F24  0100               	movlb	0	; () banked
  7673  011F26  5DB5               	subwf	?_ringbuf_num& (0+255),w,b
  7674  011F28  50DE               	movf	postinc2,w,c
  7675  011F2A  0100               	movlb	0	; () banked
  7676  011F2C  59B6               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  7677  011F2E  B0D8               	btfsc	status,0,c
  7678  011F30  0012               	return	
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  7682  011F32  0100               	movlb	0	; () banked
  7683  011F34  EE20 F004          	lfsr	2,4
  7684  011F38  51C3               	movf	ringbuf_put@rb& (0+255),w,b
  7685  011F3A  26D9               	addwf	fsr2l,f,c
  7686  011F3C  51C4               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7687  011F3E  22DA               	addwfc	fsr2h,f,c
  7688  011F40  CFDE F0C6          	movff	postinc2,??_ringbuf_put
  7689  011F44  CFDD F0C7          	movff	postdec2,??_ringbuf_put+1
  7690  011F48  C0C3  FFD9         	movff	ringbuf_put@rb,fsr2l
  7691  011F4C  C0C4  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  7692  011F50  CFDE F0C8          	movff	postinc2,??_ringbuf_put+2
  7693  011F54  CFDD F0C9          	movff	postdec2,??_ringbuf_put+3
  7694  011F58  0100               	movlb	0	; () banked
  7695  011F5A  51C6               	movf	??_ringbuf_put& (0+255),w,b
  7696  011F5C  0100               	movlb	0	; () banked
  7697  011F5E  25C8               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  7698  011F60  6ED9               	movwf	fsr2l,c
  7699  011F62  0100               	movlb	0	; () banked
  7700  011F64  51C7               	movf	(??_ringbuf_put+1)& (0+255),w,b
  7701  011F66  0100               	movlb	0	; () banked
  7702  011F68  21C9               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  7703  011F6A  6EDA               	movwf	fsr2h,c
  7704  011F6C  C0C5  FFDF         	movff	ringbuf_put@asciicode,indf2
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  7708  011F70  0100               	movlb	0	; () banked
  7709  011F72  EE20 F002          	lfsr	2,2
  7710  011F76  51C3               	movf	ringbuf_put@rb& (0+255),w,b
  7711  011F78  26D9               	addwf	fsr2l,f,c
  7712  011F7A  51C4               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7713  011F7C  22DA               	addwfc	fsr2h,f,c
  7714  011F7E  0100               	movlb	0	; () banked
  7715  011F80  EE10 F004          	lfsr	1,4
  7716  011F84  51C3               	movf	ringbuf_put@rb& (0+255),w,b
  7717  011F86  26E1               	addwf	fsr1l,f,c
  7718  011F88  51C4               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7719  011F8A  22E2               	addwfc	fsr1h,f,c
  7720  011F8C  CFE6 F0C8          	movff	postinc1,??_ringbuf_put+2
  7721  011F90  CFE5 F0C9          	movff	postdec1,??_ringbuf_put+3
  7722  011F94  0E01               	movlw	1
  7723  011F96  0100               	movlb	0	; () banked
  7724  011F98  27C8               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  7725  011F9A  0E00               	movlw	0
  7726  011F9C  23C9               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  7727  011F9E  50DE               	movf	postinc2,w,c
  7728  011FA0  0100               	movlb	0	; () banked
  7729  011FA2  5DC8               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  7730  011FA4  50DE               	movf	postinc2,w,c
  7731  011FA6  0100               	movlb	0	; () banked
  7732  011FA8  59C9               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  7733  011FAA  B0D8               	btfsc	status,0,c
  7734  011FAC  D00B               	goto	l9420
  7735                           
  7736                           ; BSR set to: 0
  7737  011FAE  0100               	movlb	0	; () banked
  7738  011FB0  EE20 F004          	lfsr	2,4
  7739  011FB4  51C3               	movf	ringbuf_put@rb& (0+255),w,b
  7740  011FB6  26D9               	addwf	fsr2l,f,c
  7741  011FB8  51C4               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7742  011FBA  22DA               	addwfc	fsr2h,f,c
  7743  011FBC  2ADE               	incf	postinc2,f,c
  7744  011FBE  0E00               	movlw	0
  7745  011FC0  22DD               	addwfc	postdec2,f,c
  7746  011FC2  0012               	return	
  7747  011FC4                     l9420:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;My_ringbuf.c: 24: else rb->head = 0;
  7751  011FC4  0100               	movlb	0	; () banked
  7752  011FC6  EE20 F004          	lfsr	2,4
  7753  011FCA  51C3               	movf	ringbuf_put@rb& (0+255),w,b
  7754  011FCC  26D9               	addwf	fsr2l,f,c
  7755  011FCE  51C4               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7756  011FD0  22DA               	addwfc	fsr2h,f,c
  7757  011FD2  0E00               	movlw	0
  7758  011FD4  6EDE               	movwf	postinc2,c
  7759  011FD6  0E00               	movlw	0
  7760  011FD8  6EDD               	movwf	postdec2,c
  7761                           
  7762                           ; BSR set to: 0
  7763  011FDA  0012               	return	
  7764  011FDC                     __end_of_ringbuf_put:
  7765                           	opt stack 0
  7766                           tblptru	equ	0xFF8
  7767                           tblptrh	equ	0xFF7
  7768                           tblptrl	equ	0xFF6
  7769                           tablat	equ	0xFF5
  7770                           prodh	equ	0xFF4
  7771                           prodl	equ	0xFF3
  7772                           intcon	equ	0xFF2
  7773                           intcon2	equ	0xFF1
  7774                           indf0	equ	0xFEF
  7775                           postinc0	equ	0xFEE
  7776                           fsr0h	equ	0xFEA
  7777                           fsr0l	equ	0xFE9
  7778                           wreg	equ	0xFE8
  7779                           indf1	equ	0xFE7
  7780                           postinc1	equ	0xFE6
  7781                           postdec1	equ	0xFE5
  7782                           fsr1h	equ	0xFE2
  7783                           fsr1l	equ	0xFE1
  7784                           indf2	equ	0xFDF
  7785                           postinc2	equ	0xFDE
  7786                           postdec2	equ	0xFDD
  7787                           fsr2h	equ	0xFDA
  7788                           fsr2l	equ	0xFD9
  7789                           status	equ	0xFD8
  7790                           
  7791 ;; *************** function _ringbuf_pop *****************
  7792 ;; Defined at:
  7793 ;;		line 45 in file "../My_library/My_ringbuf.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  7796 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  7797 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  ret             1   31[COMRAM] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      unsigned char 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7813 ;;Total ram usage:        7 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    5
  7816 ;; This function calls:
  7817 ;;		_ringbuf_num
  7818 ;; This function is called by:
  7819 ;;		_USB_task
  7820 ;;		_main
  7821 ;;		_ST7032_task
  7822 ;;		_terminal_task
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text37
  7827  01217A                     __ptext37:
  7828                           	opt stack 0
  7829  01217A                     _ringbuf_pop:
  7830                           	opt stack 25
  7831                           
  7832                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;incstack = 0
  7836  01217A  C0BD  F0B5         	movff	ringbuf_pop@rb,ringbuf_num@rb
  7837  01217E  C0BE  F0B6         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  7838  012182  EC12  F08C         	call	_ringbuf_num	;wreg free
  7839  012186  0100               	movlb	0	; () banked
  7840  012188  51B5               	movf	?_ringbuf_num& (0+255),w,b
  7841  01218A  0100               	movlb	0	; () banked
  7842  01218C  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7843  01218E  B4D8               	btfsc	status,2,c
  7844  012190  D056               	goto	l9438
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  7848  012192  0100               	movlb	0	; () banked
  7849  012194  EE20 F006          	lfsr	2,6
  7850  012198  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
  7851  01219A  26D9               	addwf	fsr2l,f,c
  7852  01219C  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7853  01219E  22DA               	addwfc	fsr2h,f,c
  7854  0121A0  CFDE F0BF          	movff	postinc2,??_ringbuf_pop
  7855  0121A4  CFDD F0C0          	movff	postdec2,??_ringbuf_pop+1
  7856  0121A8  C0BD  FFD9         	movff	ringbuf_pop@rb,fsr2l
  7857  0121AC  C0BE  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  7858  0121B0  CFDE F0C1          	movff	postinc2,??_ringbuf_pop+2
  7859  0121B4  CFDD F0C2          	movff	postdec2,??_ringbuf_pop+3
  7860  0121B8  0100               	movlb	0	; () banked
  7861  0121BA  51BF               	movf	??_ringbuf_pop& (0+255),w,b
  7862  0121BC  0100               	movlb	0	; () banked
  7863  0121BE  25C1               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  7864  0121C0  6ED9               	movwf	fsr2l,c
  7865  0121C2  0100               	movlb	0	; () banked
  7866  0121C4  51C0               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  7867  0121C6  0100               	movlb	0	; () banked
  7868  0121C8  21C2               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  7869  0121CA  6EDA               	movwf	fsr2h,c
  7870  0121CC  50DF               	movf	indf2,w,c
  7871  0121CE  6E20               	movwf	ringbuf_pop@ret,c
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  7875  0121D0  0100               	movlb	0	; () banked
  7876  0121D2  EE20 F002          	lfsr	2,2
  7877  0121D6  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
  7878  0121D8  26D9               	addwf	fsr2l,f,c
  7879  0121DA  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7880  0121DC  22DA               	addwfc	fsr2h,f,c
  7881  0121DE  0100               	movlb	0	; () banked
  7882  0121E0  EE10 F006          	lfsr	1,6
  7883  0121E4  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
  7884  0121E6  26E1               	addwf	fsr1l,f,c
  7885  0121E8  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7886  0121EA  22E2               	addwfc	fsr1h,f,c
  7887  0121EC  CFE6 F0C1          	movff	postinc1,??_ringbuf_pop+2
  7888  0121F0  CFE5 F0C2          	movff	postdec1,??_ringbuf_pop+3
  7889  0121F4  0E01               	movlw	1
  7890  0121F6  0100               	movlb	0	; () banked
  7891  0121F8  27C1               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  7892  0121FA  0E00               	movlw	0
  7893  0121FC  23C2               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  7894  0121FE  50DE               	movf	postinc2,w,c
  7895  012200  0100               	movlb	0	; () banked
  7896  012202  5DC1               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  7897  012204  50DE               	movf	postinc2,w,c
  7898  012206  0100               	movlb	0	; () banked
  7899  012208  59C2               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  7900  01220A  B0D8               	btfsc	status,0,c
  7901  01220C  D00B               	goto	l9430
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;My_ringbuf.c: 49: rb->tail++;
  7905  01220E  0100               	movlb	0	; () banked
  7906  012210  EE20 F006          	lfsr	2,6
  7907  012214  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
  7908  012216  26D9               	addwf	fsr2l,f,c
  7909  012218  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7910  01221A  22DA               	addwfc	fsr2h,f,c
  7911  01221C  2ADE               	incf	postinc2,f,c
  7912  01221E  0E00               	movlw	0
  7913  012220  22DD               	addwfc	postdec2,f,c
  7914                           
  7915                           ;My_ringbuf.c: 50: } else {
  7916  012222  D00B               	goto	l9432
  7917  012224                     l9430:
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;My_ringbuf.c: 51: rb->tail = 0;
  7921  012224  0100               	movlb	0	; () banked
  7922  012226  EE20 F006          	lfsr	2,6
  7923  01222A  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
  7924  01222C  26D9               	addwf	fsr2l,f,c
  7925  01222E  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7926  012230  22DA               	addwfc	fsr2h,f,c
  7927  012232  0E00               	movlw	0
  7928  012234  6EDE               	movwf	postinc2,c
  7929  012236  0E00               	movlw	0
  7930  012238  6EDD               	movwf	postdec2,c
  7931  01223A                     l9432:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;My_ringbuf.c: 52: }
  7935                           ;My_ringbuf.c: 53: return ret;
  7936  01223A  5020               	movf	ringbuf_pop@ret,w,c
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;My_ringbuf.c: 54: } else {
  7940                           
  7941                           ; BSR set to: 0
  7942  01223C  0012               	return	
  7943  01223E                     l9438:
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;My_ringbuf.c: 55: return 0;
  7947  01223E  0E00               	movlw	0
  7948                           
  7949                           ; BSR set to: 0
  7950  012240  0012               	return	
  7951  012242                     __end_of_ringbuf_pop:
  7952                           	opt stack 0
  7953                           tblptru	equ	0xFF8
  7954                           tblptrh	equ	0xFF7
  7955                           tblptrl	equ	0xFF6
  7956                           tablat	equ	0xFF5
  7957                           prodh	equ	0xFF4
  7958                           prodl	equ	0xFF3
  7959                           intcon	equ	0xFF2
  7960                           intcon2	equ	0xFF1
  7961                           indf0	equ	0xFEF
  7962                           postinc0	equ	0xFEE
  7963                           fsr0h	equ	0xFEA
  7964                           fsr0l	equ	0xFE9
  7965                           wreg	equ	0xFE8
  7966                           indf1	equ	0xFE7
  7967                           postinc1	equ	0xFE6
  7968                           postdec1	equ	0xFE5
  7969                           fsr1h	equ	0xFE2
  7970                           fsr1l	equ	0xFE1
  7971                           indf2	equ	0xFDF
  7972                           postinc2	equ	0xFDE
  7973                           postdec2	equ	0xFDD
  7974                           fsr2h	equ	0xFDA
  7975                           fsr2l	equ	0xFD9
  7976                           status	equ	0xFD8
  7977                           
  7978 ;; *************** function _USBDeviceTasks *****************
  7979 ;; Defined at:
  7980 ;;		line 489 in file "../My_library/usb/usb_device.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  i               1   28[BANK0 ] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;		None               void
  7987 ;; Registers used:
  7988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;Total ram usage:        1 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; Hardware stack levels required when called:   12
  8001 ;; This function calls:
  8002 ;;		_USBCtrlEPAllowStatusStage
  8003 ;;		_USBCtrlEPService
  8004 ;;		_USBDeviceInit
  8005 ;;		_USBStallHandler
  8006 ;;		_USBSuspend
  8007 ;;		_USBWakeFromSuspend
  8008 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8009 ;; This function is called by:
  8010 ;;		_USB_task
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text38
  8015  010F82                     __ptext38:
  8016                           	opt stack 0
  8017  010F82                     _USBDeviceTasks:
  8018                           	opt stack 17
  8019                           
  8020                           ;usb_device.c: 556: }
  8021                           ;usb_device.c: 578: if(USBDeviceState == DETACHED_STATE)
  8022                           
  8023                           ; BSR set to: 15
  8024                           
  8025                           ; BSR set to: 15
  8026                           ;usb_device.c: 555: return;
  8027                           
  8028                           ; BSR set to: 15
  8029                           ;usb_device.c: 554: {PIR2bits.USBIF = 0;};
  8030                           
  8031                           ;usb_device.c: 526: USBDeviceState = DETACHED_STATE;
  8032                           
  8033                           ;usb_device.c: 523: UIE = 0;
  8034                           
  8035                           ;usb_device.c: 518: {
  8036                           ;usb_device.c: 520: UCON = 0;
  8037                           
  8038                           ;usb_device.c: 491: uint8_t i;
  8039                           ;usb_device.c: 517: if (1 != 1)
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;incstack = 0
  8043  010F82  5034               	movf	_USBDeviceState,w,c
  8044  010F84  A4D8               	btfss	status,2,c
  8045  010F86  D014               	goto	l9246
  8046                           
  8047                           ;usb_device.c: 579: {
  8048                           ;usb_device.c: 581: UCON = 0;
  8049  010F88  0E00               	movlw	0
  8050  010F8A  6E65               	movwf	3941,c	;volatile
  8051                           
  8052                           ;usb_device.c: 584: UIE = 0;
  8053  010F8C  0E00               	movlw	0
  8054  010F8E  010F               	movlb	15	; () banked
  8055  010F90  6F36               	movwf	54,b	;volatile
  8056                           
  8057                           ;usb_device.c: 588: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8058  010F92  0E16               	movlw	22
  8059  010F94  010F               	movlb	15	; () banked
  8060  010F96  6F39               	movwf	57,b	;volatile
  8061  010F98  0E9F               	movlw	159
  8062  010F9A  010F               	movlb	15	; () banked
  8063  010F9C  6F37               	movwf	55,b	;volatile
  8064  010F9E  0E7B               	movlw	123
  8065  010FA0  010F               	movlb	15	; () banked
  8066  010FA2  6F36               	movwf	54,b	;volatile
  8067                           
  8068                           ;usb_device.c: 591: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8069  010FA4  D001               	goto	l152
  8070  010FA6                     l153:
  8071  010FA6  8665               	bsf	3941,3,c	;volatile
  8072  010FA8                     l152:
  8073  010FA8  A665               	btfss	3941,3,c	;volatile
  8074  010FAA  D7FD               	goto	l153
  8075                           
  8076                           ;usb_device.c: 594: USBDeviceState = ATTACHED_STATE;
  8077  010FAC  0E01               	movlw	1
  8078  010FAE  6E34               	movwf	_USBDeviceState,c
  8079  010FB0                     l9246:
  8080                           
  8081                           ;usb_device.c: 599: }
  8082                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
  8083  010FB0  0434               	decf	_USBDeviceState,w,c
  8084  010FB2  B4D8               	btfsc	status,2,c
  8085                           
  8086                           ;usb_device.c: 603: {
  8087                           ;usb_device.c: 613: if(!UCONbits.SE0)
  8088  010FB4  BA65               	btfsc	3941,5,c	;volatile
  8089  010FB6  D00B               	goto	l9256
  8090                           
  8091                           ;usb_device.c: 614: {
  8092                           ;usb_device.c: 615: {UIR = 0;};
  8093  010FB8  0E00               	movlw	0
  8094  010FBA  6E62               	movwf	3938,c	;volatile
  8095                           
  8096                           ;usb_device.c: 617: UIE=0;
  8097  010FBC  0E00               	movlw	0
  8098  010FBE  010F               	movlb	15	; () banked
  8099  010FC0  6F36               	movwf	54,b	;volatile
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
  8103  010FC2  010F               	movlb	15	; () banked
  8104  010FC4  8136               	bsf	54,0,b	;volatile
  8105                           
  8106                           ; BSR set to: 15
  8107                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
  8108  010FC6  010F               	movlb	15	; () banked
  8109  010FC8  8936               	bsf	54,4,b	;volatile
  8110                           
  8111                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
  8112  010FCA  0E02               	movlw	2
  8113  010FCC  6E34               	movwf	_USBDeviceState,c
  8114  010FCE                     l9256:
  8115                           
  8116                           ;usb_device.c: 622: }
  8117                           ;usb_device.c: 623: }
  8118                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  8119  010FCE  A462               	btfss	3938,2,c	;volatile
  8120  010FD0  D006               	goto	l9264
  8121  010FD2  010F               	movlb	15	; () banked
  8122  010FD4  A536               	btfss	54,2,b	;volatile
  8123  010FD6  D003               	goto	l9264
  8124                           
  8125                           ; BSR set to: 15
  8126                           ;usb_device.c: 640: {
  8127                           ;usb_device.c: 641: (UIR &= 0xFB);
  8128  010FD8  9462               	bcf	3938,2,c	;volatile
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;usb_device.c: 645: USBWakeFromSuspend();
  8132  010FDA  ECAE  F099         	call	_USBWakeFromSuspend	;wreg free
  8133  010FDE                     l9264:
  8134                           
  8135                           ;usb_device.c: 647: }
  8136                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
  8137  010FDE  A265               	btfss	3941,1,c	;volatile
  8138  010FE0  D002               	goto	l158
  8139                           
  8140                           ;usb_device.c: 653: {
  8141                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
  8142  010FE2  98A1               	bcf	4001,4,c	;volatile
  8143                           
  8144                           ;usb_device.c: 655: return;
  8145  010FE4  0012               	return	
  8146  010FE6                     l158:
  8147                           
  8148                           ;usb_device.c: 656: }
  8149                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8150  010FE6  A062               	btfss	3938,0,c	;volatile
  8151  010FE8  D008               	goto	l9276
  8152  010FEA  010F               	movlb	15	; () banked
  8153  010FEC  A136               	btfss	54,0,b	;volatile
  8154  010FEE  D005               	goto	l9276
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;usb_device.c: 669: {
  8158                           ;usb_device.c: 670: USBDeviceInit();
  8159  010FF0  EC3C  F089         	call	_USBDeviceInit	;wreg free
  8160                           
  8161                           ;usb_device.c: 674: ;
  8162                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
  8163  010FF4  0E04               	movlw	4
  8164  010FF6  6E34               	movwf	_USBDeviceState,c
  8165                           
  8166                           ;usb_device.c: 686: (UIR &= 0xFE);
  8167  010FF8  9062               	bcf	3938,0,c	;volatile
  8168  010FFA                     l9276:
  8169                           
  8170                           ;usb_device.c: 687: }
  8171                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8172  010FFA  A862               	btfss	3938,4,c	;volatile
  8173  010FFC  D006               	goto	l9284
  8174  010FFE  010F               	movlb	15	; () banked
  8175  011000  A936               	btfss	54,4,b	;volatile
  8176  011002  D003               	goto	l9284
  8177                           
  8178                           ; BSR set to: 15
  8179                           ;usb_device.c: 693: {
  8180                           ;usb_device.c: 698: USBSuspend();
  8181  011004  EC70  F09A         	call	_USBSuspend	;wreg free
  8182                           
  8183                           ;usb_device.c: 701: (UIR &= 0xEF);
  8184  011008  9862               	bcf	3938,4,c	;volatile
  8185  01100A                     l9284:
  8186                           
  8187                           ;usb_device.c: 702: }
  8188                           ;usb_device.c: 704: if(UIRbits.SOFIF)
  8189  01100A  AC62               	btfss	3938,6,c	;volatile
  8190  01100C  D01D               	goto	l9300
  8191                           
  8192                           ;usb_device.c: 705: {
  8193                           ;usb_device.c: 706: if(UIEbits.SOFIE)
  8194  01100E  010F               	movlb	15	; () banked
  8195  011010  AD36               	btfss	54,6,b	;volatile
  8196  011012  D012               	goto	l9290
  8197                           
  8198                           ; BSR set to: 15
  8199                           ;usb_device.c: 707: {
  8200                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8201  011014  0E00               	movlw	0
  8202  011016  0100               	movlb	0	; () banked
  8203  011018  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8204  01101A  0E73               	movlw	115
  8205  01101C  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8206  01101E  0E00               	movlw	0
  8207  011020  0100               	movlb	0	; () banked
  8208  011022  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8209  011024  0E00               	movlw	0
  8210  011026  0100               	movlb	0	; () banked
  8211  011028  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8212  01102A  0E00               	movlw	0
  8213  01102C  0100               	movlb	0	; () banked
  8214  01102E  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8215  011030  0E01               	movlw	1
  8216  011032  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8217  011034  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8218  011038                     l9290:
  8219                           
  8220                           ;usb_device.c: 709: }
  8221                           ;usb_device.c: 710: (UIR &= 0xBF);
  8222  011038  9C62               	bcf	3938,6,c	;volatile
  8223                           
  8224                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  8225  01103A  5037               	movf	_USBStatusStageTimeoutCounter,w,c
  8226  01103C  A4D8               	btfss	status,2,c
  8227                           
  8228                           ;usb_device.c: 736: {
  8229                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  8230  01103E  0637               	decf	_USBStatusStageTimeoutCounter,f,c
  8231                           
  8232                           ;usb_device.c: 738: }
  8233                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  8234  011040  5037               	movf	_USBStatusStageTimeoutCounter,w,c
  8235  011042  B4D8               	btfsc	status,2,c
  8236                           
  8237                           ;usb_device.c: 745: {
  8238                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  8239  011044  EC84  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8240  011048                     l9300:
  8241                           
  8242                           ;usb_device.c: 747: }
  8243                           ;usb_device.c: 749: }
  8244                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8245  011048  AA62               	btfss	3938,5,c	;volatile
  8246  01104A  D004               	goto	l9306
  8247  01104C  010F               	movlb	15	; () banked
  8248  01104E  BB36               	btfsc	54,5,b	;volatile
  8249                           
  8250                           ; BSR set to: 15
  8251                           ;usb_device.c: 752: {
  8252                           ;usb_device.c: 753: USBStallHandler();
  8253  011050  EC6D  F099         	call	_USBStallHandler	;wreg free
  8254  011054                     l9306:
  8255                           
  8256                           ;usb_device.c: 754: }
  8257                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8258  011054  A262               	btfss	3938,1,c	;volatile
  8259  011056  D016               	goto	l9314
  8260  011058  010F               	movlb	15	; () banked
  8261  01105A  A336               	btfss	54,1,b	;volatile
  8262  01105C  D013               	goto	l9314
  8263                           
  8264                           ; BSR set to: 15
  8265                           ;usb_device.c: 757: {
  8266                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8267  01105E  0E7F               	movlw	127
  8268  011060  0100               	movlb	0	; () banked
  8269  011062  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8270  011064  69C0               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8271  011066  0E00               	movlw	0
  8272  011068  0100               	movlb	0	; () banked
  8273  01106A  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8274  01106C  0E00               	movlw	0
  8275  01106E  0100               	movlb	0	; () banked
  8276  011070  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8277  011072  0E00               	movlw	0
  8278  011074  0100               	movlb	0	; () banked
  8279  011076  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8280  011078  0E01               	movlw	1
  8281  01107A  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8282  01107C  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8283                           
  8284                           ;usb_device.c: 759: {UEIR = 0;};
  8285  011080  0E00               	movlw	0
  8286  011082  6E63               	movwf	3939,c	;volatile
  8287  011084                     l9314:
  8288                           
  8289                           ;usb_device.c: 767: }
  8290                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  8291  011084  0E04               	movlw	4
  8292  011086  6034               	cpfslt	_USBDeviceState,c
  8293  011088  D002               	goto	l167
  8294                           
  8295                           ;usb_device.c: 775: {
  8296                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  8297  01108A  98A1               	bcf	4001,4,c	;volatile
  8298                           
  8299                           ;usb_device.c: 777: return;
  8300  01108C  0012               	return	
  8301  01108E                     l167:
  8302                           
  8303                           ;usb_device.c: 778: }
  8304                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  8305  01108E  010F               	movlb	15	; () banked
  8306  011090  A736               	btfss	54,3,b	;volatile
  8307  011092  D040               	goto	l168
  8308                           
  8309                           ; BSR set to: 15
  8310                           ;usb_device.c: 784: {
  8311                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  8312  011094  0E00               	movlw	0
  8313  011096  0100               	movlb	0	; () banked
  8314  011098  6FD1               	movwf	USBDeviceTasks@i& (0+255),b
  8315  01109A                     l9320:
  8316                           
  8317                           ; BSR set to: 0
  8318  01109A  0E03               	movlw	3
  8319  01109C  0100               	movlb	0	; () banked
  8320  01109E  65D1               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8321  0110A0  D001               	goto	l169
  8322  0110A2  D038               	goto	l168
  8323  0110A4                     l169:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;usb_device.c: 786: {
  8327                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  8328  0110A4  A662               	btfss	3938,3,c	;volatile
  8329  0110A6  D036               	goto	l168
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;usb_device.c: 788: {
  8333                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  8334  0110A8  CF64 F03F          	movff	3940,_USTATcopy	;volatile
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  8338  0110AC  303F               	rrcf	_USTATcopy,w,c
  8339  0110AE  32E8               	rrcf	wreg,f,c
  8340  0110B0  32E8               	rrcf	wreg,f,c
  8341  0110B2  0B0F               	andlw	15
  8342  0110B4  6E3C               	movwf	_endpoint_number,c
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;usb_device.c: 793: (UIR &= 0xF7);
  8346  0110B6  9662               	bcf	3938,3,c	;volatile
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  8350  0110B8  B43F               	btfsc	_USTATcopy,2,c
  8351  0110BA  D007               	goto	l9334
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;usb_device.c: 799: {
  8355                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8356  0110BC  503C               	movf	_endpoint_number,w,c
  8357  0110BE  0D01               	mullw	1
  8358  0110C0  0E72               	movlw	low _ep_data_out
  8359  0110C2  24F3               	addwf	prodl,w,c
  8360  0110C4  6ED9               	movwf	fsr2l,c
  8361  0110C6  0E00               	movlw	high _ep_data_out
  8362  0110C8  D006               	goto	L2
  8363  0110CA                     l9334:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;usb_device.c: 802: else
  8367                           ;usb_device.c: 803: {
  8368                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8369  0110CA  503C               	movf	_endpoint_number,w,c
  8370  0110CC  0D01               	mullw	1
  8371  0110CE  0E6F               	movlw	low _ep_data_in
  8372  0110D0  24F3               	addwf	prodl,w,c
  8373  0110D2  6ED9               	movwf	fsr2l,c
  8374  0110D4  0E00               	movlw	high _ep_data_in
  8375  0110D6                     L2:
  8376  0110D6  20F4               	addwfc	prodh,w,c
  8377  0110D8  6EDA               	movwf	fsr2h,c
  8378  0110DA  0100               	movlb	0	; () banked
  8379  0110DC  70DF               	btg	indf2,0,c
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;usb_device.c: 805: }
  8383                           ;usb_device.c: 810: if(endpoint_number == 0)
  8384                           
  8385                           ; BSR set to: 0
  8386  0110DE  503C               	movf	_endpoint_number,w,c
  8387  0110E0  A4D8               	btfss	status,2,c
  8388  0110E2  D003               	goto	l9340
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;usb_device.c: 811: {
  8392                           ;usb_device.c: 812: USBCtrlEPService();
  8393  0110E4  ECFA  F08C         	call	_USBCtrlEPService	;wreg free
  8394                           
  8395                           ;usb_device.c: 813: }
  8396  0110E8  D012               	goto	l9342
  8397  0110EA                     l9340:
  8398                           
  8399                           ;usb_device.c: 814: else
  8400                           ;usb_device.c: 815: {
  8401                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8402  0110EA  0E00               	movlw	0
  8403  0110EC  0100               	movlb	0	; () banked
  8404  0110EE  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8405  0110F0  0E72               	movlw	114
  8406  0110F2  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8407  0110F4  0E3F               	movlw	low _USTATcopy
  8408  0110F6  0100               	movlb	0	; () banked
  8409  0110F8  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8410  0110FA  0E00               	movlw	high _USTATcopy
  8411  0110FC  0100               	movlb	0	; () banked
  8412  0110FE  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8413  011100  0E00               	movlw	0
  8414  011102  0100               	movlb	0	; () banked
  8415  011104  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8416  011106  0E00               	movlw	0
  8417  011108  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8418  01110A  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8419  01110E                     l9342:
  8420  01110E  0100               	movlb	0	; () banked
  8421  011110  2BD1               	incf	USBDeviceTasks@i& (0+255),f,b
  8422  011112  D7C3               	goto	l9320
  8423  011114                     l168:
  8424                           
  8425                           ;usb_device.c: 822: }
  8426                           ;usb_device.c: 823: }
  8427                           ;usb_device.c: 824: }
  8428                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  8429  011114  98A1               	bcf	4001,4,c	;volatile
  8430  011116  0012               	return		;funcret
  8431  011118                     __end_of_USBDeviceTasks:
  8432                           	opt stack 0
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           intcon2	equ	0xFF1
  8441                           indf0	equ	0xFEF
  8442                           postinc0	equ	0xFEE
  8443                           fsr0h	equ	0xFEA
  8444                           fsr0l	equ	0xFE9
  8445                           wreg	equ	0xFE8
  8446                           indf1	equ	0xFE7
  8447                           postinc1	equ	0xFE6
  8448                           postdec1	equ	0xFE5
  8449                           fsr1h	equ	0xFE2
  8450                           fsr1l	equ	0xFE1
  8451                           indf2	equ	0xFDF
  8452                           postinc2	equ	0xFDE
  8453                           postdec2	equ	0xFDD
  8454                           fsr2h	equ	0xFDA
  8455                           fsr2l	equ	0xFD9
  8456                           status	equ	0xFD8
  8457                           
  8458 ;; *************** function _USBWakeFromSuspend *****************
  8459 ;; Defined at:
  8460 ;;		line 2302 in file "../My_library/usb/usb_device.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;		None
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;		None
  8465 ;; Return value:  Size  Location     Type
  8466 ;;		None               void
  8467 ;; Registers used:
  8468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;Total ram usage:        0 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    8
  8481 ;; This function calls:
  8482 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8483 ;; This function is called by:
  8484 ;;		_USBDeviceTasks
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text39
  8489  01335C                     __ptext39:
  8490                           	opt stack 0
  8491  01335C                     _USBWakeFromSuspend:
  8492                           	opt stack 20
  8493                           
  8494                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
  8495                           
  8496                           ;incstack = 0
  8497  01335C  0E00               	movlw	0
  8498  01335E  0100               	movlb	0	; () banked
  8499  013360  6F8C               	movwf	_USBBusIsSuspended& (0+255),b
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8503  013362  0E00               	movlw	0
  8504  013364  0100               	movlb	0	; () banked
  8505  013366  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8506  013368  0E74               	movlw	116
  8507  01336A  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8508  01336C  0E00               	movlw	0
  8509  01336E  0100               	movlb	0	; () banked
  8510  013370  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8511  013372  0E00               	movlw	0
  8512  013374  0100               	movlb	0	; () banked
  8513  013376  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8514  013378  0E00               	movlw	0
  8515  01337A  0100               	movlb	0	; () banked
  8516  01337C  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8517  01337E  0E00               	movlw	0
  8518  013380  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8519  013382  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8520                           
  8521                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
  8522  013386  9265               	bcf	3941,1,c	;volatile
  8523                           
  8524                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
  8525  013388  010F               	movlb	15	; () banked
  8526  01338A  9536               	bcf	54,2,b	;volatile
  8527                           
  8528                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
  8529  01338C  D001               	goto	l8862
  8530  01338E                     l8860:
  8531                           
  8532                           ;usb_device.c: 2342: {
  8533                           ;usb_device.c: 2343: (UIR &= 0xFB);
  8534  01338E  9462               	bcf	3938,2,c	;volatile
  8535  013390                     l8862:
  8536  013390  A462               	btfss	3938,2,c	;volatile
  8537  013392  0012               	return	
  8538  013394  D7FC               	goto	l8860
  8539  013396                     __end_of_USBWakeFromSuspend:
  8540                           	opt stack 0
  8541                           tblptru	equ	0xFF8
  8542                           tblptrh	equ	0xFF7
  8543                           tblptrl	equ	0xFF6
  8544                           tablat	equ	0xFF5
  8545                           prodh	equ	0xFF4
  8546                           prodl	equ	0xFF3
  8547                           intcon	equ	0xFF2
  8548                           intcon2	equ	0xFF1
  8549                           indf0	equ	0xFEF
  8550                           postinc0	equ	0xFEE
  8551                           fsr0h	equ	0xFEA
  8552                           fsr0l	equ	0xFE9
  8553                           wreg	equ	0xFE8
  8554                           indf1	equ	0xFE7
  8555                           postinc1	equ	0xFE6
  8556                           postdec1	equ	0xFE5
  8557                           fsr1h	equ	0xFE2
  8558                           fsr1l	equ	0xFE1
  8559                           indf2	equ	0xFDF
  8560                           postinc2	equ	0xFDE
  8561                           postdec2	equ	0xFDD
  8562                           fsr2h	equ	0xFDA
  8563                           fsr2l	equ	0xFD9
  8564                           status	equ	0xFD8
  8565                           
  8566 ;; *************** function _USBSuspend *****************
  8567 ;; Defined at:
  8568 ;;		line 2245 in file "../My_library/usb/usb_device.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;		None               void
  8575 ;; Registers used:
  8576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    8
  8589 ;; This function calls:
  8590 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8591 ;; This function is called by:
  8592 ;;		_USBDeviceTasks
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text40
  8597  0134E0                     __ptext40:
  8598                           	opt stack 0
  8599  0134E0                     _USBSuspend:
  8600                           	opt stack 20
  8601                           
  8602                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  8603                           
  8604                           ;incstack = 0
  8605  0134E0  010F               	movlb	15	; () banked
  8606  0134E2  8536               	bsf	54,2,b	;volatile
  8607                           
  8608                           ; BSR set to: 15
  8609                           ;usb_device.c: 2271: (UIR &= 0xEF);
  8610  0134E4  9862               	bcf	3938,4,c	;volatile
  8611                           
  8612                           ; BSR set to: 15
  8613                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  8614  0134E6  8265               	bsf	3941,1,c	;volatile
  8615                           
  8616                           ; BSR set to: 15
  8617                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  8618  0134E8  0E01               	movlw	1
  8619  0134EA  0100               	movlb	0	; () banked
  8620  0134EC  6F8C               	movwf	_USBBusIsSuspended& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8624  0134EE  0E00               	movlw	0
  8625  0134F0  0100               	movlb	0	; () banked
  8626  0134F2  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8627  0134F4  0E75               	movlw	117
  8628  0134F6  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8629  0134F8  0E00               	movlw	0
  8630  0134FA  0100               	movlb	0	; () banked
  8631  0134FC  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8632  0134FE  0E00               	movlw	0
  8633  013500  0100               	movlb	0	; () banked
  8634  013502  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8635  013504  0E00               	movlw	0
  8636  013506  0100               	movlb	0	; () banked
  8637  013508  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8638  01350A  0E00               	movlw	0
  8639  01350C  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8640  01350E  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8641  013512  0012               	return		;funcret
  8642  013514                     __end_of_USBSuspend:
  8643                           	opt stack 0
  8644                           tblptru	equ	0xFF8
  8645                           tblptrh	equ	0xFF7
  8646                           tblptrl	equ	0xFF6
  8647                           tablat	equ	0xFF5
  8648                           prodh	equ	0xFF4
  8649                           prodl	equ	0xFF3
  8650                           intcon	equ	0xFF2
  8651                           intcon2	equ	0xFF1
  8652                           indf0	equ	0xFEF
  8653                           postinc0	equ	0xFEE
  8654                           fsr0h	equ	0xFEA
  8655                           fsr0l	equ	0xFE9
  8656                           wreg	equ	0xFE8
  8657                           indf1	equ	0xFE7
  8658                           postinc1	equ	0xFE6
  8659                           postdec1	equ	0xFE5
  8660                           fsr1h	equ	0xFE2
  8661                           fsr1l	equ	0xFE1
  8662                           indf2	equ	0xFDF
  8663                           postinc2	equ	0xFDE
  8664                           postdec2	equ	0xFDD
  8665                           fsr2h	equ	0xFDA
  8666                           fsr2l	equ	0xFD9
  8667                           status	equ	0xFD8
  8668                           
  8669 ;; *************** function _USBStallHandler *****************
  8670 ;; Defined at:
  8671 ;;		line 2202 in file "../My_library/usb/usb_device.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;		None               void
  8678 ;; Registers used:
  8679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;Total ram usage:        1 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:    4
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_USBDeviceTasks
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text41
  8700  0132DA                     __ptext41:
  8701                           	opt stack 0
  8702  0132DA                     _USBStallHandler:
  8703                           	opt stack 24
  8704                           
  8705                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  8706                           
  8707                           ;incstack = 0
  8708  0132DA  010F               	movlb	15	; () banked
  8709  0132DC  A126               	btfss	38,0,b	;volatile
  8710  0132DE  D01E               	goto	l296
  8711                           
  8712                           ; BSR set to: 15
  8713                           ;usb_device.c: 2215: {
  8714                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8715  0132E0  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8716  0132E4  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8717  0132E8  0E80               	movlw	128
  8718  0132EA  18DE               	xorwf	postinc2,w,c
  8719  0132EC  A4D8               	btfss	status,2,c
  8720  0132EE  D014               	goto	l8884
  8721                           
  8722                           ; BSR set to: 15
  8723  0132F0  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  8724  0132F4  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8725  0132F8  0E84               	movlw	132
  8726  0132FA  18DE               	xorwf	postinc2,w,c
  8727  0132FC  A4D8               	btfss	status,2,c
  8728  0132FE  D00C               	goto	l8884
  8729                           
  8730                           ; BSR set to: 15
  8731                           ;usb_device.c: 2218: {
  8732                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8733  013300  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8734  013304  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8735  013308  0E0C               	movlw	12
  8736  01330A  6EDF               	movwf	indf2,c
  8737                           
  8738                           ; BSR set to: 15
  8739                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8740  01330C  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8741  013310  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8742  013314  0E00               	movlw	0
  8743  013316  8EDB               	bsf	plusw2,7,c
  8744  013318                     l8884:
  8745                           
  8746                           ; BSR set to: 15
  8747                           ;usb_device.c: 2222: }
  8748                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  8749  013318  010F               	movlb	15	; () banked
  8750  01331A  9126               	bcf	38,0,b	;volatile
  8751  01331C                     l296:
  8752                           
  8753                           ; BSR set to: 15
  8754                           ;usb_device.c: 2224: }
  8755                           ;usb_device.c: 2226: (UIR &= 0xDF);
  8756  01331C  9A62               	bcf	3938,5,c	;volatile
  8757                           
  8758                           ; BSR set to: 15
  8759  01331E  0012               	return		;funcret
  8760  013320                     __end_of_USBStallHandler:
  8761                           	opt stack 0
  8762                           tblptru	equ	0xFF8
  8763                           tblptrh	equ	0xFF7
  8764                           tblptrl	equ	0xFF6
  8765                           tablat	equ	0xFF5
  8766                           prodh	equ	0xFF4
  8767                           prodl	equ	0xFF3
  8768                           intcon	equ	0xFF2
  8769                           intcon2	equ	0xFF1
  8770                           indf0	equ	0xFEF
  8771                           postinc0	equ	0xFEE
  8772                           fsr0h	equ	0xFEA
  8773                           fsr0l	equ	0xFE9
  8774                           wreg	equ	0xFE8
  8775                           indf1	equ	0xFE7
  8776                           postinc1	equ	0xFE6
  8777                           postdec1	equ	0xFE5
  8778                           fsr1h	equ	0xFE2
  8779                           fsr1l	equ	0xFE1
  8780                           indf2	equ	0xFDF
  8781                           postinc2	equ	0xFDE
  8782                           postdec2	equ	0xFDD
  8783                           plusw2	equ	0xFDB
  8784                           fsr2h	equ	0xFDA
  8785                           fsr2l	equ	0xFD9
  8786                           status	equ	0xFD8
  8787                           
  8788 ;; *************** function _USBDeviceInit *****************
  8789 ;; Defined at:
  8790 ;;		line 298 in file "../My_library/usb/usb_device.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  i               1   31[COMRAM] unsigned char 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;		None               void
  8797 ;; Registers used:
  8798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;Total ram usage:        1 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    5
  8811 ;; This function calls:
  8812 ;;		_memset
  8813 ;; This function is called by:
  8814 ;;		_USBDeviceTasks
  8815 ;;		_USB_init
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text42
  8820  011278                     __ptext42:
  8821                           	opt stack 0
  8822  011278                     _USBDeviceInit:
  8823                           	opt stack 23
  8824                           
  8825                           ;usb_device.c: 300: uint8_t i;
  8826                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  8827                           
  8828                           ; BSR set to: 15
  8829                           ;incstack = 0
  8830  011278  98A0               	bcf	4000,4,c	;volatile
  8831                           
  8832                           ;usb_device.c: 305: {UEIR = 0;};
  8833  01127A  0E00               	movlw	0
  8834  01127C  6E63               	movwf	3939,c	;volatile
  8835                           
  8836                           ;usb_device.c: 308: {UIR = 0;};
  8837  01127E  0E00               	movlw	0
  8838  011280  6E62               	movwf	3938,c	;volatile
  8839                           
  8840                           ;usb_device.c: 311: UEP0 = 0;
  8841  011282  0E00               	movlw	0
  8842  011284  010F               	movlb	15	; () banked
  8843  011286  6F26               	movwf	38,b	;volatile
  8844                           
  8845                           ; BSR set to: 15
  8846                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  8847  011288  0E27               	movlw	39
  8848  01128A  0100               	movlb	0	; () banked
  8849  01128C  6FB5               	movwf	memset@p1& (0+255),b
  8850  01128E  0E0F               	movlw	15
  8851  011290  0100               	movlb	0	; () banked
  8852  011292  6FB6               	movwf	(memset@p1+1)& (0+255),b
  8853  011294  0E00               	movlw	0
  8854  011296  0100               	movlb	0	; () banked
  8855  011298  6FB8               	movwf	(memset@c+1)& (0+255),b
  8856  01129A  0E00               	movlw	0
  8857  01129C  6FB7               	movwf	memset@c& (0+255),b
  8858  01129E  0E00               	movlw	0
  8859  0112A0  0100               	movlb	0	; () banked
  8860  0112A2  6FBA               	movwf	(memset@n+1)& (0+255),b
  8861  0112A4  0E02               	movlw	2
  8862  0112A6  6FB9               	movwf	memset@n& (0+255),b
  8863  0112A8  EC8A  F09A         	call	_memset	;wreg free
  8864                           
  8865                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8866  0112AC  0E16               	movlw	22
  8867  0112AE  010F               	movlb	15	; () banked
  8868  0112B0  6F39               	movwf	57,b	;volatile
  8869                           
  8870                           ; BSR set to: 15
  8871  0112B2  0E9F               	movlw	159
  8872  0112B4  010F               	movlb	15	; () banked
  8873  0112B6  6F37               	movwf	55,b	;volatile
  8874                           
  8875                           ; BSR set to: 15
  8876  0112B8  0E7B               	movlw	123
  8877  0112BA  010F               	movlb	15	; () banked
  8878  0112BC  6F36               	movwf	54,b	;volatile
  8879                           
  8880                           ; BSR set to: 15
  8881                           ;usb_device.c: 318: ;
  8882                           ;usb_device.c: 321: ;
  8883                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  8884  0112BE  0E00               	movlw	0
  8885  0112C0  6E20               	movwf	USBDeviceInit@i,c
  8886  0112C2                     l8798:
  8887                           
  8888                           ; BSR set to: 15
  8889  0112C2  0E0B               	movlw	11
  8890  0112C4  6420               	cpfsgt	USBDeviceInit@i,c
  8891  0112C6  D001               	goto	l8802
  8892  0112C8  D00E               	goto	l140
  8893  0112CA                     l8802:
  8894                           
  8895                           ;usb_device.c: 325: {
  8896                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  8897  0112CA  5020               	movf	USBDeviceInit@i,w,c
  8898  0112CC  0D04               	mullw	4
  8899  0112CE  0E00               	movlw	0
  8900  0112D0  24F3               	addwf	prodl,w,c
  8901  0112D2  6ED9               	movwf	fsr2l,c
  8902  0112D4  0E0D               	movlw	13
  8903  0112D6  20F4               	addwfc	prodh,w,c
  8904  0112D8  6EDA               	movwf	fsr2h,c
  8905  0112DA  6ADE               	clrf	postinc2,c
  8906  0112DC  6ADE               	clrf	postinc2,c
  8907  0112DE  6ADE               	clrf	postinc2,c
  8908  0112E0  6ADD               	clrf	postdec2,c
  8909  0112E2  2A20               	incf	USBDeviceInit@i,f,c
  8910  0112E4  D7EE               	goto	l8798
  8911  0112E6                     l140:
  8912                           
  8913                           ;usb_device.c: 327: }
  8914                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  8915  0112E6  8C65               	bsf	3941,6,c	;volatile
  8916                           
  8917                           ;usb_device.c: 333: UADDR = 0x00;
  8918  0112E8  0E00               	movlw	0
  8919  0112EA  010F               	movlb	15	; () banked
  8920  0112EC  6F38               	movwf	56,b	;volatile
  8921                           
  8922                           ; BSR set to: 15
  8923                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  8924  0112EE  9865               	bcf	3941,4,c	;volatile
  8925                           
  8926                           ; BSR set to: 15
  8927                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  8928  0112F0  9C65               	bcf	3941,6,c	;volatile
  8929                           
  8930                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  8931  0112F2  D00B               	goto	l8822
  8932  0112F4                     l8814:
  8933                           
  8934                           ;usb_device.c: 343: {
  8935                           ;usb_device.c: 344: (UIR &= 0xF7);
  8936  0112F4  9662               	bcf	3938,3,c	;volatile
  8937                           
  8938                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  8939  0112F6  0E00               	movlw	0
  8940  0112F8  6E24               	movwf	_inPipes+3,c
  8941                           
  8942                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  8943  0112FA  0E00               	movlw	0
  8944  0112FC  0100               	movlb	0	; () banked
  8945  0112FE  6F63               	movwf	(_outPipes+3)& (0+255),b
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  8949  011300  0E00               	movlw	0
  8950  011302  0100               	movlb	0	; () banked
  8951  011304  6F65               	movwf	(_outPipes+5)& (0+255),b
  8952  011306  0E00               	movlw	0
  8953  011308  6F64               	movwf	(_outPipes+4)& (0+255),b
  8954  01130A                     l8822:
  8955  01130A  B662               	btfsc	3938,3,c	;volatile
  8956  01130C  D7F3               	goto	l8814
  8957                           
  8958                           ;usb_device.c: 349: }
  8959                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  8960  01130E  0E01               	movlw	1
  8961  011310  6E35               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8962                           
  8963                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  8964  011312  0E01               	movlw	1
  8965  011314  6E36               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8966                           
  8967                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  8968  011316  0E00               	movlw	0
  8969  011318  0100               	movlb	0	; () banked
  8970  01131A  6F8D               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8971                           
  8972                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  8973  01131C  0E00               	movlw	0
  8974  01131E  0100               	movlb	0	; () banked
  8975  011320  6F8E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  8976                           
  8977                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  8978  011322  0E00               	movlw	0
  8979  011324  0100               	movlb	0	; () banked
  8980  011326  6F8C               	movwf	_USBBusIsSuspended& (0+255),b
  8981                           
  8982                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  8983  011328  0E00               	movlw	0
  8984  01132A  6E20               	movwf	USBDeviceInit@i,c
  8985  01132C                     l8826:
  8986                           
  8987                           ; BSR set to: 0
  8988  01132C  0E02               	movlw	2
  8989  01132E  6420               	cpfsgt	USBDeviceInit@i,c
  8990  011330  D001               	goto	l8830
  8991  011332  D02E               	goto	l8836
  8992  011334                     l8830:
  8993                           
  8994                           ;usb_device.c: 363: {
  8995                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  8996  011334  5020               	movf	USBDeviceInit@i,w,c
  8997  011336  0D02               	mullw	2
  8998  011338  0E27               	movlw	low _pBDTEntryIn
  8999  01133A  24F3               	addwf	prodl,w,c
  9000  01133C  6ED9               	movwf	fsr2l,c
  9001  01133E  0E00               	movlw	high _pBDTEntryIn
  9002  011340  20F4               	addwfc	prodh,w,c
  9003  011342  6EDA               	movwf	fsr2h,c
  9004  011344  0E00               	movlw	0
  9005  011346  6EDE               	movwf	postinc2,c
  9006  011348  0E00               	movlw	0
  9007  01134A  6EDD               	movwf	postdec2,c
  9008                           
  9009                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  9010  01134C  5020               	movf	USBDeviceInit@i,w,c
  9011  01134E  0D02               	mullw	2
  9012  011350  0E69               	movlw	low _pBDTEntryOut
  9013  011352  24F3               	addwf	prodl,w,c
  9014  011354  6ED9               	movwf	fsr2l,c
  9015  011356  0E00               	movlw	high _pBDTEntryOut
  9016  011358  20F4               	addwfc	prodh,w,c
  9017  01135A  6EDA               	movwf	fsr2h,c
  9018  01135C  0E00               	movlw	0
  9019  01135E  6EDE               	movwf	postinc2,c
  9020  011360  0E00               	movlw	0
  9021  011362  6EDD               	movwf	postdec2,c
  9022                           
  9023                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  9024  011364  5020               	movf	USBDeviceInit@i,w,c
  9025  011366  0D01               	mullw	1
  9026  011368  0E6F               	movlw	low _ep_data_in
  9027  01136A  24F3               	addwf	prodl,w,c
  9028  01136C  6ED9               	movwf	fsr2l,c
  9029  01136E  0E00               	movlw	high _ep_data_in
  9030  011370  20F4               	addwfc	prodh,w,c
  9031  011372  6EDA               	movwf	fsr2h,c
  9032  011374  0E00               	movlw	0
  9033  011376  6EDF               	movwf	indf2,c
  9034                           
  9035                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  9036  011378  5020               	movf	USBDeviceInit@i,w,c
  9037  01137A  0D01               	mullw	1
  9038  01137C  0E72               	movlw	low _ep_data_out
  9039  01137E  24F3               	addwf	prodl,w,c
  9040  011380  6ED9               	movwf	fsr2l,c
  9041  011382  0E00               	movlw	high _ep_data_out
  9042  011384  20F4               	addwfc	prodh,w,c
  9043  011386  6EDA               	movwf	fsr2h,c
  9044  011388  0E00               	movlw	0
  9045  01138A  6EDF               	movwf	indf2,c
  9046  01138C  2A20               	incf	USBDeviceInit@i,f,c
  9047  01138E  D7CE               	goto	l8826
  9048  011390                     l8836:
  9049                           
  9050                           ;usb_device.c: 368: }
  9051                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9052  011390  0E08               	movlw	8
  9053  011392  6E27               	movwf	_pBDTEntryIn,c
  9054  011394  0E0D               	movlw	13
  9055  011396  6E28               	movwf	_pBDTEntryIn+1,c
  9056                           
  9057                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  9058  011398  0E16               	movlw	22
  9059  01139A  010F               	movlb	15	; () banked
  9060  01139C  6F26               	movwf	38,b	;volatile
  9061                           
  9062                           ; BSR set to: 15
  9063                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  9064  01139E  0E0D               	movlw	13
  9065  0113A0  010D               	movlb	13	; () banked
  9066  0113A2  6F03               	movwf	3,b	;volatile
  9067  0113A4  0E30               	movlw	48
  9068  0113A6  6F02               	movwf	2,b	;volatile
  9069                           
  9070                           ; BSR set to: 13
  9071                           ;usb_device.c: 376: BDT[0].CNT = 8;
  9072  0113A8  0E08               	movlw	8
  9073  0113AA  010D               	movlb	13	; () banked
  9074  0113AC  6F01               	movwf	1,b	;volatile
  9075                           
  9076                           ; BSR set to: 13
  9077                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  9078  0113AE  0E04               	movlw	4
  9079  0113B0  010D               	movlb	13	; () banked
  9080  0113B2  6F00               	movwf	0,b	;volatile
  9081                           
  9082                           ; BSR set to: 13
  9083                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  9084  0113B4  010D               	movlb	13	; () banked
  9085  0113B6  8F00               	bsf	0,7,b	;volatile
  9086                           
  9087                           ; BSR set to: 13
  9088                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  9089  0113B8  0E00               	movlw	0
  9090  0113BA  6E3E               	movwf	_USBActiveConfiguration,c
  9091                           
  9092                           ; BSR set to: 13
  9093                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  9094  0113BC  0E00               	movlw	0
  9095  0113BE  6E34               	movwf	_USBDeviceState,c
  9096                           
  9097                           ; BSR set to: 13
  9098  0113C0  0012               	return		;funcret
  9099  0113C2                     __end_of_USBDeviceInit:
  9100                           	opt stack 0
  9101                           tblptru	equ	0xFF8
  9102                           tblptrh	equ	0xFF7
  9103                           tblptrl	equ	0xFF6
  9104                           tablat	equ	0xFF5
  9105                           prodh	equ	0xFF4
  9106                           prodl	equ	0xFF3
  9107                           intcon	equ	0xFF2
  9108                           intcon2	equ	0xFF1
  9109                           indf0	equ	0xFEF
  9110                           postinc0	equ	0xFEE
  9111                           fsr0h	equ	0xFEA
  9112                           fsr0l	equ	0xFE9
  9113                           wreg	equ	0xFE8
  9114                           indf1	equ	0xFE7
  9115                           postinc1	equ	0xFE6
  9116                           postdec1	equ	0xFE5
  9117                           fsr1h	equ	0xFE2
  9118                           fsr1l	equ	0xFE1
  9119                           indf2	equ	0xFDF
  9120                           postinc2	equ	0xFDE
  9121                           postdec2	equ	0xFDD
  9122                           plusw2	equ	0xFDB
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127 ;; *************** function _USBCtrlEPService *****************
  9128 ;; Defined at:
  9129 ;;		line 2369 in file "../My_library/usb/usb_device.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  setup_cnt       1   27[BANK0 ] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;		None               void
  9136 ;; Registers used:
  9137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;Total ram usage:        3 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:   11
  9150 ;; This function calls:
  9151 ;;		_USBCtrlTrfInHandler
  9152 ;;		_USBCtrlTrfOutHandler
  9153 ;;		_USBCtrlTrfSetupHandler
  9154 ;; This function is called by:
  9155 ;;		_USBDeviceTasks
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text43
  9160  0119F4                     __ptext43:
  9161                           	opt stack 0
  9162  0119F4                     _USBCtrlEPService:
  9163                           	opt stack 17
  9164                           
  9165                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
  9166                           
  9167                           ; BSR set to: 13
  9168                           ;incstack = 0
  9169  0119F4  0E2D               	movlw	45
  9170  0119F6  6E37               	movwf	_USBStatusStageTimeoutCounter,c
  9171                           
  9172                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
  9173  0119F8  C03F  F0CE         	movff	_USTATcopy,??_USBCtrlEPService
  9174  0119FC  0EFD               	movlw	253
  9175  0119FE  0100               	movlb	0	; () banked
  9176  011A00  17CE               	andwf	??_USBCtrlEPService& (0+255),f,b
  9177  011A02  A4D8               	btfss	status,2,c
  9178  011A04  D05E               	goto	l8918
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;usb_device.c: 2380: {
  9182                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9183  011A06  C03F  F0CE         	movff	_USTATcopy,??_USBCtrlEPService
  9184  011A0A  0100               	movlb	0	; () banked
  9185  011A0C  90D8               	bcf	status,0,c
  9186  011A0E  33CE               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9187  011A10  0E3F               	movlw	63
  9188  011A12  0100               	movlb	0	; () banked
  9189  011A14  17CE               	andwf	??_USBCtrlEPService& (0+255),f,b
  9190  011A16  0100               	movlb	0	; () banked
  9191  011A18  51CE               	movf	??_USBCtrlEPService& (0+255),w,b
  9192  011A1A  0D04               	mullw	4
  9193  011A1C  0E00               	movlw	0
  9194  011A1E  24F3               	addwf	prodl,w,c
  9195  011A20  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
  9196  011A22  0E0D               	movlw	13
  9197  011A24  20F4               	addwfc	prodh,w,c
  9198  011A26  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9202  011A28  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9203  011A2C  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9207  011A30  0E04               	movlw	4
  9208  011A32  1A31               	xorwf	_pBDTEntryEP0OutNext,f,c
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9212  011A34  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9213  011A38  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9214  011A3C  30DF               	rrcf	indf2,w,c
  9215  011A3E  32E8               	rrcf	wreg,f,c
  9216  011A40  0B0F               	andlw	15
  9217  011A42  0A0D               	xorlw	13
  9218  011A44  A4D8               	btfss	status,2,c
  9219  011A46  D03A               	goto	l8916
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;usb_device.c: 2397: {
  9223                           ;usb_device.c: 2398: unsigned char setup_cnt;
  9224                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  9225  011A48  0E00               	movlw	0
  9226  011A4A  0100               	movlb	0	; () banked
  9227  011A4C  6FD0               	movwf	USBCtrlEPService@setup_cnt& (0+255),b
  9228  011A4E                     l8900:
  9229                           
  9230                           ; BSR set to: 0
  9231  011A4E  0E07               	movlw	7
  9232  011A50  0100               	movlb	0	; () banked
  9233  011A52  65D0               	cpfsgt	USBCtrlEPService@setup_cnt& (0+255),b
  9234  011A54  D001               	goto	l8904
  9235  011A56  D025               	goto	l8912
  9236  011A58                     l8904:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;usb_device.c: 2405: {
  9240                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  9241  011A58  EE20 F002          	lfsr	2,2
  9242  011A5C  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
  9243  011A5E  26D9               	addwf	fsr2l,f,c
  9244  011A60  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9245  011A62  22DA               	addwfc	fsr2h,f,c
  9246  011A64  CFDE F0CE          	movff	postinc2,??_USBCtrlEPService
  9247  011A68  CFDD F0CF          	movff	postdec2,??_USBCtrlEPService+1
  9248  011A6C  C0CE  FFD9         	movff	??_USBCtrlEPService,fsr2l
  9249  011A70  C0CF  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  9250  011A74  0100               	movlb	0	; () banked
  9251  011A76  51D0               	movf	USBCtrlEPService@setup_cnt& (0+255),w,b
  9252  011A78  0D01               	mullw	1
  9253  011A7A  0E30               	movlw	48
  9254  011A7C  24F3               	addwf	prodl,w,c
  9255  011A7E  6EE1               	movwf	fsr1l,c
  9256  011A80  0E0D               	movlw	13
  9257  011A82  20F4               	addwfc	prodh,w,c
  9258  011A84  6EE2               	movwf	fsr1h,c
  9259  011A86  CFDF FFE7          	movff	indf2,indf1
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
  9263  011A8A  EE20 F002          	lfsr	2,2
  9264  011A8E  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
  9265  011A90  26D9               	addwf	fsr2l,f,c
  9266  011A92  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9267  011A94  22DA               	addwfc	fsr2h,f,c
  9268  011A96  2ADE               	incf	postinc2,f,c
  9269  011A98  0E00               	movlw	0
  9270  011A9A  22DD               	addwfc	postdec2,f,c
  9271                           
  9272                           ; BSR set to: 0
  9273  011A9C  0100               	movlb	0	; () banked
  9274  011A9E  2BD0               	incf	USBCtrlEPService@setup_cnt& (0+255),f,b
  9275  011AA0  D7D6               	goto	l8900
  9276  011AA2                     l8912:
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;usb_device.c: 2408: }
  9280                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  9281  011AA2  EE20 F002          	lfsr	2,2
  9282  011AA6  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
  9283  011AA8  26D9               	addwf	fsr2l,f,c
  9284  011AAA  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9285  011AAC  22DA               	addwfc	fsr2h,f,c
  9286  011AAE  0E30               	movlw	48
  9287  011AB0  6EDE               	movwf	postinc2,c
  9288  011AB2  0E0D               	movlw	13
  9289  011AB4  6EDD               	movwf	postdec2,c
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
  9293  011AB6  EC17  F096         	call	_USBCtrlTrfSetupHandler	;wreg free
  9294                           
  9295                           ;usb_device.c: 2413: }
  9296  011ABA  0012               	return	
  9297  011ABC                     l8916:
  9298                           
  9299                           ;usb_device.c: 2414: else
  9300                           ;usb_device.c: 2415: {
  9301                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
  9302  011ABC  EC73  F098         	call	_USBCtrlTrfOutHandler	;wreg free
  9303                           
  9304                           ;usb_device.c: 2418: }
  9305                           ;usb_device.c: 2419: }
  9306  011AC0  0012               	return	
  9307  011AC2                     l8918:
  9308                           
  9309                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
  9310  011AC2  503F               	movf	_USTATcopy,w,c
  9311  011AC4  0BFD               	andlw	253
  9312  011AC6  0A04               	xorlw	4
  9313  011AC8  A4D8               	btfss	status,2,c
  9314  011ACA  0012               	return	
  9315                           
  9316                           ;usb_device.c: 2421: {
  9317                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
  9318  011ACC  ECE7  F091         	call	_USBCtrlTrfInHandler	;wreg free
  9319  011AD0  0012               	return	
  9320  011AD2                     __end_of_USBCtrlEPService:
  9321                           	opt stack 0
  9322                           tblptru	equ	0xFF8
  9323                           tblptrh	equ	0xFF7
  9324                           tblptrl	equ	0xFF6
  9325                           tablat	equ	0xFF5
  9326                           prodh	equ	0xFF4
  9327                           prodl	equ	0xFF3
  9328                           intcon	equ	0xFF2
  9329                           intcon2	equ	0xFF1
  9330                           indf0	equ	0xFEF
  9331                           postinc0	equ	0xFEE
  9332                           fsr0h	equ	0xFEA
  9333                           fsr0l	equ	0xFE9
  9334                           wreg	equ	0xFE8
  9335                           indf1	equ	0xFE7
  9336                           postinc1	equ	0xFE6
  9337                           postdec1	equ	0xFE5
  9338                           fsr1h	equ	0xFE2
  9339                           fsr1l	equ	0xFE1
  9340                           indf2	equ	0xFDF
  9341                           postinc2	equ	0xFDE
  9342                           postdec2	equ	0xFDD
  9343                           plusw2	equ	0xFDB
  9344                           fsr2h	equ	0xFDA
  9345                           fsr2l	equ	0xFD9
  9346                           status	equ	0xFD8
  9347                           
  9348 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9349 ;; Defined at:
  9350 ;;		line 2469 in file "../My_library/usb/usb_device.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;		None               void
  9357 ;; Registers used:
  9358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:   10
  9371 ;; This function calls:
  9372 ;;		_USBCheckStdRequest
  9373 ;;		_USBCtrlEPServiceComplete
  9374 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9375 ;; This function is called by:
  9376 ;;		_USBCtrlEPService
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text44
  9381  012C2E                     __ptext44:
  9382                           	opt stack 0
  9383  012C2E                     _USBCtrlTrfSetupHandler:
  9384                           	opt stack 17
  9385                           
  9386                           ;usb_device.c: 2474: shortPacketStatus = 0;
  9387                           
  9388                           ;incstack = 0
  9389  012C2E  0E00               	movlw	0
  9390  012C30  6E3D               	movwf	_shortPacketStatus,c
  9391                           
  9392                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
  9393  012C32  0E00               	movlw	0
  9394  012C34  6E33               	movwf	_USBDeferStatusStagePacket,c	;volatile
  9395                           
  9396                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
  9397  012C36  0E00               	movlw	0
  9398  012C38  0100               	movlb	0	; () banked
  9399  012C3A  6F8D               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9400                           
  9401                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
  9402  012C3C  0E00               	movlw	0
  9403  012C3E  0100               	movlb	0	; () banked
  9404  012C40  6F8E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  9405                           
  9406                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
  9407  012C42  0E00               	movlw	0
  9408  012C44  0100               	movlb	0	; () banked
  9409  012C46  6F87               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9410                           
  9411                           ;usb_device.c: 2479: controlTransferState = 0;
  9412  012C48  0E00               	movlw	0
  9413  012C4A  6E3B               	movwf	_controlTransferState,c
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9417  012C4C  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  9418  012C50  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9419  012C54  0E7F               	movlw	127
  9420  012C56  16DF               	andwf	indf2,f,c
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9424  012C58  0E04               	movlw	4
  9425  012C5A  1A27               	xorwf	_pBDTEntryIn,f,c
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9429  012C5C  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  9430  012C60  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9431  012C64  0E7F               	movlw	127
  9432  012C66  16DF               	andwf	indf2,f,c
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9436  012C68  0E04               	movlw	4
  9437  012C6A  1A27               	xorwf	_pBDTEntryIn,f,c
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9441  012C6C  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9442  012C70  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9443  012C74  0E7F               	movlw	127
  9444  012C76  16DF               	andwf	indf2,f,c
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
  9448  012C78  0E00               	movlw	0
  9449  012C7A  6E24               	movwf	_inPipes+3,c
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
  9453  012C7C  0E00               	movlw	0
  9454  012C7E  6E26               	movwf	_inPipes+5,c
  9455  012C80  0E00               	movlw	0
  9456  012C82  6E25               	movwf	_inPipes+4,c
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
  9460  012C84  0E00               	movlw	0
  9461  012C86  0100               	movlb	0	; () banked
  9462  012C88  6F63               	movwf	(_outPipes+3)& (0+255),b
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
  9466  012C8A  0E00               	movlw	0
  9467  012C8C  0100               	movlb	0	; () banked
  9468  012C8E  6F65               	movwf	(_outPipes+5)& (0+255),b
  9469  012C90  0E00               	movlw	0
  9470  012C92  6F64               	movwf	(_outPipes+4)& (0+255),b
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;usb_device.c: 2503: USBCheckStdRequest();
  9474  012C94  EC89  F08C         	call	_USBCheckStdRequest	;wreg free
  9475                           
  9476                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9477  012C98  0E00               	movlw	0
  9478  012C9A  0100               	movlb	0	; () banked
  9479  012C9C  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9480  012C9E  0E03               	movlw	3
  9481  012CA0  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9482  012CA2  0E00               	movlw	0
  9483  012CA4  0100               	movlb	0	; () banked
  9484  012CA6  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9485  012CA8  0E00               	movlw	0
  9486  012CAA  0100               	movlb	0	; () banked
  9487  012CAC  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9488  012CAE  0E00               	movlw	0
  9489  012CB0  0100               	movlb	0	; () banked
  9490  012CB2  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9491  012CB4  0E00               	movlw	0
  9492  012CB6  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9493  012CB8  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9494                           
  9495                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
  9496  012CBC  EC97  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
  9497  012CC0  0012               	return		;funcret
  9498  012CC2                     __end_of_USBCtrlTrfSetupHandler:
  9499                           	opt stack 0
  9500                           tblptru	equ	0xFF8
  9501                           tblptrh	equ	0xFF7
  9502                           tblptrl	equ	0xFF6
  9503                           tablat	equ	0xFF5
  9504                           prodh	equ	0xFF4
  9505                           prodl	equ	0xFF3
  9506                           intcon	equ	0xFF2
  9507                           intcon2	equ	0xFF1
  9508                           indf0	equ	0xFEF
  9509                           postinc0	equ	0xFEE
  9510                           fsr0h	equ	0xFEA
  9511                           fsr0l	equ	0xFE9
  9512                           wreg	equ	0xFE8
  9513                           indf1	equ	0xFE7
  9514                           postinc1	equ	0xFE6
  9515                           postdec1	equ	0xFE5
  9516                           fsr1h	equ	0xFE2
  9517                           fsr1l	equ	0xFE1
  9518                           indf2	equ	0xFDF
  9519                           postinc2	equ	0xFDE
  9520                           postdec2	equ	0xFDD
  9521                           plusw2	equ	0xFDB
  9522                           fsr2h	equ	0xFDA
  9523                           fsr2l	equ	0xFD9
  9524                           status	equ	0xFD8
  9525                           
  9526 ;; *************** function _USBCtrlEPServiceComplete *****************
  9527 ;; Defined at:
  9528 ;;		line 1616 in file "../My_library/usb/usb_device.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;		None
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;		None               void
  9535 ;; Registers used:
  9536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9546 ;;Total ram usage:        0 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:    6
  9549 ;; This function calls:
  9550 ;;		_USBCtrlEPAllowDataStage
  9551 ;;		_USBCtrlEPAllowStatusStage
  9552 ;; This function is called by:
  9553 ;;		_USBCtrlTrfSetupHandler
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           	psect	text45
  9558  01172E                     __ptext45:
  9559                           	opt stack 0
  9560  01172E                     _USBCtrlEPServiceComplete:
  9561                           	opt stack 20
  9562                           
  9563                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  9564                           
  9565                           ;incstack = 0
  9566  01172E  9865               	bcf	3941,4,c	;volatile
  9567                           
  9568                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  9569  011730  BE24               	btfsc	_inPipes+3,7,c
  9570  011732  D03A               	goto	l220
  9571                           
  9572                           ;usb_device.c: 1629: {
  9573                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  9574  011734  0100               	movlb	0	; () banked
  9575  011736  AF63               	btfss	(_outPipes+3)& (0+255),7,b
  9576  011738  D00C               	goto	l8350
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;usb_device.c: 1631: {
  9580                           ;usb_device.c: 1632: controlTransferState = 2;
  9581  01173A  0E02               	movlw	2
  9582  01173C  6E3B               	movwf	_controlTransferState,c
  9583                           
  9584                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  9585  01173E  0100               	movlb	0	; () banked
  9586  011740  518E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  9587  011742  B4D8               	btfsc	status,2,c
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;usb_device.c: 1644: {
  9591                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  9592  011744  ECC9  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
  9593                           
  9594                           ;usb_device.c: 1646: }
  9595                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  9596  011748  0E00               	movlw	0
  9597  01174A  6E36               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9598                           
  9599                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  9600  01174C  0E00               	movlw	0
  9601  01174E  6E35               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9602                           
  9603                           ;usb_device.c: 1652: }
  9604  011750  0012               	return	
  9605  011752                     l8350:
  9606                           
  9607                           ;usb_device.c: 1653: else
  9608                           ;usb_device.c: 1654: {
  9609                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  9610  011752  EE20 F001          	lfsr	2,1
  9611  011756  5031               	movf	_pBDTEntryEP0OutNext,w,c
  9612  011758  26D9               	addwf	fsr2l,f,c
  9613  01175A  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
  9614  01175C  22DA               	addwfc	fsr2h,f,c
  9615  01175E  0E08               	movlw	8
  9616  011760  6EDF               	movwf	indf2,c
  9617                           
  9618                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9619  011762  EE20 F002          	lfsr	2,2
  9620  011766  5031               	movf	_pBDTEntryEP0OutNext,w,c
  9621  011768  26D9               	addwf	fsr2l,f,c
  9622  01176A  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
  9623  01176C  22DA               	addwfc	fsr2h,f,c
  9624  01176E  0E30               	movlw	48
  9625  011770  6EDE               	movwf	postinc2,c
  9626  011772  0E0D               	movlw	13
  9627  011774  6EDD               	movwf	postdec2,c
  9628                           
  9629                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9630  011776  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9631  01177A  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9632  01177E  0E0C               	movlw	12
  9633  011780  6EDF               	movwf	indf2,c
  9634                           
  9635                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9636  011782  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9637  011786  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9638  01178A  0E00               	movlw	0
  9639  01178C  8EDB               	bsf	plusw2,7,c
  9640                           
  9641                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  9642  01178E  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  9643  011792  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9644  011796  0E04               	movlw	4
  9645  011798  6EDF               	movwf	indf2,c
  9646                           
  9647                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9648  01179A  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  9649  01179E  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9650  0117A2  0E00               	movlw	0
  9651  0117A4  8EDB               	bsf	plusw2,7,c
  9652                           
  9653                           ;usb_device.c: 1665: }
  9654                           ;usb_device.c: 1666: }
  9655  0117A6  0012               	return	
  9656  0117A8                     l220:
  9657                           
  9658                           ;usb_device.c: 1667: else
  9659                           ;usb_device.c: 1668: {
  9660                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  9661  0117A8  010D               	movlb	13	; () banked
  9662  0117AA  AF30               	btfss	48,7,b	;volatile
  9663  0117AC  D011               	goto	l8370
  9664                           
  9665                           ; BSR set to: 13
  9666                           ;usb_device.c: 1670: {
  9667                           ;usb_device.c: 1671: controlTransferState = 1;
  9668  0117AE  0E01               	movlw	1
  9669  0117B0  6E3B               	movwf	_controlTransferState,c
  9670                           
  9671                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  9672  0117B2  0100               	movlb	0	; () banked
  9673  0117B4  518D               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  9674  0117B6  B4D8               	btfsc	status,2,c
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;usb_device.c: 1686: {
  9678                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  9679  0117B8  ECC9  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
  9680                           
  9681                           ;usb_device.c: 1688: }
  9682                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  9683  0117BC  0E00               	movlw	0
  9684  0117BE  6E36               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9685                           
  9686                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  9687  0117C0  0E00               	movlw	0
  9688  0117C2  6E35               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9689                           
  9690                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  9691  0117C4  5033               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9692  0117C6  A4D8               	btfss	status,2,c
  9693  0117C8  0012               	return	
  9694                           
  9695                           ;usb_device.c: 1713: {
  9696                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  9697  0117CA  EC84  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9698                           
  9699                           ;usb_device.c: 1715: }
  9700                           ;usb_device.c: 1716: }
  9701  0117CE  0012               	return	
  9702  0117D0                     l8370:
  9703                           
  9704                           ;usb_device.c: 1717: else
  9705                           ;usb_device.c: 1718: {
  9706                           ;usb_device.c: 1729: controlTransferState = 2;
  9707  0117D0  0E02               	movlw	2
  9708  0117D2  6E3B               	movwf	_controlTransferState,c
  9709                           
  9710                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  9711  0117D4  EE20 F001          	lfsr	2,1
  9712  0117D8  5031               	movf	_pBDTEntryEP0OutNext,w,c
  9713  0117DA  26D9               	addwf	fsr2l,f,c
  9714  0117DC  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
  9715  0117DE  22DA               	addwfc	fsr2h,f,c
  9716  0117E0  0E08               	movlw	8
  9717  0117E2  6EDF               	movwf	indf2,c
  9718                           
  9719                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9720  0117E4  EE20 F002          	lfsr	2,2
  9721  0117E8  5031               	movf	_pBDTEntryEP0OutNext,w,c
  9722  0117EA  26D9               	addwf	fsr2l,f,c
  9723  0117EC  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
  9724  0117EE  22DA               	addwfc	fsr2h,f,c
  9725  0117F0  0E30               	movlw	48
  9726  0117F2  6EDE               	movwf	postinc2,c
  9727  0117F4  0E0D               	movlw	13
  9728  0117F6  6EDD               	movwf	postdec2,c
  9729                           
  9730                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9731  0117F8  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9732  0117FC  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9733  011800  0E04               	movlw	4
  9734  011802  6EDF               	movwf	indf2,c
  9735                           
  9736                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9737  011804  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9738  011808  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9739  01180C  0E00               	movlw	0
  9740  01180E  8EDB               	bsf	plusw2,7,c
  9741                           
  9742                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  9743  011810  0E00               	movlw	0
  9744  011812  6E36               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9745                           
  9746                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  9747  011814  0E00               	movlw	0
  9748  011816  6E35               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9749                           
  9750                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  9751  011818  5033               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9752  01181A  A4D8               	btfss	status,2,c
  9753  01181C  0012               	return	
  9754                           
  9755                           ;usb_device.c: 1741: {
  9756                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  9757  01181E  EC84  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9758  011822  0012               	return	
  9759  011824                     __end_of_USBCtrlEPServiceComplete:
  9760                           	opt stack 0
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodh	equ	0xFF4
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           intcon2	equ	0xFF1
  9769                           indf0	equ	0xFEF
  9770                           postinc0	equ	0xFEE
  9771                           fsr0h	equ	0xFEA
  9772                           fsr0l	equ	0xFE9
  9773                           wreg	equ	0xFE8
  9774                           indf1	equ	0xFE7
  9775                           postinc1	equ	0xFE6
  9776                           postdec1	equ	0xFE5
  9777                           fsr1h	equ	0xFE2
  9778                           fsr1l	equ	0xFE1
  9779                           indf2	equ	0xFDF
  9780                           postinc2	equ	0xFDE
  9781                           postdec2	equ	0xFDD
  9782                           plusw2	equ	0xFDB
  9783                           fsr2h	equ	0xFDA
  9784                           fsr2l	equ	0xFD9
  9785                           status	equ	0xFD8
  9786                           
  9787 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9788 ;; Defined at:
  9789 ;;		line 1488 in file "../My_library/usb/usb_device.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;		None
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;		None
  9794 ;; Return value:  Size  Location     Type
  9795 ;;		None               void
  9796 ;; Registers used:
  9797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9807 ;;Total ram usage:        0 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:    5
  9810 ;; This function calls:
  9811 ;;		_USBCtrlTrfTxService
  9812 ;; This function is called by:
  9813 ;;		_USBCtrlEPServiceComplete
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text46
  9818  012B92                     __ptext46:
  9819                           	opt stack 0
  9820  012B92                     _USBCtrlEPAllowDataStage:
  9821                           	opt stack 20
  9822                           
  9823                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  9824                           
  9825                           ;incstack = 0
  9826  012B92  0E00               	movlw	0
  9827  012B94  0100               	movlb	0	; () banked
  9828  012B96  6F8D               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9829                           
  9830                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  9831  012B98  0E00               	movlw	0
  9832  012B9A  0100               	movlb	0	; () banked
  9833  012B9C  6F8E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;usb_device.c: 1493: if(controlTransferState == 2)
  9837  012B9E  0E02               	movlw	2
  9838  012BA0  183B               	xorwf	_controlTransferState,w,c
  9839  012BA2  A4D8               	btfss	status,2,c
  9840  012BA4  D01F               	goto	l8028
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;usb_device.c: 1494: {
  9844                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  9845  012BA6  EE20 F001          	lfsr	2,1
  9846  012BAA  5031               	movf	_pBDTEntryEP0OutNext,w,c
  9847  012BAC  26D9               	addwf	fsr2l,f,c
  9848  012BAE  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
  9849  012BB0  22DA               	addwfc	fsr2h,f,c
  9850  012BB2  0E08               	movlw	8
  9851  012BB4  6EDF               	movwf	indf2,c
  9852                           
  9853                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9854  012BB6  EE20 F002          	lfsr	2,2
  9855  012BBA  5031               	movf	_pBDTEntryEP0OutNext,w,c
  9856  012BBC  26D9               	addwf	fsr2l,f,c
  9857  012BBE  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
  9858  012BC0  22DA               	addwfc	fsr2h,f,c
  9859  012BC2  0E38               	movlw	56
  9860  012BC4  6EDE               	movwf	postinc2,c
  9861  012BC6  0E0D               	movlw	13
  9862  012BC8  6EDD               	movwf	postdec2,c
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9866  012BCA  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9867  012BCE  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9868  012BD2  0E48               	movlw	72
  9869  012BD4  6EDF               	movwf	indf2,c
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9873  012BD6  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9874  012BDA  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9875  012BDE  0E00               	movlw	0
  9876  012BE0  8EDB               	bsf	plusw2,7,c
  9877                           
  9878                           ;usb_device.c: 1500: }
  9879  012BE2  0012               	return	
  9880  012BE4                     l8028:
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;usb_device.c: 1501: else
  9884                           ;usb_device.c: 1502: {
  9885                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9886  012BE4  5025               	movf	_inPipes+4,w,c
  9887  012BE6  010D               	movlb	13	; () banked
  9888  012BE8  5D36               	subwf	54,w,b	;volatile
  9889  012BEA  5026               	movf	_inPipes+5,w,c
  9890  012BEC  010D               	movlb	13	; () banked
  9891  012BEE  5937               	subwfb	55,w,b	;volatile
  9892  012BF0  B0D8               	btfsc	status,0,c
  9893  012BF2  D004               	goto	l8032
  9894                           
  9895                           ; BSR set to: 13
  9896                           ;usb_device.c: 1506: {
  9897                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  9898  012BF4  CD36 F025          	movff	3382,_inPipes+4	;volatile
  9899  012BF8  CD37 F026          	movff	3383,_inPipes+5	;volatile
  9900  012BFC                     l8032:
  9901                           
  9902                           ; BSR set to: 13
  9903                           ;usb_device.c: 1508: }
  9904                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  9905  012BFC  ECEE  F08F         	call	_USBCtrlTrfTxService	;wreg free
  9906                           
  9907                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9908  012C00  EE20 F002          	lfsr	2,2
  9909  012C04  5027               	movf	_pBDTEntryIn,w,c
  9910  012C06  26D9               	addwf	fsr2l,f,c
  9911  012C08  5028               	movf	_pBDTEntryIn+1,w,c
  9912  012C0A  22DA               	addwfc	fsr2h,f,c
  9913  012C0C  0E38               	movlw	56
  9914  012C0E  6EDE               	movwf	postinc2,c
  9915  012C10  0E0D               	movlw	13
  9916  012C12  6EDD               	movwf	postdec2,c
  9917                           
  9918                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9919  012C14  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  9920  012C18  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9921  012C1C  0E48               	movlw	72
  9922  012C1E  6EDF               	movwf	indf2,c
  9923                           
  9924                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9925  012C20  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
  9926  012C24  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9927  012C28  0E00               	movlw	0
  9928  012C2A  8EDB               	bsf	plusw2,7,c
  9929  012C2C  0012               	return	
  9930  012C2E                     __end_of_USBCtrlEPAllowDataStage:
  9931                           	opt stack 0
  9932                           tblptru	equ	0xFF8
  9933                           tblptrh	equ	0xFF7
  9934                           tblptrl	equ	0xFF6
  9935                           tablat	equ	0xFF5
  9936                           prodh	equ	0xFF4
  9937                           prodl	equ	0xFF3
  9938                           intcon	equ	0xFF2
  9939                           intcon2	equ	0xFF1
  9940                           indf0	equ	0xFEF
  9941                           postinc0	equ	0xFEE
  9942                           fsr0h	equ	0xFEA
  9943                           fsr0l	equ	0xFE9
  9944                           wreg	equ	0xFE8
  9945                           indf1	equ	0xFE7
  9946                           postinc1	equ	0xFE6
  9947                           postdec1	equ	0xFE5
  9948                           fsr1h	equ	0xFE2
  9949                           fsr1l	equ	0xFE1
  9950                           indf2	equ	0xFDF
  9951                           postinc2	equ	0xFDE
  9952                           postdec2	equ	0xFDD
  9953                           plusw2	equ	0xFDB
  9954                           fsr2h	equ	0xFDA
  9955                           fsr2l	equ	0xFD9
  9956                           status	equ	0xFD8
  9957                           
  9958 ;; *************** function _USBCheckStdRequest *****************
  9959 ;; Defined at:
  9960 ;;		line 2689 in file "../My_library/usb/usb_device.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;		None               void
  9967 ;; Registers used:
  9968 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9978 ;;Total ram usage:        0 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; Hardware stack levels required when called:    9
  9981 ;; This function calls:
  9982 ;;		_USBStdFeatureReqHandler
  9983 ;;		_USBStdGetDscHandler
  9984 ;;		_USBStdGetStatusHandler
  9985 ;;		_USBStdSetCfgHandler
  9986 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9987 ;; This function is called by:
  9988 ;;		_USBCtrlTrfSetupHandler
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text47
  9993  011912                     __ptext47:
  9994                           	opt stack 0
  9995  011912                     _USBCheckStdRequest:
  9996                           	opt stack 17
  9997                           
  9998                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
  9999                           
 10000                           ;incstack = 0
 10001  011912  010D               	movlb	13	; () banked
 10002  011914  3930               	swapf	48,w,b	;volatile
 10003  011916  32E8               	rrcf	wreg,f,c
 10004  011918  0B03               	andlw	3
 10005  01191A  0900               	iorlw	0
 10006  01191C  A4D8               	btfss	status,2,c
 10007  01191E  0012               	return	
 10008  011920  D047               	goto	l8468
 10009  011922                     l347:
 10010                           
 10011                           ; BSR set to: 13
 10012                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 10013  011922  8E24               	bsf	_inPipes+3,7,c
 10014                           
 10015                           ; BSR set to: 13
 10016                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 10017  011924  0E08               	movlw	8
 10018  011926  6E34               	movwf	_USBDeviceState,c
 10019                           
 10020                           ;usb_device.c: 2699: break;
 10021  011928  0012               	return	
 10022  01192A                     l8438:
 10023                           
 10024                           ; BSR set to: 13
 10025                           ;usb_device.c: 2701: USBStdGetDscHandler();
 10026  01192A  ECE1  F089         	call	_USBStdGetDscHandler	;wreg free
 10027                           
 10028                           ;usb_device.c: 2702: break;
 10029  01192E  0012               	return	
 10030  011930                     l8440:
 10031                           
 10032                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 10033  011930  EC14  F08B         	call	_USBStdSetCfgHandler	;wreg free
 10034                           
 10035                           ;usb_device.c: 2705: break;
 10036  011934  0012               	return	
 10037  011936                     l8442:
 10038                           
 10039                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10040  011936  0E3E               	movlw	low _USBActiveConfiguration
 10041  011938  6E21               	movwf	_inPipes,c
 10042  01193A  0E00               	movlw	high _USBActiveConfiguration
 10043  01193C  6E22               	movwf	_inPipes+1,c
 10044                           
 10045                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10046  01193E  8024               	bsf	_inPipes+3,0,c
 10047                           
 10048                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 10049  011940  0E01               	movlw	1
 10050  011942  6E25               	movwf	_inPipes+4,c
 10051                           
 10052                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10053  011944  8E24               	bsf	_inPipes+3,7,c
 10054                           
 10055                           ;usb_device.c: 2711: break;
 10056  011946  0012               	return	
 10057  011948                     l8450:
 10058                           
 10059                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 10060  011948  EC7C  F094         	call	_USBStdGetStatusHandler	;wreg free
 10061                           
 10062                           ;usb_device.c: 2714: break;
 10063  01194C  0012               	return	
 10064  01194E                     l8452:
 10065                           
 10066                           ;usb_device.c: 2716: case 3:
 10067                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 10068  01194E  EC2D  F082         	call	_USBStdFeatureReqHandler	;wreg free
 10069                           
 10070                           ;usb_device.c: 2718: break;
 10071  011952  0012               	return	
 10072  011954                     l8454:
 10073                           
 10074                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10075  011954  010D               	movlb	13	; () banked
 10076  011956  5134               	movf	52,w,b	;volatile
 10077  011958  0D01               	mullw	1
 10078  01195A  0EB3               	movlw	low _USBAlternateInterface
 10079  01195C  24F3               	addwf	prodl,w,c
 10080  01195E  6E21               	movwf	_inPipes,c
 10081  011960  0E00               	movlw	high _USBAlternateInterface
 10082  011962  20F4               	addwfc	prodh,w,c
 10083  011964  6E22               	movwf	_inPipes+1,c
 10084                           
 10085                           ; BSR set to: 13
 10086                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10087  011966  8024               	bsf	_inPipes+3,0,c
 10088                           
 10089                           ; BSR set to: 13
 10090                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 10091  011968  0E01               	movlw	1
 10092  01196A  6E25               	movwf	_inPipes+4,c
 10093                           
 10094                           ; BSR set to: 13
 10095                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 10096  01196C  8E24               	bsf	_inPipes+3,7,c
 10097                           
 10098                           ;usb_device.c: 2724: break;
 10099  01196E  0012               	return	
 10100  011970                     l356:
 10101                           
 10102                           ; BSR set to: 13
 10103                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 10104  011970  8E24               	bsf	_inPipes+3,7,c
 10105                           
 10106                           ; BSR set to: 13
 10107                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10108  011972  010D               	movlb	13	; () banked
 10109  011974  5134               	movf	52,w,b	;volatile
 10110  011976  0D01               	mullw	1
 10111  011978  0EB3               	movlw	low _USBAlternateInterface
 10112  01197A  24F3               	addwf	prodl,w,c
 10113  01197C  6ED9               	movwf	fsr2l,c
 10114  01197E  0E00               	movlw	high _USBAlternateInterface
 10115  011980  20F4               	addwfc	prodh,w,c
 10116  011982  6EDA               	movwf	fsr2h,c
 10117  011984  CD32 FFDF          	movff	3378,indf2	;volatile
 10118                           
 10119                           ;usb_device.c: 2728: break;
 10120  011988  0012               	return	
 10121  01198A                     l8464:
 10122                           
 10123                           ; BSR set to: 13
 10124                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10125  01198A  0E00               	movlw	0
 10126  01198C  0100               	movlb	0	; () banked
 10127  01198E  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10128  011990  0E02               	movlw	2
 10129  011992  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10130  011994  0E00               	movlw	0
 10131  011996  0100               	movlb	0	; () banked
 10132  011998  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10133  01199A  0E00               	movlw	0
 10134  01199C  0100               	movlb	0	; () banked
 10135  01199E  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10136  0119A0  0E00               	movlw	0
 10137  0119A2  0100               	movlb	0	; () banked
 10138  0119A4  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10139  0119A6  0E00               	movlw	0
 10140  0119A8  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10141  0119AA  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10142                           
 10143                           ;usb_device.c: 2735: }
 10144                           
 10145                           ;usb_device.c: 2734: break;
 10146                           
 10147                           ;usb_device.c: 2733: default:
 10148                           
 10149                           ;usb_device.c: 2732: case 12:
 10150                           
 10151                           ;usb_device.c: 2731: break;
 10152  0119AE  0012               	return	
 10153  0119B0                     l8468:
 10154  0119B0  010D               	movlb	13	; () banked
 10155  0119B2  5131               	movf	49,w,b	;volatile
 10156                           
 10157                           ; Switch size 1, requested type "space"
 10158                           ; Number of cases is 11, Range of values is 0 to 12
 10159                           ; switch strategies available:
 10160                           ; Name         Instructions Cycles
 10161                           ; simple_byte           34    18 (average)
 10162                           ;	Chosen strategy is simple_byte
 10163  0119B4  0A00               	xorlw	0	; case 0
 10164  0119B6  B4D8               	btfsc	status,2,c
 10165  0119B8  D7C7               	goto	l8450
 10166  0119BA  0A01               	xorlw	1	; case 1
 10167  0119BC  B4D8               	btfsc	status,2,c
 10168  0119BE  D7C7               	goto	l8452
 10169  0119C0  0A02               	xorlw	2	; case 3
 10170  0119C2  B4D8               	btfsc	status,2,c
 10171  0119C4  D7C4               	goto	l8452
 10172  0119C6  0A06               	xorlw	6	; case 5
 10173  0119C8  B4D8               	btfsc	status,2,c
 10174  0119CA  D7AB               	goto	l347
 10175  0119CC  0A03               	xorlw	3	; case 6
 10176  0119CE  B4D8               	btfsc	status,2,c
 10177  0119D0  D7AC               	goto	l8438
 10178  0119D2  0A01               	xorlw	1	; case 7
 10179  0119D4  B4D8               	btfsc	status,2,c
 10180  0119D6  D7D9               	goto	l8464
 10181  0119D8  0A0F               	xorlw	15	; case 8
 10182  0119DA  B4D8               	btfsc	status,2,c
 10183  0119DC  D7AC               	goto	l8442
 10184  0119DE  0A01               	xorlw	1	; case 9
 10185  0119E0  B4D8               	btfsc	status,2,c
 10186  0119E2  D7A6               	goto	l8440
 10187  0119E4  0A03               	xorlw	3	; case 10
 10188  0119E6  B4D8               	btfsc	status,2,c
 10189  0119E8  D7B5               	goto	l8454
 10190  0119EA  0A01               	xorlw	1	; case 11
 10191  0119EC  B4D8               	btfsc	status,2,c
 10192  0119EE  D7C0               	goto	l356
 10193  0119F0  0A07               	xorlw	7	; case 12
 10194  0119F2  0012               	return	
 10195  0119F4                     __end_of_USBCheckStdRequest:
 10196                           	opt stack 0
 10197                           tblptru	equ	0xFF8
 10198                           tblptrh	equ	0xFF7
 10199                           tblptrl	equ	0xFF6
 10200                           tablat	equ	0xFF5
 10201                           prodh	equ	0xFF4
 10202                           prodl	equ	0xFF3
 10203                           intcon	equ	0xFF2
 10204                           intcon2	equ	0xFF1
 10205                           indf0	equ	0xFEF
 10206                           postinc0	equ	0xFEE
 10207                           fsr0h	equ	0xFEA
 10208                           fsr0l	equ	0xFE9
 10209                           wreg	equ	0xFE8
 10210                           indf1	equ	0xFE7
 10211                           postinc1	equ	0xFE6
 10212                           postdec1	equ	0xFE5
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           plusw2	equ	0xFDB
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8
 10222                           
 10223 ;; *************** function _USBStdSetCfgHandler *****************
 10224 ;; Defined at:
 10225 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  i               1   19[BANK0 ] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;		None               void
 10232 ;; Registers used:
 10233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10243 ;;Total ram usage:        1 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    8
 10246 ;; This function calls:
 10247 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10248 ;;		_memset
 10249 ;; This function is called by:
 10250 ;;		_USBCheckStdRequest
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text48
 10255  011628                     __ptext48:
 10256                           	opt stack 0
 10257  011628                     _USBStdSetCfgHandler:
 10258                           	opt stack 17
 10259                           
 10260                           ;usb_device.c: 1970: uint8_t i;
 10261                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 10262                           
 10263                           ;incstack = 0
 10264  011628  8E24               	bsf	_inPipes+3,7,c
 10265                           
 10266                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 10267  01162A  0E27               	movlw	39
 10268  01162C  0100               	movlb	0	; () banked
 10269  01162E  6FB5               	movwf	memset@p1& (0+255),b
 10270  011630  0E0F               	movlw	15
 10271  011632  0100               	movlb	0	; () banked
 10272  011634  6FB6               	movwf	(memset@p1+1)& (0+255),b
 10273  011636  0E00               	movlw	0
 10274  011638  0100               	movlb	0	; () banked
 10275  01163A  6FB8               	movwf	(memset@c+1)& (0+255),b
 10276  01163C  0E00               	movlw	0
 10277  01163E  6FB7               	movwf	memset@c& (0+255),b
 10278  011640  0E00               	movlw	0
 10279  011642  0100               	movlb	0	; () banked
 10280  011644  6FBA               	movwf	(memset@n+1)& (0+255),b
 10281  011646  0E02               	movlw	2
 10282  011648  6FB9               	movwf	memset@n& (0+255),b
 10283  01164A  EC8A  F09A         	call	_memset	;wreg free
 10284                           
 10285                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10286  01164E  0E00               	movlw	0
 10287  011650  0100               	movlb	0	; () banked
 10288  011652  6FB5               	movwf	memset@p1& (0+255),b
 10289  011654  0E0D               	movlw	13
 10290  011656  0100               	movlb	0	; () banked
 10291  011658  6FB6               	movwf	(memset@p1+1)& (0+255),b
 10292  01165A  0E00               	movlw	0
 10293  01165C  0100               	movlb	0	; () banked
 10294  01165E  6FB8               	movwf	(memset@c+1)& (0+255),b
 10295  011660  0E00               	movlw	0
 10296  011662  6FB7               	movwf	memset@c& (0+255),b
 10297  011664  0E00               	movlw	0
 10298  011666  0100               	movlb	0	; () banked
 10299  011668  6FBA               	movwf	(memset@n+1)& (0+255),b
 10300  01166A  0E30               	movlw	48
 10301  01166C  6FB9               	movwf	memset@n& (0+255),b
 10302  01166E  EC8A  F09A         	call	_memset	;wreg free
 10303                           
 10304                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 10305  011672  8C65               	bsf	3941,6,c	;volatile
 10306                           
 10307                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 10308  011674  0E00               	movlw	0
 10309  011676  0100               	movlb	0	; () banked
 10310  011678  6FC8               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10311  01167A                     l8048:
 10312                           
 10313                           ; BSR set to: 0
 10314  01167A  0E02               	movlw	2
 10315  01167C  0100               	movlb	0	; () banked
 10316  01167E  65C8               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10317  011680  D001               	goto	l8052
 10318  011682  D019               	goto	l8058
 10319  011684                     l8052:
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;usb_device.c: 1988: {
 10323                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 10324  011684  0100               	movlb	0	; () banked
 10325  011686  51C8               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10326  011688  0D01               	mullw	1
 10327  01168A  0E6F               	movlw	low _ep_data_in
 10328  01168C  24F3               	addwf	prodl,w,c
 10329  01168E  6ED9               	movwf	fsr2l,c
 10330  011690  0E00               	movlw	high _ep_data_in
 10331  011692  20F4               	addwfc	prodh,w,c
 10332  011694  6EDA               	movwf	fsr2h,c
 10333  011696  0E00               	movlw	0
 10334  011698  6EDF               	movwf	indf2,c
 10335                           
 10336                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 10337  01169A  0100               	movlb	0	; () banked
 10338  01169C  51C8               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10339  01169E  0D01               	mullw	1
 10340  0116A0  0E72               	movlw	low _ep_data_out
 10341  0116A2  24F3               	addwf	prodl,w,c
 10342  0116A4  6ED9               	movwf	fsr2l,c
 10343  0116A6  0E00               	movlw	high _ep_data_out
 10344  0116A8  20F4               	addwfc	prodh,w,c
 10345  0116AA  6EDA               	movwf	fsr2h,c
 10346  0116AC  0E00               	movlw	0
 10347  0116AE  6EDF               	movwf	indf2,c
 10348                           
 10349                           ; BSR set to: 0
 10350  0116B0  0100               	movlb	0	; () banked
 10351  0116B2  2BC8               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10352  0116B4  D7E2               	goto	l8048
 10353  0116B6                     l8058:
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;usb_device.c: 1991: }
 10357                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 10358  0116B6  0EB3               	movlw	low _USBAlternateInterface
 10359  0116B8  0100               	movlb	0	; () banked
 10360  0116BA  6FB5               	movwf	memset@p1& (0+255),b
 10361  0116BC  0E00               	movlw	high _USBAlternateInterface
 10362  0116BE  0100               	movlb	0	; () banked
 10363  0116C0  6FB6               	movwf	(memset@p1+1)& (0+255),b
 10364  0116C2  0E00               	movlw	0
 10365  0116C4  0100               	movlb	0	; () banked
 10366  0116C6  6FB8               	movwf	(memset@c+1)& (0+255),b
 10367  0116C8  0E00               	movlw	0
 10368  0116CA  6FB7               	movwf	memset@c& (0+255),b
 10369  0116CC  0E00               	movlw	0
 10370  0116CE  0100               	movlb	0	; () banked
 10371  0116D0  6FBA               	movwf	(memset@n+1)& (0+255),b
 10372  0116D2  0E02               	movlw	2
 10373  0116D4  6FB9               	movwf	memset@n& (0+255),b
 10374  0116D6  EC8A  F09A         	call	_memset	;wreg free
 10375                           
 10376                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 10377  0116DA  9C65               	bcf	3941,6,c	;volatile
 10378                           
 10379                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10380  0116DC  0E08               	movlw	8
 10381  0116DE  6E27               	movwf	_pBDTEntryIn,c
 10382  0116E0  0E0D               	movlw	13
 10383  0116E2  6E28               	movwf	_pBDTEntryIn+1,c
 10384                           
 10385                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10386  0116E4  0E00               	movlw	0
 10387  0116E6  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 10388  0116E8  0E0D               	movlw	13
 10389  0116EA  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 10390                           
 10391                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10392  0116EC  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10393  0116F0  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10394                           
 10395                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10396  0116F4  CD32 F03E          	movff	3378,_USBActiveConfiguration	;volatile
 10397                           
 10398                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 10399  0116F8  503E               	movf	_USBActiveConfiguration,w,c
 10400  0116FA  A4D8               	btfss	status,2,c
 10401  0116FC  D003               	goto	l8074
 10402                           
 10403                           ;usb_device.c: 2010: {
 10404                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 10405  0116FE  0E10               	movlw	16
 10406  011700  6E34               	movwf	_USBDeviceState,c
 10407                           
 10408                           ;usb_device.c: 2013: }
 10409  011702  0012               	return	
 10410  011704                     l8074:
 10411                           
 10412                           ;usb_device.c: 2014: else
 10413                           ;usb_device.c: 2015: {
 10414                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10415  011704  0E00               	movlw	0
 10416  011706  0100               	movlb	0	; () banked
 10417  011708  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10418  01170A  0E01               	movlw	1
 10419  01170C  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10420  01170E  0E3E               	movlw	low _USBActiveConfiguration
 10421  011710  0100               	movlb	0	; () banked
 10422  011712  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10423  011714  0E00               	movlw	high _USBActiveConfiguration
 10424  011716  0100               	movlb	0	; () banked
 10425  011718  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10426  01171A  0E00               	movlw	0
 10427  01171C  0100               	movlb	0	; () banked
 10428  01171E  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10429  011720  0E01               	movlw	1
 10430  011722  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10431  011724  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10432                           
 10433                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 10434  011728  0E20               	movlw	32
 10435  01172A  6E34               	movwf	_USBDeviceState,c
 10436  01172C  0012               	return	
 10437  01172E                     __end_of_USBStdSetCfgHandler:
 10438                           	opt stack 0
 10439                           tblptru	equ	0xFF8
 10440                           tblptrh	equ	0xFF7
 10441                           tblptrl	equ	0xFF6
 10442                           tablat	equ	0xFF5
 10443                           prodh	equ	0xFF4
 10444                           prodl	equ	0xFF3
 10445                           intcon	equ	0xFF2
 10446                           intcon2	equ	0xFF1
 10447                           indf0	equ	0xFEF
 10448                           postinc0	equ	0xFEE
 10449                           fsr0h	equ	0xFEA
 10450                           fsr0l	equ	0xFE9
 10451                           wreg	equ	0xFE8
 10452                           indf1	equ	0xFE7
 10453                           postinc1	equ	0xFE6
 10454                           postdec1	equ	0xFE5
 10455                           fsr1h	equ	0xFE2
 10456                           fsr1l	equ	0xFE1
 10457                           indf2	equ	0xFDF
 10458                           postinc2	equ	0xFDE
 10459                           postdec2	equ	0xFDD
 10460                           plusw2	equ	0xFDB
 10461                           fsr2h	equ	0xFDA
 10462                           fsr2l	equ	0xFD9
 10463                           status	equ	0xFD8
 10464                           
 10465 ;; *************** function _memset *****************
 10466 ;; Defined at:
 10467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  p1              2    0[BANK0 ] PTR void 
 10470 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 10471 ;;  c               2    2[BANK0 ] int 
 10472 ;;  n               2    4[BANK0 ] unsigned int 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  p               2    6[BANK0 ] PTR unsigned char 
 10475 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  2    0[BANK0 ] PTR void 
 10478 ;; Registers used:
 10479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10485 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10488 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10489 ;;Total ram usage:        8 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    4
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_USBDeviceInit
 10496 ;;		_USBStdSetCfgHandler
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text49
 10501  013514                     __ptext49:
 10502                           	opt stack 0
 10503  013514                     _memset:
 10504                           	opt stack 23
 10505                           
 10506                           ;incstack = 0
 10507  013514  C0B5  F0BB         	movff	memset@p1,memset@p
 10508  013518  C0B6  F0BC         	movff	memset@p1+1,memset@p+1
 10509  01351C  D009               	goto	l7924
 10510  01351E                     l7920:
 10511  01351E  C0BB  FFD9         	movff	memset@p,fsr2l
 10512  013522  C0BC  FFDA         	movff	memset@p+1,fsr2h
 10513  013526  C0B7  FFDF         	movff	memset@c,indf2
 10514  01352A  0100               	movlb	0	; () banked
 10515  01352C  4BBB               	infsnz	memset@p& (0+255),f,b
 10516  01352E  2BBC               	incf	(memset@p+1)& (0+255),f,b
 10517  013530                     l7924:
 10518  013530  0100               	movlb	0	; () banked
 10519  013532  07B9               	decf	memset@n& (0+255),f,b
 10520  013534  A0D8               	btfss	status,0,c
 10521  013536  07BA               	decf	(memset@n+1)& (0+255),f,b
 10522  013538  0100               	movlb	0	; () banked
 10523  01353A  29B9               	incf	memset@n& (0+255),w,b
 10524  01353C  E1F0               	bnz	l7920
 10525  01353E  0100               	movlb	0	; () banked
 10526  013540  29BA               	incf	(memset@n+1)& (0+255),w,b
 10527  013542  B4D8               	btfsc	status,2,c
 10528  013544  0012               	return	
 10529  013546  D7EB               	goto	l7920
 10530  013548                     __end_of_memset:
 10531                           	opt stack 0
 10532                           tblptru	equ	0xFF8
 10533                           tblptrh	equ	0xFF7
 10534                           tblptrl	equ	0xFF6
 10535                           tablat	equ	0xFF5
 10536                           prodh	equ	0xFF4
 10537                           prodl	equ	0xFF3
 10538                           intcon	equ	0xFF2
 10539                           intcon2	equ	0xFF1
 10540                           indf0	equ	0xFEF
 10541                           postinc0	equ	0xFEE
 10542                           fsr0h	equ	0xFEA
 10543                           fsr0l	equ	0xFE9
 10544                           wreg	equ	0xFE8
 10545                           indf1	equ	0xFE7
 10546                           postinc1	equ	0xFE6
 10547                           postdec1	equ	0xFE5
 10548                           fsr1h	equ	0xFE2
 10549                           fsr1l	equ	0xFE1
 10550                           indf2	equ	0xFDF
 10551                           postinc2	equ	0xFDE
 10552                           postdec2	equ	0xFDD
 10553                           plusw2	equ	0xFDB
 10554                           fsr2h	equ	0xFDA
 10555                           fsr2l	equ	0xFD9
 10556                           status	equ	0xFD8
 10557                           
 10558 ;; *************** function _USBStdGetStatusHandler *****************
 10559 ;; Defined at:
 10560 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;		None
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  p               2    0[BANK0 ] PTR struct __BDT
 10565 ;;		 -> NULL(0), BDT(48), 
 10566 ;; Return value:  Size  Location     Type
 10567 ;;		None               void
 10568 ;; Registers used:
 10569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10578 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;Total ram usage:        3 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    4
 10582 ;; This function calls:
 10583 ;;		Nothing
 10584 ;; This function is called by:
 10585 ;;		_USBCheckStdRequest
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text50
 10590  0128F8                     __ptext50:
 10591                           	opt stack 0
 10592  0128F8                     _USBStdGetStatusHandler:
 10593                           	opt stack 21
 10594                           
 10595                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;incstack = 0
 10599  0128F8  0E00               	movlw	0
 10600  0128FA  010D               	movlb	13	; () banked
 10601  0128FC  6F38               	movwf	56,b	;volatile
 10602                           
 10603                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 10604  0128FE  0E00               	movlw	0
 10605  012900  010D               	movlb	13	; () banked
 10606  012902  6F39               	movwf	57,b	;volatile
 10607                           
 10608                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 10609  012904  D03B               	goto	l8130
 10610  012906                     l283:
 10611                           
 10612                           ; BSR set to: 13
 10613                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 10614  012906  8E24               	bsf	_inPipes+3,7,c
 10615                           
 10616                           ; BSR set to: 13
 10617                           ;usb_device.c: 2145: }
 10618                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 10619                           
 10620                           ; BSR set to: 13
 10621                           
 10622                           ; BSR set to: 13
 10623                           ;usb_device.c: 2143: {
 10624                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 10625                           
 10626                           ;usb_device.c: 2142: if(0 == 1)
 10627  012908  0100               	movlb	0	; () banked
 10628  01290A  058B               	decf	_RemoteWakeup& (0+255),w,b
 10629  01290C  A4D8               	btfss	status,2,c
 10630  01290E  D042               	goto	l286
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;usb_device.c: 2148: {
 10634                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 10635  012910  010D               	movlb	13	; () banked
 10636  012912  8338               	bsf	56,1,b	;volatile
 10637                           
 10638                           ; BSR set to: 13
 10639                           ;usb_device.c: 2150: }
 10640                           ;usb_device.c: 2151: break;
 10641  012914  D03F               	goto	l286
 10642  012916                     l287:
 10643                           
 10644                           ; BSR set to: 13
 10645                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 10646  012916  8E24               	bsf	_inPipes+3,7,c
 10647                           
 10648                           ;usb_device.c: 2154: break;
 10649  012918  D03D               	goto	l286
 10650  01291A                     l288:
 10651                           
 10652                           ; BSR set to: 13
 10653                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 10654  01291A  8E24               	bsf	_inPipes+3,7,c
 10655                           
 10656                           ;usb_device.c: 2160: {
 10657                           ;usb_device.c: 2161: BDT_ENTRY *p;
 10658                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 10659  01291C  010D               	movlb	13	; () banked
 10660  01291E  BF34               	btfsc	52,7,b	;volatile
 10661  012920  D00B               	goto	l8120
 10662                           
 10663                           ; BSR set to: 13
 10664                           ;usb_device.c: 2164: {
 10665                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10666  012922  010D               	movlb	13	; () banked
 10667  012924  5134               	movf	52,w,b	;volatile
 10668  012926  0B0F               	andlw	15
 10669  012928  6E20               	movwf	??_USBStdGetStatusHandler& (0+255),c
 10670  01292A  5020               	movf	??_USBStdGetStatusHandler,w,c
 10671  01292C  0D02               	mullw	2
 10672  01292E  0E69               	movlw	low _pBDTEntryOut
 10673  012930  24F3               	addwf	prodl,w,c
 10674  012932  6ED9               	movwf	fsr2l,c
 10675  012934  0E00               	movlw	high _pBDTEntryOut
 10676  012936  D00A               	goto	L3
 10677  012938                     l8120:
 10678                           
 10679                           ; BSR set to: 13
 10680                           ;usb_device.c: 2167: else
 10681                           ;usb_device.c: 2168: {
 10682                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10683  012938  010D               	movlb	13	; () banked
 10684  01293A  5134               	movf	52,w,b	;volatile
 10685  01293C  0B0F               	andlw	15
 10686  01293E  6E20               	movwf	??_USBStdGetStatusHandler& (0+255),c
 10687  012940  5020               	movf	??_USBStdGetStatusHandler,w,c
 10688  012942  0D02               	mullw	2
 10689  012944  0E27               	movlw	low _pBDTEntryIn
 10690  012946  24F3               	addwf	prodl,w,c
 10691  012948  6ED9               	movwf	fsr2l,c
 10692  01294A  0E00               	movlw	high _pBDTEntryIn
 10693  01294C                     L3:
 10694  01294C  20F4               	addwfc	prodh,w,c
 10695  01294E  6EDA               	movwf	fsr2h,c
 10696  012950  CFDE F0B5          	movff	postinc2,USBStdGetStatusHandler@p
 10697  012954  CFDD F0B6          	movff	postdec2,USBStdGetStatusHandler@p+1
 10698                           
 10699                           ; BSR set to: 13
 10700                           ;usb_device.c: 2170: }
 10701                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10702                           
 10703                           ; BSR set to: 13
 10704  012958  C0B5  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10705  01295C  C0B6  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10706  012960  0100               	movlb	0	; () banked
 10707  012962  AEDF               	btfss	indf2,7,c
 10708  012964  D017               	goto	l286
 10709                           
 10710                           ; BSR set to: 0
 10711  012966  C0B5  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10712  01296A  C0B6  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10713  01296E  0100               	movlb	0	; () banked
 10714  012970  A4DF               	btfss	indf2,2,c
 10715  012972  D010               	goto	l286
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 10719  012974  0E01               	movlw	1
 10720  012976  010D               	movlb	13	; () banked
 10721  012978  6F38               	movwf	56,b	;volatile
 10722                           
 10723                           ; BSR set to: 13
 10724                           ;usb_device.c: 2175: }
 10725                           ;usb_device.c: 2176: }
 10726                           
 10727                           ; BSR set to: 13
 10728                           ;usb_device.c: 2174: break;
 10729  01297A  D00C               	goto	l286
 10730  01297C                     l8130:
 10731                           
 10732                           ; BSR set to: 13
 10733  01297C  010D               	movlb	13	; () banked
 10734  01297E  5130               	movf	48,w,b	;volatile
 10735  012980  0B1F               	andlw	31
 10736                           
 10737                           ; Switch size 1, requested type "space"
 10738                           ; Number of cases is 3, Range of values is 0 to 2
 10739                           ; switch strategies available:
 10740                           ; Name         Instructions Cycles
 10741                           ; simple_byte           10     6 (average)
 10742                           ;	Chosen strategy is simple_byte
 10743  012982  0A00               	xorlw	0	; case 0
 10744  012984  B4D8               	btfsc	status,2,c
 10745  012986  D7BF               	goto	l283
 10746  012988  0A01               	xorlw	1	; case 1
 10747  01298A  B4D8               	btfsc	status,2,c
 10748  01298C  D7C4               	goto	l287
 10749  01298E  0A03               	xorlw	3	; case 2
 10750  012990  B4D8               	btfsc	status,2,c
 10751  012992  D7C3               	goto	l288
 10752  012994                     l286:
 10753                           
 10754                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 10755  012994  AE24               	btfss	_inPipes+3,7,c
 10756  012996  0012               	return	
 10757                           
 10758                           ;usb_device.c: 2179: {
 10759                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10760  012998  0E38               	movlw	56
 10761  01299A  6E21               	movwf	_inPipes,c
 10762  01299C  0E0D               	movlw	13
 10763  01299E  6E22               	movwf	_inPipes+1,c
 10764                           
 10765                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10766  0129A0  8024               	bsf	_inPipes+3,0,c
 10767                           
 10768                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 10769  0129A2  0E02               	movlw	2
 10770  0129A4  6E25               	movwf	_inPipes+4,c
 10771  0129A6  0012               	return	
 10772  0129A8                     __end_of_USBStdGetStatusHandler:
 10773                           	opt stack 0
 10774                           tblptru	equ	0xFF8
 10775                           tblptrh	equ	0xFF7
 10776                           tblptrl	equ	0xFF6
 10777                           tablat	equ	0xFF5
 10778                           prodh	equ	0xFF4
 10779                           prodl	equ	0xFF3
 10780                           intcon	equ	0xFF2
 10781                           intcon2	equ	0xFF1
 10782                           indf0	equ	0xFEF
 10783                           postinc0	equ	0xFEE
 10784                           fsr0h	equ	0xFEA
 10785                           fsr0l	equ	0xFE9
 10786                           wreg	equ	0xFE8
 10787                           indf1	equ	0xFE7
 10788                           postinc1	equ	0xFE6
 10789                           postdec1	equ	0xFE5
 10790                           fsr1h	equ	0xFE2
 10791                           fsr1l	equ	0xFE1
 10792                           indf2	equ	0xFDF
 10793                           postinc2	equ	0xFDE
 10794                           postdec2	equ	0xFDD
 10795                           plusw2	equ	0xFDB
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8
 10799                           
 10800 ;; *************** function _USBStdGetDscHandler *****************
 10801 ;; Defined at:
 10802 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;		None               void
 10809 ;; Registers used:
 10810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10820 ;;Total ram usage:        2 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:    4
 10823 ;; This function calls:
 10824 ;;		Nothing
 10825 ;; This function is called by:
 10826 ;;		_USBCheckStdRequest
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text51
 10831  0113C2                     __ptext51:
 10832                           	opt stack 0
 10833  0113C2                     _USBStdGetDscHandler:
 10834                           	opt stack 21
 10835                           
 10836                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 10837                           
 10838                           ;incstack = 0
 10839  0113C2  0E80               	movlw	128
 10840  0113C4  010D               	movlb	13	; () banked
 10841  0113C6  1930               	xorwf	48,w,b	;volatile
 10842  0113C8  A4D8               	btfss	status,2,c
 10843  0113CA  0012               	return	
 10844                           
 10845                           ; BSR set to: 13
 10846                           ;usb_device.c: 2046: {
 10847                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10848  0113CC  0EC0               	movlw	192
 10849  0113CE  6E24               	movwf	_inPipes+3,c
 10850                           
 10851                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 10852  0113D0  D08B               	goto	l8108
 10853  0113D2                     l8082:
 10854                           
 10855                           ; BSR set to: 13
 10856                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10857  0113D2  0E46               	movlw	low _device_dsc
 10858  0113D4  6E21               	movwf	_inPipes,c
 10859  0113D6  0EFF               	movlw	high _device_dsc
 10860  0113D8  6E22               	movwf	_inPipes+1,c
 10861                           
 10862                           ; BSR set to: 13
 10863                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 10864  0113DA  0E00               	movlw	0
 10865  0113DC  6E26               	movwf	_inPipes+5,c
 10866  0113DE  0E12               	movlw	18
 10867  0113E0  6E25               	movwf	_inPipes+4,c
 10868                           
 10869                           ;usb_device.c: 2058: break;
 10870  0113E2  0012               	return	
 10871  0113E4                     l8086:
 10872                           
 10873                           ; BSR set to: 13
 10874                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 10875  0113E4  010D               	movlb	13	; () banked
 10876  0113E6  5132               	movf	50,w,b	;volatile
 10877  0113E8  A4D8               	btfss	status,2,c
 10878  0113EA  D047               	goto	l8094
 10879                           
 10880                           ; BSR set to: 13
 10881                           ;usb_device.c: 2064: {
 10882                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10883  0113EC  010D               	movlb	13	; () banked
 10884  0113EE  5132               	movf	50,w,b	;volatile
 10885  0113F0  0D02               	mullw	2
 10886  0113F2  0E7D               	movlw	low _USB_CD_Ptr
 10887  0113F4  24F3               	addwf	prodl,w,c
 10888  0113F6  6EF6               	movwf	tblptrl,c
 10889  0113F8  0EFE               	movlw	high _USB_CD_Ptr
 10890  0113FA  20F4               	addwfc	prodh,w,c
 10891  0113FC  6EF7               	movwf	tblptrh,c
 10892  0113FE                     	if	1	;There are 3 active tblptr bytes
 10893  0113FE  6AF8               	clrf	tblptru,c
 10894  011400  0E00               	movlw	low (__mediumconst shr (0+16))
 10895  011402  22F8               	addwfc	tblptru,f,c
 10896  011404                     	endif
 10897  011404  0009               	tblrd		*+
 10898  011406  CFF5 F021          	movff	tablat,_inPipes
 10899  01140A  000A               	tblrd		*-
 10900  01140C  CFF5 F022          	movff	tablat,_inPipes+1
 10901                           
 10902                           ; BSR set to: 13
 10903                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10904  011410  0E02               	movlw	2
 10905  011412  2421               	addwf	_inPipes,w,c
 10906  011414  0100               	movlb	0	; () banked
 10907  011416  6FB5               	movwf	??_USBStdGetDscHandler& (0+255),b
 10908  011418  0E00               	movlw	0
 10909  01141A  2022               	addwfc	_inPipes+1,w,c
 10910  01141C  0100               	movlb	0	; () banked
 10911  01141E  6FB6               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10912  011420  C0B5  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10913  011424  C0B6  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10914  011428  0E00               	movlw	low (__mediumconst shr (0+16))
 10915  01142A  6EF8               	movwf	tblptru,c
 10916  01142C  0E0E               	movlw	(high __ramtop+-1)
 10917  01142E  64F7               	cpfsgt	tblptrh,c
 10918  011430  D003               	bra	u7727
 10919  011432  0008               	tblrd		*
 10920  011434  50F5               	movf	tablat,w,c
 10921  011436  D005               	bra	u7720
 10922  011438                     u7727:
 10923  011438  CFF6 FFE9          	movff	tblptrl,fsr0l
 10924  01143C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10925  011440  50EF               	movf	indf0,w,c
 10926  011442                     u7720:
 10927  011442  6E25               	movwf	_inPipes+4,c
 10928                           
 10929                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10930  011444  0E03               	movlw	3
 10931  011446  2421               	addwf	_inPipes,w,c
 10932  011448  0100               	movlb	0	; () banked
 10933  01144A  6FB5               	movwf	??_USBStdGetDscHandler& (0+255),b
 10934  01144C  0E00               	movlw	0
 10935  01144E  2022               	addwfc	_inPipes+1,w,c
 10936  011450  0100               	movlb	0	; () banked
 10937  011452  6FB6               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10938  011454  C0B5  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10939  011458  C0B6  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10940  01145C  0E00               	movlw	low (__mediumconst shr (0+16))
 10941  01145E  6EF8               	movwf	tblptru,c
 10942  011460  0E0E               	movlw	(high __ramtop+-1)
 10943  011462  64F7               	cpfsgt	tblptrh,c
 10944  011464  D003               	bra	u7737
 10945  011466  0008               	tblrd		*
 10946  011468  50F5               	movf	tablat,w,c
 10947  01146A  D005               	bra	u7730
 10948  01146C                     u7737:
 10949  01146C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10950  011470  CFF7 FFEA          	movff	tblptrh,fsr0h
 10951  011474  50EF               	movf	indf0,w,c
 10952  011476                     u7730:
 10953  011476  6E26               	movwf	_inPipes+5,c
 10954                           
 10955                           ;usb_device.c: 2076: }
 10956  011478  0012               	return	
 10957  01147A                     l8094:
 10958                           
 10959                           ;usb_device.c: 2077: else
 10960                           ;usb_device.c: 2078: {
 10961                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 10962  01147A  0E00               	movlw	0
 10963  01147C  6E24               	movwf	_inPipes+3,c
 10964                           
 10965                           ;usb_device.c: 2080: }
 10966                           ;usb_device.c: 2081: break;
 10967  01147E  0012               	return	
 10968  011480                     l8096:
 10969                           
 10970                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 10971  011480  0E03               	movlw	3
 10972  011482  010D               	movlb	13	; () banked
 10973  011484  6132               	cpfslt	50,b	;volatile
 10974  011486  D02A               	goto	l8102
 10975                           
 10976                           ; BSR set to: 13
 10977                           ;usb_device.c: 2087: {
 10978                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10979  011488  010D               	movlb	13	; () banked
 10980  01148A  5132               	movf	50,w,b	;volatile
 10981  01148C  0D02               	mullw	2
 10982  01148E  0E77               	movlw	low _USB_SD_Ptr
 10983  011490  24F3               	addwf	prodl,w,c
 10984  011492  6EF6               	movwf	tblptrl,c
 10985  011494  0EFE               	movlw	high _USB_SD_Ptr
 10986  011496  20F4               	addwfc	prodh,w,c
 10987  011498  6EF7               	movwf	tblptrh,c
 10988  01149A                     	if	1	;There are 3 active tblptr bytes
 10989  01149A  6AF8               	clrf	tblptru,c
 10990  01149C  0E00               	movlw	low (__mediumconst shr (0+16))
 10991  01149E  22F8               	addwfc	tblptru,f,c
 10992  0114A0                     	endif
 10993  0114A0  0009               	tblrd		*+
 10994  0114A2  CFF5 F021          	movff	tablat,_inPipes
 10995  0114A6  000A               	tblrd		*-
 10996  0114A8  CFF5 F022          	movff	tablat,_inPipes+1
 10997                           
 10998                           ; BSR set to: 13
 10999                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11000  0114AC  C021  FFF6         	movff	_inPipes,tblptrl
 11001  0114B0  C022  FFF7         	movff	_inPipes+1,tblptrh
 11002  0114B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11003  0114B6  6EF8               	movwf	tblptru,c
 11004  0114B8  0E0E               	movlw	(high __ramtop+-1)
 11005  0114BA  64F7               	cpfsgt	tblptrh,c
 11006  0114BC  D003               	bra	u7757
 11007  0114BE  0008               	tblrd		*
 11008  0114C0  50F5               	movf	tablat,w,c
 11009  0114C2  D005               	bra	u7750
 11010  0114C4                     u7757:
 11011  0114C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11012  0114C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11013  0114CC  50EF               	movf	indf0,w,c
 11014  0114CE                     u7750:
 11015  0114CE  0100               	movlb	0	; () banked
 11016  0114D0  6FB5               	movwf	??_USBStdGetDscHandler& (0+255),b
 11017  0114D2  0100               	movlb	0	; () banked
 11018  0114D4  51B5               	movf	??_USBStdGetDscHandler& (0+255),w,b
 11019  0114D6  6E25               	movwf	_inPipes+4,c
 11020  0114D8  6A26               	clrf	_inPipes+5,c
 11021                           
 11022                           ;usb_device.c: 2092: }
 11023  0114DA  0012               	return	
 11024  0114DC                     l8102:
 11025                           
 11026                           ;usb_device.c: 2102: else
 11027                           ;usb_device.c: 2103: {
 11028                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 11029  0114DC  0E00               	movlw	0
 11030  0114DE  6E24               	movwf	_inPipes+3,c
 11031                           
 11032                           ;usb_device.c: 2105: }
 11033                           ;usb_device.c: 2106: break;
 11034  0114E0  0012               	return	
 11035  0114E2                     l8104:
 11036                           
 11037                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 11038  0114E2  0E00               	movlw	0
 11039  0114E4  6E24               	movwf	_inPipes+3,c
 11040                           
 11041                           ;usb_device.c: 2110: }
 11042                           
 11043                           ;usb_device.c: 2109: break;
 11044  0114E6  0012               	return	
 11045  0114E8                     l8108:
 11046  0114E8  010D               	movlb	13	; () banked
 11047  0114EA  5133               	movf	51,w,b	;volatile
 11048                           
 11049                           ; Switch size 1, requested type "space"
 11050                           ; Number of cases is 3, Range of values is 1 to 3
 11051                           ; switch strategies available:
 11052                           ; Name         Instructions Cycles
 11053                           ; simple_byte           10     6 (average)
 11054                           ;	Chosen strategy is simple_byte
 11055  0114EC  0A01               	xorlw	1	; case 1
 11056  0114EE  B4D8               	btfsc	status,2,c
 11057  0114F0  D770               	goto	l8082
 11058  0114F2  0A03               	xorlw	3	; case 2
 11059  0114F4  B4D8               	btfsc	status,2,c
 11060  0114F6  D776               	goto	l8086
 11061  0114F8  0A01               	xorlw	1	; case 3
 11062  0114FA  B4D8               	btfsc	status,2,c
 11063  0114FC  D7C1               	goto	l8096
 11064  0114FE  D7F1               	goto	l8104
 11065  011500                     __end_of_USBStdGetDscHandler:
 11066                           	opt stack 0
 11067                           tblptru	equ	0xFF8
 11068                           tblptrh	equ	0xFF7
 11069                           tblptrl	equ	0xFF6
 11070                           tablat	equ	0xFF5
 11071                           prodh	equ	0xFF4
 11072                           prodl	equ	0xFF3
 11073                           intcon	equ	0xFF2
 11074                           intcon2	equ	0xFF1
 11075                           indf0	equ	0xFEF
 11076                           postinc0	equ	0xFEE
 11077                           fsr0h	equ	0xFEA
 11078                           fsr0l	equ	0xFE9
 11079                           wreg	equ	0xFE8
 11080                           indf1	equ	0xFE7
 11081                           postinc1	equ	0xFE6
 11082                           postdec1	equ	0xFE5
 11083                           fsr1h	equ	0xFE2
 11084                           fsr1l	equ	0xFE1
 11085                           indf2	equ	0xFDF
 11086                           postinc2	equ	0xFDE
 11087                           postdec2	equ	0xFDD
 11088                           plusw2	equ	0xFDB
 11089                           fsr2h	equ	0xFDA
 11090                           fsr2l	equ	0xFD9
 11091                           status	equ	0xFD8
 11092                           
 11093 ;; *************** function _USBStdFeatureReqHandler *****************
 11094 ;; Defined at:
 11095 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;		None
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  p               2   23[BANK0 ] PTR struct __BDT
 11100 ;;		 -> NULL(0), BDT(48), 
 11101 ;;  pUEP            2   20[BANK0 ] PTR unsigned char 
 11102 ;;		 -> UEP0(1), 
 11103 ;;  current_ep_d    1   22[BANK0 ] struct .
 11104 ;; Return value:  Size  Location     Type
 11105 ;;		None               void
 11106 ;; Registers used:
 11107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11114 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;Total ram usage:        6 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    8
 11120 ;; This function calls:
 11121 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11122 ;; This function is called by:
 11123 ;;		_USBCheckStdRequest
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text52
 11128  01045A                     __ptext52:
 11129                           	opt stack 0
 11130  01045A                     _USBStdFeatureReqHandler:
 11131                           	opt stack 17
 11132                           
 11133                           ;usb_device.c: 2759: BDT_ENTRY *p;
 11134                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 11135                           ;usb_device.c: 2764: unsigned char* pUEP;
 11136                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 11137                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 11138                           
 11139                           ;incstack = 0
 11140  01045A  010D               	movlb	13	; () banked
 11141  01045C  0532               	decf	50,w,b	;volatile
 11142  01045E  A4D8               	btfss	status,2,c
 11143  010460  D011               	goto	l362
 11144                           
 11145                           ; BSR set to: 13
 11146  010462  010D               	movlb	13	; () banked
 11147  010464  5130               	movf	48,w,b	;volatile
 11148  010466  0B1F               	andlw	31
 11149  010468  0900               	iorlw	0
 11150  01046A  A4D8               	btfss	status,2,c
 11151  01046C  D00B               	goto	l362
 11152                           
 11153                           ; BSR set to: 13
 11154                           ;usb_device.c: 2804: {
 11155                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 11156  01046E  8E24               	bsf	_inPipes+3,7,c
 11157                           
 11158                           ; BSR set to: 13
 11159                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 11160  010470  0E03               	movlw	3
 11161  010472  010D               	movlb	13	; () banked
 11162  010474  1931               	xorwf	49,w,b	;volatile
 11163  010476  A4D8               	btfss	status,2,c
 11164  010478  D002               	goto	l8148
 11165                           
 11166                           ; BSR set to: 13
 11167                           ;usb_device.c: 2807: RemoteWakeup = 1;
 11168  01047A  0E01               	movlw	1
 11169  01047C  D001               	goto	L4
 11170  01047E                     l8148:
 11171                           
 11172                           ;usb_device.c: 2808: else
 11173                           ;usb_device.c: 2809: RemoteWakeup = 0;
 11174  01047E  0E00               	movlw	0
 11175  010480                     L4:
 11176  010480  0100               	movlb	0	; () banked
 11177  010482  6F8B               	movwf	_RemoteWakeup& (0+255),b
 11178  010484                     l362:
 11179                           
 11180                           ;usb_device.c: 2810: }
 11181                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 11182                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 11183                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11184                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 11185  010484  010D               	movlb	13	; () banked
 11186  010486  5132               	movf	50,w,b	;volatile
 11187  010488  A4D8               	btfss	status,2,c
 11188  01048A  0012               	return	
 11189                           
 11190                           ; BSR set to: 13
 11191  01048C  010D               	movlb	13	; () banked
 11192  01048E  5130               	movf	48,w,b	;volatile
 11193  010490  0B1F               	andlw	31
 11194  010492  0A02               	xorlw	2
 11195  010494  A4D8               	btfss	status,2,c
 11196  010496  0012               	return	
 11197                           
 11198                           ; BSR set to: 13
 11199  010498  010D               	movlb	13	; () banked
 11200  01049A  5134               	movf	52,w,b	;volatile
 11201  01049C  0B0F               	andlw	15
 11202  01049E  0900               	iorlw	0
 11203  0104A0  B4D8               	btfsc	status,2,c
 11204  0104A2  0012               	return	
 11205                           
 11206                           ; BSR set to: 13
 11207  0104A4  010D               	movlb	13	; () banked
 11208  0104A6  5134               	movf	52,w,b	;volatile
 11209  0104A8  0B0F               	andlw	15
 11210  0104AA  0100               	movlb	0	; () banked
 11211  0104AC  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11212  0104AE  0E03               	movlw	3
 11213  0104B0  0100               	movlb	0	; () banked
 11214  0104B2  61C8               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11215  0104B4  0012               	return	
 11216                           
 11217                           ; BSR set to: 0
 11218  0104B6  0E20               	movlw	32
 11219  0104B8  1834               	xorwf	_USBDeviceState,w,c
 11220  0104BA  A4D8               	btfss	status,2,c
 11221  0104BC  0012               	return	
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;usb_device.c: 2817: {
 11225                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 11226  0104BE  8E24               	bsf	_inPipes+3,7,c
 11227                           
 11228                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 11229  0104C0  010D               	movlb	13	; () banked
 11230  0104C2  BF34               	btfsc	52,7,b	;volatile
 11231  0104C4  D01F               	goto	l8162
 11232                           
 11233                           ; BSR set to: 13
 11234                           ;usb_device.c: 2824: {
 11235                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11236  0104C6  010D               	movlb	13	; () banked
 11237  0104C8  5134               	movf	52,w,b	;volatile
 11238  0104CA  0B0F               	andlw	15
 11239  0104CC  0100               	movlb	0	; () banked
 11240  0104CE  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11241  0104D0  0100               	movlb	0	; () banked
 11242  0104D2  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11243  0104D4  0D02               	mullw	2
 11244  0104D6  0E69               	movlw	low _pBDTEntryOut
 11245  0104D8  24F3               	addwf	prodl,w,c
 11246  0104DA  6ED9               	movwf	fsr2l,c
 11247  0104DC  0E00               	movlw	high _pBDTEntryOut
 11248  0104DE  20F4               	addwfc	prodh,w,c
 11249  0104E0  6EDA               	movwf	fsr2h,c
 11250  0104E2  CFDE F0CC          	movff	postinc2,USBStdFeatureReqHandler@p
 11251  0104E6  CFDD F0CD          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11252                           
 11253                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11254  0104EA  010D               	movlb	13	; () banked
 11255  0104EC  5134               	movf	52,w,b	;volatile
 11256  0104EE  0B0F               	andlw	15
 11257  0104F0  0100               	movlb	0	; () banked
 11258  0104F2  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11259  0104F4  0100               	movlb	0	; () banked
 11260  0104F6  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11261  0104F8  0D01               	mullw	1
 11262  0104FA  0E72               	movlw	low _ep_data_out
 11263  0104FC  24F3               	addwf	prodl,w,c
 11264  0104FE  6ED9               	movwf	fsr2l,c
 11265  010500  0E00               	movlw	high _ep_data_out
 11266  010502  D01E               	goto	L5
 11267  010504                     l8162:
 11268                           
 11269                           ;usb_device.c: 2828: else
 11270                           ;usb_device.c: 2829: {
 11271                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11272  010504  010D               	movlb	13	; () banked
 11273  010506  5134               	movf	52,w,b	;volatile
 11274  010508  0B0F               	andlw	15
 11275  01050A  0100               	movlb	0	; () banked
 11276  01050C  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11277  01050E  0100               	movlb	0	; () banked
 11278  010510  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11279  010512  0D02               	mullw	2
 11280  010514  0E27               	movlw	low _pBDTEntryIn
 11281  010516  24F3               	addwf	prodl,w,c
 11282  010518  6ED9               	movwf	fsr2l,c
 11283  01051A  0E00               	movlw	high _pBDTEntryIn
 11284  01051C  20F4               	addwfc	prodh,w,c
 11285  01051E  6EDA               	movwf	fsr2h,c
 11286  010520  CFDE F0CC          	movff	postinc2,USBStdFeatureReqHandler@p
 11287  010524  CFDD F0CD          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11288                           
 11289                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11290  010528  010D               	movlb	13	; () banked
 11291  01052A  5134               	movf	52,w,b	;volatile
 11292  01052C  0B0F               	andlw	15
 11293  01052E  0100               	movlb	0	; () banked
 11294  010530  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11295  010532  0100               	movlb	0	; () banked
 11296  010534  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11297  010536  0D01               	mullw	1
 11298  010538  0E6F               	movlw	low _ep_data_in
 11299  01053A  24F3               	addwf	prodl,w,c
 11300  01053C  6ED9               	movwf	fsr2l,c
 11301  01053E  0E00               	movlw	high _ep_data_in
 11302  010540                     L5:
 11303  010540  20F4               	addwfc	prodh,w,c
 11304  010542  6EDA               	movwf	fsr2h,c
 11305  010544  50DF               	movf	indf2,w,c
 11306  010546  0100               	movlb	0	; () banked
 11307  010548  6FCB               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11308                           
 11309                           ; BSR set to: 0
 11310                           ;usb_device.c: 2832: }
 11311                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 11312                           
 11313                           ; BSR set to: 0
 11314  01054A  0100               	movlb	0	; () banked
 11315  01054C  B1CB               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11316  01054E  D003               	goto	l8168
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;usb_device.c: 2839: {
 11320                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11321  010550  0100               	movlb	0	; () banked
 11322  010552  95CC               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11323                           
 11324                           ;usb_device.c: 2841: }
 11325  010554  D002               	goto	l8170
 11326  010556                     l8168:
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;usb_device.c: 2842: else
 11330                           ;usb_device.c: 2843: {
 11331                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11332  010556  0100               	movlb	0	; () banked
 11333  010558  85CC               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11334  01055A                     l8170:
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;usb_device.c: 2845: }
 11338                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 11339  01055A  010D               	movlb	13	; () banked
 11340  01055C  BF34               	btfsc	52,7,b	;volatile
 11341  01055E  D00D               	goto	l8174
 11342                           
 11343                           ; BSR set to: 13
 11344                           ;usb_device.c: 2851: {
 11345                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11346  010560  010D               	movlb	13	; () banked
 11347  010562  5134               	movf	52,w,b	;volatile
 11348  010564  0B0F               	andlw	15
 11349  010566  0100               	movlb	0	; () banked
 11350  010568  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11351  01056A  0100               	movlb	0	; () banked
 11352  01056C  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11353  01056E  0D02               	mullw	2
 11354  010570  0E69               	movlw	low _pBDTEntryOut
 11355  010572  24F3               	addwf	prodl,w,c
 11356  010574  6ED9               	movwf	fsr2l,c
 11357  010576  0E00               	movlw	high _pBDTEntryOut
 11358  010578  D00C               	goto	L6
 11359  01057A                     l8174:
 11360                           
 11361                           ;usb_device.c: 2854: else
 11362                           ;usb_device.c: 2855: {
 11363                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11364  01057A  010D               	movlb	13	; () banked
 11365  01057C  5134               	movf	52,w,b	;volatile
 11366  01057E  0B0F               	andlw	15
 11367  010580  0100               	movlb	0	; () banked
 11368  010582  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11369  010584  0100               	movlb	0	; () banked
 11370  010586  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11371  010588  0D02               	mullw	2
 11372  01058A  0E27               	movlw	low _pBDTEntryIn
 11373  01058C  24F3               	addwf	prodl,w,c
 11374  01058E  6ED9               	movwf	fsr2l,c
 11375  010590  0E00               	movlw	high _pBDTEntryIn
 11376  010592                     L6:
 11377  010592  20F4               	addwfc	prodh,w,c
 11378  010594  6EDA               	movwf	fsr2h,c
 11379  010596  C0CC  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11380  01059A  C0CD  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;usb_device.c: 2857: }
 11384                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 11385                           
 11386                           ; BSR set to: 0
 11387  01059E  0E03               	movlw	3
 11388  0105A0  010D               	movlb	13	; () banked
 11389  0105A2  1931               	xorwf	49,w,b	;volatile
 11390  0105A4  A4D8               	btfss	status,2,c
 11391  0105A6  D034               	goto	l8190
 11392                           
 11393                           ; BSR set to: 13
 11394                           ;usb_device.c: 2861: {
 11395                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 11396  0105A8  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11397  0105AC  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11398  0105B0  0100               	movlb	0	; () banked
 11399  0105B2  AEDF               	btfss	indf2,7,c
 11400  0105B4  D020               	goto	l8186
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;usb_device.c: 2863: {
 11404                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 11405  0105B6  010D               	movlb	13	; () banked
 11406  0105B8  BF34               	btfsc	52,7,b	;volatile
 11407  0105BA  D00D               	goto	l8184
 11408                           
 11409                           ; BSR set to: 13
 11410                           ;usb_device.c: 2867: {
 11411                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11412  0105BC  010D               	movlb	13	; () banked
 11413  0105BE  5134               	movf	52,w,b	;volatile
 11414  0105C0  0B0F               	andlw	15
 11415  0105C2  0100               	movlb	0	; () banked
 11416  0105C4  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11417  0105C6  0100               	movlb	0	; () banked
 11418  0105C8  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11419  0105CA  0D01               	mullw	1
 11420  0105CC  0E72               	movlw	low _ep_data_out
 11421  0105CE  24F3               	addwf	prodl,w,c
 11422  0105D0  6ED9               	movwf	fsr2l,c
 11423  0105D2  0E00               	movlw	high _ep_data_out
 11424  0105D4  D00C               	goto	L7
 11425  0105D6                     l8184:
 11426                           
 11427                           ;usb_device.c: 2870: else
 11428                           ;usb_device.c: 2871: {
 11429                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11430  0105D6  010D               	movlb	13	; () banked
 11431  0105D8  5134               	movf	52,w,b	;volatile
 11432  0105DA  0B0F               	andlw	15
 11433  0105DC  0100               	movlb	0	; () banked
 11434  0105DE  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11435  0105E0  0100               	movlb	0	; () banked
 11436  0105E2  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11437  0105E4  0D01               	mullw	1
 11438  0105E6  0E6F               	movlw	low _ep_data_in
 11439  0105E8  24F3               	addwf	prodl,w,c
 11440  0105EA  6ED9               	movwf	fsr2l,c
 11441  0105EC  0E00               	movlw	high _ep_data_in
 11442  0105EE                     L7:
 11443  0105EE  20F4               	addwfc	prodh,w,c
 11444  0105F0  6EDA               	movwf	fsr2h,c
 11445  0105F2  0100               	movlb	0	; () banked
 11446  0105F4  82DF               	bsf	indf2,1,c
 11447  0105F6                     l8186:
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;usb_device.c: 2873: }
 11451                           ;usb_device.c: 2874: }
 11452                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 11453  0105F6  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11454  0105FA  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11455  0105FE  0E00               	movlw	0
 11456  010600  84DB               	bsf	plusw2,2,c
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 11460  010602  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11461  010606  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11462  01060A  0E00               	movlw	0
 11463  01060C  8EDB               	bsf	plusw2,7,c
 11464                           
 11465                           ;usb_device.c: 2879: }
 11466  01060E  0012               	return	
 11467  010610                     l8190:
 11468                           
 11469                           ;usb_device.c: 2880: else
 11470                           ;usb_device.c: 2881: {
 11471                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11472  010610  0E04               	movlw	4
 11473  010612  0100               	movlb	0	; () banked
 11474  010614  1BCC               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 11478  010616  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11479  01061A  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11480  01061E  0100               	movlb	0	; () banked
 11481  010620  AEDF               	btfss	indf2,7,c
 11482  010622  D01D               	goto	l8200
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;usb_device.c: 2888: {
 11486                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 11487  010624  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11488  010628  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11489  01062C  0E7F               	movlw	127
 11490  01062E  16DF               	andwf	indf2,f,c
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 11494  010630  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11495  010634  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11496  010638  0E00               	movlw	0
 11497  01063A  8CDB               	bsf	plusw2,6,c
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11501  01063C  0E00               	movlw	0
 11502  01063E  0100               	movlb	0	; () banked
 11503  010640  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11504  010642  0E05               	movlw	5
 11505  010644  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11506  010646  C0CC  F0C2         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11507  01064A  C0CD  F0C3         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11508  01064E  0E00               	movlw	0
 11509  010650  0100               	movlb	0	; () banked
 11510  010652  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11511  010654  0E02               	movlw	2
 11512  010656  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11513  010658  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11514                           
 11515                           ;usb_device.c: 2894: }
 11516  01065C  D006               	goto	l8202
 11517  01065E                     l8200:
 11518                           
 11519                           ;usb_device.c: 2895: else
 11520                           ;usb_device.c: 2896: {
 11521                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 11522  01065E  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11523  010662  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11524  010666  0E00               	movlw	0
 11525  010668  8CDB               	bsf	plusw2,6,c
 11526  01066A                     l8202:
 11527                           
 11528                           ;usb_device.c: 2899: }
 11529                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11530  01066A  0E04               	movlw	4
 11531  01066C  0100               	movlb	0	; () banked
 11532  01066E  1BCC               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11536  010670  0100               	movlb	0	; () banked
 11537  010672  B3CB               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11538  010674  D007               	goto	l381
 11539                           
 11540                           ; BSR set to: 0
 11541  010676  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11542  01067A  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11543  01067E  0100               	movlb	0	; () banked
 11544  010680  AEDF               	btfss	indf2,7,c
 11545  010682  D037               	goto	l8216
 11546  010684                     l381:
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;usb_device.c: 2910: {
 11550                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 11551  010684  010D               	movlb	13	; () banked
 11552  010686  BF34               	btfsc	52,7,b	;volatile
 11553  010688  D00D               	goto	l8210
 11554                           
 11555                           ; BSR set to: 13
 11556                           ;usb_device.c: 2912: {
 11557                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11558  01068A  010D               	movlb	13	; () banked
 11559  01068C  5134               	movf	52,w,b	;volatile
 11560  01068E  0B0F               	andlw	15
 11561  010690  0100               	movlb	0	; () banked
 11562  010692  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11563  010694  0100               	movlb	0	; () banked
 11564  010696  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11565  010698  0D01               	mullw	1
 11566  01069A  0E72               	movlw	low _ep_data_out
 11567  01069C  24F3               	addwf	prodl,w,c
 11568  01069E  6ED9               	movwf	fsr2l,c
 11569  0106A0  0E00               	movlw	high _ep_data_out
 11570  0106A2  D00C               	goto	L8
 11571  0106A4                     l8210:
 11572                           
 11573                           ;usb_device.c: 2915: else
 11574                           ;usb_device.c: 2916: {
 11575                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11576  0106A4  010D               	movlb	13	; () banked
 11577  0106A6  5134               	movf	52,w,b	;volatile
 11578  0106A8  0B0F               	andlw	15
 11579  0106AA  0100               	movlb	0	; () banked
 11580  0106AC  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11581  0106AE  0100               	movlb	0	; () banked
 11582  0106B0  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11583  0106B2  0D01               	mullw	1
 11584  0106B4  0E6F               	movlw	low _ep_data_in
 11585  0106B6  24F3               	addwf	prodl,w,c
 11586  0106B8  6ED9               	movwf	fsr2l,c
 11587  0106BA  0E00               	movlw	high _ep_data_in
 11588  0106BC                     L8:
 11589  0106BC  20F4               	addwfc	prodh,w,c
 11590  0106BE  6EDA               	movwf	fsr2h,c
 11591  0106C0  0100               	movlb	0	; () banked
 11592  0106C2  92DF               	bcf	indf2,1,c
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;usb_device.c: 2918: }
 11596                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11597                           
 11598                           ; BSR set to: 0
 11599  0106C4  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11600  0106C8  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11601  0106CC  0E3B               	movlw	59
 11602  0106CE  16DF               	andwf	indf2,f,c
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11606  0106D0  0E00               	movlw	0
 11607  0106D2  0100               	movlb	0	; () banked
 11608  0106D4  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11609  0106D6  0E05               	movlw	5
 11610  0106D8  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11611  0106DA  C0CC  F0C2         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11612  0106DE  C0CD  F0C3         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11613  0106E2  0E00               	movlw	0
 11614  0106E4  0100               	movlb	0	; () banked
 11615  0106E6  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11616  0106E8  0E02               	movlw	2
 11617  0106EA  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11618  0106EC  ECA4  F09A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11619                           
 11620                           ;usb_device.c: 2924: }
 11621  0106F0  D006               	goto	l8218
 11622  0106F2                     l8216:
 11623                           
 11624                           ;usb_device.c: 2925: else
 11625                           ;usb_device.c: 2926: {
 11626                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11627  0106F2  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11628  0106F6  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11629  0106FA  0E3B               	movlw	59
 11630  0106FC  16DF               	andwf	indf2,f,c
 11631  0106FE                     l8218:
 11632                           
 11633                           ;usb_device.c: 2929: }
 11634                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11635  0106FE  010D               	movlb	13	; () banked
 11636  010700  5134               	movf	52,w,b	;volatile
 11637  010702  0B0F               	andlw	15
 11638  010704  0100               	movlb	0	; () banked
 11639  010706  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11640  010708  0100               	movlb	0	; () banked
 11641  01070A  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11642  01070C  0D01               	mullw	1
 11643  01070E  0E26               	movlw	38
 11644  010710  24F3               	addwf	prodl,w,c
 11645  010712  0100               	movlb	0	; () banked
 11646  010714  6FC9               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11647  010716  0E0F               	movlw	15
 11648  010718  20F4               	addwfc	prodh,w,c
 11649  01071A  0100               	movlb	0	; () banked
 11650  01071C  6FCA               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 11654  01071E  C0C9  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11655  010722  C0CA  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11656  010726  0EFE               	movlw	254
 11657  010728  16DF               	andwf	indf2,f,c
 11658                           
 11659                           ; BSR set to: 0
 11660  01072A  0012               	return	
 11661  01072C                     __end_of_USBStdFeatureReqHandler:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodh	equ	0xFF4
 11668                           prodl	equ	0xFF3
 11669                           intcon	equ	0xFF2
 11670                           intcon2	equ	0xFF1
 11671                           indf0	equ	0xFEF
 11672                           postinc0	equ	0xFEE
 11673                           fsr0h	equ	0xFEA
 11674                           fsr0l	equ	0xFE9
 11675                           wreg	equ	0xFE8
 11676                           indf1	equ	0xFE7
 11677                           postinc1	equ	0xFE6
 11678                           postdec1	equ	0xFE5
 11679                           fsr1h	equ	0xFE2
 11680                           fsr1l	equ	0xFE1
 11681                           indf2	equ	0xFDF
 11682                           postinc2	equ	0xFDE
 11683                           postdec2	equ	0xFDD
 11684                           plusw2	equ	0xFDB
 11685                           fsr2h	equ	0xFDA
 11686                           fsr2l	equ	0xFD9
 11687                           status	equ	0xFD8
 11688                           
 11689 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11690 ;; Defined at:
 11691 ;;		line 42 in file "../My_library/My_usb_cdc.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;  event           2   11[BANK0 ] enum E8545
 11694 ;;  pdata           2   13[BANK0 ] PTR void 
 11695 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11696 ;;  size            2   15[BANK0 ] unsigned int 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;		None
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      unsigned char 
 11701 ;; Registers used:
 11702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11708 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11710 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11711 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11712 ;;Total ram usage:        8 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:    7
 11715 ;; This function calls:
 11716 ;;		_CDCInitEP
 11717 ;;		_USBCheckCDCRequest
 11718 ;; This function is called by:
 11719 ;;		_USBDeviceTasks
 11720 ;;		_USBStdSetCfgHandler
 11721 ;;		_USBSuspend
 11722 ;;		_USBWakeFromSuspend
 11723 ;;		_USBCtrlTrfSetupHandler
 11724 ;;		_USBCheckStdRequest
 11725 ;;		_USBStdFeatureReqHandler
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text53
 11730  013548                     __ptext53:
 11731                           	opt stack 0
 11732  013548                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11733                           	opt stack 21
 11734                           
 11735                           ;My_usb_cdc.c: 43: switch ((int) event) {
 11736                           
 11737                           ;incstack = 0
 11738  013548  D006               	goto	l7934
 11739  01354A                     l7928:
 11740                           
 11741                           ;My_usb_cdc.c: 45: CDCInitEP();
 11742  01354A  EC2C  F097         	call	_CDCInitEP	;wreg free
 11743                           
 11744                           ;My_usb_cdc.c: 46: break;
 11745  01354E  0012               	return	
 11746  013550                     l7930:
 11747                           
 11748                           ;My_usb_cdc.c: 48: USBCheckCDCRequest();
 11749  013550  EC07  F093         	call	_USBCheckCDCRequest	;wreg free
 11750                           
 11751                           ;My_usb_cdc.c: 50: }
 11752                           
 11753                           ;My_usb_cdc.c: 49: break;
 11754  013554  0012               	return	
 11755  013556                     l7934:
 11756  013556  C0C0  F0C6         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11757  01355A  C0C1  F0C7         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11758                           
 11759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11760                           ; Switch size 1, requested type "space"
 11761                           ; Number of cases is 1, Range of values is 0 to 0
 11762                           ; switch strategies available:
 11763                           ; Name         Instructions Cycles
 11764                           ; simple_byte            4     3 (average)
 11765                           ;	Chosen strategy is simple_byte
 11766  01355E  0100               	movlb	0	; () banked
 11767  013560  51C7               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11768  013562  0A00               	xorlw	0	; case 0
 11769  013564  A4D8               	btfss	status,2,c
 11770  013566  0012               	return	
 11771                           
 11772                           ; BSR set to: 0
 11773                           ; Switch size 1, requested type "space"
 11774                           ; Number of cases is 2, Range of values is 1 to 3
 11775                           ; switch strategies available:
 11776                           ; Name         Instructions Cycles
 11777                           ; simple_byte            7     4 (average)
 11778                           ;	Chosen strategy is simple_byte
 11779  013568  0100               	movlb	0	; () banked
 11780  01356A  51C6               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11781  01356C  0A01               	xorlw	1	; case 1
 11782  01356E  B4D8               	btfsc	status,2,c
 11783  013570  D7EC               	goto	l7928
 11784  013572  0A02               	xorlw	2	; case 3
 11785  013574  A4D8               	btfss	status,2,c
 11786  013576  0012               	return	
 11787  013578  D7EB               	goto	l7930
 11788  01357A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11789                           	opt stack 0
 11790                           tblptru	equ	0xFF8
 11791                           tblptrh	equ	0xFF7
 11792                           tblptrl	equ	0xFF6
 11793                           tablat	equ	0xFF5
 11794                           prodh	equ	0xFF4
 11795                           prodl	equ	0xFF3
 11796                           intcon	equ	0xFF2
 11797                           intcon2	equ	0xFF1
 11798                           indf0	equ	0xFEF
 11799                           postinc0	equ	0xFEE
 11800                           fsr0h	equ	0xFEA
 11801                           fsr0l	equ	0xFE9
 11802                           wreg	equ	0xFE8
 11803                           indf1	equ	0xFE7
 11804                           postinc1	equ	0xFE6
 11805                           postdec1	equ	0xFE5
 11806                           fsr1h	equ	0xFE2
 11807                           fsr1l	equ	0xFE1
 11808                           indf2	equ	0xFDF
 11809                           postinc2	equ	0xFDE
 11810                           postdec2	equ	0xFDD
 11811                           plusw2	equ	0xFDB
 11812                           fsr2h	equ	0xFDA
 11813                           fsr2l	equ	0xFD9
 11814                           status	equ	0xFD8
 11815                           
 11816 ;; *************** function _USBCheckCDCRequest *****************
 11817 ;; Defined at:
 11818 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;		None
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;		None
 11823 ;; Return value:  Size  Location     Type
 11824 ;;		None               void
 11825 ;; Registers used:
 11826 ;;		wreg, status,2, status,0
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11836 ;;Total ram usage:        0 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; Hardware stack levels required when called:    4
 11839 ;; This function calls:
 11840 ;;		Nothing
 11841 ;; This function is called by:
 11842 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text54
 11847  01260E                     __ptext54:
 11848                           	opt stack 0
 11849  01260E                     _USBCheckCDCRequest:
 11850                           	opt stack 23
 11851                           
 11852                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 11853                           
 11854                           ;incstack = 0
 11855  01260E  010D               	movlb	13	; () banked
 11856  012610  5130               	movf	48,w,b	;volatile
 11857  012612  0B1F               	andlw	31
 11858  012614  06E8               	decf	wreg,f,c
 11859  012616  A4D8               	btfss	status,2,c
 11860  012618  0012               	return	
 11861                           
 11862                           ; BSR set to: 13
 11863                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 11864                           
 11865                           ; BSR set to: 13
 11866                           
 11867                           ; BSR set to: 13
 11868  01261A  010D               	movlb	13	; () banked
 11869  01261C  3930               	swapf	48,w,b	;volatile
 11870  01261E  32E8               	rrcf	wreg,f,c
 11871  012620  0B03               	andlw	3
 11872  012622  06E8               	decf	wreg,f,c
 11873  012624  A4D8               	btfss	status,2,c
 11874  012626  0012               	return	
 11875                           
 11876                           ; BSR set to: 13
 11877                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 11878                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 11879                           
 11880                           ; BSR set to: 13
 11881                           
 11882                           ; BSR set to: 13
 11883  012628  010D               	movlb	13	; () banked
 11884  01262A  5134               	movf	52,w,b	;volatile
 11885  01262C  B4D8               	btfsc	status,2,c
 11886  01262E  D03B               	goto	l7904
 11887                           
 11888                           ; BSR set to: 13
 11889  012630  010D               	movlb	13	; () banked
 11890  012632  0534               	decf	52,w,b	;volatile
 11891  012634  A4D8               	btfss	status,2,c
 11892  012636  0012               	return	
 11893  012638  D036               	goto	l7904
 11894  01263A                     l7880:
 11895                           
 11896                           ; BSR set to: 13
 11897                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11898  01263A  0EB8               	movlw	low _dummy_encapsulated_cmd_response
 11899  01263C  6E21               	movwf	_inPipes,c
 11900  01263E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 11901  012640  6E22               	movwf	_inPipes+1,c
 11902                           
 11903                           ; BSR set to: 13
 11904                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 11905  012642  0E00               	movlw	0
 11906  012644  6E26               	movwf	_inPipes+5,c
 11907  012646  0E08               	movlw	8
 11908  012648  6E25               	movwf	_inPipes+4,c
 11909                           
 11910                           ; BSR set to: 13
 11911                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11912  01264A  8024               	bsf	_inPipes+3,0,c
 11913                           
 11914                           ; BSR set to: 13
 11915                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 11916  01264C  8E24               	bsf	_inPipes+3,7,c
 11917                           
 11918                           ;usb_device_cdc.c: 232: break;
 11919  01264E  0012               	return	
 11920  012650                     l7888:
 11921                           
 11922                           ; BSR set to: 13
 11923                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11924  012650  0EB8               	movlw	low _dummy_encapsulated_cmd_response
 11925  012652  6E21               	movwf	_inPipes,c
 11926  012654  0E01               	movlw	high _dummy_encapsulated_cmd_response
 11927  012656  6E22               	movwf	_inPipes+1,c
 11928                           
 11929                           ; BSR set to: 13
 11930                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 11931  012658  8E24               	bsf	_inPipes+3,7,c
 11932                           
 11933                           ;usb_device_cdc.c: 237: break;
 11934  01265A  0012               	return	
 11935  01265C                     l436:
 11936                           
 11937                           ; BSR set to: 13
 11938                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 11939  01265C  CD36 F064          	movff	3382,_outPipes+4	;volatile
 11940  012660  CD37 F065          	movff	3383,_outPipes+5	;volatile
 11941                           
 11942                           ; BSR set to: 13
 11943                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11944  012664  0EE0               	movlw	low _line_coding
 11945  012666  0100               	movlb	0	; () banked
 11946  012668  6F60               	movwf	_outPipes& (0+255),b
 11947  01266A  0E01               	movlw	high _line_coding
 11948  01266C  0100               	movlb	0	; () banked
 11949  01266E  6F61               	movwf	(_outPipes+1)& (0+255),b
 11950                           
 11951                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 11952  012670  0E00               	movlw	0
 11953  012672  0100               	movlb	0	; () banked
 11954  012674  6F66               	movwf	(_outPipes+6)& (0+255),b
 11955  012676  0E00               	movlw	0
 11956  012678  0100               	movlb	0	; () banked
 11957  01267A  6F67               	movwf	(_outPipes+7)& (0+255),b
 11958  01267C  0E00               	movlw	0
 11959  01267E  0100               	movlb	0	; () banked
 11960  012680  6F68               	movwf	(_outPipes+8)& (0+255),b
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 11964  012682  0100               	movlb	0	; () banked
 11965  012684  8F63               	bsf	(_outPipes+3)& (0+255),7,b
 11966                           
 11967                           ;usb_device_cdc.c: 246: break;
 11968  012686  0012               	return	
 11969  012688                     l7896:
 11970                           
 11971                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11972  012688  0EE0               	movlw	low _line_coding
 11973  01268A  6E21               	movwf	_inPipes,c
 11974  01268C  0E01               	movlw	high _line_coding
 11975  01268E  6E22               	movwf	_inPipes+1,c
 11976  012690  0E00               	movlw	0
 11977  012692  6E26               	movwf	_inPipes+5,c
 11978  012694  0E07               	movlw	7
 11979  012696  6E25               	movwf	_inPipes+4,c
 11980  012698  0EC1               	movlw	193
 11981  01269A  6E24               	movwf	_inPipes+3,c
 11982                           
 11983                           ;usb_device_cdc.c: 253: break;
 11984  01269C  0012               	return	
 11985  01269E                     l438:
 11986                           
 11987                           ; BSR set to: 13
 11988                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11989  01269E  CD32 F090          	movff	3378,_control_signal_bitmap	;volatile
 11990                           
 11991                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 11992  0126A2  8E24               	bsf	_inPipes+3,7,c
 11993                           
 11994                           ; BSR set to: 13
 11995                           ;usb_device_cdc.c: 315: }
 11996                           
 11997                           ; BSR set to: 13
 11998                           ;usb_device_cdc.c: 314: break;
 11999                           
 12000                           ;usb_device_cdc.c: 313: default:
 12001                           
 12002                           ;usb_device_cdc.c: 289: break;
 12003  0126A4  0012               	return	
 12004  0126A6                     l7904:
 12005                           
 12006                           ; BSR set to: 13
 12007  0126A6  010D               	movlb	13	; () banked
 12008  0126A8  5131               	movf	49,w,b	;volatile
 12009                           
 12010                           ; Switch size 1, requested type "space"
 12011                           ; Number of cases is 5, Range of values is 0 to 34
 12012                           ; switch strategies available:
 12013                           ; Name         Instructions Cycles
 12014                           ; simple_byte           16     9 (average)
 12015                           ;	Chosen strategy is simple_byte
 12016  0126AA  0A00               	xorlw	0	; case 0
 12017  0126AC  B4D8               	btfsc	status,2,c
 12018  0126AE  D7C5               	goto	l7880
 12019  0126B0  0A01               	xorlw	1	; case 1
 12020  0126B2  B4D8               	btfsc	status,2,c
 12021  0126B4  D7CD               	goto	l7888
 12022  0126B6  0A21               	xorlw	33	; case 32
 12023  0126B8  B4D8               	btfsc	status,2,c
 12024  0126BA  D7D0               	goto	l436
 12025  0126BC  0A01               	xorlw	1	; case 33
 12026  0126BE  B4D8               	btfsc	status,2,c
 12027  0126C0  D7E3               	goto	l7896
 12028  0126C2  0A03               	xorlw	3	; case 34
 12029  0126C4  A4D8               	btfss	status,2,c
 12030  0126C6  0012               	return	
 12031  0126C8  D7EA               	goto	l438
 12032  0126CA                     __end_of_USBCheckCDCRequest:
 12033                           	opt stack 0
 12034                           tblptru	equ	0xFF8
 12035                           tblptrh	equ	0xFF7
 12036                           tblptrl	equ	0xFF6
 12037                           tablat	equ	0xFF5
 12038                           prodh	equ	0xFF4
 12039                           prodl	equ	0xFF3
 12040                           intcon	equ	0xFF2
 12041                           intcon2	equ	0xFF1
 12042                           indf0	equ	0xFEF
 12043                           postinc0	equ	0xFEE
 12044                           fsr0h	equ	0xFEA
 12045                           fsr0l	equ	0xFE9
 12046                           wreg	equ	0xFE8
 12047                           indf1	equ	0xFE7
 12048                           postinc1	equ	0xFE6
 12049                           postdec1	equ	0xFE5
 12050                           fsr1h	equ	0xFE2
 12051                           fsr1l	equ	0xFE1
 12052                           indf2	equ	0xFDF
 12053                           postinc2	equ	0xFDE
 12054                           postdec2	equ	0xFDD
 12055                           plusw2	equ	0xFDB
 12056                           fsr2h	equ	0xFDA
 12057                           fsr2l	equ	0xFD9
 12058                           status	equ	0xFD8
 12059                           
 12060 ;; *************** function _CDCInitEP *****************
 12061 ;; Defined at:
 12062 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;		None
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;		None               void
 12069 ;; Registers used:
 12070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12080 ;;Total ram usage:        0 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; Hardware stack levels required when called:    6
 12083 ;; This function calls:
 12084 ;;		_USBEnableEndpoint
 12085 ;;		_USBTransferOnePacket
 12086 ;; This function is called by:
 12087 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text55
 12092  012E58                     __ptext55:
 12093                           	opt stack 0
 12094  012E58                     _CDCInitEP:
 12095                           	opt stack 21
 12096                           
 12097                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 12098                           
 12099                           ;incstack = 0
 12100  012E58  0E00               	movlw	0
 12101  012E5A  0101               	movlb	1	; () banked
 12102  012E5C  6FE0               	movwf	_line_coding& (0+255),b
 12103  012E5E  0E4B               	movlw	75
 12104  012E60  6FE1               	movwf	(_line_coding+1)& (0+255),b
 12105  012E62  0E00               	movlw	0
 12106  012E64  6FE2               	movwf	(_line_coding+2)& (0+255),b
 12107  012E66  0E00               	movlw	0
 12108  012E68  6FE3               	movwf	(_line_coding+3)& (0+255),b
 12109                           
 12110                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 12111  012E6A  0E00               	movlw	0
 12112  012E6C  0101               	movlb	1	; () banked
 12113  012E6E  6FE4               	movwf	(_line_coding+4)& (0+255),b
 12114                           
 12115                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 12116  012E70  0E00               	movlw	0
 12117  012E72  0101               	movlb	1	; () banked
 12118  012E74  6FE5               	movwf	(_line_coding+5)& (0+255),b
 12119                           
 12120                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 12121  012E76  0E08               	movlw	8
 12122  012E78  0101               	movlb	1	; () banked
 12123  012E7A  6FE6               	movwf	(_line_coding+6)& (0+255),b
 12124                           
 12125                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 12126  012E7C  0E00               	movlw	0
 12127  012E7E  6E38               	movwf	_cdc_rx_len,c
 12128                           
 12129                           ; BSR set to: 1
 12130                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 12131  012E80  0E1A               	movlw	26
 12132  012E82  0100               	movlb	0	; () banked
 12133  012E84  6FBC               	movwf	USBEnableEndpoint@options& (0+255),b
 12134  012E86  0E01               	movlw	1
 12135  012E88  EC22  F099         	call	_USBEnableEndpoint
 12136                           
 12137                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12138  012E8C  0E1E               	movlw	30
 12139  012E8E  0100               	movlb	0	; () banked
 12140  012E90  6FBC               	movwf	USBEnableEndpoint@options& (0+255),b
 12141  012E92  0E02               	movlw	2
 12142  012E94  EC22  F099         	call	_USBEnableEndpoint
 12143                           
 12144                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12145  012E98  0E00               	movlw	0
 12146  012E9A  0100               	movlb	0	; () banked
 12147  012E9C  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 12148  012E9E  0E14               	movlw	low _cdc_data_rx
 12149  012EA0  0100               	movlb	0	; () banked
 12150  012EA2  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 12151  012EA4  0E01               	movlw	high _cdc_data_rx
 12152  012EA6  0100               	movlb	0	; () banked
 12153  012EA8  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12154  012EAA  0E40               	movlw	64
 12155  012EAC  0100               	movlb	0	; () banked
 12156  012EAE  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
 12157  012EB0  0E02               	movlw	2
 12158  012EB2  ECD7  F08D         	call	_USBTransferOnePacket
 12159  012EB6  C0B5  F02D         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12160  012EBA  C0B6  F02E         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12161                           
 12162                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 12163  012EBE  0E00               	movlw	0
 12164  012EC0  0100               	movlb	0	; () banked
 12165  012EC2  6F7F               	movwf	_CDCDataInHandle& (0+255),b
 12166  012EC4  0E00               	movlw	0
 12167  012EC6  0100               	movlb	0	; () banked
 12168  012EC8  6F80               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 12172  012ECA  0E00               	movlw	0
 12173  012ECC  6E39               	movwf	_cdc_trf_state,c
 12174                           
 12175                           ; BSR set to: 0
 12176  012ECE  0012               	return		;funcret
 12177  012ED0                     __end_of_CDCInitEP:
 12178                           	opt stack 0
 12179                           tblptru	equ	0xFF8
 12180                           tblptrh	equ	0xFF7
 12181                           tblptrl	equ	0xFF6
 12182                           tablat	equ	0xFF5
 12183                           prodh	equ	0xFF4
 12184                           prodl	equ	0xFF3
 12185                           intcon	equ	0xFF2
 12186                           intcon2	equ	0xFF1
 12187                           indf0	equ	0xFEF
 12188                           postinc0	equ	0xFEE
 12189                           fsr0h	equ	0xFEA
 12190                           fsr0l	equ	0xFE9
 12191                           wreg	equ	0xFE8
 12192                           indf1	equ	0xFE7
 12193                           postinc1	equ	0xFE6
 12194                           postdec1	equ	0xFE5
 12195                           fsr1h	equ	0xFE2
 12196                           fsr1l	equ	0xFE1
 12197                           indf2	equ	0xFDF
 12198                           postinc2	equ	0xFDE
 12199                           postdec2	equ	0xFDD
 12200                           plusw2	equ	0xFDB
 12201                           fsr2h	equ	0xFDA
 12202                           fsr2l	equ	0xFD9
 12203                           status	equ	0xFD8
 12204                           
 12205 ;; *************** function _USBTransferOnePacket *****************
 12206 ;; Defined at:
 12207 ;;		line 995 in file "../My_library/usb/usb_device.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;  ep              1    wreg     unsigned char 
 12210 ;;  dir             1    0[BANK0 ] unsigned char 
 12211 ;;  data            2    1[BANK0 ] PTR unsigned char 
 12212 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 12213 ;;  len             1    3[BANK0 ] unsigned char 
 12214 ;; Auto vars:     Size  Location     Type
 12215 ;;  ep              1    4[BANK0 ] unsigned char 
 12216 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12217 ;;		 -> NULL(0), BDT(48), 
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  2    0[BANK0 ] PTR void 
 12220 ;; Registers used:
 12221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12228 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12231 ;;Total ram usage:        7 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:    4
 12234 ;; This function calls:
 12235 ;;		Nothing
 12236 ;; This function is called by:
 12237 ;;		_CDCInitEP
 12238 ;;		_getsUSBUSART
 12239 ;;		_CDCTxService
 12240 ;;		_USBCDCEventHandler
 12241 ;; This function uses a non-reentrant model
 12242 ;;
 12243                           
 12244                           	psect	text56
 12245  011BAE                     __ptext56:
 12246                           	opt stack 0
 12247  011BAE                     _USBTransferOnePacket:
 12248                           	opt stack 23
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;incstack = 0
 12252                           ;USBTransferOnePacket@ep stored from wreg
 12253  011BAE  0100               	movlb	0	; () banked
 12254  011BB0  6FB9               	movwf	USBTransferOnePacket@ep& (0+255),b
 12255                           
 12256                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12257                           ;usb_device.c: 1000: if(dir != 0)
 12258  011BB2  0100               	movlb	0	; () banked
 12259  011BB4  51B5               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12260  011BB6  0100               	movlb	0	; () banked
 12261  011BB8  B4D8               	btfsc	status,2,c
 12262  011BBA  D008               	goto	l7840
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;usb_device.c: 1001: {
 12266                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12267  011BBC  0100               	movlb	0	; () banked
 12268  011BBE  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12269  011BC0  0D02               	mullw	2
 12270  011BC2  0E27               	movlw	low _pBDTEntryIn
 12271  011BC4  24F3               	addwf	prodl,w,c
 12272  011BC6  6ED9               	movwf	fsr2l,c
 12273  011BC8  0E00               	movlw	high _pBDTEntryIn
 12274  011BCA  D007               	goto	L9
 12275  011BCC                     l7840:
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;usb_device.c: 1005: else
 12279                           ;usb_device.c: 1006: {
 12280                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12281  011BCC  0100               	movlb	0	; () banked
 12282  011BCE  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12283  011BD0  0D02               	mullw	2
 12284  011BD2  0E69               	movlw	low _pBDTEntryOut
 12285  011BD4  24F3               	addwf	prodl,w,c
 12286  011BD6  6ED9               	movwf	fsr2l,c
 12287  011BD8  0E00               	movlw	high _pBDTEntryOut
 12288  011BDA                     L9:
 12289  011BDA  20F4               	addwfc	prodh,w,c
 12290  011BDC  6EDA               	movwf	fsr2h,c
 12291  011BDE  CFDE F0BA          	movff	postinc2,USBTransferOnePacket@handle
 12292  011BE2  CFDD F0BB          	movff	postdec2,USBTransferOnePacket@handle+1
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;usb_device.c: 1009: }
 12296                           ;usb_device.c: 1013: if(handle == 0)
 12297                           
 12298                           ; BSR set to: 0
 12299  011BE6  0100               	movlb	0	; () banked
 12300  011BE8  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12301  011BEA  0100               	movlb	0	; () banked
 12302  011BEC  11BB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12303  011BEE  A4D8               	btfss	status,2,c
 12304  011BF0  D007               	goto	l7848
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;usb_device.c: 1014: {
 12308                           ;usb_device.c: 1015: return 0;
 12309  011BF2  0E00               	movlw	0
 12310  011BF4  0100               	movlb	0	; () banked
 12311  011BF6  6FB5               	movwf	?_USBTransferOnePacket& (0+255),b
 12312  011BF8  0E00               	movlw	0
 12313  011BFA  0100               	movlb	0	; () banked
 12314  011BFC  6FB6               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12315                           
 12316                           ; BSR set to: 0
 12317  011BFE  0012               	return	
 12318  011C00                     l7848:
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;usb_device.c: 1016: }
 12322                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12323  011C00  0100               	movlb	0	; () banked
 12324  011C02  EE20 F002          	lfsr	2,2
 12325  011C06  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12326  011C08  26D9               	addwf	fsr2l,f,c
 12327  011C0A  51BB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12328  011C0C  22DA               	addwfc	fsr2h,f,c
 12329  011C0E  C0B6  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12330  011C12  C0B7  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12331                           
 12332                           ;usb_device.c: 1030: handle->CNT = len;
 12333  011C16  0100               	movlb	0	; () banked
 12334  011C18  EE20 F001          	lfsr	2,1
 12335  011C1C  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12336  011C1E  26D9               	addwf	fsr2l,f,c
 12337  011C20  51BB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12338  011C22  22DA               	addwfc	fsr2h,f,c
 12339  011C24  C0B8  FFDF         	movff	USBTransferOnePacket@len,indf2
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12343  011C28  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12344  011C2C  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12345  011C30  0E40               	movlw	64
 12346  011C32  16DF               	andwf	indf2,f,c
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12350  011C34  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12351  011C38  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12352  011C3C  0E00               	movlw	0
 12353  011C3E  86DB               	bsf	plusw2,3,c
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12357  011C40  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12358  011C44  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12359  011C48  0E00               	movlw	0
 12360  011C4A  8EDB               	bsf	plusw2,7,c
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;usb_device.c: 1036: if(dir != 0)
 12364  011C4C  0100               	movlb	0	; () banked
 12365  011C4E  51B5               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12366  011C50  0100               	movlb	0	; () banked
 12367  011C52  B4D8               	btfsc	status,2,c
 12368  011C54  D008               	goto	l7860
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;usb_device.c: 1037: {
 12372                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12373  011C56  0100               	movlb	0	; () banked
 12374  011C58  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12375  011C5A  0D02               	mullw	2
 12376  011C5C  0E27               	movlw	low _pBDTEntryIn
 12377  011C5E  24F3               	addwf	prodl,w,c
 12378  011C60  6ED9               	movwf	fsr2l,c
 12379  011C62  0E00               	movlw	high _pBDTEntryIn
 12380  011C64  D007               	goto	L10
 12381  011C66                     l7860:
 12382                           
 12383                           ; BSR set to: 0
 12384                           ;usb_device.c: 1041: else
 12385                           ;usb_device.c: 1042: {
 12386                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12387  011C66  0100               	movlb	0	; () banked
 12388  011C68  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12389  011C6A  0D02               	mullw	2
 12390  011C6C  0E69               	movlw	low _pBDTEntryOut
 12391  011C6E  24F3               	addwf	prodl,w,c
 12392  011C70  6ED9               	movwf	fsr2l,c
 12393  011C72  0E00               	movlw	high _pBDTEntryOut
 12394  011C74                     L10:
 12395  011C74  20F4               	addwfc	prodh,w,c
 12396  011C76  6EDA               	movwf	fsr2h,c
 12397  011C78  0E04               	movlw	4
 12398  011C7A  1ADF               	xorwf	indf2,f,c
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;usb_device.c: 1045: }
 12402                           ;usb_device.c: 1046: return (void*)handle;
 12403                           
 12404                           ; BSR set to: 0
 12405  011C7C  C0BA  F0B5         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12406  011C80  C0BB  F0B6         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12407  011C84  0012               	return	
 12408  011C86                     __end_of_USBTransferOnePacket:
 12409                           	opt stack 0
 12410                           tblptru	equ	0xFF8
 12411                           tblptrh	equ	0xFF7
 12412                           tblptrl	equ	0xFF6
 12413                           tablat	equ	0xFF5
 12414                           prodh	equ	0xFF4
 12415                           prodl	equ	0xFF3
 12416                           intcon	equ	0xFF2
 12417                           intcon2	equ	0xFF1
 12418                           indf0	equ	0xFEF
 12419                           postinc0	equ	0xFEE
 12420                           fsr0h	equ	0xFEA
 12421                           fsr0l	equ	0xFE9
 12422                           wreg	equ	0xFE8
 12423                           indf1	equ	0xFE7
 12424                           postinc1	equ	0xFE6
 12425                           postdec1	equ	0xFE5
 12426                           fsr1h	equ	0xFE2
 12427                           fsr1l	equ	0xFE1
 12428                           indf2	equ	0xFDF
 12429                           postinc2	equ	0xFDE
 12430                           postdec2	equ	0xFDD
 12431                           plusw2	equ	0xFDB
 12432                           fsr2h	equ	0xFDA
 12433                           fsr2l	equ	0xFD9
 12434                           status	equ	0xFD8
 12435                           
 12436 ;; *************** function _USBEnableEndpoint *****************
 12437 ;; Defined at:
 12438 ;;		line 878 in file "../My_library/usb/usb_device.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;  ep              1    wreg     unsigned char 
 12441 ;;  options         1    7[BANK0 ] unsigned char 
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  ep              1   10[BANK0 ] unsigned char 
 12444 ;;  p               2    8[BANK0 ] PTR unsigned char 
 12445 ;;		 -> UEP0(1), 
 12446 ;; Return value:  Size  Location     Type
 12447 ;;		None               void
 12448 ;; Registers used:
 12449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12455 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12456 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12458 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12459 ;;Total ram usage:        4 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:    5
 12462 ;; This function calls:
 12463 ;;		_USBConfigureEndpoint
 12464 ;; This function is called by:
 12465 ;;		_CDCInitEP
 12466 ;; This function uses a non-reentrant model
 12467 ;;
 12468                           
 12469                           	psect	text57
 12470  013244                     __ptext57:
 12471                           	opt stack 0
 12472  013244                     _USBEnableEndpoint:
 12473                           	opt stack 21
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;incstack = 0
 12477                           ;USBEnableEndpoint@ep stored from wreg
 12478  013244  0100               	movlb	0	; () banked
 12479  013246  6FBF               	movwf	USBEnableEndpoint@ep& (0+255),b
 12480                           
 12481                           ;usb_device.c: 880: unsigned char* p;
 12482                           ;usb_device.c: 884: if(options & 0x04)
 12483  013248  0100               	movlb	0	; () banked
 12484  01324A  A5BC               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12485  01324C  D006               	goto	l7828
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;usb_device.c: 885: {
 12489                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 12490  01324E  0E00               	movlw	0
 12491  013250  6E20               	movwf	USBConfigureEndpoint@direction,c
 12492  013252  0100               	movlb	0	; () banked
 12493  013254  51BF               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12494  013256  EC21  F091         	call	_USBConfigureEndpoint
 12495  01325A                     l7828:
 12496                           
 12497                           ;usb_device.c: 887: }
 12498                           ;usb_device.c: 888: if(options & 0x02)
 12499  01325A  0100               	movlb	0	; () banked
 12500  01325C  A3BC               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12501  01325E  D006               	goto	l7832
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;usb_device.c: 889: {
 12505                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 12506  013260  0E01               	movlw	1
 12507  013262  6E20               	movwf	USBConfigureEndpoint@direction,c
 12508  013264  0100               	movlb	0	; () banked
 12509  013266  51BF               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12510  013268  EC21  F091         	call	_USBConfigureEndpoint
 12511  01326C                     l7832:
 12512                           
 12513                           ;usb_device.c: 891: }
 12514                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 12515  01326C  0100               	movlb	0	; () banked
 12516  01326E  51BF               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12517  013270  0D01               	mullw	1
 12518  013272  0E26               	movlw	38
 12519  013274  24F3               	addwf	prodl,w,c
 12520  013276  0100               	movlb	0	; () banked
 12521  013278  6FBD               	movwf	USBEnableEndpoint@p& (0+255),b
 12522  01327A  0E0F               	movlw	15
 12523  01327C  20F4               	addwfc	prodh,w,c
 12524  01327E  0100               	movlb	0	; () banked
 12525  013280  6FBE               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;usb_device.c: 901: *p = options;
 12529  013282  C0BD  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12530  013286  C0BE  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12531  01328A  C0BC  FFDF         	movff	USBEnableEndpoint@options,indf2
 12532                           
 12533                           ; BSR set to: 0
 12534  01328E  0012               	return		;funcret
 12535  013290                     __end_of_USBEnableEndpoint:
 12536                           	opt stack 0
 12537                           tblptru	equ	0xFF8
 12538                           tblptrh	equ	0xFF7
 12539                           tblptrl	equ	0xFF6
 12540                           tablat	equ	0xFF5
 12541                           prodh	equ	0xFF4
 12542                           prodl	equ	0xFF3
 12543                           intcon	equ	0xFF2
 12544                           intcon2	equ	0xFF1
 12545                           indf0	equ	0xFEF
 12546                           postinc0	equ	0xFEE
 12547                           fsr0h	equ	0xFEA
 12548                           fsr0l	equ	0xFE9
 12549                           wreg	equ	0xFE8
 12550                           indf1	equ	0xFE7
 12551                           postinc1	equ	0xFE6
 12552                           postdec1	equ	0xFE5
 12553                           fsr1h	equ	0xFE2
 12554                           fsr1l	equ	0xFE1
 12555                           indf2	equ	0xFDF
 12556                           postinc2	equ	0xFDE
 12557                           postdec2	equ	0xFDD
 12558                           plusw2	equ	0xFDB
 12559                           fsr2h	equ	0xFDA
 12560                           fsr2l	equ	0xFD9
 12561                           status	equ	0xFD8
 12562                           
 12563 ;; *************** function _USBConfigureEndpoint *****************
 12564 ;; Defined at:
 12565 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;  EPNum           1    wreg     unsigned char 
 12568 ;;  direction       1   31[COMRAM] unsigned char 
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;  EPNum           1    4[BANK0 ] unsigned char 
 12571 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12572 ;;		 -> BDT(48), 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;		None               void
 12575 ;; Registers used:
 12576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12582 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12583 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12585 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12586 ;;Total ram usage:        8 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    4
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_USBEnableEndpoint
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text58
 12597  012242                     __ptext58:
 12598                           	opt stack 0
 12599  012242                     _USBConfigureEndpoint:
 12600                           	opt stack 21
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;incstack = 0
 12604                           ;USBConfigureEndpoint@EPNum stored from wreg
 12605  012242  0100               	movlb	0	; () banked
 12606  012244  6FB9               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12607                           
 12608                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 12609                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 12610  012246  0E00               	movlw	0
 12611  012248  0100               	movlb	0	; () banked
 12612  01224A  6FBA               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12613  01224C  0E0D               	movlw	13
 12614  01224E  0100               	movlb	0	; () banked
 12615  012250  6FBB               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 12619  012252  5020               	movf	USBConfigureEndpoint@direction,w,c
 12620  012254  0100               	movlb	0	; () banked
 12621  012256  6FB5               	movwf	??_USBConfigureEndpoint& (0+255),b
 12622  012258  6BB6               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12623  01225A  90D8               	bcf	status,0,c
 12624  01225C  0100               	movlb	0	; () banked
 12625  01225E  37B5               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12626  012260  37B6               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12627  012262  0100               	movlb	0	; () banked
 12628  012264  51B9               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12629  012266  0100               	movlb	0	; () banked
 12630  012268  6FB7               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12631  01226A  6BB8               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12632  01226C  0100               	movlb	0	; () banked
 12633  01226E  90D8               	bcf	status,0,c
 12634  012270  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12635  012272  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12636  012274  0100               	movlb	0	; () banked
 12637  012276  90D8               	bcf	status,0,c
 12638  012278  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12639  01227A  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12640  01227C  0100               	movlb	0	; () banked
 12641  01227E  51B5               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12642  012280  0100               	movlb	0	; () banked
 12643  012282  27B7               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12644  012284  0100               	movlb	0	; () banked
 12645  012286  51B6               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12646  012288  0100               	movlb	0	; () banked
 12647  01228A  23B8               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12648  01228C  0100               	movlb	0	; () banked
 12649  01228E  90D8               	bcf	status,0,c
 12650  012290  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12651  012292  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12652  012294  0100               	movlb	0	; () banked
 12653  012296  90D8               	bcf	status,0,c
 12654  012298  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12655  01229A  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12656  01229C  0100               	movlb	0	; () banked
 12657  01229E  51B7               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12658  0122A0  0100               	movlb	0	; () banked
 12659  0122A2  27BA               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12660  0122A4  0100               	movlb	0	; () banked
 12661  0122A6  51B8               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12662  0122A8  0100               	movlb	0	; () banked
 12663  0122AA  23BB               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 12667  0122AC  C0BA  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12668  0122B0  C0BB  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12669  0122B4  0100               	movlb	0	; () banked
 12670  0122B6  9EDF               	bcf	indf2,7,c
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;usb_device.c: 1557: if(direction == 0)
 12674  0122B8  5020               	movf	USBConfigureEndpoint@direction,w,c
 12675  0122BA  A4D8               	btfss	status,2,c
 12676  0122BC  D008               	goto	l7818
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;usb_device.c: 1558: {
 12680                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 12681  0122BE  0100               	movlb	0	; () banked
 12682  0122C0  51B9               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12683  0122C2  0D02               	mullw	2
 12684  0122C4  0E69               	movlw	low _pBDTEntryOut
 12685  0122C6  24F3               	addwf	prodl,w,c
 12686  0122C8  6ED9               	movwf	fsr2l,c
 12687  0122CA  0E00               	movlw	high _pBDTEntryOut
 12688  0122CC  D007               	goto	L11
 12689  0122CE                     l7818:
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;usb_device.c: 1561: else
 12693                           ;usb_device.c: 1562: {
 12694                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 12695  0122CE  0100               	movlb	0	; () banked
 12696  0122D0  51B9               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12697  0122D2  0D02               	mullw	2
 12698  0122D4  0E27               	movlw	low _pBDTEntryIn
 12699  0122D6  24F3               	addwf	prodl,w,c
 12700  0122D8  6ED9               	movwf	fsr2l,c
 12701  0122DA  0E00               	movlw	high _pBDTEntryIn
 12702  0122DC                     L11:
 12703  0122DC  20F4               	addwfc	prodh,w,c
 12704  0122DE  6EDA               	movwf	fsr2h,c
 12705  0122E0  C0BA  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12706  0122E4  C0BB  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;usb_device.c: 1564: }
 12710                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 12711                           
 12712                           ; BSR set to: 0
 12713  0122E8  C0BA  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12714  0122EC  C0BB  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12715  0122F0  0100               	movlb	0	; () banked
 12716  0122F2  9CDF               	bcf	indf2,6,c
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 12720  0122F4  0100               	movlb	0	; () banked
 12721  0122F6  EE20 F004          	lfsr	2,4
 12722  0122FA  51BA               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12723  0122FC  26D9               	addwf	fsr2l,f,c
 12724  0122FE  51BB               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12725  012300  22DA               	addwfc	fsr2h,f,c
 12726  012302  0100               	movlb	0	; () banked
 12727  012304  8CDF               	bsf	indf2,6,c
 12728                           
 12729                           ; BSR set to: 0
 12730  012306  0012               	return		;funcret
 12731  012308                     __end_of_USBConfigureEndpoint:
 12732                           	opt stack 0
 12733                           tblptru	equ	0xFF8
 12734                           tblptrh	equ	0xFF7
 12735                           tblptrl	equ	0xFF6
 12736                           tablat	equ	0xFF5
 12737                           prodh	equ	0xFF4
 12738                           prodl	equ	0xFF3
 12739                           intcon	equ	0xFF2
 12740                           intcon2	equ	0xFF1
 12741                           indf0	equ	0xFEF
 12742                           postinc0	equ	0xFEE
 12743                           fsr0h	equ	0xFEA
 12744                           fsr0l	equ	0xFE9
 12745                           wreg	equ	0xFE8
 12746                           indf1	equ	0xFE7
 12747                           postinc1	equ	0xFE6
 12748                           postdec1	equ	0xFE5
 12749                           fsr1h	equ	0xFE2
 12750                           fsr1l	equ	0xFE1
 12751                           indf2	equ	0xFDF
 12752                           postinc2	equ	0xFDE
 12753                           postdec2	equ	0xFDD
 12754                           plusw2	equ	0xFDB
 12755                           fsr2h	equ	0xFDA
 12756                           fsr2l	equ	0xFD9
 12757                           status	equ	0xFD8
 12758                           
 12759 ;; *************** function _USBCtrlTrfOutHandler *****************
 12760 ;; Defined at:
 12761 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;		None
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;		None
 12766 ;; Return value:  Size  Location     Type
 12767 ;;		None               void
 12768 ;; Registers used:
 12769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12779 ;;Total ram usage:        0 bytes
 12780 ;; Hardware stack levels used:    1
 12781 ;; Hardware stack levels required when called:    6
 12782 ;; This function calls:
 12783 ;;		_USBCtrlTrfRxService
 12784 ;; This function is called by:
 12785 ;;		_USBCtrlEPService
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           	psect	text59
 12790  0130E6                     __ptext59:
 12791                           	opt stack 0
 12792  0130E6                     _USBCtrlTrfOutHandler:
 12793                           	opt stack 21
 12794                           
 12795                           ;usb_device.c: 2543: if(controlTransferState == 2)
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;incstack = 0
 12799  0130E6  0E02               	movlw	2
 12800  0130E8  183B               	xorwf	_controlTransferState,w,c
 12801  0130EA  A4D8               	btfss	status,2,c
 12802  0130EC  D003               	goto	l8552
 12803                           
 12804                           ;usb_device.c: 2544: {
 12805                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 12806  0130EE  EC80  F08A         	call	_USBCtrlTrfRxService	;wreg free
 12807                           
 12808                           ;usb_device.c: 2546: }
 12809  0130F2  0012               	return	
 12810  0130F4                     l8552:
 12811                           
 12812                           ;usb_device.c: 2547: else
 12813                           ;usb_device.c: 2548: {
 12814                           ;usb_device.c: 2551: controlTransferState = 0;
 12815  0130F4  0E00               	movlw	0
 12816  0130F6  6E3B               	movwf	_controlTransferState,c
 12817                           
 12818                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 12819  0130F8  0100               	movlb	0	; () banked
 12820  0130FA  5187               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12821  0130FC  A4D8               	btfss	status,2,c
 12822  0130FE  D01F               	goto	l8560
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;usb_device.c: 2559: {
 12826                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 12827  013100  EE20 F001          	lfsr	2,1
 12828  013104  5031               	movf	_pBDTEntryEP0OutNext,w,c
 12829  013106  26D9               	addwf	fsr2l,f,c
 12830  013108  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 12831  01310A  22DA               	addwfc	fsr2h,f,c
 12832  01310C  0E08               	movlw	8
 12833  01310E  6EDF               	movwf	indf2,c
 12834                           
 12835                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12836  013110  EE20 F002          	lfsr	2,2
 12837  013114  5031               	movf	_pBDTEntryEP0OutNext,w,c
 12838  013116  26D9               	addwf	fsr2l,f,c
 12839  013118  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 12840  01311A  22DA               	addwfc	fsr2h,f,c
 12841  01311C  0E30               	movlw	48
 12842  01311E  6EDE               	movwf	postinc2,c
 12843  013120  0E0D               	movlw	13
 12844  013122  6EDD               	movwf	postdec2,c
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12848  013124  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12849  013128  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12850  01312C  0E0C               	movlw	12
 12851  01312E  6EDF               	movwf	indf2,c
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12855  013130  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12856  013134  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12857  013138  0E00               	movlw	0
 12858  01313A  8EDB               	bsf	plusw2,7,c
 12859                           
 12860                           ;usb_device.c: 2564: }
 12861  01313C  0012               	return	
 12862  01313E                     l8560:
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;usb_device.c: 2565: else
 12866                           ;usb_device.c: 2566: {
 12867                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 12868  01313E  0E00               	movlw	0
 12869  013140  0100               	movlb	0	; () banked
 12870  013142  6F87               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12871                           
 12872                           ; BSR set to: 0
 12873  013144  0012               	return	
 12874  013146                     __end_of_USBCtrlTrfOutHandler:
 12875                           	opt stack 0
 12876                           tblptru	equ	0xFF8
 12877                           tblptrh	equ	0xFF7
 12878                           tblptrl	equ	0xFF6
 12879                           tablat	equ	0xFF5
 12880                           prodh	equ	0xFF4
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           intcon2	equ	0xFF1
 12884                           indf0	equ	0xFEF
 12885                           postinc0	equ	0xFEE
 12886                           fsr0h	equ	0xFEA
 12887                           fsr0l	equ	0xFE9
 12888                           wreg	equ	0xFE8
 12889                           indf1	equ	0xFE7
 12890                           postinc1	equ	0xFE6
 12891                           postdec1	equ	0xFE5
 12892                           fsr1h	equ	0xFE2
 12893                           fsr1l	equ	0xFE1
 12894                           indf2	equ	0xFDF
 12895                           postinc2	equ	0xFDE
 12896                           postdec2	equ	0xFDD
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _USBCtrlTrfRxService *****************
 12903 ;; Defined at:
 12904 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;  byteToRead      1    1[BANK0 ] unsigned char 
 12909 ;;  i               1    0[BANK0 ] unsigned char 
 12910 ;; Return value:  Size  Location     Type
 12911 ;;		None               void
 12912 ;; Registers used:
 12913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12914 ;; Tracked objects:
 12915 ;;		On entry : 0/0
 12916 ;;		On exit  : 0/0
 12917 ;;		Unchanged: 0/0
 12918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12923 ;;Total ram usage:        2 bytes
 12924 ;; Hardware stack levels used:    1
 12925 ;; Hardware stack levels required when called:    5
 12926 ;; This function calls:
 12927 ;;		_USBCtrlEPAllowStatusStage
 12928 ;; This function is called by:
 12929 ;;		_USBCtrlTrfOutHandler
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text60
 12934  011500                     __ptext60:
 12935                           	opt stack 0
 12936  011500                     _USBCtrlTrfRxService:
 12937                           	opt stack 21
 12938                           
 12939                           ;usb_device.c: 1854: uint8_t byteToRead;
 12940                           ;usb_device.c: 1855: uint8_t i;
 12941                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12942                           
 12943                           ;incstack = 0
 12944  011500  EE20 F001          	lfsr	2,1
 12945  011504  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 12946  011506  26D9               	addwf	fsr2l,f,c
 12947  011508  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12948  01150A  22DA               	addwfc	fsr2h,f,c
 12949  01150C  50DF               	movf	indf2,w,c
 12950  01150E  0100               	movlb	0	; () banked
 12951  011510  6FB6               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 12955  011512  0100               	movlb	0	; () banked
 12956  011514  51B6               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12957  011516  0100               	movlb	0	; () banked
 12958  011518  5D64               	subwf	(_outPipes+4)& (0+255),w,b
 12959  01151A  0E00               	movlw	0
 12960  01151C  5965               	subwfb	(_outPipes+5)& (0+255),w,b
 12961  01151E  A0D8               	btfss	status,0,c
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;usb_device.c: 1866: {
 12965                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 12966  011520  C064  F0B6         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;usb_device.c: 1868: }
 12970                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 12971                           
 12972                           ; BSR set to: 0
 12973  011524  0100               	movlb	0	; () banked
 12974  011526  51B6               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12975  011528  0100               	movlb	0	; () banked
 12976  01152A  5F64               	subwf	(_outPipes+4)& (0+255),f,b
 12977  01152C  0E00               	movlw	0
 12978  01152E  5B65               	subwfb	(_outPipes+5)& (0+255),f,b
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 12982  011530  0E00               	movlw	0
 12983  011532  0100               	movlb	0	; () banked
 12984  011534  6FB5               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12985  011536  D014               	goto	l8404
 12986  011538                     l8398:
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;usb_device.c: 1875: {
 12990                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12991  011538  0100               	movlb	0	; () banked
 12992  01153A  51B5               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12993  01153C  0D01               	mullw	1
 12994  01153E  0E38               	movlw	56
 12995  011540  24F3               	addwf	prodl,w,c
 12996  011542  6ED9               	movwf	fsr2l,c
 12997  011544  0E0D               	movlw	13
 12998  011546  20F4               	addwfc	prodh,w,c
 12999  011548  6EDA               	movwf	fsr2h,c
 13000  01154A  C060  FFE1         	movff	_outPipes,fsr1l
 13001  01154E  C061  FFE2         	movff	_outPipes+1,fsr1h
 13002  011552  CFDF FFE7          	movff	indf2,indf1
 13003                           
 13004                           ; BSR set to: 0
 13005  011556  0100               	movlb	0	; () banked
 13006  011558  4B60               	infsnz	_outPipes& (0+255),f,b
 13007  01155A  2B61               	incf	(_outPipes+1)& (0+255),f,b
 13008                           
 13009                           ; BSR set to: 0
 13010  01155C  0100               	movlb	0	; () banked
 13011  01155E  2BB5               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 13012  011560                     l8404:
 13013                           
 13014                           ; BSR set to: 0
 13015  011560  0100               	movlb	0	; () banked
 13016  011562  51B6               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 13017  011564  0100               	movlb	0	; () banked
 13018  011566  5DB5               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 13019  011568  A0D8               	btfss	status,0,c
 13020  01156A  D7E6               	goto	l8398
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;usb_device.c: 1877: }
 13024                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 13025                           
 13026                           ; BSR set to: 0
 13027  01156C  0100               	movlb	0	; () banked
 13028  01156E  5164               	movf	(_outPipes+4)& (0+255),w,b
 13029  011570  0100               	movlb	0	; () banked
 13030  011572  1165               	iorwf	(_outPipes+5)& (0+255),w,b
 13031  011574  B4D8               	btfsc	status,2,c
 13032  011576  D032               	goto	l8420
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;usb_device.c: 1882: {
 13036                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 13037  011578  EE20 F001          	lfsr	2,1
 13038  01157C  5031               	movf	_pBDTEntryEP0OutNext,w,c
 13039  01157E  26D9               	addwf	fsr2l,f,c
 13040  011580  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 13041  011582  22DA               	addwfc	fsr2h,f,c
 13042  011584  0E08               	movlw	8
 13043  011586  6EDF               	movwf	indf2,c
 13044                           
 13045                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13046  011588  EE20 F002          	lfsr	2,2
 13047  01158C  5031               	movf	_pBDTEntryEP0OutNext,w,c
 13048  01158E  26D9               	addwf	fsr2l,f,c
 13049  011590  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 13050  011592  22DA               	addwfc	fsr2h,f,c
 13051  011594  0E38               	movlw	56
 13052  011596  6EDE               	movwf	postinc2,c
 13053  011598  0E0D               	movlw	13
 13054  01159A  6EDD               	movwf	postdec2,c
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13058  01159C  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13059  0115A0  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13060  0115A4  BCDF               	btfsc	indf2,6,c
 13061  0115A6  D00D               	goto	l8416
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;usb_device.c: 1886: {
 13065                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13066  0115A8  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13067  0115AC  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13068  0115B0  0E48               	movlw	72
 13069  0115B2  6EDF               	movwf	indf2,c
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13073  0115B4  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13074  0115B8  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13075  0115BC  0E00               	movlw	0
 13076  0115BE  8EDB               	bsf	plusw2,7,c
 13077                           
 13078                           ;usb_device.c: 1889: }
 13079  0115C0  0012               	return	
 13080  0115C2                     l8416:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 1890: else
 13084                           ;usb_device.c: 1891: {
 13085                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13086  0115C2  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13087  0115C6  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13088  0115CA  0E08               	movlw	8
 13089  0115CC  6EDF               	movwf	indf2,c
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13093  0115CE  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13094  0115D2  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13095  0115D6  0E00               	movlw	0
 13096  0115D8  8EDB               	bsf	plusw2,7,c
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;usb_device.c: 1894: }
 13100                           ;usb_device.c: 1895: }
 13101  0115DA  0012               	return	
 13102  0115DC                     l8420:
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;usb_device.c: 1896: else
 13106                           ;usb_device.c: 1897: {
 13107                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 13108  0115DC  EE20 F001          	lfsr	2,1
 13109  0115E0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 13110  0115E2  26D9               	addwf	fsr2l,f,c
 13111  0115E4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 13112  0115E6  22DA               	addwfc	fsr2h,f,c
 13113  0115E8  0E08               	movlw	8
 13114  0115EA  6EDF               	movwf	indf2,c
 13115                           
 13116                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13117  0115EC  EE20 F002          	lfsr	2,2
 13118  0115F0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 13119  0115F2  26D9               	addwf	fsr2l,f,c
 13120  0115F4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 13121  0115F6  22DA               	addwfc	fsr2h,f,c
 13122  0115F8  0E30               	movlw	48
 13123  0115FA  6EDE               	movwf	postinc2,c
 13124  0115FC  0E0D               	movlw	13
 13125  0115FE  6EDD               	movwf	postdec2,c
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13129  011600  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13130  011604  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13131  011608  0E04               	movlw	4
 13132  01160A  6EDF               	movwf	indf2,c
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13136  01160C  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13137  011610  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13138  011614  0E00               	movlw	0
 13139  011616  8EDB               	bsf	plusw2,7,c
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;usb_device.c: 1926: }
 13143                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 13144                           
 13145                           ; BSR set to: 0
 13146  011618  0100               	movlb	0	; () banked
 13147  01161A  9F63               	bcf	(_outPipes+3)& (0+255),7,b
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 13151  01161C  5033               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13152  01161E  A4D8               	btfss	status,2,c
 13153  011620  0012               	return	
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;usb_device.c: 1942: {
 13157                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 13158  011622  EC84  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13159  011626  0012               	return	
 13160  011628                     __end_of_USBCtrlTrfRxService:
 13161                           	opt stack 0
 13162                           tblptru	equ	0xFF8
 13163                           tblptrh	equ	0xFF7
 13164                           tblptrl	equ	0xFF6
 13165                           tablat	equ	0xFF5
 13166                           prodh	equ	0xFF4
 13167                           prodl	equ	0xFF3
 13168                           intcon	equ	0xFF2
 13169                           intcon2	equ	0xFF1
 13170                           indf0	equ	0xFEF
 13171                           postinc0	equ	0xFEE
 13172                           fsr0h	equ	0xFEA
 13173                           fsr0l	equ	0xFE9
 13174                           wreg	equ	0xFE8
 13175                           indf1	equ	0xFE7
 13176                           postinc1	equ	0xFE6
 13177                           postdec1	equ	0xFE5
 13178                           fsr1h	equ	0xFE2
 13179                           fsr1l	equ	0xFE1
 13180                           indf2	equ	0xFDF
 13181                           postinc2	equ	0xFDE
 13182                           postdec2	equ	0xFDD
 13183                           plusw2	equ	0xFDB
 13184                           fsr2h	equ	0xFDA
 13185                           fsr2l	equ	0xFD9
 13186                           status	equ	0xFD8
 13187                           
 13188 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 13189 ;; Defined at:
 13190 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;		None
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;		None
 13195 ;; Return value:  Size  Location     Type
 13196 ;;		None               void
 13197 ;; Registers used:
 13198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13208 ;;Total ram usage:        0 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; Hardware stack levels required when called:    4
 13211 ;; This function calls:
 13212 ;;		Nothing
 13213 ;; This function is called by:
 13214 ;;		_USBDeviceTasks
 13215 ;;		_USBCtrlEPServiceComplete
 13216 ;;		_USBCtrlTrfRxService
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text61
 13221  012308                     __ptext61:
 13222                           	opt stack 0
 13223  012308                     _USBCtrlEPAllowStatusStage:
 13224                           	opt stack 21
 13225                           
 13226                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 13227                           
 13228                           ;incstack = 0
 13229  012308  5035               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 13230  01230A  A4D8               	btfss	status,2,c
 13231  01230C  0012               	return	
 13232                           
 13233                           ;usb_device.c: 1424: {
 13234                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 13235  01230E  0E01               	movlw	1
 13236  012310  6E35               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13237                           
 13238                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 13239  012312  5036               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 13240  012314  A4D8               	btfss	status,2,c
 13241  012316  0012               	return	
 13242                           
 13243                           ;usb_device.c: 1427: {
 13244                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 13245  012318  0E01               	movlw	1
 13246  01231A  6E36               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13247                           
 13248                           ;usb_device.c: 1432: if(controlTransferState == 2)
 13249  01231C  0E02               	movlw	2
 13250  01231E  183B               	xorwf	_controlTransferState,w,c
 13251  012320  A4D8               	btfss	status,2,c
 13252  012322  D015               	goto	l7998
 13253                           
 13254                           ;usb_device.c: 1433: {
 13255                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 13256  012324  EE20 F001          	lfsr	2,1
 13257  012328  5027               	movf	_pBDTEntryIn,w,c
 13258  01232A  26D9               	addwf	fsr2l,f,c
 13259  01232C  5028               	movf	_pBDTEntryIn+1,w,c
 13260  01232E  22DA               	addwfc	fsr2h,f,c
 13261  012330  0E00               	movlw	0
 13262  012332  6EDF               	movwf	indf2,c
 13263                           
 13264                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13265  012334  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13266  012338  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13267  01233C  0E48               	movlw	72
 13268  01233E  6EDF               	movwf	indf2,c
 13269                           
 13270                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13271  012340  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13272  012344  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13273  012348  0E00               	movlw	0
 13274  01234A  8EDB               	bsf	plusw2,7,c
 13275                           
 13276                           ;usb_device.c: 1437: }
 13277  01234C  0012               	return	
 13278  01234E                     l7998:
 13279                           
 13280                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 13281  01234E  043B               	decf	_controlTransferState,w,c
 13282  012350  A4D8               	btfss	status,2,c
 13283  012352  0012               	return	
 13284                           
 13285                           ;usb_device.c: 1439: {
 13286                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 13287  012354  0E00               	movlw	0
 13288  012356  0100               	movlb	0	; () banked
 13289  012358  6F87               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 13293  01235A  EE20 F001          	lfsr	2,1
 13294  01235E  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 13295  012360  26D9               	addwf	fsr2l,f,c
 13296  012362  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 13297  012364  22DA               	addwfc	fsr2h,f,c
 13298  012366  0E08               	movlw	8
 13299  012368  6EDF               	movwf	indf2,c
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13303  01236A  EE20 F002          	lfsr	2,2
 13304  01236E  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 13305  012370  26D9               	addwf	fsr2l,f,c
 13306  012372  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 13307  012374  22DA               	addwfc	fsr2h,f,c
 13308  012376  0E30               	movlw	48
 13309  012378  6EDE               	movwf	postinc2,c
 13310  01237A  0E0D               	movlw	13
 13311  01237C  6EDD               	movwf	postdec2,c
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13315  01237E  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13316  012382  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13317  012386  0E04               	movlw	4
 13318  012388  6EDF               	movwf	indf2,c
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13322  01238A  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13323  01238E  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13324  012392  0E00               	movlw	0
 13325  012394  8EDB               	bsf	plusw2,7,c
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 13329  012396  0E01               	movlw	1
 13330  012398  0100               	movlb	0	; () banked
 13331  01239A  6F87               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 13335  01239C  EE20 F001          	lfsr	2,1
 13336  0123A0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 13337  0123A2  26D9               	addwf	fsr2l,f,c
 13338  0123A4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 13339  0123A6  22DA               	addwfc	fsr2h,f,c
 13340  0123A8  0E08               	movlw	8
 13341  0123AA  6EDF               	movwf	indf2,c
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13345  0123AC  EE20 F002          	lfsr	2,2
 13346  0123B0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 13347  0123B2  26D9               	addwf	fsr2l,f,c
 13348  0123B4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 13349  0123B6  22DA               	addwfc	fsr2h,f,c
 13350  0123B8  0E30               	movlw	48
 13351  0123BA  6EDE               	movwf	postinc2,c
 13352  0123BC  0E0D               	movlw	13
 13353  0123BE  6EDD               	movwf	postdec2,c
 13354                           
 13355                           ; BSR set to: 0
 13356                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13357  0123C0  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13358  0123C4  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13359  0123C8  0E80               	movlw	128
 13360  0123CA  6EDF               	movwf	indf2,c
 13361                           
 13362                           ; BSR set to: 0
 13363                           
 13364                           ; BSR set to: 0
 13365                           
 13366                           ; BSR set to: 0
 13367  0123CC  0012               	return	
 13368  0123CE                     __end_of_USBCtrlEPAllowStatusStage:
 13369                           	opt stack 0
 13370                           tblptru	equ	0xFF8
 13371                           tblptrh	equ	0xFF7
 13372                           tblptrl	equ	0xFF6
 13373                           tablat	equ	0xFF5
 13374                           prodh	equ	0xFF4
 13375                           prodl	equ	0xFF3
 13376                           intcon	equ	0xFF2
 13377                           intcon2	equ	0xFF1
 13378                           indf0	equ	0xFEF
 13379                           postinc0	equ	0xFEE
 13380                           fsr0h	equ	0xFEA
 13381                           fsr0l	equ	0xFE9
 13382                           wreg	equ	0xFE8
 13383                           indf1	equ	0xFE7
 13384                           postinc1	equ	0xFE6
 13385                           postdec1	equ	0xFE5
 13386                           fsr1h	equ	0xFE2
 13387                           fsr1l	equ	0xFE1
 13388                           indf2	equ	0xFDF
 13389                           postinc2	equ	0xFDE
 13390                           postdec2	equ	0xFDD
 13391                           plusw2	equ	0xFDB
 13392                           fsr2h	equ	0xFDA
 13393                           fsr2l	equ	0xFD9
 13394                           status	equ	0xFD8
 13395                           
 13396 ;; *************** function _USBCtrlTrfInHandler *****************
 13397 ;; Defined at:
 13398 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;		None
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;  lastDTS         1    0[BANK0 ] unsigned char 
 13403 ;; Return value:  Size  Location     Type
 13404 ;;		None               void
 13405 ;; Registers used:
 13406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13416 ;;Total ram usage:        1 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; Hardware stack levels required when called:    5
 13419 ;; This function calls:
 13420 ;;		_USBCtrlTrfTxService
 13421 ;; This function is called by:
 13422 ;;		_USBCtrlEPService
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           	psect	text62
 13427  0123CE                     __ptext62:
 13428                           	opt stack 0
 13429  0123CE                     _USBCtrlTrfInHandler:
 13430                           	opt stack 22
 13431                           
 13432                           ;usb_device.c: 2597: uint8_t lastDTS;
 13433                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13434                           
 13435                           ;incstack = 0
 13436  0123CE  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13437  0123D2  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13438  0123D6  0E00               	movlw	0
 13439  0123D8  BCDF               	btfsc	indf2,6,c
 13440  0123DA  0E01               	movlw	1
 13441  0123DC  0100               	movlb	0	; () banked
 13442  0123DE  6FB5               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13446  0123E0  0E04               	movlw	4
 13447  0123E2  1A27               	xorwf	_pBDTEntryIn,f,c
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 13451  0123E4  0E08               	movlw	8
 13452  0123E6  1834               	xorwf	_USBDeviceState,w,c
 13453  0123E8  A4D8               	btfss	status,2,c
 13454  0123EA  D00D               	goto	l8576
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;usb_device.c: 2608: {
 13458                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 13459  0123EC  010D               	movlb	13	; () banked
 13460  0123EE  5132               	movf	50,w,b	;volatile
 13461  0123F0  0B7F               	andlw	127
 13462  0123F2  010F               	movlb	15	; () banked
 13463  0123F4  6F38               	movwf	56,b	;volatile
 13464                           
 13465                           ; BSR set to: 15
 13466                           ;usb_device.c: 2610: if(UADDR != 0u)
 13467  0123F6  010F               	movlb	15	; () banked
 13468  0123F8  5138               	movf	56,w,b	;volatile
 13469  0123FA  B4D8               	btfsc	status,2,c
 13470  0123FC  D002               	goto	l8574
 13471                           
 13472                           ; BSR set to: 15
 13473                           ;usb_device.c: 2611: {
 13474                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 13475  0123FE  0E10               	movlw	16
 13476  012400  D001               	goto	L12
 13477  012402                     l8574:
 13478                           
 13479                           ; BSR set to: 15
 13480                           ;usb_device.c: 2614: else
 13481                           ;usb_device.c: 2615: {
 13482                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 13483  012402  0E04               	movlw	4
 13484  012404                     L12:
 13485  012404  6E34               	movwf	_USBDeviceState,c
 13486  012406                     l8576:
 13487                           
 13488                           ;usb_device.c: 2617: }
 13489                           ;usb_device.c: 2618: }
 13490                           ;usb_device.c: 2621: if(controlTransferState == 1)
 13491  012406  043B               	decf	_controlTransferState,w,c
 13492  012408  A4D8               	btfss	status,2,c
 13493  01240A  D03C               	goto	l333
 13494                           
 13495                           ;usb_device.c: 2622: {
 13496                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13497  01240C  EE20 F002          	lfsr	2,2
 13498  012410  5027               	movf	_pBDTEntryIn,w,c
 13499  012412  26D9               	addwf	fsr2l,f,c
 13500  012414  5028               	movf	_pBDTEntryIn+1,w,c
 13501  012416  22DA               	addwfc	fsr2h,f,c
 13502  012418  0E38               	movlw	56
 13503  01241A  6EDE               	movwf	postinc2,c
 13504  01241C  0E0D               	movlw	13
 13505  01241E  6EDD               	movwf	postdec2,c
 13506                           
 13507                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 13508  012420  ECEE  F08F         	call	_USBCtrlTrfTxService	;wreg free
 13509                           
 13510                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 13511  012424  0E02               	movlw	2
 13512  012426  183D               	xorwf	_shortPacketStatus,w,c
 13513  012428  A4D8               	btfss	status,2,c
 13514  01242A  D00D               	goto	l8588
 13515                           
 13516                           ;usb_device.c: 2631: {
 13517                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 13518  01242C  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13519  012430  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13520  012434  0E04               	movlw	4
 13521  012436  6EDF               	movwf	indf2,c
 13522                           
 13523                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13524  012438  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13525  01243C  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13526  012440  0E00               	movlw	0
 13527  012442  8EDB               	bsf	plusw2,7,c
 13528                           
 13529                           ;usb_device.c: 2636: }
 13530  012444  0012               	return	
 13531  012446                     l8588:
 13532                           
 13533                           ;usb_device.c: 2637: else
 13534                           ;usb_device.c: 2638: {
 13535                           ;usb_device.c: 2639: if(lastDTS == 0)
 13536  012446  0100               	movlb	0	; () banked
 13537  012448  51B5               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13538  01244A  0100               	movlb	0	; () banked
 13539  01244C  A4D8               	btfss	status,2,c
 13540  01244E  D00D               	goto	l8594
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;usb_device.c: 2640: {
 13544                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13545  012450  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13546  012454  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13547  012458  0E48               	movlw	72
 13548  01245A  6EDF               	movwf	indf2,c
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13552  01245C  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13553  012460  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13554  012464  0E00               	movlw	0
 13555  012466  8EDB               	bsf	plusw2,7,c
 13556                           
 13557                           ;usb_device.c: 2643: }
 13558  012468  0012               	return	
 13559  01246A                     l8594:
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;usb_device.c: 2644: else
 13563                           ;usb_device.c: 2645: {
 13564                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13565  01246A  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13566  01246E  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13567  012472  0E08               	movlw	8
 13568  012474  6EDF               	movwf	indf2,c
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13572  012476  C027  FFD9         	movff	_pBDTEntryIn,fsr2l
 13573  01247A  C028  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13574  01247E  0E00               	movlw	0
 13575  012480  8EDB               	bsf	plusw2,7,c
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;usb_device.c: 2648: }
 13579                           ;usb_device.c: 2649: }
 13580                           ;usb_device.c: 2650: }
 13581                           
 13582                           ; BSR set to: 0
 13583  012482  0012               	return	
 13584  012484                     l333:
 13585                           
 13586                           ;usb_device.c: 2651: else
 13587                           ;usb_device.c: 2652: {
 13588                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 13589  012484  0100               	movlb	0	; () banked
 13590  012486  AF63               	btfss	(_outPipes+3)& (0+255),7,b
 13591  012488  D002               	goto	l8600
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;usb_device.c: 2661: }
 13595                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 13596                           
 13597                           ; BSR set to: 0
 13598  01248A  0100               	movlb	0	; () banked
 13599  01248C  9F63               	bcf	(_outPipes+3)& (0+255),7,b
 13600  01248E                     l8600:
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;usb_device.c: 2663: }
 13604                           ;usb_device.c: 2665: controlTransferState = 0;
 13605  01248E  0E00               	movlw	0
 13606  012490  6E3B               	movwf	_controlTransferState,c
 13607  012492  0012               	return	
 13608  012494                     __end_of_USBCtrlTrfInHandler:
 13609                           	opt stack 0
 13610                           tblptru	equ	0xFF8
 13611                           tblptrh	equ	0xFF7
 13612                           tblptrl	equ	0xFF6
 13613                           tablat	equ	0xFF5
 13614                           prodh	equ	0xFF4
 13615                           prodl	equ	0xFF3
 13616                           intcon	equ	0xFF2
 13617                           intcon2	equ	0xFF1
 13618                           indf0	equ	0xFEF
 13619                           postinc0	equ	0xFEE
 13620                           fsr0h	equ	0xFEA
 13621                           fsr0l	equ	0xFE9
 13622                           wreg	equ	0xFE8
 13623                           indf1	equ	0xFE7
 13624                           postinc1	equ	0xFE6
 13625                           postdec1	equ	0xFE5
 13626                           fsr1h	equ	0xFE2
 13627                           fsr1l	equ	0xFE1
 13628                           indf2	equ	0xFDF
 13629                           postinc2	equ	0xFDE
 13630                           postdec2	equ	0xFDD
 13631                           plusw2	equ	0xFDB
 13632                           fsr2h	equ	0xFDA
 13633                           fsr2l	equ	0xFD9
 13634                           status	equ	0xFD8
 13635                           
 13636 ;; *************** function _USBCtrlTrfTxService *****************
 13637 ;; Defined at:
 13638 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;		None
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  byteToSend      1   31[COMRAM] unsigned char 
 13643 ;; Return value:  Size  Location     Type
 13644 ;;		None               void
 13645 ;; Registers used:
 13646 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13647 ;; Tracked objects:
 13648 ;;		On entry : 0/0
 13649 ;;		On exit  : 0/0
 13650 ;;		Unchanged: 0/0
 13651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13656 ;;Total ram usage:        1 bytes
 13657 ;; Hardware stack levels used:    1
 13658 ;; Hardware stack levels required when called:    4
 13659 ;; This function calls:
 13660 ;;		Nothing
 13661 ;; This function is called by:
 13662 ;;		_USBCtrlEPAllowDataStage
 13663 ;;		_USBCtrlTrfInHandler
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text63
 13668  011FDC                     __ptext63:
 13669                           	opt stack 0
 13670  011FDC                     _USBCtrlTrfTxService:
 13671                           	opt stack 20
 13672                           
 13673                           ;usb_device.c: 1773: uint8_t byteToSend;
 13674                           ;usb_device.c: 1777: byteToSend = 8;
 13675                           
 13676                           ;incstack = 0
 13677  011FDC  0E08               	movlw	8
 13678  011FDE  6E20               	movwf	USBCtrlTrfTxService@byteToSend,c
 13679                           
 13680                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 13681  011FE0  5026               	movf	_inPipes+5,w,c
 13682  011FE2  E110               	bnz	l7954
 13683  011FE4  0E08               	movlw	8
 13684  011FE6  5C25               	subwf	_inPipes+4,w,c
 13685  011FE8  B0D8               	btfsc	status,0,c
 13686  011FEA  D00C               	goto	l7954
 13687                           
 13688                           ;usb_device.c: 1779: {
 13689                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 13690  011FEC  C025  F020         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13691                           
 13692                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 13693  011FF0  503D               	movf	_shortPacketStatus,w,c
 13694  011FF2  A4D8               	btfss	status,2,c
 13695  011FF4  D002               	goto	l7950
 13696                           
 13697                           ;usb_device.c: 1788: {
 13698                           ;usb_device.c: 1789: shortPacketStatus = 1;
 13699  011FF6  0E01               	movlw	1
 13700  011FF8  D004               	goto	L13
 13701  011FFA                     l7950:
 13702                           
 13703                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 13704  011FFA  043D               	decf	_shortPacketStatus,w,c
 13705  011FFC  A4D8               	btfss	status,2,c
 13706  011FFE  D002               	goto	l7954
 13707                           
 13708                           ;usb_device.c: 1792: {
 13709                           ;usb_device.c: 1793: shortPacketStatus = 2;
 13710  012000  0E02               	movlw	2
 13711  012002                     L13:
 13712  012002  6E3D               	movwf	_shortPacketStatus,c
 13713  012004                     l7954:
 13714                           
 13715                           ;usb_device.c: 1794: }
 13716                           ;usb_device.c: 1795: }
 13717                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 13718  012004  5020               	movf	USBCtrlTrfTxService@byteToSend,w,c
 13719  012006  5E25               	subwf	_inPipes+4,f,c
 13720  012008  0E00               	movlw	0
 13721  01200A  5A26               	subwfb	_inPipes+5,f,c
 13722                           
 13723                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 13724  01200C  EE20 F001          	lfsr	2,1
 13725  012010  5027               	movf	_pBDTEntryIn,w,c
 13726  012012  26D9               	addwf	fsr2l,f,c
 13727  012014  5028               	movf	_pBDTEntryIn+1,w,c
 13728  012016  22DA               	addwfc	fsr2h,f,c
 13729  012018  C020  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13730                           
 13731                           ;usb_device.c: 1808: pDst = ( uint8_t*)CtrlTrfData;
 13732  01201C  0E38               	movlw	56
 13733  01201E  0100               	movlb	0	; () banked
 13734  012020  6F81               	movwf	_pDst& (0+255),b
 13735  012022  0E0D               	movlw	13
 13736  012024  0100               	movlb	0	; () banked
 13737  012026  6F82               	movwf	(_pDst+1)& (0+255),b
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13741  012028  A024               	btfss	_inPipes+3,0,c
 13742  01202A  D01D               	goto	l7972
 13743  01202C  D03C               	goto	l7982
 13744  01202E                     l7964:
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;usb_device.c: 1812: {
 13748                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 13749  01202E  C021  FFF6         	movff	_inPipes,tblptrl
 13750  012032  C022  FFF7         	movff	_inPipes+1,tblptrh
 13751  012036  0E00               	movlw	low (__mediumconst shr (0+16))
 13752  012038  6EF8               	movwf	tblptru,c
 13753  01203A  C081  FFD9         	movff	_pDst,fsr2l
 13754  01203E  C082  FFDA         	movff	_pDst+1,fsr2h
 13755  012042  0E0E               	movlw	(high __ramtop+-1)
 13756  012044  64F7               	cpfsgt	tblptrh,c
 13757  012046  D003               	bra	u7577
 13758  012048  0008               	tblrd		*
 13759  01204A  50F5               	movf	tablat,w,c
 13760  01204C  D005               	bra	u7570
 13761  01204E                     u7577:
 13762  01204E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13763  012052  CFF7 FFEA          	movff	tblptrh,fsr0h
 13764  012056  50EF               	movf	indf0,w,c
 13765  012058                     u7570:
 13766  012058  6EDF               	movwf	indf2,c
 13767  01205A  4A21               	infsnz	_inPipes,f,c
 13768  01205C  2A22               	incf	_inPipes+1,f,c
 13769  01205E  0100               	movlb	0	; () banked
 13770  012060  4B81               	infsnz	_pDst& (0+255),f,b
 13771  012062  2B82               	incf	(_pDst+1)& (0+255),f,b
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;usb_device.c: 1814: byteToSend--;
 13775  012064  0620               	decf	USBCtrlTrfTxService@byteToSend,f,c
 13776  012066                     l7972:
 13777                           
 13778                           ; BSR set to: 0
 13779  012066  5020               	movf	USBCtrlTrfTxService@byteToSend,w,c
 13780  012068  B4D8               	btfsc	status,2,c
 13781  01206A  0012               	return	
 13782  01206C  D7E0               	goto	l7964
 13783  01206E                     l7974:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;usb_device.c: 1820: {
 13787                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 13788  01206E  C021  FFF6         	movff	_inPipes,tblptrl
 13789  012072  C022  FFF7         	movff	_inPipes+1,tblptrh
 13790  012076  0E00               	movlw	low (__mediumconst shr (0+16))
 13791  012078  6EF8               	movwf	tblptru,c
 13792  01207A  C081  FFD9         	movff	_pDst,fsr2l
 13793  01207E  C082  FFDA         	movff	_pDst+1,fsr2h
 13794  012082  0E0E               	movlw	(high __ramtop+-1)
 13795  012084  64F7               	cpfsgt	tblptrh,c
 13796  012086  D003               	bra	u7597
 13797  012088  0008               	tblrd		*
 13798  01208A  50F5               	movf	tablat,w,c
 13799  01208C  D005               	bra	u7590
 13800  01208E                     u7597:
 13801  01208E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13802  012092  CFF7 FFEA          	movff	tblptrh,fsr0h
 13803  012096  50EF               	movf	indf0,w,c
 13804  012098                     u7590:
 13805  012098  6EDF               	movwf	indf2,c
 13806  01209A  4A21               	infsnz	_inPipes,f,c
 13807  01209C  2A22               	incf	_inPipes+1,f,c
 13808  01209E  0100               	movlb	0	; () banked
 13809  0120A0  4B81               	infsnz	_pDst& (0+255),f,b
 13810  0120A2  2B82               	incf	(_pDst+1)& (0+255),f,b
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;usb_device.c: 1822: byteToSend--;
 13814  0120A4  0620               	decf	USBCtrlTrfTxService@byteToSend,f,c
 13815  0120A6                     l7982:
 13816                           
 13817                           ; BSR set to: 0
 13818  0120A6  5020               	movf	USBCtrlTrfTxService@byteToSend,w,c
 13819  0120A8  B4D8               	btfsc	status,2,c
 13820  0120AA  0012               	return	
 13821  0120AC  D7E0               	goto	l7974
 13822  0120AE                     __end_of_USBCtrlTrfTxService:
 13823                           	opt stack 0
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           intcon2	equ	0xFF1
 13832                           indf0	equ	0xFEF
 13833                           postinc0	equ	0xFEE
 13834                           fsr0h	equ	0xFEA
 13835                           fsr0l	equ	0xFE9
 13836                           wreg	equ	0xFE8
 13837                           indf1	equ	0xFE7
 13838                           postinc1	equ	0xFE6
 13839                           postdec1	equ	0xFE5
 13840                           fsr1h	equ	0xFE2
 13841                           fsr1l	equ	0xFE1
 13842                           indf2	equ	0xFDF
 13843                           postinc2	equ	0xFDE
 13844                           postdec2	equ	0xFDD
 13845                           plusw2	equ	0xFDB
 13846                           fsr2h	equ	0xFDA
 13847                           fsr2l	equ	0xFD9
 13848                           status	equ	0xFD8
 13849                           
 13850 ;; *************** function _UART_task *****************
 13851 ;; Defined at:
 13852 ;;		line 43 in file "../My_library/My_UART.c"
 13853 ;; Parameters:    Size  Location     Type
 13854 ;;		None
 13855 ;; Auto vars:     Size  Location     Type
 13856 ;;		None
 13857 ;; Return value:  Size  Location     Type
 13858 ;;		None               void
 13859 ;; Registers used:
 13860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13861 ;; Tracked objects:
 13862 ;;		On entry : 0/0
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13870 ;;Total ram usage:        0 bytes
 13871 ;; Hardware stack levels used:    1
 13872 ;; Hardware stack levels required when called:    5
 13873 ;; This function calls:
 13874 ;;		_ringbuf_num
 13875 ;; This function is called by:
 13876 ;;		_main
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text64
 13881  01366C                     __ptext64:
 13882                           	opt stack 0
 13883  01366C                     _UART_task:
 13884                           	opt stack 25
 13885                           
 13886                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;incstack = 0
 13890  01366C  0EC8               	movlw	low _uart_tx
 13891  01366E  0100               	movlb	0	; () banked
 13892  013670  6FB5               	movwf	ringbuf_num@rb& (0+255),b
 13893  013672  0E01               	movlw	high _uart_tx
 13894  013674  0100               	movlb	0	; () banked
 13895  013676  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
 13896  013678  EC12  F08C         	call	_ringbuf_num	;wreg free
 13897  01367C  0100               	movlb	0	; () banked
 13898  01367E  51B5               	movf	?_ringbuf_num& (0+255),w,b
 13899  013680  0100               	movlb	0	; () banked
 13900  013682  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 13901  013684  B4D8               	btfsc	status,2,c
 13902  013686  0012               	return	
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 13906  013688  889D               	bsf	3997,4,c	;volatile
 13907  01368A  0012               	return	
 13908  01368C                     __end_of_UART_task:
 13909                           	opt stack 0
 13910                           tblptru	equ	0xFF8
 13911                           tblptrh	equ	0xFF7
 13912                           tblptrl	equ	0xFF6
 13913                           tablat	equ	0xFF5
 13914                           prodh	equ	0xFF4
 13915                           prodl	equ	0xFF3
 13916                           intcon	equ	0xFF2
 13917                           intcon2	equ	0xFF1
 13918                           indf0	equ	0xFEF
 13919                           postinc0	equ	0xFEE
 13920                           fsr0h	equ	0xFEA
 13921                           fsr0l	equ	0xFE9
 13922                           wreg	equ	0xFE8
 13923                           indf1	equ	0xFE7
 13924                           postinc1	equ	0xFE6
 13925                           postdec1	equ	0xFE5
 13926                           fsr1h	equ	0xFE2
 13927                           fsr1l	equ	0xFE1
 13928                           indf2	equ	0xFDF
 13929                           postinc2	equ	0xFDE
 13930                           postdec2	equ	0xFDD
 13931                           plusw2	equ	0xFDB
 13932                           fsr2h	equ	0xFDA
 13933                           fsr2l	equ	0xFD9
 13934                           status	equ	0xFD8
 13935                           
 13936 ;; *************** function _ringbuf_num *****************
 13937 ;; Defined at:
 13938 ;;		line 12 in file "../My_library/My_ringbuf.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 13941 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 13942 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 13943 ;; Auto vars:     Size  Location     Type
 13944 ;;		None
 13945 ;; Return value:  Size  Location     Type
 13946 ;;                  2    0[BANK0 ] unsigned int 
 13947 ;; Registers used:
 13948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13949 ;; Tracked objects:
 13950 ;;		On entry : 0/0
 13951 ;;		On exit  : 0/0
 13952 ;;		Unchanged: 0/0
 13953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13954 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13956 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13957 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13958 ;;Total ram usage:        8 bytes
 13959 ;; Hardware stack levels used:    1
 13960 ;; Hardware stack levels required when called:    4
 13961 ;; This function calls:
 13962 ;;		Nothing
 13963 ;; This function is called by:
 13964 ;;		_ringbuf_put
 13965 ;;		_ringbuf_pop
 13966 ;;		_UART_task
 13967 ;;		_USB_task
 13968 ;;		_main
 13969 ;;		_ringbuf_backspace
 13970 ;;		_ST7032_task
 13971 ;;		_terminal_task
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text65
 13976  011824                     __ptext65:
 13977                           	opt stack 0
 13978  011824                     _ringbuf_num:
 13979                           	opt stack 25
 13980                           
 13981                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 13982                           
 13983                           ; BSR set to: 0
 13984                           ;incstack = 0
 13985  011824  0100               	movlb	0	; () banked
 13986  011826  EE20 F006          	lfsr	2,6
 13987  01182A  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 13988  01182C  26D9               	addwf	fsr2l,f,c
 13989  01182E  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 13990  011830  22DA               	addwfc	fsr2h,f,c
 13991  011832  0100               	movlb	0	; () banked
 13992  011834  EE10 F004          	lfsr	1,4
 13993  011838  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 13994  01183A  26E1               	addwf	fsr1l,f,c
 13995  01183C  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 13996  01183E  22E2               	addwfc	fsr1h,f,c
 13997  011840  50DE               	movf	postinc2,w,c
 13998  011842  5CE6               	subwf	postinc1,w,c
 13999  011844  50DE               	movf	postinc2,w,c
 14000  011846  58E6               	subwfb	postinc1,w,c
 14001  011848  A0D8               	btfss	status,0,c
 14002  01184A  D028               	goto	l9040
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 14006  01184C  0100               	movlb	0	; () banked
 14007  01184E  EE20 F004          	lfsr	2,4
 14008  011852  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 14009  011854  26D9               	addwf	fsr2l,f,c
 14010  011856  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14011  011858  22DA               	addwfc	fsr2h,f,c
 14012  01185A  CFDE F0B7          	movff	postinc2,??_ringbuf_num
 14013  01185E  CFDD F0B8          	movff	postdec2,??_ringbuf_num+1
 14014  011862  0100               	movlb	0	; () banked
 14015  011864  EE20 F006          	lfsr	2,6
 14016  011868  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 14017  01186A  26D9               	addwf	fsr2l,f,c
 14018  01186C  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14019  01186E  22DA               	addwfc	fsr2h,f,c
 14020  011870  CFDE F0B9          	movff	postinc2,??_ringbuf_num+2
 14021  011874  CFDD F0BA          	movff	postdec2,??_ringbuf_num+3
 14022  011878  0100               	movlb	0	; () banked
 14023  01187A  1FB9               	comf	(??_ringbuf_num+2)& (0+255),f,b
 14024  01187C  1FBA               	comf	(??_ringbuf_num+3)& (0+255),f,b
 14025  01187E  4BB9               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 14026  011880  2BBA               	incf	(??_ringbuf_num+3)& (0+255),f,b
 14027  011882  0100               	movlb	0	; () banked
 14028  011884  51B7               	movf	??_ringbuf_num& (0+255),w,b
 14029  011886  0100               	movlb	0	; () banked
 14030  011888  25B9               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 14031  01188A  0100               	movlb	0	; () banked
 14032  01188C  6FB5               	movwf	?_ringbuf_num& (0+255),b
 14033  01188E  0100               	movlb	0	; () banked
 14034  011890  51B8               	movf	(??_ringbuf_num+1)& (0+255),w,b
 14035  011892  0100               	movlb	0	; () banked
 14036  011894  21BA               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 14037  011896  0100               	movlb	0	; () banked
 14038  011898  6FB6               	movwf	(?_ringbuf_num+1)& (0+255),b
 14039                           
 14040                           ; BSR set to: 0
 14041                           ;My_ringbuf.c: 15: } else {
 14042                           
 14043                           ; BSR set to: 0
 14044  01189A  0012               	return	
 14045  01189C                     l9040:
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 14049  01189C  0100               	movlb	0	; () banked
 14050  01189E  EE20 F004          	lfsr	2,4
 14051  0118A2  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 14052  0118A4  26D9               	addwf	fsr2l,f,c
 14053  0118A6  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14054  0118A8  22DA               	addwfc	fsr2h,f,c
 14055  0118AA  CFDE F0B7          	movff	postinc2,??_ringbuf_num
 14056  0118AE  CFDD F0B8          	movff	postdec2,??_ringbuf_num+1
 14057  0118B2  0100               	movlb	0	; () banked
 14058  0118B4  EE20 F002          	lfsr	2,2
 14059  0118B8  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 14060  0118BA  26D9               	addwf	fsr2l,f,c
 14061  0118BC  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14062  0118BE  22DA               	addwfc	fsr2h,f,c
 14063  0118C0  CFDE F0B9          	movff	postinc2,??_ringbuf_num+2
 14064  0118C4  CFDD F0BA          	movff	postdec2,??_ringbuf_num+3
 14065  0118C8  0100               	movlb	0	; () banked
 14066  0118CA  EE20 F006          	lfsr	2,6
 14067  0118CE  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 14068  0118D0  26D9               	addwf	fsr2l,f,c
 14069  0118D2  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14070  0118D4  22DA               	addwfc	fsr2h,f,c
 14071  0118D6  CFDE F0BB          	movff	postinc2,??_ringbuf_num+4
 14072  0118DA  CFDD F0BC          	movff	postdec2,??_ringbuf_num+5
 14073  0118DE  0100               	movlb	0	; () banked
 14074  0118E0  1FBB               	comf	(??_ringbuf_num+4)& (0+255),f,b
 14075  0118E2  1FBC               	comf	(??_ringbuf_num+5)& (0+255),f,b
 14076  0118E4  4BBB               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 14077  0118E6  2BBC               	incf	(??_ringbuf_num+5)& (0+255),f,b
 14078  0118E8  0100               	movlb	0	; () banked
 14079  0118EA  51B9               	movf	(??_ringbuf_num+2)& (0+255),w,b
 14080  0118EC  0100               	movlb	0	; () banked
 14081  0118EE  27BB               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 14082  0118F0  0100               	movlb	0	; () banked
 14083  0118F2  51BA               	movf	(??_ringbuf_num+3)& (0+255),w,b
 14084  0118F4  0100               	movlb	0	; () banked
 14085  0118F6  23BC               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 14086  0118F8  0100               	movlb	0	; () banked
 14087  0118FA  51B7               	movf	??_ringbuf_num& (0+255),w,b
 14088  0118FC  0100               	movlb	0	; () banked
 14089  0118FE  25BB               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 14090  011900  0100               	movlb	0	; () banked
 14091  011902  6FB5               	movwf	?_ringbuf_num& (0+255),b
 14092  011904  0100               	movlb	0	; () banked
 14093  011906  51B8               	movf	(??_ringbuf_num+1)& (0+255),w,b
 14094  011908  0100               	movlb	0	; () banked
 14095  01190A  21BC               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 14096  01190C  0100               	movlb	0	; () banked
 14097  01190E  6FB6               	movwf	(?_ringbuf_num+1)& (0+255),b
 14098                           
 14099                           ; BSR set to: 0
 14100  011910  0012               	return	
 14101  011912                     __end_of_ringbuf_num:
 14102                           	opt stack 0
 14103                           tblptru	equ	0xFF8
 14104                           tblptrh	equ	0xFF7
 14105                           tblptrl	equ	0xFF6
 14106                           tablat	equ	0xFF5
 14107                           prodh	equ	0xFF4
 14108                           prodl	equ	0xFF3
 14109                           intcon	equ	0xFF2
 14110                           intcon2	equ	0xFF1
 14111                           indf0	equ	0xFEF
 14112                           postinc0	equ	0xFEE
 14113                           fsr0h	equ	0xFEA
 14114                           fsr0l	equ	0xFE9
 14115                           wreg	equ	0xFE8
 14116                           indf1	equ	0xFE7
 14117                           postinc1	equ	0xFE6
 14118                           postdec1	equ	0xFE5
 14119                           fsr1h	equ	0xFE2
 14120                           fsr1l	equ	0xFE1
 14121                           indf2	equ	0xFDF
 14122                           postinc2	equ	0xFDE
 14123                           postdec2	equ	0xFDD
 14124                           plusw2	equ	0xFDB
 14125                           fsr2h	equ	0xFDA
 14126                           fsr2l	equ	0xFD9
 14127                           status	equ	0xFD8
 14128                           
 14129 ;; *************** function _RTCC_task *****************
 14130 ;; Defined at:
 14131 ;;		line 352 in file "../My_library/My_RTCC.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;		None
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;		None
 14136 ;; Return value:  Size  Location     Type
 14137 ;;		None               void
 14138 ;; Registers used:
 14139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14149 ;;Total ram usage:        0 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:    8
 14152 ;; This function calls:
 14153 ;;		_RTCC_from_RTCC
 14154 ;; This function is called by:
 14155 ;;		_main
 14156 ;; This function uses a non-reentrant model
 14157 ;;
 14158                           
 14159                           	psect	text66
 14160  013320                     __ptext66:
 14161                           	opt stack 0
 14162  013320                     _RTCC_task:
 14163                           	opt stack 22
 14164                           
 14165                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 14166                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;incstack = 0
 14170  013320  010F               	movlb	15	; () banked
 14171  013322  B93F               	btfsc	63,4,b	;volatile
 14172  013324  0012               	return	
 14173                           
 14174                           ; BSR set to: 15
 14175                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 14176                           
 14177                           ; BSR set to: 15
 14178                           
 14179                           ; BSR set to: 15
 14180  013326  0E00               	movlw	0
 14181  013328  B73F               	btfsc	63,3,b	;volatile
 14182  01332A  0E01               	movlw	1
 14183  01332C  0100               	movlb	0	; () banked
 14184  01332E  6FA1               	movwf	(_now+12)& (0+255),b
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 14188  013330  0100               	movlb	0	; () banked
 14189  013332  5185               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 14190  013334  0100               	movlb	0	; () banked
 14191  013336  19A1               	xorwf	(_now+12)& (0+255),w,b
 14192  013338  B4D8               	btfsc	status,2,c
 14193  01333A  0012               	return	
 14194                           
 14195                           ; BSR set to: 0
 14196                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 14197  01333C  C0A1  F085         	movff	_now+12,RTCC_task@prev_halfsec
 14198                           
 14199                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 14200  013340  C0A1  F0A0         	movff	_now+12,_now+11
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;My_RTCC.c: 359: time_change_flag = 1;
 14204  013344  0E01               	movlw	1
 14205  013346  0100               	movlb	0	; () banked
 14206  013348  6F92               	movwf	_time_change_flag& (0+255),b
 14207                           
 14208                           ; BSR set to: 0
 14209                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 14210  01334A  0E95               	movlw	low _now
 14211  01334C  0100               	movlb	0	; () banked
 14212  01334E  6FDB               	movwf	RTCC_from_RTCC@tm& (0+255),b
 14213  013350  0E00               	movlw	high _now
 14214  013352  0100               	movlb	0	; () banked
 14215  013354  6FDC               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 14216  013356  EC7D  F09B         	call	_RTCC_from_RTCC	;wreg free
 14217  01335A  0012               	return	
 14218  01335C                     __end_of_RTCC_task:
 14219                           	opt stack 0
 14220                           tblptru	equ	0xFF8
 14221                           tblptrh	equ	0xFF7
 14222                           tblptrl	equ	0xFF6
 14223                           tablat	equ	0xFF5
 14224                           prodh	equ	0xFF4
 14225                           prodl	equ	0xFF3
 14226                           intcon	equ	0xFF2
 14227                           intcon2	equ	0xFF1
 14228                           indf0	equ	0xFEF
 14229                           postinc0	equ	0xFEE
 14230                           fsr0h	equ	0xFEA
 14231                           fsr0l	equ	0xFE9
 14232                           wreg	equ	0xFE8
 14233                           indf1	equ	0xFE7
 14234                           postinc1	equ	0xFE6
 14235                           postdec1	equ	0xFE5
 14236                           fsr1h	equ	0xFE2
 14237                           fsr1l	equ	0xFE1
 14238                           indf2	equ	0xFDF
 14239                           postinc2	equ	0xFDE
 14240                           postdec2	equ	0xFDD
 14241                           plusw2	equ	0xFDB
 14242                           fsr2h	equ	0xFDA
 14243                           fsr2l	equ	0xFD9
 14244                           status	equ	0xFD8
 14245                           
 14246 ;; *************** function _RTCC_from_RTCC *****************
 14247 ;; Defined at:
 14248 ;;		line 199 in file "../My_library/My_RTCC.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;  tm              2   38[BANK0 ] PTR struct .
 14251 ;;		 -> now(14), 
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;		None
 14254 ;; Return value:  Size  Location     Type
 14255 ;;		None               void
 14256 ;; Registers used:
 14257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14258 ;; Tracked objects:
 14259 ;;		On entry : 0/0
 14260 ;;		On exit  : 0/0
 14261 ;;		Unchanged: 0/0
 14262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14267 ;;Total ram usage:        2 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; Hardware stack levels required when called:    7
 14270 ;; This function calls:
 14271 ;;		_RTCC_to_caltime
 14272 ;;		_caltime_to_epoch
 14273 ;; This function is called by:
 14274 ;;		_RTCC_init
 14275 ;;		_display_time_0802
 14276 ;;		_RTCC_task
 14277 ;;		_main
 14278 ;;		_display_time_1602
 14279 ;;		_RTCC_adjust_time_inc
 14280 ;;		_RTCC_adjust_time_dec
 14281 ;;		_print_time
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text67
 14286  0136FA                     __ptext67:
 14287                           	opt stack 0
 14288  0136FA                     _RTCC_from_RTCC:
 14289                           	opt stack 21
 14290                           
 14291                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 14292                           
 14293                           ;incstack = 0
 14294  0136FA  C0DB  F0B6         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 14295  0136FE  C0DC  F0B7         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 14296  013702  EC65  F093         	call	_RTCC_to_caltime	;wreg free
 14297                           
 14298                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 14299  013706  C0DB  F0CE         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 14300  01370A  C0DC  F0CF         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 14301  01370E  EC96  F083         	call	_caltime_to_epoch	;wreg free
 14302  013712  0012               	return		;funcret
 14303  013714                     __end_of_RTCC_from_RTCC:
 14304                           	opt stack 0
 14305                           tblptru	equ	0xFF8
 14306                           tblptrh	equ	0xFF7
 14307                           tblptrl	equ	0xFF6
 14308                           tablat	equ	0xFF5
 14309                           prodh	equ	0xFF4
 14310                           prodl	equ	0xFF3
 14311                           intcon	equ	0xFF2
 14312                           intcon2	equ	0xFF1
 14313                           indf0	equ	0xFEF
 14314                           postinc0	equ	0xFEE
 14315                           fsr0h	equ	0xFEA
 14316                           fsr0l	equ	0xFE9
 14317                           wreg	equ	0xFE8
 14318                           indf1	equ	0xFE7
 14319                           postinc1	equ	0xFE6
 14320                           postdec1	equ	0xFE5
 14321                           fsr1h	equ	0xFE2
 14322                           fsr1l	equ	0xFE1
 14323                           indf2	equ	0xFDF
 14324                           postinc2	equ	0xFDE
 14325                           postdec2	equ	0xFDD
 14326                           plusw2	equ	0xFDB
 14327                           fsr2h	equ	0xFDA
 14328                           fsr2l	equ	0xFD9
 14329                           status	equ	0xFD8
 14330                           
 14331 ;; *************** function _caltime_to_epoch *****************
 14332 ;; Defined at:
 14333 ;;		line 179 in file "../My_library/My_RTCC.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  tm              2   25[BANK0 ] PTR struct .
 14336 ;;		 -> now(14), 
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;  month           1   37[BANK0 ] unsigned char 
 14339 ;;  month           1   32[BANK0 ] unsigned char 
 14340 ;;  year            1   31[BANK0 ] unsigned char 
 14341 ;;  epoch           4   33[BANK0 ] unsigned long 
 14342 ;; Return value:  Size  Location     Type
 14343 ;;		None               void
 14344 ;; Registers used:
 14345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14352 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14353 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14354 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14355 ;;Total ram usage:       13 bytes
 14356 ;; Hardware stack levels used:    1
 14357 ;; Hardware stack levels required when called:    6
 14358 ;; This function calls:
 14359 ;;		___lmul
 14360 ;;		_month_length
 14361 ;; This function is called by:
 14362 ;;		_RTCC_from_RTCC
 14363 ;;		_RTCC_from_caltime
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367                           	psect	text68
 14368  01072C                     __ptext68:
 14369                           	opt stack 0
 14370  01072C                     _caltime_to_epoch:
 14371                           	opt stack 21
 14372                           
 14373                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 14374                           
 14375                           ;incstack = 0
 14376  01072C  0E00               	movlw	0
 14377  01072E  0100               	movlb	0	; () banked
 14378  010730  6FD6               	movwf	caltime_to_epoch@epoch& (0+255),b
 14379  010732  0E00               	movlw	0
 14380  010734  6FD7               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 14381  010736  0E00               	movlw	0
 14382  010738  6FD8               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 14383  01073A  0E00               	movlw	0
 14384  01073C  6FD9               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 14385                           
 14386                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 14387  01073E  0E00               	movlw	0
 14388  010740  0100               	movlb	0	; () banked
 14389  010742  6FD4               	movwf	caltime_to_epoch@year& (0+255),b
 14390  010744  D037               	goto	l8704
 14391  010746                     l8690:
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 14395  010746  0E01               	movlw	1
 14396  010748  0100               	movlb	0	; () banked
 14397  01074A  6FDA               	movwf	caltime_to_epoch@month& (0+255),b
 14398  01074C                     l8692:
 14399                           
 14400                           ; BSR set to: 0
 14401  01074C  0E0C               	movlw	12
 14402  01074E  0100               	movlb	0	; () banked
 14403  010750  65DA               	cpfsgt	caltime_to_epoch@month& (0+255),b
 14404  010752  D001               	goto	l8696
 14405  010754  D02D               	goto	l8702
 14406  010756                     l8696:
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 14410  010756  C0DA  F020         	movff	caltime_to_epoch@month,month_length@month
 14411  01075A  0100               	movlb	0	; () banked
 14412  01075C  51D4               	movf	caltime_to_epoch@year& (0+255),w,b
 14413  01075E  EC43  F08E         	call	_month_length
 14414  010762  0100               	movlb	0	; () banked
 14415  010764  6FD0               	movwf	??_caltime_to_epoch& (0+255),b
 14416  010766  0100               	movlb	0	; () banked
 14417  010768  51D0               	movf	??_caltime_to_epoch& (0+255),w,b
 14418  01076A  0100               	movlb	0	; () banked
 14419  01076C  6FC2               	movwf	___lmul@multiplier& (0+255),b
 14420  01076E  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 14421  010770  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 14422  010772  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 14423  010774  0E80               	movlw	128
 14424  010776  0100               	movlb	0	; () banked
 14425  010778  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 14426  01077A  0E51               	movlw	81
 14427  01077C  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14428  01077E  0E01               	movlw	1
 14429  010780  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14430  010782  0E00               	movlw	0
 14431  010784  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14432  010786  EC68  F097         	call	___lmul	;wreg free
 14433  01078A  0100               	movlb	0	; () banked
 14434  01078C  51C2               	movf	?___lmul& (0+255),w,b
 14435  01078E  0100               	movlb	0	; () banked
 14436  010790  27D6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 14437  010792  0100               	movlb	0	; () banked
 14438  010794  51C3               	movf	(?___lmul+1)& (0+255),w,b
 14439  010796  0100               	movlb	0	; () banked
 14440  010798  23D7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 14441  01079A  0100               	movlb	0	; () banked
 14442  01079C  51C4               	movf	(?___lmul+2)& (0+255),w,b
 14443  01079E  0100               	movlb	0	; () banked
 14444  0107A0  23D8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 14445  0107A2  0100               	movlb	0	; () banked
 14446  0107A4  51C5               	movf	(?___lmul+3)& (0+255),w,b
 14447  0107A6  0100               	movlb	0	; () banked
 14448  0107A8  23D9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 14449                           
 14450                           ; BSR set to: 0
 14451  0107AA  0100               	movlb	0	; () banked
 14452  0107AC  2BDA               	incf	caltime_to_epoch@month& (0+255),f,b
 14453  0107AE  D7CE               	goto	l8692
 14454  0107B0                     l8702:
 14455                           
 14456                           ; BSR set to: 0
 14457  0107B0  0100               	movlb	0	; () banked
 14458  0107B2  2BD4               	incf	caltime_to_epoch@year& (0+255),f,b
 14459  0107B4                     l8704:
 14460                           
 14461                           ; BSR set to: 0
 14462  0107B4  0100               	movlb	0	; () banked
 14463  0107B6  EE20 F00A          	lfsr	2,10
 14464  0107BA  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14465  0107BC  26D9               	addwf	fsr2l,f,c
 14466  0107BE  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14467  0107C0  22DA               	addwfc	fsr2h,f,c
 14468  0107C2  50DE               	movf	postinc2,w,c
 14469  0107C4  0100               	movlb	0	; () banked
 14470  0107C6  5DD4               	subwf	caltime_to_epoch@year& (0+255),w,b
 14471  0107C8  A0D8               	btfss	status,0,c
 14472  0107CA  D7BD               	goto	l8690
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;My_RTCC.c: 184: }
 14476                           ;My_RTCC.c: 185: }
 14477                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 14478                           
 14479                           ; BSR set to: 0
 14480  0107CC  0E01               	movlw	1
 14481  0107CE  0100               	movlb	0	; () banked
 14482  0107D0  6FD5               	movwf	caltime_to_epoch@month_3453& (0+255),b
 14483  0107D2  D032               	goto	l8712
 14484  0107D4                     l8708:
 14485                           
 14486                           ; BSR set to: 0
 14487                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 14488  0107D4  C0D5  F020         	movff	caltime_to_epoch@month_3453,month_length@month
 14489  0107D8  0100               	movlb	0	; () banked
 14490  0107DA  EE20 F00A          	lfsr	2,10
 14491  0107DE  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14492  0107E0  26D9               	addwf	fsr2l,f,c
 14493  0107E2  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14494  0107E4  22DA               	addwfc	fsr2h,f,c
 14495  0107E6  50DF               	movf	indf2,w,c
 14496  0107E8  EC43  F08E         	call	_month_length
 14497  0107EC  0100               	movlb	0	; () banked
 14498  0107EE  6FD0               	movwf	??_caltime_to_epoch& (0+255),b
 14499  0107F0  0100               	movlb	0	; () banked
 14500  0107F2  51D0               	movf	??_caltime_to_epoch& (0+255),w,b
 14501  0107F4  0100               	movlb	0	; () banked
 14502  0107F6  6FC2               	movwf	___lmul@multiplier& (0+255),b
 14503  0107F8  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 14504  0107FA  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 14505  0107FC  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 14506  0107FE  0E80               	movlw	128
 14507  010800  0100               	movlb	0	; () banked
 14508  010802  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 14509  010804  0E51               	movlw	81
 14510  010806  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14511  010808  0E01               	movlw	1
 14512  01080A  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14513  01080C  0E00               	movlw	0
 14514  01080E  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14515  010810  EC68  F097         	call	___lmul	;wreg free
 14516  010814  0100               	movlb	0	; () banked
 14517  010816  51C2               	movf	?___lmul& (0+255),w,b
 14518  010818  0100               	movlb	0	; () banked
 14519  01081A  27D6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 14520  01081C  0100               	movlb	0	; () banked
 14521  01081E  51C3               	movf	(?___lmul+1)& (0+255),w,b
 14522  010820  0100               	movlb	0	; () banked
 14523  010822  23D7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 14524  010824  0100               	movlb	0	; () banked
 14525  010826  51C4               	movf	(?___lmul+2)& (0+255),w,b
 14526  010828  0100               	movlb	0	; () banked
 14527  01082A  23D8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 14528  01082C  0100               	movlb	0	; () banked
 14529  01082E  51C5               	movf	(?___lmul+3)& (0+255),w,b
 14530  010830  0100               	movlb	0	; () banked
 14531  010832  23D9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 14532                           
 14533                           ; BSR set to: 0
 14534  010834  0100               	movlb	0	; () banked
 14535  010836  2BD5               	incf	caltime_to_epoch@month_3453& (0+255),f,b
 14536  010838                     l8712:
 14537                           
 14538                           ; BSR set to: 0
 14539  010838  0100               	movlb	0	; () banked
 14540  01083A  EE20 F009          	lfsr	2,9
 14541  01083E  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14542  010840  26D9               	addwf	fsr2l,f,c
 14543  010842  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14544  010844  22DA               	addwfc	fsr2h,f,c
 14545  010846  50DE               	movf	postinc2,w,c
 14546  010848  0100               	movlb	0	; () banked
 14547  01084A  5DD5               	subwf	caltime_to_epoch@month_3453& (0+255),w,b
 14548  01084C  A0D8               	btfss	status,0,c
 14549  01084E  D7C2               	goto	l8708
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;My_RTCC.c: 188: }
 14553                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 14554                           
 14555                           ; BSR set to: 0
 14556  010850  0EFF               	movlw	255
 14557  010852  0100               	movlb	0	; () banked
 14558  010854  6FD0               	movwf	??_caltime_to_epoch& (0+255),b
 14559  010856  0EFF               	movlw	255
 14560  010858  0100               	movlb	0	; () banked
 14561  01085A  6FD1               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 14562  01085C  0100               	movlb	0	; () banked
 14563  01085E  EE20 F008          	lfsr	2,8
 14564  010862  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14565  010864  26D9               	addwf	fsr2l,f,c
 14566  010866  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14567  010868  22DA               	addwfc	fsr2h,f,c
 14568  01086A  50DF               	movf	indf2,w,c
 14569  01086C  0100               	movlb	0	; () banked
 14570  01086E  6FD2               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 14571  010870  6BD3               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 14572  010872  0100               	movlb	0	; () banked
 14573  010874  51D0               	movf	??_caltime_to_epoch& (0+255),w,b
 14574  010876  0100               	movlb	0	; () banked
 14575  010878  27D2               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 14576  01087A  0100               	movlb	0	; () banked
 14577  01087C  51D1               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 14578  01087E  0100               	movlb	0	; () banked
 14579  010880  23D3               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 14580  010882  C0D2  F0C2         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 14581  010886  C0D3  F0C3         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 14582  01088A  0100               	movlb	0	; () banked
 14583  01088C  0E00               	movlw	0
 14584  01088E  BFC3               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14585  010890  0EFF               	movlw	-1
 14586  010892  6FC4               	movwf	(___lmul@multiplier+2)& (0+255),b
 14587  010894  6FC5               	movwf	(___lmul@multiplier+3)& (0+255),b
 14588  010896  0E80               	movlw	128
 14589  010898  0100               	movlb	0	; () banked
 14590  01089A  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 14591  01089C  0E51               	movlw	81
 14592  01089E  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14593  0108A0  0E01               	movlw	1
 14594  0108A2  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14595  0108A4  0E00               	movlw	0
 14596  0108A6  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14597  0108A8  EC68  F097         	call	___lmul	;wreg free
 14598  0108AC  0100               	movlb	0	; () banked
 14599  0108AE  51C2               	movf	?___lmul& (0+255),w,b
 14600  0108B0  0100               	movlb	0	; () banked
 14601  0108B2  27D6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 14602  0108B4  0100               	movlb	0	; () banked
 14603  0108B6  51C3               	movf	(?___lmul+1)& (0+255),w,b
 14604  0108B8  0100               	movlb	0	; () banked
 14605  0108BA  23D7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 14606  0108BC  0100               	movlb	0	; () banked
 14607  0108BE  51C4               	movf	(?___lmul+2)& (0+255),w,b
 14608  0108C0  0100               	movlb	0	; () banked
 14609  0108C2  23D8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 14610  0108C4  0100               	movlb	0	; () banked
 14611  0108C6  51C5               	movf	(?___lmul+3)& (0+255),w,b
 14612  0108C8  0100               	movlb	0	; () banked
 14613  0108CA  23D9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 14614                           
 14615                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 14616  0108CC  0100               	movlb	0	; () banked
 14617  0108CE  EE20 F006          	lfsr	2,6
 14618  0108D2  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14619  0108D4  26D9               	addwf	fsr2l,f,c
 14620  0108D6  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14621  0108D8  22DA               	addwfc	fsr2h,f,c
 14622  0108DA  50DF               	movf	indf2,w,c
 14623  0108DC  0100               	movlb	0	; () banked
 14624  0108DE  6FD0               	movwf	??_caltime_to_epoch& (0+255),b
 14625  0108E0  0100               	movlb	0	; () banked
 14626  0108E2  51D0               	movf	??_caltime_to_epoch& (0+255),w,b
 14627  0108E4  0100               	movlb	0	; () banked
 14628  0108E6  6FC2               	movwf	___lmul@multiplier& (0+255),b
 14629  0108E8  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 14630  0108EA  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 14631  0108EC  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 14632  0108EE  0E10               	movlw	16
 14633  0108F0  0100               	movlb	0	; () banked
 14634  0108F2  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 14635  0108F4  0E0E               	movlw	14
 14636  0108F6  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14637  0108F8  0E00               	movlw	0
 14638  0108FA  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14639  0108FC  0E00               	movlw	0
 14640  0108FE  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14641  010900  EC68  F097         	call	___lmul	;wreg free
 14642  010904  0100               	movlb	0	; () banked
 14643  010906  51C2               	movf	?___lmul& (0+255),w,b
 14644  010908  0100               	movlb	0	; () banked
 14645  01090A  27D6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 14646  01090C  0100               	movlb	0	; () banked
 14647  01090E  51C3               	movf	(?___lmul+1)& (0+255),w,b
 14648  010910  0100               	movlb	0	; () banked
 14649  010912  23D7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 14650  010914  0100               	movlb	0	; () banked
 14651  010916  51C4               	movf	(?___lmul+2)& (0+255),w,b
 14652  010918  0100               	movlb	0	; () banked
 14653  01091A  23D8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 14654  01091C  0100               	movlb	0	; () banked
 14655  01091E  51C5               	movf	(?___lmul+3)& (0+255),w,b
 14656  010920  0100               	movlb	0	; () banked
 14657  010922  23D9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 14658                           
 14659                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 14660  010924  0100               	movlb	0	; () banked
 14661  010926  EE20 F005          	lfsr	2,5
 14662  01092A  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14663  01092C  26D9               	addwf	fsr2l,f,c
 14664  01092E  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14665  010930  22DA               	addwfc	fsr2h,f,c
 14666  010932  50DF               	movf	indf2,w,c
 14667  010934  0100               	movlb	0	; () banked
 14668  010936  6FD0               	movwf	??_caltime_to_epoch& (0+255),b
 14669  010938  0100               	movlb	0	; () banked
 14670  01093A  51D0               	movf	??_caltime_to_epoch& (0+255),w,b
 14671  01093C  0100               	movlb	0	; () banked
 14672  01093E  6FC2               	movwf	___lmul@multiplier& (0+255),b
 14673  010940  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 14674  010942  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 14675  010944  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 14676  010946  0E3C               	movlw	60
 14677  010948  0100               	movlb	0	; () banked
 14678  01094A  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 14679  01094C  0E00               	movlw	0
 14680  01094E  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14681  010950  0E00               	movlw	0
 14682  010952  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14683  010954  0E00               	movlw	0
 14684  010956  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14685  010958  EC68  F097         	call	___lmul	;wreg free
 14686  01095C  0100               	movlb	0	; () banked
 14687  01095E  51C2               	movf	?___lmul& (0+255),w,b
 14688  010960  0100               	movlb	0	; () banked
 14689  010962  27D6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 14690  010964  0100               	movlb	0	; () banked
 14691  010966  51C3               	movf	(?___lmul+1)& (0+255),w,b
 14692  010968  0100               	movlb	0	; () banked
 14693  01096A  23D7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 14694  01096C  0100               	movlb	0	; () banked
 14695  01096E  51C4               	movf	(?___lmul+2)& (0+255),w,b
 14696  010970  0100               	movlb	0	; () banked
 14697  010972  23D8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 14698  010974  0100               	movlb	0	; () banked
 14699  010976  51C5               	movf	(?___lmul+3)& (0+255),w,b
 14700  010978  0100               	movlb	0	; () banked
 14701  01097A  23D9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;My_RTCC.c: 192: epoch += tm->ss;
 14705  01097C  0100               	movlb	0	; () banked
 14706  01097E  EE20 F004          	lfsr	2,4
 14707  010982  51CE               	movf	caltime_to_epoch@tm& (0+255),w,b
 14708  010984  26D9               	addwf	fsr2l,f,c
 14709  010986  51CF               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 14710  010988  22DA               	addwfc	fsr2h,f,c
 14711  01098A  50DF               	movf	indf2,w,c
 14712  01098C  0100               	movlb	0	; () banked
 14713  01098E  6FD0               	movwf	??_caltime_to_epoch& (0+255),b
 14714  010990  0100               	movlb	0	; () banked
 14715  010992  51D0               	movf	??_caltime_to_epoch& (0+255),w,b
 14716  010994  0100               	movlb	0	; () banked
 14717  010996  27D6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 14718  010998  0E00               	movlw	0
 14719  01099A  23D7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 14720  01099C  23D8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 14721  01099E  23D9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;My_RTCC.c: 194: tm->epoch = epoch;
 14725  0109A0  C0CE  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 14726  0109A4  C0CF  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 14727  0109A8  C0D6  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 14728  0109AC  C0D7  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 14729  0109B0  C0D8  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 14730  0109B4  C0D9  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 14731                           
 14732                           ; BSR set to: 0
 14733  0109B8  0012               	return		;funcret
 14734  0109BA                     __end_of_caltime_to_epoch:
 14735                           	opt stack 0
 14736                           tblptru	equ	0xFF8
 14737                           tblptrh	equ	0xFF7
 14738                           tblptrl	equ	0xFF6
 14739                           tablat	equ	0xFF5
 14740                           prodh	equ	0xFF4
 14741                           prodl	equ	0xFF3
 14742                           intcon	equ	0xFF2
 14743                           intcon2	equ	0xFF1
 14744                           indf0	equ	0xFEF
 14745                           postinc0	equ	0xFEE
 14746                           fsr0h	equ	0xFEA
 14747                           fsr0l	equ	0xFE9
 14748                           wreg	equ	0xFE8
 14749                           indf1	equ	0xFE7
 14750                           postinc1	equ	0xFE6
 14751                           postdec1	equ	0xFE5
 14752                           fsr1h	equ	0xFE2
 14753                           fsr1l	equ	0xFE1
 14754                           indf2	equ	0xFDF
 14755                           postinc2	equ	0xFDE
 14756                           postdec2	equ	0xFDD
 14757                           plusw2	equ	0xFDB
 14758                           fsr2h	equ	0xFDA
 14759                           fsr2l	equ	0xFD9
 14760                           status	equ	0xFD8
 14761                           
 14762 ;; *************** function _month_length *****************
 14763 ;; Defined at:
 14764 ;;		line 55 in file "../My_library/My_RTCC.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;  year            1    wreg     unsigned char 
 14767 ;;  month           1   31[COMRAM] unsigned char 
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;  year            1   10[BANK0 ] unsigned char 
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      unsigned char 
 14772 ;; Registers used:
 14773 ;;		wreg, status,2, status,0, cstack
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14781 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14782 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14783 ;;Total ram usage:        6 bytes
 14784 ;; Hardware stack levels used:    1
 14785 ;; Hardware stack levels required when called:    5
 14786 ;; This function calls:
 14787 ;;		___awmod
 14788 ;; This function is called by:
 14789 ;;		_epoch_to_caltime
 14790 ;;		_caltime_to_epoch
 14791 ;;		_RTCC_adjust_time_inc
 14792 ;;		_RTCC_adjust_time_dec
 14793 ;;		_terminal_time
 14794 ;; This function uses a non-reentrant model
 14795 ;;
 14796                           
 14797                           	psect	text69
 14798  011C86                     __ptext69:
 14799                           	opt stack 0
 14800  011C86                     _month_length:
 14801                           	opt stack 21
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;incstack = 0
 14805                           ;month_length@year stored from wreg
 14806  011C86  0100               	movlb	0	; () banked
 14807  011C88  6FBF               	movwf	month_length@year& (0+255),b
 14808                           
 14809                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 14810  011C8A  0E02               	movlw	2
 14811  011C8C  1820               	xorwf	month_length@month,w,c
 14812  011C8E  A4D8               	btfss	status,2,c
 14813  011C90  D03E               	goto	l8512
 14814  011C92  C0BF  F0B5         	movff	month_length@year,___awmod@dividend
 14815  011C96  0100               	movlb	0	; () banked
 14816  011C98  6BB6               	clrf	(___awmod@dividend+1)& (0+255),b
 14817  011C9A  0E00               	movlw	0
 14818  011C9C  0100               	movlb	0	; () banked
 14819  011C9E  6FB8               	movwf	(___awmod@divisor+1)& (0+255),b
 14820  011CA0  0E64               	movlw	100
 14821  011CA2  6FB7               	movwf	___awmod@divisor& (0+255),b
 14822  011CA4  EC2A  F095         	call	___awmod	;wreg free
 14823  011CA8  0100               	movlb	0	; () banked
 14824  011CAA  51B5               	movf	?___awmod& (0+255),w,b
 14825  011CAC  0100               	movlb	0	; () banked
 14826  011CAE  11B6               	iorwf	(?___awmod+1)& (0+255),w,b
 14827  011CB0  A4D8               	btfss	status,2,c
 14828  011CB2  D002               	goto	u8340
 14829  011CB4  0E01               	movlw	1
 14830  011CB6  D001               	goto	u8350
 14831  011CB8                     u8340:
 14832  011CB8  0E00               	movlw	0
 14833  011CBA                     u8350:
 14834  011CBA  0800               	sublw	0
 14835  011CBC  0100               	movlb	0	; () banked
 14836  011CBE  6FBB               	movwf	??_month_length& (0+255),b
 14837  011CC0  C0BF  F0B5         	movff	month_length@year,___awmod@dividend
 14838  011CC4  0100               	movlb	0	; () banked
 14839  011CC6  6BB6               	clrf	(___awmod@dividend+1)& (0+255),b
 14840  011CC8  0E01               	movlw	1
 14841  011CCA  0100               	movlb	0	; () banked
 14842  011CCC  6FB8               	movwf	(___awmod@divisor+1)& (0+255),b
 14843  011CCE  0E90               	movlw	144
 14844  011CD0  6FB7               	movwf	___awmod@divisor& (0+255),b
 14845  011CD2  EC2A  F095         	call	___awmod	;wreg free
 14846  011CD6  0100               	movlb	0	; () banked
 14847  011CD8  51B5               	movf	?___awmod& (0+255),w,b
 14848  011CDA  0100               	movlb	0	; () banked
 14849  011CDC  11B6               	iorwf	(?___awmod+1)& (0+255),w,b
 14850  011CDE  A4D8               	btfss	status,2,c
 14851  011CE0  D004               	goto	u8360
 14852  011CE2  0100               	movlb	0	; () banked
 14853  011CE4  6BBC               	clrf	(??_month_length+1)& (0+255),b
 14854  011CE6  2BBC               	incf	(??_month_length+1)& (0+255),f,b
 14855  011CE8  D002               	goto	u8378
 14856  011CEA                     u8360:
 14857  011CEA  0100               	movlb	0	; () banked
 14858  011CEC  6BBC               	clrf	(??_month_length+1)& (0+255),b
 14859  011CEE                     u8378:
 14860  011CEE  C0BF  F0BD         	movff	month_length@year,??_month_length+2
 14861  011CF2  0E03               	movlw	3
 14862  011CF4  0100               	movlb	0	; () banked
 14863  011CF6  17BD               	andwf	(??_month_length+2)& (0+255),f,b
 14864  011CF8  A4D8               	btfss	status,2,c
 14865  011CFA  D002               	goto	u8380
 14866  011CFC  0E01               	movlw	1
 14867  011CFE  D001               	goto	u8390
 14868  011D00                     u8380:
 14869  011D00  0E00               	movlw	0
 14870  011D02                     u8390:
 14871  011D02  0100               	movlb	0	; () banked
 14872  011D04  25BC               	addwf	(??_month_length+1)& (0+255),w,b
 14873  011D06  0100               	movlb	0	; () banked
 14874  011D08  25BB               	addwf	??_month_length& (0+255),w,b
 14875  011D0A  0F1C               	addlw	28
 14876                           
 14877                           ; BSR set to: 0
 14878                           
 14879                           ; BSR set to: 0
 14880  011D0C  0012               	return	
 14881  011D0E                     l8512:
 14882                           
 14883                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 14884  011D0E  5020               	movf	month_length@month,w,c
 14885  011D10  0B01               	andlw	1
 14886  011D12  0100               	movlb	0	; () banked
 14887  011D14  6FBB               	movwf	??_month_length& (0+255),b
 14888  011D16  6BBC               	clrf	(??_month_length+1)& (0+255),b
 14889  011D18  0100               	movlb	0	; () banked
 14890  011D1A  1FBB               	comf	??_month_length& (0+255),f,b
 14891  011D1C  1FBC               	comf	(??_month_length+1)& (0+255),f,b
 14892  011D1E  4BBB               	infsnz	??_month_length& (0+255),f,b
 14893  011D20  2BBC               	incf	(??_month_length+1)& (0+255),f,b
 14894  011D22  5020               	movf	month_length@month,w,c
 14895  011D24  0100               	movlb	0	; () banked
 14896  011D26  6FBD               	movwf	(??_month_length+2)& (0+255),b
 14897  011D28  6BBE               	clrf	(??_month_length+3)& (0+255),b
 14898  011D2A  0100               	movlb	0	; () banked
 14899  011D2C  51BB               	movf	??_month_length& (0+255),w,b
 14900  011D2E  0100               	movlb	0	; () banked
 14901  011D30  1BBD               	xorwf	(??_month_length+2)& (0+255),f,b
 14902  011D32  0100               	movlb	0	; () banked
 14903  011D34  51BC               	movf	(??_month_length+1)& (0+255),w,b
 14904  011D36  0100               	movlb	0	; () banked
 14905  011D38  1BBE               	xorwf	(??_month_length+3)& (0+255),f,b
 14906  011D3A  0E0D               	movlw	13
 14907  011D3C  0100               	movlb	0	; () banked
 14908  011D3E  17BD               	andwf	(??_month_length+2)& (0+255),f,b
 14909  011D40  0E00               	movlw	0
 14910  011D42  17BE               	andwf	(??_month_length+3)& (0+255),f,b
 14911  011D44  0E04               	movlw	4
 14912  011D46  0100               	movlb	0	; () banked
 14913  011D48  19BD               	xorwf	(??_month_length+2)& (0+255),w,b
 14914  011D4A  0100               	movlb	0	; () banked
 14915  011D4C  11BE               	iorwf	(??_month_length+3)& (0+255),w,b
 14916  011D4E  A4D8               	btfss	status,2,c
 14917  011D50  D002               	goto	u8400
 14918  011D52  0E01               	movlw	1
 14919  011D54  D001               	goto	u8410
 14920  011D56                     u8400:
 14921  011D56  0E00               	movlw	0
 14922  011D58                     u8410:
 14923  011D58  0800               	sublw	0
 14924  011D5A  0F1F               	addlw	31
 14925                           
 14926                           ; BSR set to: 0
 14927  011D5C  0012               	return	
 14928  011D5E                     __end_of_month_length:
 14929                           	opt stack 0
 14930                           tblptru	equ	0xFF8
 14931                           tblptrh	equ	0xFF7
 14932                           tblptrl	equ	0xFF6
 14933                           tablat	equ	0xFF5
 14934                           prodh	equ	0xFF4
 14935                           prodl	equ	0xFF3
 14936                           intcon	equ	0xFF2
 14937                           intcon2	equ	0xFF1
 14938                           indf0	equ	0xFEF
 14939                           postinc0	equ	0xFEE
 14940                           fsr0h	equ	0xFEA
 14941                           fsr0l	equ	0xFE9
 14942                           wreg	equ	0xFE8
 14943                           indf1	equ	0xFE7
 14944                           postinc1	equ	0xFE6
 14945                           postdec1	equ	0xFE5
 14946                           fsr1h	equ	0xFE2
 14947                           fsr1l	equ	0xFE1
 14948                           indf2	equ	0xFDF
 14949                           postinc2	equ	0xFDE
 14950                           postdec2	equ	0xFDD
 14951                           plusw2	equ	0xFDB
 14952                           fsr2h	equ	0xFDA
 14953                           fsr2l	equ	0xFD9
 14954                           status	equ	0xFD8
 14955                           
 14956 ;; *************** function ___awmod *****************
 14957 ;; Defined at:
 14958 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;  dividend        2    0[BANK0 ] int 
 14961 ;;  divisor         2    2[BANK0 ] int 
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;  sign            1    5[BANK0 ] unsigned char 
 14964 ;;  counter         1    4[BANK0 ] unsigned char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  2    0[BANK0 ] int 
 14967 ;; Registers used:
 14968 ;;		wreg, status,2, status,0
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14974 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14977 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14978 ;;Total ram usage:        6 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    4
 14981 ;; This function calls:
 14982 ;;		Nothing
 14983 ;; This function is called by:
 14984 ;;		_month_length
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text70
 14989  012A54                     __ptext70:
 14990                           	opt stack 0
 14991  012A54                     ___awmod:
 14992                           	opt stack 21
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;incstack = 0
 14996  012A54  0E00               	movlw	0
 14997  012A56  0100               	movlb	0	; () banked
 14998  012A58  6FBA               	movwf	___awmod@sign& (0+255),b
 14999                           
 15000                           ; BSR set to: 0
 15001  012A5A  0100               	movlb	0	; () banked
 15002  012A5C  AFB6               	btfss	(___awmod@dividend+1)& (0+255),7,b
 15003  012A5E  D008               	goto	l8288
 15004                           
 15005                           ; BSR set to: 0
 15006  012A60  0100               	movlb	0	; () banked
 15007  012A62  6DB5               	negf	___awmod@dividend& (0+255),b
 15008  012A64  1FB6               	comf	(___awmod@dividend+1)& (0+255),f,b
 15009  012A66  B0D8               	btfsc	status,0,c
 15010  012A68  2BB6               	incf	(___awmod@dividend+1)& (0+255),f,b
 15011                           
 15012                           ; BSR set to: 0
 15013  012A6A  0E01               	movlw	1
 15014  012A6C  0100               	movlb	0	; () banked
 15015  012A6E  6FBA               	movwf	___awmod@sign& (0+255),b
 15016  012A70                     l8288:
 15017                           
 15018                           ; BSR set to: 0
 15019  012A70  0100               	movlb	0	; () banked
 15020  012A72  AFB8               	btfss	(___awmod@divisor+1)& (0+255),7,b
 15021  012A74  D005               	goto	l8292
 15022                           
 15023                           ; BSR set to: 0
 15024  012A76  0100               	movlb	0	; () banked
 15025  012A78  6DB7               	negf	___awmod@divisor& (0+255),b
 15026  012A7A  1FB8               	comf	(___awmod@divisor+1)& (0+255),f,b
 15027  012A7C  B0D8               	btfsc	status,0,c
 15028  012A7E  2BB8               	incf	(___awmod@divisor+1)& (0+255),f,b
 15029  012A80                     l8292:
 15030                           
 15031                           ; BSR set to: 0
 15032  012A80  0100               	movlb	0	; () banked
 15033  012A82  51B7               	movf	___awmod@divisor& (0+255),w,b
 15034  012A84  0100               	movlb	0	; () banked
 15035  012A86  11B8               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 15036  012A88  B4D8               	btfsc	status,2,c
 15037  012A8A  D026               	goto	l8308
 15038                           
 15039                           ; BSR set to: 0
 15040  012A8C  0E01               	movlw	1
 15041  012A8E  0100               	movlb	0	; () banked
 15042  012A90  6FB9               	movwf	___awmod@counter& (0+255),b
 15043  012A92  D006               	goto	l8298
 15044  012A94                     l8296:
 15045                           
 15046                           ; BSR set to: 0
 15047  012A94  0100               	movlb	0	; () banked
 15048  012A96  90D8               	bcf	status,0,c
 15049  012A98  37B7               	rlcf	___awmod@divisor& (0+255),f,b
 15050  012A9A  37B8               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 15051  012A9C  0100               	movlb	0	; () banked
 15052  012A9E  2BB9               	incf	___awmod@counter& (0+255),f,b
 15053  012AA0                     l8298:
 15054                           
 15055                           ; BSR set to: 0
 15056  012AA0  0100               	movlb	0	; () banked
 15057  012AA2  AFB8               	btfss	(___awmod@divisor+1)& (0+255),7,b
 15058  012AA4  D7F7               	goto	l8296
 15059  012AA6                     l8300:
 15060                           
 15061                           ; BSR set to: 0
 15062  012AA6  0100               	movlb	0	; () banked
 15063  012AA8  51B7               	movf	___awmod@divisor& (0+255),w,b
 15064  012AAA  0100               	movlb	0	; () banked
 15065  012AAC  5DB5               	subwf	___awmod@dividend& (0+255),w,b
 15066  012AAE  0100               	movlb	0	; () banked
 15067  012AB0  51B8               	movf	(___awmod@divisor+1)& (0+255),w,b
 15068  012AB2  0100               	movlb	0	; () banked
 15069  012AB4  59B6               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 15070  012AB6  A0D8               	btfss	status,0,c
 15071  012AB8  D008               	goto	l8304
 15072                           
 15073                           ; BSR set to: 0
 15074  012ABA  0100               	movlb	0	; () banked
 15075  012ABC  51B7               	movf	___awmod@divisor& (0+255),w,b
 15076  012ABE  0100               	movlb	0	; () banked
 15077  012AC0  5FB5               	subwf	___awmod@dividend& (0+255),f,b
 15078  012AC2  0100               	movlb	0	; () banked
 15079  012AC4  51B8               	movf	(___awmod@divisor+1)& (0+255),w,b
 15080  012AC6  0100               	movlb	0	; () banked
 15081  012AC8  5BB6               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 15082  012ACA                     l8304:
 15083                           
 15084                           ; BSR set to: 0
 15085  012ACA  0100               	movlb	0	; () banked
 15086  012ACC  90D8               	bcf	status,0,c
 15087  012ACE  33B8               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 15088  012AD0  33B7               	rrcf	___awmod@divisor& (0+255),f,b
 15089                           
 15090                           ; BSR set to: 0
 15091  012AD2  0100               	movlb	0	; () banked
 15092  012AD4  2FB9               	decfsz	___awmod@counter& (0+255),f,b
 15093  012AD6  D7E7               	goto	l8300
 15094  012AD8                     l8308:
 15095                           
 15096                           ; BSR set to: 0
 15097  012AD8  0100               	movlb	0	; () banked
 15098  012ADA  51BA               	movf	___awmod@sign& (0+255),w,b
 15099  012ADC  0100               	movlb	0	; () banked
 15100  012ADE  B4D8               	btfsc	status,2,c
 15101  012AE0  D005               	goto	l8312
 15102                           
 15103                           ; BSR set to: 0
 15104  012AE2  0100               	movlb	0	; () banked
 15105  012AE4  6DB5               	negf	___awmod@dividend& (0+255),b
 15106  012AE6  1FB6               	comf	(___awmod@dividend+1)& (0+255),f,b
 15107  012AE8  B0D8               	btfsc	status,0,c
 15108  012AEA  2BB6               	incf	(___awmod@dividend+1)& (0+255),f,b
 15109  012AEC                     l8312:
 15110                           
 15111                           ; BSR set to: 0
 15112  012AEC  C0B5  F0B5         	movff	___awmod@dividend,?___awmod
 15113  012AF0  C0B6  F0B6         	movff	___awmod@dividend+1,?___awmod+1
 15114  012AF4  0012               	return	
 15115  012AF6                     __end_of___awmod:
 15116                           	opt stack 0
 15117                           tblptru	equ	0xFF8
 15118                           tblptrh	equ	0xFF7
 15119                           tblptrl	equ	0xFF6
 15120                           tablat	equ	0xFF5
 15121                           prodh	equ	0xFF4
 15122                           prodl	equ	0xFF3
 15123                           intcon	equ	0xFF2
 15124                           intcon2	equ	0xFF1
 15125                           indf0	equ	0xFEF
 15126                           postinc0	equ	0xFEE
 15127                           fsr0h	equ	0xFEA
 15128                           fsr0l	equ	0xFE9
 15129                           wreg	equ	0xFE8
 15130                           indf1	equ	0xFE7
 15131                           postinc1	equ	0xFE6
 15132                           postdec1	equ	0xFE5
 15133                           fsr1h	equ	0xFE2
 15134                           fsr1l	equ	0xFE1
 15135                           indf2	equ	0xFDF
 15136                           postinc2	equ	0xFDE
 15137                           postdec2	equ	0xFDD
 15138                           plusw2	equ	0xFDB
 15139                           fsr2h	equ	0xFDA
 15140                           fsr2l	equ	0xFD9
 15141                           status	equ	0xFD8
 15142                           
 15143 ;; *************** function ___lmul *****************
 15144 ;; Defined at:
 15145 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  multiplier      4   13[BANK0 ] unsigned long 
 15148 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;  product         4   21[BANK0 ] unsigned long 
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  4   13[BANK0 ] unsigned long 
 15153 ;; Registers used:
 15154 ;;		wreg, status,2, status,0
 15155 ;; Tracked objects:
 15156 ;;		On entry : 0/0
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15160 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15163 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15164 ;;Total ram usage:       12 bytes
 15165 ;; Hardware stack levels used:    1
 15166 ;; Hardware stack levels required when called:    4
 15167 ;; This function calls:
 15168 ;;		Nothing
 15169 ;; This function is called by:
 15170 ;;		_get_quot_rem
 15171 ;;		_caltime_to_epoch
 15172 ;;		_RTCC_adjust_time_inc
 15173 ;;		_RTCC_adjust_time_dec
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           	psect	text71
 15178  012ED0                     __ptext71:
 15179                           	opt stack 0
 15180  012ED0                     ___lmul:
 15181                           	opt stack 21
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;incstack = 0
 15185  012ED0  0E00               	movlw	0
 15186  012ED2  0100               	movlb	0	; () banked
 15187  012ED4  6FCA               	movwf	___lmul@product& (0+255),b
 15188  012ED6  0E00               	movlw	0
 15189  012ED8  6FCB               	movwf	(___lmul@product+1)& (0+255),b
 15190  012EDA  0E00               	movlw	0
 15191  012EDC  6FCC               	movwf	(___lmul@product+2)& (0+255),b
 15192  012EDE  0E00               	movlw	0
 15193  012EE0  6FCD               	movwf	(___lmul@product+3)& (0+255),b
 15194  012EE2                     l8228:
 15195                           
 15196                           ; BSR set to: 0
 15197  012EE2  0100               	movlb	0	; () banked
 15198  012EE4  A1C2               	btfss	___lmul@multiplier& (0+255),0,b
 15199  012EE6  D010               	goto	l8232
 15200                           
 15201                           ; BSR set to: 0
 15202  012EE8  0100               	movlb	0	; () banked
 15203  012EEA  51C6               	movf	___lmul@multiplicand& (0+255),w,b
 15204  012EEC  0100               	movlb	0	; () banked
 15205  012EEE  27CA               	addwf	___lmul@product& (0+255),f,b
 15206  012EF0  0100               	movlb	0	; () banked
 15207  012EF2  51C7               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 15208  012EF4  0100               	movlb	0	; () banked
 15209  012EF6  23CB               	addwfc	(___lmul@product+1)& (0+255),f,b
 15210  012EF8  0100               	movlb	0	; () banked
 15211  012EFA  51C8               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 15212  012EFC  0100               	movlb	0	; () banked
 15213  012EFE  23CC               	addwfc	(___lmul@product+2)& (0+255),f,b
 15214  012F00  0100               	movlb	0	; () banked
 15215  012F02  51C9               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 15216  012F04  0100               	movlb	0	; () banked
 15217  012F06  23CD               	addwfc	(___lmul@product+3)& (0+255),f,b
 15218  012F08                     l8232:
 15219                           
 15220                           ; BSR set to: 0
 15221  012F08  0100               	movlb	0	; () banked
 15222  012F0A  90D8               	bcf	status,0,c
 15223  012F0C  37C6               	rlcf	___lmul@multiplicand& (0+255),f,b
 15224  012F0E  37C7               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 15225  012F10  37C8               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 15226  012F12  37C9               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 15227                           
 15228                           ; BSR set to: 0
 15229  012F14  0100               	movlb	0	; () banked
 15230  012F16  90D8               	bcf	status,0,c
 15231  012F18  33C5               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 15232  012F1A  33C4               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 15233  012F1C  33C3               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 15234  012F1E  33C2               	rrcf	___lmul@multiplier& (0+255),f,b
 15235  012F20  0100               	movlb	0	; () banked
 15236  012F22  51C2               	movf	___lmul@multiplier& (0+255),w,b
 15237  012F24  0100               	movlb	0	; () banked
 15238  012F26  11C3               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 15239  012F28  0100               	movlb	0	; () banked
 15240  012F2A  11C4               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 15241  012F2C  0100               	movlb	0	; () banked
 15242  012F2E  11C5               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 15243  012F30  A4D8               	btfss	status,2,c
 15244  012F32  D7D7               	goto	l8228
 15245                           
 15246                           ; BSR set to: 0
 15247  012F34  C0CA  F0C2         	movff	___lmul@product,?___lmul
 15248  012F38  C0CB  F0C3         	movff	___lmul@product+1,?___lmul+1
 15249  012F3C  C0CC  F0C4         	movff	___lmul@product+2,?___lmul+2
 15250  012F40  C0CD  F0C5         	movff	___lmul@product+3,?___lmul+3
 15251                           
 15252                           ; BSR set to: 0
 15253  012F44  0012               	return		;funcret
 15254  012F46                     __end_of___lmul:
 15255                           	opt stack 0
 15256                           tblptru	equ	0xFF8
 15257                           tblptrh	equ	0xFF7
 15258                           tblptrl	equ	0xFF6
 15259                           tablat	equ	0xFF5
 15260                           prodh	equ	0xFF4
 15261                           prodl	equ	0xFF3
 15262                           intcon	equ	0xFF2
 15263                           intcon2	equ	0xFF1
 15264                           indf0	equ	0xFEF
 15265                           postinc0	equ	0xFEE
 15266                           fsr0h	equ	0xFEA
 15267                           fsr0l	equ	0xFE9
 15268                           wreg	equ	0xFE8
 15269                           indf1	equ	0xFE7
 15270                           postinc1	equ	0xFE6
 15271                           postdec1	equ	0xFE5
 15272                           fsr1h	equ	0xFE2
 15273                           fsr1l	equ	0xFE1
 15274                           indf2	equ	0xFDF
 15275                           postinc2	equ	0xFDE
 15276                           postdec2	equ	0xFDD
 15277                           plusw2	equ	0xFDB
 15278                           fsr2h	equ	0xFDA
 15279                           fsr2l	equ	0xFD9
 15280                           status	equ	0xFD8
 15281                           
 15282 ;; *************** function _RTCC_to_caltime *****************
 15283 ;; Defined at:
 15284 ;;		line 89 in file "../My_library/My_RTCC.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;  tm              2    1[BANK0 ] PTR struct .
 15287 ;;		 -> now(14), 
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;  dumy            1    3[BANK0 ] unsigned char 
 15290 ;; Return value:  Size  Location     Type
 15291 ;;		None               void
 15292 ;; Registers used:
 15293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15302 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15303 ;;Total ram usage:        3 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; Hardware stack levels required when called:    5
 15306 ;; This function calls:
 15307 ;;		_x_to_d
 15308 ;; This function is called by:
 15309 ;;		_RTCC_from_RTCC
 15310 ;; This function uses a non-reentrant model
 15311 ;;
 15312                           
 15313                           	psect	text72
 15314  0126CA                     __ptext72:
 15315                           	opt stack 0
 15316  0126CA                     _RTCC_to_caltime:
 15317                           	opt stack 22
 15318  0126CA                     l841:
 15319  0126CA  010F               	movlb	15	; () banked
 15320  0126CC  B93F               	btfsc	63,4,b	;volatile
 15321  0126CE  D7FD               	goto	l841
 15322                           
 15323                           ; BSR set to: 15
 15324                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 15325  0126D0  010F               	movlb	15	; () banked
 15326  0126D2  813F               	bsf	63,0,b	;volatile
 15327                           
 15328                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 15329  0126D4  010F               	movlb	15	; () banked
 15330  0126D6  833F               	bsf	63,1,b	;volatile
 15331                           
 15332                           ; BSR set to: 15
 15333                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 15334  0126D8  0100               	movlb	0	; () banked
 15335  0126DA  EE20 F00A          	lfsr	2,10
 15336  0126DE  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15337  0126E0  26D9               	addwf	fsr2l,f,c
 15338  0126E2  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15339  0126E4  22DA               	addwfc	fsr2h,f,c
 15340  0126E6  010F               	movlb	15	; () banked
 15341  0126E8  513A               	movf	58,w,b	;volatile
 15342  0126EA  EC55  F09B         	call	_x_to_d
 15343  0126EE  6EDF               	movwf	indf2,c
 15344                           
 15345                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 15346  0126F0  CF3B F0B8          	movff	3899,RTCC_to_caltime@dumy	;volatile
 15347                           
 15348                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 15349  0126F4  0100               	movlb	0	; () banked
 15350  0126F6  EE20 F008          	lfsr	2,8
 15351  0126FA  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15352  0126FC  26D9               	addwf	fsr2l,f,c
 15353  0126FE  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15354  012700  22DA               	addwfc	fsr2h,f,c
 15355  012702  010F               	movlb	15	; () banked
 15356  012704  513A               	movf	58,w,b	;volatile
 15357  012706  EC55  F09B         	call	_x_to_d
 15358  01270A  6EDF               	movwf	indf2,c
 15359                           
 15360                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 15361  01270C  0100               	movlb	0	; () banked
 15362  01270E  EE20 F009          	lfsr	2,9
 15363  012712  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15364  012714  26D9               	addwf	fsr2l,f,c
 15365  012716  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15366  012718  22DA               	addwfc	fsr2h,f,c
 15367  01271A  010F               	movlb	15	; () banked
 15368  01271C  513B               	movf	59,w,b	;volatile
 15369  01271E  EC55  F09B         	call	_x_to_d
 15370  012722  6EDF               	movwf	indf2,c
 15371                           
 15372                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 15373  012724  0100               	movlb	0	; () banked
 15374  012726  EE20 F006          	lfsr	2,6
 15375  01272A  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15376  01272C  26D9               	addwf	fsr2l,f,c
 15377  01272E  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15378  012730  22DA               	addwfc	fsr2h,f,c
 15379  012732  010F               	movlb	15	; () banked
 15380  012734  513A               	movf	58,w,b	;volatile
 15381  012736  EC55  F09B         	call	_x_to_d
 15382  01273A  6EDF               	movwf	indf2,c
 15383                           
 15384                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 15385  01273C  0100               	movlb	0	; () banked
 15386  01273E  EE20 F007          	lfsr	2,7
 15387  012742  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15388  012744  26D9               	addwf	fsr2l,f,c
 15389  012746  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15390  012748  22DA               	addwfc	fsr2h,f,c
 15391  01274A  010F               	movlb	15	; () banked
 15392  01274C  513B               	movf	59,w,b	;volatile
 15393  01274E  EC55  F09B         	call	_x_to_d
 15394  012752  6EDF               	movwf	indf2,c
 15395                           
 15396                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 15397  012754  0100               	movlb	0	; () banked
 15398  012756  EE20 F004          	lfsr	2,4
 15399  01275A  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15400  01275C  26D9               	addwf	fsr2l,f,c
 15401  01275E  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15402  012760  22DA               	addwfc	fsr2h,f,c
 15403  012762  010F               	movlb	15	; () banked
 15404  012764  513A               	movf	58,w,b	;volatile
 15405  012766  EC55  F09B         	call	_x_to_d
 15406  01276A  6EDF               	movwf	indf2,c
 15407                           
 15408                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 15409  01276C  0100               	movlb	0	; () banked
 15410  01276E  EE20 F005          	lfsr	2,5
 15411  012772  51B6               	movf	RTCC_to_caltime@tm& (0+255),w,b
 15412  012774  26D9               	addwf	fsr2l,f,c
 15413  012776  51B7               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 15414  012778  22DA               	addwfc	fsr2h,f,c
 15415  01277A  010F               	movlb	15	; () banked
 15416  01277C  513B               	movf	59,w,b	;volatile
 15417  01277E  EC55  F09B         	call	_x_to_d
 15418  012782  6EDF               	movwf	indf2,c
 15419  012784  0012               	return		;funcret
 15420  012786                     __end_of_RTCC_to_caltime:
 15421                           	opt stack 0
 15422                           tblptru	equ	0xFF8
 15423                           tblptrh	equ	0xFF7
 15424                           tblptrl	equ	0xFF6
 15425                           tablat	equ	0xFF5
 15426                           prodh	equ	0xFF4
 15427                           prodl	equ	0xFF3
 15428                           intcon	equ	0xFF2
 15429                           intcon2	equ	0xFF1
 15430                           indf0	equ	0xFEF
 15431                           postinc0	equ	0xFEE
 15432                           fsr0h	equ	0xFEA
 15433                           fsr0l	equ	0xFE9
 15434                           wreg	equ	0xFE8
 15435                           indf1	equ	0xFE7
 15436                           postinc1	equ	0xFE6
 15437                           postdec1	equ	0xFE5
 15438                           fsr1h	equ	0xFE2
 15439                           fsr1l	equ	0xFE1
 15440                           indf2	equ	0xFDF
 15441                           postinc2	equ	0xFDE
 15442                           postdec2	equ	0xFDD
 15443                           plusw2	equ	0xFDB
 15444                           fsr2h	equ	0xFDA
 15445                           fsr2l	equ	0xFD9
 15446                           status	equ	0xFD8
 15447                           
 15448 ;; *************** function _x_to_d *****************
 15449 ;; Defined at:
 15450 ;;		line 51 in file "../My_library/My_RTCC.c"
 15451 ;; Parameters:    Size  Location     Type
 15452 ;;  hex             1    wreg     unsigned char 
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;  hex             1    0[BANK0 ] unsigned char 
 15455 ;; Return value:  Size  Location     Type
 15456 ;;                  1    wreg      unsigned char 
 15457 ;; Registers used:
 15458 ;;		wreg, status,2, status,0, prodl, prodh
 15459 ;; Tracked objects:
 15460 ;;		On entry : 0/0
 15461 ;;		On exit  : 0/0
 15462 ;;		Unchanged: 0/0
 15463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15467 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15468 ;;Total ram usage:        2 bytes
 15469 ;; Hardware stack levels used:    1
 15470 ;; Hardware stack levels required when called:    4
 15471 ;; This function calls:
 15472 ;;		Nothing
 15473 ;; This function is called by:
 15474 ;;		_RTCC_to_caltime
 15475 ;; This function uses a non-reentrant model
 15476 ;;
 15477                           
 15478                           	psect	text73
 15479  0136AA                     __ptext73:
 15480                           	opt stack 0
 15481  0136AA                     _x_to_d:
 15482                           	opt stack 22
 15483                           
 15484                           ;incstack = 0
 15485                           ;x_to_d@hex stored from wreg
 15486  0136AA  0100               	movlb	0	; () banked
 15487  0136AC  6FB5               	movwf	x_to_d@hex& (0+255),b
 15488                           
 15489                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 15490  0136AE  C0B5  F020         	movff	x_to_d@hex,??_x_to_d
 15491  0136B2  0E0F               	movlw	15
 15492  0136B4  1620               	andwf	??_x_to_d,f,c
 15493  0136B6  0100               	movlb	0	; () banked
 15494  0136B8  39B5               	swapf	x_to_d@hex& (0+255),w,b
 15495  0136BA  0B0F               	andlw	15
 15496  0136BC  0B0F               	andlw	15
 15497  0136BE  0D0A               	mullw	10
 15498  0136C0  50F3               	movf	prodl,w,c
 15499  0136C2  2420               	addwf	??_x_to_d,w,c
 15500  0136C4  0012               	return	
 15501  0136C6                     __end_of_x_to_d:
 15502                           	opt stack 0
 15503                           tblptru	equ	0xFF8
 15504                           tblptrh	equ	0xFF7
 15505                           tblptrl	equ	0xFF6
 15506                           tablat	equ	0xFF5
 15507                           prodh	equ	0xFF4
 15508                           prodl	equ	0xFF3
 15509                           intcon	equ	0xFF2
 15510                           intcon2	equ	0xFF1
 15511                           indf0	equ	0xFEF
 15512                           postinc0	equ	0xFEE
 15513                           fsr0h	equ	0xFEA
 15514                           fsr0l	equ	0xFE9
 15515                           wreg	equ	0xFE8
 15516                           indf1	equ	0xFE7
 15517                           postinc1	equ	0xFE6
 15518                           postdec1	equ	0xFE5
 15519                           fsr1h	equ	0xFE2
 15520                           fsr1l	equ	0xFE1
 15521                           indf2	equ	0xFDF
 15522                           postinc2	equ	0xFDE
 15523                           postdec2	equ	0xFDD
 15524                           plusw2	equ	0xFDB
 15525                           fsr2h	equ	0xFDA
 15526                           fsr2l	equ	0xFD9
 15527                           status	equ	0xFD8
 15528                           
 15529 ;; *************** function _I2C_LCD_SetCursor *****************
 15530 ;; Defined at:
 15531 ;;		line 159 in file "../My_library/My_ST7032.c"
 15532 ;; Parameters:    Size  Location     Type
 15533 ;;  col             1    wreg     unsigned char 
 15534 ;;  row             1    5[BANK0 ] unsigned char 
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;  col             1    8[BANK0 ] unsigned char 
 15537 ;;  row_offsets     2    6[BANK0 ] unsigned char [2]
 15538 ;; Return value:  Size  Location     Type
 15539 ;;		None               void
 15540 ;; Registers used:
 15541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15542 ;; Tracked objects:
 15543 ;;		On entry : 0/0
 15544 ;;		On exit  : 0/0
 15545 ;;		Unchanged: 0/0
 15546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15547 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15548 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15550 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15551 ;;Total ram usage:        4 bytes
 15552 ;; Hardware stack levels used:    1
 15553 ;; Hardware stack levels required when called:    7
 15554 ;; This function calls:
 15555 ;;		_I2C_LCD_Command
 15556 ;; This function is called by:
 15557 ;;		_main
 15558 ;; This function uses a non-reentrant model
 15559 ;;
 15560                           
 15561                           	psect	text74
 15562  0135AA                     __ptext74:
 15563                           	opt stack 0
 15564  0135AA                     _I2C_LCD_SetCursor:
 15565                           	opt stack 23
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;incstack = 0
 15569                           ;I2C_LCD_SetCursor@col stored from wreg
 15570  0135AA  0100               	movlb	0	; () banked
 15571  0135AC  6FBD               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 15572                           
 15573                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 15574  0135AE  C1E7  F0BB         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 15575  0135B2  C1E8  F0BC         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 15576                           
 15577                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 15578  0135B6  0100               	movlb	0	; () banked
 15579  0135B8  51BA               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 15580  0135BA  0D01               	mullw	1
 15581  0135BC  0EBB               	movlw	low I2C_LCD_SetCursor@row_offsets
 15582  0135BE  24F3               	addwf	prodl,w,c
 15583  0135C0  6ED9               	movwf	fsr2l,c
 15584  0135C2  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 15585  0135C4  20F4               	addwfc	prodh,w,c
 15586  0135C6  6EDA               	movwf	fsr2h,c
 15587  0135C8  50DF               	movf	indf2,w,c
 15588  0135CA  0100               	movlb	0	; () banked
 15589  0135CC  25BD               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 15590  0135CE  0980               	iorlw	128
 15591  0135D0  EC03  F09A         	call	_I2C_LCD_Command
 15592  0135D4  0012               	return		;funcret
 15593  0135D6                     __end_of_I2C_LCD_SetCursor:
 15594                           	opt stack 0
 15595                           tblptru	equ	0xFF8
 15596                           tblptrh	equ	0xFF7
 15597                           tblptrl	equ	0xFF6
 15598                           tablat	equ	0xFF5
 15599                           prodh	equ	0xFF4
 15600                           prodl	equ	0xFF3
 15601                           intcon	equ	0xFF2
 15602                           intcon2	equ	0xFF1
 15603                           indf0	equ	0xFEF
 15604                           postinc0	equ	0xFEE
 15605                           fsr0h	equ	0xFEA
 15606                           fsr0l	equ	0xFE9
 15607                           wreg	equ	0xFE8
 15608                           indf1	equ	0xFE7
 15609                           postinc1	equ	0xFE6
 15610                           postdec1	equ	0xFE5
 15611                           fsr1h	equ	0xFE2
 15612                           fsr1l	equ	0xFE1
 15613                           indf2	equ	0xFDF
 15614                           postinc2	equ	0xFDE
 15615                           postdec2	equ	0xFDD
 15616                           plusw2	equ	0xFDB
 15617                           fsr2h	equ	0xFDA
 15618                           fsr2l	equ	0xFD9
 15619                           status	equ	0xFD8
 15620                           
 15621 ;; *************** function _I2C_LCD_Command *****************
 15622 ;; Defined at:
 15623 ;;		line 141 in file "../My_library/My_ST7032.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;  c               1    wreg     unsigned char 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;  c               1    3[BANK0 ] unsigned char 
 15628 ;;  ans             1    4[BANK0 ] unsigned char 
 15629 ;; Return value:  Size  Location     Type
 15630 ;;		None               void
 15631 ;; Registers used:
 15632 ;;		wreg, status,2, status,0, cstack
 15633 ;; Tracked objects:
 15634 ;;		On entry : 0/0
 15635 ;;		On exit  : 0/0
 15636 ;;		Unchanged: 0/0
 15637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;Total ram usage:        2 bytes
 15643 ;; Hardware stack levels used:    1
 15644 ;; Hardware stack levels required when called:    6
 15645 ;; This function calls:
 15646 ;;		_I2C_Send
 15647 ;;		_I2C_Start
 15648 ;;		_I2C_Stop
 15649 ;; This function is called by:
 15650 ;;		_I2C_LCD_Clear
 15651 ;;		_I2C_LCD_SetCursor
 15652 ;;		_I2C_LCD_init
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text75
 15657  013406                     __ptext75:
 15658                           	opt stack 0
 15659  013406                     _I2C_LCD_Command:
 15660                           	opt stack 22
 15661                           
 15662                           ;incstack = 0
 15663                           ;I2C_LCD_Command@c stored from wreg
 15664  013406  0100               	movlb	0	; () banked
 15665  013408  6FB8               	movwf	I2C_LCD_Command@c& (0+255),b
 15666                           
 15667                           ;My_ST7032.c: 142: uint8_t ans;
 15668                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 15669  01340A  0E00               	movlw	0
 15670  01340C  0100               	movlb	0	; () banked
 15671  01340E  6FB6               	movwf	I2C_Start@rw& (0+255),b
 15672  013410  0E3E               	movlw	62
 15673  013412  ECBD  F09A         	call	_I2C_Start
 15674  013416  0100               	movlb	0	; () banked
 15675  013418  6FB9               	movwf	I2C_LCD_Command@ans& (0+255),b
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;My_ST7032.c: 145: if (ans == 0) {
 15679  01341A  0100               	movlb	0	; () banked
 15680  01341C  51B9               	movf	I2C_LCD_Command@ans& (0+255),w,b
 15681  01341E  0100               	movlb	0	; () banked
 15682  013420  A4D8               	btfss	status,2,c
 15683  013422  D007               	goto	l1085
 15684                           
 15685                           ; BSR set to: 0
 15686                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 15687  013424  0E80               	movlw	128
 15688  013426  ECA3  F09B         	call	_I2C_Send
 15689                           
 15690                           ;My_ST7032.c: 148: I2C_Send(c);
 15691  01342A  0100               	movlb	0	; () banked
 15692  01342C  51B8               	movf	I2C_LCD_Command@c& (0+255),w,b
 15693  01342E  ECA3  F09B         	call	_I2C_Send
 15694  013432                     l1085:
 15695                           
 15696                           ;My_ST7032.c: 149: }
 15697                           ;My_ST7032.c: 150: I2C_Stop();
 15698  013432  ECCA  F09B         	call	_I2C_Stop	;wreg free
 15699                           
 15700                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 15701  013436  0E68               	movlw	104
 15702  013438                     u10747:
 15703  013438  2EE8               	decfsz	wreg,f,c
 15704  01343A  D7FE               	goto	u10747
 15705  01343C  0012               	return		;funcret
 15706  01343E                     __end_of_I2C_LCD_Command:
 15707                           	opt stack 0
 15708                           tblptru	equ	0xFF8
 15709                           tblptrh	equ	0xFF7
 15710                           tblptrl	equ	0xFF6
 15711                           tablat	equ	0xFF5
 15712                           prodh	equ	0xFF4
 15713                           prodl	equ	0xFF3
 15714                           intcon	equ	0xFF2
 15715                           intcon2	equ	0xFF1
 15716                           indf0	equ	0xFEF
 15717                           postinc0	equ	0xFEE
 15718                           fsr0h	equ	0xFEA
 15719                           fsr0l	equ	0xFE9
 15720                           wreg	equ	0xFE8
 15721                           indf1	equ	0xFE7
 15722                           postinc1	equ	0xFE6
 15723                           postdec1	equ	0xFE5
 15724                           fsr1h	equ	0xFE2
 15725                           fsr1l	equ	0xFE1
 15726                           indf2	equ	0xFDF
 15727                           postinc2	equ	0xFDE
 15728                           postdec2	equ	0xFDD
 15729                           plusw2	equ	0xFDB
 15730                           fsr2h	equ	0xFDA
 15731                           fsr2l	equ	0xFD9
 15732                           status	equ	0xFD8
 15733                           
 15734 ;; *************** function _I2C_LCD_Puts *****************
 15735 ;; Defined at:
 15736 ;;		line 178 in file "../My_library/My_ST7032.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;  s               2    3[BANK0 ] PTR const unsigned char 
 15739 ;;		 -> main@s(40), STR_42(9), STR_41(9), 
 15740 ;; Auto vars:     Size  Location     Type
 15741 ;;  ans             2    6[BANK0 ] int 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;		None               void
 15744 ;; Registers used:
 15745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15751 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15752 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15755 ;;Total ram usage:        5 bytes
 15756 ;; Hardware stack levels used:    1
 15757 ;; Hardware stack levels required when called:    6
 15758 ;; This function calls:
 15759 ;;		_I2C_Send
 15760 ;;		_I2C_Start
 15761 ;;		_I2C_Stop
 15762 ;; This function is called by:
 15763 ;;		_main
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           
 15767                           	psect	text76
 15768  012D52                     __ptext76:
 15769                           	opt stack 0
 15770  012D52                     _I2C_LCD_Puts:
 15771                           	opt stack 24
 15772                           
 15773                           ;My_ST7032.c: 179: int ans;
 15774                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 15775                           
 15776                           ;incstack = 0
 15777  012D52  0E00               	movlw	0
 15778  012D54  0100               	movlb	0	; () banked
 15779  012D56  6FB6               	movwf	I2C_Start@rw& (0+255),b
 15780  012D58  0E3E               	movlw	62
 15781  012D5A  ECBD  F09A         	call	_I2C_Start
 15782  012D5E  0100               	movlb	0	; () banked
 15783  012D60  6FBA               	movwf	??_I2C_LCD_Puts& (0+255),b
 15784  012D62  0100               	movlb	0	; () banked
 15785  012D64  51BA               	movf	??_I2C_LCD_Puts& (0+255),w,b
 15786  012D66  0100               	movlb	0	; () banked
 15787  012D68  6FBB               	movwf	I2C_LCD_Puts@ans& (0+255),b
 15788  012D6A  6BBC               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;My_ST7032.c: 182: if (ans == 0) {
 15792  012D6C  0100               	movlb	0	; () banked
 15793  012D6E  51BB               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 15794  012D70  0100               	movlb	0	; () banked
 15795  012D72  11BC               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 15796  012D74  A4D8               	btfss	status,2,c
 15797  012D76  D031               	goto	l9736
 15798                           
 15799                           ; BSR set to: 0
 15800                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 15801  012D78  0E40               	movlw	64
 15802  012D7A  ECA3  F09B         	call	_I2C_Send
 15803                           
 15804                           ;My_ST7032.c: 184: while (*s) {
 15805  012D7E  D019               	goto	l9734
 15806  012D80                     l9728:
 15807                           
 15808                           ;My_ST7032.c: 185: I2C_Send(*s++);
 15809  012D80  C0B8  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 15810  012D84  C0B9  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 15811  012D88  0E00               	movlw	low (__mediumconst shr (0+16))
 15812  012D8A  6EF8               	movwf	tblptru,c
 15813  012D8C  0E0E               	movlw	(high __ramtop+-1)
 15814  012D8E  64F7               	cpfsgt	tblptrh,c
 15815  012D90  D003               	bra	u9977
 15816  012D92  0008               	tblrd		*
 15817  012D94  50F5               	movf	tablat,w,c
 15818  012D96  D005               	bra	u9970
 15819  012D98                     u9977:
 15820  012D98  CFF6 FFE9          	movff	tblptrl,fsr0l
 15821  012D9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15822  012DA0  50EF               	movf	indf0,w,c
 15823  012DA2                     u9970:
 15824  012DA2  ECA3  F09B         	call	_I2C_Send
 15825  012DA6  0100               	movlb	0	; () banked
 15826  012DA8  4BB8               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 15827  012DAA  2BB9               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 15828                           
 15829                           ; BSR set to: 0
 15830                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 15831  012DAC  0E68               	movlw	104
 15832  012DAE                     u10757:
 15833  012DAE  2EE8               	decfsz	wreg,f,c
 15834  012DB0  D7FE               	goto	u10757
 15835  012DB2                     l9734:
 15836  012DB2  C0B8  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 15837  012DB6  C0B9  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 15838  012DBA  0E00               	movlw	low (__mediumconst shr (0+16))
 15839  012DBC  6EF8               	movwf	tblptru,c
 15840  012DBE  0E0E               	movlw	(high __ramtop+-1)
 15841  012DC0  64F7               	cpfsgt	tblptrh,c
 15842  012DC2  D003               	bra	u9987
 15843  012DC4  0008               	tblrd		*
 15844  012DC6  50F5               	movf	tablat,w,c
 15845  012DC8  D005               	bra	u9980
 15846  012DCA                     u9987:
 15847  012DCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 15848  012DCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 15849  012DD2  50EF               	movf	indf0,w,c
 15850  012DD4                     u9980:
 15851  012DD4  0900               	iorlw	0
 15852  012DD6  A4D8               	btfss	status,2,c
 15853  012DD8  D7D3               	goto	l9728
 15854  012DDA                     l9736:
 15855                           
 15856                           ;My_ST7032.c: 187: }
 15857                           ;My_ST7032.c: 188: }
 15858                           ;My_ST7032.c: 189: I2C_Stop();
 15859  012DDA  ECCA  F09B         	call	_I2C_Stop	;wreg free
 15860  012DDE  0012               	return		;funcret
 15861  012DE0                     __end_of_I2C_LCD_Puts:
 15862                           	opt stack 0
 15863                           tblptru	equ	0xFF8
 15864                           tblptrh	equ	0xFF7
 15865                           tblptrl	equ	0xFF6
 15866                           tablat	equ	0xFF5
 15867                           prodh	equ	0xFF4
 15868                           prodl	equ	0xFF3
 15869                           intcon	equ	0xFF2
 15870                           intcon2	equ	0xFF1
 15871                           indf0	equ	0xFEF
 15872                           postinc0	equ	0xFEE
 15873                           fsr0h	equ	0xFEA
 15874                           fsr0l	equ	0xFE9
 15875                           wreg	equ	0xFE8
 15876                           indf1	equ	0xFE7
 15877                           postinc1	equ	0xFE6
 15878                           postdec1	equ	0xFE5
 15879                           fsr1h	equ	0xFE2
 15880                           fsr1l	equ	0xFE1
 15881                           indf2	equ	0xFDF
 15882                           postinc2	equ	0xFDE
 15883                           postdec2	equ	0xFDD
 15884                           plusw2	equ	0xFDB
 15885                           fsr2h	equ	0xFDA
 15886                           fsr2l	equ	0xFD9
 15887                           status	equ	0xFD8
 15888                           
 15889 ;; *************** function _I2C_Stop *****************
 15890 ;; Defined at:
 15891 ;;		line 96 in file "../My_library/My_I2C.c"
 15892 ;; Parameters:    Size  Location     Type
 15893 ;;		None
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;		None
 15896 ;; Return value:  Size  Location     Type
 15897 ;;		None               void
 15898 ;; Registers used:
 15899 ;;		wreg, status,2, status,0, cstack
 15900 ;; Tracked objects:
 15901 ;;		On entry : 0/0
 15902 ;;		On exit  : 0/0
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15909 ;;Total ram usage:        0 bytes
 15910 ;; Hardware stack levels used:    1
 15911 ;; Hardware stack levels required when called:    5
 15912 ;; This function calls:
 15913 ;;		_I2C_IdleCheck
 15914 ;; This function is called by:
 15915 ;;		_I2C_LCD_Command
 15916 ;;		_I2C_LCD_Puts
 15917 ;;		_I2C_LCD_Putc
 15918 ;;		_I2C_LCD_CreateChar
 15919 ;; This function uses a non-reentrant model
 15920 ;;
 15921                           
 15922                           	psect	text77
 15923  013794                     __ptext77:
 15924                           	opt stack 0
 15925  013794                     _I2C_Stop:
 15926                           	opt stack 22
 15927                           
 15928                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 15929                           
 15930                           ;incstack = 0
 15931  013794  0E05               	movlw	5
 15932  013796  EC8A  F09B         	call	_I2C_IdleCheck
 15933                           
 15934                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 15935  01379A  84C5               	bsf	4037,2,c	;volatile
 15936  01379C  0012               	return		;funcret
 15937  01379E                     __end_of_I2C_Stop:
 15938                           	opt stack 0
 15939                           tblptru	equ	0xFF8
 15940                           tblptrh	equ	0xFF7
 15941                           tblptrl	equ	0xFF6
 15942                           tablat	equ	0xFF5
 15943                           prodh	equ	0xFF4
 15944                           prodl	equ	0xFF3
 15945                           intcon	equ	0xFF2
 15946                           intcon2	equ	0xFF1
 15947                           indf0	equ	0xFEF
 15948                           postinc0	equ	0xFEE
 15949                           fsr0h	equ	0xFEA
 15950                           fsr0l	equ	0xFE9
 15951                           wreg	equ	0xFE8
 15952                           indf1	equ	0xFE7
 15953                           postinc1	equ	0xFE6
 15954                           postdec1	equ	0xFE5
 15955                           fsr1h	equ	0xFE2
 15956                           fsr1l	equ	0xFE1
 15957                           indf2	equ	0xFDF
 15958                           postinc2	equ	0xFDE
 15959                           postdec2	equ	0xFDD
 15960                           plusw2	equ	0xFDB
 15961                           fsr2h	equ	0xFDA
 15962                           fsr2l	equ	0xFD9
 15963                           status	equ	0xFD8
 15964                           
 15965 ;; *************** function _I2C_Start *****************
 15966 ;; Defined at:
 15967 ;;		line 72 in file "../My_library/My_I2C.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;  adrs            1    wreg     unsigned char 
 15970 ;;  rw              1    1[BANK0 ] unsigned char 
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;  adrs            1    2[BANK0 ] unsigned char 
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  1    wreg      unsigned char 
 15975 ;; Registers used:
 15976 ;;		wreg, status,2, status,0, cstack
 15977 ;; Tracked objects:
 15978 ;;		On entry : 0/0
 15979 ;;		On exit  : 0/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;Total ram usage:        2 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; Hardware stack levels required when called:    5
 15989 ;; This function calls:
 15990 ;;		_I2C_IdleCheck
 15991 ;; This function is called by:
 15992 ;;		_I2C_LCD_Command
 15993 ;;		_I2C_LCD_Puts
 15994 ;;		_I2C_LCD_Putc
 15995 ;;		_I2C_LCD_CreateChar
 15996 ;; This function uses a non-reentrant model
 15997 ;;
 15998                           
 15999                           	psect	text78
 16000  01357A                     __ptext78:
 16001                           	opt stack 0
 16002  01357A                     _I2C_Start:
 16003                           	opt stack 22
 16004                           
 16005                           ;incstack = 0
 16006                           ;I2C_Start@adrs stored from wreg
 16007  01357A  0100               	movlb	0	; () banked
 16008  01357C  6FB7               	movwf	I2C_Start@adrs& (0+255),b
 16009                           
 16010                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 16011  01357E  0E05               	movlw	5
 16012  013580  EC8A  F09B         	call	_I2C_IdleCheck
 16013                           
 16014                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 16015  013584  80C5               	bsf	4037,0,c	;volatile
 16016                           
 16017                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 16018  013586  0E05               	movlw	5
 16019  013588  EC8A  F09B         	call	_I2C_IdleCheck
 16020                           
 16021                           ;My_I2C.c: 78: SSP1IF = 0;
 16022  01358C  969E               	bcf	3998,3,c	;volatile
 16023                           
 16024                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 16025  01358E  0100               	movlb	0	; () banked
 16026  013590  51B7               	movf	I2C_Start@adrs& (0+255),w,b
 16027  013592  25B7               	addwf	I2C_Start@adrs& (0+255),w,b
 16028  013594  0100               	movlb	0	; () banked
 16029  013596  25B6               	addwf	I2C_Start@rw& (0+255),w,b
 16030  013598  6EC9               	movwf	4041,c	;volatile
 16031  01359A                     l612:
 16032  01359A  A69E               	btfss	3998,3,c	;volatile
 16033  01359C  D7FE               	goto	l612
 16034                           
 16035                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 16036  01359E  ACC5               	btfss	4037,6,c	;volatile
 16037  0135A0  D002               	goto	u8310
 16038  0135A2  0E01               	movlw	1
 16039  0135A4  0012               	return	
 16040  0135A6                     u8310:
 16041  0135A6  0E00               	movlw	0
 16042  0135A8  0012               	return	
 16043  0135AA                     __end_of_I2C_Start:
 16044                           	opt stack 0
 16045                           tblptru	equ	0xFF8
 16046                           tblptrh	equ	0xFF7
 16047                           tblptrl	equ	0xFF6
 16048                           tablat	equ	0xFF5
 16049                           prodh	equ	0xFF4
 16050                           prodl	equ	0xFF3
 16051                           intcon	equ	0xFF2
 16052                           intcon2	equ	0xFF1
 16053                           indf0	equ	0xFEF
 16054                           postinc0	equ	0xFEE
 16055                           fsr0h	equ	0xFEA
 16056                           fsr0l	equ	0xFE9
 16057                           wreg	equ	0xFE8
 16058                           indf1	equ	0xFE7
 16059                           postinc1	equ	0xFE6
 16060                           postdec1	equ	0xFE5
 16061                           fsr1h	equ	0xFE2
 16062                           fsr1l	equ	0xFE1
 16063                           indf2	equ	0xFDF
 16064                           postinc2	equ	0xFDE
 16065                           postdec2	equ	0xFDD
 16066                           plusw2	equ	0xFDB
 16067                           fsr2h	equ	0xFDA
 16068                           fsr2l	equ	0xFD9
 16069                           status	equ	0xFD8
 16070                           
 16071 ;; *************** function _I2C_Send *****************
 16072 ;; Defined at:
 16073 ;;		line 102 in file "../My_library/My_I2C.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;  data            1    wreg     unsigned char 
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;  data            1    1[BANK0 ] unsigned char 
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      unsigned char 
 16080 ;; Registers used:
 16081 ;;		wreg, status,2, status,0, cstack
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/0
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16091 ;;Total ram usage:        1 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:    5
 16094 ;; This function calls:
 16095 ;;		_I2C_IdleCheck
 16096 ;; This function is called by:
 16097 ;;		_I2C_LCD_Command
 16098 ;;		_I2C_LCD_Puts
 16099 ;;		_I2C_LCD_Putc
 16100 ;;		_I2C_LCD_CreateChar
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           	psect	text79
 16105  013746                     __ptext79:
 16106                           	opt stack 0
 16107  013746                     _I2C_Send:
 16108                           	opt stack 22
 16109                           
 16110                           ;incstack = 0
 16111                           ;I2C_Send@data stored from wreg
 16112  013746  0100               	movlb	0	; () banked
 16113  013748  6FB6               	movwf	I2C_Send@data& (0+255),b
 16114                           
 16115                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 16116  01374A  0E05               	movlw	5
 16117  01374C  EC8A  F09B         	call	_I2C_IdleCheck
 16118                           
 16119                           ;My_I2C.c: 104: SSP1IF = 0;
 16120  013750  969E               	bcf	3998,3,c	;volatile
 16121                           
 16122                           ;My_I2C.c: 105: SSP1BUF = data;
 16123  013752  C0B6  FFC9         	movff	I2C_Send@data,4041	;volatile
 16124  013756                     l627:
 16125  013756  A69E               	btfss	3998,3,c	;volatile
 16126  013758  D7FE               	goto	l627
 16127                           
 16128                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 16129                           ;	Return value of _I2C_Send is never used
 16130  01375A  50C5               	movf	4037,w,c	;volatile
 16131  01375C  0012               	return	
 16132  01375E                     __end_of_I2C_Send:
 16133                           	opt stack 0
 16134                           tblptru	equ	0xFF8
 16135                           tblptrh	equ	0xFF7
 16136                           tblptrl	equ	0xFF6
 16137                           tablat	equ	0xFF5
 16138                           prodh	equ	0xFF4
 16139                           prodl	equ	0xFF3
 16140                           intcon	equ	0xFF2
 16141                           intcon2	equ	0xFF1
 16142                           indf0	equ	0xFEF
 16143                           postinc0	equ	0xFEE
 16144                           fsr0h	equ	0xFEA
 16145                           fsr0l	equ	0xFE9
 16146                           wreg	equ	0xFE8
 16147                           indf1	equ	0xFE7
 16148                           postinc1	equ	0xFE6
 16149                           postdec1	equ	0xFE5
 16150                           fsr1h	equ	0xFE2
 16151                           fsr1l	equ	0xFE1
 16152                           indf2	equ	0xFDF
 16153                           postinc2	equ	0xFDE
 16154                           postdec2	equ	0xFDD
 16155                           plusw2	equ	0xFDB
 16156                           fsr2h	equ	0xFDA
 16157                           fsr2l	equ	0xFD9
 16158                           status	equ	0xFD8
 16159                           
 16160 ;; *************** function _I2C_IdleCheck *****************
 16161 ;; Defined at:
 16162 ;;		line 58 in file "../My_library/My_I2C.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;  mask            1    wreg     unsigned char 
 16165 ;; Auto vars:     Size  Location     Type
 16166 ;;  mask            1    0[BANK0 ] unsigned char 
 16167 ;; Return value:  Size  Location     Type
 16168 ;;		None               void
 16169 ;; Registers used:
 16170 ;;		wreg, status,2, status,0
 16171 ;; Tracked objects:
 16172 ;;		On entry : 0/0
 16173 ;;		On exit  : 0/0
 16174 ;;		Unchanged: 0/0
 16175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16179 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16180 ;;Total ram usage:        2 bytes
 16181 ;; Hardware stack levels used:    1
 16182 ;; Hardware stack levels required when called:    4
 16183 ;; This function calls:
 16184 ;;		Nothing
 16185 ;; This function is called by:
 16186 ;;		_I2C_Start
 16187 ;;		_I2C_Stop
 16188 ;;		_I2C_Send
 16189 ;;		_I2C_rStart
 16190 ;;		_I2C_Receive
 16191 ;; This function uses a non-reentrant model
 16192 ;;
 16193                           
 16194                           	psect	text80
 16195  013714                     __ptext80:
 16196                           	opt stack 0
 16197  013714                     _I2C_IdleCheck:
 16198                           	opt stack 22
 16199                           
 16200                           ;incstack = 0
 16201                           ;I2C_IdleCheck@mask stored from wreg
 16202  013714  0100               	movlb	0	; () banked
 16203  013716  6FB5               	movwf	I2C_IdleCheck@mask& (0+255),b
 16204  013718                     l8224:
 16205  013718  50C7               	movf	4039,w,c	;volatile
 16206  01371A  0100               	movlb	0	; () banked
 16207  01371C  15B5               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 16208  01371E  6E20               	movwf	??_I2C_IdleCheck& (0+255),c
 16209  013720  50C5               	movf	4037,w,c	;volatile
 16210  013722  0B1F               	andlw	31
 16211  013724  1020               	iorwf	??_I2C_IdleCheck,w,c
 16212  013726  0900               	iorlw	0
 16213  013728  B4D8               	btfsc	status,2,c
 16214  01372A  0012               	return	
 16215  01372C  D7F5               	goto	l8224
 16216  01372E                     __end_of_I2C_IdleCheck:
 16217                           	opt stack 0
 16218                           tblptru	equ	0xFF8
 16219                           tblptrh	equ	0xFF7
 16220                           tblptrl	equ	0xFF6
 16221                           tablat	equ	0xFF5
 16222                           prodh	equ	0xFF4
 16223                           prodl	equ	0xFF3
 16224                           intcon	equ	0xFF2
 16225                           intcon2	equ	0xFF1
 16226                           indf0	equ	0xFEF
 16227                           postinc0	equ	0xFEE
 16228                           fsr0h	equ	0xFEA
 16229                           fsr0l	equ	0xFE9
 16230                           wreg	equ	0xFE8
 16231                           indf1	equ	0xFE7
 16232                           postinc1	equ	0xFE6
 16233                           postdec1	equ	0xFE5
 16234                           fsr1h	equ	0xFE2
 16235                           fsr1l	equ	0xFE1
 16236                           indf2	equ	0xFDF
 16237                           postinc2	equ	0xFDE
 16238                           postdec2	equ	0xFDD
 16239                           plusw2	equ	0xFDB
 16240                           fsr2h	equ	0xFDA
 16241                           fsr2l	equ	0xFD9
 16242                           status	equ	0xFD8
 16243                           
 16244 ;; *************** function _ISR *****************
 16245 ;; Defined at:
 16246 ;;		line 46 in file "main.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;		None
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;		None
 16251 ;; Return value:  Size  Location     Type
 16252 ;;		None               void
 16253 ;; Registers used:
 16254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16255 ;; Tracked objects:
 16256 ;;		On entry : 0/0
 16257 ;;		On exit  : 0/0
 16258 ;;		Unchanged: 0/0
 16259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16263 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16264 ;;Total ram usage:       15 bytes
 16265 ;; Hardware stack levels used:    1
 16266 ;; Hardware stack levels required when called:    3
 16267 ;; This function calls:
 16268 ;;		_UART_ISR
 16269 ;;		_USB_ISR
 16270 ;; This function is called by:
 16271 ;;		Interrupt level 2
 16272 ;; This function uses a non-reentrant model
 16273 ;;
 16274                           
 16275                           	psect	intcode
 16276  001008                     __pintcode:
 16277                           	opt stack 0
 16278  001008                     _ISR:
 16279                           	opt stack 17
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;incstack = 0
 16283  001008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16284  00100A  CFFA F012          	movff	pclath,??_ISR+1
 16285  00100E  CFFB F013          	movff	pclatu,??_ISR+2
 16286  001012  CFE9 F014          	movff	fsr0l,??_ISR+3
 16287  001016  CFEA F015          	movff	fsr0h,??_ISR+4
 16288  00101A  CFE1 F016          	movff	fsr1l,??_ISR+5
 16289  00101E  CFE2 F017          	movff	fsr1h,??_ISR+6
 16290  001022  CFD9 F018          	movff	fsr2l,??_ISR+7
 16291  001026  CFDA F019          	movff	fsr2h,??_ISR+8
 16292  00102A  CFF3 F01A          	movff	prodl,??_ISR+9
 16293  00102E  CFF4 F01B          	movff	prodh,??_ISR+10
 16294  001032  CFF6 F01C          	movff	tblptrl,??_ISR+11
 16295  001036  CFF7 F01D          	movff	tblptrh,??_ISR+12
 16296  00103A  CFF8 F01E          	movff	tblptru,??_ISR+13
 16297  00103E  CFF5 F01F          	movff	tablat,??_ISR+14
 16298                           
 16299                           ;main.c: 47: USB_ISR();
 16300  001042  ECD1  F09B         	call	_USB_ISR	;wreg free
 16301                           
 16302                           ;main.c: 48: UART_ISR();
 16303  001046  EC48  F099         	call	_UART_ISR	;wreg free
 16304                           
 16305                           ;main.c: 49: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 16306  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 16307  00104C  AAF2               	btfss	intcon,5,c	;volatile
 16308  00104E  D001               	goto	i2l1449
 16309                           
 16310                           ;main.c: 50: INTCONbits.T0IF = 0;
 16311  001050  94F2               	bcf	intcon,2,c	;volatile
 16312  001052                     i2l1449:
 16313                           
 16314                           ;main.c: 51: }
 16315                           ;main.c: 52: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 16316  001052  B09E               	btfsc	3998,0,c	;volatile
 16317  001054  A09D               	btfss	3997,0,c	;volatile
 16318  001056  D00E               	goto	i2l7728
 16319                           
 16320                           ;main.c: 53: PIR1bits.TMR1IF = 0;
 16321  001058  909E               	bcf	3998,0,c	;volatile
 16322                           
 16323                           ;main.c: 54: TMR1H = 0xC0;
 16324  00105A  0EC0               	movlw	192
 16325  00105C  6ECF               	movwf	4047,c	;volatile
 16326                           
 16327                           ;main.c: 55: LATAbits.LATA0 = !LATAbits.LATA0;
 16328  00105E  B089               	btfsc	3977,0,c	;volatile
 16329  001060  D003               	goto	i2u730_40
 16330  001062  6A11               	clrf	??_ISR& (0+255),c
 16331  001064  2A11               	incf	??_ISR& (0+255),f,c
 16332  001066  D001               	goto	i2u731_48
 16333  001068                     i2u730_40:
 16334  001068  6A11               	clrf	??_ISR& (0+255),c
 16335  00106A                     i2u731_48:
 16336  00106A  5089               	movf	3977,w,c	;volatile
 16337  00106C  1811               	xorwf	??_ISR,w,c
 16338  00106E  0BFE               	andlw	-2
 16339  001070  1811               	xorwf	??_ISR,w,c
 16340  001072  6E89               	movwf	3977,c	;volatile
 16341  001074                     i2l7728:
 16342                           
 16343                           ;main.c: 56: }
 16344                           ;main.c: 57: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 16345  001074  B2A1               	btfsc	4001,1,c	;volatile
 16346  001076  A2A0               	btfss	4000,1,c	;volatile
 16347  001078  D001               	goto	i2l1452
 16348                           
 16349                           ;main.c: 58: PIR2bits.TMR3IF = 0;
 16350  00107A  92A1               	bcf	4001,1,c	;volatile
 16351  00107C                     i2l1452:
 16352  00107C  C01F  FFF5         	movff	??_ISR+14,tablat
 16353  001080  C01E  FFF8         	movff	??_ISR+13,tblptru
 16354  001084  C01D  FFF7         	movff	??_ISR+12,tblptrh
 16355  001088  C01C  FFF6         	movff	??_ISR+11,tblptrl
 16356  00108C  C01B  FFF4         	movff	??_ISR+10,prodh
 16357  001090  C01A  FFF3         	movff	??_ISR+9,prodl
 16358  001094  C019  FFDA         	movff	??_ISR+8,fsr2h
 16359  001098  C018  FFD9         	movff	??_ISR+7,fsr2l
 16360  00109C  C017  FFE2         	movff	??_ISR+6,fsr1h
 16361  0010A0  C016  FFE1         	movff	??_ISR+5,fsr1l
 16362  0010A4  C015  FFEA         	movff	??_ISR+4,fsr0h
 16363  0010A8  C014  FFE9         	movff	??_ISR+3,fsr0l
 16364  0010AC  C013  FFFB         	movff	??_ISR+2,pclatu
 16365  0010B0  C012  FFFA         	movff	??_ISR+1,pclath
 16366  0010B4  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16367  0010B6  0011               	retfie		f
 16368  0010B8                     __end_of_ISR:
 16369                           	opt stack 0
 16370                           pclatu	equ	0xFFB
 16371                           pclath	equ	0xFFA
 16372                           tblptru	equ	0xFF8
 16373                           tblptrh	equ	0xFF7
 16374                           tblptrl	equ	0xFF6
 16375                           tablat	equ	0xFF5
 16376                           prodh	equ	0xFF4
 16377                           prodl	equ	0xFF3
 16378                           intcon	equ	0xFF2
 16379                           intcon2	equ	0xFF1
 16380                           indf0	equ	0xFEF
 16381                           postinc0	equ	0xFEE
 16382                           fsr0h	equ	0xFEA
 16383                           fsr0l	equ	0xFE9
 16384                           wreg	equ	0xFE8
 16385                           indf1	equ	0xFE7
 16386                           postinc1	equ	0xFE6
 16387                           postdec1	equ	0xFE5
 16388                           fsr1h	equ	0xFE2
 16389                           fsr1l	equ	0xFE1
 16390                           indf2	equ	0xFDF
 16391                           postinc2	equ	0xFDE
 16392                           postdec2	equ	0xFDD
 16393                           plusw2	equ	0xFDB
 16394                           fsr2h	equ	0xFDA
 16395                           fsr2l	equ	0xFD9
 16396                           status	equ	0xFD8
 16397                           
 16398 ;; *************** function _USB_ISR *****************
 16399 ;; Defined at:
 16400 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 16401 ;; Parameters:    Size  Location     Type
 16402 ;;		None
 16403 ;; Auto vars:     Size  Location     Type
 16404 ;;		None
 16405 ;; Return value:  Size  Location     Type
 16406 ;;		None               void
 16407 ;; Registers used:
 16408 ;;		None
 16409 ;; Tracked objects:
 16410 ;;		On entry : 0/0
 16411 ;;		On exit  : 0/0
 16412 ;;		Unchanged: 0/0
 16413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16418 ;;Total ram usage:        0 bytes
 16419 ;; Hardware stack levels used:    1
 16420 ;; This function calls:
 16421 ;;		Nothing
 16422 ;; This function is called by:
 16423 ;;		_ISR
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           	psect	text82
 16428  0137A2                     __ptext82:
 16429                           	opt stack 0
 16430  0137A2                     _USB_ISR:
 16431                           	opt stack 19
 16432                           
 16433                           ;incstack = 0
 16434  0137A2  0012               	return		;funcret
 16435  0137A4                     __end_of_USB_ISR:
 16436                           	opt stack 0
 16437                           pclatu	equ	0xFFB
 16438                           pclath	equ	0xFFA
 16439                           tblptru	equ	0xFF8
 16440                           tblptrh	equ	0xFF7
 16441                           tblptrl	equ	0xFF6
 16442                           tablat	equ	0xFF5
 16443                           prodh	equ	0xFF4
 16444                           prodl	equ	0xFF3
 16445                           intcon	equ	0xFF2
 16446                           intcon2	equ	0xFF1
 16447                           indf0	equ	0xFEF
 16448                           postinc0	equ	0xFEE
 16449                           fsr0h	equ	0xFEA
 16450                           fsr0l	equ	0xFE9
 16451                           wreg	equ	0xFE8
 16452                           indf1	equ	0xFE7
 16453                           postinc1	equ	0xFE6
 16454                           postdec1	equ	0xFE5
 16455                           fsr1h	equ	0xFE2
 16456                           fsr1l	equ	0xFE1
 16457                           indf2	equ	0xFDF
 16458                           postinc2	equ	0xFDE
 16459                           postdec2	equ	0xFDD
 16460                           plusw2	equ	0xFDB
 16461                           fsr2h	equ	0xFDA
 16462                           fsr2l	equ	0xFD9
 16463                           status	equ	0xFD8
 16464                           
 16465 ;; *************** function _UART_ISR *****************
 16466 ;; Defined at:
 16467 ;;		line 29 in file "../My_library/My_UART.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;  ascii           1   15[COMRAM] unsigned char 
 16472 ;; Return value:  Size  Location     Type
 16473 ;;		None               void
 16474 ;; Registers used:
 16475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16485 ;;Total ram usage:        1 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    2
 16488 ;; This function calls:
 16489 ;;		i2_ringbuf_num
 16490 ;;		i2_ringbuf_pop
 16491 ;;		i2_ringbuf_put
 16492 ;; This function is called by:
 16493 ;;		_ISR
 16494 ;; This function uses a non-reentrant model
 16495 ;;
 16496                           
 16497                           	psect	text83
 16498  013290                     __ptext83:
 16499                           	opt stack 0
 16500  013290                     _UART_ISR:
 16501                           	opt stack 17
 16502                           
 16503                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 16504                           
 16505                           ;incstack = 0
 16506  013290  B89D               	btfsc	3997,4,c	;volatile
 16507  013292  A89E               	btfss	3998,4,c	;volatile
 16508  013294  D013               	goto	i2l1272
 16509                           
 16510                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 16511  013296  0EC8               	movlw	low _uart_tx
 16512  013298  6E01               	movwf	i2ringbuf_num@rb,c
 16513  01329A  0E01               	movlw	high _uart_tx
 16514  01329C  6E02               	movwf	i2ringbuf_num@rb+1,c
 16515  01329E  ECC3  F093         	call	i2_ringbuf_num	;wreg free
 16516  0132A2  5001               	movf	?i2_ringbuf_num,w,c
 16517  0132A4  1002               	iorwf	?i2_ringbuf_num+1,w,c
 16518  0132A6  B4D8               	btfsc	status,2,c
 16519  0132A8  D008               	goto	i2l1273
 16520                           
 16521                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 16522  0132AA  0EC8               	movlw	low _uart_tx
 16523  0132AC  6E09               	movwf	i2ringbuf_pop@rb,c
 16524  0132AE  0E01               	movlw	high _uart_tx
 16525  0132B0  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 16526  0132B2  ECD4  F094         	call	i2_ringbuf_pop	;wreg free
 16527  0132B6  6EAE               	movwf	4014,c	;volatile
 16528                           
 16529                           ;My_UART.c: 33: } else {
 16530  0132B8  D001               	goto	i2l1272
 16531  0132BA                     i2l1273:
 16532                           
 16533                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 16534  0132BA  989D               	bcf	3997,4,c	;volatile
 16535  0132BC                     i2l1272:
 16536                           
 16537                           ;My_UART.c: 35: }
 16538                           ;My_UART.c: 36: }
 16539                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 16540  0132BC  AA9D               	btfss	3997,5,c	;volatile
 16541  0132BE  0012               	return	
 16542  0132C0  AA9E               	btfss	3998,5,c	;volatile
 16543  0132C2  0012               	return	
 16544                           
 16545                           ;My_UART.c: 38: char ascii = RCREG1;
 16546  0132C4  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 16547                           
 16548                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 16549  0132C8  0EC0               	movlw	low _uart_rx
 16550  0132CA  6E09               	movwf	i2ringbuf_put@rb,c
 16551  0132CC  0E01               	movlw	high _uart_rx
 16552  0132CE  6E0A               	movwf	i2ringbuf_put@rb+1,c
 16553  0132D0  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 16554  0132D4  EC21  F094         	call	i2_ringbuf_put	;wreg free
 16555  0132D8  0012               	return	
 16556  0132DA                     __end_of_UART_ISR:
 16557                           	opt stack 0
 16558                           pclatu	equ	0xFFB
 16559                           pclath	equ	0xFFA
 16560                           tblptru	equ	0xFF8
 16561                           tblptrh	equ	0xFF7
 16562                           tblptrl	equ	0xFF6
 16563                           tablat	equ	0xFF5
 16564                           prodh	equ	0xFF4
 16565                           prodl	equ	0xFF3
 16566                           intcon	equ	0xFF2
 16567                           intcon2	equ	0xFF1
 16568                           indf0	equ	0xFEF
 16569                           postinc0	equ	0xFEE
 16570                           fsr0h	equ	0xFEA
 16571                           fsr0l	equ	0xFE9
 16572                           wreg	equ	0xFE8
 16573                           indf1	equ	0xFE7
 16574                           postinc1	equ	0xFE6
 16575                           postdec1	equ	0xFE5
 16576                           fsr1h	equ	0xFE2
 16577                           fsr1l	equ	0xFE1
 16578                           indf2	equ	0xFDF
 16579                           postinc2	equ	0xFDE
 16580                           postdec2	equ	0xFDD
 16581                           plusw2	equ	0xFDB
 16582                           fsr2h	equ	0xFDA
 16583                           fsr2l	equ	0xFD9
 16584                           status	equ	0xFD8
 16585                           
 16586 ;; *************** function i2_ringbuf_put *****************
 16587 ;; Defined at:
 16588 ;;		line 20 in file "../My_library/My_ringbuf.c"
 16589 ;; Parameters:    Size  Location     Type
 16590 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 16591 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 16592 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 16593 ;;  asciicode       1   10[COMRAM] unsigned char 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;		None               void
 16598 ;; Registers used:
 16599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16605 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16607 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16609 ;;Total ram usage:        7 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:    1
 16612 ;; This function calls:
 16613 ;;		i2_ringbuf_num
 16614 ;; This function is called by:
 16615 ;;		_UART_ISR
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           	psect	text84
 16620  012842                     __ptext84:
 16621                           	opt stack 0
 16622  012842                     i2_ringbuf_put:
 16623                           	opt stack 17
 16624                           
 16625                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 16626                           
 16627                           ;incstack = 0
 16628  012842  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 16629  012846  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 16630  01284A  ECC3  F093         	call	i2_ringbuf_num	;wreg free
 16631  01284E  EE20 F002          	lfsr	2,2
 16632  012852  5009               	movf	i2ringbuf_put@rb,w,c
 16633  012854  26D9               	addwf	fsr2l,f,c
 16634  012856  500A               	movf	i2ringbuf_put@rb+1,w,c
 16635  012858  22DA               	addwfc	fsr2h,f,c
 16636  01285A  50DE               	movf	postinc2,w,c
 16637  01285C  5C01               	subwf	?i2_ringbuf_num,w,c
 16638  01285E  50DE               	movf	postinc2,w,c
 16639  012860  5802               	subwfb	?i2_ringbuf_num+1,w,c
 16640  012862  B0D8               	btfsc	status,0,c
 16641  012864  0012               	return	
 16642                           
 16643                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 16644  012866  EE20 F004          	lfsr	2,4
 16645  01286A  5009               	movf	i2ringbuf_put@rb,w,c
 16646  01286C  26D9               	addwf	fsr2l,f,c
 16647  01286E  500A               	movf	i2ringbuf_put@rb+1,w,c
 16648  012870  22DA               	addwfc	fsr2h,f,c
 16649  012872  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 16650  012876  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 16651  01287A  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 16652  01287E  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 16653  012882  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 16654  012886  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 16655  01288A  500C               	movf	??i2_ringbuf_put,w,c
 16656  01288C  240E               	addwf	??i2_ringbuf_put+2,w,c
 16657  01288E  6ED9               	movwf	fsr2l,c
 16658  012890  500D               	movf	??i2_ringbuf_put+1,w,c
 16659  012892  200F               	addwfc	??i2_ringbuf_put+3,w,c
 16660  012894  6EDA               	movwf	fsr2h,c
 16661  012896  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 16662                           
 16663                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 16664  01289A  EE20 F002          	lfsr	2,2
 16665  01289E  5009               	movf	i2ringbuf_put@rb,w,c
 16666  0128A0  26D9               	addwf	fsr2l,f,c
 16667  0128A2  500A               	movf	i2ringbuf_put@rb+1,w,c
 16668  0128A4  22DA               	addwfc	fsr2h,f,c
 16669  0128A6  EE10 F004          	lfsr	1,4
 16670  0128AA  5009               	movf	i2ringbuf_put@rb,w,c
 16671  0128AC  26E1               	addwf	fsr1l,f,c
 16672  0128AE  500A               	movf	i2ringbuf_put@rb+1,w,c
 16673  0128B0  22E2               	addwfc	fsr1h,f,c
 16674  0128B2  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 16675  0128B6  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 16676  0128BA  0E01               	movlw	1
 16677  0128BC  260E               	addwf	??i2_ringbuf_put+2,f,c
 16678  0128BE  0E00               	movlw	0
 16679  0128C0  220F               	addwfc	??i2_ringbuf_put+3,f,c
 16680  0128C2  50DE               	movf	postinc2,w,c
 16681  0128C4  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 16682  0128C6  50DE               	movf	postinc2,w,c
 16683  0128C8  580F               	subwfb	??i2_ringbuf_put+3,w,c
 16684  0128CA  B0D8               	btfsc	status,0,c
 16685  0128CC  D00A               	goto	i2l6866
 16686  0128CE  EE20 F004          	lfsr	2,4
 16687  0128D2  5009               	movf	i2ringbuf_put@rb,w,c
 16688  0128D4  26D9               	addwf	fsr2l,f,c
 16689  0128D6  500A               	movf	i2ringbuf_put@rb+1,w,c
 16690  0128D8  22DA               	addwfc	fsr2h,f,c
 16691  0128DA  2ADE               	incf	postinc2,f,c
 16692  0128DC  0E00               	movlw	0
 16693  0128DE  22DD               	addwfc	postdec2,f,c
 16694  0128E0  0012               	return	
 16695  0128E2                     i2l6866:
 16696                           
 16697                           ;My_ringbuf.c: 24: else rb->head = 0;
 16698  0128E2  EE20 F004          	lfsr	2,4
 16699  0128E6  5009               	movf	i2ringbuf_put@rb,w,c
 16700  0128E8  26D9               	addwf	fsr2l,f,c
 16701  0128EA  500A               	movf	i2ringbuf_put@rb+1,w,c
 16702  0128EC  22DA               	addwfc	fsr2h,f,c
 16703  0128EE  0E00               	movlw	0
 16704  0128F0  6EDE               	movwf	postinc2,c
 16705  0128F2  0E00               	movlw	0
 16706  0128F4  6EDD               	movwf	postdec2,c
 16707  0128F6  0012               	return	
 16708  0128F8                     __end_ofi2_ringbuf_put:
 16709                           	opt stack 0
 16710                           pclatu	equ	0xFFB
 16711                           pclath	equ	0xFFA
 16712                           tblptru	equ	0xFF8
 16713                           tblptrh	equ	0xFF7
 16714                           tblptrl	equ	0xFF6
 16715                           tablat	equ	0xFF5
 16716                           prodh	equ	0xFF4
 16717                           prodl	equ	0xFF3
 16718                           intcon	equ	0xFF2
 16719                           intcon2	equ	0xFF1
 16720                           indf0	equ	0xFEF
 16721                           postinc0	equ	0xFEE
 16722                           fsr0h	equ	0xFEA
 16723                           fsr0l	equ	0xFE9
 16724                           wreg	equ	0xFE8
 16725                           indf1	equ	0xFE7
 16726                           postinc1	equ	0xFE6
 16727                           postdec1	equ	0xFE5
 16728                           fsr1h	equ	0xFE2
 16729                           fsr1l	equ	0xFE1
 16730                           indf2	equ	0xFDF
 16731                           postinc2	equ	0xFDE
 16732                           postdec2	equ	0xFDD
 16733                           plusw2	equ	0xFDB
 16734                           fsr2h	equ	0xFDA
 16735                           fsr2l	equ	0xFD9
 16736                           status	equ	0xFD8
 16737                           
 16738 ;; *************** function i2_ringbuf_pop *****************
 16739 ;; Defined at:
 16740 ;;		line 45 in file "../My_library/My_ringbuf.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 16743 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 16744 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 16745 ;; Auto vars:     Size  Location     Type
 16746 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 16747 ;; Return value:  Size  Location     Type
 16748 ;;                  1    wreg      unsigned char 
 16749 ;; Registers used:
 16750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16751 ;; Tracked objects:
 16752 ;;		On entry : 0/0
 16753 ;;		On exit  : 0/0
 16754 ;;		Unchanged: 0/0
 16755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16758 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16759 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16760 ;;Total ram usage:        7 bytes
 16761 ;; Hardware stack levels used:    1
 16762 ;; Hardware stack levels required when called:    1
 16763 ;; This function calls:
 16764 ;;		i2_ringbuf_num
 16765 ;; This function is called by:
 16766 ;;		_UART_ISR
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           	psect	text85
 16771  0129A8                     __ptext85:
 16772                           	opt stack 0
 16773  0129A8                     i2_ringbuf_pop:
 16774                           	opt stack 17
 16775                           
 16776                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 16777                           
 16778                           ;incstack = 0
 16779  0129A8  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 16780  0129AC  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 16781  0129B0  ECC3  F093         	call	i2_ringbuf_num	;wreg free
 16782  0129B4  5001               	movf	?i2_ringbuf_num,w,c
 16783  0129B6  1002               	iorwf	?i2_ringbuf_num+1,w,c
 16784  0129B8  B4D8               	btfsc	status,2,c
 16785  0129BA  D04A               	goto	i2l6884
 16786                           
 16787                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 16788  0129BC  EE20 F006          	lfsr	2,6
 16789  0129C0  5009               	movf	i2ringbuf_pop@rb,w,c
 16790  0129C2  26D9               	addwf	fsr2l,f,c
 16791  0129C4  500A               	movf	i2ringbuf_pop@rb+1,w,c
 16792  0129C6  22DA               	addwfc	fsr2h,f,c
 16793  0129C8  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 16794  0129CC  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 16795  0129D0  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 16796  0129D4  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 16797  0129D8  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 16798  0129DC  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 16799  0129E0  500B               	movf	??i2_ringbuf_pop,w,c
 16800  0129E2  240D               	addwf	??i2_ringbuf_pop+2,w,c
 16801  0129E4  6ED9               	movwf	fsr2l,c
 16802  0129E6  500C               	movf	??i2_ringbuf_pop+1,w,c
 16803  0129E8  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 16804  0129EA  6EDA               	movwf	fsr2h,c
 16805  0129EC  50DF               	movf	indf2,w,c
 16806  0129EE  6E0F               	movwf	i2ringbuf_pop@ret,c
 16807                           
 16808                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 16809  0129F0  EE20 F002          	lfsr	2,2
 16810  0129F4  5009               	movf	i2ringbuf_pop@rb,w,c
 16811  0129F6  26D9               	addwf	fsr2l,f,c
 16812  0129F8  500A               	movf	i2ringbuf_pop@rb+1,w,c
 16813  0129FA  22DA               	addwfc	fsr2h,f,c
 16814  0129FC  EE10 F006          	lfsr	1,6
 16815  012A00  5009               	movf	i2ringbuf_pop@rb,w,c
 16816  012A02  26E1               	addwf	fsr1l,f,c
 16817  012A04  500A               	movf	i2ringbuf_pop@rb+1,w,c
 16818  012A06  22E2               	addwfc	fsr1h,f,c
 16819  012A08  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 16820  012A0C  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 16821  012A10  0E01               	movlw	1
 16822  012A12  260D               	addwf	??i2_ringbuf_pop+2,f,c
 16823  012A14  0E00               	movlw	0
 16824  012A16  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 16825  012A18  50DE               	movf	postinc2,w,c
 16826  012A1A  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 16827  012A1C  50DE               	movf	postinc2,w,c
 16828  012A1E  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 16829  012A20  B0D8               	btfsc	status,0,c
 16830  012A22  D00A               	goto	i2l6876
 16831                           
 16832                           ;My_ringbuf.c: 49: rb->tail++;
 16833  012A24  EE20 F006          	lfsr	2,6
 16834  012A28  5009               	movf	i2ringbuf_pop@rb,w,c
 16835  012A2A  26D9               	addwf	fsr2l,f,c
 16836  012A2C  500A               	movf	i2ringbuf_pop@rb+1,w,c
 16837  012A2E  22DA               	addwfc	fsr2h,f,c
 16838  012A30  2ADE               	incf	postinc2,f,c
 16839  012A32  0E00               	movlw	0
 16840  012A34  22DD               	addwfc	postdec2,f,c
 16841                           
 16842                           ;My_ringbuf.c: 50: } else {
 16843  012A36  D00A               	goto	i2l6878
 16844  012A38                     i2l6876:
 16845                           
 16846                           ;My_ringbuf.c: 51: rb->tail = 0;
 16847  012A38  EE20 F006          	lfsr	2,6
 16848  012A3C  5009               	movf	i2ringbuf_pop@rb,w,c
 16849  012A3E  26D9               	addwf	fsr2l,f,c
 16850  012A40  500A               	movf	i2ringbuf_pop@rb+1,w,c
 16851  012A42  22DA               	addwfc	fsr2h,f,c
 16852  012A44  0E00               	movlw	0
 16853  012A46  6EDE               	movwf	postinc2,c
 16854  012A48  0E00               	movlw	0
 16855  012A4A  6EDD               	movwf	postdec2,c
 16856  012A4C                     i2l6878:
 16857                           
 16858                           ;My_ringbuf.c: 52: }
 16859                           ;My_ringbuf.c: 53: return ret;
 16860  012A4C  500F               	movf	i2ringbuf_pop@ret,w,c
 16861                           
 16862                           ;My_ringbuf.c: 54: } else {
 16863  012A4E  0012               	return	
 16864  012A50                     i2l6884:
 16865                           
 16866                           ;My_ringbuf.c: 55: return 0;
 16867  012A50  0E00               	movlw	0
 16868  012A52  0012               	return	
 16869  012A54                     __end_ofi2_ringbuf_pop:
 16870                           	opt stack 0
 16871                           pclatu	equ	0xFFB
 16872                           pclath	equ	0xFFA
 16873                           tblptru	equ	0xFF8
 16874                           tblptrh	equ	0xFF7
 16875                           tblptrl	equ	0xFF6
 16876                           tablat	equ	0xFF5
 16877                           prodh	equ	0xFF4
 16878                           prodl	equ	0xFF3
 16879                           intcon	equ	0xFF2
 16880                           intcon2	equ	0xFF1
 16881                           indf0	equ	0xFEF
 16882                           postinc0	equ	0xFEE
 16883                           fsr0h	equ	0xFEA
 16884                           fsr0l	equ	0xFE9
 16885                           wreg	equ	0xFE8
 16886                           indf1	equ	0xFE7
 16887                           postinc1	equ	0xFE6
 16888                           postdec1	equ	0xFE5
 16889                           fsr1h	equ	0xFE2
 16890                           fsr1l	equ	0xFE1
 16891                           indf2	equ	0xFDF
 16892                           postinc2	equ	0xFDE
 16893                           postdec2	equ	0xFDD
 16894                           plusw2	equ	0xFDB
 16895                           fsr2h	equ	0xFDA
 16896                           fsr2l	equ	0xFD9
 16897                           status	equ	0xFD8
 16898                           
 16899 ;; *************** function i2_ringbuf_num *****************
 16900 ;; Defined at:
 16901 ;;		line 12 in file "../My_library/My_ringbuf.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 16904 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 16905 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 16906 ;; Auto vars:     Size  Location     Type
 16907 ;;		None
 16908 ;; Return value:  Size  Location     Type
 16909 ;;                  2    0[COMRAM] unsigned int 
 16910 ;; Registers used:
 16911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16912 ;; Tracked objects:
 16913 ;;		On entry : 0/0
 16914 ;;		On exit  : 0/0
 16915 ;;		Unchanged: 0/0
 16916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16919 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16921 ;;Total ram usage:        8 bytes
 16922 ;; Hardware stack levels used:    1
 16923 ;; This function calls:
 16924 ;;		Nothing
 16925 ;; This function is called by:
 16926 ;;		_UART_ISR
 16927 ;;		i2_ringbuf_put
 16928 ;;		i2_ringbuf_pop
 16929 ;; This function uses a non-reentrant model
 16930 ;;
 16931                           
 16932                           	psect	text86
 16933  012786                     __ptext86:
 16934                           	opt stack 0
 16935  012786                     i2_ringbuf_num:
 16936                           	opt stack 17
 16937                           
 16938                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 16939                           
 16940                           ;incstack = 0
 16941  012786  EE20 F006          	lfsr	2,6
 16942  01278A  5001               	movf	i2ringbuf_num@rb,w,c
 16943  01278C  26D9               	addwf	fsr2l,f,c
 16944  01278E  5002               	movf	i2ringbuf_num@rb+1,w,c
 16945  012790  22DA               	addwfc	fsr2h,f,c
 16946  012792  EE10 F004          	lfsr	1,4
 16947  012796  5001               	movf	i2ringbuf_num@rb,w,c
 16948  012798  26E1               	addwf	fsr1l,f,c
 16949  01279A  5002               	movf	i2ringbuf_num@rb+1,w,c
 16950  01279C  22E2               	addwfc	fsr1h,f,c
 16951  01279E  50DE               	movf	postinc2,w,c
 16952  0127A0  5CE6               	subwf	postinc1,w,c
 16953  0127A2  50DE               	movf	postinc2,w,c
 16954  0127A4  58E6               	subwfb	postinc1,w,c
 16955  0127A6  A0D8               	btfss	status,0,c
 16956  0127A8  D01F               	goto	i2l6522
 16957                           
 16958                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 16959  0127AA  EE20 F004          	lfsr	2,4
 16960  0127AE  5001               	movf	i2ringbuf_num@rb,w,c
 16961  0127B0  26D9               	addwf	fsr2l,f,c
 16962  0127B2  5002               	movf	i2ringbuf_num@rb+1,w,c
 16963  0127B4  22DA               	addwfc	fsr2h,f,c
 16964  0127B6  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 16965  0127BA  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 16966  0127BE  EE20 F006          	lfsr	2,6
 16967  0127C2  5001               	movf	i2ringbuf_num@rb,w,c
 16968  0127C4  26D9               	addwf	fsr2l,f,c
 16969  0127C6  5002               	movf	i2ringbuf_num@rb+1,w,c
 16970  0127C8  22DA               	addwfc	fsr2h,f,c
 16971  0127CA  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 16972  0127CE  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 16973  0127D2  1E05               	comf	??i2_ringbuf_num+2,f,c
 16974  0127D4  1E06               	comf	??i2_ringbuf_num+3,f,c
 16975  0127D6  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 16976  0127D8  2A06               	incf	??i2_ringbuf_num+3,f,c
 16977  0127DA  5003               	movf	??i2_ringbuf_num,w,c
 16978  0127DC  2405               	addwf	??i2_ringbuf_num+2,w,c
 16979  0127DE  6E01               	movwf	?i2_ringbuf_num,c
 16980  0127E0  5004               	movf	??i2_ringbuf_num+1,w,c
 16981  0127E2  2006               	addwfc	??i2_ringbuf_num+3,w,c
 16982  0127E4  6E02               	movwf	?i2_ringbuf_num+1,c
 16983                           
 16984                           ;My_ringbuf.c: 15: } else {
 16985  0127E6  0012               	return	
 16986  0127E8                     i2l6522:
 16987                           
 16988                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 16989  0127E8  EE20 F004          	lfsr	2,4
 16990  0127EC  5001               	movf	i2ringbuf_num@rb,w,c
 16991  0127EE  26D9               	addwf	fsr2l,f,c
 16992  0127F0  5002               	movf	i2ringbuf_num@rb+1,w,c
 16993  0127F2  22DA               	addwfc	fsr2h,f,c
 16994  0127F4  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 16995  0127F8  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 16996  0127FC  EE20 F002          	lfsr	2,2
 16997  012800  5001               	movf	i2ringbuf_num@rb,w,c
 16998  012802  26D9               	addwf	fsr2l,f,c
 16999  012804  5002               	movf	i2ringbuf_num@rb+1,w,c
 17000  012806  22DA               	addwfc	fsr2h,f,c
 17001  012808  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 17002  01280C  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 17003  012810  EE20 F006          	lfsr	2,6
 17004  012814  5001               	movf	i2ringbuf_num@rb,w,c
 17005  012816  26D9               	addwf	fsr2l,f,c
 17006  012818  5002               	movf	i2ringbuf_num@rb+1,w,c
 17007  01281A  22DA               	addwfc	fsr2h,f,c
 17008  01281C  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 17009  012820  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 17010  012824  1E07               	comf	??i2_ringbuf_num+4,f,c
 17011  012826  1E08               	comf	??i2_ringbuf_num+5,f,c
 17012  012828  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 17013  01282A  2A08               	incf	??i2_ringbuf_num+5,f,c
 17014  01282C  5005               	movf	??i2_ringbuf_num+2,w,c
 17015  01282E  2607               	addwf	??i2_ringbuf_num+4,f,c
 17016  012830  5006               	movf	??i2_ringbuf_num+3,w,c
 17017  012832  2208               	addwfc	??i2_ringbuf_num+5,f,c
 17018  012834  5003               	movf	??i2_ringbuf_num,w,c
 17019  012836  2407               	addwf	??i2_ringbuf_num+4,w,c
 17020  012838  6E01               	movwf	?i2_ringbuf_num,c
 17021  01283A  5004               	movf	??i2_ringbuf_num+1,w,c
 17022  01283C  2008               	addwfc	??i2_ringbuf_num+5,w,c
 17023  01283E  6E02               	movwf	?i2_ringbuf_num+1,c
 17024  012840  0012               	return	
 17025  012842                     __end_ofi2_ringbuf_num:
 17026                           	opt stack 0
 17027                           pclatu	equ	0xFFB
 17028                           pclath	equ	0xFFA
 17029                           tblptru	equ	0xFF8
 17030                           tblptrh	equ	0xFF7
 17031                           tblptrl	equ	0xFF6
 17032                           tablat	equ	0xFF5
 17033                           prodh	equ	0xFF4
 17034                           prodl	equ	0xFF3
 17035                           intcon	equ	0xFF2
 17036                           intcon2	equ	0xFF1
 17037                           indf0	equ	0xFEF
 17038                           postinc0	equ	0xFEE
 17039                           fsr0h	equ	0xFEA
 17040                           fsr0l	equ	0xFE9
 17041                           wreg	equ	0xFE8
 17042                           indf1	equ	0xFE7
 17043                           postinc1	equ	0xFE6
 17044                           postdec1	equ	0xFE5
 17045                           fsr1h	equ	0xFE2
 17046                           fsr1l	equ	0xFE1
 17047                           indf2	equ	0xFDF
 17048                           postinc2	equ	0xFDE
 17049                           postdec2	equ	0xFDD
 17050                           plusw2	equ	0xFDB
 17051                           fsr2h	equ	0xFDA
 17052                           fsr2l	equ	0xFD9
 17053                           status	equ	0xFD8
 17054                           pclatu	equ	0xFFB
 17055                           pclath	equ	0xFFA
 17056                           tblptru	equ	0xFF8
 17057                           tblptrh	equ	0xFF7
 17058                           tblptrl	equ	0xFF6
 17059                           tablat	equ	0xFF5
 17060                           prodh	equ	0xFF4
 17061                           prodl	equ	0xFF3
 17062                           intcon	equ	0xFF2
 17063                           intcon2	equ	0xFF1
 17064                           indf0	equ	0xFEF
 17065                           postinc0	equ	0xFEE
 17066                           fsr0h	equ	0xFEA
 17067                           fsr0l	equ	0xFE9
 17068                           wreg	equ	0xFE8
 17069                           indf1	equ	0xFE7
 17070                           postinc1	equ	0xFE6
 17071                           postdec1	equ	0xFE5
 17072                           fsr1h	equ	0xFE2
 17073                           fsr1l	equ	0xFE1
 17074                           indf2	equ	0xFDF
 17075                           postinc2	equ	0xFDE
 17076                           postdec2	equ	0xFDD
 17077                           plusw2	equ	0xFDB
 17078                           fsr2h	equ	0xFDA
 17079                           fsr2l	equ	0xFD9
 17080                           status	equ	0xFD8
 17081                           
 17082                           	psect	rparam
 17083  0000                     pclatu	equ	0xFFB
 17084                           pclath	equ	0xFFA
 17085                           tblptru	equ	0xFF8
 17086                           tblptrh	equ	0xFF7
 17087                           tblptrl	equ	0xFF6
 17088                           tablat	equ	0xFF5
 17089                           prodh	equ	0xFF4
 17090                           prodl	equ	0xFF3
 17091                           intcon	equ	0xFF2
 17092                           intcon2	equ	0xFF1
 17093                           indf0	equ	0xFEF
 17094                           postinc0	equ	0xFEE
 17095                           fsr0h	equ	0xFEA
 17096                           fsr0l	equ	0xFE9
 17097                           wreg	equ	0xFE8
 17098                           indf1	equ	0xFE7
 17099                           postinc1	equ	0xFE6
 17100                           postdec1	equ	0xFE5
 17101                           fsr1h	equ	0xFE2
 17102                           fsr1l	equ	0xFE1
 17103                           indf2	equ	0xFDF
 17104                           postinc2	equ	0xFDE
 17105                           postdec2	equ	0xFDD
 17106                           plusw2	equ	0xFDB
 17107                           fsr2h	equ	0xFDA
 17108                           fsr2l	equ	0xFD9
 17109                           status	equ	0xFD8
 17110                           
 17111                           	psect	temp
 17112  000040                     btemp:
 17113                           	opt stack 0
 17114  000040                     	ds	1
 17115  0000                     int$flags	set	btemp
 17116                           pclatu	equ	0xFFB
 17117                           pclath	equ	0xFFA
 17118                           tblptru	equ	0xFF8
 17119                           tblptrh	equ	0xFF7
 17120                           tblptrl	equ	0xFF6
 17121                           tablat	equ	0xFF5
 17122                           prodh	equ	0xFF4
 17123                           prodl	equ	0xFF3
 17124                           intcon	equ	0xFF2
 17125                           intcon2	equ	0xFF1
 17126                           indf0	equ	0xFEF
 17127                           postinc0	equ	0xFEE
 17128                           fsr0h	equ	0xFEA
 17129                           fsr0l	equ	0xFE9
 17130                           wreg	equ	0xFE8
 17131                           indf1	equ	0xFE7
 17132                           postinc1	equ	0xFE6
 17133                           postdec1	equ	0xFE5
 17134                           fsr1h	equ	0xFE2
 17135                           fsr1l	equ	0xFE1
 17136                           indf2	equ	0xFDF
 17137                           postinc2	equ	0xFDE
 17138                           postdec2	equ	0xFDD
 17139                           plusw2	equ	0xFDB
 17140                           fsr2h	equ	0xFDA
 17141                           fsr2l	equ	0xFD9
 17142                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    239
    Data        5
    BSS         2811
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     61     149
    BANK1           256      0     233
    BANK2           256     40     204
    BANK3           256      0     100
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_43(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(COMRAM[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    usb_char_get@c	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), STR_42(CODE[9]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK0[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    S3105ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> usb_char_send@c(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1351_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1351_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1351_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1351_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK1[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _main->_ringbuf_pop
    _main_init->_timer0_init
    _main_init->_timer1_init
    _main_init->_timer3_init
    _USB_init->_USBDeviceInit
    _epoch_to_caltime->_month_length
    _caltime_to_RTCC->_d_to_x
    _sprintf->___lwmod
    _sprintf->_isdigit
    _USB_task->_ringbuf_pop
    _usb_char_send->_CDCTxService
    _usb_char_send->_is_usb_available
    _usb_char_get->_CDCTxService
    _usb_char_get->_getsUSBUSART
    _usb_char_get->_is_usb_available
    _ringbuf_put->_ringbuf_pop
    _USBDeviceTasks->_USBDeviceInit
    _USBDeviceTasks->_USBStallHandler
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdGetStatusHandler
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _caltime_to_epoch->_month_length
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_display_time_0802
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_task->_USBDeviceTasks
    _usb_char_send->_CDCTxService
    _usb_char_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ringbuf_put->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  177169
                                             60 BANK0      1     1      0
                                              0 BANK2     40    40      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_task
                          _UART_task
                           _USB_task
                  _display_time_0802
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   23384
                       _I2C_LCD_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1856
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17305
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9963
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _caltime_to_RTCC                                      2     0      2    1200
                                              8 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (5) _d_to_x                                               1     1      0     745
                                             31 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              6 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     727
                                              5 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (1) _display_time_0802                                    6     0      6   34549
                                             54 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_dec                                          8     4      4   21301
                                             46 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    21     18   12704
                                             11 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8740
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     708
                                             31 COMRAM     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             1     1      0   75388
                                             29 BANK0      1     1      0
                     _USBDeviceTasks
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                       _usb_char_get
                      _usb_char_send
 ---------------------------------------------------------------------------------
 (2) _usb_char_send                                        1     1      0    2868
                                             11 BANK0      1     1      0
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _usb_char_get                                         3     1      2    5342
                                             12 BANK0      3     1      2
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2627
                                             31 COMRAM     1     1      0
                                              7 BANK0      5     2      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2494
                                             31 COMRAM     1     1      0
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _ringbuf_put                                          7     4      3    9435
                                             14 BANK0      7     4      3
                        _ringbuf_num
                        _ringbuf_pop (ARG)
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2    3135
                                             31 COMRAM     1     1      0
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       1     1      0   52896
                                             28 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0    6869
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0    6869
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1856
                                             31 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   30365
                                             25 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               0     0      0   29929
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   0     0      0   22924
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0    8564
                                             19 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1565
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      68
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              6     6      0    7423
                                             19 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6869
                                             11 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            0     0      0    3268
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2256
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    4     3      1    1012
                                              7 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 8     7      1     554
                                             31 COMRAM     1     0      1
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     167
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     170
                                              0 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  1     1      0     136
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1610
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_num                                          8     6      2    1610
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7342
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_RTCC                                       2     0      2    7342
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (4) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _month_length                                         6     5      1    2404
                                             31 COMRAM     1     0      1
                                              6 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (4) _RTCC_to_caltime                                      3     1      2     401
                                              1 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (5) _x_to_d                                               2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1302
                                              5 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     727
                                              3 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1237
                                              3 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     569
                                              1 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              1 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                15    15      0    1172
                                             16 COMRAM    15    15      0
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (12) _USB_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (14) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_task
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
         _memset
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
       _ringbuf_pop (ARG)
         _ringbuf_num
     _usb_char_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _usb_char_send
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
   _display_time_0802
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
     _strcat
     _strcpy
   _main_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _USB_init
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _ringbuf_put
     _ringbuf_num
     _ringbuf_pop (ARG)
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     28      CC      10       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E9       7       91.0%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      95       5       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B5       8        0.0%
DATA                 0      0     B85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 09 22:43:17 2016

                              _USB_SD_Ptr FE77                        __size_of_I2C_Start 0030  
                            ?_display_dec 00E3                              ___awdiv@sign 00BA  
                                      _ms 010E                             _USBDeviceInit 1278  
                     ___wmul@multiplicand 00B7                         ??_RTCC_from_epoch 0021  
                      __size_of_CDCInitEP 0078                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 00C0      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00C2  
                                     l220 17A8                                       l140 12E6  
                                     l152 0FA8                                       l153 0FA6  
                                     l333 2484               __end_of_USBStdGetDscHandler 1500  
                                     l158 0FE6                                       l167 108E  
                                     l168 1114                                       l169 10A4  
                                     l362 0484                                       l283 2906  
                                     l347 1922                                       l612 359A  
                                     l436 265C                                       l356 1970  
                                     l381 0684                                       l438 269E  
                                     l286 2994                                       l287 2916  
                                     l288 291A                                       l296 331C  
                                     l490 1166                                       l627 3756  
                                     l495 11B4                                       l841 26CA  
                                     l691 3456                                       l860 0CBA  
                                     _BDT 000D00                                       l847 1D5E  
                                     l696 321E                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                           ?_get_quot_rem 00CE                        caltime_to_epoch@tm 00CE  
                              _USBSuspend 34E0                                       _now 0095  
                            ___awmod@sign 00BA                      USBStdSetCfgHandler@i 00C8  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 0F82                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0034                     ??_USBCtrlTrfRxService 0020  
                            _I2C_LCD_Puts 2D52                            ??_getsUSBUSART 0020  
                USBEnableEndpoint@options 00BC                         ??_I2C_LCD_Command 0021  
                                    ?_ISR 0001                              _I2C_LCD_init 2CC2  
                                    l1322 3770                                      l1085 3432  
              USBConfigureEndpoint@handle 00BA                                      l1907 25FC  
                                    l1960 2E4E                                      l1970 3198  
                                    l8102 14DC                                      l8200 065E  
                                    l8104 14E2                                      l8120 2938  
                                    l8032 2BFC                                      l8210 06A4  
                                    l8202 066A                                      l8130 297C  
                                    l8300 2AA6                                      l8108 14E8  
                                    l8052 1684                                      l8028 2BE4  
                                    l9004 1200                                      l9100 0144  
                                    l9022 124E                                      l9006 120C  
                                    l9014 1230                                      l8224 3718  
                                    l8232 2F08                                      l8312 2AEC  
                                    l8304 2ACA                                      l9040 189C  
                                    l8216 06F2                                      l8048 167A  
                                    l9024 1252                                      l9016 123A  
                                    l9200 0420                                      l9120 01F4  
                                    l9112 01B6                        __CFG_WPFP$PAGE_127 000000  
                                    l8218 06FE                                      l8170 055A  
                                    l8162 0504                                      l8082 13D2  
                                    l8074 1704                                      l8058 16B6  
                                    l9114 01CE                                      l9106 0198  
                                    l9202 042C                                      l9210 3090  
                                    l8250 24C6                                      l8322 2580  
                                    l8228 2EE2                                      l8308 2AD8  
                                    l8420 15DC                                      l8404 1560  
                                    l8148 047E                                      l9300 1048  
                                    l9108 01A4                                      l9204 044C  
                                    l9124 020C                                      l9212 3096  
                                    l8260 24F6                                      l8244 24B0  
                                    l8324 2590                                      l8190 0610  
                                    l8174 057A                                      l8094 147A  
                                    l8086 13E4                                      l8350 1752  
                                    l9150 02B4                                      l9126 0242  
                                    l9070 003E                                      l9062 000E  
                                    l9214 30A6                                      l8334 25EA  
                                    l8326 2596                                      l8512 1D0E  
                                    l8600 248E                                      l8416 15C2  
                                    l8184 05D6                                      l8168 0556  
                                    l8096 1480                                      l8440 1930  
                                    l9320 109A                                      l9160 030E  
                                    l9136 0272                                      l9080 0080  
                                    l9216 30B2                                      l8256 24E4  
                                    l8272 2534                                      l8186 05F6  
                                    l8450 1948                                      l8442 1936  
                                    l8370 17D0                                      l9314 1084  
                                    l9306 1054                                      l9170 033E  
                                    l9162 0318                                      l9138 0278  
                                    l9074 0048                                      l8258 24F0  
                                    l8292 2A80                                      l8452 194E  
                                    l9340 10EA                                      l9420 1FC4  
                                    l9180 0372                                      l9156 02D6  
                                    l9068 002C                                      l9500 2CEE  
                                    l8276 2548                                      l8268 2526  
                                    l8702 07B0                                      l8454 1954  
                                    l8438 192A                                      l9342 110E  
                                    l9334 10CA                                      l9246 0FB0  
                                    l9430 2224                                      l8296 2A94  
                                    l8288 2A70                                      l8712 0838  
                                    l8704 07B4                                      l8560 313E  
                                    l8552 30F4                                      l7832 326C  
                                    l7840 1BCC                                      l7904 26A6  
                                    l7920 351E                                      l8464 198A  
                                    l9264 0FDE                                      l9256 0FCE  
                                    l9432 223A                                      l9192 03B8  
                                    l9096 0132                                      l9088 0100  
                                    l9512 2D3A                                      l9504 2D18  
                                    l8298 2AA0                                      l7818 22CE  
                                    l7930 3550                                      l8802 12CA  
                                    l9290 1038                                      l9194 03BE  
                                    l9186 0398                                      l9178 0366  
                                    l9098 013E                                      l9610 0B2C  
                                    l9370 3220                                      l8708 07D4  
                                    l7828 325A                                      l7860 1C66  
                                    l7924 3530                                      l8468 19B0  
                                    l8900 1A4E                                      l9284 100A  
                                    l9276 0FFA                                      l9540 34BA  
                                    l9612 0B44                                      l9508 2D22  
                                    l7950 1FFA                                      l8574 2402  
                                    l8398 1538                                      l7934 3556  
                                    l8830 1334                                      l8814 12F4  
                                    l8822 130A                                      l9438 223E  
                                    l9542 34BE                                      l8670 0D2C  
                                    l9358 346A                                      l8576 2406  
                                    l7848 1C00                                      l7880 263A  
                                    l7928 354A                                      l8912 1AA2  
                                    l8904 1A58                                      l8752 2DFE  
                                    l8736 361E                                      l8672 0D30  
                                    l9448 2FC8                                      l8690 0746  
                                    l7954 2004                                      l8594 246A  
                                    l8826 132C                                      l8930 20E2  
                                    l9554 33DC                                      l8754 2E0A  
                                    l9482 33A0                                      l8692 074C  
                                    l7964 202E                                      l7972 2066  
                                    l8588 2446                                      l8916 1ABC  
                                    l8836 1390                                      l8860 338E  
                                    l9556 33E0                                      l8764 2E40  
                                    l8756 2E10                                      l8780 318C  
                                    l8772 3158                                      l9484 33AC  
                                    l9492 2CCC                                      l8676 0D38  
                                    l9734 2DB2                                      l7974 206E  
                                    l7982 20A6                                      l8918 1AC2  
                                    l8862 3390                                      l8942 2146  
                                    l8774 3162                                      l9478 306C  
                                    l9728 2D80                                      l9736 2DDA  
                                    l8696 0756                                      l7896 2688  
                                    l7888 2650                                      l8936 2116  
                                    l8928 20D8                                      l9760 2F5C  
                                    l8776 3168                                      l9496 2CD6  
                                    l8938 211C                                      l8946 2176  
                                    l9762 2F74                                      l8884 3318  
                                    l8964 1144                                      l7998 234E  
                                    l8798 12C2                                      l8982 11A0  
                                    l8966 114E                                      l9766 2F90  
                                    l9758 2F48                                      STR_1 FFE0  
                                    STR_2 FFB0                                      STR_3 FFE8  
                                    STR_4 FFFA                                      STR_5 FFFA  
                                    l8996 11DC                                      l8988 11B8  
                                    STR_6 FFE8                                      STR_7 FFFC  
                                    STR_8 FFB1                                      STR_9 FFF8  
                                    u8310 35A6                     ??_USBCtrlTrfTxService 0020  
                                    u8400 1D56                                      u8410 1D58  
                                    u8340 1CB8                                      u9300 30DC  
                                    u8350 1CBA                                      _UCFG 000F39  
                                    u8360 1CEA                                      u7720 1442  
                                    u7570 2058                                      u7730 1476  
                                    u9307 30D2                                      u8380 1D00  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u8390 1D02                                      u7590 2098  
                                    u7750 14CE                                      u7727 1438  
                                    u7577 204E                                      u7737 146C  
                                    u8378 1CEE                                      _UEIE 000F37  
                                    u7597 208E                                      u7757 14C4  
                                    u8830 20CC                                      u8838 20CE  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u8890 1138                                      u9970 2DA2  
                                    u8898 113A                                      u9980 2DD4  
                                    u9977 2D98                                      u9987 2DCA  
                         _CDCDataInHandle 007F    USBStdFeatureReqHandler@current_ep_data 00CB  
                                    _pDst 0081                                      _main 0DC0  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 375E                                      btemp 0040  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 37A4  
                        __end_of_I2C_Stop 379E                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                         usb_char_get@ans 00C3                                      start 10B8  
                           __CFG_IESO$OFF 000000                            ?_usb_char_send 0001  
              __end_of_USBCheckStdRequest 19F4                    ??_USBCtrlTrfOutHandler 0020  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 00C8  
                           _I2C_LCD_Clear 36E0                     __end_ofi2_ringbuf_pop 2A54  
                   __end_ofi2_ringbuf_num 2842                     __end_ofi2_ringbuf_put 28F8  
                                   ??_ISR 0011                    __size_of_I2C_IdleCheck 001A  
                ??_USBStdGetStatusHandler 0020                            ?_USBDeviceInit 0001  
                       ??_RTCC_to_caltime 0021                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                                     l10280 0E3C  
                                   l10292 0EAA                                     l10268 0DFE  
                                   l10298 0F0E                                     ?_main 0001  
                          ??_get_quot_rem 0021                           __end_of___awdiv 2552  
                                   _ADRES 000FC3                                     STR_13 FFF6  
                                   STR_30 FFD6                                     STR_31 FFF0  
                                   STR_15 FFAA                                     STR_23 FF5C  
                                   STR_32 FFD0                                     STR_40 FFC2  
                                   STR_24 FFB3                                     STR_41 FF98  
                                   STR_25 FF8D                                     STR_34 FFE9  
                                   STR_42 FFA1                                     STR_27 FFED  
                                   STR_19 FFE5                                     STR_43 FFBB  
                                   STR_36 FFDB                                     STR_28 FF81  
                         __end_of___awmod 2AF6                                     STR_37 FFF2  
                                   STR_38 FFC9                                     STR_39 FFF4  
       __size_of_USBCtrlEPServiceComplete 00F6                           __end_of___lldiv 260E  
                         ___awdiv@divisor 00B7                    __end_of_USBDeviceTasks 1118  
                                   u10650 0E94                                     u10717 2CDE  
                                   u10727 2D2A                                     u10680 0EF6  
                                   u10737 36EE                                     u10747 3438  
                                   u10668 0E98                                     u10757 2DAE  
                                   _LATB2 007C52                                     u10698 0EFA  
               ?_USBCtrlEPServiceComplete 0001                           __end_of___lwdiv 2E58  
                         __end_of___lwmod 31A2                                     _UADDR 000F38  
                         ___awdiv@counter 00B9                   ST7032_task@st7032_state 0086  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64        __size_of_USBCtrlEPAllowStatusStage 00C6  
                     ___lmul@multiplicand 00C6                            __CFG_FCMEN$OFF 000000  
                        __end_of_UART_ISR 32DA           __end_of_USBCtrlEPAllowDataStage 2C2E  
                                   _sd000 FF58                                     _sd001 FEC2  
                                   _sd002 FEF6                      caltime_to_epoch@year 00D4  
                      __size_of_UART_init 0022                           __end_of_dpowers FE77  
                      __size_of_UART_task 0020                          __end_of_OSC_init 3794  
                         __end_of_isdigit 3626                        __size_of_RTCC_init 006A  
                      __size_of_RTCC_task 003C                                     main@s 02A4  
                       __end_of_I2C_Start 35AA                              display_dec@s 00E7  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 2ED0                          __end_of_USB_init 3746  
                        __end_of_USB_task 2FB2                                     status 000FD8  
                         __end_of_sprintf 045A                     __size_of_I2C_init_old 0012  
                       month_length@month 0020                           putUSBUSART@data 00B5  
            __size_of_USBStdSetCfgHandler 0106                            ?_I2C_LCD_Clear 0001  
                         __initialization 2AF6                              __end_of_main 0F82  
                   _control_signal_bitmap 0090                       ringbuf_init@bufsize 00B9  
                        RTCC_from_RTCC@tm 00DB                 __size_of_USBCtrlEPService 00DE  
                                  ??_main 00F1                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001                               ?_USBSuspend 0001  
                            _cdc_mem_type 008F                              _I2C_init_old 3774  
                                  _BCL1IF 007D0B                             _I2C_IdleCheck 3714  
                        _CDCDataOutHandle 002D                         _getsUSBUSART$1714 00BF  
                       _I2C_LCD_SetCursor 35AA                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_0802@tm 00EB                          ___awdiv@dividend 00B5  
                               ??_USB_ISR 0001                        I2C_LCD_Command@ans 00B9  
                         getsUSBUSART@len 00BE                     __size_of_CDCTxService 0160  
                                  i2l1272 32BC                                    i2l1273 32BA  
                                  i2l1452 107C                                    i2l1449 1052  
                          __CFG_WDTEN$OFF 000000                                    i2l6522 27E8  
                                  i2l7728 1074                                    i2l6866 28E2  
                                  i2l6876 2A38                                    i2l6884 2A50  
                                  i2l6878 2A4C                        ?_I2C_LCD_SetCursor 00BA  
                                  _RCREG1 000FAF                             CDCTxService@i 00BE  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _SSPBUF 000FC9                           ??_usb_char_send 0021  
                                  _TXREG1 000FAE                           i2ringbuf_pop@rb 0009  
                         i2ringbuf_num@rb 0001                           i2ringbuf_put@rb 0009  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 3774  
                      epoch_to_caltime@tm 00D6                         _shortPacketStatus 003D  
                     ??_I2C_LCD_SetCursor 0021                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 00D6                           USBDeviceTasks@i 00D1  
                   caltime_to_epoch@epoch 00D6               USBStdFeatureReqHandler@pUEP 00C9  
                USBTransferOnePacket@data 00B6                USBCtrlTrfInHandler@lastDTS 00B5  
                         ??_USBDeviceInit 0020                              ?_ringbuf_pop 00BD  
                            ?_ringbuf_num 00B5                              ?_ringbuf_put 00C3  
                   caltime_to_epoch@month 00DA                                    ___lmul 2ED0  
                            ?_putUSBUSART 00B5                           _caltime_to_RTCC 1D5E  
                                  ___wmul 3474                        ??_epoch_to_caltime 00D8  
                       __end_of_UART_init 366C                                 ??___awdiv 0020  
                       __end_of_UART_task 368C                                 ??___awmod 0020  
                                  _d_to_x 3626                                 ??___lldiv 0020  
                    __end_of_getsUSBUSART 217A                              ?_timer0_init 0001  
                       __end_of_RTCC_init 301C                              ?_timer1_init 0020  
                               ??___lwdiv 0020                         __end_of_RTCC_task 335C  
                               ??___lwmod 0020                              ?_timer3_init 0001  
                                  _lcd_tx 00A3                         _USBEnableEndpoint 3244  
         __size_of_USBStdGetStatusHandler 00B0                                    _memset 3514  
                                  clear_0 2AFE                                    clear_1 2B10  
                                  clear_2 2B1C                                    clear_3 2B28  
                                  clear_4 2B34                                    clear_5 2B40  
                                  clear_6 2B4C                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 00BB                           ___awmod@divisor 00B7  
                         ___awmod@counter 00B9                                    _x_to_d 36AA  
                      ?_USBEnableEndpoint 00BC                                    _usb_rx 01D0  
                                  _usb_tx 01D8                      __size_of_display_dec 006A  
                                  _strcat 3086                                    _strcpy 3396  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                               ??_isdigit 0020                                 ?_I2C_Send 0001  
                            _st7032_state 0091                              _CDCTxService 1118  
                               ?_I2C_Stop 0001                              __mediumconst FE6C  
               __end_of_I2C_LCD_SetCursor 35D6                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 0021                            ?_I2C_IdleCheck 0001  
                               ??_sprintf 00D2                               _CtrlTrfData 000D38  
                    _controlTransferState 003B                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 2B88  
                            __pbssBIGRAMl 04C8                      __end_of_get_quot_rem 1F08  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 00BA  
                         _RTCC_from_epoch 36C6                  __size_of_USBStallHandler 0046  
                    __CFG_WPEND$PAGE_WPFP 000000                             usb_char_get@c 00C1  
                     __size_of_USBSuspend 0034                          terminal_task@op0 0154  
                        terminal_task@op1 016D                          terminal_task@op2 0186  
                        terminal_task@op3 019F                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 3290                             __end_of_sd000 FF5C  
                           __end_of_sd001 FEF6                             __end_of_sd002 FF2A  
                            __pidataBANK0 379E                              __pidataBANK1 1004  
                               ?_UART_ISR 0001          __size_of_USBCtrlEPAllowDataStage 009C  
           __size_of_USBConfigureEndpoint 00C6                                 ?_OSC_init 0001  
             __end_of_USBCtrlTrfInHandler 2494                           __CFG_DSWDTPS$G2 000000  
                         _I2C_LCD_Command 3406                      terminal_task@command 00AB  
                               ?_USB_init 0001                                 ?_USB_task 0001  
                           _I2C_cfct_flag 0089                          I2C_LCD_Command@c 00B8  
                              ??_I2C_Send 0021                         _CDCTxService$1762 00BC  
                              ??_I2C_Stop 0021                                _cdc_notice 0100  
                              _cdc_rx_len 0038                                _cdc_tx_len 003A  
              caltime_to_epoch@month_3453 00D5                  ??_USBCtrlTrfSetupHandler 0021  
                  _USBStdGetStatusHandler 28F8                              sprintf@width 00E1  
                      __size_of_main_init 00DC                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                 __end_of_caltime_to_RTCC 1E34                           _RTCC_to_caltime 26CA  
             __size_of_USBWakeFromSuspend 003A                               _pBDTEntryIn 0027  
        __end_of_USBCtrlEPServiceComplete 1824               __size_of_USBCheckCDCRequest 00BC  
                   __end_of_weekday_3char FF46                     RTCC_task@prev_halfsec 0085  
                    USBCtrlTrfRxService@i 00B5                                   ?___lmul 00C2  
                              ??_UART_ISR 0010                                   ?___wmul 00B5  
                          ST7032_init@buf 0400                                   ?_d_to_x 0001  
                              ??_OSC_init 0020                                   ?_memset 00B5  
                    I2C_LCD_SetCursor@col 00BD                            ___lmul@product 00CA  
                              _device_dsc FF46                      I2C_LCD_SetCursor@row 00BA  
                        _USBCtrlEPService 19F4                                   ?_x_to_d 0001  
                            I2C_Send@data 00B6                                _ep_data_in 006F  
                                 ?_strcat 00B5                                   ?_strcpy 00B5  
             __end_of_USBCtrlTrfRxService 1628                        _USBCheckStdRequest 1912  
                              ??_USB_init 0021                         _configDescriptor1 FE7F  
                              ??_USB_task 0021                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0020               __end_of_USBCtrlTrfTxService 20AE  
                     _USBStdSetCfgHandler 1628                __size_of_I2C_LCD_SetCursor 002C  
                  I2C_LCD_SetCursor@F8685 01E7                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                             _I2C_sent_flag 008A  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 013E  
                                 _UIEbits 000F36                                   _USB_ISR 37A2  
                 __end_of_RTCC_from_epoch 36E0                      timer1_init@prescaler 00B6  
                                 _UIRbits 000F62                          i2ringbuf_pop@ret 000F  
                        __CFG_CFGPLLEN$ON 000000                             _cdc_trf_state 0039  
                           ?_month_length 0020                       epoch_to_caltime@day 00DC  
                     epoch_to_caltime@num 00E0                         RTCC_from_epoch@tm 00E4  
                               _I2C_Start 357A                                   _pCDCDst 0075  
                                 _pCDCSrc 0078                     __size_of_getsUSBUSART 00CC  
                  display_time_0802@line0 00ED                    display_time_0802@line1 00EF  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 2E58                                   __Lparam 0000  
                 __end_of_I2C_LCD_Command 343E                __size_of_USBEnableEndpoint 004C  
                            USB_task@data 00D2                      ??_USBCheckStdRequest 0021  
           __size_of_USBCtrlTrfOutHandler 0060                             ?_ringbuf_init 00B5  
                                 ___awdiv 2494                           __size_of___lmul 0076  
                                 ___awmod 2A54                                   ___lldiv 2552  
                        ??_USBDeviceTasks 0021                           __size_of___wmul 0036  
                                 ___lwdiv 2DE0                         ??_USBStallHandler 0020  
                                 ___lwmod 3146                           __size_of_d_to_x 0024  
                    __size_of_ringbuf_pop 00C8                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 1BAE                      __size_of_putUSBUSART 001E  
             epoch_to_caltime@month_cache 00F4                                   __pcinit 2AF6  
                      getsUSBUSART@buffer 00BC                           __size_of_memset 0034  
               __end_of_configDescriptor1 FEC2                                   __ramtop 0F00  
                    __size_of_timer0_init 0036                      __size_of_timer1_init 004E  
                                 __ptext0 0DC0                                   __ptext1 1AD2  
                                 __ptext2 35D6                                   __ptext3 31F6  
                                 __ptext4 343E                                   __ptext5 31A2  
                                 __ptext6 372E                                   __ptext7 364A  
                                 __ptext8 2FB2                                   __ptext9 36C6  
                                 _inPipes 0021                      __size_of_timer3_init 0028  
                         __size_of_x_to_d 001C                             I2C_LCD_Puts@s 00B8  
             _USBDeferOUTDataStagePackets 008E                                 _T0CONbits 000FD5  
                         __size_of_strcat 0060                          _time_change_flag 0092  
                        _caltime_to_epoch 072C                           __size_of_strcpy 0038  
                            __size_of_ISR 00B0                                 _T1CONbits 000FCD  
                                 _dpowers FE6D                              ??_USBSuspend 0021  
                 __size_of_RTCC_from_RTCC 001A                                   _isdigit 35FE  
                               _T3CONbits 000F79                          ___awmod@dividend 00B5  
                           I2C_LCD_init@i 00BC                                 _T5CONbits 000F22  
                                 _uart_rx 01C0                                   _uart_tx 01C8  
                      __end_of_USB_CD_Ptr FE7F                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 0094                   __end_of_RTCC_to_caltime 2786  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 2B88  
                            _getsUSBUSART 20AE                    __size_ofi2_ringbuf_pop 00AC  
                  __size_ofi2_ringbuf_num 00BC                    __size_ofi2_ringbuf_put 00B6  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FE7D  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0031  
                          ??_month_length 00BB                            display_dec@dec 00E5  
                                 memset@c 00B7                                   memset@n 00B9  
                                 memset@p 00BB                            display_dec@str 00E3  
         _dummy_encapsulated_cmd_response 01B8                  ?_USBStdFeatureReqHandler 0001  
                        ?_caltime_to_RTCC 00BD                                ?_I2C_Start 00B6  
                   ??_USBStdSetCfgHandler 0021                           ___lldiv@divisor 00B9  
                    timer3_init@prescaler 00B5                                ?_CDCInitEP 0001  
                         ___lldiv@counter 00C1                         ?_is_usb_available 0001  
                      __end_of_USBSuspend 3514                            ??_ringbuf_init 0020  
                 _USBCtrlEPAllowDataStage 2B92                        ??_is_usb_available 0020  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 172E  
              _USBStatusStageEnabledFlag1 0035                _USBStatusStageEnabledFlag2 0036  
                      USBEnableEndpoint@p 00BD                                 _UART_init 364A  
                               _UART_task 366C                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 2FB2                                 _RTCC_task 3320  
               epoch_to_caltime@day_cache 0112                    i2ringbuf_put@asciicode 000B  
                      ST7032_cursor@F8640 00F2                              _get_quot_rem 1E34  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 0087                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                 USBConfigureEndpoint@EPNum 00B9  
              ?_USBCtrlEPAllowStatusStage 0001                          ?_RTCC_from_epoch 00E4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 00C4                                 _USTATcopy 003F  
                 timer1_init@clock_select 0020              __end_of_USBTransferOnePacket 1C86  
                        __CFG_IOL1WAY$OFF 000000                     __end_of_usb_char_send 34E0  
                           ?_usb_char_get 00C1                         putUSBUSART@length 00B7  
                     __CFG_MSSP7B_EN$MSK7 000000                          ?_I2C_LCD_Command 0001  
                          ringbuf_init@rb 00B5                            usb_char_send@c 00C0  
                  _USBCtrlTrfSetupHandler 2C2E                            ringbuf_pop@ret 0020  
                           ??_display_dec 0021                             i2_ringbuf_pop 29A8  
                           i2_ringbuf_num 2786                             i2_ringbuf_put 2842  
                   __end_of_USBDeviceInit 13C2                            __end_of___lmul 2F46  
                          __end_of___wmul 34AA                            __end_of_d_to_x 364A  
                       __size_of_UART_ISR 004A                                ?_UART_init 0001  
                              ?_UART_task 0001                            __end_of_memset 3548  
                              ?_RTCC_init 0001                         __size_of_OSC_init 000E  
                              ?_RTCC_task 0001                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 008C                            __end_of_x_to_d 36C6  
                          __end_of_strcat 30E6                     epoch_to_caltime@month 00DF  
                          __end_of_strcpy 33CE                       start_initialization 2AF6  
                        month_length@year 00BF                   ?_USBStdGetStatusHandler 0001  
                             __end_of_ISR 10B8             USBCtrlTrfRxService@byteToRead 00B6  
                       __size_of_USB_init 0018                         __size_of_USB_task 006C  
                           ?_I2C_LCD_Puts 00B8                             ?_I2C_LCD_init 0001  
                             _cdc_data_rx 0114                               _cdc_data_tx 0264  
                           UART_ISR@ascii 0010              __end_of_USBConfigureEndpoint 2308  
                        ?_RTCC_to_caltime 00B6           __end_of_USBStdFeatureReqHandler 072C  
       __end_of_USBCtrlEPAllowStatusStage 23CE                  __end_of_USBCtrlEPService 1AD2  
                             ??_I2C_Start 0021                 ??_USBCtrlEPAllowDataStage 0021  
                          ??_usb_char_get 0021                               ??_CDCInitEP 0021  
                          USBDeviceInit@i 0020                     __end_of_I2C_LCD_Clear 36FA  
                  _pBDTEntryEP0OutCurrent 002F                   USBTransferOnePacket@dir 00B5  
                 USBTransferOnePacket@len 00B8                                  ??___lmul 0021  
                          ?i2_ringbuf_pop 0009                            ?i2_ringbuf_num 0001  
                          ?i2_ringbuf_put 0009                                  ??___wmul 0020  
                     _USBStdGetDscHandler 13C2                                  ??_d_to_x 0020  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00F2  
                             __pdataBANK1 01E7                                  ??_memset 0020  
                                ??_x_to_d 0020                                  ??_strcat 0020  
                                ??_strcpy 0020                      __end_of_month_length 1D5E  
                          _RTCC_from_RTCC 36FA                    _USBActiveConfiguration 003E  
          __end_of_USBStdGetStatusHandler 29A8                       __end_of_display_dec 3086  
                             __pbssCOMRAM 0021                       RTCC_to_caltime@dumy 00B8  
                           __pcstackBANK0 00B5                             __pcstackBANK2 02A4  
            __size_of_USBCtrlTrfInHandler 00C6                            ??_I2C_LCD_Puts 00BA  
                          ??_I2C_LCD_init 00BB                              _isdigit$5607 00B5  
                    __end_of_ringbuf_init 31F6                      ?_USBStdGetDscHandler 0001  
                                ?_USB_ISR 0001                __end_of_USBWakeFromSuspend 3396  
                             sprintf@flag 00DF                               sprintf@prec 00D6  
                         _USBStallHandler 32DA                              _pBDTEntryOut 0069  
              __end_of_USBCheckCDCRequest 26CA                  __end_of_caltime_to_epoch 09BA  
                         millis_timer@cnt 0083                          ___lwdiv@dividend 00B5  
                               __pintcode 1008                             __pmediumconst FE6C  
                                ?___awdiv 00B5                                  ?___awmod 00B5  
                                ?___lldiv 00B5                                  ?___lwdiv 00B5  
                                ?___lwmod 00BC                     _is_usb_available$4927 0020  
                  __end_of_RTCC_from_RTCC 3714                           I2C_LCD_Puts@ans 00BB  
                             ??_UART_init 0020                USBCBSendResume@delay_count 007D  
                             ??_UART_task 0020                               ??_RTCC_init 0021  
                             ??_RTCC_task 0021                      _USBTransferOnePacket 1BAE  
                               _main_init 1AD2                               I2C_Start@rw 00B6  
                                ?_isdigit 0001                          _epoch_to_caltime 0BCE  
                                _I2C_Send 3746                                  _I2C_Stop 3794  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_busy 0088  
                   __end_of_I2C_IdleCheck 372E                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 3146                             ?_I2C_init_old 0001  
                   ??_USBStdGetDscHandler 00B5                               _ep_data_out 0072  
                        ___lwdiv@quotient 00BA                           ST7032_task@wait 007B  
                                ?_sprintf 00C0              __size_of_USBCtrlTrfRxService 0128  
           USBConfigureEndpoint@direction 0020                                 d_to_x@dec 0020  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 00B7                            ___wmul@product 00B9  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
              ??_USBCtrlEPServiceComplete 0021                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                           ??i2_ringbuf_pop 000B  
                         ??i2_ringbuf_num 0003                           ??i2_ringbuf_put 000C  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR5bits 000F98                                  i2u730_40 1068  
              epoch_to_caltime@year_cache 0093                                  i2u731_48 106A  
               USBCtrlEPService@setup_cnt 00D0                             ??_ringbuf_pop 00BF  
                           ??_ringbuf_num 00B7                             ??_ringbuf_put 00C6  
                       _display_time_0802 09BA                             ??_putUSBUSART 0020  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 008D  
                                _UART_ISR 3290                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0020  
                           ??_timer1_init 00B5               __size_of_USBCheckStdRequest 00E2  
                           ??_timer3_init 0020                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_0802 00EB  
                             _display_dec 301C                      _USBConfigureEndpoint 2242  
                                _OSC_init 3786                           ?_RTCC_from_RTCC 00DB  
        __size_of_USBStdFeatureReqHandler 02D2                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 00B5  
                   ?_USBTransferOnePacket 00B5                          __CFG_SOSCSEL$LOW 000000  
                                _USB_init 372E                                  _USB_task 2F46  
                              ?_main_init 0001                 __size_of_is_usb_available 0016  
                     ??_display_time_0802 0021                             ?_CDCTxService 0001  
                            _RemoteWakeup 008B                        I2C_LCD_init@i_4268 00BD  
                    __end_of_usb_char_get 3406                            ??_I2C_init_old 0020  
                           ringbuf_pop@rb 00BD                             ringbuf_num@rb 00B5  
                 __end_of_USBStallHandler 3320                             I2C_Start@adrs 00B7  
                           ringbuf_put@rb 00C3                         ___lmul@multiplier 00C2  
                             _INTCON2bits 000FF1               ??_USBCtrlEPAllowStatusStage 0020  
             __end_of_USBStdSetCfgHandler 172E                          __size_of_USB_ISR 0002  
                    epoch_to_caltime@year 00DE                           main_init@uartrx 0300  
                         main_init@uarttx 04C8                        __end_of_device_dsc FF58  
                 ?_USBCtrlTrfSetupHandler 0001                 __end_of_display_time_0802 0BCE  
                 USBStdGetStatusHandler@p 00B5                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 00B9  
                    __end_of_I2C_LCD_Puts 2DE0                                  _SetupPkt 000D30  
                           _weekday_3char FF2A                      __end_of_I2C_LCD_init 2D52  
                   __size_of_month_length 00D8                     ?_USBConfigureEndpoint 0020  
                __size_of_caltime_to_RTCC 00D6                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 00B5  
                        __size_of___lldiv 00BC                          __size_of___lwdiv 0078  
                        __size_of___lwmod 005C                       __end_of_ringbuf_pop 2242  
                     __end_of_ringbuf_num 1912                       __end_of_ringbuf_put 1FDC  
                     __end_of_putUSBUSART 36AA                               _line_coding 01E0  
                          ??_CDCTxService 0020                       __end_of_timer0_init 3474  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 3244  
                              sprintf@len 00DD                       __end_of_timer3_init 35FE  
                              sprintf@val 00DB                                strcat@from 00B7  
                        __size_of_isdigit 0028                   __size_of_USBDeviceTasks 0196  
                         ___lwdiv@divisor 00B7                           ___lwdiv@counter 00B9  
                    timer0_init@prescaler 00B5                                  __ptext10 0BCE  
                                __ptext11 1E34                                  __ptext20 09BA  
                                __ptext12 2552                                  __ptext21 3396  
                                __ptext13 1D5E                                  __ptext30 34AA  
                                __ptext22 301C                                  __ptext14 3626  
                                __ptext31 368C                                  __ptext23 3086  
                                __ptext15 2494                                  __ptext40 34E0  
                                __ptext32 33CE                                  __ptext24 0000  
                                __ptext16 3786                                  __ptext41 32DA  
                                __ptext33 375E                                  __ptext25 35FE  
                                __ptext17 2CC2                                  __ptext50 28F8  
                                __ptext42 1278                                  __ptext34 20AE  
                                __ptext26 3474                                  __ptext18 3774  
                                __ptext51 13C2                                  __ptext43 19F4  
                                __ptext35 1118                                  __ptext27 3146  
                                __ptext19 36E0                                  __ptext60 1500  
                                __ptext52 045A                                  __ptext44 2C2E  
                                __ptext36 1F08                                  __ptext28 2DE0  
                                __ptext61 2308                                  __ptext53 3548  
                                __ptext45 172E                                  __ptext37 217A  
                                __ptext29 2F46                                  __ptext70 2A54  
                                __ptext62 23CE                                  __ptext54 260E  
                                __ptext46 2B92                                  __ptext38 0F82  
                                __ptext71 2ED0                                  __ptext63 1FDC  
                                __ptext55 2E58                                  __ptext47 1912  
                                __ptext39 335C                                  __ptext80 3714  
                                __ptext72 26CA                                  __ptext64 366C  
                                __ptext56 1BAE                                  __ptext48 1628  
                                __ptext73 36AA                                  __ptext65 1824  
                                __ptext57 3244                                  __ptext49 3514  
                                __ptext82 37A2                                  __ptext74 35AA  
                                __ptext66 3320                                  __ptext58 2242  
                                __ptext83 3290                                  __ptext75 3406  
                                __ptext67 36FA                                  __ptext59 30E6  
                                __ptext84 2842                                  __ptext76 2D52  
                                __ptext68 072C                                  __ptext85 29A8  
                                __ptext77 3794                                  __ptext69 1C86  
                                __ptext86 2786                                  __ptext78 357A  
                                __ptext79 3746                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                          __size_of_sprintf 045A  
                              strcpy@from 00B7            __end_of_USBCtrlTrfSetupHandler 2CC2  
                           __size_of_main 01C2                         ?_USBCtrlEPService 0001  
                            _month_length 1C86                        ??_USBCtrlEPService 00CE  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 23CE  
                                _outPipes 0060                      _USBCtrlTrfOutHandler 30E6  
                                int$flags 0040                              _ringbuf_init 31A2  
               _USBCtrlEPAllowStatusStage 2308                                 x_to_d@hex 00B5  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 0020  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0033  
                CDCTxService@byte_to_send 00BF                            main_init@usbrx 0200  
                          main_init@usbtx 08B0                               ??_main_init 0021  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 00C5                      ?_USBCtrlTrfInHandler 0001  
           USBCtrlTrfTxService@byteToSend 0020                    __size_of_usb_char_send 0036  
            I2C_LCD_SetCursor@row_offsets 00BB                           display_dec@edit 00E6  
                                isdigit@c 00B6                                  memset@p1 00B5  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 00CC  
                        get_quot_rem@quot 00CE                 terminal_task@command_init 0094  
                       RTCC_to_caltime@tm 00B6                                  intlevel2 0000  
                               sprintf@ap 00D7                                 sprintf@cp 00D9  
                               sprintf@sp 00C0                    __size_of_USBDeviceInit 014A  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 357A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0032  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 00C6          ?_USER_USB_CALLBACK_EVENT_HANDLER 00C0  
         _USER_USB_CALLBACK_EVENT_HANDLER 3548                          ___lwmod@dividend 00BC  
                        ___lldiv@dividend 00B5                                _RCSTA1bits 000FAC  
                       ?_caltime_to_epoch 00CE                __size_of_display_time_0802 0214  
                __end_of_epoch_to_caltime 0DC0                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3                        ??_caltime_to_epoch 00D0  
                    __end_of_I2C_init_old 3786                    ??_USBConfigureEndpoint 00B5  
                   ?_USBCtrlTrfOutHandler 0001                               _ringbuf_pop 217A  
                             _ringbuf_num 1824                               _ringbuf_put 1F08  
                             _putUSBUSART 368C                       _USBCtrlTrfRxService 1500  
                             _timer0_init 343E                        _USBWakeFromSuspend 335C  
                             _timer1_init 31F6                               _timer3_init 35D6  
                 _USBStdFeatureReqHandler 045A                        _USBCheckCDCRequest 260E  
                   __size_of_usb_char_get 0038                       _USBCtrlTrfTxService 1FDC  
                         get_quot_rem@div 00D0                           get_quot_rem@num 00D2  
                              _RTCCFGbits 000F3F                                  sprintf@c 00E0  
                                sprintf@f 00C2                                  strcat@cp 00B9  
                                strcat@to 00B5                       ?_USBWakeFromSuspend 0001  
                        _is_usb_available 375E                          ___lldiv@quotient 00BD  
                         ___lwmod@divisor 00BE                         caltime_to_RTCC@tm 00BD  
                       ??_caltime_to_RTCC 0021                     ??_USBCtrlTrfInHandler 0021  
                                strcpy@cp 00B9                                  strcpy@to 00B5  
                   _USBAlternateInterface 00B3                           ___lwmod@counter 0020  
                     ?_USBCheckCDCRequest 0001                       USBEnableEndpoint@ep 00BF  
                         _endpoint_number 003C                    __size_of_I2C_LCD_Clear 001A  
                    ?_USBCtrlTrfRxService 0001           epoch_to_caltime@day_since_epoch 00DA  
                           ?_getsUSBUSART 00BC                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              _USBStatusStageTimeoutCounter 0037  
                   __size_of_I2C_LCD_Puts 008E                     __size_of_I2C_LCD_init 0090  
                    ??_USBWakeFromSuspend 0021                USBTransferOnePacket@handle 00BA  
                    __end_of_CDCTxService 1278                      ??_USBCheckCDCRequest 0020  
                              _USB_CD_Ptr FE7D                              _usb_char_get 33CE  
                           _usb_char_send 34AA                          ??_RTCC_from_RTCC 0021  
